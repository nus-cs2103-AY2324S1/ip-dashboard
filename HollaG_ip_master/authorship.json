[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"HollaG"},"content":"# duke.duke project template","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"HollaG"},"content":"3. After that, locate the `src/main/java/duke.duke.java` file, right-click it, and choose `Run duke.duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"HollaG":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"HollaG"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"HollaG"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"HollaG"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"HollaG"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"HollaG"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"HollaG"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"HollaG"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"HollaG"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"HollaG"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"HollaG"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"HollaG"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"HollaG"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"HollaG"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"HollaG"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"HollaG"},"content":"checkstyle {","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"HollaG"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"HollaG"},"content":"    mainClass.set(\"Duke.Duke\")","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"HollaG":19,"-":43}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HollaG"},"content":"1 | T | 0 | hello","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"HollaG"},"content":"2 | E | 0 | test duke | 2022-01-01T16:00 | 2022-02-02T17:00","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"HollaG"},"content":"3 | D | 0 | submit duke | 2022-01-01T16:00","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"HollaG":3}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HollaG"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"HollaG"},"content":"import duke.Main;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"HollaG"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"HollaG"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"HollaG"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"HollaG"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"HollaG"},"content":"public class Launcher {","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"HollaG"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"HollaG"},"content":"        System.out.println(Arrays.toString(args));","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"HollaG"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"HollaG"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"HollaG":15}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HollaG"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"HollaG"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"HollaG"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"HollaG"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"HollaG"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"HollaG"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"HollaG"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"HollaG"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"HollaG"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"HollaG"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"HollaG"},"content":" * Contains the Duke Chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"HollaG"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"HollaG"},"content":" * @author Marcus Soh","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"HollaG"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"HollaG"},"content":"public class Duke {","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"HollaG"},"content":"    public static final Path SAVE_FILE_LOCATION \u003d Paths.get(\"data\", \"duke.txt\");","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"HollaG"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"HollaG"},"content":"    private TaskList listContainer \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"HollaG"},"content":"    private Storage storage \u003d new Storage(String.valueOf(SAVE_FILE_LOCATION));","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"HollaG"},"content":"    private Image userAvatar \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"HollaG"},"content":"    private Image dukeAvatar \u003d new Image(this.getClass().getResourceAsStream(\"/images/elonmusk.jpg\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"HollaG"},"content":"     * Constructor for our chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"HollaG"},"content":"    public Duke() {","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"HollaG"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"HollaG"},"content":"            this.listContainer \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"HollaG"},"content":"            ui \u003d new Ui(this.listContainer, storage);","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"HollaG"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"HollaG"},"content":"            System.out.println(e.getErrorMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"HollaG"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"HollaG"},"content":"     * Begins the chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"HollaG"},"content":"    private void run() {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"HollaG"},"content":"        ui.beginLogging();","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"HollaG"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"HollaG"},"content":"        new Duke().run();","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"HollaG"},"content":"     * Saves the task list to disk.","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"HollaG"},"content":"    public void save() {","lastModifiedDate":"2023-09-13"},{"lineNumber":55,"author":{"gitId":"HollaG"},"content":"        try {","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"HollaG"},"content":"            this.storage.saveTasks(this.listContainer);","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"HollaG"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"HollaG"},"content":"            System.out.println(e.getErrorMessage());","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"HollaG"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":60,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"HollaG"},"content":"     * Get the task list assigned to this Duke.","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"HollaG"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":65,"author":{"gitId":"HollaG"},"content":"     * @return","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"HollaG"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"HollaG"},"content":"        return this.listContainer;","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"HollaG"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"HollaG":71}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HollaG"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"HollaG"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"HollaG"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"HollaG"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"HollaG"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"HollaG"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"HollaG"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"HollaG"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"HollaG"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"HollaG"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"HollaG"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"HollaG"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"HollaG"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"HollaG"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"HollaG"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"HollaG"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"HollaG"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"HollaG"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"HollaG"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"HollaG"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"HollaG"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"HollaG"},"content":"            stage.show();","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"HollaG"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"HollaG"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"HollaG"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"HollaG"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"HollaG":32}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HollaG"},"content":"package duke.exceptions;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"HollaG"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"HollaG"},"content":" * Contains the main Custom Exception for DukeBot.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"HollaG"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"HollaG"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"HollaG"},"content":"     * Constructor for the Exception.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"HollaG"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"HollaG"},"content":"     * @param message the error message","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"HollaG"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"HollaG"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"HollaG"},"content":"     * Returns the error message for this exception.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"HollaG"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"HollaG"},"content":"     * @return","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"HollaG"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"HollaG"},"content":"        return getMessage();","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"HollaG"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"HollaG":27}},{"path":"src/main/java/duke/exceptions/InvalidFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HollaG"},"content":"package duke.exceptions;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"HollaG"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"HollaG"},"content":" * Encapsulates an error regarding the user\u0027s input message.","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"HollaG"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"HollaG"},"content":"public class InvalidFormatException extends DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"HollaG"},"content":"    private String incorrectInput;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"HollaG"},"content":"    private String incorrectReason;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"HollaG"},"content":"     * Constructor for an invalid format exception.","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"HollaG"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"HollaG"},"content":"     * @param incorrectReason The reason why this input is invalid","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"HollaG"},"content":"     * @param incorrectInput  The input that is invalid","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"HollaG"},"content":"    public InvalidFormatException(String incorrectReason, String incorrectInput) {","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"HollaG"},"content":"        super(\"Error! Your input string (below) was incorrectly formatted!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"HollaG"},"content":"        this.incorrectInput \u003d incorrectInput;","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"HollaG"},"content":"        this.incorrectReason \u003d incorrectReason;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"HollaG"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"HollaG"},"content":"    public String toString() {","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"HollaG"},"content":"        return super.toString() + \"\\n\" + incorrectReason + \"\\n  \" + this.incorrectInput;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"HollaG"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"HollaG":26}},{"path":"src/main/java/duke/exceptions/NotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HollaG"},"content":"package duke.exceptions;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"HollaG"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"HollaG"},"content":" * Exception for when a user tries to access something that is not in the list.","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"HollaG"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"HollaG"},"content":"public class NotFoundException extends DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"HollaG"},"content":"    public NotFoundException() {","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"HollaG"},"content":"        super(\"Sorry, the task ID you specified was not found in the list!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"HollaG"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"HollaG":10}},{"path":"src/main/java/duke/exceptions/SaveException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HollaG"},"content":"package duke.exceptions;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"HollaG"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"HollaG"},"content":" * Encasuplates an error saving the state to disk.","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"HollaG"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"HollaG"},"content":"public class SaveException extends DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"HollaG"},"content":"    public SaveException() {","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"HollaG"},"content":"        super(\"Error saving file!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"HollaG"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"HollaG":10}},{"path":"src/main/java/duke/exceptions/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HollaG"},"content":"package duke.exceptions;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"HollaG"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"HollaG"},"content":" * Encaspulates an unknown command error.","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"HollaG"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"HollaG"},"content":"public class UnknownCommandException extends DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"HollaG"},"content":"     * Constructor for an unknown command.","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"HollaG"},"content":"     * Defaults to an error message informing the user that the command is unknown.","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"HollaG"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"HollaG"},"content":"        super(\"I\u0027m sorry, I don\u0027t know what that means!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"HollaG"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"HollaG":14}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HollaG"},"content":"package duke.parser;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"HollaG"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"HollaG"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"HollaG"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"HollaG"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"HollaG"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"HollaG"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"HollaG"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"HollaG"},"content":"import duke.exceptions.InvalidFormatException;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"HollaG"},"content":"import duke.exceptions.UnknownCommandException;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"HollaG"},"content":"import duke.tasks.Commands;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"HollaG"},"content":"import duke.tasks.DeadlineTask;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"HollaG"},"content":"import duke.tasks.EventTask;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"HollaG"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"HollaG"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"HollaG"},"content":"import duke.tasks.TodoTask;","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"HollaG"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"HollaG"},"content":" * Controls the parsing of commands and arguments entered by the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"HollaG"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"HollaG"},"content":"public class Parser {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"HollaG"},"content":"    private static final String UNKNOWN_COMMAND \u003d \"\\uD83D\\uDE21 This command is not something I can handle!\";","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"HollaG"},"content":"    private static final String NAME_EMPTY \u003d \"\\uD83D\\uDE21 Your item name cannot be empty!\";","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"HollaG"},"content":"    private static final String DEADLINE_EMPTY \u003d \"\\uD83D\\uDE21 Missing deadline!\";","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"HollaG"},"content":"    private static final String FROM_EMPTY \u003d \"\\uD83D\\uDE21 Missing from!\";","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"HollaG"},"content":"    private static final String TO_EMPTY \u003d \"\\uD83D\\uDE21 Missing to!\";","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"HollaG"},"content":"    private static final String TIME_FORMAT_ERROR \u003d \"\\uD83D\\uDE21 Time format invalid!\";","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"HollaG"},"content":"    private static final String INVALID_DATE_FORMAT \u003d \"\\uD83D\\uDE21 Invalid date format! Try using YYYY-MM-DD\";","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"HollaG"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"HollaG"},"content":"     * Determines if the program should terminate.","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"HollaG"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"HollaG"},"content":"     * @param inputString The user input","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"HollaG"},"content":"     * @return true if the user input is the \u0027end\u0027 command","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"HollaG"},"content":"    public static boolean isTerminateCommand(String inputString) {","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"HollaG"},"content":"        return inputString.equals(\"bye\");","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"HollaG"},"content":"     * Parses the input string to find the enum command.","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"HollaG"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"HollaG"},"content":"     * @param inputString the user\u0027s input string","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"HollaG"},"content":"     * @return an enum","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"HollaG"},"content":"     * @throws UnknownCommandException if the input command is unknown or malformed.","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"HollaG"},"content":"    public static Commands getInputCommand(String inputString) throws UnknownCommandException {","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"HollaG"},"content":"        String inputCommandString \u003d (inputString.split(\" \")[0].toUpperCase());","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"HollaG"},"content":"        if (!Commands.contains(inputCommandString)) {","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"HollaG"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"HollaG"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"HollaG"},"content":"        return Commands.valueOf(inputCommandString);","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"HollaG"},"content":"     * Parses the input string by the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"HollaG"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"HollaG"},"content":"     * @param inputString The input string entered by the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"HollaG"},"content":"     * @param taskList    The list of tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"HollaG"},"content":"     * @return true if the program can continue, false if the program has to halt.","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"HollaG"},"content":"     * @throws DukeException","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"HollaG"},"content":"    public static ArrayList\u003cTask\u003e parseInput(String inputString, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"HollaG"},"content":"        Commands inputCommand \u003d getInputCommand(inputString);","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"HollaG"},"content":"        ArrayList\u003cTask\u003e modifiedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"HollaG"},"content":"        switch (inputCommand) {","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"HollaG"},"content":"        case LIST: {","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":78,"author":{"gitId":"HollaG"},"content":"            modifiedTasks \u003d taskList.getTasks();","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"HollaG"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"HollaG"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"HollaG"},"content":"        case MARK: {","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"HollaG"},"content":"            // check if is number","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"HollaG"},"content":"            int index \u003d Integer.parseInt(inputString.split(\" \")[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"HollaG"},"content":"            Task markedTask \u003d taskList.markAsDone(index);","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"HollaG"},"content":"            modifiedTasks.add(markedTask);","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":87,"author":{"gitId":"HollaG"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"HollaG"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"HollaG"},"content":"        case UNMARK: {","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"HollaG"},"content":"            int index \u003d Integer.parseInt(inputString.split(\" \")[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"HollaG"},"content":"            Task unmarkedTask \u003d taskList.markAsUnDone(index);","lastModifiedDate":"2023-09-07"},{"lineNumber":92,"author":{"gitId":"HollaG"},"content":"            modifiedTasks.add(unmarkedTask);","lastModifiedDate":"2023-09-07"},{"lineNumber":93,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":94,"author":{"gitId":"HollaG"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"HollaG"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"HollaG"},"content":"        case DELETE: {","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"HollaG"},"content":"            int index \u003d Integer.parseInt(inputString.split(\" \")[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"HollaG"},"content":"            Task removedTask \u003d taskList.removeFromList(index);","lastModifiedDate":"2023-09-07"},{"lineNumber":99,"author":{"gitId":"HollaG"},"content":"            modifiedTasks.add(removedTask);","lastModifiedDate":"2023-09-07"},{"lineNumber":100,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":101,"author":{"gitId":"HollaG"},"content":"            break;","lastModifiedDate":"2023-09-07"},{"lineNumber":102,"author":{"gitId":"HollaG"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":103,"author":{"gitId":"HollaG"},"content":"        case TODO: {","lastModifiedDate":"2023-09-07"},{"lineNumber":104,"author":{"gitId":"HollaG"},"content":"            // add a todo","lastModifiedDate":"2023-09-07"},{"lineNumber":105,"author":{"gitId":"HollaG"},"content":"            String itemName \u003d inputString.replace(\"todo \", \"\");","lastModifiedDate":"2023-09-07"},{"lineNumber":106,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":107,"author":{"gitId":"HollaG"},"content":"            if (itemName.isEmpty()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":108,"author":{"gitId":"HollaG"},"content":"                // no item name","lastModifiedDate":"2023-09-07"},{"lineNumber":109,"author":{"gitId":"HollaG"},"content":"                throw new InvalidFormatException(NAME_EMPTY, inputString);","lastModifiedDate":"2023-09-07"},{"lineNumber":110,"author":{"gitId":"HollaG"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":111,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":112,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":113,"author":{"gitId":"HollaG"},"content":"            TodoTask todoTask \u003d new TodoTask(itemName);","lastModifiedDate":"2023-09-07"},{"lineNumber":114,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":115,"author":{"gitId":"HollaG"},"content":"            taskList.addToList(todoTask);","lastModifiedDate":"2023-09-07"},{"lineNumber":116,"author":{"gitId":"HollaG"},"content":"            modifiedTasks.add(todoTask);","lastModifiedDate":"2023-09-07"},{"lineNumber":117,"author":{"gitId":"HollaG"},"content":"            break;","lastModifiedDate":"2023-09-07"},{"lineNumber":118,"author":{"gitId":"HollaG"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":119,"author":{"gitId":"HollaG"},"content":"        case DEADLINE: {","lastModifiedDate":"2023-09-07"},{"lineNumber":120,"author":{"gitId":"HollaG"},"content":"            // format of entry: \"deadline return book /by Sunday\"","lastModifiedDate":"2023-09-07"},{"lineNumber":121,"author":{"gitId":"HollaG"},"content":"            String itemName \u003d inputString.replace(\"deadline \", \"\").split(\" /by \")[0];","lastModifiedDate":"2023-09-07"},{"lineNumber":122,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":123,"author":{"gitId":"HollaG"},"content":"            if (itemName.isEmpty()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":124,"author":{"gitId":"HollaG"},"content":"                // no item name","lastModifiedDate":"2023-09-07"},{"lineNumber":125,"author":{"gitId":"HollaG"},"content":"                throw new InvalidFormatException(NAME_EMPTY, inputString);","lastModifiedDate":"2023-09-07"},{"lineNumber":126,"author":{"gitId":"HollaG"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":127,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":128,"author":{"gitId":"HollaG"},"content":"            String[] inputArgs \u003d inputString.replace(\"deadline \", \"\").split(\" /by \");","lastModifiedDate":"2023-09-07"},{"lineNumber":129,"author":{"gitId":"HollaG"},"content":"            if (inputArgs.length \u003c 2) {","lastModifiedDate":"2023-09-07"},{"lineNumber":130,"author":{"gitId":"HollaG"},"content":"                // missing deadline","lastModifiedDate":"2023-09-07"},{"lineNumber":131,"author":{"gitId":"HollaG"},"content":"                throw new InvalidFormatException(DEADLINE_EMPTY, inputString);","lastModifiedDate":"2023-09-07"},{"lineNumber":132,"author":{"gitId":"HollaG"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":133,"author":{"gitId":"HollaG"},"content":"            String deadline \u003d inputArgs[1];","lastModifiedDate":"2023-09-07"},{"lineNumber":134,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":135,"author":{"gitId":"HollaG"},"content":"            if (deadline.isEmpty()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":136,"author":{"gitId":"HollaG"},"content":"                // no item name","lastModifiedDate":"2023-09-07"},{"lineNumber":137,"author":{"gitId":"HollaG"},"content":"                throw new InvalidFormatException(DEADLINE_EMPTY, inputString);","lastModifiedDate":"2023-09-07"},{"lineNumber":138,"author":{"gitId":"HollaG"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":139,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":140,"author":{"gitId":"HollaG"},"content":"            // parse the deadline - should be a LocalDate format","lastModifiedDate":"2023-09-07"},{"lineNumber":141,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":142,"author":{"gitId":"HollaG"},"content":"            try {","lastModifiedDate":"2023-09-07"},{"lineNumber":143,"author":{"gitId":"HollaG"},"content":"                LocalDateTime deadlineDateTime \u003d LocalDateTime.parse(deadline, formatter);","lastModifiedDate":"2023-09-07"},{"lineNumber":144,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":145,"author":{"gitId":"HollaG"},"content":"                DeadlineTask deadlineTask \u003d new DeadlineTask(itemName, deadlineDateTime);","lastModifiedDate":"2023-09-07"},{"lineNumber":146,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":147,"author":{"gitId":"HollaG"},"content":"                taskList.addToList(deadlineTask);","lastModifiedDate":"2023-09-07"},{"lineNumber":148,"author":{"gitId":"HollaG"},"content":"                modifiedTasks.add(deadlineTask);","lastModifiedDate":"2023-09-07"},{"lineNumber":149,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":150,"author":{"gitId":"HollaG"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":151,"author":{"gitId":"HollaG"},"content":"                throw new InvalidFormatException(INVALID_DATE_FORMAT, inputString);","lastModifiedDate":"2023-09-07"},{"lineNumber":152,"author":{"gitId":"HollaG"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":153,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":154,"author":{"gitId":"HollaG"},"content":"            break;","lastModifiedDate":"2023-09-07"},{"lineNumber":155,"author":{"gitId":"HollaG"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":156,"author":{"gitId":"HollaG"},"content":"        case EVENT: {","lastModifiedDate":"2023-09-07"},{"lineNumber":157,"author":{"gitId":"HollaG"},"content":"            String inputArgs \u003d inputString.replace(\"event \", \"\");","lastModifiedDate":"2023-09-07"},{"lineNumber":158,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":159,"author":{"gitId":"HollaG"},"content":"            // sample format: event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-09-07"},{"lineNumber":160,"author":{"gitId":"HollaG"},"content":"            // get the name","lastModifiedDate":"2023-09-07"},{"lineNumber":161,"author":{"gitId":"HollaG"},"content":"            String itemName \u003d inputArgs.split(\" /from \")[0];","lastModifiedDate":"2023-09-07"},{"lineNumber":162,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":163,"author":{"gitId":"HollaG"},"content":"            if (itemName.isEmpty()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":164,"author":{"gitId":"HollaG"},"content":"                // no item name","lastModifiedDate":"2023-09-07"},{"lineNumber":165,"author":{"gitId":"HollaG"},"content":"                throw new InvalidFormatException(NAME_EMPTY, inputString);","lastModifiedDate":"2023-09-07"},{"lineNumber":166,"author":{"gitId":"HollaG"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":167,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":168,"author":{"gitId":"HollaG"},"content":"            // get the \u0027from...to\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":169,"author":{"gitId":"HollaG"},"content":"            // @see https://stackoverflow.com/questions/4662215/how-to-extract-a-substring-using-regex","lastModifiedDate":"2023-09-07"},{"lineNumber":170,"author":{"gitId":"HollaG"},"content":"            Pattern patternFrom \u003d Pattern.compile(\"(/from )(.*?)( /to)\");","lastModifiedDate":"2023-09-07"},{"lineNumber":171,"author":{"gitId":"HollaG"},"content":"            Matcher matcherFrom \u003d patternFrom.matcher(inputArgs);","lastModifiedDate":"2023-09-07"},{"lineNumber":172,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":173,"author":{"gitId":"HollaG"},"content":"            String from \u003d \"\";","lastModifiedDate":"2023-09-07"},{"lineNumber":174,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":175,"author":{"gitId":"HollaG"},"content":"            if (matcherFrom.find()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":176,"author":{"gitId":"HollaG"},"content":"                // yes, formatted correctly","lastModifiedDate":"2023-09-07"},{"lineNumber":177,"author":{"gitId":"HollaG"},"content":"                from \u003d matcherFrom.group(2);","lastModifiedDate":"2023-09-07"},{"lineNumber":178,"author":{"gitId":"HollaG"},"content":"                assert !from.isEmpty() : \" Empty from! From should not be empty!\";","lastModifiedDate":"2023-09-12"},{"lineNumber":179,"author":{"gitId":"HollaG"},"content":"            } else {","lastModifiedDate":"2023-09-07"},{"lineNumber":180,"author":{"gitId":"HollaG"},"content":"                throw new InvalidFormatException(FROM_EMPTY, inputString);","lastModifiedDate":"2023-09-07"},{"lineNumber":181,"author":{"gitId":"HollaG"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":182,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":183,"author":{"gitId":"HollaG"},"content":"            // parse the \u0027from\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":184,"author":{"gitId":"HollaG"},"content":"            LocalDateTime dateTimeFrom \u003d LocalDateTime.parse(from, formatter);","lastModifiedDate":"2023-09-07"},{"lineNumber":185,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":186,"author":{"gitId":"HollaG"},"content":"            // get the to...","lastModifiedDate":"2023-09-07"},{"lineNumber":187,"author":{"gitId":"HollaG"},"content":"            String to \u003d inputArgs.split(\"/to \")[1];","lastModifiedDate":"2023-09-07"},{"lineNumber":188,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":189,"author":{"gitId":"HollaG"},"content":"            if (to.isEmpty()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":190,"author":{"gitId":"HollaG"},"content":"                throw new InvalidFormatException(TO_EMPTY, inputString);","lastModifiedDate":"2023-09-07"},{"lineNumber":191,"author":{"gitId":"HollaG"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":192,"author":{"gitId":"HollaG"},"content":"            // parse the \u0027to\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":193,"author":{"gitId":"HollaG"},"content":"            LocalDateTime dateTimeTo \u003d LocalDateTime.parse(to, formatter);","lastModifiedDate":"2023-09-07"},{"lineNumber":194,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":195,"author":{"gitId":"HollaG"},"content":"            EventTask eventTask \u003d new EventTask(itemName, dateTimeFrom, dateTimeTo);","lastModifiedDate":"2023-09-07"},{"lineNumber":196,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":197,"author":{"gitId":"HollaG"},"content":"            taskList.addToList(eventTask);","lastModifiedDate":"2023-09-07"},{"lineNumber":198,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":199,"author":{"gitId":"HollaG"},"content":"            modifiedTasks.add(eventTask);","lastModifiedDate":"2023-09-07"},{"lineNumber":200,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":201,"author":{"gitId":"HollaG"},"content":"            break;","lastModifiedDate":"2023-09-07"},{"lineNumber":202,"author":{"gitId":"HollaG"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":203,"author":{"gitId":"HollaG"},"content":"        case FIND: {","lastModifiedDate":"2023-09-07"},{"lineNumber":204,"author":{"gitId":"HollaG"},"content":"            String searchString \u003d inputString.replace(\"find \", \"\");","lastModifiedDate":"2023-09-07"},{"lineNumber":205,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":206,"author":{"gitId":"HollaG"},"content":"            ArrayList\u003cTask\u003e filtered \u003d taskList.findTasksByName(searchString);","lastModifiedDate":"2023-09-07"},{"lineNumber":207,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":208,"author":{"gitId":"HollaG"},"content":"            modifiedTasks \u003d filtered;","lastModifiedDate":"2023-09-07"},{"lineNumber":209,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":210,"author":{"gitId":"HollaG"},"content":"            break;","lastModifiedDate":"2023-09-07"},{"lineNumber":211,"author":{"gitId":"HollaG"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":212,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":213,"author":{"gitId":"HollaG"},"content":"        default:","lastModifiedDate":"2023-09-07"},{"lineNumber":214,"author":{"gitId":"HollaG"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2023-09-07"},{"lineNumber":215,"author":{"gitId":"HollaG"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":216,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":217,"author":{"gitId":"HollaG"},"content":"        return modifiedTasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":218,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":219,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":220,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":221,"author":{"gitId":"HollaG"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"HollaG":221}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HollaG"},"content":"package duke.storage;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"HollaG"},"content":"import java.io.File;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"HollaG"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"HollaG"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"HollaG"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"HollaG"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"HollaG"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"HollaG"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"HollaG"},"content":"import java.util.Objects;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"HollaG"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"HollaG"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"HollaG"},"content":"import duke.tasks.DeadlineTask;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"HollaG"},"content":"import duke.tasks.EventTask;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"HollaG"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"HollaG"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"HollaG"},"content":"import duke.tasks.TodoTask;","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"HollaG"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"HollaG"},"content":" * Controls the storage and retrieving of saved data on the hard disk.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"HollaG"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"HollaG"},"content":"public class Storage {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"HollaG"},"content":"    private static final String PARSE_ERROR \u003d \"Invalid file format!\";","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"HollaG"},"content":"    private String filePath;","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"HollaG"},"content":"     * Constructor for the Storage controller.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"HollaG"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"HollaG"},"content":"     * @param filePath The filepath of the save file.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"HollaG"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"HollaG"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"HollaG"},"content":"     * Saves the specified list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"HollaG"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"HollaG"},"content":"     * @throws DukeException","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"HollaG"},"content":"    public void saveTasks(TaskList taskList) throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"HollaG"},"content":"        String serialized \u003d taskList.serialize();","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"HollaG"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"HollaG"},"content":"            // create file if not exists","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"HollaG"},"content":"            // write to file","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"HollaG"},"content":"            FileWriter fileWriter \u003d new FileWriter(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"HollaG"},"content":"            fileWriter.write(serialized);","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"HollaG"},"content":"            fileWriter.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"HollaG"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"HollaG"},"content":"            throw new DukeException(\"Error saving file! \\n\" + e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"HollaG"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"HollaG"},"content":"     * Loads the list of tasks that a user has previously entered.","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"HollaG"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"HollaG"},"content":"     * @return a list of tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"HollaG"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"HollaG"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"HollaG"},"content":"            Path path \u003d Path.of(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"HollaG"},"content":"            if (Files.notExists(path)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"HollaG"},"content":"                // create the directory","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"HollaG"},"content":"                System.out.println(\"Directory not present, creating...\");","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"HollaG"},"content":"                Files.createDirectory(path.getParent());","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"HollaG"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"HollaG"},"content":"            if (Files.exists(path)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"HollaG"},"content":"                System.out.println(\"Save file already exists, loading previous data\");","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"HollaG"},"content":"                // it exists, so let\u0027s read it","lastModifiedDate":"2023-09-12"},{"lineNumber":74,"author":{"gitId":"HollaG"},"content":"                Scanner sc \u003d new Scanner(path);","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"HollaG"},"content":"                ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"HollaG"},"content":"                while (sc.hasNextLine()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"HollaG"},"content":"                    String inputLine \u003d sc.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"HollaG"},"content":"                    if (inputLine.isEmpty()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"HollaG"},"content":"                        continue;","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"HollaG"},"content":"                    }","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":83,"author":{"gitId":"HollaG"},"content":"                    Task task \u003d parseTask(inputLine);","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"HollaG"},"content":"                    tasks.add(task);","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"HollaG"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":87,"author":{"gitId":"HollaG"},"content":"                return tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"HollaG"},"content":"            } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"HollaG"},"content":"                File saveFile \u003d new File(String.valueOf(path));","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"HollaG"},"content":"                if (saveFile.createNewFile()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"HollaG"},"content":"                    System.out.println(\"✅ Created save file!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"HollaG"},"content":"                } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"HollaG"},"content":"                    System.out.println(\"⚠\\uFE0F Could not create save file!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"HollaG"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"HollaG"},"content":"                return new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"HollaG"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"HollaG"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"HollaG"},"content":"            System.out.println(\"ERROR\");","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"HollaG"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"HollaG"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"HollaG"},"content":"     * Parses a task as is encoded in the save file.","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"HollaG"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"HollaG"},"content":"     * @param inputLine the string that was encoded","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"HollaG"},"content":"     * @return The task that was parsed successfully","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"HollaG"},"content":"     * @throws IOException","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"HollaG"},"content":"    public static Task parseTask(String inputLine) throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"HollaG"},"content":"        String[] split \u003d inputLine.split(\" \\\\| \");","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"HollaG"},"content":"        if (split.length \u003c 3) {","lastModifiedDate":"2023-09-13"},{"lineNumber":117,"author":{"gitId":"HollaG"},"content":"            throw new DukeException(PARSE_ERROR);","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"HollaG"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"HollaG"},"content":"        String taskType \u003d split[1];","lastModifiedDate":"2023-09-13"},{"lineNumber":120,"author":{"gitId":"HollaG"},"content":"        String isDoneStr \u003d split[2];","lastModifiedDate":"2023-09-13"},{"lineNumber":121,"author":{"gitId":"HollaG"},"content":"        String taskDescription \u003d split[3];","lastModifiedDate":"2023-09-13"},{"lineNumber":122,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":123,"author":{"gitId":"HollaG"},"content":"        // id is the last item in the list;","lastModifiedDate":"2023-09-13"},{"lineNumber":124,"author":{"gitId":"HollaG"},"content":"        int id \u003d Integer.parseInt((split[0]));","lastModifiedDate":"2023-09-13"},{"lineNumber":125,"author":{"gitId":"HollaG"},"content":"        Boolean isDone \u003d false;","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"HollaG"},"content":"        if (Objects.equals(isDoneStr, \"1\") || Objects.equals(isDoneStr, \"0\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"HollaG"},"content":"            isDone \u003d isDoneStr.equals(\"1\");","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"HollaG"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":131,"author":{"gitId":"HollaG"},"content":"        Task task;","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"HollaG"},"content":"        switch (taskType) {","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"HollaG"},"content":"        case \"T\": {","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"HollaG"},"content":"            task \u003d new TodoTask(id, taskDescription);","lastModifiedDate":"2023-09-13"},{"lineNumber":135,"author":{"gitId":"HollaG"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"HollaG"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"HollaG"},"content":"        case \"D\": {","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"HollaG"},"content":"            // get the deadline, which is 4th element","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"HollaG"},"content":"            if (split.length \u003c 4) {","lastModifiedDate":"2023-09-13"},{"lineNumber":140,"author":{"gitId":"HollaG"},"content":"                throw new DukeException(PARSE_ERROR);","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"HollaG"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":142,"author":{"gitId":"HollaG"},"content":"            String deadlineStr \u003d split[4];","lastModifiedDate":"2023-09-13"},{"lineNumber":143,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"HollaG"},"content":"            LocalDateTime deadlineDateTime \u003d LocalDateTime.parse(deadlineStr);","lastModifiedDate":"2023-09-01"},{"lineNumber":145,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"HollaG"},"content":"            task \u003d new DeadlineTask(id, taskDescription, deadlineDateTime);","lastModifiedDate":"2023-09-13"},{"lineNumber":147,"author":{"gitId":"HollaG"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":148,"author":{"gitId":"HollaG"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":149,"author":{"gitId":"HollaG"},"content":"        case \"E\": {","lastModifiedDate":"2023-09-01"},{"lineNumber":150,"author":{"gitId":"HollaG"},"content":"            // get the start date, which is 4th element","lastModifiedDate":"2023-09-01"},{"lineNumber":151,"author":{"gitId":"HollaG"},"content":"            // get the end date, which is 5th element","lastModifiedDate":"2023-09-01"},{"lineNumber":152,"author":{"gitId":"HollaG"},"content":"            if (split.length \u003c 6) {","lastModifiedDate":"2023-09-13"},{"lineNumber":153,"author":{"gitId":"HollaG"},"content":"                throw new DukeException(PARSE_ERROR);","lastModifiedDate":"2023-09-01"},{"lineNumber":154,"author":{"gitId":"HollaG"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":155,"author":{"gitId":"HollaG"},"content":"            String from \u003d split[4];","lastModifiedDate":"2023-09-13"},{"lineNumber":156,"author":{"gitId":"HollaG"},"content":"            LocalDateTime dateTimeStart \u003d LocalDateTime.parse(from);","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"HollaG"},"content":"            String to \u003d split[5];","lastModifiedDate":"2023-09-13"},{"lineNumber":158,"author":{"gitId":"HollaG"},"content":"            LocalDateTime dateTimeEnd \u003d LocalDateTime.parse(to);","lastModifiedDate":"2023-09-01"},{"lineNumber":159,"author":{"gitId":"HollaG"},"content":"            task \u003d new EventTask(id, taskDescription, dateTimeStart, dateTimeEnd);","lastModifiedDate":"2023-09-13"},{"lineNumber":160,"author":{"gitId":"HollaG"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":161,"author":{"gitId":"HollaG"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":162,"author":{"gitId":"HollaG"},"content":"        default:","lastModifiedDate":"2023-09-01"},{"lineNumber":163,"author":{"gitId":"HollaG"},"content":"            throw new DukeException(PARSE_ERROR);","lastModifiedDate":"2023-09-01"},{"lineNumber":164,"author":{"gitId":"HollaG"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":165,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":166,"author":{"gitId":"HollaG"},"content":"        if (isDone) {","lastModifiedDate":"2023-09-01"},{"lineNumber":167,"author":{"gitId":"HollaG"},"content":"            task.setDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":168,"author":{"gitId":"HollaG"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":169,"author":{"gitId":"HollaG"},"content":"        return task;","lastModifiedDate":"2023-09-01"},{"lineNumber":170,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":171,"author":{"gitId":"HollaG"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"HollaG":171}},{"path":"src/main/java/duke/tasks/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HollaG"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"HollaG"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"HollaG"},"content":" * Types of commands that DukeBot accepts.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"HollaG"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"HollaG"},"content":"public enum Commands {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"HollaG"},"content":"    BYE,","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"HollaG"},"content":"    LIST,","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"HollaG"},"content":"    MARK,","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"HollaG"},"content":"    UNMARK,","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"HollaG"},"content":"    DELETE,","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"HollaG"},"content":"    TODO,","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"HollaG"},"content":"    DEADLINE,","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"HollaG"},"content":"    EVENT,","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"HollaG"},"content":"    FIND;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"HollaG"},"content":"     * Tests to see if a string contains this enum.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"HollaG"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"HollaG"},"content":"     * @param test The test string","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"HollaG"},"content":"     * @return true if is an enum","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"HollaG"},"content":"    public static boolean contains(String test) {","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"HollaG"},"content":"        for (Commands c : Commands.values()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"HollaG"},"content":"            if (c.name().equals(test)) {","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"HollaG"},"content":"                return true;","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"HollaG"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"HollaG"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"HollaG"},"content":"        return false;","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"HollaG"},"content":"}","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"HollaG":33}},{"path":"src/main/java/duke/tasks/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HollaG"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"HollaG"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"HollaG"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"HollaG"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"HollaG"},"content":" * Encapsulates a specific task of type Deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"HollaG"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"HollaG"},"content":" * Stores the deadline as a LocalDateTime.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"HollaG"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"HollaG"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"HollaG"},"content":"    private LocalDateTime deadlineDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"HollaG"},"content":"     * Constructor for a Deadline Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"HollaG"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"HollaG"},"content":"     * @param itemName         The name of the task","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"HollaG"},"content":"     * @param deadlineDateTime The deadline","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"HollaG"},"content":"    public DeadlineTask(String itemName, LocalDateTime deadlineDateTime) {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"HollaG"},"content":"        super(itemName);","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"HollaG"},"content":"        this.deadlineDateTime \u003d deadlineDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"HollaG"},"content":"     * Constructor for a Deadline Task.","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"HollaG"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"HollaG"},"content":"     * @param itemName         The name of the task","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"HollaG"},"content":"     * @param deadlineDateTime The deadline","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"HollaG"},"content":"    public DeadlineTask(int id, String itemName, LocalDateTime deadlineDateTime) {","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"HollaG"},"content":"        super(id, itemName);","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"HollaG"},"content":"        this.deadlineDateTime \u003d deadlineDateTime;","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"HollaG"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"HollaG"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"HollaG"},"content":"        return \"D\";","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"HollaG"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"HollaG"},"content":"    public String encodeTask() {","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"HollaG"},"content":"        return super.encodeTask() + \" | \" + deadlineDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"HollaG"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"HollaG"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"HollaG"},"content":"        return super.toString()","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"HollaG"},"content":"                + \" (by: \" + this.deadlineDateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy h:mm a\")) + \")\";","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"HollaG"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"HollaG":53}},{"path":"src/main/java/duke/tasks/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HollaG"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"HollaG"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"HollaG"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"HollaG"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"HollaG"},"content":" * Encapsulates a specific task of type Event.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"HollaG"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"HollaG"},"content":" * Contains a start time, and an end time.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"HollaG"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"HollaG"},"content":"public class EventTask extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"HollaG"},"content":"    private LocalDateTime fromDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"HollaG"},"content":"    private LocalDateTime toDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"HollaG"},"content":"     * Constructor for an Event Task","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"HollaG"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"HollaG"},"content":"     * @param itemName The name of the task","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"HollaG"},"content":"     * @param fromDateTime The time the event starts","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"HollaG"},"content":"     * @param toDateTime The time the event ends","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"HollaG"},"content":"    public EventTask(String itemName, LocalDateTime fromDateTime, LocalDateTime toDateTime) {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"HollaG"},"content":"        super(itemName);","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"HollaG"},"content":"        this.fromDateTime \u003d fromDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"HollaG"},"content":"        this.toDateTime \u003d toDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"HollaG"},"content":"     * Constructor for an Event Task","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"HollaG"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"HollaG"},"content":"     * @param id The saved task ID","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"HollaG"},"content":"     * @param itemName The name of the task","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"HollaG"},"content":"     * @param fromDateTime The time the event starts","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"HollaG"},"content":"     * @param toDateTime The time the event ends","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"HollaG"},"content":"    public EventTask(int id, String itemName, LocalDateTime fromDateTime, LocalDateTime toDateTime) {","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"HollaG"},"content":"        super(id, itemName);","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"HollaG"},"content":"        this.fromDateTime \u003d fromDateTime;","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"HollaG"},"content":"        this.toDateTime \u003d toDateTime;","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"HollaG"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"HollaG"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"HollaG"},"content":"        return \"E\";","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"HollaG"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"HollaG"},"content":"    public String encodeTask() {","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"HollaG"},"content":"        return super.encodeTask() + \" | \" + this.fromDateTime + \" | \" + this.toDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"HollaG"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"HollaG"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"HollaG"},"content":"        return super.toString()","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"HollaG"},"content":"                + \" (from: \" + this.fromDateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy h:mm a\"))","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"HollaG"},"content":"                + \" to: \" + this.toDateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy h:mm a\")) + \")\";","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"HollaG"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"HollaG":60}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HollaG"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"HollaG"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"HollaG"},"content":" * Encapsulates a basic Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"HollaG"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"HollaG"},"content":"public abstract class Task {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"HollaG"},"content":"    private static int taskCount \u003d 1;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"HollaG"},"content":"    private String itemName;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"HollaG"},"content":"    private int id;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"HollaG"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"HollaG"},"content":"     * Generic constructor for a Task","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"HollaG"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"HollaG"},"content":"     * @param itemName The name of the task","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"HollaG"},"content":"     * @param id the saved id","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"HollaG"},"content":"    public Task(int id, String itemName) {","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"HollaG"},"content":"        this.itemName \u003d itemName;","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"HollaG"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"HollaG"},"content":"        taskCount \u003d Math.max(taskCount + 1, this.id) + 1;","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"HollaG"},"content":"     * Generic constructor for a Task","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"HollaG"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"HollaG"},"content":"     * @param itemName The name of the task","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"HollaG"},"content":"    public Task(String itemName) {","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"HollaG"},"content":"        this.itemName \u003d itemName;","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"HollaG"},"content":"        this.id \u003d taskCount;","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"HollaG"},"content":"        taskCount++;","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"HollaG"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"HollaG"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"HollaG"},"content":"        // If the object is compared with itself then return true","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"HollaG"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"HollaG"},"content":"            return true;","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"HollaG"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"HollaG"},"content":"        /* Check if o is an instance of Task or not","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"HollaG"},"content":"          \"null instanceof [type]\" also returns false */","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"HollaG"},"content":"        if (!(o instanceof Task)) {","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"HollaG"},"content":"            return false;","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"HollaG"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"HollaG"},"content":"        Task otherListItem \u003d (Task) o;","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"HollaG"},"content":"        return otherListItem.itemName.equals(this.itemName) \u0026\u0026 otherListItem.isDone \u003d\u003d this.isDone;","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"HollaG"},"content":"     * Marks the item as done.","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"HollaG"},"content":"    public boolean setDone() {","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"HollaG"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"HollaG"},"content":"        return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"HollaG"},"content":"     * Marks the item as not done.","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"HollaG"},"content":"    public boolean setUnDone() {","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"HollaG"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"HollaG"},"content":"        return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"HollaG"},"content":"     * Gets an icon to represent the state of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"HollaG"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"HollaG"},"content":"     * @return a stringified icon","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"HollaG"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"HollaG"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":78,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":79,"author":{"gitId":"HollaG"},"content":"     * Gets the task name.","lastModifiedDate":"2023-08-23"},{"lineNumber":80,"author":{"gitId":"HollaG"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"HollaG"},"content":"     * @return the task name","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":83,"author":{"gitId":"HollaG"},"content":"    public String getName() {","lastModifiedDate":"2023-08-23"},{"lineNumber":84,"author":{"gitId":"HollaG"},"content":"        return this.itemName;","lastModifiedDate":"2023-08-23"},{"lineNumber":85,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":86,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":87,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"HollaG"},"content":"     * Gets the ID","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"HollaG"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":90,"author":{"gitId":"HollaG"},"content":"     * @return the task id","lastModifiedDate":"2023-09-07"},{"lineNumber":91,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":92,"author":{"gitId":"HollaG"},"content":"    public int getId() {","lastModifiedDate":"2023-09-07"},{"lineNumber":93,"author":{"gitId":"HollaG"},"content":"        return this.id;","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":95,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":96,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"HollaG"},"content":"     * Gets the task type as a single character.","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"HollaG"},"content":"     * T \u003d Todo","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"HollaG"},"content":"     * D \u003d Deadline","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"HollaG"},"content":"     * E \u003d Event","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"HollaG"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"HollaG"},"content":"     * @return encoded character","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"HollaG"},"content":"    public abstract String getTaskType();","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"HollaG"},"content":"     * Encodes the task into a formatted string to be stored in a database","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"HollaG"},"content":"    public String encodeTask() {","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"HollaG"},"content":"        return this.id + \" | \" + this.getTaskType() + \" | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + this.itemName;","lastModifiedDate":"2023-09-13"},{"lineNumber":111,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":114,"author":{"gitId":"HollaG"},"content":"     * Prints the task, formatted","lastModifiedDate":"2023-08-23"},{"lineNumber":115,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":116,"author":{"gitId":"HollaG"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":117,"author":{"gitId":"HollaG"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":118,"author":{"gitId":"HollaG"},"content":"        return \"#\" + this.id + \" [\" + this.getTaskType() + \"] \" + \"[\" + getStatusIcon() + \"] \" + this.itemName;","lastModifiedDate":"2023-09-07"},{"lineNumber":119,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":120,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":121,"author":{"gitId":"HollaG"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"HollaG":121}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HollaG"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"HollaG"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"HollaG"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"HollaG"},"content":"import duke.exceptions.NotFoundException;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"HollaG"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"HollaG"},"content":" * Stores the list of tasks that the user has.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"HollaG"},"content":" * Provides additional methods for operating on the tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"HollaG"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"HollaG"},"content":"public class TaskList {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"HollaG"},"content":"    private ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"HollaG"},"content":"     * The constructor for a basic TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"HollaG"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"HollaG"},"content":"     * @param tasks The default tasks (if any) this should be initialised to","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"HollaG"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"HollaG"},"content":"        this.list \u003d tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"HollaG"},"content":"     * Adds an item to the list.","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"HollaG"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"HollaG"},"content":"     * @param task The user\u0027s task","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"HollaG"},"content":"    public void addToList(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"HollaG"},"content":"        list.add(task);","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"HollaG"},"content":"     * Removes an item from the list","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"HollaG"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"HollaG"},"content":"     * @param id the id of the task to remove.","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"HollaG"},"content":"     * @return the task that was removed","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"HollaG"},"content":"    public Task removeFromList(int id) throws NotFoundException {","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"HollaG"},"content":"        int taskToDeleteIndex \u003d -1;","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"HollaG"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"HollaG"},"content":"            if (list.get(i).getId() \u003d\u003d id) {","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"HollaG"},"content":"                taskToDeleteIndex \u003d i;","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"HollaG"},"content":"                break;","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"HollaG"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"HollaG"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"HollaG"},"content":"        if (taskToDeleteIndex \u003d\u003d -1) {","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"HollaG"},"content":"            throw new NotFoundException();","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"HollaG"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"HollaG"},"content":"        Task task \u003d list.get(taskToDeleteIndex);","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"HollaG"},"content":"        list.remove(taskToDeleteIndex);","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"HollaG"},"content":"        return task;","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"HollaG"},"content":"     * Marks a specific task in the list as done.","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"HollaG"},"content":"     * Indexes start from 1, not 0","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"HollaG"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"HollaG"},"content":"     * @param id","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"HollaG"},"content":"     * @return the task that was modified","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"HollaG"},"content":"    public Task markAsDone(int id) throws NotFoundException {","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"HollaG"},"content":"        for (Task t : this.list) {","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"HollaG"},"content":"            if (t.getId() \u003d\u003d id) {","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"HollaG"},"content":"                t.setDone();","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"HollaG"},"content":"                return t;","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"HollaG"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"HollaG"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"HollaG"},"content":"        throw new NotFoundException();","lastModifiedDate":"2023-09-12"},{"lineNumber":72,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"HollaG"},"content":"     * Marks a specific task in the list as undone.","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"HollaG"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"HollaG"},"content":"     * @param id","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"HollaG"},"content":"     * @return the task that was modified","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":80,"author":{"gitId":"HollaG"},"content":"    public Task markAsUnDone(int id) throws NotFoundException {","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"HollaG"},"content":"        for (Task t : this.list) {","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"HollaG"},"content":"            if (t.getId() \u003d\u003d id) {","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"HollaG"},"content":"                t.setUnDone();","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"HollaG"},"content":"                return t;","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"HollaG"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"HollaG"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":88,"author":{"gitId":"HollaG"},"content":"        throw new NotFoundException();","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":90,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":91,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"HollaG"},"content":"     * Gets the number of non-null tasks in the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"HollaG"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"HollaG"},"content":"     * @return integer representing the size","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"HollaG"},"content":"    public int getSize() {","lastModifiedDate":"2023-08-23"},{"lineNumber":97,"author":{"gitId":"HollaG"},"content":"        return this.list.size();","lastModifiedDate":"2023-09-07"},{"lineNumber":98,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":99,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":100,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":101,"author":{"gitId":"HollaG"},"content":"     * Gets all tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":102,"author":{"gitId":"HollaG"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":103,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":104,"author":{"gitId":"HollaG"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-09-07"},{"lineNumber":105,"author":{"gitId":"HollaG"},"content":"        return this.list;","lastModifiedDate":"2023-09-07"},{"lineNumber":106,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":107,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"HollaG"},"content":"     * Encodes the current Duke. Tasks in a string, each task separated by a newline.","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"HollaG"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":110,"author":{"gitId":"HollaG"},"content":"     * @return String representation","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"HollaG"},"content":"    public String serialize() {","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"HollaG"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"HollaG"},"content":"        for (int i \u003d 0; i \u003c this.list.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"HollaG"},"content":"            Task task \u003d this.list.get(i);","lastModifiedDate":"2023-09-07"},{"lineNumber":117,"author":{"gitId":"HollaG"},"content":"            stringBuilder.append(task.encodeTask());","lastModifiedDate":"2023-09-07"},{"lineNumber":118,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":119,"author":{"gitId":"HollaG"},"content":"            stringBuilder.append(\"\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"HollaG"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"HollaG"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"HollaG"},"content":"     * Finds the tasks that match the provided search string.","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"HollaG"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"HollaG"},"content":"     * @param searchString the string to match","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"HollaG"},"content":"     * @return tasks whose name contains the search string.","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"HollaG"},"content":"    public ArrayList\u003cTask\u003e findTasksByName(String searchString) {","lastModifiedDate":"2023-09-07"},{"lineNumber":132,"author":{"gitId":"HollaG"},"content":"        return this.list.stream()","lastModifiedDate":"2023-09-08"},{"lineNumber":133,"author":{"gitId":"HollaG"},"content":"                .filter(a -\u003e a.getName().contains(searchString)).collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2023-09-08"},{"lineNumber":134,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":136,"author":{"gitId":"HollaG"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":137,"author":{"gitId":"HollaG"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":138,"author":{"gitId":"HollaG"},"content":"        StringBuilder resultMsg \u003d new StringBuilder();","lastModifiedDate":"2023-08-23"},{"lineNumber":139,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":140,"author":{"gitId":"HollaG"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-08-23"},{"lineNumber":141,"author":{"gitId":"HollaG"},"content":"            Task task \u003d list.get(i);","lastModifiedDate":"2023-09-07"},{"lineNumber":142,"author":{"gitId":"HollaG"},"content":"            resultMsg.append(task);","lastModifiedDate":"2023-09-07"},{"lineNumber":143,"author":{"gitId":"HollaG"},"content":"            resultMsg.append(\"\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":144,"author":{"gitId":"HollaG"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":145,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":146,"author":{"gitId":"HollaG"},"content":"        return resultMsg.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":147,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":148,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":149,"author":{"gitId":"HollaG"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"HollaG":149}},{"path":"src/main/java/duke/tasks/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HollaG"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"HollaG"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"HollaG"},"content":" * Encapsulates a specific task of type Todo.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"HollaG"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"HollaG"},"content":" * Does not have any special characteristics.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"HollaG"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"HollaG"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"HollaG"},"content":"     * Constructor for a Todo task","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"HollaG"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"HollaG"},"content":"     * @param itemName The name of the Todo","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"HollaG"},"content":"    public TodoTask(String itemName) {","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"HollaG"},"content":"        super(itemName);","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"HollaG"},"content":"     * Constructor for a Todo task","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"HollaG"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"HollaG"},"content":"     * @param itemName The name of the Todo","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"HollaG"},"content":"     * @param id the saved item id","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"HollaG"},"content":"    public TodoTask(int id, String itemName) {","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"HollaG"},"content":"        super(id, itemName);","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"HollaG"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"HollaG"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"HollaG"},"content":"        return \"T\";","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"HollaG"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"HollaG"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"HollaG"},"content":"        return super.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"HollaG"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"HollaG":38}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HollaG"},"content":"package duke.ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"HollaG"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"HollaG"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"HollaG"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"HollaG"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"HollaG"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"HollaG"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"HollaG"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"HollaG"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"HollaG"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"HollaG"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"HollaG"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"HollaG"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"HollaG"},"content":" * Wraps a User Message","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"HollaG"},"content":" * consisting of an avatar, a username, and the text.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"HollaG"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"HollaG"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"HollaG"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"HollaG"},"content":"    private Label dialog \u003d new Label();","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"HollaG"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"HollaG"},"content":"    private ImageView displayPicture \u003d new ImageView();","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"HollaG"},"content":"     * Constructor for a Dialog Box.","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"HollaG"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"HollaG"},"content":"     * @param text The text content","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"HollaG"},"content":"     * @param img The avatar image for the user","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"HollaG"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"HollaG"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"HollaG"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"HollaG"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"HollaG"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"HollaG"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"HollaG"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"HollaG"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"HollaG"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"HollaG"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"HollaG"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"HollaG"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"HollaG"},"content":"    private void flip() {","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"HollaG"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"HollaG"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"HollaG"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"HollaG"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"HollaG"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"HollaG"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"HollaG"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"HollaG"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"HollaG"},"content":"        db.flip();","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"HollaG"},"content":"        return db;","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"HollaG"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"HollaG":67}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HollaG"},"content":"package duke.ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"HollaG"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"HollaG"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"HollaG"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"HollaG"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"HollaG"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"HollaG"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"HollaG"},"content":"import javafx.scene.canvas.Canvas;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"HollaG"},"content":"import javafx.scene.canvas.GraphicsContext;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"HollaG"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"HollaG"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"HollaG"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"HollaG"},"content":"import javafx.scene.effect.BlendMode;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"HollaG"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"HollaG"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"HollaG"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"HollaG"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"HollaG"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"HollaG"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"HollaG"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"HollaG"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"HollaG"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"HollaG"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"HollaG"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"HollaG"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"HollaG"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"HollaG"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"HollaG"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"HollaG"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"HollaG"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"HollaG"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/elonmusk.jpg\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"HollaG"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"HollaG"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"HollaG"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"HollaG"},"content":"     * Sets the duke variable.","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"HollaG"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"HollaG"},"content":"     * @param d Duke","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"HollaG"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"HollaG"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"HollaG"},"content":"        this.dialogContainer.getChildren()","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"HollaG"},"content":"                .add(DialogBox.getDukeDialog(\"Hello! Type something to get started.\", crop(dukeImage, true)));","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"HollaG"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"HollaG"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"HollaG"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"HollaG"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"HollaG"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"HollaG"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"HollaG"},"content":"            ArrayList\u003cTask\u003e modifiedTasks \u003d Parser.parseInput(input, duke.getTaskList());","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"HollaG"},"content":"            String response \u003d Ui.getResponseMessage(Parser.getInputCommand(input), modifiedTasks, duke.getTaskList());","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"HollaG"},"content":"            assert !response.isEmpty() : \" Response message is blank!\";","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"HollaG"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"HollaG"},"content":"                    DialogBox.getUserDialog((input), crop(userImage, true)),","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"HollaG"},"content":"                    DialogBox.getDukeDialog((response), crop(dukeImage, true))","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"HollaG"},"content":"            );","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"HollaG"},"content":"            userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":74,"author":{"gitId":"HollaG"},"content":"            duke.save();","lastModifiedDate":"2023-09-13"},{"lineNumber":75,"author":{"gitId":"HollaG"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"HollaG"},"content":"            String response \u003d e.getMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":78,"author":{"gitId":"HollaG"},"content":"            assert !response.isEmpty() : \" Error message is blank!\";","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"HollaG"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"HollaG"},"content":"                    DialogBox.getUserDialog((input), crop(userImage, true)),","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"HollaG"},"content":"                    DialogBox.getDukeDialog(response, crop(dukeImage, true))","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"HollaG"},"content":"            );","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"HollaG"},"content":"            userInput.clear();","lastModifiedDate":"2023-09-08"},{"lineNumber":84,"author":{"gitId":"HollaG"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"HollaG"},"content":"     * Crops an image to a circle.","lastModifiedDate":"2023-09-07"},{"lineNumber":90,"author":{"gitId":"HollaG"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":91,"author":{"gitId":"HollaG"},"content":"     * @param img      The image to crop","lastModifiedDate":"2023-09-07"},{"lineNumber":92,"author":{"gitId":"HollaG"},"content":"     * @param toCircle Whether we want a circle","lastModifiedDate":"2023-09-07"},{"lineNumber":93,"author":{"gitId":"HollaG"},"content":"     * @return a cropped image","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":95,"author":{"gitId":"HollaG"},"content":"    private Image crop(Image img, boolean toCircle) {","lastModifiedDate":"2023-09-07"},{"lineNumber":96,"author":{"gitId":"HollaG"},"content":"        double d \u003d Math.min(img.getWidth(), img.getHeight());","lastModifiedDate":"2023-09-07"},{"lineNumber":97,"author":{"gitId":"HollaG"},"content":"        double x \u003d (d - img.getWidth()) / 2;","lastModifiedDate":"2023-09-07"},{"lineNumber":98,"author":{"gitId":"HollaG"},"content":"        double y \u003d (d - img.getHeight()) / 2;","lastModifiedDate":"2023-09-07"},{"lineNumber":99,"author":{"gitId":"HollaG"},"content":"        Canvas canvas \u003d new Canvas(d, d);","lastModifiedDate":"2023-09-07"},{"lineNumber":100,"author":{"gitId":"HollaG"},"content":"        GraphicsContext g \u003d canvas.getGraphicsContext2D();","lastModifiedDate":"2023-09-07"},{"lineNumber":101,"author":{"gitId":"HollaG"},"content":"        if (toCircle) {","lastModifiedDate":"2023-09-07"},{"lineNumber":102,"author":{"gitId":"HollaG"},"content":"            g.fillOval(0, 0, d, d);","lastModifiedDate":"2023-09-07"},{"lineNumber":103,"author":{"gitId":"HollaG"},"content":"            g.setGlobalBlendMode(BlendMode.SRC_ATOP);","lastModifiedDate":"2023-09-07"},{"lineNumber":104,"author":{"gitId":"HollaG"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":105,"author":{"gitId":"HollaG"},"content":"        g.drawImage(img, x, y);","lastModifiedDate":"2023-09-07"},{"lineNumber":106,"author":{"gitId":"HollaG"},"content":"        return canvas.snapshot(null, null);","lastModifiedDate":"2023-09-07"},{"lineNumber":107,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":108,"author":{"gitId":"HollaG"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"HollaG":108}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HollaG"},"content":"package duke.ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"HollaG"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"HollaG"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"HollaG"},"content":"import duke.exceptions.UnknownCommandException;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"HollaG"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"HollaG"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"HollaG"},"content":"import duke.tasks.Commands;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"HollaG"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"HollaG"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"HollaG"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"HollaG"},"content":" * Controls any user interaction with the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"HollaG"},"content":" * Examples: text output, error messages","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"HollaG"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"HollaG"},"content":"public class Ui {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"HollaG"},"content":"    private static final String SEPARATOR_LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"HollaG"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"HollaG"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"HollaG"},"content":"     * Constructor for an Ui handler.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"HollaG"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"HollaG"},"content":"     * @param taskList","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"HollaG"},"content":"    public Ui(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"HollaG"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"HollaG"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"HollaG"},"content":"     * Begins interaction with the user","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"HollaG"},"content":"    public void beginLogging() {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"HollaG"},"content":"        printDivider();","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"HollaG"},"content":"        String entranceMsg \u003d \"Hello! I\u0027m Elon Musk.\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"HollaG"},"content":"                + \"What can I do for you?\";","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"HollaG"},"content":"        System.out.println(entranceMsg);","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"HollaG"},"content":"        printDivider();","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"HollaG"},"content":"        String inputString \u003d \"\";","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"HollaG"},"content":"        Scanner keyboard \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"HollaG"},"content":"        while (true) {","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"HollaG"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"HollaG"},"content":"                inputString \u003d keyboard.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"HollaG"},"content":"                printDivider();","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"HollaG"},"content":"                boolean isTerminateCommand \u003d Parser.isTerminateCommand(inputString);","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"HollaG"},"content":"                if (isTerminateCommand) {","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"HollaG"},"content":"                    System.out.println(\"Byebye!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"HollaG"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"HollaG"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"HollaG"},"content":"                ArrayList\u003cTask\u003e modifiedTasks \u003d Parser.parseInput(inputString, taskList);","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"HollaG"},"content":"                printResult(Parser.getInputCommand(inputString), modifiedTasks, taskList);","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"HollaG"},"content":"                storage.saveTasks(taskList);","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"HollaG"},"content":"                printDivider();","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"HollaG"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"HollaG"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"HollaG"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"HollaG"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"HollaG"},"content":"     * Prints feedback to the user on what and how a Task got modified,","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"HollaG"},"content":"     * based on the user\u0027s command.","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"HollaG"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"HollaG"},"content":"     * @param command       the command input by the user","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"HollaG"},"content":"     * @param modifiedTasks The tasks that were modified in the input","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"HollaG"},"content":"     * @param taskList      the task container","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"HollaG"},"content":"    public static void printResult(Commands command, ArrayList\u003cTask\u003e modifiedTasks, TaskList taskList)","lastModifiedDate":"2023-09-08"},{"lineNumber":78,"author":{"gitId":"HollaG"},"content":"            throws UnknownCommandException {","lastModifiedDate":"2023-09-08"},{"lineNumber":79,"author":{"gitId":"HollaG"},"content":"        System.out.println(getResponseMessage(command, modifiedTasks, taskList));","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"HollaG"},"content":"     * Gets the text that a user should see, either in GUI or in command line.","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"HollaG"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"HollaG"},"content":"     * @param command The user\u0027s command","lastModifiedDate":"2023-09-12"},{"lineNumber":86,"author":{"gitId":"HollaG"},"content":"     * @param modifiedTasks The list of tasks that were modified by the user","lastModifiedDate":"2023-09-12"},{"lineNumber":87,"author":{"gitId":"HollaG"},"content":"     * @param taskList The total list of tasks","lastModifiedDate":"2023-09-12"},{"lineNumber":88,"author":{"gitId":"HollaG"},"content":"     * @return a response message to be displayed","lastModifiedDate":"2023-09-12"},{"lineNumber":89,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":90,"author":{"gitId":"HollaG"},"content":"    public static String getResponseMessage(Commands command, ArrayList\u003cTask\u003e modifiedTasks, TaskList taskList)","lastModifiedDate":"2023-09-08"},{"lineNumber":91,"author":{"gitId":"HollaG"},"content":"            throws UnknownCommandException {","lastModifiedDate":"2023-09-08"},{"lineNumber":92,"author":{"gitId":"HollaG"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-09-07"},{"lineNumber":93,"author":{"gitId":"HollaG"},"content":"        switch (command) {","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"HollaG"},"content":"        case TODO:","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"HollaG"},"content":"        case DEADLINE:","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"HollaG"},"content":"        case EVENT: {","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"HollaG"},"content":"            result \u003d \"\\uD83D\\uDE0A I\u0027ve added a new task: \" + modifiedTasks + \"\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":98,"author":{"gitId":"HollaG"},"content":"                    + \"Now you have \" + taskList.getSize() + \" tasks!\";","lastModifiedDate":"2023-09-08"},{"lineNumber":99,"author":{"gitId":"HollaG"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"HollaG"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"HollaG"},"content":"        case MARK: {","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"HollaG"},"content":"            result \u003d \"Nice! I\u0027ve marked this task as done: \\n    \" + modifiedTasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":103,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"HollaG"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"HollaG"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"HollaG"},"content":"        case UNMARK: {","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"HollaG"},"content":"            result \u003d \"Nice! I\u0027ve marked this task as undone: \\n    \" + modifiedTasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":108,"author":{"gitId":"HollaG"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"HollaG"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"HollaG"},"content":"        case DELETE: {","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"HollaG"},"content":"            result \u003d (\"\\uD83D\\uDE0A I\u0027ve removed this task: \" + modifiedTasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":112,"author":{"gitId":"HollaG"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"HollaG"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"HollaG"},"content":"        case LIST: {","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"HollaG"},"content":"            result \u003d taskList.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":116,"author":{"gitId":"HollaG"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"HollaG"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"HollaG"},"content":"        case FIND: {","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"HollaG"},"content":"            if (modifiedTasks.isEmpty()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":120,"author":{"gitId":"HollaG"},"content":"                result \u003d (\"Couldn\u0027t find any matching tasks!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":121,"author":{"gitId":"HollaG"},"content":"            } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"HollaG"},"content":"                result \u003d \"I found \" + modifiedTasks.size() + \" matching tasks:\" + \"\\n\" + new TaskList(modifiedTasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":123,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":124,"author":{"gitId":"HollaG"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"HollaG"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"HollaG"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"HollaG"},"content":"        case BYE: {","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"HollaG"},"content":"            result \u003d \"Bye! Hope to see you again soon.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":129,"author":{"gitId":"HollaG"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"HollaG"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"HollaG"},"content":"        default: {","lastModifiedDate":"2023-09-06"},{"lineNumber":132,"author":{"gitId":"HollaG"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2023-09-07"},{"lineNumber":133,"author":{"gitId":"HollaG"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"HollaG"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"HollaG"},"content":"        return result;","lastModifiedDate":"2023-09-07"},{"lineNumber":137,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":138,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":139,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"HollaG"},"content":"     * Prints a simple divider line to the screen.","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":142,"author":{"gitId":"HollaG"},"content":"    public static void printDivider() {","lastModifiedDate":"2023-09-01"},{"lineNumber":143,"author":{"gitId":"HollaG"},"content":"        System.out.println(SEPARATOR_LINE);","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":145,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"HollaG"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"HollaG":146}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"HollaG"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"HollaG"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"HollaG"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"HollaG"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"HollaG"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"HollaG"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"HollaG"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"HollaG"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"HollaG"},"content":"         \u003copaqueInsets\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"HollaG"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"HollaG"},"content":"         \u003c/opaqueInsets\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"HollaG"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"HollaG"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"HollaG"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"HollaG"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"75.0\" fitWidth\u003d\"75.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"HollaG"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"HollaG"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"HollaG"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"HollaG"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"HollaG"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"HollaG"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"HollaG"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"HollaG"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"HollaG":25}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"HollaG"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"HollaG"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"HollaG"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"HollaG"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"HollaG"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"HollaG"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"HollaG"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"HollaG"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"HollaG"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" style\u003d\"-fx-border-radius: 10;\" text\u003d\"\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"HollaG"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"HollaG"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"HollaG"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"HollaG"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" spacing\u003d\"20.0\" style\u003d\"-fx-background-color: #ffffff;\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"HollaG"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"HollaG"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"HollaG"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"HollaG"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"HollaG":19}},{"path":"src/test/java/duke/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HollaG"},"content":"package duke.storage;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"HollaG"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"HollaG"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"HollaG"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"HollaG"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"HollaG"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"HollaG"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"HollaG"},"content":"import duke.tasks.EventTask;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"HollaG"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"HollaG"},"content":"import duke.tasks.TodoTask;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"HollaG"},"content":"public class StorageTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"HollaG"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"HollaG"},"content":"     * Single line import","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"HollaG"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"HollaG"},"content":"     * @throws IOException","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"HollaG"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"HollaG"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"HollaG"},"content":"    public void testParsing1() throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"HollaG"},"content":"        String inputString \u003d \"1 | E | 1 | hello! | 2023-01-01T09:30 | 2023-02-02T15:30\";","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"HollaG"},"content":"        Task actualTask \u003d Storage.parseTask(inputString);","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"HollaG"},"content":"        Task expectedTask \u003d new EventTask(1, \"hello!\",","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"HollaG"},"content":"                LocalDateTime.parse(\"2023-01-01T09:30\"),","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"HollaG"},"content":"                LocalDateTime.parse(\"2023-02-02T15:30\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"HollaG"},"content":"        expectedTask.setDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"HollaG"},"content":"        assertEquals(expectedTask.toString(), actualTask.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"HollaG"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"HollaG"},"content":"    public void testParsing2() throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"HollaG"},"content":"        String inputString \u003d \"2 | T | 0 | hello!\";","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"HollaG"},"content":"        Task expectedTask \u003d new TodoTask(2, \"hello!\");","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"HollaG"},"content":"        Task actualTask \u003d Storage.parseTask(inputString);","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"HollaG"},"content":"        assertEquals(expectedTask.toString(), actualTask.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"HollaG"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"HollaG"},"content":"    public void testParsing3() throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"HollaG"},"content":"        String inputString \u003d \"1 | E | 1 | hello! | 2023-01-01T09:30\";","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"HollaG"},"content":"        Exception exception \u003d assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"HollaG"},"content":"            Storage.parseTask(inputString);","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"HollaG"},"content":"        });","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"HollaG"},"content":"        String expectedMessage \u003d \"Invalid file format!\";","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"HollaG"},"content":"        String actualMessage \u003d exception.getMessage();","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"HollaG"},"content":"        assertEquals(expectedMessage, actualMessage);","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"HollaG"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"HollaG":58}},{"path":"src/test/java/duke/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HollaG"},"content":"package duke.ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"HollaG"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"HollaG"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"HollaG"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"HollaG"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"HollaG"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"HollaG"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"HollaG"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"HollaG"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"HollaG"},"content":"import duke.tasks.Commands;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"HollaG"},"content":"import duke.tasks.DeadlineTask;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"HollaG"},"content":"import duke.tasks.EventTask;","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"HollaG"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"HollaG"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"HollaG"},"content":"import duke.tasks.TodoTask;","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"HollaG"},"content":"public class UiTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"HollaG"},"content":"    private final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"HollaG"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"HollaG"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"HollaG"},"content":"    public void setUp() {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"HollaG"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"HollaG"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"HollaG"},"content":"    public void testMarkDoneAndUndone() throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"HollaG"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"HollaG"},"content":"        Task task1 \u003d new TodoTask(1, \"Task1\");","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"HollaG"},"content":"        Task task2 \u003d new EventTask(2, \"Task2\", LocalDateTime.now(), LocalDateTime.now());","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"HollaG"},"content":"        Task task3 \u003d new DeadlineTask(3, \"Task3\", LocalDateTime.now());","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"HollaG"},"content":"        taskList.addToList(task1);","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"HollaG"},"content":"        taskList.addToList(task2);","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"HollaG"},"content":"        taskList.addToList(task3);","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"HollaG"},"content":"        taskList.markAsDone(2);","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"HollaG"},"content":"        taskList.markAsUnDone(2);","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"HollaG"},"content":"        taskList.markAsDone(3);","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"HollaG"},"content":"        Ui.printResult(Commands.LIST, null, taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"HollaG"},"content":"        assertEquals(taskList.toString().trim(), outputStreamCaptor.toString().trim());","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"HollaG"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"HollaG"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"HollaG":51}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HollaG"},"content":"todo live happy","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"HollaG"},"content":"todo live happier","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"HollaG"},"content":"deadline submit chatbot /by Thursday","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"HollaG"},"content":"event go to CS2103T lecture /from Friday 4pm /to Friday 6pm","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"HollaG"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"HollaG"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"HollaG"},"content":"mark 3","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"HollaG"},"content":"unmark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"HollaG"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"HollaG"},"content":"delete 3","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"HollaG"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"HollaG"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"HollaG":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"HollaG"},"content":"if exist .\\text-ui-test\\ACTUAL.TXT del .\\text-ui-test\\ACTUAL.TXT","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"HollaG"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin .\\src\\main\\java\\*.java .\\src\\main\\java\\duke.tasks\\*.java","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"HollaG"},"content":"java -classpath ..\\bin duke.duke \u003c .\\text-ui-test\\input.txt \u003e .\\text-ui-test\\ACTUAL.TXT","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"HollaG"},"content":"FC .\\text-ui-test\\ACTUAL.TXT .\\text-ui-test\\EXPECTED.TXT","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"HollaG"},"content":"","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"HollaG":6,"-":17}}]
