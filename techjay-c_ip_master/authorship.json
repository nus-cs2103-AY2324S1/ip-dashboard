[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"techjay-c"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"techjay-c"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":41,"techjay-c":2}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"techjay-c"},"content":"T | 1 | buy food","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"techjay-c"},"content":"T | 1 | buy groceries","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"techjay-c"},"content":"T | 0 | buy cheese","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"techjay-c":3}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"techjay-c"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"techjay-c"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"techjay-c"},"content":" * Represents a base class for commands in the Duke application.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"techjay-c"},"content":" * Subclasses of Command define specific actions that can be executed by the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"techjay-c"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"techjay-c"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"techjay-c"},"content":"     * Enumeration of possible command types.","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"techjay-c"},"content":"    public enum CommandType {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"techjay-c"},"content":"        TODO,","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"techjay-c"},"content":"        DEADLINE,","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"techjay-c"},"content":"        EVENT,","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"techjay-c"},"content":"        LIST,","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"techjay-c"},"content":"        MARK,","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"techjay-c"},"content":"        DELETE,","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"techjay-c"},"content":"        BYE","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"techjay-c"},"content":"     * Executes the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"techjay-c"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"techjay-c"},"content":"     * @param taskList The TaskList object that stores the list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"techjay-c"},"content":"     * @param ui       The Ui object responsible for user interface interactions.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"techjay-c"},"content":"     * @param storage  The Storage object responsible for reading and writing data to a file.","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"techjay-c"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"techjay-c"},"content":"}","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"techjay-c":31}},{"path":"src/main/java/duke/DateTimeValidator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"techjay-c"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"techjay-c"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"techjay-c"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"techjay-c"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"techjay-c"},"content":" * A utility class for validating dates using a specified format.","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"techjay-c"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"techjay-c"},"content":"public class DateTimeValidator {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"techjay-c"},"content":"    private DateTimeFormatter formatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"techjay-c"},"content":"     * Constructs a DateTimeValidator with the accepted date format.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"techjay-c"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"techjay-c"},"content":"     * @param acceptedFormat The format string for the accepted date format.","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"techjay-c"},"content":"    public DateTimeValidator(String acceptedFormat) {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"techjay-c"},"content":"        this.formatter \u003d DateTimeFormatter.ofPattern(acceptedFormat);","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"techjay-c"},"content":"     * Validates a date string against the accepted date format.","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"techjay-c"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"techjay-c"},"content":"     * @param date The date string to be validated.","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"techjay-c"},"content":"     * @return True if the date string is valid; false otherwise.","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"techjay-c"},"content":"    boolean validateDate(String date) {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"techjay-c"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"techjay-c"},"content":"            formatter.parse(date);","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"techjay-c"},"content":"            return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"techjay-c"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"techjay-c"},"content":"            return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"techjay-c"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"techjay-c"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"techjay-c":35}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"techjay-c"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"techjay-c"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"techjay-c"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"techjay-c"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"techjay-c"},"content":"// Solution below inspired by https://stackoverflow.com/questions/47150081/while-loop-for-multiple-inputs","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"techjay-c"},"content":"// Solution below inspired by ChatGPT, to solve the issue in the else block of incrementing the num_items counter to add","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"techjay-c"},"content":"// the new item subsequently.","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"techjay-c"},"content":"/* Solution below inspired by ChatGPT, to solve the issue for the command list, to show the separators only at the start","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"techjay-c"},"content":"and end, by moving","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"techjay-c"},"content":"the statement outside the for loop","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"techjay-c"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"techjay-c"},"content":"// Solution below inspired by ChatGPT, regarding the method .contains(\"mark\"), as it might be a bug if the input contains mark,","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"techjay-c"},"content":"// without a corresponding integer.","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"techjay-c"},"content":"// Solution below inspired by https://stackoverflow.com/questions/12973871/read-multiple-user-input-words-and-split-them","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"techjay-c"},"content":"// Solution below inspired by ChatGPT, employed its help to solve my indexing problem. (ie mark 1 and unmark 1 refers to","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"techjay-c"},"content":"// diff items)","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"techjay-c"},"content":"/* Solution below inspired by ChatGPT, employed its help to solve the list not updating and showing the items with their","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"techjay-c"},"content":"correct status icon, by creating a new task array of tasks instead of a string array.","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"techjay-c"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"techjay-c"},"content":"// Solution below inspired by https://stackoverflow.com/questions/10405789/regex-append-or-replace-only-the-first-letter-of-each-word","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"techjay-c"},"content":"// Solution below inspired by https://www.programiz.com/java-programming/library/string/replacefirst","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"techjay-c"},"content":"// Solution below adapted by ChatGPT, to solve the exception error when invoking last line of the loop. when there is no next line.","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"techjay-c"},"content":"// Solution below inspired by https://stackoverflow.com/questions/32733084/pass-a-simple-enum-into-a-constructor-in-java","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"techjay-c"},"content":"// Solution below inspired from ChatGPT, seeked clarification if the enums have to be passed into the child classes of parent class Task\u0027s constructor","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"techjay-c"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"techjay-c"},"content":" * The main class for the Duke application.","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"techjay-c"},"content":" * Duke is a task management application that allows users to manage their tasks, including todos, deadlines, and events.","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"techjay-c"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"techjay-c"},"content":"    private static String filePath \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"techjay-c"},"content":"     * The main entry point of the Duke application.","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"techjay-c"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"techjay-c"},"content":"     * @param args Command-line arguments (not used in this application).","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"techjay-c"},"content":"    public static void main(String[] args) throws DukeException.NoSuchItemException, DukeException.ToDoException, IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"techjay-c"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"techjay-c"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"techjay-c"},"content":"        Storage storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"techjay-c"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"techjay-c"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"techjay-c"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"techjay-c"},"content":"            tasks \u003d storage.loadTasks(); // Load tasks from file","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"techjay-c"},"content":"            taskList.setTasks(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"techjay-c"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"techjay-c"},"content":"            System.out.println(\"Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"techjay-c"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"techjay-c"},"content":"        ui.displayWelcomeText();","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"techjay-c"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"techjay-c"},"content":"        // int num_items \u003d tasks.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"techjay-c"},"content":"        String user_text \u003d sc.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"techjay-c"},"content":"        while (!user_text.isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"techjay-c"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"techjay-c"},"content":"                Command command \u003d parser.parseCommand(user_text);","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"techjay-c"},"content":"                command.execute(taskList, ui, storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"techjay-c"},"content":"            } catch (DukeException.ToDoException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"techjay-c"},"content":"                ui.printToDoException();","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"techjay-c"},"content":"            } catch (DukeException.NoSuchItemException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"techjay-c"},"content":"                ui.printNoSuchElementException();","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"techjay-c"},"content":"            } catch (DukeException.EventException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"techjay-c"},"content":"                ui.printEventException();","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"techjay-c"},"content":"            } catch (DukeException.DeadlineException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"techjay-c"},"content":"                ui.printDeadlineException();","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"techjay-c"},"content":"            } catch (DukeException.MarkException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"techjay-c"},"content":"                ui.printMarkException();","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"techjay-c"},"content":"            } catch (DukeException.UnmarkException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"techjay-c"},"content":"                ui.printUnmarkException();","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"techjay-c"},"content":"            } catch (DukeException.DeadlineFormatException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"techjay-c"},"content":"                ui.printDeadlineFormatException();","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"techjay-c"},"content":"            } catch (DukeException.EventFormatException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"techjay-c"},"content":"                ui.printEventFormatException();","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"techjay-c"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"techjay-c"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"techjay-c"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"techjay-c"},"content":"            user_text \u003d sc.hasNextLine() ? sc.nextLine() : \"\";","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"techjay-c"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":86,"author":{"gitId":"techjay-c"},"content":"        sc.close();","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":3,"techjay-c":85}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"techjay-c"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"techjay-c"},"content":"// Solution below inspired by https://stackify.com/specify-handle-exceptions-java/","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"techjay-c"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"techjay-c"},"content":" * Custom exceptions used in the Duke application.","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"techjay-c"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"techjay-c"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"techjay-c"},"content":"     * Constructs a DukeException with the specified error message.","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"techjay-c"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"techjay-c"},"content":"     * @param message The error message associated with the exception.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"techjay-c"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"techjay-c"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"techjay-c"},"content":"     * An exception class for handling cases where the user attempts to create a todo task with an empty description.","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"techjay-c"},"content":"    public static class ToDoException extends DukeException{","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"techjay-c"},"content":"        public ToDoException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"techjay-c"},"content":"            super(\"todo cannot be empty\");","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"techjay-c"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"techjay-c"},"content":"     * An exception class for handling cases where the user provides an invalid command.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"techjay-c"},"content":"    public static class NoSuchItemException extends DukeException{","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"techjay-c"},"content":"        public NoSuchItemException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"techjay-c"},"content":"            super(\"invalid command\");","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"techjay-c"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"techjay-c"},"content":"     * An exception class for handling cases where the user attempts to create an event task with an empty description.","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"techjay-c"},"content":"    public static class EventException extends DukeException{","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"techjay-c"},"content":"        public EventException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"techjay-c"},"content":"            super(\"event cannot be empty\");","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"techjay-c"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"techjay-c"},"content":"     * An exception class for handling cases where the user attempts to create a deadline task with an empty description.","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"techjay-c"},"content":"    public static class DeadlineException extends DukeException{","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"techjay-c"},"content":"        public DeadlineException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"techjay-c"},"content":"            super(\"deadline cannot be empty\");","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"techjay-c"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"techjay-c"},"content":"     * An exception class for handling cases where the user attempts to mark a task without specifying the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"techjay-c"},"content":"    public static class MarkException extends DukeException{","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"techjay-c"},"content":"        public MarkException() {","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"techjay-c"},"content":"            super(\"Task to mark not specified\");","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"techjay-c"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"techjay-c"},"content":"     * An exception class for handling cases where the user attempts to unmark a task without specifying the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"techjay-c"},"content":"    public static class UnmarkException extends DukeException{","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"techjay-c"},"content":"        public UnmarkException() {","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"techjay-c"},"content":"            super(\"Task to unmark not specified\");","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"techjay-c"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"techjay-c"},"content":"     * An exception class for handling cases where the user provides a deadline in an incorrect format.","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"techjay-c"},"content":"    public static class DeadlineFormatException extends DukeException{","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"techjay-c"},"content":"        public DeadlineFormatException() {","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"techjay-c"},"content":"            super(\"Deadline not in the correct format\");","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"techjay-c"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"techjay-c"},"content":"     * An exception class for handling cases where the user provides an event in an incorrect format.","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"techjay-c"},"content":"    public static class EventFormatException extends DukeException{","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"techjay-c"},"content":"        public EventFormatException() {","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"techjay-c"},"content":"            super(\"Event not in the correct format\");","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"techjay-c"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"techjay-c"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"techjay-c":89}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"techjay-c"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"techjay-c"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"techjay-c"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"techjay-c"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"techjay-c"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"techjay-c"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"techjay-c"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"techjay-c"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"techjay-c"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"techjay-c"},"content":"// Solution below adapted and inspired by https://chat.openai.com/share/7f037351-3be6-4105-b138-77f68d428c84","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"techjay-c"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"techjay-c"},"content":" * Parses user input to create and return the corresponding command object.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"techjay-c"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"techjay-c"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"techjay-c"},"content":"     * Parses the user input command and returns the corresponding command object.","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"techjay-c"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"techjay-c"},"content":"     * @param userInput The user\u0027s input command as a string.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"techjay-c"},"content":"     * @return A command object corresponding to the user\u0027s input.","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"techjay-c"},"content":"     * @throws DukeException If there is an issue parsing the command or if the command is invalid.","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"techjay-c"},"content":"    public static Command parseCommand(String userInput) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"techjay-c"},"content":"        String[] split \u003d userInput.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"techjay-c"},"content":"        String command \u003d split[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"techjay-c"},"content":"        String arguments \u003d userInput.replaceFirst(command, \"\").trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"techjay-c"},"content":"        switch (command) {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"techjay-c"},"content":"            case \"bye\":","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"techjay-c"},"content":"                return new ByeCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"techjay-c"},"content":"            case \"list\":","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"techjay-c"},"content":"                return new ListCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"techjay-c"},"content":"            case \"delete\":","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"techjay-c"},"content":"                int indexToDelete \u003d Integer.parseInt(arguments) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"techjay-c"},"content":"                return new DeleteCommand(indexToDelete);","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"techjay-c"},"content":"            case \"todo\":","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"techjay-c"},"content":"                if (arguments.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"techjay-c"},"content":"                    throw new DukeException.ToDoException();","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"techjay-c"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"techjay-c"},"content":"                return new AddCommand(AddCommand.TaskType.TODO, arguments);","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"techjay-c"},"content":"            case \"event\":","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"techjay-c"},"content":"                if (arguments.isEmpty() || !arguments.contains(\"/from\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"techjay-c"},"content":"                    throw new DukeException.EventException();","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"techjay-c"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"techjay-c"},"content":"                String userCommandE \u003d userInput.split(\" \")[0];","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"techjay-c"},"content":"                String argsE \u003d userInput.replaceFirst(userCommandE, \"\").trim();","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"techjay-c"},"content":"                String[] splitTheArgumentsE \u003d argsE.split(\"/from\", 2);","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"techjay-c"},"content":"                if (splitTheArgumentsE.length !\u003d 2 || !splitTheArgumentsE[1].contains(\"/to\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"techjay-c"},"content":"                    throw new DukeException.EventFormatException();","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"techjay-c"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"techjay-c"},"content":"                String the_descriptionE \u003d splitTheArgumentsE[0].trim();","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"techjay-c"},"content":"                String[] theDateTimeE \u003d splitTheArgumentsE[1].trim().split(\"/to\", 2);","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"techjay-c"},"content":"                String fromDateTime \u003d theDateTimeE[0].trim();","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"techjay-c"},"content":"                String toDateTime \u003d theDateTimeE[1].trim();","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"techjay-c"},"content":"                DateTimeValidator validator_e \u003d new DateTimeValidator(\"yyyy/MM/dd HHmm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"techjay-c"},"content":"                boolean isDateValid_e \u003d validator_e.validateDate(fromDateTime) \u0026\u0026 validator_e.validateDate(toDateTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"techjay-c"},"content":"                if (isDateValid_e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"techjay-c"},"content":"                    LocalDateTime parsedFromDate \u003d LocalDateTime.parse(fromDateTime, DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"techjay-c"},"content":"                    LocalDateTime parsedToDate \u003d LocalDateTime.parse(toDateTime, DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"techjay-c"},"content":"                    return new AddCommand(AddCommand.TaskType.EVENT, the_descriptionE, parsedFromDate, parsedToDate);","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"techjay-c"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"techjay-c"},"content":"            case \"deadline\":","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"techjay-c"},"content":"                // Solution below adapted and inspired by https://chat.openai.com/share/b706b4df-ab30-4d0f-93eb-b85617616319","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"techjay-c"},"content":"                if (arguments.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"techjay-c"},"content":"                    throw new DukeException.DeadlineException();","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"techjay-c"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"techjay-c"},"content":"                String userCommandD \u003d userInput.split(\" \")[0];","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"techjay-c"},"content":"                String argsD \u003d userInput.replaceFirst(userCommandD, \"\").trim();","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"techjay-c"},"content":"                String[] splitTheArgumentsD \u003d argsD.split(\"/by\", 2);","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"techjay-c"},"content":"                if (splitTheArgumentsD.length !\u003d 2) {","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"techjay-c"},"content":"                    throw new DukeException.DeadlineFormatException();","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"techjay-c"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"techjay-c"},"content":"                String the_descriptionD \u003d splitTheArgumentsD[0];","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"techjay-c"},"content":"                String[] theDateTimeD \u003d splitTheArgumentsD[1].trim().split(\" \", 2);","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"techjay-c"},"content":"                String date \u003d theDateTimeD[0];","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"techjay-c"},"content":"                String time \u003d theDateTimeD[1];","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"techjay-c"},"content":"                DateTimeValidator validator \u003d new DateTimeValidator(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"techjay-c"},"content":"                boolean isDateValid \u003d validator.validateDate(date + \" \" + time);","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"techjay-c"},"content":"                if (isDateValid) {","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"techjay-c"},"content":"                    LocalDateTime parsedDateTime \u003d LocalDateTime.parse(date + \" \" + time,","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"techjay-c"},"content":"                            DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"techjay-c"},"content":"                    return new AddCommand(AddCommand.TaskType.DEADLINE, the_descriptionD, parsedDateTime);","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"techjay-c"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"techjay-c"},"content":"            case \"unmark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"techjay-c"},"content":"                if (arguments.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"techjay-c"},"content":"                    throw new DukeException.UnmarkException();","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"techjay-c"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"techjay-c"},"content":"                int indexToUnmark \u003d Integer.parseInt(arguments) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"techjay-c"},"content":"                return new UnmarkCommand(indexToUnmark);","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"techjay-c"},"content":"            case \"mark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"techjay-c"},"content":"                if (arguments.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"techjay-c"},"content":"                    throw new DukeException.MarkException();","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"techjay-c"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"techjay-c"},"content":"                int indexToMark \u003d Integer.parseInt(arguments) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"techjay-c"},"content":"                return new MarkCommand(indexToMark);","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"techjay-c"},"content":"            default:","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"techjay-c"},"content":"                throw new DukeException.NoSuchItemException();","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"techjay-c"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"techjay-c"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"techjay-c":114}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"techjay-c"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"techjay-c"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"techjay-c"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"techjay-c"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"techjay-c"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"techjay-c"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"techjay-c"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"techjay-c"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"techjay-c"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"techjay-c"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"techjay-c"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"techjay-c"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"techjay-c"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"techjay-c"},"content":" * Handles saving and loading tasks to and from a file.","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"techjay-c"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"techjay-c"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"techjay-c"},"content":"    static String filePath \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"techjay-c"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"techjay-c"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"techjay-c"},"content":"     * @param filePath The file path for storing tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"techjay-c"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"techjay-c"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"techjay-c"},"content":"    // Solution below adapted and inspired by https://chat.openai.com/share/7f037351-3be6-4105-b138-77f68d428c84","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"techjay-c"},"content":"     * Saves a list of tasks to the file specified by the file path.","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"techjay-c"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"techjay-c"},"content":"     * @param tasks The list of tasks to be saved.","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"techjay-c"},"content":"    public static void saveTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"techjay-c"},"content":"        try (FileWriter writer \u003d new FileWriter(filePath)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"techjay-c"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"techjay-c"},"content":"                String taskType \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"techjay-c"},"content":"                if (task instanceof Event) {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"techjay-c"},"content":"                    taskType \u003d \"Event\";","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"techjay-c"},"content":"                } else if (task instanceof Todo) {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"techjay-c"},"content":"                    taskType \u003d \"Todo\";","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"techjay-c"},"content":"                } else if (task instanceof Deadline) {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"techjay-c"},"content":"                    taskType \u003d \"Deadline\";","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"techjay-c"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"techjay-c"},"content":"                String statusIcon \u003d (task.getStatusIcon().equals(\"X\")) ? \"1\" : \"0\";","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"techjay-c"},"content":"                if (taskType.equals(\"Event\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"techjay-c"},"content":"                    Event event \u003d (Event) task;","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"techjay-c"},"content":"                    LocalDateTime fromDateTime \u003d event.fromDateAndTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"techjay-c"},"content":"                    LocalDateTime toDateTime \u003d event.toDateAndTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"techjay-c"},"content":"                    String formattedFromDateTime \u003d fromDateTime.format(DateTimeFormatter.ofPattern(\"MMMM d yyyy ha\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"techjay-c"},"content":"                    String formattedToDateTime \u003d toDateTime.format(DateTimeFormatter.ofPattern(\"MMMM d yyyy ha\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"techjay-c"},"content":"                    writer.write(\"E \" + \"| \" + statusIcon + \" | \" + event.description +","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"techjay-c"},"content":"                            \" | \" + formattedFromDateTime + \" - \" + formattedToDateTime + \"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"techjay-c"},"content":"                } else if (taskType.equals(\"Deadline\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"techjay-c"},"content":"                    Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"techjay-c"},"content":"                    LocalDateTime dateTime \u003d deadline.DateAndTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"techjay-c"},"content":"                    String formattedDateTime \u003d dateTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mma\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"techjay-c"},"content":"                    writer.write(\"D \" + \"| \" + statusIcon + \" | \" + deadline.description","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"techjay-c"},"content":"                            + \" | \" + formattedDateTime + \"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"techjay-c"},"content":"                } else if (taskType.equals(\"Todo\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"techjay-c"},"content":"                    Todo todo \u003d (Todo) task;","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"techjay-c"},"content":"                    writer.write(\"T \" + \"| \" + statusIcon + \" | \" + todo.description + \"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"techjay-c"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"techjay-c"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"techjay-c"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"techjay-c"},"content":"            System.out.println(\"Error writing to: \" + filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"techjay-c"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"techjay-c"},"content":"    // Solution adapted and inspired by https://stackoverflow.com/questions/3090761/how-to-create-a-new-file-together-with-missing-parent-directories","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"techjay-c"},"content":"    // Solution below adapted and inspired by https://www.guru99.com/buffered-reader-in-java.html","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"techjay-c"},"content":"    // Solution below adapted and inspired by https://chat.openai.com/share/4f6c03e6-99d5-47c0-8887-1762a36b15fb","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"techjay-c"},"content":"     * Loads tasks from the file specified by the file path.","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"techjay-c"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"techjay-c"},"content":"     * @return An ArrayList of Task objects loaded from the file.","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"techjay-c"},"content":"     * @throws IOException If there is an issue reading from the file.","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"techjay-c"},"content":"    static ArrayList\u003cTask\u003e loadTasks() throws IOException {","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"techjay-c"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"techjay-c"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"techjay-c"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"techjay-c"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"techjay-c"},"content":"                // Handling data file to be in a specific folder","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"techjay-c"},"content":"                if (file.getParentFile() !\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"techjay-c"},"content":"                    // Solution below adapted from","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"techjay-c"},"content":"                    // https://www.oreilly.com/library/view/java-cookbook/0596001703/ch10s10.html#:~:text\u003dOf%20the%20two%20methods%20used,%2Fian%2Fbin%22).","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"techjay-c"},"content":"                    file.getParentFile().mkdirs();","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"techjay-c"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"techjay-c"},"content":"                file.createNewFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"techjay-c"},"content":"            } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"techjay-c"},"content":"                BufferedReader reader \u003d new BufferedReader(new FileReader(filePath));","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"techjay-c"},"content":"                String dataToWrite;","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"techjay-c"},"content":"                while ((dataToWrite \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"techjay-c"},"content":"                    System.out.println(dataToWrite); // Debug line","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"techjay-c"},"content":"                    String[] sections \u003d dataToWrite.split(\" \\\\| \");","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"techjay-c"},"content":"                    if (sections.length \u003e\u003d 3) {","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"techjay-c"},"content":"                        String taskType \u003d sections[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"techjay-c"},"content":"                        String taskStatus \u003d sections[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"techjay-c"},"content":"                        String taskDescription \u003d sections[2];","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"techjay-c"},"content":"                        String taskOtherInfo \u003d sections.length \u003e 3 ? sections[3] : \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"techjay-c"},"content":"                        // declares variable of type Task and initialize with null value","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"techjay-c"},"content":"                        Task task \u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"techjay-c"},"content":"                        boolean isDone \u003d taskStatus.equals(\"1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"techjay-c"},"content":"                        switch (taskType) {","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"techjay-c"},"content":"                            case \"E\":","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"techjay-c"},"content":"                                String[] eventParts \u003d taskOtherInfo.trim().split(\"-\");","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"techjay-c"},"content":"                                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMMM d yyyy ha\");","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"techjay-c"},"content":"                                LocalDateTime parsedFromStartDateTime \u003d LocalDateTime.parse(eventParts[0].trim(), formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"techjay-c"},"content":"                                LocalDateTime parsedFromEndDateTime \u003d LocalDateTime.parse(eventParts[1].trim(), formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"techjay-c"},"content":"                                if (eventParts.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"techjay-c"},"content":"                                    task \u003d new Event(taskDescription, parsedFromStartDateTime, parsedFromEndDateTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"techjay-c"},"content":"                                }","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"techjay-c"},"content":"                                break;","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"techjay-c"},"content":"                            case \"D\":","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"techjay-c"},"content":"                                DateTimeFormatter formatter_d \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mma\");","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"techjay-c"},"content":"                                LocalDateTime dateTime_d \u003d LocalDateTime.parse(taskOtherInfo, formatter_d);","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"techjay-c"},"content":"                                task \u003d new Deadline(taskDescription, dateTime_d);","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"techjay-c"},"content":"                                break;","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"techjay-c"},"content":"                            case \"T\":","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"techjay-c"},"content":"                                task \u003d new Todo(taskDescription);","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"techjay-c"},"content":"                                break;","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"techjay-c"},"content":"                        }","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"techjay-c"},"content":"                        if (task !\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"techjay-c"},"content":"                            if (isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"techjay-c"},"content":"                                task.markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"techjay-c"},"content":"                            } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"techjay-c"},"content":"                                task.markAsNotDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"techjay-c"},"content":"                            }","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"techjay-c"},"content":"                            tasks.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"techjay-c"},"content":"                        }","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"techjay-c"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"techjay-c"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"techjay-c"},"content":"                reader.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"techjay-c"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"techjay-c"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"techjay-c"},"content":"            System.out.println(\"Error reading from: \" + filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"techjay-c"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"techjay-c"},"content":"        return tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"techjay-c"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"techjay-c":157}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"techjay-c"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"techjay-c"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"techjay-c"},"content":" * Represents a task in the Duke application.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"techjay-c"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"techjay-c"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"techjay-c"},"content":"     * The type of the task (e.g., TODO, DEADLINE, EVENT).","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"techjay-c"},"content":"    public enum Type {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"techjay-c"},"content":"        TODO,","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"techjay-c"},"content":"        DEADLINE,","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"techjay-c"},"content":"        EVENT,","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"techjay-c"},"content":"        OTHERS","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"techjay-c"},"content":"     * The description of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"techjay-c"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"techjay-c"},"content":"     * Indicates whether the task is marked as done (true) or not done (false).","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"techjay-c"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"techjay-c"},"content":"     * The type of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"techjay-c"},"content":"    protected Type taskType;","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"techjay-c"},"content":"     * Constructs a task with the specified description and task type.","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"techjay-c"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"techjay-c"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"techjay-c"},"content":"     * @param taskType    The type of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"techjay-c"},"content":"    public Task(String description, Type taskType) {","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"techjay-c"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"techjay-c"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"techjay-c"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"techjay-c"},"content":"     * Gets the status icon of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"techjay-c"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"techjay-c"},"content":"     * @return \"X\" if the task is done, \" \" (a space) if the task is not done.","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"techjay-c"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"techjay-c"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"techjay-c"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"techjay-c"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"techjay-c"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"techjay-c"},"content":"     * Marks the task as not done.","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"techjay-c"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"techjay-c"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"techjay-c"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"techjay-c":68}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"techjay-c"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"techjay-c"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"techjay-c"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"techjay-c"},"content":" * Manages a list of tasks in the Duke application.","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"techjay-c"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"techjay-c"},"content":"public class TaskList {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"techjay-c"},"content":"     * The list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"techjay-c"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"techjay-c"},"content":"     * Constructs a new TaskList with an empty list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"techjay-c"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"techjay-c"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"techjay-c"},"content":"     * Adds a task to the list.","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"techjay-c"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"techjay-c"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"techjay-c"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"techjay-c"},"content":"        tasks.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"techjay-c"},"content":"     * Deletes a task from the list.","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"techjay-c"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"techjay-c"},"content":"     * @param task The task to be deleted.","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"techjay-c"},"content":"    public void deleteTask(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"techjay-c"},"content":"        tasks.remove(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"techjay-c"},"content":"     * Sets the tasks in the TaskList to the provided list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"techjay-c"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"techjay-c"},"content":"     * @param tasks The list of tasks to set in the TaskList.","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"techjay-c"},"content":"    // Set the tasks in the duke.TaskList","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"techjay-c"},"content":"    public void setTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"techjay-c"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"techjay-c"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"techjay-c"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"techjay-c"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"techjay-c"},"content":"    public int numTasks() {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"techjay-c"},"content":"        return tasks.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"techjay-c"},"content":"     * Retrieves a task from the list by its index.","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"techjay-c"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"techjay-c"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"techjay-c"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"techjay-c"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"techjay-c"},"content":"        return tasks.get(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"techjay-c"},"content":"     * Returns the list of all tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"techjay-c"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"techjay-c"},"content":"     * @return The list of all tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"techjay-c"},"content":"    public ArrayList\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"techjay-c"},"content":"        return tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"techjay-c"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"techjay-c":79}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"techjay-c"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"techjay-c"},"content":"// Solution below adapted and inspired by https://chat.openai.com/share/7f037351-3be6-4105-b138-77f68d428c84","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"techjay-c"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"techjay-c"},"content":" * Handles user interface-related operations for the Duke application.","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"techjay-c"},"content":" * Provides methods for displaying messages and error messages to the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"techjay-c"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"techjay-c"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"techjay-c"},"content":"    private static final String separators \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"techjay-c"},"content":"    String text1 \u003d \" Hello! I\u0027m Novo\\n\" + \" What can I do for you?\\n\" + separators + \"\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"techjay-c"},"content":"    String text2 \u003d \" Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"techjay-c"},"content":"     * Displays the welcome text to the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"techjay-c"},"content":"    public void displayWelcomeText() {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"techjay-c"},"content":"        System.out.println(separators + \"\\n\" + text1);","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"techjay-c"},"content":"     * Displays the goodbye text to the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"techjay-c"},"content":"    public void displayGoodbyeText() {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"techjay-c"},"content":"        System.out.println(separators + \"\\n\" + text2 + \"\\n\" + separators);","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"techjay-c"},"content":"     * Shows an error message to the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"techjay-c"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"techjay-c"},"content":"     * @param message The error message to display.","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"techjay-c"},"content":"    public void showErrorMessage(String message) {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"techjay-c"},"content":"        System.out.println(separators + \"\\n\" + message + \"\\n\" + separators);","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"techjay-c"},"content":"     * Displays a message when a task is successfully deleted.","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"techjay-c"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"techjay-c"},"content":"     * @param deletedTask         The task that was deleted.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"techjay-c"},"content":"     * @param remainingNumberTasks The number of tasks remaining in the list.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"techjay-c"},"content":"    public void displayDeleteTask(Task deletedTask, int remainingNumberTasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"techjay-c"},"content":"        System.out.println(separators);","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"techjay-c"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\" + \"\\n\" + deletedTask.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"techjay-c"},"content":"        System.out.println(\"Now you have \" + remainingNumberTasks + \" tasks in the list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"techjay-c"},"content":"        System.out.println(separators);","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"techjay-c"},"content":"     * Displays a message when a new task is successfully added.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"techjay-c"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"techjay-c"},"content":"     * @param newTask   The task that was added.","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"techjay-c"},"content":"     * @param newNumber The new total number of tasks in the list.","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"techjay-c"},"content":"    public void displayAddedTask(Task newTask, int newNumber) {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"techjay-c"},"content":"        System.out.println(separators);","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"techjay-c"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\" + \"\\n\" + newTask.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"techjay-c"},"content":"        System.out.println(\"Now you have \" + newNumber + \" tasks in the list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"techjay-c"},"content":"        System.out.println(separators);","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"techjay-c"},"content":"     * Displays the list of tasks to the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"techjay-c"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"techjay-c"},"content":"     * @param taskList The TaskList containing the tasks to be displayed.","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"techjay-c"},"content":"    public void displayTaskList(TaskList taskList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"techjay-c"},"content":"        System.out.println(separators);","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"techjay-c"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"techjay-c"},"content":"        for (int i \u003d 0; i \u003c taskList.numTasks(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"techjay-c"},"content":"            System.out.println((i + 1) + \".\" + taskList.getTask(i).toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"techjay-c"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"techjay-c"},"content":"        System.out.println(separators);","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"techjay-c"},"content":"     * Displays a message when a task is marked as done.","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"techjay-c"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"techjay-c"},"content":"     * @param markedTask The task that was marked as done.","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"techjay-c"},"content":"    public void displayMarked(Task markedTask) {","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"techjay-c"},"content":"        System.out.println(separators);","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"techjay-c"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\" + \"\\n\" + markedTask.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"techjay-c"},"content":"        System.out.println(separators);","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"techjay-c"},"content":"     * Displays a message when a task is marked as not done.","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"techjay-c"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"techjay-c"},"content":"     * @param markedTask The task that was marked as not done.","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"techjay-c"},"content":"    public void displayUnmarked(Task markedTask) {","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"techjay-c"},"content":"        System.out.println(separators);","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"techjay-c"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\" + \"\\n\" + markedTask.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"techjay-c"},"content":"        System.out.println(separators);","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"techjay-c"},"content":"     * Displays an error message for an empty todo description.","lastModifiedDate":"2023-09-03"},{"lineNumber":101,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"techjay-c"},"content":"    public void printToDoException() {","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"techjay-c"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"techjay-c"},"content":"        System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"techjay-c"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"techjay-c"},"content":"     * Displays an error message for an unrecognized command.","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"techjay-c"},"content":"    public void printNoSuchElementException() {","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"techjay-c"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"techjay-c"},"content":"        System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"techjay-c"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":118,"author":{"gitId":"techjay-c"},"content":"     * Displays an error message for an empty event description.","lastModifiedDate":"2023-09-03"},{"lineNumber":119,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":120,"author":{"gitId":"techjay-c"},"content":"    public void printEventException() {","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"techjay-c"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"techjay-c"},"content":"        System.out.println(\"☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"techjay-c"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":127,"author":{"gitId":"techjay-c"},"content":"     * Displays an error message for an empty deadline description.","lastModifiedDate":"2023-09-03"},{"lineNumber":128,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":129,"author":{"gitId":"techjay-c"},"content":"    public void printDeadlineException() {","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"techjay-c"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"techjay-c"},"content":"        System.out.println(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"techjay-c"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":136,"author":{"gitId":"techjay-c"},"content":"     * Displays an error message for an unspecified task to mark.","lastModifiedDate":"2023-09-03"},{"lineNumber":137,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":138,"author":{"gitId":"techjay-c"},"content":"    public void printMarkException() {","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"techjay-c"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"techjay-c"},"content":"        System.out.println(\"☹ OOPS!!! The task to mark must be specified.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"techjay-c"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":145,"author":{"gitId":"techjay-c"},"content":"     * Displays an error message for an unspecified task to unmark.","lastModifiedDate":"2023-09-03"},{"lineNumber":146,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":147,"author":{"gitId":"techjay-c"},"content":"    public void printUnmarkException() {","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"techjay-c"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"techjay-c"},"content":"        System.out.println(\"☹ OOPS!!! The task to unmark must be specified.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"techjay-c"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":154,"author":{"gitId":"techjay-c"},"content":"     * Displays an error message for a deadline task in the wrong format.","lastModifiedDate":"2023-09-03"},{"lineNumber":155,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":156,"author":{"gitId":"techjay-c"},"content":"    public void printDeadlineFormatException() {","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"techjay-c"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"techjay-c"},"content":"        System.out.println(\"☹ OOPS!!! Enter in the format: deadline (task) /by dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"techjay-c"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":163,"author":{"gitId":"techjay-c"},"content":"     * Displays an error message for a event task in the wrong format.","lastModifiedDate":"2023-09-03"},{"lineNumber":164,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":165,"author":{"gitId":"techjay-c"},"content":"    public void printEventFormatException() {","lastModifiedDate":"2023-08-31"},{"lineNumber":166,"author":{"gitId":"techjay-c"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"techjay-c"},"content":"        System.out.println(\"☹ OOPS!!! Enter in the format: \\n event (task) /from yyyy/MM/dd HHmm /to yyyy/MM/dd HHmm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"techjay-c"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":170,"author":{"gitId":"techjay-c"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"techjay-c":170}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"techjay-c"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"techjay-c"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"techjay-c"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"techjay-c"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"techjay-c"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"techjay-c"},"content":"import duke.Command;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"techjay-c"},"content":"import duke.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"techjay-c"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"techjay-c"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"techjay-c"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"techjay-c"},"content":"// Solution below adapted and inspired by https://chat.openai.com/share/7f037351-3be6-4105-b138-77f68d428c84","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"techjay-c"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"techjay-c"},"content":" * Represents a command to add tasks to the task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"techjay-c"},"content":" * This command can handle adding different types of tasks such as Todo, Deadline, and Event.","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"techjay-c"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"techjay-c"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"techjay-c"},"content":"     * Enumerates the types of tasks that can be added.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"techjay-c"},"content":"    public enum TaskType {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"techjay-c"},"content":"        TODO, DEADLINE, EVENT","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"techjay-c"},"content":"    private String taskDescription;","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"techjay-c"},"content":"    private TaskType taskType;","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"techjay-c"},"content":"    private LocalDateTime parsedDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"techjay-c"},"content":"    private LocalDateTime parsedFromDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"techjay-c"},"content":"    private LocalDateTime parsedToDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"techjay-c"},"content":"    // Use Method Overloading for different Commands to be added","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"techjay-c"},"content":"     * Constructs an AddCommand for a Todo task.","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"techjay-c"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"techjay-c"},"content":"     * @param taskType       The type of the task to be added.","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"techjay-c"},"content":"     * @param taskDescription The description of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"techjay-c"},"content":"    public AddCommand(TaskType taskType, String taskDescription) {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"techjay-c"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"techjay-c"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"techjay-c"},"content":"     * Constructs an AddCommand for a Deadline task.","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"techjay-c"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"techjay-c"},"content":"     * @param taskType       The type of the task to be added.","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"techjay-c"},"content":"     * @param taskDescription The description of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"techjay-c"},"content":"     * @param parsedDateTime  The parsed date and time for the deadline.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"techjay-c"},"content":"    public AddCommand(TaskType taskType, String taskDescription, LocalDateTime parsedDateTime) {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"techjay-c"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"techjay-c"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"techjay-c"},"content":"        this.parsedDateTime \u003d parsedDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"techjay-c"},"content":"     * Constructs an AddCommand for an Event task.","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"techjay-c"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"techjay-c"},"content":"     * @param taskType       The type of the task to be added.","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"techjay-c"},"content":"     * @param taskDescription The description of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"techjay-c"},"content":"     * @param parsedFromDate The parsed start date and time for the event.","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"techjay-c"},"content":"     * @param parsedToDate   The parsed end date and time for the event.","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"techjay-c"},"content":"    public AddCommand(TaskType taskType, String taskDescription, LocalDateTime parsedFromDate, LocalDateTime parsedToDate) {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"techjay-c"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"techjay-c"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"techjay-c"},"content":"        this.parsedFromDate \u003d parsedFromDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"techjay-c"},"content":"        this.parsedToDate \u003d parsedToDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"techjay-c"},"content":"     * Executes the AddCommand to add a task to the task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"techjay-c"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"techjay-c"},"content":"     * @param taskList The TaskList containing the list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"techjay-c"},"content":"     * @param ui       The user interface for displaying messages.","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"techjay-c"},"content":"     * @param storage  The storage handler for saving tasks to a file.","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"techjay-c"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"techjay-c"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"techjay-c"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"techjay-c"},"content":"            Task newTask \u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"techjay-c"},"content":"            switch (taskType) {","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"techjay-c"},"content":"                case TODO:","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"techjay-c"},"content":"                    newTask \u003d new Todo(taskDescription);","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"techjay-c"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"techjay-c"},"content":"                case DEADLINE:","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"techjay-c"},"content":"                    newTask \u003d new Deadline(taskDescription, parsedDateTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"techjay-c"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"techjay-c"},"content":"                case EVENT:","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"techjay-c"},"content":"                    newTask \u003d new Event(taskDescription, parsedFromDate, parsedToDate);","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"techjay-c"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"techjay-c"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"techjay-c"},"content":"            taskList.addTask(newTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"techjay-c"},"content":"            ui.displayAddedTask(newTask, taskList.numTasks());","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"techjay-c"},"content":"            storage.saveTasks(taskList.getAllTasks()); // Save the updated task list","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"techjay-c"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"techjay-c"},"content":"            ui.showErrorMessage(\"Error adding task.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"techjay-c"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"techjay-c"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"techjay-c":102}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"techjay-c"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"techjay-c"},"content":"import duke.Command;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"techjay-c"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"techjay-c"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"techjay-c"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"techjay-c"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"techjay-c"},"content":" * Represents a command to exit the Duke application.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"techjay-c"},"content":" * This command displays a goodbye message and terminates the application.","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"techjay-c"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"techjay-c"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"techjay-c"},"content":"     * Executes the ByeCommand.","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"techjay-c"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"techjay-c"},"content":"     * @param taskList The TaskList object that stores the list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"techjay-c"},"content":"     * @param ui       The Ui object responsible for user interface interactions.","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"techjay-c"},"content":"     * @param storage  The Storage object responsible for reading and writing data to a file.","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"techjay-c"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"techjay-c"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"techjay-c"},"content":"        ui.displayGoodbyeText();","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"techjay-c"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"techjay-c":25}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"techjay-c"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"techjay-c"},"content":"import duke.Command;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"techjay-c"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"techjay-c"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"techjay-c"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"techjay-c"},"content":"import duke.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"techjay-c"},"content":"// Solution below adapted and inspired by https://chat.openai.com/share/7f037351-3be6-4105-b138-77f68d428c84","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"techjay-c"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"techjay-c"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"techjay-c"},"content":" * The DeleteCommand is responsible for removing a task from the task list based on its index.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"techjay-c"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"techjay-c"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"techjay-c"},"content":"    private int index;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"techjay-c"},"content":"     * Constructs a DeleteCommand with the specified index.","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"techjay-c"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"techjay-c"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"techjay-c"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"techjay-c"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"techjay-c"},"content":"     * Executes the DeleteCommand.","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"techjay-c"},"content":"     * This method attempts to delete the task at the specified index from the task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"techjay-c"},"content":"     * If the index is valid, the task is deleted, and the task list and storage are updated.","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"techjay-c"},"content":"     * If the index is invalid, an error message is displayed.","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"techjay-c"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"techjay-c"},"content":"     * @param taskList The TaskList object that stores the list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"techjay-c"},"content":"     * @param ui       The Ui object responsible for user interface interactions.","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"techjay-c"},"content":"     * @param storage  The Storage object responsible for reading and writing data to a file.","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"techjay-c"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"techjay-c"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"techjay-c"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"techjay-c"},"content":"            Task taskToDelete \u003d taskList.getTask(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"techjay-c"},"content":"            taskList.deleteTask(taskToDelete);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"techjay-c"},"content":"            ui.displayDeleteTask(taskToDelete, taskList.numTasks());","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"techjay-c"},"content":"            storage.saveTasks(taskList.getAllTasks());","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"techjay-c"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"techjay-c"},"content":"            ui.showErrorMessage(\"Invalid task index.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"techjay-c"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"techjay-c"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"techjay-c":47}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"techjay-c"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"techjay-c"},"content":"import duke.Command;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"techjay-c"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"techjay-c"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"techjay-c"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"techjay-c"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"techjay-c"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"techjay-c"},"content":" * The ListCommand is responsible for displaying the entire list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"techjay-c"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"techjay-c"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"techjay-c"},"content":"     * Executes the ListCommand.","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"techjay-c"},"content":"     * This method displays the list of tasks stored in the TaskList object using the Ui object.","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"techjay-c"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"techjay-c"},"content":"     * @param taskList The TaskList object that stores the list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"techjay-c"},"content":"     * @param ui       The Ui object responsible for user interface interactions.","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"techjay-c"},"content":"     * @param storage  The Storage object responsible for reading and writing data to a file (not used in this command).","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"techjay-c"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"techjay-c"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"techjay-c"},"content":"        ui.displayTaskList(taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"techjay-c"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"techjay-c":26}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"techjay-c"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"techjay-c"},"content":"import duke.Command;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"techjay-c"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"techjay-c"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"techjay-c"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"techjay-c"},"content":"import duke.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"techjay-c"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"techjay-c"},"content":" * Represents a command to mark a task as done in the task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"techjay-c"},"content":" * The MarkCommand is responsible for marking a specific task as completed.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"techjay-c"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"techjay-c"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"techjay-c"},"content":"    private int taskIndex;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"techjay-c"},"content":"     * Constructs a MarkCommand with the specified task index.","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"techjay-c"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"techjay-c"},"content":"     * @param taskIndex The index of the task to be marked as done.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"techjay-c"},"content":"    public MarkCommand(int taskIndex) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"techjay-c"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"techjay-c"},"content":"     * Executes the MarkCommand.","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"techjay-c"},"content":"     * This method marks the task at the specified index as done and updates the task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"techjay-c"},"content":"     * If the index is invalid, an error message is displayed.","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"techjay-c"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"techjay-c"},"content":"     * @param taskList The TaskList object that stores the list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"techjay-c"},"content":"     * @param ui       The Ui object responsible for user interface interactions.","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"techjay-c"},"content":"     * @param storage  The Storage object responsible for reading and writing data to a file.","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"techjay-c"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"techjay-c"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"techjay-c"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"techjay-c"},"content":"            Task taskToMark \u003d taskList.getTask(taskIndex);","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"techjay-c"},"content":"            taskToMark.markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"techjay-c"},"content":"            ui.displayMarked(taskToMark);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"techjay-c"},"content":"            storage.saveTasks(taskList.getAllTasks()); // Save the updated task list","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"techjay-c"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"techjay-c"},"content":"            ui.showErrorMessage(\"Invalid task index.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"techjay-c"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"techjay-c"},"content":"}","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"techjay-c":55}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"techjay-c"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"techjay-c"},"content":"import duke.Command;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"techjay-c"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"techjay-c"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"techjay-c"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"techjay-c"},"content":"import duke.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"techjay-c"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"techjay-c"},"content":" * Represents a command to unmark a task as not done in the task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"techjay-c"},"content":" * The UnmarkCommand is responsible for marking a specific task as not done (incomplete).","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"techjay-c"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"techjay-c"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"techjay-c"},"content":"     * Constructs an UnmarkCommand with the specified task index.","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"techjay-c"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"techjay-c"},"content":"     * @param taskIndex The index of the task to be unmarked (marked as not done).","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"techjay-c"},"content":"    private int taskIndex;","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"techjay-c"},"content":"    public UnmarkCommand(int taskIndex) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"techjay-c"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"techjay-c"},"content":"     * Executes the UnmarkCommand.","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"techjay-c"},"content":"     * This method marks the task at the specified index as not done (incomplete) and updates the task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"techjay-c"},"content":"     * If the index is invalid, an error message is displayed.","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"techjay-c"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"techjay-c"},"content":"     * @param taskList The TaskList object that stores the list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"techjay-c"},"content":"     * @param ui       The Ui object responsible for user interface interactions.","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"techjay-c"},"content":"     * @param storage  The Storage object responsible for reading and writing data to a file.","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"techjay-c"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"techjay-c"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"techjay-c"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"techjay-c"},"content":"            Task tasktoUnmark \u003d taskList.getTask(taskIndex);","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"techjay-c"},"content":"            tasktoUnmark.markAsNotDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"techjay-c"},"content":"            ui.displayUnmarked(tasktoUnmark);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"techjay-c"},"content":"            storage.saveTasks(taskList.getAllTasks()); // Save the updated task list","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"techjay-c"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"techjay-c"},"content":"            ui.showErrorMessage(\"Invalid task index.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"techjay-c"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"techjay-c"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"techjay-c":46}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"techjay-c"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"techjay-c"},"content":"import duke.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"techjay-c"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"techjay-c"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"techjay-c"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"techjay-c"},"content":" * Represents a task with a specific deadline.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"techjay-c"},"content":" * A Deadline task contains a description and a deadline date and time.","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"techjay-c"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"techjay-c"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"techjay-c"},"content":"    public LocalDateTime DateAndTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"techjay-c"},"content":"     * Constructs a Deadline task with the specified description and deadline date and time.","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"techjay-c"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"techjay-c"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"techjay-c"},"content":"     * @param DateAndTime The deadline date and time.","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"techjay-c"},"content":"    public Deadline(String description, LocalDateTime DateAndTime) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"techjay-c"},"content":"        super(description, Type.DEADLINE);","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"techjay-c"},"content":"        this.DateAndTime \u003d DateAndTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"techjay-c"},"content":"     * Returns a string representation of the Deadline task.","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"techjay-c"},"content":"     * The string includes the task type, status icon, description, and deadline.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"techjay-c"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"techjay-c"},"content":"     * @return A formatted string representing the Deadline task.","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"techjay-c"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"techjay-c"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"techjay-c"},"content":"        // eg 2nd Dec 2019 6pm","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"techjay-c"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mma\");","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"techjay-c"},"content":"        return \"[D]\" + \"[\" + getStatusIcon() + \"] \" + description + \" (by: \" + DateAndTime.format(formatter) + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"techjay-c"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"techjay-c":38}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"techjay-c"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"techjay-c"},"content":"import duke.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"techjay-c"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"techjay-c"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"techjay-c"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"techjay-c"},"content":" * Represents an event task that spans a specific time period.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"techjay-c"},"content":" * An Event task contains a description, a start date and time, and an end date and time.","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"techjay-c"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"techjay-c"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"techjay-c"},"content":"    public LocalDateTime fromDateAndTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"techjay-c"},"content":"    public LocalDateTime toDateAndTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"techjay-c"},"content":"     * Constructs an Event task with the specified description, start date and time, and end date and time.","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"techjay-c"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"techjay-c"},"content":"     * @param description     The description of the Event task.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"techjay-c"},"content":"     * @param fromDateAndTime The start date and time of the event.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"techjay-c"},"content":"     * @param toDateAndTime   The end date and time of the event.","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"techjay-c"},"content":"    public Event(String description, LocalDateTime fromDateAndTime, LocalDateTime toDateAndTime) {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"techjay-c"},"content":"        super(description, Type.EVENT);","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"techjay-c"},"content":"        this.fromDateAndTime \u003d fromDateAndTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"techjay-c"},"content":"        this.toDateAndTime \u003d toDateAndTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"techjay-c"},"content":"     * Returns a string representation of the Event task.","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"techjay-c"},"content":"     * The string includes the task type, status icon, description, and event time period.","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"techjay-c"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"techjay-c"},"content":"     * @return A formatted string representing the Event task.","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"techjay-c"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"techjay-c"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"techjay-c"},"content":"        // example Oct 15 2019 2pm","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"techjay-c"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMMM d yyyy ha\");","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"techjay-c"},"content":"        return \"[E]\" + \"[\" + getStatusIcon() + \"] \" + description + \" (from: \" + fromDateAndTime.format(formatter) +","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"techjay-c"},"content":"                \" to: \" + toDateAndTime.format(formatter) + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"techjay-c"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"techjay-c":43}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"techjay-c"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"techjay-c"},"content":"import duke.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"techjay-c"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"techjay-c"},"content":" * Represents a to-do task with a description.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"techjay-c"},"content":" * A Todo task contains a description of the task to be done.","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"techjay-c"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"techjay-c"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"techjay-c"},"content":"     * Constructs a Todo task with the specified description.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"techjay-c"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"techjay-c"},"content":"     * @param description The description of the Todo task.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"techjay-c"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"techjay-c"},"content":"        super(description, Type.TODO);","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"techjay-c"},"content":"     * Returns a string representation of the Todo task.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"techjay-c"},"content":"     * The string includes the task type, status icon, and description.","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"techjay-c"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"techjay-c"},"content":"     * @return A formatted string representing the Todo task.","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"techjay-c"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"techjay-c"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"techjay-c"},"content":"        return \"[T]\" + \"[\" + getStatusIcon() + \"]\" + \" \" + description;","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"techjay-c"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"techjay-c":30}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"techjay-c"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"techjay-c"},"content":"import static duke.Task.Type.TODO;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"techjay-c"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"techjay-c"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"techjay-c"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"techjay-c"},"content":" * Test cases for the TaskList class.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"techjay-c"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"techjay-c"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"techjay-c"},"content":"     * Tests adding a task to the TaskList.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"techjay-c"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"techjay-c"},"content":"    public void testAddTask() {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"techjay-c"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"techjay-c"},"content":"        Task task \u003d new Task(\"Test Task\", TODO);","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"techjay-c"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"techjay-c"},"content":"        assertEquals(1, taskList.numTasks());","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"techjay-c"},"content":"        assertEquals(task, taskList.getTask(0));","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"techjay-c"},"content":"     * Tests marking a task as done.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"techjay-c"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"techjay-c"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"techjay-c"},"content":"        Task task \u003d new Task(\"Sample Task\", Task.Type.TODO);","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"techjay-c"},"content":"        assertFalse(task.isDone);","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"techjay-c"},"content":"        task.markAsDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"techjay-c"},"content":"        assertTrue(task.isDone);","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"techjay-c"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"techjay-c":35}},{"path":"src/test/java/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"techjay-c"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"techjay-c"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"techjay-c"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"techjay-c"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"techjay-c"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"techjay-c"},"content":" * Test cases for the Todo class.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"techjay-c"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"techjay-c"},"content":"public class ToDoTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"techjay-c"},"content":"     * Tests the toString method of Todo when it\u0027s not done and when it\u0027s done.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"techjay-c"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"techjay-c"},"content":"    public void testTodoToString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"techjay-c"},"content":"        Todo todo \u003d new Todo(\"Sample Todo\");","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"techjay-c"},"content":"        assertEquals(\"[T][ ] Sample Todo\", todo.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"techjay-c"},"content":"        todo.markAsDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"techjay-c"},"content":"        assertEquals(\"[T][X] Sample Todo\", todo.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"techjay-c"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"techjay-c":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"techjay-c"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"techjay-c"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"techjay-c"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"techjay-c"},"content":"todo","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"techjay-c"},"content":"blah","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"techjay-c"},"content":"todo join sports club","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"techjay-c"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"techjay-c"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"techjay-c"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"techjay-c"},"content":"mark 4","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"techjay-c"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"techjay-c"},"content":"delete 3","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"techjay-c":12}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"techjay-c"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":33,"techjay-c":1}}]
