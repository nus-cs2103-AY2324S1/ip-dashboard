[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"Dioclei"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"Dioclei"},"content":"checkstyle {","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"Dioclei"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"Dioclei"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"Dioclei"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"Dioclei"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"Dioclei"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"Dioclei"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"Dioclei"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"Dioclei"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"Dioclei"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"Dioclei"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"Dioclei"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"Dioclei"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"Dioclei"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"Dioclei"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"Dioclei"},"content":"    mainClass.set(\"fluke.Launcher\")","lastModifiedDate":"2023-09-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"Dioclei"},"content":"    archiveBaseName \u003d \"fluke\"","lastModifiedDate":"2023-09-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Dioclei":22,"-":40}},{"path":"src/main/java/fluke/Fluke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dioclei"},"content":"package fluke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Dioclei"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"Dioclei"},"content":"import fluke.exceptions.FlukeException;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Dioclei"},"content":"import fluke.exceptions.InvalidInputException;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Dioclei"},"content":"import fluke.tasks.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Dioclei"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Dioclei"},"content":" * Fluke is a chatbot which gets your commands right by fluke. Fluke\u0027s main goal is to help manage tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Dioclei"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Dioclei"},"content":"public class Fluke {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"Dioclei"},"content":"    private static final String SAVE_FILE_NAME \u003d \"fluke.txt\";","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Dioclei"},"content":"     * Enumerates all possible commands.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Dioclei"},"content":"    public enum Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Dioclei"},"content":"        BYE, LIST, MARK, UNMARK, DELETE, TODO, DEADLINE, EVENT, FIND","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Dioclei"},"content":"    private final Ui ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Dioclei"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Dioclei"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Dioclei"},"content":"     * Constructs a Fluke chatbot.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Dioclei"},"content":"     * @param filePath file path in which Fluke stores its tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"Dioclei"},"content":"    public Fluke(String filePath) throws FlukeException {","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"Dioclei"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"Dioclei"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"Dioclei"},"content":"        tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"Dioclei"},"content":"     * Constructs a Fluke chatbot.","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"Dioclei"},"content":"     * @throws FlukeException when an error is encountered during the creation of a Fluke chatbot.","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"Dioclei"},"content":"    public Fluke() throws FlukeException {","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"Dioclei"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"Dioclei"},"content":"        this.storage \u003d new Storage(SAVE_FILE_NAME);","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"Dioclei"},"content":"        tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"Dioclei"},"content":"    public String getGreeting() {","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"Dioclei"},"content":"        return this.ui.getGreeting();","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"Dioclei"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"Dioclei"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"Dioclei"},"content":"            Command commandType \u003d Parser.parseCommand(input);","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"Dioclei"},"content":"            switch (commandType) {","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"Dioclei"},"content":"            case BYE:","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"Dioclei"},"content":"                return this.ui.getBye();","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"Dioclei"},"content":"            case LIST:","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"Dioclei"},"content":"                return this.ui.getListOfTasks(tasks);","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"Dioclei"},"content":"            case FIND:","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"Dioclei"},"content":"                return findTask(input);","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"Dioclei"},"content":"            case MARK:","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"Dioclei"},"content":"            case UNMARK:","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"Dioclei"},"content":"            case DELETE:","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"Dioclei"},"content":"            case TODO:","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"Dioclei"},"content":"            case DEADLINE:","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"Dioclei"},"content":"            case EVENT:","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"Dioclei"},"content":"                return changeTodoList(commandType, input);","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"Dioclei"},"content":"            default:","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"Dioclei"},"content":"                throw new InvalidInputException();","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"Dioclei"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"Dioclei"},"content":"        } catch (FlukeException d) {","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"Dioclei"},"content":"            return this.ui.getError(d.getMessage());","lastModifiedDate":"2023-09-09"},{"lineNumber":72,"author":{"gitId":"Dioclei"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"Dioclei"},"content":"     * Tells Fluke to add a Todo to its tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"Dioclei"},"content":"     * @param command Command given to Fluke.","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"Dioclei"},"content":"     * @throws FlukeException if an error occurs while adding the task, for instance, with invalid inputs.","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"Dioclei"},"content":"    public String addTodo(String command) throws FlukeException {","lastModifiedDate":"2023-09-09"},{"lineNumber":81,"author":{"gitId":"Dioclei"},"content":"        String parsedDescription \u003d Parser.parseTodoCommand(command);","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"Dioclei"},"content":"        Task taskAdded \u003d this.tasks.addTodo(parsedDescription);","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"Dioclei"},"content":"        return this.ui.getTaskAdded(taskAdded, tasks);","lastModifiedDate":"2023-09-09"},{"lineNumber":84,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"Dioclei"},"content":"     * Tells Fluke to add a Deadline to its tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"Dioclei"},"content":"     * @param command Command given to Fluke.","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"Dioclei"},"content":"     * @throws FlukeException if an error occurs while adding the task, for instance, with invalid inputs.","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"Dioclei"},"content":"    private String addDeadline(String command) throws FlukeException {","lastModifiedDate":"2023-09-09"},{"lineNumber":92,"author":{"gitId":"Dioclei"},"content":"        String[] parsedCommand \u003d Parser.parseDeadlineCommand(command);","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"Dioclei"},"content":"        String description \u003d parsedCommand[0];","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"Dioclei"},"content":"        String byDate \u003d parsedCommand[1];","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"Dioclei"},"content":"        Task taskAdded \u003d this.tasks.addDeadline(description, byDate);","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"Dioclei"},"content":"        return this.ui.getTaskAdded(taskAdded, tasks);","lastModifiedDate":"2023-09-09"},{"lineNumber":97,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"Dioclei"},"content":"     * Tells Fluke to add an Event to its tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"Dioclei"},"content":"     * @param command Command given to Fluke.","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"Dioclei"},"content":"     * @throws FlukeException if an error occurs while adding the task, for instance, with invalid inputs.","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"Dioclei"},"content":"    private String addEvent(String command) throws FlukeException {","lastModifiedDate":"2023-09-09"},{"lineNumber":105,"author":{"gitId":"Dioclei"},"content":"        String[] parsedCommand \u003d Parser.parseEventCommand(command);","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"Dioclei"},"content":"        String description \u003d parsedCommand[0];","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"Dioclei"},"content":"        String fromDate \u003d parsedCommand[1];","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"Dioclei"},"content":"        String toDate \u003d parsedCommand[2];","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"Dioclei"},"content":"        Task taskAdded \u003d this.tasks.addEvent(description, fromDate, toDate);","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"Dioclei"},"content":"        return this.ui.getTaskAdded(taskAdded, tasks);","lastModifiedDate":"2023-09-09"},{"lineNumber":111,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"Dioclei"},"content":"     * Tells Fluke to mark a task as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"Dioclei"},"content":"     * @param command Command given to Fluke.","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"Dioclei"},"content":"     * @throws FlukeException if an error occurs while marking a task as done, for instance, with invalid inputs.","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"Dioclei"},"content":"    private String markTaskAsDone(String command) throws FlukeException {","lastModifiedDate":"2023-09-09"},{"lineNumber":119,"author":{"gitId":"Dioclei"},"content":"        int index \u003d Parser.parseMarkAsDoneCommand(command);","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"Dioclei"},"content":"        Task taskMarked \u003d tasks.markTaskAsDone(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"Dioclei"},"content":"        return this.ui.getTaskMarkedAsDone(taskMarked);","lastModifiedDate":"2023-09-09"},{"lineNumber":122,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"Dioclei"},"content":"     * Tells Fluke to mark a task as not done.","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"Dioclei"},"content":"     * @param command Command given to Fluke.","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"Dioclei"},"content":"     * @throws FlukeException if an error occurs while marking a task as not done, for instance, with invalid inputs.","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"Dioclei"},"content":"    private String markTaskAsUndone(String command) throws FlukeException {","lastModifiedDate":"2023-09-09"},{"lineNumber":130,"author":{"gitId":"Dioclei"},"content":"        int index \u003d Parser.parseMarkAsUndoneCommand(command);","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"Dioclei"},"content":"        Task taskMarked \u003d tasks.markTaskAsUndone(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"Dioclei"},"content":"        return this.ui.getTaskMarkedAsUndone(taskMarked);","lastModifiedDate":"2023-09-09"},{"lineNumber":133,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":135,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"Dioclei"},"content":"     * Tells Fluke to delete a task.","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"Dioclei"},"content":"     * @param command Command given to Fluke.","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"Dioclei"},"content":"     * @throws FlukeException if an error occurs while deleting a task, for instance, with invalid inputs.","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"Dioclei"},"content":"    private String deleteTask(String command) throws FlukeException {","lastModifiedDate":"2023-09-09"},{"lineNumber":141,"author":{"gitId":"Dioclei"},"content":"        int index \u003d Parser.parseDeleteCommand(command);","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"Dioclei"},"content":"        Task deleted \u003d tasks.deleteTask(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"Dioclei"},"content":"        return this.ui.getTaskDeleted(deleted, tasks);","lastModifiedDate":"2023-09-09"},{"lineNumber":144,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":146,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"Dioclei"},"content":"     * Fluke attempts to find tasks with the corresponding keyword.","lastModifiedDate":"2023-09-02"},{"lineNumber":148,"author":{"gitId":"Dioclei"},"content":"     * @param command the command given","lastModifiedDate":"2023-09-02"},{"lineNumber":149,"author":{"gitId":"Dioclei"},"content":"     * @throws InvalidInputException if there is no keyword given.","lastModifiedDate":"2023-09-02"},{"lineNumber":150,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":151,"author":{"gitId":"Dioclei"},"content":"    private String findTask(String command) throws InvalidInputException {","lastModifiedDate":"2023-09-09"},{"lineNumber":152,"author":{"gitId":"Dioclei"},"content":"        String keyword \u003d Parser.parseFindCommand(command);","lastModifiedDate":"2023-09-02"},{"lineNumber":153,"author":{"gitId":"Dioclei"},"content":"        return this.ui.getTasksWithKeyword(this.tasks.findTask(keyword));","lastModifiedDate":"2023-09-09"},{"lineNumber":154,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":155,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":156,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":157,"author":{"gitId":"Dioclei"},"content":"     * Helper function for additional logic related to changing the list.","lastModifiedDate":"2023-09-02"},{"lineNumber":158,"author":{"gitId":"Dioclei"},"content":"     * @param commandType type of command","lastModifiedDate":"2023-09-02"},{"lineNumber":159,"author":{"gitId":"Dioclei"},"content":"     * @param command the content in the command","lastModifiedDate":"2023-09-02"},{"lineNumber":160,"author":{"gitId":"Dioclei"},"content":"     * @throws FlukeException an exception related to operations with fluke.Fluke","lastModifiedDate":"2023-09-02"},{"lineNumber":161,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":162,"author":{"gitId":"Dioclei"},"content":"    private String changeTodoList(Command commandType, String command) throws FlukeException {","lastModifiedDate":"2023-09-09"},{"lineNumber":163,"author":{"gitId":"Dioclei"},"content":"        // 1. make changes to the list","lastModifiedDate":"2023-09-02"},{"lineNumber":164,"author":{"gitId":"Dioclei"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-09-09"},{"lineNumber":165,"author":{"gitId":"Dioclei"},"content":"        switch (commandType) {","lastModifiedDate":"2023-09-02"},{"lineNumber":166,"author":{"gitId":"Dioclei"},"content":"        case MARK:","lastModifiedDate":"2023-09-02"},{"lineNumber":167,"author":{"gitId":"Dioclei"},"content":"            response \u003d markTaskAsDone(command);","lastModifiedDate":"2023-09-09"},{"lineNumber":168,"author":{"gitId":"Dioclei"},"content":"            break;","lastModifiedDate":"2023-09-02"},{"lineNumber":169,"author":{"gitId":"Dioclei"},"content":"        case UNMARK:","lastModifiedDate":"2023-09-02"},{"lineNumber":170,"author":{"gitId":"Dioclei"},"content":"            response \u003d markTaskAsUndone(command);","lastModifiedDate":"2023-09-09"},{"lineNumber":171,"author":{"gitId":"Dioclei"},"content":"            break;","lastModifiedDate":"2023-09-02"},{"lineNumber":172,"author":{"gitId":"Dioclei"},"content":"        case DELETE:","lastModifiedDate":"2023-09-02"},{"lineNumber":173,"author":{"gitId":"Dioclei"},"content":"            response \u003d deleteTask(command);","lastModifiedDate":"2023-09-09"},{"lineNumber":174,"author":{"gitId":"Dioclei"},"content":"            break;","lastModifiedDate":"2023-09-02"},{"lineNumber":175,"author":{"gitId":"Dioclei"},"content":"        case TODO:","lastModifiedDate":"2023-09-02"},{"lineNumber":176,"author":{"gitId":"Dioclei"},"content":"            response \u003d addTodo(command);","lastModifiedDate":"2023-09-09"},{"lineNumber":177,"author":{"gitId":"Dioclei"},"content":"            break;","lastModifiedDate":"2023-09-02"},{"lineNumber":178,"author":{"gitId":"Dioclei"},"content":"        case DEADLINE:","lastModifiedDate":"2023-09-02"},{"lineNumber":179,"author":{"gitId":"Dioclei"},"content":"            response \u003d addDeadline(command);","lastModifiedDate":"2023-09-09"},{"lineNumber":180,"author":{"gitId":"Dioclei"},"content":"            break;","lastModifiedDate":"2023-09-02"},{"lineNumber":181,"author":{"gitId":"Dioclei"},"content":"        case EVENT:","lastModifiedDate":"2023-09-02"},{"lineNumber":182,"author":{"gitId":"Dioclei"},"content":"            response \u003d addEvent(command);","lastModifiedDate":"2023-09-09"},{"lineNumber":183,"author":{"gitId":"Dioclei"},"content":"            break;","lastModifiedDate":"2023-09-02"},{"lineNumber":184,"author":{"gitId":"Dioclei"},"content":"        default:","lastModifiedDate":"2023-09-02"},{"lineNumber":185,"author":{"gitId":"Dioclei"},"content":"            // should not occur","lastModifiedDate":"2023-09-02"},{"lineNumber":186,"author":{"gitId":"Dioclei"},"content":"            throw new FlukeException(\"An unknown error has occurred.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":187,"author":{"gitId":"Dioclei"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":188,"author":{"gitId":"Dioclei"},"content":"        // 2. save to file","lastModifiedDate":"2023-09-02"},{"lineNumber":189,"author":{"gitId":"Dioclei"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":190,"author":{"gitId":"Dioclei"},"content":"            this.storage.save(tasks.getListOfTasks());","lastModifiedDate":"2023-09-02"},{"lineNumber":191,"author":{"gitId":"Dioclei"},"content":"        } catch (IOException i) {","lastModifiedDate":"2023-09-02"},{"lineNumber":192,"author":{"gitId":"Dioclei"},"content":"            throw new FlukeException(i.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":193,"author":{"gitId":"Dioclei"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":194,"author":{"gitId":"Dioclei"},"content":"        // 3. return response","lastModifiedDate":"2023-09-09"},{"lineNumber":195,"author":{"gitId":"Dioclei"},"content":"        return response;","lastModifiedDate":"2023-09-09"},{"lineNumber":196,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":197,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"Dioclei":197}},{"path":"src/main/java/fluke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dioclei"},"content":"package fluke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"Dioclei"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"Dioclei"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"Dioclei"},"content":" * Starting point for Fluke program. Launches both the internal Fluke program and the Fluke GUI.","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"Dioclei"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"Dioclei"},"content":"public class Launcher {","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"Dioclei"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"Dioclei"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"Dioclei":11}},{"path":"src/main/java/fluke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dioclei"},"content":"package fluke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"Dioclei"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"Dioclei"},"content":"import fluke.exceptions.FlukeException;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"Dioclei"},"content":"import fluke.ui.MainWindow;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"Dioclei"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"Dioclei"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"Dioclei"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"Dioclei"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"Dioclei"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"Dioclei"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"Dioclei"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"Dioclei"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"Dioclei"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"Dioclei"},"content":"    private Fluke fluke;","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"Dioclei"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"Dioclei"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"Dioclei"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"Dioclei"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"Dioclei"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"Dioclei"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"Dioclei"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"Dioclei"},"content":"            fluke \u003d new Fluke();","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"Dioclei"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setFlukeAndGreetUser(fluke);","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"Dioclei"},"content":"            stage.show();","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"Dioclei"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"Dioclei"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"Dioclei"},"content":"        } catch (FlukeException f) {","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"Dioclei"},"content":"            System.out.println(f.getMessage());","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"Dioclei"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"Dioclei":36}},{"path":"src/main/java/fluke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dioclei"},"content":"package fluke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Dioclei"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"Dioclei"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"Dioclei"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"Dioclei"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"Dioclei"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"Dioclei"},"content":"import fluke.exceptions.EmptyDescriptionException;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Dioclei"},"content":"import fluke.exceptions.FlukeException;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Dioclei"},"content":"import fluke.exceptions.InvalidInputException;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Dioclei"},"content":"import fluke.exceptions.SaveFileParsingException;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Dioclei"},"content":"import fluke.tasks.Deadline;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Dioclei"},"content":"import fluke.tasks.Event;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Dioclei"},"content":"import fluke.tasks.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Dioclei"},"content":"import fluke.tasks.Todo;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Dioclei"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Dioclei"},"content":" * Handles parsing for Fluke.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Dioclei"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Dioclei"},"content":"public class Parser {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Dioclei"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG);","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Dioclei"},"content":"     * Parses a command (input as a string by the user) into an Enum value","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Dioclei"},"content":"     * @param command Command to be parsed","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Dioclei"},"content":"     * @return a Command corresponding to the command given.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Dioclei"},"content":"     * @throws InvalidInputException if the command given is invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"Dioclei"},"content":"    public static Fluke.Command parseCommand(String command) throws InvalidInputException {","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"Dioclei"},"content":"        if (command.equals(\"bye\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"Dioclei"},"content":"            return Fluke.Command.BYE;","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"Dioclei"},"content":"        } else if (command.equals(\"list\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"Dioclei"},"content":"            return Fluke.Command.LIST;","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"Dioclei"},"content":"        } else if (command.startsWith(\"mark\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"Dioclei"},"content":"            return Fluke.Command.MARK;","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"Dioclei"},"content":"        } else if (command.startsWith(\"unmark\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"Dioclei"},"content":"            return Fluke.Command.UNMARK;","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"Dioclei"},"content":"        } else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"Dioclei"},"content":"            return Fluke.Command.DELETE;","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"Dioclei"},"content":"        } else if (command.startsWith(\"todo\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"Dioclei"},"content":"            return Fluke.Command.TODO;","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"Dioclei"},"content":"        } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"Dioclei"},"content":"            return Fluke.Command.DEADLINE;","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"Dioclei"},"content":"        } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"Dioclei"},"content":"            return Fluke.Command.EVENT;","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"Dioclei"},"content":"        } else if (command.startsWith(\"find\")) {","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"Dioclei"},"content":"            return Fluke.Command.FIND;","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"Dioclei"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"Dioclei"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"Dioclei"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"Dioclei"},"content":"     * Parses the task from a line in the save file corresponding to a task.","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"Dioclei"},"content":"     * @param taskString Line in the save file","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"Dioclei"},"content":"     * @return a Task corresponding to the line.","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"Dioclei"},"content":"     * @throws FlukeException if the line is invalid, for instance if the save file is tampered with or corrupted.","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"Dioclei"},"content":"    public static Task parseTask(String taskString) throws FlukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"Dioclei"},"content":"        Fluke.Command taskType;","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"Dioclei"},"content":"        boolean isMarked;","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"Dioclei"},"content":"        // parse type","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"Dioclei"},"content":"        Pattern typePattern \u003d Pattern.compile(\"\\\\[[TDE]]\");","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"Dioclei"},"content":"        Matcher typeMatcher \u003d typePattern.matcher(taskString);","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"Dioclei"},"content":"        boolean typeIsFound \u003d typeMatcher.find();","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"Dioclei"},"content":"        if (!typeIsFound) {","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"Dioclei"},"content":"            throw new SaveFileParsingException();","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"Dioclei"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"Dioclei"},"content":"        switch (typeMatcher.group()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"Dioclei"},"content":"        case \"[T]\":","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"Dioclei"},"content":"            taskType \u003d Fluke.Command.TODO;","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"Dioclei"},"content":"            break;","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"Dioclei"},"content":"        case \"[D]\":","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"Dioclei"},"content":"            taskType \u003d Fluke.Command.DEADLINE;","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"Dioclei"},"content":"            break;","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"Dioclei"},"content":"        case \"[E]\":","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"Dioclei"},"content":"            taskType \u003d Fluke.Command.EVENT;","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"Dioclei"},"content":"            break;","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"Dioclei"},"content":"        default:","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"Dioclei"},"content":"            throw new SaveFileParsingException();","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"Dioclei"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"Dioclei"},"content":"        // parse mark","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"Dioclei"},"content":"        Pattern markPattern \u003d Pattern.compile(\"\\\\[[X ]]\");","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"Dioclei"},"content":"        Matcher markMatcher \u003d markPattern.matcher(taskString);","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"Dioclei"},"content":"        boolean markIsFound \u003d markMatcher.find();","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"Dioclei"},"content":"        if (!markIsFound) {","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"Dioclei"},"content":"            throw new SaveFileParsingException();","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"Dioclei"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"Dioclei"},"content":"        String mark \u003d markMatcher.group();","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"Dioclei"},"content":"        switch (mark) {","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"Dioclei"},"content":"        case \"[ ]\":","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"Dioclei"},"content":"            isMarked \u003d false;","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"Dioclei"},"content":"            break;","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"Dioclei"},"content":"        case \"[X]\":","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"Dioclei"},"content":"            isMarked \u003d true;","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"Dioclei"},"content":"            break;","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"Dioclei"},"content":"        default:","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"Dioclei"},"content":"            throw new SaveFileParsingException();","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"Dioclei"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"Dioclei"},"content":"        String taskDesc \u003d taskString.substring(7);","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"Dioclei"},"content":"        if (taskType \u003d\u003d Fluke.Command.TODO) {","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"Dioclei"},"content":"            return new Todo(taskDesc, isMarked);","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"Dioclei"},"content":"        } else if (taskType \u003d\u003d Fluke.Command.DEADLINE) {","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"Dioclei"},"content":"            // parse by date","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"Dioclei"},"content":"            int bracketStartIndex \u003d taskDesc.indexOf(\u0027(\u0027);","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"Dioclei"},"content":"            int bracketEndIndex \u003d taskDesc.indexOf(\u0027)\u0027);","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"Dioclei"},"content":"            if (bracketStartIndex \u003c 0 || bracketEndIndex \u003c 0) {","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"Dioclei"},"content":"                throw new SaveFileParsingException();","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"Dioclei"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"Dioclei"},"content":"            String desc \u003d taskDesc.substring(0, bracketStartIndex).trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"Dioclei"},"content":"            String by \u003d taskDesc.substring(bracketStartIndex + 4, bracketEndIndex).trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"Dioclei"},"content":"            LocalDate date \u003d LocalDate.parse(by, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"Dioclei"},"content":"            return new Deadline(desc, isMarked, date.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"Dioclei"},"content":"        } else if (taskType \u003d\u003d Fluke.Command.EVENT) {","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"Dioclei"},"content":"            int bracketStartIndex \u003d taskDesc.indexOf(\u0027(\u0027);","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"Dioclei"},"content":"            if (bracketStartIndex \u003c 0) {","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"Dioclei"},"content":"                throw new SaveFileParsingException();","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"Dioclei"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"Dioclei"},"content":"            String desc \u003d taskDesc.substring(0, bracketStartIndex).trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"Dioclei"},"content":"            // parse from date","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"Dioclei"},"content":"            Pattern fromPattern \u003d Pattern.compile(\"from:.+to:\");","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"Dioclei"},"content":"            Matcher fromMatcher \u003d fromPattern.matcher(taskDesc);","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"Dioclei"},"content":"            boolean fromDateIsFound \u003d fromMatcher.find();","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"Dioclei"},"content":"            if (!fromDateIsFound) {","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"Dioclei"},"content":"                throw new SaveFileParsingException();","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"Dioclei"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"Dioclei"},"content":"            String from \u003d fromMatcher.group().substring(5).replaceFirst(\"to:\", \"\").trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"Dioclei"},"content":"            LocalDate fromDate \u003d LocalDate.parse(from, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"Dioclei"},"content":"            // parse to date","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"Dioclei"},"content":"            Pattern toPattern \u003d Pattern.compile(\"to:.+\\\\)\");","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"Dioclei"},"content":"            Matcher toMatcher \u003d toPattern.matcher(taskDesc);","lastModifiedDate":"2023-09-02"},{"lineNumber":135,"author":{"gitId":"Dioclei"},"content":"            boolean toDateIsFound \u003d toMatcher.find();","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"Dioclei"},"content":"            if (!toDateIsFound) {","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"Dioclei"},"content":"                throw new SaveFileParsingException();","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"Dioclei"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"Dioclei"},"content":"            String to \u003d toMatcher.group().substring(3).replaceFirst(\"\\\\)\", \"\").trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"Dioclei"},"content":"            LocalDate toDate \u003d LocalDate.parse(to, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-09-02"},{"lineNumber":141,"author":{"gitId":"Dioclei"},"content":"            return new Event(desc, isMarked, fromDate.toString(), toDate.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"Dioclei"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"Dioclei"},"content":"        throw new SaveFileParsingException();","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":146,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"Dioclei"},"content":"     * Parses a Todo command.","lastModifiedDate":"2023-09-02"},{"lineNumber":148,"author":{"gitId":"Dioclei"},"content":"     * @param command Command given by the user","lastModifiedDate":"2023-09-02"},{"lineNumber":149,"author":{"gitId":"Dioclei"},"content":"     * @return the description of the todo task.","lastModifiedDate":"2023-09-02"},{"lineNumber":150,"author":{"gitId":"Dioclei"},"content":"     * @throws FlukeException if the description given is empty.","lastModifiedDate":"2023-09-02"},{"lineNumber":151,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":152,"author":{"gitId":"Dioclei"},"content":"    public static String parseTodoCommand(String command) throws FlukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":153,"author":{"gitId":"Dioclei"},"content":"        if (command.length() \u003c\u003d 5) {","lastModifiedDate":"2023-09-02"},{"lineNumber":154,"author":{"gitId":"Dioclei"},"content":"            // command is too short, description is invalid","lastModifiedDate":"2023-09-02"},{"lineNumber":155,"author":{"gitId":"Dioclei"},"content":"            throw new EmptyDescriptionException();","lastModifiedDate":"2023-09-02"},{"lineNumber":156,"author":{"gitId":"Dioclei"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":157,"author":{"gitId":"Dioclei"},"content":"        return command.substring(5);","lastModifiedDate":"2023-09-02"},{"lineNumber":158,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":159,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":160,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":161,"author":{"gitId":"Dioclei"},"content":"     * Parses and validates a Deadline command","lastModifiedDate":"2023-09-02"},{"lineNumber":162,"author":{"gitId":"Dioclei"},"content":"     * @param command Command given by the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":163,"author":{"gitId":"Dioclei"},"content":"     * @return a String array containing at 0: description, 1: (String) by date","lastModifiedDate":"2023-09-02"},{"lineNumber":164,"author":{"gitId":"Dioclei"},"content":"     * @throws FlukeException if the description given is invalid, or if the by date given is invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":165,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":166,"author":{"gitId":"Dioclei"},"content":"    public static String[] parseDeadlineCommand(String command) throws FlukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":167,"author":{"gitId":"Dioclei"},"content":"        if (command.length() \u003c\u003d 9) {","lastModifiedDate":"2023-09-02"},{"lineNumber":168,"author":{"gitId":"Dioclei"},"content":"            // command is too short, description is invalid","lastModifiedDate":"2023-09-02"},{"lineNumber":169,"author":{"gitId":"Dioclei"},"content":"            throw new EmptyDescriptionException();","lastModifiedDate":"2023-09-02"},{"lineNumber":170,"author":{"gitId":"Dioclei"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":171,"author":{"gitId":"Dioclei"},"content":"        String str \u003d command.substring(9);","lastModifiedDate":"2023-09-02"},{"lineNumber":172,"author":{"gitId":"Dioclei"},"content":"        int byIndex \u003d str.indexOf(\"/by\");","lastModifiedDate":"2023-09-02"},{"lineNumber":173,"author":{"gitId":"Dioclei"},"content":"        if (byIndex \u003c 0) {","lastModifiedDate":"2023-09-02"},{"lineNumber":174,"author":{"gitId":"Dioclei"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2023-09-02"},{"lineNumber":175,"author":{"gitId":"Dioclei"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":176,"author":{"gitId":"Dioclei"},"content":"        String description \u003d str.substring(0, byIndex - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":177,"author":{"gitId":"Dioclei"},"content":"        String by \u003d str.substring(byIndex + 4);","lastModifiedDate":"2023-09-02"},{"lineNumber":178,"author":{"gitId":"Dioclei"},"content":"        return new String[]{description, by};","lastModifiedDate":"2023-09-02"},{"lineNumber":179,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":180,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":181,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":182,"author":{"gitId":"Dioclei"},"content":"     * Parses and validates an Event command.","lastModifiedDate":"2023-09-02"},{"lineNumber":183,"author":{"gitId":"Dioclei"},"content":"     * @param command Command given by the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":184,"author":{"gitId":"Dioclei"},"content":"     * @return a String array containing at 0: description, 1: (String) from date 2: to date.","lastModifiedDate":"2023-09-02"},{"lineNumber":185,"author":{"gitId":"Dioclei"},"content":"     * @throws FlukeException if any of the inputs are invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":186,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":187,"author":{"gitId":"Dioclei"},"content":"    public static String[] parseEventCommand(String command) throws FlukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":188,"author":{"gitId":"Dioclei"},"content":"        if (command.length() \u003c\u003d 6) {","lastModifiedDate":"2023-09-02"},{"lineNumber":189,"author":{"gitId":"Dioclei"},"content":"            // command is too short, description is invalid","lastModifiedDate":"2023-09-02"},{"lineNumber":190,"author":{"gitId":"Dioclei"},"content":"            throw new EmptyDescriptionException();","lastModifiedDate":"2023-09-02"},{"lineNumber":191,"author":{"gitId":"Dioclei"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":192,"author":{"gitId":"Dioclei"},"content":"        String str \u003d command.substring(6);","lastModifiedDate":"2023-09-02"},{"lineNumber":193,"author":{"gitId":"Dioclei"},"content":"        int fromIndex \u003d str.indexOf(\"/from\");","lastModifiedDate":"2023-09-02"},{"lineNumber":194,"author":{"gitId":"Dioclei"},"content":"        int toIndex \u003d str.indexOf(\"/to\");","lastModifiedDate":"2023-09-02"},{"lineNumber":195,"author":{"gitId":"Dioclei"},"content":"        if (fromIndex \u003c 0 || toIndex \u003c 0) {","lastModifiedDate":"2023-09-02"},{"lineNumber":196,"author":{"gitId":"Dioclei"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2023-09-02"},{"lineNumber":197,"author":{"gitId":"Dioclei"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":198,"author":{"gitId":"Dioclei"},"content":"        String description \u003d str.substring(0, fromIndex - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":199,"author":{"gitId":"Dioclei"},"content":"        String from \u003d str.substring(fromIndex + 6, toIndex - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":200,"author":{"gitId":"Dioclei"},"content":"        String to \u003d str.substring(toIndex + 4);","lastModifiedDate":"2023-09-02"},{"lineNumber":201,"author":{"gitId":"Dioclei"},"content":"        return new String[]{description, from, to};","lastModifiedDate":"2023-09-02"},{"lineNumber":202,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":203,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":204,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":205,"author":{"gitId":"Dioclei"},"content":"     * Parses a Delete command.","lastModifiedDate":"2023-09-02"},{"lineNumber":206,"author":{"gitId":"Dioclei"},"content":"     * @param command Command given by the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":207,"author":{"gitId":"Dioclei"},"content":"     * @return index of the task in the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":208,"author":{"gitId":"Dioclei"},"content":"     * @throws FlukeException if the input is invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":209,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":210,"author":{"gitId":"Dioclei"},"content":"    public static int parseDeleteCommand(String command) throws FlukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":211,"author":{"gitId":"Dioclei"},"content":"        if (command.length() \u003c\u003d 7) {","lastModifiedDate":"2023-09-02"},{"lineNumber":212,"author":{"gitId":"Dioclei"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2023-09-02"},{"lineNumber":213,"author":{"gitId":"Dioclei"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":214,"author":{"gitId":"Dioclei"},"content":"        int taskNumber \u003d obtainTaskNumber(command.substring(7));","lastModifiedDate":"2023-09-02"},{"lineNumber":215,"author":{"gitId":"Dioclei"},"content":"        return taskNumber - 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":216,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":217,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":218,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":219,"author":{"gitId":"Dioclei"},"content":"     * Parses a Mark as Done Command.","lastModifiedDate":"2023-09-02"},{"lineNumber":220,"author":{"gitId":"Dioclei"},"content":"     * @param command Command given by the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":221,"author":{"gitId":"Dioclei"},"content":"     * @return index of the task in the task list to be marked.","lastModifiedDate":"2023-09-02"},{"lineNumber":222,"author":{"gitId":"Dioclei"},"content":"     * @throws FlukeException if the input is invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":223,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":224,"author":{"gitId":"Dioclei"},"content":"    public static int parseMarkAsDoneCommand(String command) throws FlukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":225,"author":{"gitId":"Dioclei"},"content":"        if (command.length() \u003c\u003d 5) {","lastModifiedDate":"2023-09-02"},{"lineNumber":226,"author":{"gitId":"Dioclei"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2023-09-02"},{"lineNumber":227,"author":{"gitId":"Dioclei"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":228,"author":{"gitId":"Dioclei"},"content":"        int taskNumber \u003d obtainTaskNumber(command.substring(5));","lastModifiedDate":"2023-09-02"},{"lineNumber":229,"author":{"gitId":"Dioclei"},"content":"        return taskNumber - 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":230,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":231,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":232,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":233,"author":{"gitId":"Dioclei"},"content":"     * Parses a Mark as Undone Command.","lastModifiedDate":"2023-09-02"},{"lineNumber":234,"author":{"gitId":"Dioclei"},"content":"     * @param command Command given by the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":235,"author":{"gitId":"Dioclei"},"content":"     * @return index of the task in the task list to be marked.","lastModifiedDate":"2023-09-02"},{"lineNumber":236,"author":{"gitId":"Dioclei"},"content":"     * @throws FlukeException if the input is invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":237,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":238,"author":{"gitId":"Dioclei"},"content":"    public static int parseMarkAsUndoneCommand(String command) throws FlukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":239,"author":{"gitId":"Dioclei"},"content":"        if (command.length() \u003c\u003d 7) {","lastModifiedDate":"2023-09-02"},{"lineNumber":240,"author":{"gitId":"Dioclei"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2023-09-02"},{"lineNumber":241,"author":{"gitId":"Dioclei"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":242,"author":{"gitId":"Dioclei"},"content":"        int taskNumber \u003d obtainTaskNumber(command.substring(7));","lastModifiedDate":"2023-09-02"},{"lineNumber":243,"author":{"gitId":"Dioclei"},"content":"        return taskNumber - 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":244,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":245,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":246,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":247,"author":{"gitId":"Dioclei"},"content":"     * Helper function to obtain a number from a string.","lastModifiedDate":"2023-09-02"},{"lineNumber":248,"author":{"gitId":"Dioclei"},"content":"     * @param taskNumberString String to obtain a number from.","lastModifiedDate":"2023-09-02"},{"lineNumber":249,"author":{"gitId":"Dioclei"},"content":"     * @return An integer","lastModifiedDate":"2023-09-02"},{"lineNumber":250,"author":{"gitId":"Dioclei"},"content":"     * @throws InvalidInputException if the string is not a valid number.","lastModifiedDate":"2023-09-02"},{"lineNumber":251,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":252,"author":{"gitId":"Dioclei"},"content":"    private static int obtainTaskNumber(String taskNumberString) throws InvalidInputException {","lastModifiedDate":"2023-09-02"},{"lineNumber":253,"author":{"gitId":"Dioclei"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":254,"author":{"gitId":"Dioclei"},"content":"            return Integer.parseInt(taskNumberString);","lastModifiedDate":"2023-09-02"},{"lineNumber":255,"author":{"gitId":"Dioclei"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":256,"author":{"gitId":"Dioclei"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2023-09-02"},{"lineNumber":257,"author":{"gitId":"Dioclei"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":258,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":259,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":260,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":261,"author":{"gitId":"Dioclei"},"content":"     * Parses a find command to obtain the keyword","lastModifiedDate":"2023-09-02"},{"lineNumber":262,"author":{"gitId":"Dioclei"},"content":"     * @param command the command given.","lastModifiedDate":"2023-09-02"},{"lineNumber":263,"author":{"gitId":"Dioclei"},"content":"     * @return the keyword","lastModifiedDate":"2023-09-02"},{"lineNumber":264,"author":{"gitId":"Dioclei"},"content":"     * @throws InvalidInputException if there is no keyword given.","lastModifiedDate":"2023-09-02"},{"lineNumber":265,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":266,"author":{"gitId":"Dioclei"},"content":"    public static String parseFindCommand(String command) throws InvalidInputException {","lastModifiedDate":"2023-09-02"},{"lineNumber":267,"author":{"gitId":"Dioclei"},"content":"        if (command.length() \u003c 6) {","lastModifiedDate":"2023-09-02"},{"lineNumber":268,"author":{"gitId":"Dioclei"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2023-09-02"},{"lineNumber":269,"author":{"gitId":"Dioclei"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":270,"author":{"gitId":"Dioclei"},"content":"        return command.substring(5);","lastModifiedDate":"2023-09-02"},{"lineNumber":271,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":272,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"Dioclei":272}},{"path":"src/main/java/fluke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dioclei"},"content":"package fluke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Dioclei"},"content":"import java.io.File;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"Dioclei"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Dioclei"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Dioclei"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Dioclei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Dioclei"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Dioclei"},"content":"import fluke.exceptions.FlukeException;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"Dioclei"},"content":"import fluke.tasks.Task;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"Dioclei"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Dioclei"},"content":" * Handles storing of task list data.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Dioclei"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Dioclei"},"content":"public class Storage {","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Dioclei"},"content":"    private final String filePath;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Dioclei"},"content":"    private final ArrayList\u003cTask\u003e tasksReadFromStorage;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Dioclei"},"content":"     * Constructs a Storage with an appropriate filePath.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Dioclei"},"content":"     * @param filePath file path of the text file to store task data.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Dioclei"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Dioclei"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Dioclei"},"content":"        this.tasksReadFromStorage \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"Dioclei"},"content":"     * Attempts to load tasks from local storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"Dioclei"},"content":"     * @return An ArrayList containing tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"Dioclei"},"content":"    public ArrayList\u003cTask\u003e load() throws FlukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"Dioclei"},"content":"        File saveFile \u003d new File(filePath);","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"Dioclei"},"content":"        if (saveFile.exists()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"Dioclei"},"content":"            // parse the file and write to list","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"Dioclei"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"Dioclei"},"content":"                Scanner fileScanner \u003d new Scanner(saveFile);","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"Dioclei"},"content":"                while (fileScanner.hasNextLine()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"Dioclei"},"content":"                    String line \u003d fileScanner.nextLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"Dioclei"},"content":"                    if (!line.equals(\"\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"Dioclei"},"content":"                        Task task \u003d Parser.parseTask(line);","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"Dioclei"},"content":"                        tasksReadFromStorage.add(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"Dioclei"},"content":"                    }","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"Dioclei"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"Dioclei"},"content":"            } catch (FileNotFoundException f) {","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"Dioclei"},"content":"                throw new FlukeException(f.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"Dioclei"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"Dioclei"},"content":"            return tasksReadFromStorage;","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"Dioclei"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"Dioclei"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"Dioclei"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"Dioclei"},"content":"     * Saves list of tasks to local storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"Dioclei"},"content":"     * @param tasks An ArrayList containing tasks to be saved.","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"Dioclei"},"content":"     * @throws IOException Error that occurs during saving","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"Dioclei"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"Dioclei"},"content":"        System.out.println(tasks);","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"Dioclei"},"content":"        FileWriter writer \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"Dioclei"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"Dioclei"},"content":"            String out \u003d tasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"Dioclei"},"content":"            writer.write(out);","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"Dioclei"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"Dioclei"},"content":"        writer.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"Dioclei":69}},{"path":"src/main/java/fluke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dioclei"},"content":"package fluke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Dioclei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"Dioclei"},"content":"import fluke.exceptions.FlukeException;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Dioclei"},"content":"import fluke.exceptions.TaskDoesNotExistException;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Dioclei"},"content":"import fluke.tasks.Deadline;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Dioclei"},"content":"import fluke.tasks.Event;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Dioclei"},"content":"import fluke.tasks.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Dioclei"},"content":"import fluke.tasks.Todo;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Dioclei"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"Dioclei"},"content":" * TaskList is a wrapper class that manages the internal list of tasks by implementing","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"Dioclei"},"content":" * various methods related to managing the list of tasks, such as adding and deleting.","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"Dioclei"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"Dioclei"},"content":"public class TaskList {","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Dioclei"},"content":"    private final ArrayList\u003cTask\u003e listOfTasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Dioclei"},"content":"     * Constructs a TaskList with an empty list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Dioclei"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Dioclei"},"content":"        this.listOfTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Dioclei"},"content":"     * Constructs a TaskList with an initial list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Dioclei"},"content":"     * @param initialTasks the initial list of tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"Dioclei"},"content":"    public TaskList(ArrayList\u003cTask\u003e initialTasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"Dioclei"},"content":"        this.listOfTasks \u003d initialTasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"Dioclei"},"content":"     * Getter for the list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"Dioclei"},"content":"     * @return the list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"Dioclei"},"content":"    public ArrayList\u003cTask\u003e getListOfTasks() {","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"Dioclei"},"content":"        return listOfTasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"Dioclei"},"content":"     * Gets the size of the list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"Dioclei"},"content":"     * @return size of the list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"Dioclei"},"content":"    public int getSize() {","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"Dioclei"},"content":"        return listOfTasks.size();","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"Dioclei"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"Dioclei"},"content":"     * @param task task to be added.","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"Dioclei"},"content":"    private void addTask(Task task) {","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"Dioclei"},"content":"        listOfTasks.add(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"Dioclei"},"content":"     * Adds a Todo to the list of tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"Dioclei"},"content":"     * @param description description of the task","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"Dioclei"},"content":"     * @return the task added.","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"Dioclei"},"content":"     * @throws FlukeException if there is an error while adding the task, for instance an invalid description.","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"Dioclei"},"content":"    public Task addTodo(String description) throws FlukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"Dioclei"},"content":"        Todo newTodo \u003d new Todo(description);","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"Dioclei"},"content":"        addTask(newTodo);","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"Dioclei"},"content":"        return newTodo;","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"Dioclei"},"content":"     * Adds a Deadline to the list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"Dioclei"},"content":"     * @param description description of the task","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"Dioclei"},"content":"     * @param byDate the date which the task is due","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"Dioclei"},"content":"     * @return the task added.","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"Dioclei"},"content":"     * @throws FlukeException if there is an error while adding the task, for instance an invalid description.","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"Dioclei"},"content":"    public Task addDeadline(String description, String byDate) throws FlukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"Dioclei"},"content":"        Task newDeadline \u003d new Deadline(description, byDate);","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"Dioclei"},"content":"        addTask(newDeadline);","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"Dioclei"},"content":"        return newDeadline;","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"Dioclei"},"content":"     * Adds an Event to the list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"Dioclei"},"content":"     * @param description description of the task","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"Dioclei"},"content":"     * @param fromDate the date which the event starts","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"Dioclei"},"content":"     * @param toDate the date which the event ends","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"Dioclei"},"content":"     * @return the task added.","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"Dioclei"},"content":"     * @throws FlukeException if there is an error while adding the task, for instance an invalid description.","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"Dioclei"},"content":"    public Task addEvent(String description, String fromDate, String toDate) throws FlukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"Dioclei"},"content":"        Task newEvent \u003d new Event(description, fromDate, toDate);","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"Dioclei"},"content":"        addTask(newEvent);","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"Dioclei"},"content":"        return newEvent;","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"Dioclei"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"Dioclei"},"content":"     * @param index index of the task in the list","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"Dioclei"},"content":"     * @return the deleted task.","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"Dioclei"},"content":"     * @throws TaskDoesNotExistException if the index given is invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"Dioclei"},"content":"    public Task deleteTask(int index) throws TaskDoesNotExistException {","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"Dioclei"},"content":"        // check if task exists","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"Dioclei"},"content":"        if (index \u003c listOfTasks.size()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"Dioclei"},"content":"            Task taskToBeDeleted \u003d listOfTasks.get(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"Dioclei"},"content":"            listOfTasks.remove(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"Dioclei"},"content":"            return taskToBeDeleted;","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"Dioclei"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"Dioclei"},"content":"            throw new TaskDoesNotExistException();","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"Dioclei"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"Dioclei"},"content":"     * Marks a task in the task list as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"Dioclei"},"content":"     * @param index index of the task in the list","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"Dioclei"},"content":"     * @return the marked task.","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"Dioclei"},"content":"     * @throws TaskDoesNotExistException if the index given is invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"Dioclei"},"content":"    public Task markTaskAsDone(int index) throws TaskDoesNotExistException {","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"Dioclei"},"content":"        // check if task exists","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"Dioclei"},"content":"        if (index \u003c listOfTasks.size()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"Dioclei"},"content":"            Task task \u003d listOfTasks.get(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"Dioclei"},"content":"            task.markAsDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"Dioclei"},"content":"            return task;","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"Dioclei"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"Dioclei"},"content":"            throw new TaskDoesNotExistException();","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"Dioclei"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"Dioclei"},"content":"     * Marks a task in the task list as not done.","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"Dioclei"},"content":"     * @param index index of the task in the list","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"Dioclei"},"content":"     * @return the marked task.","lastModifiedDate":"2023-09-02"},{"lineNumber":135,"author":{"gitId":"Dioclei"},"content":"     * @throws TaskDoesNotExistException if the index given is invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"Dioclei"},"content":"    public Task markTaskAsUndone(int index) throws TaskDoesNotExistException {","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"Dioclei"},"content":"        // check if task exists","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"Dioclei"},"content":"        if (index \u003c listOfTasks.size()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"Dioclei"},"content":"            Task task \u003d listOfTasks.get(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":141,"author":{"gitId":"Dioclei"},"content":"            task.markAsUndone();","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"Dioclei"},"content":"            return task;","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"Dioclei"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"Dioclei"},"content":"            throw new TaskDoesNotExistException();","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"Dioclei"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":146,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":148,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":149,"author":{"gitId":"Dioclei"},"content":"     * Finds all tasks containing a specific keyword.","lastModifiedDate":"2023-09-02"},{"lineNumber":150,"author":{"gitId":"Dioclei"},"content":"     * @param keyword the keyword","lastModifiedDate":"2023-09-02"},{"lineNumber":151,"author":{"gitId":"Dioclei"},"content":"     * @return a TaskList containing all tasks containing the keyword.","lastModifiedDate":"2023-09-02"},{"lineNumber":152,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":153,"author":{"gitId":"Dioclei"},"content":"    public TaskList findTask(String keyword) {","lastModifiedDate":"2023-09-02"},{"lineNumber":154,"author":{"gitId":"Dioclei"},"content":"        ArrayList\u003cTask\u003e newListOfTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":155,"author":{"gitId":"Dioclei"},"content":"        for (int i \u003d 0; i \u003c this.getSize(); i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":156,"author":{"gitId":"Dioclei"},"content":"            Task task \u003d this.listOfTasks.get(i);","lastModifiedDate":"2023-09-02"},{"lineNumber":157,"author":{"gitId":"Dioclei"},"content":"            if (task.hasKeyword(keyword)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":158,"author":{"gitId":"Dioclei"},"content":"                newListOfTasks.add(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":159,"author":{"gitId":"Dioclei"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":160,"author":{"gitId":"Dioclei"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":161,"author":{"gitId":"Dioclei"},"content":"        return new TaskList(newListOfTasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":162,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":163,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":164,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":165,"author":{"gitId":"Dioclei"},"content":"     * Returns a string representation of the list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":166,"author":{"gitId":"Dioclei"},"content":"     * @return a string representation of the list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":167,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":168,"author":{"gitId":"Dioclei"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":169,"author":{"gitId":"Dioclei"},"content":"    public String toString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":170,"author":{"gitId":"Dioclei"},"content":"        String str \u003d \"\";","lastModifiedDate":"2023-09-02"},{"lineNumber":171,"author":{"gitId":"Dioclei"},"content":"        for (int i \u003d 0; i \u003c listOfTasks.size(); i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":172,"author":{"gitId":"Dioclei"},"content":"            Task task \u003d listOfTasks.get(i);","lastModifiedDate":"2023-09-02"},{"lineNumber":173,"author":{"gitId":"Dioclei"},"content":"            int number \u003d i + 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":174,"author":{"gitId":"Dioclei"},"content":"            str +\u003d (number + \".\" + task);","lastModifiedDate":"2023-09-02"},{"lineNumber":175,"author":{"gitId":"Dioclei"},"content":"            if (i !\u003d listOfTasks.size() - 1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":176,"author":{"gitId":"Dioclei"},"content":"                str +\u003d \"\\n\";","lastModifiedDate":"2023-09-02"},{"lineNumber":177,"author":{"gitId":"Dioclei"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":178,"author":{"gitId":"Dioclei"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":179,"author":{"gitId":"Dioclei"},"content":"        return str;","lastModifiedDate":"2023-09-02"},{"lineNumber":180,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":181,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"Dioclei":181}},{"path":"src/main/java/fluke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dioclei"},"content":"package fluke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Dioclei"},"content":"import fluke.tasks.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Dioclei"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Dioclei"},"content":" * This class contains all user interface related functionalities.","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Dioclei"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Dioclei"},"content":"public class Ui {","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Dioclei"},"content":"    private static final String CHATBOT_NAME \u003d \"Fluke\";","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"Dioclei"},"content":"    private static final String GREETING \u003d","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"Dioclei"},"content":"            \"Hello! I\u0027m \" + CHATBOT_NAME + \", everything I do is down to luck!\" + \"\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"Dioclei"},"content":"                    + \"Feeling lucky today?\";","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"Dioclei"},"content":"    private static final String GOODBYE \u003d \"Bye. Good luck!\";","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Dioclei"},"content":"     * Greets the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Dioclei"},"content":"    public String getGreeting() {","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"Dioclei"},"content":"        // introduce Fluke","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Dioclei"},"content":"        return GREETING;","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Dioclei"},"content":"     * Says goodbye to the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Dioclei"},"content":"    public String getBye() {","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"Dioclei"},"content":"        return GOODBYE;","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"Dioclei"},"content":"     * prints an error","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"Dioclei"},"content":"     * @param message the error message","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"Dioclei"},"content":"    public String getError(String message) {","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"Dioclei"},"content":"        return \"☹ OOPS!!! \" + message;","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"Dioclei"},"content":"     * shows the current list of tasks to the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"Dioclei"},"content":"     * @param tasks the corresponding TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"Dioclei"},"content":"    public String getListOfTasks(TaskList tasks) {","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"Dioclei"},"content":"        String response \u003d \"Here are the tasks we have currently!\\n\" + tasks.toString();","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"Dioclei"},"content":"        return response;","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"Dioclei"},"content":"     * shows the addition of a task to the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"Dioclei"},"content":"     * @param addedTask the task added.","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"Dioclei"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"Dioclei"},"content":"    public String getTaskAdded(Task addedTask, TaskList tasks) {","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"Dioclei"},"content":"        return \"(Scribbles randomly). Hope I got it right!\\n\"","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"Dioclei"},"content":"                + \"  \" + addedTask + \"\\n\"","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"Dioclei"},"content":"                + \"I think there are now \" + tasks.getSize() + \" tasks in the list.\";","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"Dioclei"},"content":"     * shows the deletion of a task to the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"Dioclei"},"content":"     * @param deletedTask the task deleted.","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"Dioclei"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"Dioclei"},"content":"    public String getTaskDeleted(Task deletedTask, TaskList tasks) {","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"Dioclei"},"content":"        return \"fluke.tasks.Task deleted! I hope it\u0027s the right one:\\n\"","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"Dioclei"},"content":"                + \"  \" + deletedTask + \"\\n\"","lastModifiedDate":"2023-09-09"},{"lineNumber":66,"author":{"gitId":"Dioclei"},"content":"                + \"I think there are now \" + tasks.getSize() + \" tasks in the list.\";","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"Dioclei"},"content":"     * Shows a task being marked as done to the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"Dioclei"},"content":"     * @param markedTask the task marked as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"Dioclei"},"content":"    public String getTaskMarkedAsDone(Task markedTask) {","lastModifiedDate":"2023-09-09"},{"lineNumber":74,"author":{"gitId":"Dioclei"},"content":"        return \"I have marked this task as done, I hope it\u0027s the right one:\\n\"","lastModifiedDate":"2023-09-09"},{"lineNumber":75,"author":{"gitId":"Dioclei"},"content":"                + \"  \" + markedTask;","lastModifiedDate":"2023-09-09"},{"lineNumber":76,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"Dioclei"},"content":"     * Shows a task being marked as not done to the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"Dioclei"},"content":"     * @param markedTask the task marked as not done.","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"Dioclei"},"content":"    public String getTaskMarkedAsUndone(Task markedTask) {","lastModifiedDate":"2023-09-09"},{"lineNumber":83,"author":{"gitId":"Dioclei"},"content":"        return \"I have marked this task as not done yet, I hope it\u0027s the right one:\\n\"","lastModifiedDate":"2023-09-09"},{"lineNumber":84,"author":{"gitId":"Dioclei"},"content":"                + \"  \" + markedTask;","lastModifiedDate":"2023-09-09"},{"lineNumber":85,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"Dioclei"},"content":"     * Shows the user tasks with a certain keyword","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"Dioclei"},"content":"     * @param tasksWithKeyword list of tasks to show","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"Dioclei"},"content":"    public String getTasksWithKeyword(TaskList tasksWithKeyword) {","lastModifiedDate":"2023-09-09"},{"lineNumber":92,"author":{"gitId":"Dioclei"},"content":"        return \"I have randomly picked out a few tasks. Looks like they have what you want!\"","lastModifiedDate":"2023-09-09"},{"lineNumber":93,"author":{"gitId":"Dioclei"},"content":"                + tasksWithKeyword;","lastModifiedDate":"2023-09-09"},{"lineNumber":94,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"Dioclei"},"content":"     * Shows a loading error to the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"Dioclei"},"content":"    public String getLoadingError() {","lastModifiedDate":"2023-09-09"},{"lineNumber":100,"author":{"gitId":"Dioclei"},"content":"        return getError(\"Failed to load!\");","lastModifiedDate":"2023-09-09"},{"lineNumber":101,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"Dioclei":102}},{"path":"src/main/java/fluke/exceptions/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dioclei"},"content":"package fluke.exceptions;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Dioclei"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"Dioclei"},"content":" * This exception should be thrown when an empty description is given for a task.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Dioclei"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Dioclei"},"content":"public class EmptyDescriptionException extends FlukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Dioclei"},"content":"    private static final String ERROR_MESSAGE \u003d \"I cannot create a task without a description!\";","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Dioclei"},"content":"     * Constructs an EmptyDescriptionException.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Dioclei"},"content":"    public EmptyDescriptionException() {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"Dioclei"},"content":"        super(ERROR_MESSAGE);","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"Dioclei":15}},{"path":"src/main/java/fluke/exceptions/FlukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dioclei"},"content":"package fluke.exceptions;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Dioclei"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"Dioclei"},"content":" * This exception is thrown whenever an error occurs with Fluke.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Dioclei"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Dioclei"},"content":"public class FlukeException extends Exception {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Dioclei"},"content":"     * Constructs a FlukeException.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Dioclei"},"content":"     * @param message Error message","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Dioclei"},"content":"    public FlukeException(String message) {","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Dioclei"},"content":"        super(message);","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"Dioclei":14}},{"path":"src/main/java/fluke/exceptions/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dioclei"},"content":"package fluke.exceptions;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Dioclei"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"Dioclei"},"content":" * This exception should be thrown whenever there is invalid input.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Dioclei"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Dioclei"},"content":"public class InvalidInputException extends FlukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Dioclei"},"content":"    private static final String ERROR_MESSAGE \u003d \"I don\u0027t understand!\";","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Dioclei"},"content":"     * Constructs an InvalidInputException.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Dioclei"},"content":"    public InvalidInputException() {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"Dioclei"},"content":"        super(ERROR_MESSAGE);","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"Dioclei":15}},{"path":"src/main/java/fluke/exceptions/SaveFileParsingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dioclei"},"content":"package fluke.exceptions;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Dioclei"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"Dioclei"},"content":" * This exception should be thrown when there is an error parsing the save file.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Dioclei"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Dioclei"},"content":"public class SaveFileParsingException extends FlukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Dioclei"},"content":"    private static final String ERROR_MESSAGE \u003d \"I couldn\u0027t understand the save file...\";","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Dioclei"},"content":"     * Constructs a SaveFileParsingException.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Dioclei"},"content":"    public SaveFileParsingException() {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Dioclei"},"content":"        super(ERROR_MESSAGE);","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Dioclei":15}},{"path":"src/main/java/fluke/exceptions/TaskDoesNotExistException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dioclei"},"content":"package fluke.exceptions;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Dioclei"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"Dioclei"},"content":" * This exception should be thrown when an operation tries to access a task that does not exist.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Dioclei"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Dioclei"},"content":"public class TaskDoesNotExistException extends FlukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Dioclei"},"content":"    private static final String ERROR_MESSAGE \u003d \"I\u0027m pretty sure that task doesn\u0027t exist...\";","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Dioclei"},"content":"     * Constructs a TaskDoesNotExistException.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Dioclei"},"content":"    public TaskDoesNotExistException() {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"Dioclei"},"content":"        super(ERROR_MESSAGE);","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"Dioclei":15}},{"path":"src/main/java/fluke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dioclei"},"content":"package fluke.tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Dioclei"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Dioclei"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Dioclei"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Dioclei"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Dioclei"},"content":"import fluke.exceptions.FlukeException;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"Dioclei"},"content":"import fluke.exceptions.InvalidInputException;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"Dioclei"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Dioclei"},"content":" * A deadline task refers to a task which has a deadline.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Dioclei"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Dioclei"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"Dioclei"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG);","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Dioclei"},"content":"     * The deadline of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Dioclei"},"content":"    protected LocalDate byDate;","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Dioclei"},"content":"     * Constructs a Deadline. Takes in a description and a by date.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Dioclei"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Dioclei"},"content":"     * @param byDate Date which the task is due, in YYYY-MM-DD format.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Dioclei"},"content":"     * @throws FlukeException when the description or by date is invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Dioclei"},"content":"    public Deadline(String description, String byDate) throws FlukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"Dioclei"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"Dioclei"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"Dioclei"},"content":"            this.byDate \u003d LocalDate.parse(byDate);","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"Dioclei"},"content":"        } catch (DateTimeParseException d) {","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"Dioclei"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"Dioclei"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"Dioclei"},"content":"     * Constructs a Deadline. Takes in a description and a by date.","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"Dioclei"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"Dioclei"},"content":"     * @param isDone Whether the deadline is marked as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"Dioclei"},"content":"     * @param byDate Date which the task is due, in YYYY-MM-DD format.","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"Dioclei"},"content":"     * @throws FlukeException when the description or by date is invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"Dioclei"},"content":"    public Deadline(String description, boolean isDone, String byDate) throws FlukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"Dioclei"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Dioclei"},"content":"        this.byDate \u003d LocalDate.parse(byDate);","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"Dioclei"},"content":"     * String representation of a Deadline.","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"Dioclei"},"content":"     * @return a String representation of a Deadline, containing description and date which it is due.","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"Dioclei"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"Dioclei"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"Dioclei"},"content":"        String byString \u003d byDate.format(DATE_TIME_FORMATTER);","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"Dioclei"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + byString + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Dioclei":58}},{"path":"src/main/java/fluke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dioclei"},"content":"package fluke.tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Dioclei"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Dioclei"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Dioclei"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Dioclei"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Dioclei"},"content":"import fluke.exceptions.FlukeException;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"Dioclei"},"content":"import fluke.exceptions.InvalidInputException;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"Dioclei"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Dioclei"},"content":" * An event refers to a task which has a starting \"from\" date and an ending \"to\" date.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Dioclei"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Dioclei"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"Dioclei"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG);","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Dioclei"},"content":"     * Date which this event begins.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Dioclei"},"content":"    protected LocalDate fromDate;","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Dioclei"},"content":"     * Date which this event ends.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Dioclei"},"content":"    protected LocalDate toDate;","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Dioclei"},"content":"     * Constructs an Event with a description, from date and to date.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"Dioclei"},"content":"     * @param description Description of the event.","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"Dioclei"},"content":"     * @param fromDate Beginning date of the event, in format YYYY-MM-DD.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"Dioclei"},"content":"     * @param toDate Ending date of the event, in format YYYY-MM-DD","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"Dioclei"},"content":"     * @throws FlukeException when the description or the dates given are invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"Dioclei"},"content":"    public Event(String description, String fromDate, String toDate) throws FlukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"Dioclei"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"Dioclei"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"Dioclei"},"content":"            this.fromDate \u003d LocalDate.parse(fromDate);","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"Dioclei"},"content":"            this.toDate \u003d LocalDate.parse(toDate);","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"Dioclei"},"content":"            if (this.fromDate.isAfter(this.toDate)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"Dioclei"},"content":"                throw new InvalidInputException();","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"Dioclei"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"Dioclei"},"content":"        } catch (DateTimeParseException d) {","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"Dioclei"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"Dioclei"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"Dioclei"},"content":"     * Constructs an Event with a description, from date and to date.","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"Dioclei"},"content":"     * @param description Description of the event.","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"Dioclei"},"content":"     * @param isDone Whether the event is over.","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"Dioclei"},"content":"     * @param fromDate Beginning date of the event, in format YYYY-MM-DD.","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"Dioclei"},"content":"     * @param toDate Ending date of the event, in format YYYY-MM-DD","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"Dioclei"},"content":"     * @throws FlukeException when the description or the dates given are invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"Dioclei"},"content":"    public Event(String description, boolean isDone, String fromDate, String toDate) throws FlukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"Dioclei"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"Dioclei"},"content":"        this.fromDate \u003d LocalDate.parse(fromDate);","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"Dioclei"},"content":"        this.toDate \u003d LocalDate.parse(toDate);","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"Dioclei"},"content":"     * String representation of an event.","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"Dioclei"},"content":"     * @return a String representation of the event, containing its description and starting and ending dates.","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"Dioclei"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"Dioclei"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":68,"author":{"gitId":"Dioclei"},"content":"        String fromString \u003d fromDate.format(DATE_TIME_FORMATTER);","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"Dioclei"},"content":"        String toString \u003d toDate.format(DATE_TIME_FORMATTER);","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"Dioclei"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + fromString + \" to: \" + toString + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":72,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Dioclei":72}},{"path":"src/main/java/fluke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dioclei"},"content":"package fluke.tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Dioclei"},"content":"import fluke.exceptions.EmptyDescriptionException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"Dioclei"},"content":"import fluke.exceptions.FlukeException;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Dioclei"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Dioclei"},"content":" * A task is something which is to be done. It contains a description and whether it is done.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Dioclei"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Dioclei"},"content":"public abstract class Task {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Dioclei"},"content":"     * Description of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Dioclei"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Dioclei"},"content":"     * Whether the task is done.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Dioclei"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Dioclei"},"content":"     * Constructs a task with a description.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Dioclei"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Dioclei"},"content":"     * @throws FlukeException when the description given is empty.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Dioclei"},"content":"    protected Task(String description) throws FlukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Dioclei"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"Dioclei"},"content":"        if (trimmedDescription.equals(\"\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"Dioclei"},"content":"            throw new EmptyDescriptionException();","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"Dioclei"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"Dioclei"},"content":"        this.description \u003d trimmedDescription;","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"Dioclei"},"content":"     * Constructs a task with a description and whether it is done.","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"Dioclei"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"Dioclei"},"content":"     * @param isDone Whether the task is done.","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"Dioclei"},"content":"     * @throws FlukeException when the description given is empty.","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"Dioclei"},"content":"    protected Task(String description, boolean isDone) throws FlukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"Dioclei"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Dioclei"},"content":"        if (trimmedDescription.equals(\"\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Dioclei"},"content":"            throw new EmptyDescriptionException();","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Dioclei"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Dioclei"},"content":"        this.description \u003d trimmedDescription;","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Dioclei"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"Dioclei"},"content":"     * Marks this task as done.","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"Dioclei"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"Dioclei"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"Dioclei"},"content":"     * Marks this task as not done.","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"Dioclei"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"Dioclei"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":62,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"Dioclei"},"content":"     * Checks whether this task has a keyword","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"Dioclei"},"content":"     * @param keyword the keyword to check","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"Dioclei"},"content":"     * @return whether the keyword is present in the task description.","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"Dioclei"},"content":"    public boolean hasKeyword(String keyword) {","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"Dioclei"},"content":"        return this.description.toLowerCase().contains(keyword.toLowerCase());","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":73,"author":{"gitId":"Dioclei"},"content":"     * Returns a string representation of a task.","lastModifiedDate":"2023-08-22"},{"lineNumber":74,"author":{"gitId":"Dioclei"},"content":"     * @return a string representation containing whether the task is completed and what it is.","lastModifiedDate":"2023-08-22"},{"lineNumber":75,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":76,"author":{"gitId":"Dioclei"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":77,"author":{"gitId":"Dioclei"},"content":"        String doneString \u003d this.isDone ? \"X\" : \" \";","lastModifiedDate":"2023-08-22"},{"lineNumber":78,"author":{"gitId":"Dioclei"},"content":"        return \"[\" + doneString + \"] \" + this.description;","lastModifiedDate":"2023-08-22"},{"lineNumber":79,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":80,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Dioclei":80}},{"path":"src/main/java/fluke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dioclei"},"content":"package fluke.tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Dioclei"},"content":"import fluke.exceptions.FlukeException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Dioclei"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Dioclei"},"content":" * A todo is a task without any dates associated with it.","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Dioclei"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Dioclei"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Dioclei"},"content":"     * Constructs a Todo.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Dioclei"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Dioclei"},"content":"     * @throws FlukeException when the description given is empty.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Dioclei"},"content":"    public Todo(String description) throws FlukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Dioclei"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Dioclei"},"content":"     * Constructs a Todo.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Dioclei"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Dioclei"},"content":"     * @param isDone Whether the task is done.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Dioclei"},"content":"     * @throws FlukeException when the description given is empty.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Dioclei"},"content":"    public Todo(String description, boolean isDone) throws FlukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Dioclei"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"Dioclei"},"content":"     * String representation of a Todo.","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"Dioclei"},"content":"     * @return a String representation of a Todo containing its description.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"Dioclei"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"Dioclei"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"Dioclei"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Dioclei":36}},{"path":"src/main/java/fluke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dioclei"},"content":"package fluke.ui;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"Dioclei"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"Dioclei"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"Dioclei"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"Dioclei"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"Dioclei"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"Dioclei"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"Dioclei"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"Dioclei"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"Dioclei"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"Dioclei"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"Dioclei"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"Dioclei"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"Dioclei"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"Dioclei"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"Dioclei"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"Dioclei"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"Dioclei"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"Dioclei"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"Dioclei"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"Dioclei"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"Dioclei"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"Dioclei"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"Dioclei"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"Dioclei"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"Dioclei"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"Dioclei"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"Dioclei"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"Dioclei"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"Dioclei"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"Dioclei"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"Dioclei"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"Dioclei"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"Dioclei"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"Dioclei"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"Dioclei"},"content":"    private void flip() {","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"Dioclei"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"Dioclei"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"Dioclei"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"Dioclei"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"Dioclei"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"Dioclei"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"Dioclei"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"Dioclei"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"Dioclei"},"content":"        db.flip();","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"Dioclei"},"content":"        return db;","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"Dioclei":61}},{"path":"src/main/java/fluke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dioclei"},"content":"package fluke.ui;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"Dioclei"},"content":"import fluke.Fluke;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"Dioclei"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"Dioclei"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"Dioclei"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"Dioclei"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"Dioclei"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"Dioclei"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"Dioclei"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"Dioclei"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"Dioclei"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"Dioclei"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"Dioclei"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"Dioclei"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"Dioclei"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"Dioclei"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"Dioclei"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"Dioclei"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"Dioclei"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"Dioclei"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"Dioclei"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"Dioclei"},"content":"    private Fluke fluke;","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"Dioclei"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"Dioclei"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"Dioclei"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"Dioclei"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"Dioclei"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"Dioclei"},"content":"    public void setFlukeAndGreetUser(Fluke f) {","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"Dioclei"},"content":"        fluke \u003d f;","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"Dioclei"},"content":"        greetUser();","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"Dioclei"},"content":"     * Creates a dialog box to greet the user.","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"Dioclei"},"content":"    public void greetUser() {","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"Dioclei"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"Dioclei"},"content":"            DialogBox.getDukeDialog(fluke.getGreeting(), dukeImage)","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"Dioclei"},"content":"        );","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"Dioclei"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"Dioclei"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"Dioclei"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"Dioclei"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"Dioclei"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"Dioclei"},"content":"        String response \u003d fluke.getResponse(input);","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"Dioclei"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"Dioclei"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"Dioclei"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"Dioclei"},"content":"        );","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"Dioclei"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"Dioclei":63}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Dioclei"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"Dioclei"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"Dioclei"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"Dioclei"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"Dioclei"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"Dioclei"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"Dioclei"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"Dioclei"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"Dioclei"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"Dioclei"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"Dioclei"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"Dioclei"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"Dioclei"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"Dioclei"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"Dioclei":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Dioclei"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"Dioclei"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"Dioclei"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"Dioclei"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"Dioclei"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"Dioclei"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"Dioclei"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"fluke.ui.MainWindow\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"Dioclei"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"Dioclei"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"Dioclei"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"Dioclei"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"Dioclei"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"Dioclei"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"Dioclei"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"Dioclei"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"Dioclei"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"Dioclei"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"Dioclei":19}},{"path":"src/test/java/fluke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dioclei"},"content":"package fluke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Dioclei"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"Dioclei"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Dioclei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"Dioclei"},"content":"import fluke.exceptions.FlukeException;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"Dioclei"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Dioclei"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Dioclei"},"content":"    public void parseTask_garbageInput_exceptionThrown() {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Dioclei"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Dioclei"},"content":"            Parser.parseTask(\"garbage input\");","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Dioclei"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Dioclei"},"content":"        } catch (FlukeException f) {","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Dioclei"},"content":"            assertEquals(\"I couldn\u0027t understand the save file...\", f.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Dioclei"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"Dioclei":20}},{"path":"src/test/java/fluke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dioclei"},"content":"package fluke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Dioclei"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"Dioclei"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Dioclei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"Dioclei"},"content":"import fluke.exceptions.FlukeException;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"Dioclei"},"content":"import fluke.tasks.Deadline;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"Dioclei"},"content":"import fluke.tasks.Event;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Dioclei"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Dioclei"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Dioclei"},"content":"    public void addDeadline_invalidDateInput_exceptionThrown() {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Dioclei"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Dioclei"},"content":"            Deadline task \u003d new Deadline(\"Do Homework\", \"invalid date\");","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Dioclei"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Dioclei"},"content":"        } catch (FlukeException f) {","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Dioclei"},"content":"            assertEquals(\"I don\u0027t understand!\", f.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Dioclei"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Dioclei"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Dioclei"},"content":"    public void addEvent_futureToPastInput_exceptionThrown() {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Dioclei"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Dioclei"},"content":"            Event task \u003d new Event(\"Do Homework\", \"2023-02-01\", \"2023-01-26\");","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Dioclei"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Dioclei"},"content":"        } catch (FlukeException f) {","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"Dioclei"},"content":"            assertEquals(\"I don\u0027t understand!\", f.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"Dioclei"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"Dioclei":32}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Dioclei"},"content":"todo do homework","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"Dioclei"},"content":"event house event /from tomorrow /to friday","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"Dioclei"},"content":"deadline prepare for test /by friday night","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"Dioclei"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"Dioclei":4}}]
