[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"WangCheng0116"},"content":"# core.Duke project template","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"WangCheng0116"},"content":"3. After that, locate the `src/main/java/core.Duke.java` file, right-click it, and choose `Run core.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"WangCheng0116":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"WangCheng0116"},"content":"    testImplementation \u0027junit:junit:4.13.1\u0027","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2023-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"WangCheng0116":1,"-":42}},{"path":"src/main/java/commands/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangCheng0116"},"content":"package commands;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"WangCheng0116"},"content":"import storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"WangCheng0116"},"content":"import tasklist.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"WangCheng0116"},"content":"import tasks.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"WangCheng0116"},"content":"import ui.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"WangCheng0116"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"WangCheng0116"},"content":" * Represents a command to add a deadline task to the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"WangCheng0116"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"WangCheng0116"},"content":"public class AddDeadlineCommand implements Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"WangCheng0116"},"content":"    private Task task;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"WangCheng0116"},"content":"     * Constructs an AddDeadlineCommand with the specified deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"WangCheng0116"},"content":"     * @param task The deadline task to be added.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"WangCheng0116"},"content":"    public AddDeadlineCommand(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"WangCheng0116"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"WangCheng0116"},"content":"     * Executes the command to add the given deadline task to the task list and update storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"WangCheng0116"},"content":"     * @param tasks   The task list that the task will be added to.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"WangCheng0116"},"content":"     * @param ui      The user interface to display messages to the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"WangCheng0116"},"content":"     * @param storage The storage to update with the new task information.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"WangCheng0116"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"WangCheng0116"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"WangCheng0116"},"content":"        tasks.add(task);             // Add task to the task list","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"WangCheng0116"},"content":"        storage.addLine(task.toString()); // Update storage with the new task","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"WangCheng0116"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"WangCheng0116":36}},{"path":"src/main/java/commands/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangCheng0116"},"content":"package commands;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"WangCheng0116"},"content":"import storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"WangCheng0116"},"content":"import tasklist.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"WangCheng0116"},"content":"import tasks.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"WangCheng0116"},"content":"import ui.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"WangCheng0116"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"WangCheng0116"},"content":" * Represents a command to add an event task to the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"WangCheng0116"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"WangCheng0116"},"content":"public class AddEventCommand implements Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"WangCheng0116"},"content":"    private Task task;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"WangCheng0116"},"content":"     * Constructs an AddEventCommand with the specified event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"WangCheng0116"},"content":"     * @param task The event task to be added.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"WangCheng0116"},"content":"    public AddEventCommand(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"WangCheng0116"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"WangCheng0116"},"content":"     * Executes the command to add the given event task to the task list and update storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"WangCheng0116"},"content":"     * @param tasks   The task list that the task will be added to.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"WangCheng0116"},"content":"     * @param ui      The user interface to display messages to the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"WangCheng0116"},"content":"     * @param storage The storage to update with the new task information.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"WangCheng0116"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"WangCheng0116"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"WangCheng0116"},"content":"        tasks.add(task);             // Add task to the task list","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"WangCheng0116"},"content":"        storage.addLine(task.toString()); // Update storage with the new task","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"WangCheng0116"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"WangCheng0116":36}},{"path":"src/main/java/commands/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangCheng0116"},"content":"package commands;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"WangCheng0116"},"content":"import storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"WangCheng0116"},"content":"import tasklist.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"WangCheng0116"},"content":"import tasks.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"WangCheng0116"},"content":"import ui.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"WangCheng0116"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"WangCheng0116"},"content":" * Represents a command to add a todo task to the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"WangCheng0116"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"WangCheng0116"},"content":"public class AddTodoCommand implements Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"WangCheng0116"},"content":"     * The regular expression pattern for matching the format of a todo command.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"WangCheng0116"},"content":"    public static final String TODO_PATTERN \u003d \"^(todo)\\\\s+.+\";","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"WangCheng0116"},"content":"    private Task task;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"WangCheng0116"},"content":"     * Constructs an AddTodoCommand with the specified todo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"WangCheng0116"},"content":"     * @param task The todo task to be added.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"WangCheng0116"},"content":"    public AddTodoCommand(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"WangCheng0116"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"WangCheng0116"},"content":"     * Executes the command to add the given todo task to the task list and update storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"WangCheng0116"},"content":"     * @param tasks   The task list that the task will be added to.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"WangCheng0116"},"content":"     * @param ui      The user interface to display messages to the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"WangCheng0116"},"content":"     * @param storage The storage to update with the new task information.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"WangCheng0116"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"WangCheng0116"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"WangCheng0116"},"content":"        tasks.add(task);             // Add task to the task list","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"WangCheng0116"},"content":"        storage.addLine(task.toString()); // Update storage with the new task","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"WangCheng0116"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"WangCheng0116":41}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangCheng0116"},"content":"package commands;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"WangCheng0116"},"content":"import storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"WangCheng0116"},"content":"import tasklist.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"WangCheng0116"},"content":"import ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"WangCheng0116"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"WangCheng0116"},"content":" * The interface representing a command that can be executed on the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"WangCheng0116"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"WangCheng0116"},"content":"public interface Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"WangCheng0116"},"content":"     * Executes the command on the given task list, user interface, and storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"WangCheng0116"},"content":"     * @param tasks   The task list on which the command will be executed.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"WangCheng0116"},"content":"     * @param ui      The user interface to display messages to the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"WangCheng0116"},"content":"     * @param storage The storage to update as needed by the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"WangCheng0116"},"content":"    void execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"WangCheng0116"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"WangCheng0116":20}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangCheng0116"},"content":"package commands;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"WangCheng0116"},"content":"import storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"WangCheng0116"},"content":"import tasklist.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"WangCheng0116"},"content":"import ui.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"WangCheng0116"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"WangCheng0116"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"WangCheng0116"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"WangCheng0116"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"WangCheng0116"},"content":"     * The regular expression pattern for matching the format of a delete command.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"WangCheng0116"},"content":"    public static final String DELETE_PATTERN \u003d \"^(delete)\\\\s+\\\\d+$\";","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"WangCheng0116"},"content":"    private int pos;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"WangCheng0116"},"content":"     * Constructs a DeleteCommand with the specified position of the task to delete.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"WangCheng0116"},"content":"     * @param pos The position of the task to be deleted.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"WangCheng0116"},"content":"    public DeleteCommand(int pos) {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"WangCheng0116"},"content":"        this.pos \u003d pos;","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"WangCheng0116"},"content":"     * Executes the command to delete the task at the specified position from the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"WangCheng0116"},"content":"     * @param tasks   The task list from which the task will be deleted.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"WangCheng0116"},"content":"     * @param ui      The user interface to display messages to the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"WangCheng0116"},"content":"     * @param storage The storage to update as needed by the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"WangCheng0116"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"WangCheng0116"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"WangCheng0116"},"content":"        tasks.delete(pos); // Delete task from the task list","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"WangCheng0116"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"WangCheng0116":39}},{"path":"src/main/java/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangCheng0116"},"content":"package commands;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"WangCheng0116"},"content":"import storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"WangCheng0116"},"content":"import tasklist.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"WangCheng0116"},"content":"import ui.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"WangCheng0116"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"WangCheng0116"},"content":" * Represents a command to exit the application.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"WangCheng0116"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"WangCheng0116"},"content":"public class ExitCommand implements Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"WangCheng0116"},"content":"     * Executes the command to exit the application.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"WangCheng0116"},"content":"     * @param tasks   The task list (not used in this command).","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"WangCheng0116"},"content":"     * @param ui      The user interface to handle the application exit.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"WangCheng0116"},"content":"     * @param storage The storage (not used in this command).","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"WangCheng0116"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"WangCheng0116"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"WangCheng0116"},"content":"        ui.exit(); // Instruct the user interface to exit the application","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"WangCheng0116"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"WangCheng0116":23}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangCheng0116"},"content":"package commands;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"WangCheng0116"},"content":"import storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"WangCheng0116"},"content":"import tasklist.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"WangCheng0116"},"content":"import ui.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"WangCheng0116"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"WangCheng0116"},"content":" * Represents a command to find tasks containing a specified keyword in the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"WangCheng0116"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"WangCheng0116"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"WangCheng0116"},"content":"    private static String keyword;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"WangCheng0116"},"content":"     * Constructs a FindCommand with the specified keyword.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"WangCheng0116"},"content":"     * @param keyword The keyword to search for in the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"WangCheng0116"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"WangCheng0116"},"content":"        FindCommand.keyword \u003d keyword;","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"WangCheng0116"},"content":"     * Executes the find command on the provided task list, displaying tasks that match the keyword.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"WangCheng0116"},"content":"     * @param tasks   The task list to search within.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"WangCheng0116"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"WangCheng0116"},"content":"     * @param storage The storage manager to handle data storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"WangCheng0116"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"WangCheng0116"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"WangCheng0116"},"content":"        tasks.find(keyword);","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"WangCheng0116"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"WangCheng0116":34}},{"path":"src/main/java/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangCheng0116"},"content":"package commands;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"WangCheng0116"},"content":"import storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"WangCheng0116"},"content":"import tasklist.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"WangCheng0116"},"content":"import ui.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"WangCheng0116"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"WangCheng0116"},"content":" * Represents a command to display help information and usage examples.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"WangCheng0116"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"WangCheng0116"},"content":"public class HelpCommand implements Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"WangCheng0116"},"content":"     * Executes the command to display help information and usage examples to the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"WangCheng0116"},"content":"     * @param tasks   The task list (not used in this command).","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"WangCheng0116"},"content":"     * @param ui      The user interface to display help messages.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"WangCheng0116"},"content":"     * @param storage The storage (not used in this command).","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"WangCheng0116"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"WangCheng0116"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"WangCheng0116"},"content":"        ui.showMessage(\"Sorry, I don\u0027t understand what do you mean.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"WangCheng0116"},"content":"        ui.showMessage(\"Here are some sample usages for your reference:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"WangCheng0116"},"content":"        ui.showMessage(\"1. Add a deadline to your list: deadline + (description) + (deadline)\");","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"WangCheng0116"},"content":"        ui.showMessage(\"2. Add a todo task to your list: todo + (description)\");","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"WangCheng0116"},"content":"        ui.showMessage(\"3. Add an event task to your list: event + (description) + from + \"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"WangCheng0116"},"content":"          + \"(startdate) + to + (enddate)\");","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"WangCheng0116"},"content":"        ui.showMessage(\"4. Delete a task: delete + (line number)\");","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"WangCheng0116"},"content":"        ui.showMessage(\"5. Mark a task: mark + (line number)\");","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"WangCheng0116"},"content":"        ui.showMessage(\"6. Unmark a class: unmark + (line number)\");","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"WangCheng0116"},"content":"        ui.showMessage(\"content in ( ) is for you to fill out\");","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"WangCheng0116"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"WangCheng0116":31}},{"path":"src/main/java/commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangCheng0116"},"content":"package commands;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"WangCheng0116"},"content":"import storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"WangCheng0116"},"content":"import tasklist.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"WangCheng0116"},"content":"import ui.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"WangCheng0116"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"WangCheng0116"},"content":" * Represents a command to handle invalid user input by displaying an error message.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"WangCheng0116"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"WangCheng0116"},"content":"public class InvalidCommand implements Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"WangCheng0116"},"content":"    private String errorMessage;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"WangCheng0116"},"content":"     * Constructs an InvalidCommand with the specified error message.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"WangCheng0116"},"content":"     * @param errorMessage The error message to be displayed.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"WangCheng0116"},"content":"    public InvalidCommand(String errorMessage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"WangCheng0116"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"WangCheng0116"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"WangCheng0116"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"WangCheng0116"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"WangCheng0116":26}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangCheng0116"},"content":"package commands;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"WangCheng0116"},"content":"import storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"WangCheng0116"},"content":"import tasklist.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"WangCheng0116"},"content":"import ui.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"WangCheng0116"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"WangCheng0116"},"content":" * Represents a command to display the list of tasks to the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"WangCheng0116"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"WangCheng0116"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"WangCheng0116"},"content":"     * Executes the command to display the list of tasks to the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"WangCheng0116"},"content":"     * @param tasks   The task list to be displayed.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"WangCheng0116"},"content":"     * @param ui      The user interface to display the list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"WangCheng0116"},"content":"     * @param storage The storage (not used in this command).","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"WangCheng0116"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"WangCheng0116"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"WangCheng0116"},"content":"        tasks.print(); // Display the list of tasks through the user interface","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"WangCheng0116"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"WangCheng0116":23}},{"path":"src/main/java/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangCheng0116"},"content":"package commands;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"WangCheng0116"},"content":"import storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"WangCheng0116"},"content":"import tasklist.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"WangCheng0116"},"content":"import ui.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"WangCheng0116"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"WangCheng0116"},"content":" * Represents a command to mark a task as done in the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"WangCheng0116"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"WangCheng0116"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"WangCheng0116"},"content":"    private int pos;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"WangCheng0116"},"content":"     * Constructs a MarkCommand with the specified position of the task to mark.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"WangCheng0116"},"content":"     * @param pos The position of the task to be marked.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"WangCheng0116"},"content":"    public MarkCommand(int pos) {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"WangCheng0116"},"content":"        this.pos \u003d pos;","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"WangCheng0116"},"content":"     * The regular expression pattern for matching the format of a mark command.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"WangCheng0116"},"content":"    public static final String MARK_PATTERN \u003d \"^(mark)\\\\s+\\\\d+$\";","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"WangCheng0116"},"content":"     * Executes the command to mark the task at the specified position as done in the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"WangCheng0116"},"content":"     * If the position is invalid, an error message is displayed.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"WangCheng0116"},"content":"     * @param tasks   The task list in which the task will be marked as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"WangCheng0116"},"content":"     * @param ui      The user interface to display messages to the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"WangCheng0116"},"content":"     * @param storage The storage to update as needed by the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"WangCheng0116"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"WangCheng0116"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"WangCheng0116"},"content":"        if (pos \u003e tasks.size() || pos \u003c\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"WangCheng0116"},"content":"            ui.showError(\"Invalid index. Please enter again.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"WangCheng0116"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"WangCheng0116"},"content":"            tasks.mark(pos);        // Mark the task as done in the task list","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"WangCheng0116"},"content":"            Storage.refresh(tasks); // Update storage with the modified task list","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"WangCheng0116"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"WangCheng0116"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"WangCheng0116":45}},{"path":"src/main/java/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangCheng0116"},"content":"package commands;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"WangCheng0116"},"content":"import storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"WangCheng0116"},"content":"import tasklist.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"WangCheng0116"},"content":"import ui.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"WangCheng0116"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"WangCheng0116"},"content":" * Represents a command to unmark a task as not done in the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"WangCheng0116"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"WangCheng0116"},"content":"public class UnmarkCommand implements Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"WangCheng0116"},"content":"     * The regular expression pattern for matching the format of an unmark command.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"WangCheng0116"},"content":"    public static final String UNMARK_PATTERN \u003d \"^(unmark)\\\\s+\\\\d+$\";","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"WangCheng0116"},"content":"    private int pos;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"WangCheng0116"},"content":"     * Constructs an UnmarkCommand with the specified position of the task to unmark.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"WangCheng0116"},"content":"     * @param pos The position of the task to be unmarked.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"WangCheng0116"},"content":"    public UnmarkCommand(int pos) {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"WangCheng0116"},"content":"        this.pos \u003d pos;","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"WangCheng0116"},"content":"     * Executes the command to unmark the task at the specified position as not done in the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"WangCheng0116"},"content":"     * If the position is invalid, an error message is displayed through the user interface.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"WangCheng0116"},"content":"     * @param tasks   The task list in which the task will be unmarked.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"WangCheng0116"},"content":"     * @param ui      The user interface to display error messages.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"WangCheng0116"},"content":"     * @param storage The storage to update as needed by the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"WangCheng0116"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"WangCheng0116"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"WangCheng0116"},"content":"        if (pos \u003e tasks.size() || pos \u003c\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"WangCheng0116"},"content":"            ui.showError(\"Invalid index. Please enter again.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"WangCheng0116"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"WangCheng0116"},"content":"            tasks.unmark(pos);      // Unmark the task in the task list","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"WangCheng0116"},"content":"            Storage.refresh(tasks); // Update storage with the modified task list","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"WangCheng0116"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"WangCheng0116"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"WangCheng0116":45}},{"path":"src/main/java/core/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangCheng0116"},"content":"package core;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"WangCheng0116"},"content":"import commands.Command;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"WangCheng0116"},"content":"import parser.CommandParser;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"WangCheng0116"},"content":"import storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"WangCheng0116"},"content":"import tasklist.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"WangCheng0116"},"content":"import ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"WangCheng0116"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"WangCheng0116"},"content":" * Duke is a task management application that interacts with users through a command-line interface.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"WangCheng0116"},"content":" * It allows users to manage tasks by adding, marking, and deleting tasks from a task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"WangCheng0116"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"WangCheng0116"},"content":"    private static Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"WangCheng0116"},"content":"    private static TaskList taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"WangCheng0116"},"content":"    private static Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"WangCheng0116"},"content":"    private static String filepath;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"WangCheng0116"},"content":"     * Constructs a Duke instance with the specified filepath for storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"WangCheng0116"},"content":"     * @param filepath The filepath for task storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"WangCheng0116"},"content":"    public Duke(String filepath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"WangCheng0116"},"content":"        Duke.filepath \u003d filepath;","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"WangCheng0116"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"WangCheng0116"},"content":"        storage \u003d new Storage(filepath);","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"WangCheng0116"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"WangCheng0116"},"content":"     * Runs the Duke application, displaying a welcome message and handling user commands.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"WangCheng0116"},"content":"     * The application continues running until the user inputs an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"WangCheng0116"},"content":"    public static void run() {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"WangCheng0116"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"WangCheng0116"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"WangCheng0116"},"content":"        while (!isExit) {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"WangCheng0116"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"WangCheng0116"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"WangCheng0116"},"content":"                if (fullCommand.equals(null)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"WangCheng0116"},"content":"                    isExit \u003d true;","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"WangCheng0116"},"content":"                } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"WangCheng0116"},"content":"                    Command c \u003d CommandParser.parse(fullCommand);","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"WangCheng0116"},"content":"                    c.execute(taskList, ui, storage);","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"WangCheng0116"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"WangCheng0116"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"WangCheng0116"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"WangCheng0116"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"WangCheng0116"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"WangCheng0116"},"content":"     * The main method to start the Duke application.","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"WangCheng0116"},"content":"     * @param args Command-line arguments (not used in this application).","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"WangCheng0116"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"WangCheng0116":58,"-":4}},{"path":"src/main/java/parser/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangCheng0116"},"content":"package parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"WangCheng0116"},"content":"import commands.AddDeadlineCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"WangCheng0116"},"content":"import commands.AddEventCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"WangCheng0116"},"content":"import commands.AddTodoCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"WangCheng0116"},"content":"import commands.Command;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"WangCheng0116"},"content":"import commands.DeleteCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"WangCheng0116"},"content":"import commands.ExitCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"WangCheng0116"},"content":"import commands.FindCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"WangCheng0116"},"content":"import commands.HelpCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"WangCheng0116"},"content":"import commands.InvalidCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"WangCheng0116"},"content":"import commands.ListCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"WangCheng0116"},"content":"import commands.MarkCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"WangCheng0116"},"content":"import commands.UnmarkCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"WangCheng0116"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"WangCheng0116"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"WangCheng0116"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"WangCheng0116"},"content":" * The CommandParser is responsible for parsing input and generating the Command objects.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"WangCheng0116"},"content":" * It examines the input to determine the type of command and returns the appropriate instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"WangCheng0116"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"WangCheng0116"},"content":"public class CommandParser {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"WangCheng0116"},"content":"     * Extracts the command keyword from the input string.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"WangCheng0116"},"content":"     * @param input The input string from the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"WangCheng0116"},"content":"     * @return The command keyword.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"WangCheng0116"},"content":"    private static String extractCommand(String input) {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"WangCheng0116"},"content":"        String[] words \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"WangCheng0116"},"content":"        if (words.length \u003e 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"WangCheng0116"},"content":"            return words[0].toLowerCase();","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"WangCheng0116"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"WangCheng0116"},"content":"        return \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"WangCheng0116"},"content":"     * Extracts the value (e.g., task position) from the input string.","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"WangCheng0116"},"content":"     * @param input The input string from the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"WangCheng0116"},"content":"     * @return The extracted value.","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"WangCheng0116"},"content":"    private static int extractValue(String input) {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"WangCheng0116"},"content":"        String[] parts \u003d input.split(\"\\\\s+\");","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"WangCheng0116"},"content":"        return Integer.parseInt(parts[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"WangCheng0116"},"content":"     * Parses the user input and generates the appropriate Command instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"WangCheng0116"},"content":"     * @param input The input string from the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"WangCheng0116"},"content":"     * @return The corresponding Command instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"WangCheng0116"},"content":"    public static Command parse(String input) {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"WangCheng0116"},"content":"        String command \u003d extractCommand(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"WangCheng0116"},"content":"        TaskParser taskParser \u003d new TaskParser();","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"WangCheng0116"},"content":"        switch (command) {","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"WangCheng0116"},"content":"            case \"mark\" -\u003e {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"WangCheng0116"},"content":"                Matcher markMatcher \u003d Pattern.compile(MarkCommand.MARK_PATTERN).matcher(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"WangCheng0116"},"content":"                if (markMatcher.matches()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"WangCheng0116"},"content":"                    int pos \u003d extractValue(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"WangCheng0116"},"content":"                    return new MarkCommand(pos);","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"WangCheng0116"},"content":"                } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"WangCheng0116"},"content":"                    return new InvalidCommand(\"Invalid mark command format.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"WangCheng0116"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"WangCheng0116"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"WangCheng0116"},"content":"            case \"unmark\" -\u003e {","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"WangCheng0116"},"content":"                Matcher unmarkMatcher \u003d Pattern.compile(UnmarkCommand.UNMARK_PATTERN).matcher(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"WangCheng0116"},"content":"                if (unmarkMatcher.matches()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"WangCheng0116"},"content":"                    int pos \u003d extractValue(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"WangCheng0116"},"content":"                    return new UnmarkCommand(pos);","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"WangCheng0116"},"content":"                } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"WangCheng0116"},"content":"                    return new InvalidCommand(\"Invalid unmark command format.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"WangCheng0116"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"WangCheng0116"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"WangCheng0116"},"content":"            case \"delete\" -\u003e {","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"WangCheng0116"},"content":"                Matcher deleteMatcher \u003d Pattern.compile(DeleteCommand.DELETE_PATTERN).matcher(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"WangCheng0116"},"content":"                if (deleteMatcher.matches()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"WangCheng0116"},"content":"                    int pos \u003d extractValue(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"WangCheng0116"},"content":"                    return new DeleteCommand(pos);","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"WangCheng0116"},"content":"                } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"WangCheng0116"},"content":"                    return new InvalidCommand(\"Invalid delete command format.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"WangCheng0116"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"WangCheng0116"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"WangCheng0116"},"content":"            case \"find\" -\u003e {","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"WangCheng0116"},"content":"                String keyword \u003d input.substring(\"find\".length()).trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"WangCheng0116"},"content":"                return new FindCommand(keyword);","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"WangCheng0116"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"WangCheng0116"},"content":"            case \"event\" -\u003e {","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"WangCheng0116"},"content":"                return new AddEventCommand(taskParser.parseTask(input));","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"WangCheng0116"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"WangCheng0116"},"content":"            case \"todo\" -\u003e {","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"WangCheng0116"},"content":"                return new AddTodoCommand(taskParser.parseTask(input));","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"WangCheng0116"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"WangCheng0116"},"content":"            case \"deadline\" -\u003e {","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"WangCheng0116"},"content":"                return new AddDeadlineCommand(taskParser.parseTask(input));","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"WangCheng0116"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"WangCheng0116"},"content":"            case \"bye\" -\u003e {","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"WangCheng0116"},"content":"                return new ExitCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"WangCheng0116"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"WangCheng0116"},"content":"            case \"list\" -\u003e {","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"WangCheng0116"},"content":"                return new ListCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"WangCheng0116"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"WangCheng0116"},"content":"            default -\u003e {","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"WangCheng0116"},"content":"                return new HelpCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"WangCheng0116"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"WangCheng0116"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"WangCheng0116"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"WangCheng0116":112}},{"path":"src/main/java/parser/DataParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangCheng0116"},"content":"package parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"WangCheng0116"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"WangCheng0116"},"content":"import tasks.Event;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"WangCheng0116"},"content":"import tasks.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"WangCheng0116"},"content":"import tasks.ToDo;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"WangCheng0116"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"WangCheng0116"},"content":" * The DataParser is responsible for parsing data from storage","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"WangCheng0116"},"content":" * files and converting them into Task objects.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"WangCheng0116"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"WangCheng0116"},"content":"public class DataParser {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"WangCheng0116"},"content":"     * Parses a line from a storage file and converts it into a corresponding Task object.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"WangCheng0116"},"content":"     * @param line The line to be parsed.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"WangCheng0116"},"content":"     * @return A Task object corresponding to the parsed line.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"WangCheng0116"},"content":"    public static Task parseLineToTask(String line) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"WangCheng0116"},"content":"        String typeIndicator \u003d line.substring(0, 3);","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"WangCheng0116"},"content":"        switch (typeIndicator) {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"WangCheng0116"},"content":"            case \"[D]\":","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"WangCheng0116"},"content":"                return parseDeadline(line);","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"WangCheng0116"},"content":"            case \"[E]\":","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"WangCheng0116"},"content":"                return parseEvent(line);","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"WangCheng0116"},"content":"            case \"[T]\":","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"WangCheng0116"},"content":"                return parseToDo(line);","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"WangCheng0116"},"content":"            default:","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"WangCheng0116"},"content":"                System.out.println(\"Please check the original file for correctness.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"WangCheng0116"},"content":"                return null;","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"WangCheng0116"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"WangCheng0116"},"content":"     * Parses a line representing a deadline task and converts it into a Deadline object.","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"WangCheng0116"},"content":"     * @param line The line representing the deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"WangCheng0116"},"content":"     * @return A Deadline object corresponding to the parsed line.","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"WangCheng0116"},"content":"    public static Deadline parseDeadline(String line) {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"WangCheng0116"},"content":"        int descriptionStart \u003d \"deadline\".length() + 1; // Length of \"deadline\" plus the space","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"WangCheng0116"},"content":"        int byIndex \u003d line.indexOf(\"by:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"WangCheng0116"},"content":"        String description \u003d line.substring(descriptionStart, byIndex).trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"WangCheng0116"},"content":"        String date \u003d line.substring(byIndex + \"/by\".length()).trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"WangCheng0116"},"content":"        boolean isMarked \u003d line.charAt(4) \u003d\u003d \u0027X\u0027; // Assuming index 4 corresponds to the \"[ ]\" checkmark","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"WangCheng0116"},"content":"        return new Deadline(description, date, isMarked);","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"WangCheng0116"},"content":"     * Parses a line representing an event task and converts it into an Event object.","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"WangCheng0116"},"content":"     * @param line The line representing the event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"WangCheng0116"},"content":"     * @return An Event object corresponding to the parsed line.","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"WangCheng0116"},"content":"    public static Event parseEvent(String line) {","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"WangCheng0116"},"content":"        int descriptionStart \u003d line.indexOf(\"] \") + 2; // Index of the first character after \"] \"","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"WangCheng0116"},"content":"        int startFromIndex \u003d line.indexOf(\"from \") + 6; // Index of the character after \"from: \"","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"WangCheng0116"},"content":"        int toIndex \u003d line.indexOf(\"to \", startFromIndex); // Index of the character before \"to: \"","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"WangCheng0116"},"content":"        int endFromIndex \u003d toIndex + 4; // Index of the character after \"to: \"","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"WangCheng0116"},"content":"        String description \u003d line.substring(descriptionStart, startFromIndex - 8).trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"WangCheng0116"},"content":"        String start \u003d line.substring(startFromIndex, toIndex).trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"WangCheng0116"},"content":"        String end \u003d line.substring(endFromIndex).trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"WangCheng0116"},"content":"        boolean isMarked \u003d line.charAt(4) \u003d\u003d \u0027X\u0027; // Assuming index 4 corresponds to the \"[ ]\" checkmark","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"WangCheng0116"},"content":"        return new Event(description, start, end, isMarked);","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"WangCheng0116"},"content":"     * Parses a line representing a todo task and converts it into a ToDo object.","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"WangCheng0116"},"content":"     * @param line The line representing the todo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"WangCheng0116"},"content":"     * @return A ToDo object corresponding to the parsed line.","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"WangCheng0116"},"content":"    public static ToDo parseToDo(String line) {","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"WangCheng0116"},"content":"        int descriptionStart \u003d line.indexOf(\"] \") + 2; // Index of the first character after \"] \"","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"WangCheng0116"},"content":"        String description \u003d line.substring(descriptionStart).trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"WangCheng0116"},"content":"        boolean isMarked \u003d line.charAt(4) \u003d\u003d \u0027X\u0027; // Assuming index 4 corresponds to the \"[ ]\" checkmark","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"WangCheng0116"},"content":"        return new ToDo(description, isMarked);","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"WangCheng0116"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"WangCheng0116":88}},{"path":"src/main/java/parser/TaskParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangCheng0116"},"content":"package parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"WangCheng0116"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"WangCheng0116"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"WangCheng0116"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"WangCheng0116"},"content":"import tasks.Event;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"WangCheng0116"},"content":"import tasks.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"WangCheng0116"},"content":"import tasks.ToDo;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"WangCheng0116"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"WangCheng0116"},"content":" * The TaskParser class is responsible for parsing user input","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"WangCheng0116"},"content":" * and generating Task objects based on different task types.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"WangCheng0116"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"WangCheng0116"},"content":"public class TaskParser {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"WangCheng0116"},"content":"     * Parses the input string and generates a Task object based on the specified task type.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"WangCheng0116"},"content":"     * @param input The input string containing task information.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"WangCheng0116"},"content":"     * @return A Task object representing the parsed task.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"WangCheng0116"},"content":"    public Task parseTask(String input) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"WangCheng0116"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"WangCheng0116"},"content":"            if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"WangCheng0116"},"content":"                return parseDeadline(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"WangCheng0116"},"content":"            } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"WangCheng0116"},"content":"                return parseEvent(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"WangCheng0116"},"content":"            } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"WangCheng0116"},"content":"                return parseTodo(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"WangCheng0116"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"WangCheng0116"},"content":"                throw new InvalidTaskFormatException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"WangCheng0116"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"WangCheng0116"},"content":"        } catch (InvalidTaskFormatException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"WangCheng0116"},"content":"            System.out.println(\"☹ OOPS!!! \" + e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"WangCheng0116"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"WangCheng0116"},"content":"        return null;","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"WangCheng0116"},"content":"    private Deadline parseDeadline(String input) throws InvalidTaskFormatException {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"WangCheng0116"},"content":"        Pattern pattern \u003d Pattern.compile(\"deadline (.+) by: (.+)\");","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"WangCheng0116"},"content":"        Matcher matcher \u003d pattern.matcher(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"WangCheng0116"},"content":"        if (matcher.find()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"WangCheng0116"},"content":"            String taskDescription \u003d matcher.group(1);","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"WangCheng0116"},"content":"            String deadlineTime \u003d matcher.group(2);","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"WangCheng0116"},"content":"            if (taskDescription.isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"WangCheng0116"},"content":"                throw new InvalidTaskFormatException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"WangCheng0116"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"WangCheng0116"},"content":"            return new Deadline(taskDescription, deadlineTime);","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"WangCheng0116"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"WangCheng0116"},"content":"            throw new InvalidTaskFormatException(\"Invalid deadline format.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"WangCheng0116"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"WangCheng0116"},"content":"    private Event parseEvent(String input) throws InvalidTaskFormatException {","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"WangCheng0116"},"content":"        Pattern pattern \u003d Pattern.compile(\"event (.+) from (.+) to (.+)\");","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"WangCheng0116"},"content":"        Matcher matcher \u003d pattern.matcher(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"WangCheng0116"},"content":"        if (matcher.find()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"WangCheng0116"},"content":"            String eventDescription \u003d matcher.group(1);","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"WangCheng0116"},"content":"            String startTime \u003d matcher.group(2);","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"WangCheng0116"},"content":"            String endTime \u003d matcher.group(3);","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"WangCheng0116"},"content":"            if (eventDescription.isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"WangCheng0116"},"content":"                throw new InvalidTaskFormatException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"WangCheng0116"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"WangCheng0116"},"content":"            return new Event(eventDescription, startTime, endTime);","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"WangCheng0116"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"WangCheng0116"},"content":"            throw new InvalidTaskFormatException(\"Invalid event format.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"WangCheng0116"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"WangCheng0116"},"content":"    private ToDo parseTodo(String input) throws InvalidTaskFormatException {","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"WangCheng0116"},"content":"        String taskDescription \u003d input.replace(\"todo\", \"\").trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"WangCheng0116"},"content":"        if (taskDescription.isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"WangCheng0116"},"content":"            throw new InvalidTaskFormatException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"WangCheng0116"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"WangCheng0116"},"content":"        return new ToDo(taskDescription);","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"WangCheng0116"},"content":"     * Custom exception class for representing an invalid task format.","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"WangCheng0116"},"content":"    public static class InvalidTaskFormatException extends Exception {","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"WangCheng0116"},"content":"        public InvalidTaskFormatException(String message) {","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"WangCheng0116"},"content":"            super(message);","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"WangCheng0116"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"WangCheng0116"},"content":"}","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"WangCheng0116":96}},{"path":"src/main/java/storage/DataReader.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangCheng0116"},"content":"package storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"WangCheng0116"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"WangCheng0116"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"WangCheng0116"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"WangCheng0116"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"WangCheng0116"},"content":"import parser.DataParser;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"WangCheng0116"},"content":"import tasks.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"WangCheng0116"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"WangCheng0116"},"content":" * The DataReader class is responsible for reading task data from a storage file and converting it into Task objects.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"WangCheng0116"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"WangCheng0116"},"content":"public class DataReader {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"WangCheng0116"},"content":"    private static String path;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"WangCheng0116"},"content":"     * Constructs a DataReader instance with the specified file path.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"WangCheng0116"},"content":"     * @param path The file path of the storage file to be read.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"WangCheng0116"},"content":"    public DataReader(String path) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"WangCheng0116"},"content":"        DataReader.path \u003d path;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"WangCheng0116"},"content":"     * Reads tasks from the storage file and converts them into an ArrayList of Task objects.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"WangCheng0116"},"content":"     * @return An ArrayList of Task objects representing the tasks read from the storage file.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"WangCheng0116"},"content":"    public static ArrayList\u003cTask\u003e readTasksFromFile() {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"WangCheng0116"},"content":"        ArrayList\u003cTask\u003e tasksList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"WangCheng0116"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(DataReader.path))) {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"WangCheng0116"},"content":"            String line;","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"WangCheng0116"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"WangCheng0116"},"content":"                Task task \u003d DataParser.parseLineToTask(line);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"WangCheng0116"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"WangCheng0116"},"content":"                    tasksList.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"WangCheng0116"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"WangCheng0116"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"WangCheng0116"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"WangCheng0116"},"content":"            System.out.println(\"Error reading the file or the file doesn\u0027t exist.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"WangCheng0116"},"content":"            System.out.println(\"Please try again after ensuring the correctness of the file.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"WangCheng0116"},"content":"            System.exit(1);","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"WangCheng0116"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"WangCheng0116"},"content":"        return tasksList;","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"WangCheng0116"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"WangCheng0116":50}},{"path":"src/main/java/storage/DataWriter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangCheng0116"},"content":"package storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"WangCheng0116"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"WangCheng0116"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"WangCheng0116"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"WangCheng0116"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"WangCheng0116"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"WangCheng0116"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"WangCheng0116"},"content":"import java.util.List;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"WangCheng0116"},"content":"import tasklist.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"WangCheng0116"},"content":"import tasks.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"WangCheng0116"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"WangCheng0116"},"content":" * The DataWriter class is responsible for writing and updating task data in a storage file.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"WangCheng0116"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"WangCheng0116"},"content":"public class DataWriter {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"WangCheng0116"},"content":"    private static String filePath;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"WangCheng0116"},"content":"     * Constructs a DataWriter instance with the specified file path.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"WangCheng0116"},"content":"     * @param filePath The file path of the storage file to be written to.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"WangCheng0116"},"content":"    public DataWriter(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"WangCheng0116"},"content":"        DataWriter.filePath \u003d filePath;","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"WangCheng0116"},"content":"     * Adds a new line of text to the storage file.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"WangCheng0116"},"content":"     * @param line The line of text to be added.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"WangCheng0116"},"content":"    public static void addLine(String line) {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"WangCheng0116"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(DataWriter.filePath, true))) {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"WangCheng0116"},"content":"            writer.write(line);","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"WangCheng0116"},"content":"            writer.newLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"WangCheng0116"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"WangCheng0116"},"content":"            System.err.println(\"An error occurred while adding the line: \" + e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"WangCheng0116"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"WangCheng0116"},"content":"     * Deletes a line from the storage file based on the line number.","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"WangCheng0116"},"content":"     * @param lineNumber The line number to be deleted.","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"WangCheng0116"},"content":"    public static void deleteLine(int lineNumber) {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"WangCheng0116"},"content":"        List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"WangCheng0116"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(DataWriter.filePath))) {","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"WangCheng0116"},"content":"            String currentLine;","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"WangCheng0116"},"content":"            while ((currentLine \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"WangCheng0116"},"content":"                lines.add(currentLine);","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"WangCheng0116"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"WangCheng0116"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"WangCheng0116"},"content":"            System.err.println(\"An error occurred while reading the file: \" + e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"WangCheng0116"},"content":"            return;","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"WangCheng0116"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"WangCheng0116"},"content":"        if (lineNumber \u003e\u003d 1 \u0026\u0026 lineNumber \u003c\u003d lines.size()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"WangCheng0116"},"content":"            lines.remove(lineNumber - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"WangCheng0116"},"content":"            try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath))) {","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"WangCheng0116"},"content":"                for (String line : lines) {","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"WangCheng0116"},"content":"                    writer.write(line);","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"WangCheng0116"},"content":"                    writer.newLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"WangCheng0116"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"WangCheng0116"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"WangCheng0116"},"content":"                System.err.println(\"An error occurred while writing back to the file: \" + e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"WangCheng0116"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"WangCheng0116"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"WangCheng0116"},"content":"            System.out.println(\"Invalid line number.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"WangCheng0116"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"WangCheng0116"},"content":"     * Refreshes the content of the storage file with the tasks from the given TaskList.","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"WangCheng0116"},"content":"     * @param tasks The TaskList containing tasks to be written to the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"WangCheng0116"},"content":"    public static void refresh(TaskList tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"WangCheng0116"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"WangCheng0116"},"content":"            // Clean the file by overwriting it with an empty content","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"WangCheng0116"},"content":"            BufferedWriter cleanWriter \u003d new BufferedWriter(new FileWriter(filePath, false));","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"WangCheng0116"},"content":"            cleanWriter.write(\"\");","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"WangCheng0116"},"content":"            cleanWriter.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"WangCheng0116"},"content":"            // Append tasks from the array list to the file","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"WangCheng0116"},"content":"            BufferedWriter appendWriter \u003d new BufferedWriter(new FileWriter(filePath, true));","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"WangCheng0116"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"WangCheng0116"},"content":"                Task task \u003d tasks.get(i);","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"WangCheng0116"},"content":"                appendWriter.write(task.toString() + System.lineSeparator());","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"WangCheng0116"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"WangCheng0116"},"content":"            appendWriter.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"WangCheng0116"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"WangCheng0116"},"content":"            System.out.println(\"An error occurred: \" + e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"WangCheng0116"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"WangCheng0116"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"WangCheng0116":99}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangCheng0116"},"content":"package storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"WangCheng0116"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"WangCheng0116"},"content":"import tasklist.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"WangCheng0116"},"content":"import tasks.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"WangCheng0116"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"WangCheng0116"},"content":" * The Storage class provides methods to interact with","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"WangCheng0116"},"content":" * storage files for reading and writing task data.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"WangCheng0116"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"WangCheng0116"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"WangCheng0116"},"content":"    private static String path;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"WangCheng0116"},"content":"    private DataReader dataReader;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"WangCheng0116"},"content":"    private DataWriter dataWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"WangCheng0116"},"content":"     * Constructs a Storage instance with the specified file path.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"WangCheng0116"},"content":"     * @param path The file path of the storage file to be read from and written to.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"WangCheng0116"},"content":"    public Storage(String path) {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"WangCheng0116"},"content":"        Storage.path \u003d path;","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"WangCheng0116"},"content":"        this.dataReader \u003d new DataReader(path);","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"WangCheng0116"},"content":"        this.dataWriter \u003d new DataWriter(path);","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"WangCheng0116"},"content":"     * Adds a new line to the storage file.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"WangCheng0116"},"content":"     * @param line The line to be added.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"WangCheng0116"},"content":"    public static void addLine(String line) {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"WangCheng0116"},"content":"        DataWriter.addLine(line);","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"WangCheng0116"},"content":"     * Deletes a line from the storage file based on the specified position.","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"WangCheng0116"},"content":"     * @param pos The position of the line to be deleted.","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"WangCheng0116"},"content":"    public static void deleteLine(int pos) {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"WangCheng0116"},"content":"        DataWriter.deleteLine(pos);","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"WangCheng0116"},"content":"     * Refreshes the storage file with the tasks from the given TaskList.","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"WangCheng0116"},"content":"     * @param taskList The TaskList containing tasks to be written to the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"WangCheng0116"},"content":"    public static void refresh(TaskList taskList) {","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"WangCheng0116"},"content":"        DataWriter.refresh(taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"WangCheng0116"},"content":"     * Reads task data from a storage file and returns them as an ArrayList of Task objects.","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"WangCheng0116"},"content":"     * @param fileName The name of the storage file to be read.","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"WangCheng0116"},"content":"     * @return An ArrayList of Task objects representing the tasks read from the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"WangCheng0116"},"content":"    public static ArrayList\u003cTask\u003e readFileToTasksLists(String fileName) {","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"WangCheng0116"},"content":"        return DataReader.readTasksFromFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"WangCheng0116"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"WangCheng0116":66}},{"path":"src/main/java/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangCheng0116"},"content":"package tasklist;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"WangCheng0116"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"WangCheng0116"},"content":"import storage.DataReader;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"WangCheng0116"},"content":"import storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"WangCheng0116"},"content":"import tasks.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"WangCheng0116"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"WangCheng0116"},"content":" * The TaskList class manages a list of tasks, providing","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"WangCheng0116"},"content":" * methods to add, mark, unmark, delete, and print tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"WangCheng0116"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"WangCheng0116"},"content":"public class TaskList {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"WangCheng0116"},"content":"    private static ArrayList\u003cTask\u003e ls \u003d DataReader.readTasksFromFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"WangCheng0116"},"content":"     * Adds a task to the list and updates the storage file.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"WangCheng0116"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"WangCheng0116"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"WangCheng0116"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"WangCheng0116"},"content":"            return;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"WangCheng0116"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"WangCheng0116"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"WangCheng0116"},"content":"        ls.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"WangCheng0116"},"content":"        System.out.println(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"WangCheng0116"},"content":"        System.out.println(\"Now you have \" + this.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"WangCheng0116"},"content":"     * Marks a task as done and updates the storage file.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"WangCheng0116"},"content":"     * @param pos The position of the task to be marked.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"WangCheng0116"},"content":"    public void mark(int pos) {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"WangCheng0116"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"WangCheng0116"},"content":"        ls.get(pos - 1).toMark();","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"WangCheng0116"},"content":"        System.out.println(ls.get(pos - 1).toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"WangCheng0116"},"content":"     * Retrieves a task from the list at the specified index.","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"WangCheng0116"},"content":"     * @param i The index of the task to retrieve.","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"WangCheng0116"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"WangCheng0116"},"content":"    public Task get(int i) {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"WangCheng0116"},"content":"        return ls.get(i);","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"WangCheng0116"},"content":"     * Unmarks a task as done and updates the storage file.","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"WangCheng0116"},"content":"     * @param pos The position of the task to be unmarked.","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"WangCheng0116"},"content":"    public void unmark(int pos) {","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"WangCheng0116"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"WangCheng0116"},"content":"        ls.get(pos - 1).toUnmark();","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"WangCheng0116"},"content":"        System.out.println(ls.get(pos - 1));","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"WangCheng0116"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"WangCheng0116"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"WangCheng0116"},"content":"    public int size() {","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"WangCheng0116"},"content":"        return ls.size();","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"WangCheng0116"},"content":"     * Deletes a task from the list and updates the storage file.","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"WangCheng0116"},"content":"     * @param pos The position of the task to be deleted.","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"WangCheng0116"},"content":"    public void delete(int pos) {","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"WangCheng0116"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"WangCheng0116"},"content":"        System.out.println(\" \" + ls.get(pos - 1));","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"WangCheng0116"},"content":"        ls.remove(pos - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"WangCheng0116"},"content":"        Storage.deleteLine(pos);","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"WangCheng0116"},"content":"        System.out.println(\"Now you have \" + ls.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"WangCheng0116"},"content":"     * Prints the list of tasks in a formatted manner.","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"WangCheng0116"},"content":"    public void print() {","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"WangCheng0116"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"WangCheng0116"},"content":"        for (int i \u003d 0; i \u003c ls.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"WangCheng0116"},"content":"            int order \u003d i + 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"WangCheng0116"},"content":"            Task cur \u003d ls.get(i);","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"WangCheng0116"},"content":"            System.out.println(order + \". \" + \" \" + cur);","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"WangCheng0116"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"WangCheng0116"},"content":"     * Searches for tasks in the task list that contain the","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"WangCheng0116"},"content":"     * specified keyword and prints the matching tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"WangCheng0116"},"content":"     * @param keyword The keyword to search for in task descriptions.","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"WangCheng0116"},"content":"    public void find(String keyword) {","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"WangCheng0116"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"WangCheng0116"},"content":"        int counter \u003d 0;","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"WangCheng0116"},"content":"        for (int i \u003d 0; i \u003c ls.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"WangCheng0116"},"content":"            Task task \u003d ls.get(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"WangCheng0116"},"content":"            if (task.containKey(keyword)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"WangCheng0116"},"content":"                counter++;","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"WangCheng0116"},"content":"                System.out.println(counter + \".\" + task);","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"WangCheng0116"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"WangCheng0116"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"WangCheng0116"},"content":"        if (counter \u003d\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"WangCheng0116"},"content":"            System.out.println(\"Sorry.No tasks match the keyword: \" + keyword);","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"WangCheng0116"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"WangCheng0116"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"WangCheng0116":117}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangCheng0116"},"content":"package tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"WangCheng0116"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"WangCheng0116"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"WangCheng0116"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"WangCheng0116"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"WangCheng0116"},"content":" * The Deadline class represents a task with a specific due date.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"WangCheng0116"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"WangCheng0116"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"WangCheng0116"},"content":"    protected String by;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"WangCheng0116"},"content":"    protected LocalDate parsedBy; // New field to store parsed LocalDate","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"WangCheng0116"},"content":"     * Constructs a Deadline instance with the specified description and due date.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"WangCheng0116"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"WangCheng0116"},"content":"     * @param by          The due date of the task in string format.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"WangCheng0116"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"WangCheng0116"},"content":"        super(description);","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"WangCheng0116"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"WangCheng0116"},"content":"        parseBy();","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"WangCheng0116"},"content":"     * Constructs a Deadline instance with the specified description, due date, and completion status.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"WangCheng0116"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"WangCheng0116"},"content":"     * @param by          The due date of the task in string format.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"WangCheng0116"},"content":"     * @param mark        The completion status of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"WangCheng0116"},"content":"    public Deadline(String description, String by, boolean mark) {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"WangCheng0116"},"content":"        super(description, mark);","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"WangCheng0116"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"WangCheng0116"},"content":"        parseBy();","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"WangCheng0116"},"content":"     * Parses the due date string into a LocalDate object using multiple date formats.","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"WangCheng0116"},"content":"    private void parseBy() {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"WangCheng0116"},"content":"        DateTimeFormatter[] dateFormats \u003d {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"WangCheng0116"},"content":"          DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"),","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"WangCheng0116"},"content":"          DateTimeFormatter.ofPattern(\"MMM dd yyyy\")","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"WangCheng0116"},"content":"        };","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"WangCheng0116"},"content":"        for (DateTimeFormatter dateFormat : dateFormats) {","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"WangCheng0116"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"WangCheng0116"},"content":"                parsedBy \u003d LocalDate.parse(by, dateFormat);","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"WangCheng0116"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"WangCheng0116"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"WangCheng0116"},"content":"                parsedBy \u003d parsedBy;","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"WangCheng0116"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"WangCheng0116"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"WangCheng0116"},"content":"     * Returns the string representation of the Deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"WangCheng0116"},"content":"     * @return The formatted string representation of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"WangCheng0116"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"WangCheng0116"},"content":"    public String toString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"WangCheng0116"},"content":"        String dateString \u003d parsedBy !\u003d null","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"WangCheng0116"},"content":"          ? parsedBy.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"WangCheng0116"},"content":"          : by;","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"WangCheng0116"},"content":"        return \"[D]\" + super.toString() + \" by: \" + dateString;","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"WangCheng0116"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"WangCheng0116":72}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangCheng0116"},"content":"package tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"WangCheng0116"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"WangCheng0116"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"WangCheng0116"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"WangCheng0116"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"WangCheng0116"},"content":" * The Event class represents a task that occurs within a specific time range.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"WangCheng0116"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"WangCheng0116"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"WangCheng0116"},"content":"    protected String start;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"WangCheng0116"},"content":"    protected String end;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"WangCheng0116"},"content":"    protected LocalDate parsedStartDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"WangCheng0116"},"content":"    protected LocalDate parsedEndDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"WangCheng0116"},"content":"     * Constructs an Event instance with the specified description, start date, and end date.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"WangCheng0116"},"content":"     * @param description The description of the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"WangCheng0116"},"content":"     * @param start       The start date of the event in string format.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"WangCheng0116"},"content":"     * @param end         The end date of the event in string format.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"WangCheng0116"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"WangCheng0116"},"content":"        super(description);","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"WangCheng0116"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"WangCheng0116"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"WangCheng0116"},"content":"        parseDates();","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"WangCheng0116"},"content":"     * Constructs an Event instance with the specified description, start date, end date, and completion status.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"WangCheng0116"},"content":"     * @param description The description of the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"WangCheng0116"},"content":"     * @param start       The start date of the event in string format.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"WangCheng0116"},"content":"     * @param end         The end date of the event in string format.","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"WangCheng0116"},"content":"     * @param mark        The completion status of the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"WangCheng0116"},"content":"    public Event(String description, String start, String end, boolean mark) {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"WangCheng0116"},"content":"        super(description, mark);","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"WangCheng0116"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"WangCheng0116"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"WangCheng0116"},"content":"        parseDates();","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"WangCheng0116"},"content":"     * Parses the start and end date strings into LocalDate objects using multiple date formats.","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"WangCheng0116"},"content":"    private void parseDates() {","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"WangCheng0116"},"content":"        DateTimeFormatter[] dateFormats \u003d {","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"WangCheng0116"},"content":"          DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"),","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"WangCheng0116"},"content":"          DateTimeFormatter.ofPattern(\"MMM dd yyyy\")","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"WangCheng0116"},"content":"        };","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"WangCheng0116"},"content":"        for (DateTimeFormatter dateFormat : dateFormats) {","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"WangCheng0116"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"WangCheng0116"},"content":"                parsedStartDate \u003d LocalDate.parse(start, dateFormat);","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"WangCheng0116"},"content":"                parsedEndDate \u003d LocalDate.parse(end, dateFormat);","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"WangCheng0116"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"WangCheng0116"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"WangCheng0116"},"content":"                parsedStartDate \u003d null;","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"WangCheng0116"},"content":"                parsedEndDate \u003d null;","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"WangCheng0116"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"WangCheng0116"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"WangCheng0116"},"content":"     * Returns the string representation of the Event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"WangCheng0116"},"content":"     * @return The formatted string representation of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"WangCheng0116"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"WangCheng0116"},"content":"    public String toString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"WangCheng0116"},"content":"        String startString \u003d parsedStartDate !\u003d null","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"WangCheng0116"},"content":"          ? parsedStartDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"WangCheng0116"},"content":"          : start;","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"WangCheng0116"},"content":"        String endString \u003d parsedEndDate !\u003d null","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"WangCheng0116"},"content":"          ? parsedEndDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"WangCheng0116"},"content":"          : end;","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"WangCheng0116"},"content":"        return \"[E]\" + super.toString() + \" from \" + startString + \" to \" + endString;","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"WangCheng0116"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"WangCheng0116":84}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangCheng0116"},"content":"package tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"WangCheng0116"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"WangCheng0116"},"content":" * The Task class represents a basic task with a description and completion status.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"WangCheng0116"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"WangCheng0116"},"content":"public class Task {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"WangCheng0116"},"content":"    protected String description;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"WangCheng0116"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"WangCheng0116"},"content":"     * Constructs a Task instance with the specified","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"WangCheng0116"},"content":"     * description and sets the completion status to false.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"WangCheng0116"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"WangCheng0116"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"WangCheng0116"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"WangCheng0116"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"WangCheng0116"},"content":"     * Constructs a Task instance with the specified description and completion status.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"WangCheng0116"},"content":"     * @param des  The description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"WangCheng0116"},"content":"     * @param mark The completion status of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"WangCheng0116"},"content":"    public Task(String des, boolean mark) {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"WangCheng0116"},"content":"        this.description \u003d des;","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"WangCheng0116"},"content":"        this.isDone \u003d mark;","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"WangCheng0116"},"content":"     * Returns an icon representing the completion status of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"WangCheng0116"},"content":"     * @return The completion status icon (\"[X]\" for completed, \"[ ]\" for not completed).","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"WangCheng0116"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"WangCheng0116"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); // mark done task with X","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"WangCheng0116"},"content":"     * Marks the task as completed.","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"WangCheng0116"},"content":"    public void toMark() {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"WangCheng0116"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"WangCheng0116"},"content":"     * Marks the task as not completed.","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"WangCheng0116"},"content":"    public void toUnmark() {","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"WangCheng0116"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"WangCheng0116"},"content":"     * Checks if the task\u0027s description contains the specified keyword.","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"WangCheng0116"},"content":"     * @param key The keyword to search for in the task\u0027s description.","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"WangCheng0116"},"content":"     * @return True if the description contains the keyword, otherwise false.","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"WangCheng0116"},"content":"    public boolean containKey(String key) {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"WangCheng0116"},"content":"        return this.description.contains(key);","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"WangCheng0116"},"content":"     * Returns the string representation of the Task.","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"WangCheng0116"},"content":"     * @return The formatted string representation of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"WangCheng0116"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"WangCheng0116"},"content":"    public String toString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"WangCheng0116"},"content":"        return this.getStatusIcon() + \" \" + description;","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"WangCheng0116"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"WangCheng0116":74}},{"path":"src/main/java/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangCheng0116"},"content":"package tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"WangCheng0116"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"WangCheng0116"},"content":" * The ToDo class represents a task that has no specific due date or time.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"WangCheng0116"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"WangCheng0116"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"WangCheng0116"},"content":"     * Constructs a ToDo instance with the specified description","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"WangCheng0116"},"content":"     * and sets the completion status to false.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"WangCheng0116"},"content":"     * @param des The description of the ToDo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"WangCheng0116"},"content":"    public ToDo(String des) {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"WangCheng0116"},"content":"        super(des);","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"WangCheng0116"},"content":"     * Constructs a ToDo instance with the specified description and completion status.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"WangCheng0116"},"content":"     * @param des  The description of the ToDo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"WangCheng0116"},"content":"     * @param mark The completion status of the ToDo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"WangCheng0116"},"content":"    public ToDo(String des, boolean mark) {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"WangCheng0116"},"content":"        super(des, mark);","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"WangCheng0116"},"content":"     * Returns the string representation of the ToDo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"WangCheng0116"},"content":"     * @return The formatted string representation of the ToDo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"WangCheng0116"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"WangCheng0116"},"content":"    public String toString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"WangCheng0116"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"WangCheng0116"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"WangCheng0116":37}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangCheng0116"},"content":"package ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"WangCheng0116"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"WangCheng0116"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"WangCheng0116"},"content":" * The Ui class handles interactions with the user, displaying messages and reading input.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"WangCheng0116"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"WangCheng0116"},"content":"public class Ui {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"WangCheng0116"},"content":"    private static String botName \u003d \"cc\";","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"WangCheng0116"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"WangCheng0116"},"content":"     * Constructs a Ui instance and initializes the scanner for reading user input.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"WangCheng0116"},"content":"    public Ui() {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"WangCheng0116"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"WangCheng0116"},"content":"     * Displays the welcome message upon starting the application.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"WangCheng0116"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"WangCheng0116"},"content":"        System.out.println(\"Hello! I\u0027m \" + botName);","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"WangCheng0116"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"WangCheng0116"},"content":"     * Displays the exit message before closing the application.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"WangCheng0116"},"content":"    public void exit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"WangCheng0116"},"content":"        System.out.print(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"WangCheng0116"},"content":"        System.exit(0);","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"WangCheng0116"},"content":"     * Displays a given message.","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"WangCheng0116"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"WangCheng0116"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"WangCheng0116"},"content":"        System.out.println(message);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"WangCheng0116"},"content":"     * Reads a command input from the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"WangCheng0116"},"content":"     * @return The command input provided by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"WangCheng0116"},"content":"    public String readCommand() {","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"WangCheng0116"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"WangCheng0116"},"content":"     * Displays an error message.","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"WangCheng0116"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"WangCheng0116"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"WangCheng0116"},"content":"    public void showError(String message) {","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"WangCheng0116"},"content":"        System.out.println(message);","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"WangCheng0116"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"WangCheng0116":61}},{"path":"src/test/java/core/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangCheng0116"},"content":"package core;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"WangCheng0116"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"WangCheng0116"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"WangCheng0116"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"WangCheng0116"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"WangCheng0116"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"WangCheng0116"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"WangCheng0116"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"WangCheng0116"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"WangCheng0116"},"content":" * The DukeTest class contains JUnit test methods to test the behavior of the Duke class.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"WangCheng0116"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"WangCheng0116"},"content":"public class DukeTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"WangCheng0116"},"content":"    private final InputStream sysInBackup \u003d System.in;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"WangCheng0116"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"WangCheng0116"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"WangCheng0116"},"content":"     * Sets up the streams to capture output for testing.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"WangCheng0116"},"content":"    @BeforeEach","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"WangCheng0116"},"content":"    public void setUpStreams() {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"WangCheng0116"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"WangCheng0116"},"content":"     * Tests the behavior of the list command.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"WangCheng0116"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"WangCheng0116"},"content":"    public void testListCommand() {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"WangCheng0116"},"content":"        ByteArrayInputStream in \u003d new ByteArrayInputStream(\"list\".getBytes());","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"WangCheng0116"},"content":"        System.setIn(in);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"WangCheng0116"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"WangCheng0116"},"content":"        String expectedOutput \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"WangCheng0116"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"WangCheng0116"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"WangCheng0116"},"content":"     * Tests the behavior of the todo command.","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"WangCheng0116"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"WangCheng0116"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"WangCheng0116"},"content":"    public void testTodoCommand() {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"WangCheng0116"},"content":"        ByteArrayInputStream in \u003d new ByteArrayInputStream(\"todo hi\".getBytes());","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"WangCheng0116"},"content":"        System.setIn(in);","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"WangCheng0116"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"WangCheng0116"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"WangCheng0116"},"content":"        String expectedOutput \u003d \"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"WangCheng0116"},"content":"          \"[T][ ] hi\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"WangCheng0116"},"content":"          \"Now you have 1 tasks in the list.\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"WangCheng0116"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"WangCheng0116"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"WangCheng0116"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"WangCheng0116":57}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"WangCheng0116"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"WangCheng0116"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"WangCheng0116"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"WangCheng0116"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"WangCheng0116"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"WangCheng0116"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"WangCheng0116"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"WangCheng0116"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"WangCheng0116"},"content":"unmark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"WangCheng0116"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"WangCheng0116"},"content":"delete 1","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"WangCheng0116"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"WangCheng0116":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"WangCheng0116"},"content":"java -classpath ..\\bin core.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"WangCheng0116":1,"-":20}}]
