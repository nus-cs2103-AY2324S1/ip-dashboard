[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"# duke.Duke project template","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"SelwynAng":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"SelwynAng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"SelwynAng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"SelwynAng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"SelwynAng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"SelwynAng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"SelwynAng"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"SelwynAng"},"content":"checkstyle {","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"SelwynAng"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"SelwynAng"},"content":"javafx {","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"SelwynAng"},"content":"    version \u003d \"17.0.7\"","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"SelwynAng"},"content":"    modules \u003d [ \u0027javafx.controls\u0027 , \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"SelwynAng"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"SelwynAng":28,"-":41}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"import duke.command.Command;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":" * The Duke class represents the main controller of the Duke chatbot application.","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":" * @author selwyn","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":"    private static TaskList taskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"    private static Storage storage;","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"    private static Parser parser;","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"     * Constructs a Duke instance with the specified file path for data storage.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"     * @param filePath The file path where Duke stores task data.","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"SelwynAng"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"SelwynAng"},"content":"        String[] dirAndFilePathArr \u003d filePath.split(\"/\");","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"SelwynAng"},"content":"        String dirPath \u003d \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"SelwynAng"},"content":"        for (int i \u003d 0; i \u003c dirAndFilePathArr.length - 1; i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"SelwynAng"},"content":"            dirPath +\u003d dirAndFilePathArr[i];","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"SelwynAng"},"content":"            dirPath +\u003d \"/\";","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"SelwynAng"},"content":"        assert dirPath !\u003d null : \"Directory path should not be empty\";","lastModifiedDate":"2023-09-11"},{"lineNumber":35,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":36,"author":{"gitId":"SelwynAng"},"content":"        storage \u003d new Storage(dirPath, dirAndFilePathArr[dirAndFilePathArr.length - 1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"SelwynAng"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"SelwynAng"},"content":"            taskList \u003d new TaskList(storage.retrieveTasks());","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"SelwynAng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"SelwynAng"},"content":"            Ui.printError(e.getMessage());","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"SelwynAng"},"content":"     * Gets a response from Duke based on user input.","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"SelwynAng"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"SelwynAng"},"content":"     * @return The response generated by Duke.","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"SelwynAng"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"SelwynAng"},"content":"        String responseStr;","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"SelwynAng"},"content":"        try {","lastModifiedDate":"2023-08-21"},{"lineNumber":53,"author":{"gitId":"SelwynAng"},"content":"            Command c \u003d this.parser.parseCommand(userInput);","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"SelwynAng"},"content":"            responseStr \u003d c.execute(taskList, storage);","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"SelwynAng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"SelwynAng"},"content":"            responseStr \u003d Ui.printError(e.getMessage());","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":58,"author":{"gitId":"SelwynAng"},"content":"        return responseStr;","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"SelwynAng":57,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":" * The DukeException class represents an exception specific to the Duke application.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":" * @author selwyn","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":"     * Constructs a DukeException object with the specified error message.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"     * @param message The error message to be associated with the exception.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"        super(message);","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"SelwynAng":17}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":" * The Launcher class is responsible for launching the Duke chatbot application.","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":" *","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":" * @author selwyn","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":"public class Launcher {","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"     * The main entry point of the Duke chatbot application.","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"     * @param args The command-line arguments passed to the application.","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"SelwynAng":19}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":" * The Main class serves as the entry point for the Duke application.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":" * It sets up the JavaFX user interface and initializes the Duke chatbot.","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":" *","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":" * @author selwyn","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"    private Duke duke \u003d new Duke(\"data/tasks.txt\");","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"     * The main entry point for the JavaFX application.","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"     * @param stage The primary stage for the JavaFX application.","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"SelwynAng"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"SelwynAng"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"SelwynAng"},"content":"            // Load the FXML file for the main window","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"SelwynAng"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"SelwynAng"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"SelwynAng"},"content":"            // Create a new scene with the loaded AnchorPane","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"SelwynAng"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"SelwynAng"},"content":"            // Set the scene for the primary stage","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"SelwynAng"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"SelwynAng"},"content":"            // Get the controller associated with the FXML and set the Duke instance","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"SelwynAng"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"SelwynAng"},"content":"            // Print a greeting message using the controller","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"SelwynAng"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().printGreeting();","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"SelwynAng"},"content":"            // Show the primary stage","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"SelwynAng"},"content":"            stage.show();","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"SelwynAng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"SelwynAng"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"SelwynAng":51}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":"import duke.command.StatsCommand;","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"import duke.task.TaskType;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":" * The Parser class is responsible for parsing user input and generating the corresponding commands.","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":" * @author selwyn","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"public class Parser {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"     * Parses the user input to generate the appropriate command.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"     * @param userInput The input provided by the user.","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"     * @return A Command object representing the parsed command.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"     * @throws DukeException If the input cannot be parsed into a valid command.","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":"    public Command parseCommand(String userInput) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"SelwynAng"},"content":"        String userCommand \u003d getStringAtIndex(userInput, 0);","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"SelwynAng"},"content":"        String args \u003d getStringAtIndex(userInput, 1);","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"SelwynAng"},"content":"        switch (userCommand) {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"SelwynAng"},"content":"        case \"bye\":","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"SelwynAng"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"SelwynAng"},"content":"        case \"list\":","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"SelwynAng"},"content":"            return new ListCommand();","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"SelwynAng"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"SelwynAng"},"content":"            return new AddCommand(TaskType.TODO, args);","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"SelwynAng"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"SelwynAng"},"content":"            return new AddCommand(TaskType.DEADLINE, args);","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"SelwynAng"},"content":"        case \"event\":","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"SelwynAng"},"content":"            return new AddCommand(TaskType.EVENT, args);","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"SelwynAng"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"SelwynAng"},"content":"            return new MarkCommand(args, true);","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"SelwynAng"},"content":"        case \"unmark\":","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"SelwynAng"},"content":"            return new MarkCommand(args, false);","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"SelwynAng"},"content":"        case \"delete\":","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"SelwynAng"},"content":"            return new DeleteCommand(args);","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"SelwynAng"},"content":"        case \"find\":","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"SelwynAng"},"content":"            return new FindCommand(args);","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"SelwynAng"},"content":"        case \"stats\":","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"SelwynAng"},"content":"            return new StatsCommand();","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"SelwynAng"},"content":"        default:","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"SelwynAng"},"content":"            throw new DukeException(\"I don\u0027t understand what you are saying!\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"SelwynAng"},"content":"                    + \"Available commands are list, todo, deadline, event, mark, unmark, delete, stats, bye.\");","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"SelwynAng"},"content":"     * Extracts a substring from the user input based on the provided position index.","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":60,"author":{"gitId":"SelwynAng"},"content":"     * @param userInput The input provided by the user.","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"SelwynAng"},"content":"     * @param position  The position index (0 or 1) of the substring to extract.","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"SelwynAng"},"content":"     * @return The extracted substring.","lastModifiedDate":"2023-09-13"},{"lineNumber":63,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":64,"author":{"gitId":"SelwynAng"},"content":"    public String getStringAtIndex(String userInput, int position) {","lastModifiedDate":"2023-09-13"},{"lineNumber":65,"author":{"gitId":"SelwynAng"},"content":"        String[] parsedCommand \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-09-13"},{"lineNumber":66,"author":{"gitId":"SelwynAng"},"content":"        String strToReturn \u003d null;","lastModifiedDate":"2023-09-13"},{"lineNumber":67,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":68,"author":{"gitId":"SelwynAng"},"content":"        assert(position \u003d\u003d 0 || position \u003d\u003d 1) : \"Position index for getStringAtIndex has to be 0 or 1\";","lastModifiedDate":"2023-09-13"},{"lineNumber":69,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":70,"author":{"gitId":"SelwynAng"},"content":"        if (position \u003d\u003d 0) {","lastModifiedDate":"2023-09-13"},{"lineNumber":71,"author":{"gitId":"SelwynAng"},"content":"            strToReturn \u003d parsedCommand[0];","lastModifiedDate":"2023-09-13"},{"lineNumber":72,"author":{"gitId":"SelwynAng"},"content":"        } else if (position \u003d\u003d 1) {","lastModifiedDate":"2023-09-13"},{"lineNumber":73,"author":{"gitId":"SelwynAng"},"content":"            strToReturn \u003d parsedCommand.length \u003e 1 ? parsedCommand[1] : \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":74,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":75,"author":{"gitId":"SelwynAng"},"content":"        return strToReturn;","lastModifiedDate":"2023-09-13"},{"lineNumber":76,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":77,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"SelwynAng":77}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":" * The Storage class handles file operations for saving and retrieving tasks to/from a file.","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":" * @author Selwyn","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"public class Storage {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\");","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"SelwynAng"},"content":"    private File file;","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"SelwynAng"},"content":"    private String filePath;","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"SelwynAng"},"content":"     * Constructs a Storage object with the specified directory path and file name.","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"SelwynAng"},"content":"     * @param directoryPath The directory path where the file should be stored.","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"SelwynAng"},"content":"     * @param fileName The name of the file.","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"SelwynAng"},"content":"    public Storage(String directoryPath, String fileName) {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"SelwynAng"},"content":"        this.filePath \u003d directoryPath + fileName;","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"SelwynAng"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"SelwynAng"},"content":"            if (new File(directoryPath).mkdirs()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"SelwynAng"},"content":"                System.out.println(\"Directories are created.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"SelwynAng"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"SelwynAng"},"content":"                System.out.println(\"Directories already exist.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"SelwynAng"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"SelwynAng"},"content":"            this.file \u003d new File(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"SelwynAng"},"content":"            if (this.file.createNewFile()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"SelwynAng"},"content":"                System.out.println(\"File is created: \" + this.file.getName());","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"SelwynAng"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"SelwynAng"},"content":"                System.out.println(\"File already exists.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"SelwynAng"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"SelwynAng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"SelwynAng"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"SelwynAng"},"content":"     * Saves the given list of tasks to the file.","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"SelwynAng"},"content":"     * @param tasks The list of tasks to be saved.","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"SelwynAng"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"SelwynAng"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"SelwynAng"},"content":"            FileWriter fileWriter \u003d new FileWriter(this.file);","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"SelwynAng"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"SelwynAng"},"content":"                fileWriter.write(tasks.get(i).toString() + \"\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"SelwynAng"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"SelwynAng"},"content":"            fileWriter.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"SelwynAng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"SelwynAng"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"SelwynAng"},"content":"     * Retrieves tasks from the file and returns them as an ArrayList.","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"SelwynAng"},"content":"     * @return An ArrayList of Task objects retrieved from the file.","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"SelwynAng"},"content":"     * @throws DukeException If there is an issue with file retrieval or if the file is corrupted.","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"SelwynAng"},"content":"    public ArrayList\u003cTask\u003e retrieveTasks() throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"SelwynAng"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"SelwynAng"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"SelwynAng"},"content":"            Scanner scanner \u003d new Scanner(this.file);","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"SelwynAng"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"SelwynAng"},"content":"                String taskDesc \u003d scanner.nextLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"SelwynAng"},"content":"                String[] taskDescArr \u003d taskDesc.split(\" \", 3);","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"SelwynAng"},"content":"                String taskTitle \u003d taskDescArr[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"SelwynAng"},"content":"                String taskDoneStatus \u003d taskDescArr[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"SelwynAng"},"content":"                String taskDetails \u003d taskDescArr[2];","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"SelwynAng"},"content":"                Task taskToAdd \u003d retrieveSpecificTask(taskTitle, taskDetails, taskDoneStatus);","lastModifiedDate":"2023-09-13"},{"lineNumber":94,"author":{"gitId":"SelwynAng"},"content":"                taskList.add(taskToAdd);","lastModifiedDate":"2023-09-13"},{"lineNumber":95,"author":{"gitId":"SelwynAng"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":96,"author":{"gitId":"SelwynAng"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":97,"author":{"gitId":"SelwynAng"},"content":"            System.out.println(\"File cannot be found!\");","lastModifiedDate":"2023-09-13"},{"lineNumber":98,"author":{"gitId":"SelwynAng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":99,"author":{"gitId":"SelwynAng"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-09-13"},{"lineNumber":100,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":101,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":102,"author":{"gitId":"SelwynAng"},"content":"        return taskList;","lastModifiedDate":"2023-09-13"},{"lineNumber":103,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":104,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":106,"author":{"gitId":"SelwynAng"},"content":"     * Retrieves a specific type of task based on its title, details, and done status.","lastModifiedDate":"2023-09-13"},{"lineNumber":107,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":108,"author":{"gitId":"SelwynAng"},"content":"     * @param taskTitle The title of the task.","lastModifiedDate":"2023-09-13"},{"lineNumber":109,"author":{"gitId":"SelwynAng"},"content":"     * @param taskDetails The details of the task.","lastModifiedDate":"2023-09-13"},{"lineNumber":110,"author":{"gitId":"SelwynAng"},"content":"     * @param taskDoneStatus The done status of the task.","lastModifiedDate":"2023-09-13"},{"lineNumber":111,"author":{"gitId":"SelwynAng"},"content":"     * @return A Task object corresponding to the provided information.","lastModifiedDate":"2023-09-13"},{"lineNumber":112,"author":{"gitId":"SelwynAng"},"content":"     * @throws DukeException If the file is corrupted or the task cannot be created.","lastModifiedDate":"2023-09-13"},{"lineNumber":113,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":114,"author":{"gitId":"SelwynAng"},"content":"    public Task retrieveSpecificTask(String taskTitle, String taskDetails, String taskDoneStatus) throws DukeException {","lastModifiedDate":"2023-09-13"},{"lineNumber":115,"author":{"gitId":"SelwynAng"},"content":"        Task taskToReturn;","lastModifiedDate":"2023-09-13"},{"lineNumber":116,"author":{"gitId":"SelwynAng"},"content":"        switch(taskTitle) {","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"SelwynAng"},"content":"        case(\"[T]\"):","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"SelwynAng"},"content":"            taskToReturn \u003d new Todo(taskDetails);","lastModifiedDate":"2023-09-13"},{"lineNumber":119,"author":{"gitId":"SelwynAng"},"content":"            break;","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"SelwynAng"},"content":"        case(\"[D]\"):","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"SelwynAng"},"content":"            String[] deadlineNameAndDueDate \u003d taskDetails.split(\"\\\\(by:\", 2);","lastModifiedDate":"2023-09-13"},{"lineNumber":122,"author":{"gitId":"SelwynAng"},"content":"            String deadlineName \u003d deadlineNameAndDueDate[0];","lastModifiedDate":"2023-09-13"},{"lineNumber":123,"author":{"gitId":"SelwynAng"},"content":"            String deadlineDueDate \u003d deadlineNameAndDueDate[1];","lastModifiedDate":"2023-09-13"},{"lineNumber":124,"author":{"gitId":"SelwynAng"},"content":"            taskToReturn \u003d new Deadline(deadlineName.trim(),","lastModifiedDate":"2023-09-13"},{"lineNumber":125,"author":{"gitId":"SelwynAng"},"content":"            LocalDateTime.parse(deadlineDueDate.split(\"\\\\)\")[0].trim(), DATE_TIME_FORMATTER));","lastModifiedDate":"2023-09-13"},{"lineNumber":126,"author":{"gitId":"SelwynAng"},"content":"            break;","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"SelwynAng"},"content":"        case(\"[E]\"):","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"SelwynAng"},"content":"            String[] eventNameAndDuration \u003d taskDetails.split(\"\\\\(from:\", 2);","lastModifiedDate":"2023-09-13"},{"lineNumber":129,"author":{"gitId":"SelwynAng"},"content":"            String eventName \u003d eventNameAndDuration[0];","lastModifiedDate":"2023-09-13"},{"lineNumber":130,"author":{"gitId":"SelwynAng"},"content":"            String[] eventDuration \u003d eventNameAndDuration[1].split(\"to:\", 2);","lastModifiedDate":"2023-09-13"},{"lineNumber":131,"author":{"gitId":"SelwynAng"},"content":"            taskToReturn \u003d new Event(eventName.trim(),","lastModifiedDate":"2023-09-13"},{"lineNumber":132,"author":{"gitId":"SelwynAng"},"content":"            LocalDateTime.parse(eventDuration[0].trim(), DATE_TIME_FORMATTER),","lastModifiedDate":"2023-09-13"},{"lineNumber":133,"author":{"gitId":"SelwynAng"},"content":"            LocalDateTime.parse(eventDuration[1].split(\"\\\\)\")[0].trim(), DATE_TIME_FORMATTER));","lastModifiedDate":"2023-09-13"},{"lineNumber":134,"author":{"gitId":"SelwynAng"},"content":"            break;","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"SelwynAng"},"content":"        default:","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"SelwynAng"},"content":"            throw new DukeException(\"File is corrupted!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":139,"author":{"gitId":"SelwynAng"},"content":"        if (taskDoneStatus.equals(\"[X]\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":140,"author":{"gitId":"SelwynAng"},"content":"            taskToReturn.markDone();","lastModifiedDate":"2023-09-13"},{"lineNumber":141,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":143,"author":{"gitId":"SelwynAng"},"content":"        return taskToReturn;","lastModifiedDate":"2023-09-13"},{"lineNumber":144,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":145,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"SelwynAng":145}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"import duke.task.TaskType;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":" * The AddCommand class represents a command for adding tasks to the task list.","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":" * @author selwyn","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"    private TaskType taskType;","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"    private String addCommandDetails;","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"     * Constructs an AddCommand with the specified task type and command details.","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"     * @param taskType          The type of task to be added.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"     * @param addCommandDetails The details of the task to be added.","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":"    public AddCommand(TaskType taskType, String addCommandDetails) {","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"SelwynAng"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"SelwynAng"},"content":"        this.addCommandDetails \u003d addCommandDetails;","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"SelwynAng"},"content":"     * Executes the AddCommand by adding a task to the task list and saving it to storage.","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"SelwynAng"},"content":"     * @param taskList The task list to which the task will be added.","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"SelwynAng"},"content":"     * @param storage  The storage object used for saving tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"SelwynAng"},"content":"     * @return A message indicating the successful addition of the task.","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"SelwynAng"},"content":"     * @throws DukeException If there is an error adding the task.","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"SelwynAng"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"SelwynAng"},"content":"    public String execute(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"SelwynAng"},"content":"        assert taskType !\u003d null : \"Task type should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":42,"author":{"gitId":"SelwynAng"},"content":"        assert addCommandDetails !\u003d null : \"Details of add command should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":43,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":44,"author":{"gitId":"SelwynAng"},"content":"        Task addedTask;","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"SelwynAng"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"SelwynAng"},"content":"            addedTask \u003d taskList.addTask(this.taskType, this.addCommandDetails);","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"SelwynAng"},"content":"            storage.saveTasks(taskList.getTaskList());","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"SelwynAng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"SelwynAng"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"SelwynAng"},"content":"        assert addedTask !\u003d null : \"Added task should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":53,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":54,"author":{"gitId":"SelwynAng"},"content":"        return Ui.printAddedTask(addedTask, taskList.getNumTasks());","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"SelwynAng":56}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":" * The Command class represents a generic command that can be executed in the Duke chatbot.","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":" * @author selwyn","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"     * Executes the command by performing specific actions on the task list and storage.","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"     * @param taskList The task list to which the command is applied.","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"     * @param storage  The storage object used for saving or retrieving data.","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"     * @return A string representing the result of executing the command.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"     * @throws DukeException If there is an error executing the command.","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"    public abstract String execute(TaskList taskList, Storage storage) throws DukeException;","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":"     * Toggles the exit status of the command.","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"SelwynAng"},"content":"     * If set to true, it indicates that the command should exit the application.","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"SelwynAng"},"content":"    public void changeExitStatus() {","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"SelwynAng"},"content":"        this.isExit \u003d !this.isExit;","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"SelwynAng":33}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":" * The DeleteCommand class represents a command for deleting tasks from the task list.","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":" * @author selwyn","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"    private String taskToDeleteDetails;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"     * Constructs a DeleteCommand with the specified details of the task to be deleted.","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"     * @param args The details of the task to be deleted.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"    public DeleteCommand(String args) {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"        this.taskToDeleteDetails \u003d args;","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"SelwynAng"},"content":"     * Executes the DeleteCommand by deleting a task from the task list and saving it to storage.","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"SelwynAng"},"content":"     * @param taskList The task list from which the task will be deleted.","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"SelwynAng"},"content":"     * @param storage  The storage object used for saving tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"SelwynAng"},"content":"     * @return A message indicating the successful deletion of the task.","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"SelwynAng"},"content":"     * @throws DukeException If there is an error deleting the task.","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"SelwynAng"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"SelwynAng"},"content":"    public String execute(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"SelwynAng"},"content":"        assert taskToDeleteDetails !\u003d null : \"Details of task to delete should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":37,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":38,"author":{"gitId":"SelwynAng"},"content":"        int numOfTasksLeft;","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"SelwynAng"},"content":"        Task deletedTask;","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"SelwynAng"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"SelwynAng"},"content":"            deletedTask \u003d taskList.deleteTask(taskToDeleteDetails);","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"SelwynAng"},"content":"            numOfTasksLeft \u003d taskList.getNumTasks();","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"SelwynAng"},"content":"            storage.saveTasks(taskList.getTaskList());","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"SelwynAng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"SelwynAng"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"SelwynAng"},"content":"        assert deletedTask !\u003d null : \"Deleted task should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":50,"author":{"gitId":"SelwynAng"},"content":"        assert numOfTasksLeft \u003e\u003d 0 : \"Number of tasks left should not be negative\";","lastModifiedDate":"2023-09-11"},{"lineNumber":51,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":52,"author":{"gitId":"SelwynAng"},"content":"        return Ui.printDeletedTask(deletedTask, numOfTasksLeft);","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"SelwynAng":54}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":" * The ExitCommand class represents a command for exiting the Duke chatbot application.","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":" * @author selwyn","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"     * Executes the ExitCommand by changing the exit status and returning an exit message.","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"     * @param taskList The task list (not used in this command).","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"     * @param storage  The storage object (not used in this command).","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"     * @return A message indicating the application should exit.","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"        super.changeExitStatus();","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"        return Ui.printExit();","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"SelwynAng":25}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":" * The FindCommand class represents a command for finding tasks that match a search query.","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":" *","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":" * @author selwyn","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"    private String taskToFindDetails;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"     * Constructs a FindCommand with the specified search query.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"     * @param args The search query for finding tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"    public FindCommand(String args) {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"SelwynAng"},"content":"        this.taskToFindDetails \u003d args;","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"SelwynAng"},"content":"     * Executes the FindCommand by searching for tasks that match the given query.","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"SelwynAng"},"content":"     * @param taskList The task list to search within.","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"SelwynAng"},"content":"     * @param storage  The storage object (not used in this command).","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"SelwynAng"},"content":"     * @return A message displaying the tasks that match the search query.","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"SelwynAng"},"content":"     * @throws DukeException If there is an error executing the command.","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"SelwynAng"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"SelwynAng"},"content":"    public String execute(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"SelwynAng"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d taskList.findTasks(taskToFindDetails);","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"SelwynAng"},"content":"        TaskList taskListWithFoundTasks \u003d new TaskList(foundTasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"SelwynAng"},"content":"        return Ui.printTaskList(taskListWithFoundTasks, true);","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"SelwynAng":42}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":" * The ListCommand class represents a command for listing all tasks in the task list.","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":" * @author selwyn","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"     * Executes the ListCommand by displaying all tasks in the task list.","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"     * @param taskList The task list to be displayed.","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"     * @param storage  The storage object (not used in this command).","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"     * @return A message displaying all tasks in the task list.","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"        return Ui.printTaskList(taskList, false);","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"SelwynAng":24}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":" * The MarkCommand class represents a command for marking tasks as done or undone in the task list.","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":" * @author selwyn","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"    private boolean toMark;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"    private String taskToMarkDetails;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"     * Constructs a MarkCommand with the specified task details and whether to mark as done or undone.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"     * @param args   The details of the task to be marked.","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"     * @param toMark Whether to mark the task as done (true) or undone (false).","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"SelwynAng"},"content":"    public MarkCommand(String args, boolean toMark) {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":"        this.taskToMarkDetails \u003d args;","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"SelwynAng"},"content":"        this.toMark \u003d toMark;","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"SelwynAng"},"content":"     * Executes the MarkCommand by changing the done status of a task and saving it to storage.","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"SelwynAng"},"content":"     * @param taskList The task list to which the task belongs.","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"SelwynAng"},"content":"     * @param storage  The storage object used for saving tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"SelwynAng"},"content":"     * @return A message indicating the successful change in task done status.","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"SelwynAng"},"content":"     * @throws DukeException If there is an error executing the command.","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"SelwynAng"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"SelwynAng"},"content":"    public String execute(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"SelwynAng"},"content":"        Task taskToChange;","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"SelwynAng"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"SelwynAng"},"content":"            taskToChange \u003d taskList.changeTaskDoneStatus(this.taskToMarkDetails, this.toMark);","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"SelwynAng"},"content":"            storage.saveTasks(taskList.getTaskList());","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"SelwynAng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"SelwynAng"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":48,"author":{"gitId":"SelwynAng"},"content":"        assert taskToChange !\u003d null : \"Task to change should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":49,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":50,"author":{"gitId":"SelwynAng"},"content":"        return Ui.printChangeTaskDoneStatus(taskToChange, this.toMark);","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"SelwynAng":52}},{"path":"src/main/java/duke/command/StatsCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"package duke.command;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":"import duke.task.TaskType;","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":" * The StatsCommand class represents a command that provides statistics about tasks.","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":" * It calculates the percentage of completed tasks and counts tasks of different types.","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":" *","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":" * @author selwyn","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"public class StatsCommand extends Command {","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"     * Executes the StatsCommand to calculate and display statistics about tasks.","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"     * @param taskList The task list containing all tasks.","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"     * @param storage  The storage object used to read/write task data.","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"     * @return A string containing the statistics to be displayed to the user.","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"SelwynAng"},"content":"     * @throws DukeException If there is an error while executing the command.","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"SelwynAng"},"content":"    @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"SelwynAng"},"content":"    public String execute(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"SelwynAng"},"content":"        ArrayList\u003cTask\u003e todoTasks \u003d taskList.listSpecificTaskType(TaskType.TODO);","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"SelwynAng"},"content":"        ArrayList\u003cTask\u003e deadlineTasks \u003d taskList.listSpecificTaskType(TaskType.DEADLINE);","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"SelwynAng"},"content":"        ArrayList\u003cTask\u003e eventTasks \u003d taskList.listSpecificTaskType(TaskType.EVENT);","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"SelwynAng"},"content":"        double percentDone \u003d taskList.statePercentOfTasksDone();","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"SelwynAng"},"content":"        return Ui.printStatistics(todoTasks.size(), deadlineTasks.size(), eventTasks.size(), percentDone);","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"SelwynAng":37}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"package duke.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":" * The Deadline class represents a task with a specific end date and time.","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":" * @author selwyn","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"    private LocalDateTime endDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"     * Constructs a Deadline object with the specified description and end date and time.","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"     * @param detail The description of the deadline.","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"     * @param endDateTime The end date and time of the deadline.","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"    public Deadline(String detail, LocalDateTime endDateTime) {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"        super(detail);","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"SelwynAng"},"content":"     * Returns a string representation of the Deadline object, including its completion status, description,","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":"     * and end date and time.","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"SelwynAng"},"content":"     * @return A string representation of the Deadline object.","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"SelwynAng"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"SelwynAng"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"SelwynAng"},"content":"        return \"[D] \" + super.toString() + \" (by: \" + super.getDisplayDateTime(this.endDateTime) + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"SelwynAng":34}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"package duke.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":" * The Event class represents a task that occurs during a specified time range.","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":" * It extends the Task class and includes information about the start and end date and time.","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":" * @author selwyn","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"    private LocalDateTime startDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"    private LocalDateTime endDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"     * Constructs an Event object with the specified details, start date and time, and end date and time.","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"     * @param detail The details of the event.","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"     * @param startDateTime The start date and time of the event.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"     * @param endDateTime The end date and time of the event.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"    public Event(String detail, LocalDateTime startDateTime, LocalDateTime endDateTime) {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"        super(detail);","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"SelwynAng"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"SelwynAng"},"content":"     * Returns a string representation of the Event object, including its details and time range.","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"SelwynAng"},"content":"     * @return A string representation of the Event object.","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"SelwynAng"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"SelwynAng"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"SelwynAng"},"content":"        return \"[E] \" + super.toString() + \" (from: \" + super.getDisplayDateTime(this.startDateTime)","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"SelwynAng"},"content":"                + \" to: \" + super.getDisplayDateTime(this.endDateTime) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"SelwynAng":39}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"package duke.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":" * The Task class represents a task with a description and completion status.","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":" * @author selwyn","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"public class Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"    private String detail;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"     * Constructs a Task object with the specified description and sets its completion status to false.","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"     * @param detail The description of the duke.task.","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"    public Task(String detail) {","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"        this.detail \u003d detail;","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"SelwynAng"},"content":"     * Returns a formatted display string of the provided LocalDateTime object.","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"SelwynAng"},"content":"     * @param dateTime The LocalDateTime object to be formatted.","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"SelwynAng"},"content":"     * @return A formatted date and time string.","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"SelwynAng"},"content":"    public String getDisplayDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"SelwynAng"},"content":"        DateTimeFormatter displayFormat \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"SelwynAng"},"content":"        return dateTime.format(displayFormat);","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"SelwynAng"},"content":"     * Returns a string representation of the Task object, including its completion status and description.","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"SelwynAng"},"content":"     * @return A string representation of the Task object.","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"SelwynAng"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"SelwynAng"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"SelwynAng"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"SelwynAng"},"content":"            return \"[X] \" + this.detail;","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"SelwynAng"},"content":"        } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"SelwynAng"},"content":"            return \"[-] \" + this.detail;","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":50,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":51,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"SelwynAng"},"content":"     * Marks the task as done by setting its completion status to true.","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":54,"author":{"gitId":"SelwynAng"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":55,"author":{"gitId":"SelwynAng"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":57,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":58,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":59,"author":{"gitId":"SelwynAng"},"content":"     * Marks the task as undone by setting its completion status to false.","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":61,"author":{"gitId":"SelwynAng"},"content":"    public void markUndone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":62,"author":{"gitId":"SelwynAng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":63,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":64,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"SelwynAng"},"content":"     * Returns the done status of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"SelwynAng"},"content":"     * @return A boolean value that corresponds to whether the task is done or not.","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"SelwynAng"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"SelwynAng"},"content":"        return this.isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"SelwynAng":73}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"package duke.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"import java.text.DecimalFormat;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":" * The TaskList class manages a list of tasks and provides methods for adding, creating, deleting, and modifying tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":" * @author selwyn","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"public class TaskList {","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"    private static final String DATE_TIME_FORMAT \u003d \"dd-MM-yyyy HHmm\";","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(DATE_TIME_FORMAT);","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"    private int numTasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":"     * Constructs a TaskList object with the specified list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"SelwynAng"},"content":"     * @param tasks The list of tasks to be managed.","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"SelwynAng"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"SelwynAng"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"SelwynAng"},"content":"        this.numTasks \u003d tasks.size();","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"SelwynAng"},"content":"     * Adds a new task of the specified type with the given arguments to the list.","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"SelwynAng"},"content":"     * @param taskType The type of task to be added.","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"SelwynAng"},"content":"     * @param args The arguments for creating the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"SelwynAng"},"content":"     * @return The added Task object.","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"SelwynAng"},"content":"     * @throws DukeException If there is an issue with task creation or task type is unsupported.","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"SelwynAng"},"content":"    public Task addTask(TaskType taskType, String args) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"SelwynAng"},"content":"        Task newTask;","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"SelwynAng"},"content":"        try {","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"SelwynAng"},"content":"            switch (taskType) {","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"SelwynAng"},"content":"            case TODO:","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"SelwynAng"},"content":"                newTask \u003d createTodo(args);","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"SelwynAng"},"content":"                break;","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"SelwynAng"},"content":"            case DEADLINE:","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"SelwynAng"},"content":"                newTask \u003d createDeadline(args);","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"SelwynAng"},"content":"                break;","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"SelwynAng"},"content":"            case EVENT:","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"SelwynAng"},"content":"                newTask \u003d createEvent(args);","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"SelwynAng"},"content":"                break;","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"SelwynAng"},"content":"            default:","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"SelwynAng"},"content":"                throw new DukeException(\"I can\u0027t create this task type!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"SelwynAng"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"SelwynAng"},"content":"            this.tasks.add(newTask);","lastModifiedDate":"2023-08-22"},{"lineNumber":62,"author":{"gitId":"SelwynAng"},"content":"            this.numTasks++;","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"SelwynAng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":64,"author":{"gitId":"SelwynAng"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":66,"author":{"gitId":"SelwynAng"},"content":"        return newTask;","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":68,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":69,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":70,"author":{"gitId":"SelwynAng"},"content":"     * Creates a new Todo task with the given description.","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"SelwynAng"},"content":"     * @param args The description for the Todo task.","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"SelwynAng"},"content":"     * @return The created Todo task.","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"SelwynAng"},"content":"     * @throws DukeException If the description is missing.","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":76,"author":{"gitId":"SelwynAng"},"content":"    public Todo createTodo(String args) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"SelwynAng"},"content":"        if (args \u003d\u003d null || args.isEmpty()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":78,"author":{"gitId":"SelwynAng"},"content":"            throw new DukeException(\"Todo tasks should be created in this format: todo [name]\");","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":80,"author":{"gitId":"SelwynAng"},"content":"        return new Todo(args);","lastModifiedDate":"2023-08-22"},{"lineNumber":81,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":82,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":83,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":84,"author":{"gitId":"SelwynAng"},"content":"     * Creates a new Deadline task with the given description and end date and time.","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"SelwynAng"},"content":"     * @param args The description and end date/time for the Deadline task.","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"SelwynAng"},"content":"     * @return The created Deadline task.","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"SelwynAng"},"content":"     * @throws DukeException If the format is incorrect or the end date/time is invalid.","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":90,"author":{"gitId":"SelwynAng"},"content":"    public Deadline createDeadline(String args) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"SelwynAng"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"SelwynAng"},"content":"            String[] detailsAndDeadline \u003d args.split(\"/by\", 2);","lastModifiedDate":"2023-08-22"},{"lineNumber":93,"author":{"gitId":"SelwynAng"},"content":"            if (detailsAndDeadline.length !\u003d 2) {","lastModifiedDate":"2023-08-22"},{"lineNumber":94,"author":{"gitId":"SelwynAng"},"content":"                throw new DukeException(\"Deadline tasks should be created in this format: deadline [name] /by [date]\");","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"SelwynAng"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":96,"author":{"gitId":"SelwynAng"},"content":"            String details \u003d detailsAndDeadline[0].trim();","lastModifiedDate":"2023-08-22"},{"lineNumber":97,"author":{"gitId":"SelwynAng"},"content":"            String endDateTime \u003d detailsAndDeadline[1].trim();","lastModifiedDate":"2023-08-22"},{"lineNumber":98,"author":{"gitId":"SelwynAng"},"content":"            LocalDateTime formattedEndDateTime \u003d LocalDateTime.parse(endDateTime, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-09-13"},{"lineNumber":99,"author":{"gitId":"SelwynAng"},"content":"            return new Deadline(details, formattedEndDateTime);","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"SelwynAng"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"SelwynAng"},"content":"            throw new DukeException(\"Invalid deadline time format. Please use \" + DATE_TIME_FORMAT + \" format!\");","lastModifiedDate":"2023-09-13"},{"lineNumber":102,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":104,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":105,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":106,"author":{"gitId":"SelwynAng"},"content":"     * Creates a new Event task with the given description and start/end date and time.","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"SelwynAng"},"content":"     * @param args The description and start/end date/time for the Event task.","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"SelwynAng"},"content":"     * @return The created Event task.","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"SelwynAng"},"content":"     * @throws DukeException If the format is incorrect or the date/time is invalid.","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":112,"author":{"gitId":"SelwynAng"},"content":"    public Event createEvent(String args) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"SelwynAng"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"SelwynAng"},"content":"            String[] detailsAndStartEnd \u003d args.split(\"/from\", 2);","lastModifiedDate":"2023-08-22"},{"lineNumber":115,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":116,"author":{"gitId":"SelwynAng"},"content":"            String eventErrMsg \u003d \"Event tasks should be created in this format: \"","lastModifiedDate":"2023-09-13"},{"lineNumber":117,"author":{"gitId":"SelwynAng"},"content":"                    + \"event [name] /from [start time] /to [end time]\";","lastModifiedDate":"2023-09-13"},{"lineNumber":118,"author":{"gitId":"SelwynAng"},"content":"            if (detailsAndStartEnd.length !\u003d 2) {","lastModifiedDate":"2023-08-22"},{"lineNumber":119,"author":{"gitId":"SelwynAng"},"content":"                throw new DukeException(eventErrMsg);","lastModifiedDate":"2023-09-13"},{"lineNumber":120,"author":{"gitId":"SelwynAng"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":121,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":122,"author":{"gitId":"SelwynAng"},"content":"            String details \u003d detailsAndStartEnd[0].trim();","lastModifiedDate":"2023-08-22"},{"lineNumber":123,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":124,"author":{"gitId":"SelwynAng"},"content":"            String[] startAndEnd \u003d detailsAndStartEnd[1].split(\"/to\", 2);","lastModifiedDate":"2023-08-22"},{"lineNumber":125,"author":{"gitId":"SelwynAng"},"content":"            if (startAndEnd.length !\u003d 2) {","lastModifiedDate":"2023-08-22"},{"lineNumber":126,"author":{"gitId":"SelwynAng"},"content":"                throw new DukeException(eventErrMsg);","lastModifiedDate":"2023-09-13"},{"lineNumber":127,"author":{"gitId":"SelwynAng"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":128,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":129,"author":{"gitId":"SelwynAng"},"content":"            String start \u003d startAndEnd[0].trim();","lastModifiedDate":"2023-08-22"},{"lineNumber":130,"author":{"gitId":"SelwynAng"},"content":"            String end \u003d startAndEnd[1].trim();","lastModifiedDate":"2023-08-22"},{"lineNumber":131,"author":{"gitId":"SelwynAng"},"content":"            LocalDateTime formattedStartDateTime \u003d LocalDateTime.parse(start, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-09-13"},{"lineNumber":132,"author":{"gitId":"SelwynAng"},"content":"            LocalDateTime formattedEndDateTime \u003d LocalDateTime.parse(end, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-09-13"},{"lineNumber":133,"author":{"gitId":"SelwynAng"},"content":"            return new Event(details, formattedStartDateTime, formattedEndDateTime);","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"SelwynAng"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"SelwynAng"},"content":"            throw new DukeException(\"Invalid event time format. Please use \" + DATE_TIME_FORMAT + \" format!\");","lastModifiedDate":"2023-09-13"},{"lineNumber":136,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":138,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":139,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":140,"author":{"gitId":"SelwynAng"},"content":"     * Deletes a task from the list based on the given task number.","lastModifiedDate":"2023-08-29"},{"lineNumber":141,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"SelwynAng"},"content":"     * @param args The task number to be deleted.","lastModifiedDate":"2023-08-29"},{"lineNumber":143,"author":{"gitId":"SelwynAng"},"content":"     * @return The deleted Task object.","lastModifiedDate":"2023-08-29"},{"lineNumber":144,"author":{"gitId":"SelwynAng"},"content":"     * @throws DukeException If the task number is invalid or in an incorrect format.","lastModifiedDate":"2023-08-29"},{"lineNumber":145,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":146,"author":{"gitId":"SelwynAng"},"content":"    public Task deleteTask(String args) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":147,"author":{"gitId":"SelwynAng"},"content":"        int taskNumber;","lastModifiedDate":"2023-08-22"},{"lineNumber":148,"author":{"gitId":"SelwynAng"},"content":"        Task deletedTask;","lastModifiedDate":"2023-08-29"},{"lineNumber":149,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":150,"author":{"gitId":"SelwynAng"},"content":"        try {","lastModifiedDate":"2023-08-22"},{"lineNumber":151,"author":{"gitId":"SelwynAng"},"content":"            taskNumber \u003d Integer.parseInt(args);","lastModifiedDate":"2023-08-22"},{"lineNumber":152,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":153,"author":{"gitId":"SelwynAng"},"content":"            if (taskNumber \u003c\u003d 0) {","lastModifiedDate":"2023-08-22"},{"lineNumber":154,"author":{"gitId":"SelwynAng"},"content":"                throw new DukeException(\"Number must be more 1 or more!\");","lastModifiedDate":"2023-08-22"},{"lineNumber":155,"author":{"gitId":"SelwynAng"},"content":"            } else if (this.exceedsSizeOfTaskList(taskNumber)) {","lastModifiedDate":"2023-08-22"},{"lineNumber":156,"author":{"gitId":"SelwynAng"},"content":"                throw new DukeException(\"Number is higher than current size of task list!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":157,"author":{"gitId":"SelwynAng"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":158,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":159,"author":{"gitId":"SelwynAng"},"content":"            deletedTask \u003d this.tasks.remove(taskNumber - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":160,"author":{"gitId":"SelwynAng"},"content":"            this.numTasks--;","lastModifiedDate":"2023-08-22"},{"lineNumber":161,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":162,"author":{"gitId":"SelwynAng"},"content":"            return deletedTask;","lastModifiedDate":"2023-08-29"},{"lineNumber":163,"author":{"gitId":"SelwynAng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":164,"author":{"gitId":"SelwynAng"},"content":"            throw new DukeException(\"Deleting task should be in this format: delete [task number]\");","lastModifiedDate":"2023-08-29"},{"lineNumber":165,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":166,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":167,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":168,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":169,"author":{"gitId":"SelwynAng"},"content":"     * Changes the done status of a task based on the given task number and state.","lastModifiedDate":"2023-08-29"},{"lineNumber":170,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":171,"author":{"gitId":"SelwynAng"},"content":"     * @param args The task number to be marked/unmarked and the state.","lastModifiedDate":"2023-08-29"},{"lineNumber":172,"author":{"gitId":"SelwynAng"},"content":"     * @param toBeDone The desired state (true for done, false for undone).","lastModifiedDate":"2023-08-31"},{"lineNumber":173,"author":{"gitId":"SelwynAng"},"content":"     * @return The Task object with the modified done status.","lastModifiedDate":"2023-08-29"},{"lineNumber":174,"author":{"gitId":"SelwynAng"},"content":"     * @throws DukeException If the task number is invalid or in an incorrect format.","lastModifiedDate":"2023-08-29"},{"lineNumber":175,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":176,"author":{"gitId":"SelwynAng"},"content":"    public Task changeTaskDoneStatus(String args, boolean toBeDone) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":177,"author":{"gitId":"SelwynAng"},"content":"        int taskNumber;","lastModifiedDate":"2023-08-22"},{"lineNumber":178,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":179,"author":{"gitId":"SelwynAng"},"content":"        try {","lastModifiedDate":"2023-08-22"},{"lineNumber":180,"author":{"gitId":"SelwynAng"},"content":"            taskNumber \u003d Integer.parseInt(args);","lastModifiedDate":"2023-08-22"},{"lineNumber":181,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":182,"author":{"gitId":"SelwynAng"},"content":"            if (taskNumber \u003c\u003d 0) {","lastModifiedDate":"2023-08-22"},{"lineNumber":183,"author":{"gitId":"SelwynAng"},"content":"                throw new DukeException(\"Number must be more 1 or more!\");","lastModifiedDate":"2023-08-22"},{"lineNumber":184,"author":{"gitId":"SelwynAng"},"content":"            } else if (this.exceedsSizeOfTaskList(taskNumber)) {","lastModifiedDate":"2023-08-22"},{"lineNumber":185,"author":{"gitId":"SelwynAng"},"content":"                throw new DukeException(\"Number is higher than current size of task list!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":186,"author":{"gitId":"SelwynAng"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":187,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":188,"author":{"gitId":"SelwynAng"},"content":"            Task taskToChange \u003d this.tasks.get(taskNumber - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":189,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":190,"author":{"gitId":"SelwynAng"},"content":"            if (toBeDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":191,"author":{"gitId":"SelwynAng"},"content":"                taskToChange.markDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":192,"author":{"gitId":"SelwynAng"},"content":"            } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":193,"author":{"gitId":"SelwynAng"},"content":"                taskToChange.markUndone();","lastModifiedDate":"2023-08-29"},{"lineNumber":194,"author":{"gitId":"SelwynAng"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":195,"author":{"gitId":"SelwynAng"},"content":"            return taskToChange;","lastModifiedDate":"2023-08-29"},{"lineNumber":196,"author":{"gitId":"SelwynAng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":197,"author":{"gitId":"SelwynAng"},"content":"            throw new DukeException(\"Marking/unmarking tasks should be in this format: mark/unmark [task number]\");","lastModifiedDate":"2023-08-29"},{"lineNumber":198,"author":{"gitId":"SelwynAng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":199,"author":{"gitId":"SelwynAng"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":200,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":201,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":202,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":203,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":204,"author":{"gitId":"SelwynAng"},"content":"     * Displays the list of tasks to the console.","lastModifiedDate":"2023-08-29"},{"lineNumber":205,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":206,"author":{"gitId":"SelwynAng"},"content":"     * @param isMatching Determine which statements to print (true for matching tasks, false for all tasks)","lastModifiedDate":"2023-08-31"},{"lineNumber":207,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":208,"author":{"gitId":"SelwynAng"},"content":"    public String taskListRepresentation(boolean isMatching) {","lastModifiedDate":"2023-09-06"},{"lineNumber":209,"author":{"gitId":"SelwynAng"},"content":"        String strToReturn \u003d \"\";","lastModifiedDate":"2023-09-06"},{"lineNumber":210,"author":{"gitId":"SelwynAng"},"content":"        if (isMatching) {","lastModifiedDate":"2023-08-31"},{"lineNumber":211,"author":{"gitId":"SelwynAng"},"content":"            if (this.numTasks \u003d\u003d 0) {","lastModifiedDate":"2023-09-06"},{"lineNumber":212,"author":{"gitId":"SelwynAng"},"content":"                strToReturn +\u003d \"There are no matching tasks in your list!\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":213,"author":{"gitId":"SelwynAng"},"content":"            } else if (this.numTasks \u003d\u003d 1) {","lastModifiedDate":"2023-09-06"},{"lineNumber":214,"author":{"gitId":"SelwynAng"},"content":"                strToReturn +\u003d \"Here is the matching task in your list:\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":215,"author":{"gitId":"SelwynAng"},"content":"            } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":216,"author":{"gitId":"SelwynAng"},"content":"                strToReturn +\u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":217,"author":{"gitId":"SelwynAng"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":218,"author":{"gitId":"SelwynAng"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":219,"author":{"gitId":"SelwynAng"},"content":"            if (this.numTasks \u003d\u003d 0) {","lastModifiedDate":"2023-09-06"},{"lineNumber":220,"author":{"gitId":"SelwynAng"},"content":"                strToReturn +\u003d \"You have no tasks in your list at the moment!\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":221,"author":{"gitId":"SelwynAng"},"content":"            } else if (this.numTasks \u003d\u003d 1) {","lastModifiedDate":"2023-09-06"},{"lineNumber":222,"author":{"gitId":"SelwynAng"},"content":"                strToReturn +\u003d \"Here is the task in your list:\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":223,"author":{"gitId":"SelwynAng"},"content":"            } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":224,"author":{"gitId":"SelwynAng"},"content":"                strToReturn +\u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":225,"author":{"gitId":"SelwynAng"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":226,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":227,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":228,"author":{"gitId":"SelwynAng"},"content":"        for (int i \u003d 0; i \u003c this.numTasks; i++) {","lastModifiedDate":"2023-08-21"},{"lineNumber":229,"author":{"gitId":"SelwynAng"},"content":"            int bullet \u003d i + 1;","lastModifiedDate":"2023-08-21"},{"lineNumber":230,"author":{"gitId":"SelwynAng"},"content":"            strToReturn +\u003d bullet + \". \";","lastModifiedDate":"2023-09-06"},{"lineNumber":231,"author":{"gitId":"SelwynAng"},"content":"            strToReturn +\u003d this.tasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":232,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":233,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":234,"author":{"gitId":"SelwynAng"},"content":"        return strToReturn;","lastModifiedDate":"2023-09-06"},{"lineNumber":235,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":236,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":237,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":238,"author":{"gitId":"SelwynAng"},"content":"     * Finds the tasks which details contains the given string parameter","lastModifiedDate":"2023-08-31"},{"lineNumber":239,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":240,"author":{"gitId":"SelwynAng"},"content":"     * @param taskToFindDetails The details of the task to find","lastModifiedDate":"2023-08-31"},{"lineNumber":241,"author":{"gitId":"SelwynAng"},"content":"     * @return The ArrayList of tasks that match the string parameter","lastModifiedDate":"2023-08-31"},{"lineNumber":242,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":243,"author":{"gitId":"SelwynAng"},"content":"    public ArrayList\u003cTask\u003e findTasks(String taskToFindDetails) {","lastModifiedDate":"2023-08-31"},{"lineNumber":244,"author":{"gitId":"SelwynAng"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":245,"author":{"gitId":"SelwynAng"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":246,"author":{"gitId":"SelwynAng"},"content":"            Task taskInFocus \u003d this.tasks.get(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":247,"author":{"gitId":"SelwynAng"},"content":"            if (taskInFocus.toString().contains(taskToFindDetails)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":248,"author":{"gitId":"SelwynAng"},"content":"                foundTasks.add(taskInFocus);","lastModifiedDate":"2023-08-31"},{"lineNumber":249,"author":{"gitId":"SelwynAng"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":250,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":251,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":252,"author":{"gitId":"SelwynAng"},"content":"        return foundTasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":253,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":254,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":255,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":256,"author":{"gitId":"SelwynAng"},"content":"     * Returns a list of tasks that matches the task type parameter","lastModifiedDate":"2023-09-13"},{"lineNumber":257,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":258,"author":{"gitId":"SelwynAng"},"content":"     * @param taskType The type of the task to list","lastModifiedDate":"2023-09-13"},{"lineNumber":259,"author":{"gitId":"SelwynAng"},"content":"     * @return The ArrayList of tasks that match the task type parameter","lastModifiedDate":"2023-09-13"},{"lineNumber":260,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":261,"author":{"gitId":"SelwynAng"},"content":"    public ArrayList\u003cTask\u003e listSpecificTaskType(TaskType taskType) throws DukeException {","lastModifiedDate":"2023-09-13"},{"lineNumber":262,"author":{"gitId":"SelwynAng"},"content":"        ArrayList\u003cTask\u003e specificTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-13"},{"lineNumber":263,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":264,"author":{"gitId":"SelwynAng"},"content":"        Task taskTypeClass;","lastModifiedDate":"2023-09-13"},{"lineNumber":265,"author":{"gitId":"SelwynAng"},"content":"        switch (taskType) {","lastModifiedDate":"2023-09-13"},{"lineNumber":266,"author":{"gitId":"SelwynAng"},"content":"        case TODO:","lastModifiedDate":"2023-09-13"},{"lineNumber":267,"author":{"gitId":"SelwynAng"},"content":"            taskTypeClass \u003d new Todo(null);","lastModifiedDate":"2023-09-13"},{"lineNumber":268,"author":{"gitId":"SelwynAng"},"content":"            break;","lastModifiedDate":"2023-09-13"},{"lineNumber":269,"author":{"gitId":"SelwynAng"},"content":"        case DEADLINE:","lastModifiedDate":"2023-09-13"},{"lineNumber":270,"author":{"gitId":"SelwynAng"},"content":"            taskTypeClass \u003d new Deadline(null, null);","lastModifiedDate":"2023-09-13"},{"lineNumber":271,"author":{"gitId":"SelwynAng"},"content":"            break;","lastModifiedDate":"2023-09-13"},{"lineNumber":272,"author":{"gitId":"SelwynAng"},"content":"        case EVENT:","lastModifiedDate":"2023-09-13"},{"lineNumber":273,"author":{"gitId":"SelwynAng"},"content":"            taskTypeClass \u003d new Event(null, null, null);","lastModifiedDate":"2023-09-13"},{"lineNumber":274,"author":{"gitId":"SelwynAng"},"content":"            break;","lastModifiedDate":"2023-09-13"},{"lineNumber":275,"author":{"gitId":"SelwynAng"},"content":"        default:","lastModifiedDate":"2023-09-13"},{"lineNumber":276,"author":{"gitId":"SelwynAng"},"content":"            throw new DukeException(\"Task type must be Todo, Deadline or Event!\");","lastModifiedDate":"2023-09-13"},{"lineNumber":277,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":278,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":279,"author":{"gitId":"SelwynAng"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-09-13"},{"lineNumber":280,"author":{"gitId":"SelwynAng"},"content":"            if (this.tasks.get(i).getClass() \u003d\u003d taskTypeClass.getClass()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":281,"author":{"gitId":"SelwynAng"},"content":"                specificTaskList.add(this.tasks.get(i));","lastModifiedDate":"2023-09-13"},{"lineNumber":282,"author":{"gitId":"SelwynAng"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":283,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":284,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":285,"author":{"gitId":"SelwynAng"},"content":"        return specificTaskList;","lastModifiedDate":"2023-09-13"},{"lineNumber":286,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":287,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":288,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":289,"author":{"gitId":"SelwynAng"},"content":"     * Returns a list of tasks that are marked done already","lastModifiedDate":"2023-09-13"},{"lineNumber":290,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":291,"author":{"gitId":"SelwynAng"},"content":"     * @return The ArrayList of tasks that are marked done already","lastModifiedDate":"2023-09-13"},{"lineNumber":292,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":293,"author":{"gitId":"SelwynAng"},"content":"    public ArrayList\u003cTask\u003e listDoneTasks() {","lastModifiedDate":"2023-09-13"},{"lineNumber":294,"author":{"gitId":"SelwynAng"},"content":"        ArrayList\u003cTask\u003e doneTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-13"},{"lineNumber":295,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":296,"author":{"gitId":"SelwynAng"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-09-13"},{"lineNumber":297,"author":{"gitId":"SelwynAng"},"content":"            if (this.tasks.get(i).getIsDone()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":298,"author":{"gitId":"SelwynAng"},"content":"                doneTasks.add(this.tasks.get(i));","lastModifiedDate":"2023-09-13"},{"lineNumber":299,"author":{"gitId":"SelwynAng"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":300,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":301,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":302,"author":{"gitId":"SelwynAng"},"content":"        return doneTasks;","lastModifiedDate":"2023-09-13"},{"lineNumber":303,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":304,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":305,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":306,"author":{"gitId":"SelwynAng"},"content":"     * Returns the percentage of tasks in the task list which are done already","lastModifiedDate":"2023-09-13"},{"lineNumber":307,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":308,"author":{"gitId":"SelwynAng"},"content":"     * @return The percentage of tasks in the task list which are done already","lastModifiedDate":"2023-09-13"},{"lineNumber":309,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":310,"author":{"gitId":"SelwynAng"},"content":"    public double statePercentOfTasksDone() {","lastModifiedDate":"2023-09-13"},{"lineNumber":311,"author":{"gitId":"SelwynAng"},"content":"        double totalNumOfTasks \u003d this.getNumTasks();","lastModifiedDate":"2023-09-13"},{"lineNumber":312,"author":{"gitId":"SelwynAng"},"content":"        double numOfTasksDone \u003d this.listDoneTasks().size();","lastModifiedDate":"2023-09-13"},{"lineNumber":313,"author":{"gitId":"SelwynAng"},"content":"        double percentValue \u003d numOfTasksDone / totalNumOfTasks * 100;","lastModifiedDate":"2023-09-13"},{"lineNumber":314,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":315,"author":{"gitId":"SelwynAng"},"content":"        DecimalFormat df \u003d new DecimalFormat(\"#.##\");","lastModifiedDate":"2023-09-13"},{"lineNumber":316,"author":{"gitId":"SelwynAng"},"content":"        String formattedNumber \u003d df.format(percentValue);","lastModifiedDate":"2023-09-13"},{"lineNumber":317,"author":{"gitId":"SelwynAng"},"content":"        double roundedPercentValue \u003d Double.parseDouble(formattedNumber);","lastModifiedDate":"2023-09-13"},{"lineNumber":318,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":319,"author":{"gitId":"SelwynAng"},"content":"        return roundedPercentValue;","lastModifiedDate":"2023-09-13"},{"lineNumber":320,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":321,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":322,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":323,"author":{"gitId":"SelwynAng"},"content":"     * Checks if the given index exceeds the size of the task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":324,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":325,"author":{"gitId":"SelwynAng"},"content":"     * @param index The index to be checked.","lastModifiedDate":"2023-08-29"},{"lineNumber":326,"author":{"gitId":"SelwynAng"},"content":"     * @return True if the index exceeds the task list size, false otherwise.","lastModifiedDate":"2023-08-29"},{"lineNumber":327,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":328,"author":{"gitId":"SelwynAng"},"content":"    public boolean exceedsSizeOfTaskList(int index) {","lastModifiedDate":"2023-08-29"},{"lineNumber":329,"author":{"gitId":"SelwynAng"},"content":"        return index \u003e numTasks;","lastModifiedDate":"2023-08-22"},{"lineNumber":330,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":331,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":332,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":333,"author":{"gitId":"SelwynAng"},"content":"     * Retrieves the list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":334,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":335,"author":{"gitId":"SelwynAng"},"content":"     * @return The ArrayList of Task objects.","lastModifiedDate":"2023-08-29"},{"lineNumber":336,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":337,"author":{"gitId":"SelwynAng"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-08-29"},{"lineNumber":338,"author":{"gitId":"SelwynAng"},"content":"        return this.tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":339,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":340,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":341,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":342,"author":{"gitId":"SelwynAng"},"content":"     * Retrieves the number of tasks in the list.","lastModifiedDate":"2023-08-29"},{"lineNumber":343,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":344,"author":{"gitId":"SelwynAng"},"content":"     * @return The number of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":345,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":346,"author":{"gitId":"SelwynAng"},"content":"    public int getNumTasks() {","lastModifiedDate":"2023-08-29"},{"lineNumber":347,"author":{"gitId":"SelwynAng"},"content":"        return this.numTasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":348,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":349,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"SelwynAng":349}},{"path":"src/main/java/duke/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"package duke.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":" * This is the TaskType enum","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":" * @author Selwyn","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"public enum TaskType {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"    TODO, DEADLINE, EVENT","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"SelwynAng":9}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"package duke.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":" * The Todo class represents a task without a specific due date or time.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":" * @author selwyn","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":"     * Constructs a Todo object with the specified description.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"     * @param detail The description of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"    public Todo(String detail) {","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"        super(detail);","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"     * Returns a string representation of the Todo object, including its completion status and description.","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"     * @return A string representation of the Todo object.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"SelwynAng"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"SelwynAng":27}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"package duke.ui;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":" * The DialogBox class represents a graphical dialog box that can display text and an image.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":" *","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":" * @author selwyn","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"SelwynAng"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"SelwynAng"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"SelwynAng"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"SelwynAng"},"content":"     * Constructs a new DialogBox with the specified text and image.","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"SelwynAng"},"content":"     * @param text The text to display in the dialog box.","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"SelwynAng"},"content":"     * @param img  The image to display in the dialog box.","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"SelwynAng"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"SelwynAng"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"SelwynAng"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"SelwynAng"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"SelwynAng"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"SelwynAng"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"SelwynAng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"SelwynAng"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"SelwynAng"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"SelwynAng"},"content":"        dialog.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"SelwynAng"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"SelwynAng"},"content":"        displayPicture.setClip(new Circle(50, 50, 50));","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"SelwynAng"},"content":"     * Flips the dialog box to align its contents to the top left.","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"SelwynAng"},"content":"    private void flip() {","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"SelwynAng"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"SelwynAng"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"SelwynAng"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"SelwynAng"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"SelwynAng"},"content":"     * Creates and returns a new user dialog box with the specified text and image.","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"SelwynAng"},"content":"     * @param text The text to display in the user dialog box.","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"SelwynAng"},"content":"     * @param img  The image to display in the user dialog box.","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"SelwynAng"},"content":"     * @return A new DialogBox representing the user\u0027s dialog.","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"SelwynAng"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"SelwynAng"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"SelwynAng"},"content":"     * Creates and returns a new Duke dialog box with the specified text and image.","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"SelwynAng"},"content":"     * Additionally, it flips the dialog box to align its contents to the top left.","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"SelwynAng"},"content":"     * @param text The text to display in the Duke dialog box.","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"SelwynAng"},"content":"     * @param img  The image to display in the Duke dialog box.","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"SelwynAng"},"content":"     * @return A new DialogBox representing Duke\u0027s dialog.","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"SelwynAng"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"SelwynAng"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"SelwynAng"},"content":"        db.flip();","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"SelwynAng"},"content":"        return db;","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"SelwynAng":86}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"package duke.ui;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":" * The MainWindow class represents the main graphical user interface for the Duke chatbot application.","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":" *","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":" * @author selwyn","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"SelwynAng"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"SelwynAng"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.jpeg\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"SelwynAng"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.jpeg\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"SelwynAng"},"content":"     * Initializes the MainWindow by binding the scrollPane\u0027s vvalue property to the height property of dialogContainer.","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"SelwynAng"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"SelwynAng"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"SelwynAng"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"SelwynAng"},"content":"     * Sets the Duke instance for this MainWindow.","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"SelwynAng"},"content":"     * @param d The Duke instance to set.","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"SelwynAng"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"SelwynAng"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"SelwynAng"},"content":"     * Handles user input when the user enters hir or her input.","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"SelwynAng"},"content":"     * Retrieves the user\u0027s input, gets a response from Duke, and displays it in the dialogContainer.","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"SelwynAng"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"SelwynAng"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"SelwynAng"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"SelwynAng"},"content":"        String response \u003d duke.getResponse(userInput.getText());","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"SelwynAng"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"SelwynAng"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"SelwynAng"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"SelwynAng"},"content":"        );","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"SelwynAng"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"SelwynAng"},"content":"     * Prints the initial greeting message from Duke in the dialogContainer.","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"SelwynAng"},"content":"    public void printGreeting() {","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"SelwynAng"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(ui.printGreet(), dukeImage));","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"SelwynAng":68}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"package duke.ui;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":" * The Ui class handles user interface-related operations and generates user-friendly messages for the Duke chatbot.","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":" * @author selwyn","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"public class Ui {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"    private static final String NAME \u003d \"DUKE PRINCE\";","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"     * Generates a representation of the task list, optionally filtered by a search query.","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"     * @param taskList   The task list to be represented.","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"     * @param isMatching Whether the task list is filtered by a search query.","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"     * @return A string representation of the task list.","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"    public static String printTaskList(TaskList taskList, boolean isMatching) {","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"        return taskList.taskListRepresentation(isMatching);","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":"     * Generates a message indicating that a task has been successfully added to the task list.","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"SelwynAng"},"content":"     * @param addedTask            The task that has been added.","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"SelwynAng"},"content":"     * @param numOfTasksAfterAdding The number of tasks in the list after adding the new task.","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"SelwynAng"},"content":"     * @return A message indicating the successful addition of the task.","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"SelwynAng"},"content":"    public static String printAddedTask(Task addedTask, int numOfTasksAfterAdding) {","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"SelwynAng"},"content":"        String strToReturn \u003d \"Got it. I\u0027ve added this task: \\n\" + addedTask.toString() + \"\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"SelwynAng"},"content":"        if (numOfTasksAfterAdding \u003d\u003d 1) {","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"SelwynAng"},"content":"            strToReturn +\u003d \"Now you have \" + numOfTasksAfterAdding + \" task in the list.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"SelwynAng"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"SelwynAng"},"content":"            strToReturn +\u003d \"Now you have \" + numOfTasksAfterAdding + \" tasks in the list.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"SelwynAng"},"content":"        return strToReturn;","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"SelwynAng"},"content":"     * Generates a message indicating that the done status of a task has been changed.","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"SelwynAng"},"content":"     * @param taskToChange The task whose done status has been changed.","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"SelwynAng"},"content":"     * @param isDone       Whether the task is marked as done or not.","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"SelwynAng"},"content":"     * @return A message indicating the change in task done status.","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"SelwynAng"},"content":"    public static String printChangeTaskDoneStatus(Task taskToChange, boolean isDone) {","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"SelwynAng"},"content":"        String strToReturn \u003d \"\";","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"SelwynAng"},"content":"        if (isDone) {","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"SelwynAng"},"content":"            strToReturn +\u003d \"Nice! I\u0027ve marked this task done:\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"SelwynAng"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"SelwynAng"},"content":"            strToReturn +\u003d \"OK, I\u0027ve marked this task as not done yet:\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"SelwynAng"},"content":"        strToReturn +\u003d taskToChange.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"SelwynAng"},"content":"        return strToReturn;","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"SelwynAng"},"content":"     * Generates a message indicating that a task has been successfully deleted from the task list.","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"SelwynAng"},"content":"     * @param deletedTask    The task that has been deleted.","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"SelwynAng"},"content":"     * @param numOfTasksLeft The number of tasks remaining in the list after deletion.","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"SelwynAng"},"content":"     * @return A message indicating the successful deletion of the task.","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"SelwynAng"},"content":"    public static String printDeletedTask(Task deletedTask, int numOfTasksLeft) {","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"SelwynAng"},"content":"        String strToReturn \u003d \"Noted. I\u0027ve removed this task:\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":72,"author":{"gitId":"SelwynAng"},"content":"        strToReturn +\u003d deletedTask.toString() + \"\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"SelwynAng"},"content":"        if (numOfTasksLeft \u003d\u003d 1 || numOfTasksLeft \u003d\u003d 0) {","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"SelwynAng"},"content":"            strToReturn +\u003d \"Now you have \" + numOfTasksLeft + \" task in the list.\";","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"SelwynAng"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"SelwynAng"},"content":"            strToReturn +\u003d \"Now you have \" + numOfTasksLeft + \" tasks in the list.\";","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"SelwynAng"},"content":"        return strToReturn;","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":84,"author":{"gitId":"SelwynAng"},"content":"     * Generates a message indicating statistics for the task list.","lastModifiedDate":"2023-09-13"},{"lineNumber":85,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":86,"author":{"gitId":"SelwynAng"},"content":"     * @param todoSize     The number of todo tasks.","lastModifiedDate":"2023-09-13"},{"lineNumber":87,"author":{"gitId":"SelwynAng"},"content":"     * @param deadlineSize The number of deadline tasks.","lastModifiedDate":"2023-09-13"},{"lineNumber":88,"author":{"gitId":"SelwynAng"},"content":"     * @param eventSize    The number of event tasks.","lastModifiedDate":"2023-09-13"},{"lineNumber":89,"author":{"gitId":"SelwynAng"},"content":"     * @param percentDone  The percentage of tasks marked as done.","lastModifiedDate":"2023-09-13"},{"lineNumber":90,"author":{"gitId":"SelwynAng"},"content":"     * @return A message containing task statistics.","lastModifiedDate":"2023-09-13"},{"lineNumber":91,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":92,"author":{"gitId":"SelwynAng"},"content":"    public static String printStatistics(int todoSize, int deadlineSize, int eventSize, double percentDone) {","lastModifiedDate":"2023-09-13"},{"lineNumber":93,"author":{"gitId":"SelwynAng"},"content":"        return \"These are the statistics for your task list:\\n\"","lastModifiedDate":"2023-09-13"},{"lineNumber":94,"author":{"gitId":"SelwynAng"},"content":"                + \"Number of todos: \" + todoSize + \"\\n\"","lastModifiedDate":"2023-09-13"},{"lineNumber":95,"author":{"gitId":"SelwynAng"},"content":"                + \"Number of deadlines: \" + deadlineSize + \"\\n\"","lastModifiedDate":"2023-09-13"},{"lineNumber":96,"author":{"gitId":"SelwynAng"},"content":"                + \"Number of events: \" + eventSize + \"\\n\"","lastModifiedDate":"2023-09-13"},{"lineNumber":97,"author":{"gitId":"SelwynAng"},"content":"                + \"Percentage of tasks done: \" + percentDone + \"%\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":98,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":99,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":100,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"SelwynAng"},"content":"     * Generates a welcome greeting message.","lastModifiedDate":"2023-09-06"},{"lineNumber":102,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":103,"author":{"gitId":"SelwynAng"},"content":"     * @return A welcome message for the user.","lastModifiedDate":"2023-09-06"},{"lineNumber":104,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"SelwynAng"},"content":"    public static String printGreet() {","lastModifiedDate":"2023-09-06"},{"lineNumber":106,"author":{"gitId":"SelwynAng"},"content":"        return \"Hello! I\u0027m \" + NAME + \"\\n\" + \"What can I do for you?\";","lastModifiedDate":"2023-09-06"},{"lineNumber":107,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"SelwynAng"},"content":"     * Generates a farewell message for when the user exits the application.","lastModifiedDate":"2023-09-06"},{"lineNumber":111,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":112,"author":{"gitId":"SelwynAng"},"content":"     * @return A farewell message.","lastModifiedDate":"2023-09-06"},{"lineNumber":113,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"SelwynAng"},"content":"    public static String printExit() {","lastModifiedDate":"2023-09-06"},{"lineNumber":115,"author":{"gitId":"SelwynAng"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-06"},{"lineNumber":116,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"SelwynAng"},"content":"     * Generates an error message for the user.","lastModifiedDate":"2023-09-06"},{"lineNumber":120,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"SelwynAng"},"content":"     * @param errorMsg The error message to display.","lastModifiedDate":"2023-09-06"},{"lineNumber":122,"author":{"gitId":"SelwynAng"},"content":"     * @return An error message for the user.","lastModifiedDate":"2023-09-06"},{"lineNumber":123,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"SelwynAng"},"content":"    public static String printError(String errorMsg) {","lastModifiedDate":"2023-09-06"},{"lineNumber":125,"author":{"gitId":"SelwynAng"},"content":"        return \"OOPS! \" + errorMsg;","lastModifiedDate":"2023-09-06"},{"lineNumber":126,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"SelwynAng":127}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" style\u003d\"-fx-background-color: #E1FFC7;","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"            -fx-background-radius: 10px; -fx-padding: 10px; -fx-border-insets: 5px;\"/\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"SelwynAng":18}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"SelwynAng":19}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"public class DukeTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":"    public void dummyTest() {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"    public void anotherDummyTest() {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"SelwynAng":17}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"import duke.command.Command;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"    public void testParseCommandForExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"        Command c \u003d null;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"            c \u003d parser.parseCommand(\"bye\");","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"        assertEquals(c.getClass(), new ExitCommand().getClass());","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":"    public void testParseCommandForList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"SelwynAng"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"SelwynAng"},"content":"        Command c \u003d null;","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"SelwynAng"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"SelwynAng"},"content":"            c \u003d parser.parseCommand(\"list\");","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"SelwynAng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"SelwynAng"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"SelwynAng"},"content":"        assertEquals(c.getClass(), new ListCommand().getClass());","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"SelwynAng":36}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"public class TaskTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":"    public void testMarkDone() {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"        Task testTask \u003d new Task(\"testTask\");","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"        testTask.markDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":"        assertTrue(testTask.getIsDone());","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"    public void testMarkUndone() {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"        Task testTask \u003d new Task(\"testTask\");","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"        testTask.markDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"        testTask.markUndone();","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"        assertFalse(testTask.getIsDone());","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"SelwynAng":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"todo drink tea","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"event project meeting /from Tues 2pm /to 4pm","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"mark 2","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"mark 3","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"bye","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"SelwynAng":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"SelwynAng":1,"-":20}}]
