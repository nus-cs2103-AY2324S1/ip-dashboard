[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter-api:5.10.0\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.10.0\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":17,"author":{"gitId":"Kokseng1"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"Kokseng1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"Kokseng1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"Kokseng1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"Kokseng1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"Kokseng1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"Kokseng1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"Kokseng1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"Kokseng1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"Kokseng1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"Kokseng1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"Kokseng1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"Kokseng1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"Kokseng1"},"content":"    mainClass.set(\"Mainduke.Launcher\")","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"Kokseng1"},"content":"    archiveBaseName \u003d \"launch\"","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":55,"author":{"gitId":"Kokseng1"},"content":"    from(sourceSets.main.resources) {","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"Kokseng1"},"content":"        include \u0027images/**\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"Kokseng1"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":65,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":66,"author":{"gitId":"Kokseng1"},"content":"checkstyle {","lastModifiedDate":"2023-09-08"},{"lineNumber":67,"author":{"gitId":"Kokseng1"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"Kokseng1":27,"-":41}},{"path":"src/main/java/mainDuke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kokseng1"},"content":"package mainDuke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"Kokseng1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"Kokseng1"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"Kokseng1"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"Kokseng1"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"Kokseng1"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"Kokseng1"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"Kokseng1"},"content":"import mainDuke.exceptions.DukeException;","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"Kokseng1"},"content":"import mainDuke.exceptions.TaskParseException;","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"Kokseng1"},"content":"import mainDuke.stageStuff.DialogBox;","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"Kokseng1"},"content":"import mainDuke.task.Task;","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"Kokseng1"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"Kokseng1"},"content":" * Main program, responsible for running everything and connecting components together.","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"Kokseng1"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"Kokseng1"},"content":"public class Duke {","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"Kokseng1"},"content":"     * Types of task.","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"Kokseng1"},"content":"    public enum TaskType {","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"Kokseng1"},"content":"        BYE,","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"Kokseng1"},"content":"        LIST,","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"Kokseng1"},"content":"        MARK,","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"Kokseng1"},"content":"        UNMARK,","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"Kokseng1"},"content":"        DELETE,","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"Kokseng1"},"content":"        EVENT,","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"Kokseng1"},"content":"        TODO,","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"Kokseng1"},"content":"        DEADLINE,","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"Kokseng1"},"content":"        FIND,","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"Kokseng1"},"content":"        TAG","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"Kokseng1"},"content":"    protected Stage primaryStage;","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"Kokseng1"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"Kokseng1"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"Kokseng1"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"Kokseng1"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"Kokseng1"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"Kokseng1"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"Kokseng1"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"Kokseng1"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"Kokseng1"},"content":"    private Scene scene;","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"Kokseng1"},"content":"    private final Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"Kokseng1"},"content":"    private final Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"Kokseng1"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"Kokseng1"},"content":"     * @param text String containing text to add.","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"Kokseng1"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"Kokseng1"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"Kokseng1"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"Kokseng1"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"Kokseng1"},"content":"        return textToAdd;","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":65,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":66,"author":{"gitId":"Kokseng1"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-08"},{"lineNumber":67,"author":{"gitId":"Kokseng1"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-08"},{"lineNumber":68,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":69,"author":{"gitId":"Kokseng1"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":70,"author":{"gitId":"Kokseng1"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-08"},{"lineNumber":71,"author":{"gitId":"Kokseng1"},"content":"        String userText \u003d userInput.getText();","lastModifiedDate":"2023-09-08"},{"lineNumber":72,"author":{"gitId":"Kokseng1"},"content":"        String dukeText \u003d \"getResponse(userInput.getText())\";","lastModifiedDate":"2023-09-10"},{"lineNumber":73,"author":{"gitId":"Kokseng1"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-08"},{"lineNumber":74,"author":{"gitId":"Kokseng1"},"content":"                DialogBox.getUserDialog(userText, user),","lastModifiedDate":"2023-09-08"},{"lineNumber":75,"author":{"gitId":"Kokseng1"},"content":"                DialogBox.getDukeDialog(dukeText, duke)","lastModifiedDate":"2023-09-08"},{"lineNumber":76,"author":{"gitId":"Kokseng1"},"content":"        );","lastModifiedDate":"2023-09-08"},{"lineNumber":77,"author":{"gitId":"Kokseng1"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-08"},{"lineNumber":78,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":79,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":80,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":81,"author":{"gitId":"Kokseng1"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-09"},{"lineNumber":82,"author":{"gitId":"Kokseng1"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":83,"author":{"gitId":"Kokseng1"},"content":"            StringBuilder response;","lastModifiedDate":"2023-09-10"},{"lineNumber":84,"author":{"gitId":"Kokseng1"},"content":"            TaskList.updateFromStorage();","lastModifiedDate":"2023-09-10"},{"lineNumber":85,"author":{"gitId":"Kokseng1"},"content":"            response \u003d new StringBuilder();","lastModifiedDate":"2023-09-10"},{"lineNumber":86,"author":{"gitId":"Kokseng1"},"content":"            TaskType taskType \u003d Parser.parseType(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":87,"author":{"gitId":"Kokseng1"},"content":"            switch (taskType) {","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"Kokseng1"},"content":"            case LIST: {","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"Kokseng1"},"content":"                response.append(TaskList.getListAsString());","lastModifiedDate":"2023-09-10"},{"lineNumber":90,"author":{"gitId":"Kokseng1"},"content":"                break;","lastModifiedDate":"2023-09-10"},{"lineNumber":91,"author":{"gitId":"Kokseng1"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":93,"author":{"gitId":"Kokseng1"},"content":"            case MARK: {","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"Kokseng1"},"content":"                int tasknum \u003d Parser.getMarkIndex(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":95,"author":{"gitId":"Kokseng1"},"content":"                response.append(TaskList.markTask(tasknum));","lastModifiedDate":"2023-09-10"},{"lineNumber":96,"author":{"gitId":"Kokseng1"},"content":"                break;","lastModifiedDate":"2023-09-10"},{"lineNumber":97,"author":{"gitId":"Kokseng1"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":99,"author":{"gitId":"Kokseng1"},"content":"            case UNMARK: {","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"Kokseng1"},"content":"                int tasknum \u003d Parser.getUnmarkIndex(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":101,"author":{"gitId":"Kokseng1"},"content":"                response.append(TaskList.unmarkTask(tasknum));","lastModifiedDate":"2023-09-10"},{"lineNumber":102,"author":{"gitId":"Kokseng1"},"content":"                break;","lastModifiedDate":"2023-09-10"},{"lineNumber":103,"author":{"gitId":"Kokseng1"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":105,"author":{"gitId":"Kokseng1"},"content":"            case DEADLINE:","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"Kokseng1"},"content":"            case TODO:","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"Kokseng1"},"content":"            case EVENT:","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"Kokseng1"},"content":"                Task nextTask \u003d Parser.parseTask(input, taskType);","lastModifiedDate":"2023-09-08"},{"lineNumber":109,"author":{"gitId":"Kokseng1"},"content":"                response.append(TaskList.addTask(nextTask));","lastModifiedDate":"2023-09-10"},{"lineNumber":110,"author":{"gitId":"Kokseng1"},"content":"                break;","lastModifiedDate":"2023-09-10"},{"lineNumber":111,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":112,"author":{"gitId":"Kokseng1"},"content":"            case DELETE: {","lastModifiedDate":"2023-09-03"},{"lineNumber":113,"author":{"gitId":"Kokseng1"},"content":"                response.append(TaskList.deleteTask(Parser.getDeleteIndex(input)));","lastModifiedDate":"2023-09-10"},{"lineNumber":114,"author":{"gitId":"Kokseng1"},"content":"                break;","lastModifiedDate":"2023-09-10"},{"lineNumber":115,"author":{"gitId":"Kokseng1"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":117,"author":{"gitId":"Kokseng1"},"content":"            case FIND: {","lastModifiedDate":"2023-09-06"},{"lineNumber":118,"author":{"gitId":"Kokseng1"},"content":"                ArrayList\u003cTask\u003e list \u003d TaskList.find(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":119,"author":{"gitId":"Kokseng1"},"content":"                if (list.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-06"},{"lineNumber":120,"author":{"gitId":"Kokseng1"},"content":"                    response.append(\"there are no matching tasks!\");","lastModifiedDate":"2023-09-10"},{"lineNumber":121,"author":{"gitId":"Kokseng1"},"content":"                } else {","lastModifiedDate":"2023-09-06"},{"lineNumber":122,"author":{"gitId":"Kokseng1"},"content":"                    String header \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-09-08"},{"lineNumber":123,"author":{"gitId":"Kokseng1"},"content":"                    String listInString \u003d Ui.getListAsString(list);","lastModifiedDate":"2023-09-08"},{"lineNumber":124,"author":{"gitId":"Kokseng1"},"content":"                    response.append(header).append(listInString);","lastModifiedDate":"2023-09-10"},{"lineNumber":125,"author":{"gitId":"Kokseng1"},"content":"                }","lastModifiedDate":"2023-09-06"},{"lineNumber":126,"author":{"gitId":"Kokseng1"},"content":"                break;","lastModifiedDate":"2023-09-10"},{"lineNumber":127,"author":{"gitId":"Kokseng1"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":128,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":129,"author":{"gitId":"Kokseng1"},"content":"            case BYE: {","lastModifiedDate":"2023-09-08"},{"lineNumber":130,"author":{"gitId":"Kokseng1"},"content":"                response.append(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-10"},{"lineNumber":131,"author":{"gitId":"Kokseng1"},"content":"                break;","lastModifiedDate":"2023-09-10"},{"lineNumber":132,"author":{"gitId":"Kokseng1"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":133,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":134,"author":{"gitId":"Kokseng1"},"content":"            default: {","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"Kokseng1"},"content":"                throw new DukeException(\"I can\u0027t identify your command!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"Kokseng1"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"Kokseng1"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":138,"author":{"gitId":"Kokseng1"},"content":"            TaskList.saveList();","lastModifiedDate":"2023-09-10"},{"lineNumber":139,"author":{"gitId":"Kokseng1"},"content":"            return response.toString();","lastModifiedDate":"2023-09-10"},{"lineNumber":140,"author":{"gitId":"Kokseng1"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":141,"author":{"gitId":"Kokseng1"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-08"},{"lineNumber":142,"author":{"gitId":"Kokseng1"},"content":"        } catch (TaskParseException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":143,"author":{"gitId":"Kokseng1"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-08"},{"lineNumber":144,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":145,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":146,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":147,"author":{"gitId":"Kokseng1"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-03"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Kokseng1":147,"-":2}},{"path":"src/main/java/mainDuke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kokseng1"},"content":"package mainDuke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"Kokseng1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Kokseng1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"Kokseng1"},"content":"import mainDuke.exceptions.DukeException;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"Kokseng1"},"content":"import mainDuke.exceptions.TaskParseException;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":"import mainDuke.task.Deadline;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":"import mainDuke.task.Task;","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"Kokseng1"},"content":"import mainDuke.task.Todo;","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"Kokseng1"},"content":"public class DukeTest {","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"Kokseng1"},"content":"    @Test","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"Kokseng1"},"content":"    public void parseTypeTest() {","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"Kokseng1"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"Kokseng1"},"content":"            Duke.TaskType result \u003d Parser.parseType(\"Todo make\");","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"Kokseng1"},"content":"            assertEquals(Duke.TaskType.TODO, result);","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"Kokseng1"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"Kokseng1"},"content":"            fail(e.getMessage());","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"Kokseng1"},"content":"        } catch (TaskParseException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"Kokseng1"},"content":"            fail(e.getMessage());","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"Kokseng1"},"content":"    @Test","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"Kokseng1"},"content":"    public void parseTaskTest() {","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"Kokseng1"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"Kokseng1"},"content":"            Task expected \u003d new Deadline(false, \"deadline return book /by 2019-12-02\");","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"Kokseng1"},"content":"            Task result \u003d Parser.parseTask(\"deadline return book /by 2019-12-02\", Duke.TaskType.DEADLINE);","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"Kokseng1"},"content":"            assertEquals(expected.toString(), result.toString());","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"Kokseng1"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"Kokseng1"},"content":"            fail(e.getMessage());","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"Kokseng1"},"content":"    @Test","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"Kokseng1"},"content":"    public void markTasFromTaskListTest() {","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"Kokseng1"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"Kokseng1"},"content":"            Task expected \u003d new Todo(true, \"todo mark\");","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"Kokseng1"},"content":"            TaskList list \u003d new TaskList();","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"Kokseng1"},"content":"            list.addTask(new Todo(false, \"todo mark\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"Kokseng1"},"content":"            list.markTask(0);","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"Kokseng1"},"content":"            Task result \u003d list.getTask(0);","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"Kokseng1"},"content":"            assertEquals(result.toString(), expected.toString());","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"Kokseng1"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"Kokseng1"},"content":"            fail(e.getMessage());","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"Kokseng1"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"Kokseng1":52}},{"path":"src/main/java/mainDuke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kokseng1"},"content":"package mainDuke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"Kokseng1"},"content":"import mainDuke.exceptions.DukeException;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"import mainDuke.exceptions.TaskParseException;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"import mainDuke.task.Deadline;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"Kokseng1"},"content":"import mainDuke.task.Event;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"Kokseng1"},"content":"import mainDuke.task.Task;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"Kokseng1"},"content":"import mainDuke.task.Todo;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":" * Parser to make sense of user commands, parsing from command to action","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"Kokseng1"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"public class Parser {","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"Kokseng1"},"content":"     * If command is delete, use this method to get the index of task user wants to delete.","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"Kokseng1"},"content":"     * @param text original command.","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"Kokseng1"},"content":"     * @return Integer representing the index of task to be deleted.","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"Kokseng1"},"content":"    public static Integer getDeleteIndex(String text) {","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"Kokseng1"},"content":"        return Integer.parseInt(text.split(\" \")[1]) - 1;","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"Kokseng1"},"content":"     *  If command is mark, use this method to get the index of task user wants to mark.","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"Kokseng1"},"content":"     *  @param text original command.","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"Kokseng1"},"content":"     *  @return Integer representing the index of task to be marked.","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"Kokseng1"},"content":"    public static Integer getMarkIndex(String text) {","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"Kokseng1"},"content":"        return Integer.parseInt(text.split(\" \")[1]) - 1;","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"Kokseng1"},"content":"     *  If command is unmark, use this method to get the index of task user wants to unmark.","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"Kokseng1"},"content":"     *  @param text original command.","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"Kokseng1"},"content":"     *  @return Integer representing the index of task to be unmarked.","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"Kokseng1"},"content":"    public static Integer getUnmarkIndex(String text) {","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"Kokseng1"},"content":"        return Integer.parseInt(text.split(\" \")[1]) - 1;","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"Kokseng1"},"content":"     * Given a TaskType, parses a text into a task of that type.","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"Kokseng1"},"content":"     * @param text original user input.","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"Kokseng1"},"content":"     * @param type type of task that user specified.","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"Kokseng1"},"content":"     * @return task constructed according to user input.","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"Kokseng1"},"content":"    public static Task parseTask(String text, Duke.TaskType type) throws DukeException {","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"Kokseng1"},"content":"        switch (type) {","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"Kokseng1"},"content":"        case TODO: {","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"Kokseng1"},"content":"            return new Todo(false, text);","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"Kokseng1"},"content":"        case DEADLINE: {","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"Kokseng1"},"content":"            if (!text.contains(\"/by\") || text.length() \u003c\u003d text.indexOf(\"/by\") + 4) {","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"Kokseng1"},"content":"                throw new DukeException(\"You forgot to specify when the deadline ends!\");","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"Kokseng1"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"Kokseng1"},"content":"            return new Deadline(false, text);","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"Kokseng1"},"content":"        case EVENT: {","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"Kokseng1"},"content":"            if (!text.contains(\"/from\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"Kokseng1"},"content":"                throw new DukeException(\"You forgot to specify when the event starts!\");","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"Kokseng1"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"Kokseng1"},"content":"            if (!text.contains(\"/to\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"Kokseng1"},"content":"                throw new DukeException(\"You forgot to specify when the event ends!\");","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"Kokseng1"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"Kokseng1"},"content":"            return new Event(false, text);","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"Kokseng1"},"content":"        default: {","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"Kokseng1"},"content":"            throw new DukeException(\"Not a task!\");","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":76,"author":{"gitId":"Kokseng1"},"content":"     * Make sense of what TaskType the user is trying to create from the first word of their input.","lastModifiedDate":"2023-09-09"},{"lineNumber":77,"author":{"gitId":"Kokseng1"},"content":"     * @param text user input.","lastModifiedDate":"2023-09-09"},{"lineNumber":78,"author":{"gitId":"Kokseng1"},"content":"     * @return TaskType according to user input.","lastModifiedDate":"2023-09-09"},{"lineNumber":79,"author":{"gitId":"Kokseng1"},"content":"     * @throws DukeException Some components of the command may be missing for certain tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":80,"author":{"gitId":"Kokseng1"},"content":"     * @throws TaskParseException unable to understand what TaskType the user is trying to create.","lastModifiedDate":"2023-09-09"},{"lineNumber":81,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":82,"author":{"gitId":"Kokseng1"},"content":"    public static Duke.TaskType parseType(String text) throws DukeException, TaskParseException {","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"Kokseng1"},"content":"        String[] textParts \u003d text.split(\" \");","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"Kokseng1"},"content":"        String firstWord \u003d textParts[0].toLowerCase();","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"Kokseng1"},"content":"        if (textParts.length \u003c\u003d 1 \u0026\u0026 !firstWord.equals(\"list\") \u0026\u0026 !firstWord.equals(\"bye\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"Kokseng1"},"content":"            throw new DukeException(\"You forgot to write the task\");","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"Kokseng1"},"content":"        switch (textParts[0].toLowerCase()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"Kokseng1"},"content":"        case \"list\": {","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"Kokseng1"},"content":"            return Duke.TaskType.LIST;","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"Kokseng1"},"content":"        case \"mark\": {","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"Kokseng1"},"content":"            return Duke.TaskType.MARK;","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"Kokseng1"},"content":"        case \"unmark\": {","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"Kokseng1"},"content":"            return Duke.TaskType.UNMARK;","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":101,"author":{"gitId":"Kokseng1"},"content":"        case \"deadline\": {","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"Kokseng1"},"content":"            return Duke.TaskType.DEADLINE;","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"Kokseng1"},"content":"        case \"event\": {","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"Kokseng1"},"content":"            return Duke.TaskType.EVENT;","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"Kokseng1"},"content":"        case \"todo\": {","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"Kokseng1"},"content":"            return Duke.TaskType.TODO;","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":112,"author":{"gitId":"Kokseng1"},"content":"        case \"delete\": {","lastModifiedDate":"2023-09-03"},{"lineNumber":113,"author":{"gitId":"Kokseng1"},"content":"            return Duke.TaskType.DELETE;","lastModifiedDate":"2023-09-03"},{"lineNumber":114,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":115,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":116,"author":{"gitId":"Kokseng1"},"content":"        case \"bye\": {","lastModifiedDate":"2023-09-03"},{"lineNumber":117,"author":{"gitId":"Kokseng1"},"content":"            return Duke.TaskType.BYE;","lastModifiedDate":"2023-09-03"},{"lineNumber":118,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":119,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":120,"author":{"gitId":"Kokseng1"},"content":"        case \"find\": {","lastModifiedDate":"2023-09-06"},{"lineNumber":121,"author":{"gitId":"Kokseng1"},"content":"            return Duke.TaskType.FIND;","lastModifiedDate":"2023-09-06"},{"lineNumber":122,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":123,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":124,"author":{"gitId":"Kokseng1"},"content":"        case \"tag\": {","lastModifiedDate":"2023-09-10"},{"lineNumber":125,"author":{"gitId":"Kokseng1"},"content":"            return Duke.TaskType.TAG;","lastModifiedDate":"2023-09-10"},{"lineNumber":126,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":127,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":128,"author":{"gitId":"Kokseng1"},"content":"        default: {","lastModifiedDate":"2023-09-03"},{"lineNumber":129,"author":{"gitId":"Kokseng1"},"content":"            throw new TaskParseException(\"Not a TaskType\");","lastModifiedDate":"2023-09-03"},{"lineNumber":130,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":131,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":132,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":133,"author":{"gitId":"Kokseng1"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"Kokseng1":133}},{"path":"src/main/java/mainDuke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kokseng1"},"content":"package mainDuke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"Kokseng1"},"content":"import java.io.File;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Kokseng1"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"Kokseng1"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"Kokseng1"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"Kokseng1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"import mainDuke.exceptions.DukeException;","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":"import mainDuke.task.Deadline;","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"Kokseng1"},"content":"import mainDuke.task.Event;","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"Kokseng1"},"content":"import mainDuke.task.Task;","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"Kokseng1"},"content":"import mainDuke.task.Todo;","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"Kokseng1"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"Kokseng1"},"content":" * Saves and loads tasks to hard drive in String form.","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"Kokseng1"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"Kokseng1"},"content":"class Storage {","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"Kokseng1"},"content":"     * Name of file and path which the data is to be stored.","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"Kokseng1"},"content":"    static final String FILE_NAME \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"Kokseng1"},"content":"     * Check if file that is to be written to and loaded from exists, if","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"Kokseng1"},"content":"     * it does not, create one.","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"Kokseng1"},"content":"     * @return true if file was found at first, else false.","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"Kokseng1"},"content":"    static boolean fileExists() {","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"Kokseng1"},"content":"        Path path \u003d Paths.get(FILE_NAME);","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"Kokseng1"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"Kokseng1"},"content":"            if (!Files.exists(path)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Kokseng1"},"content":"                Ui.print(\"data file not found, creating a new one\");","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"Kokseng1"},"content":"                Path dirPath \u003d Paths.get(\"./data\");","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"Kokseng1"},"content":"                Files.createDirectories(dirPath);","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"Kokseng1"},"content":"                File file \u003d new File(FILE_NAME);","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"Kokseng1"},"content":"                return false;","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"Kokseng1"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"Kokseng1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"Kokseng1"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"Kokseng1"},"content":"        return true;","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"Kokseng1"},"content":"     * Wipes file and save tasks given in param to hard drive.","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"Kokseng1"},"content":"     * @param tasks ArrayList of tasks to be saved.","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"Kokseng1"},"content":"    public static void saveTask(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"Kokseng1"},"content":"        fileExists();","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"Kokseng1"},"content":"        try (FileWriter fileWriter \u003d new FileWriter(FILE_NAME)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"Kokseng1"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"Kokseng1"},"content":"                String text \u003d \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"Kokseng1"},"content":"                String desc \u003d task.getTags() + \" \" + task.getDescription();","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"Kokseng1"},"content":"                if (task instanceof Todo) {","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"Kokseng1"},"content":"                    String done \u003d task.getisDone()","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"Kokseng1"},"content":"                            ? \"1\"","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"Kokseng1"},"content":"                            : \"0\";","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"Kokseng1"},"content":"                    text \u003d \"T|\" + done + \"|\" + desc;","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"Kokseng1"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"Kokseng1"},"content":"                    String done \u003d task.getisDone()","lastModifiedDate":"2023-09-04"},{"lineNumber":66,"author":{"gitId":"Kokseng1"},"content":"                            ? \"1\"","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"Kokseng1"},"content":"                            : \"0\";","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"Kokseng1"},"content":"                    LocalDate from \u003d ((Event) task).getFrom();","lastModifiedDate":"2023-09-04"},{"lineNumber":69,"author":{"gitId":"Kokseng1"},"content":"                    LocalDate to \u003d ((Event) task).getTo();","lastModifiedDate":"2023-09-04"},{"lineNumber":70,"author":{"gitId":"Kokseng1"},"content":"                    text \u003d \"E|\" + done + \"|\" + desc + \"|\" + from + \"|\" + to;","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"Kokseng1"},"content":"                } else if (task instanceof Deadline) {","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"Kokseng1"},"content":"                    String done \u003d task.getisDone()","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"Kokseng1"},"content":"                            ? \"1\"","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"Kokseng1"},"content":"                            : \"0\";","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"Kokseng1"},"content":"                    LocalDate by \u003d ((Deadline) task).getBy();","lastModifiedDate":"2023-09-04"},{"lineNumber":76,"author":{"gitId":"Kokseng1"},"content":"                    text \u003d \"D|\" + done + \"|\" + desc + \"|\" + by;","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"Kokseng1"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"Kokseng1"},"content":"                fileWriter.write(text + \"\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"Kokseng1"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"Kokseng1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"Kokseng1"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":86,"author":{"gitId":"Kokseng1"},"content":"     * Loads task from hard drive and returns it.","lastModifiedDate":"2023-09-09"},{"lineNumber":87,"author":{"gitId":"Kokseng1"},"content":"     * @return ArrayList of tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":88,"author":{"gitId":"Kokseng1"},"content":"     * @throws DukeException if there are no tasks in the hard drive.","lastModifiedDate":"2023-09-09"},{"lineNumber":89,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":90,"author":{"gitId":"Kokseng1"},"content":"    public static ArrayList\u003cTask\u003e loadTasks() throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"Kokseng1"},"content":"        fileExists();","lastModifiedDate":"2023-09-10"},{"lineNumber":92,"author":{"gitId":"Kokseng1"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"Kokseng1"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"Kokseng1"},"content":"            Scanner sc \u003d new Scanner(new File(FILE_NAME));","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"Kokseng1"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"Kokseng1"},"content":"                String next \u003d sc.nextLine();","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"Kokseng1"},"content":"                Task nextTask \u003d Task.parse(next);","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"Kokseng1"},"content":"                tasks.add(nextTask);","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"Kokseng1"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"Kokseng1"},"content":"            return tasks;","lastModifiedDate":"2023-08-28"},{"lineNumber":101,"author":{"gitId":"Kokseng1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"Kokseng1"},"content":"            throw new DukeException(\"There are no tasks\");","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":105,"author":{"gitId":"Kokseng1"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Kokseng1":105}},{"path":"src/main/java/mainDuke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kokseng1"},"content":"package mainDuke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"Kokseng1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"import mainDuke.exceptions.DukeException;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"Kokseng1"},"content":"import mainDuke.task.Task;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"Kokseng1"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"Kokseng1"},"content":" * Contains the list of tasks, and provides methods to edit the list and interact with storage/hard drive.","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":"public class TaskList {","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"     * ArrayList of tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"Kokseng1"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"Kokseng1"},"content":"     * Saves current tasks to hard drive.","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"Kokseng1"},"content":"    public static void saveList() {","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"Kokseng1"},"content":"        Storage.saveTask(tasks);","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"Kokseng1"},"content":"     * Loads tasks from hard drive into tasks, prints a message if there","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"Kokseng1"},"content":"     * are no tasks found.","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"Kokseng1"},"content":"    public static String updateFromStorage() {","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"Kokseng1"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"Kokseng1"},"content":"            tasks \u003d Storage.loadTasks();","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"Kokseng1"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"Kokseng1"},"content":"            return (\"No tasks found in storage, starting new list\\n\");","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"Kokseng1"},"content":"        return \"\";","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"Kokseng1"},"content":"     * Prints the list of task in their string format,","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"Kokseng1"},"content":"     * each task starts on a new line.","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"Kokseng1"},"content":"     * @throws DukeException if there are no tasks in the list.","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"Kokseng1"},"content":"    public static String getListAsString() throws DukeException {","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"Kokseng1"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"Kokseng1"},"content":"            throw new DukeException(\"There are no tasks yet\");","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"Kokseng1"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"Kokseng1"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"Kokseng1"},"content":"            String str \u003d (i + 1) + \".\" + tasks.get(i).toString();","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"Kokseng1"},"content":"            stringBuilder.append(str).append(\"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"Kokseng1"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"Kokseng1"},"content":"     * Add a task to the current list.","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"Kokseng1"},"content":"     * @param task task to be added.","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"Kokseng1"},"content":"    public static String addTask(Task task) {","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"Kokseng1"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"Kokseng1"},"content":"        return (\"Got it. I\u0027ve added this task: \\n\" + task + \"\\nnow you have \"","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"Kokseng1"},"content":"                + tasks.size() + \" tasks in the list\");","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"Kokseng1"},"content":"     * Deletes a task from the list.","lastModifiedDate":"2023-09-09"},{"lineNumber":66,"author":{"gitId":"Kokseng1"},"content":"     * @param i index of task which is to be deleted.","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"Kokseng1"},"content":"     * @throws DukeException if index is out of range or there are no tasks to delete.","lastModifiedDate":"2023-09-09"},{"lineNumber":68,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":69,"author":{"gitId":"Kokseng1"},"content":"    public static String deleteTask(int i) throws DukeException {","lastModifiedDate":"2023-09-08"},{"lineNumber":70,"author":{"gitId":"Kokseng1"},"content":"        if (tasks.size() \u003c\u003d 0) {","lastModifiedDate":"2023-09-04"},{"lineNumber":71,"author":{"gitId":"Kokseng1"},"content":"            throw new DukeException(\"There are no tasks to delete\");","lastModifiedDate":"2023-09-04"},{"lineNumber":72,"author":{"gitId":"Kokseng1"},"content":"        } else if (tasks.size() \u003c i) {","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"Kokseng1"},"content":"            throw new DukeException(\"Task.Task index out of range\");","lastModifiedDate":"2023-09-04"},{"lineNumber":74,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"Kokseng1"},"content":"        Task deleted \u003d tasks.remove(i);","lastModifiedDate":"2023-09-04"},{"lineNumber":76,"author":{"gitId":"Kokseng1"},"content":"        return (\"Noted. I\u0027ve removed this task:\\n\" + deleted + \"\\nNow you have \"","lastModifiedDate":"2023-09-08"},{"lineNumber":77,"author":{"gitId":"Kokseng1"},"content":"                + tasks.size() + \" tasks in the list\");","lastModifiedDate":"2023-09-04"},{"lineNumber":78,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":79,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":80,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":81,"author":{"gitId":"Kokseng1"},"content":"     * Marks a task at an index as done.","lastModifiedDate":"2023-09-09"},{"lineNumber":82,"author":{"gitId":"Kokseng1"},"content":"     * @param i index of task to be marked as done.","lastModifiedDate":"2023-09-09"},{"lineNumber":83,"author":{"gitId":"Kokseng1"},"content":"     * @throws DukeException if task is already done.","lastModifiedDate":"2023-09-09"},{"lineNumber":84,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":85,"author":{"gitId":"Kokseng1"},"content":"    public static String markTask(int i) throws DukeException {","lastModifiedDate":"2023-09-08"},{"lineNumber":86,"author":{"gitId":"Kokseng1"},"content":"        return tasks.get(i).mark();","lastModifiedDate":"2023-09-08"},{"lineNumber":87,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":88,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":89,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":90,"author":{"gitId":"Kokseng1"},"content":"     * unmarks task at an index as undone","lastModifiedDate":"2023-09-04"},{"lineNumber":91,"author":{"gitId":"Kokseng1"},"content":"     * @param i index of task which is to be marked undone","lastModifiedDate":"2023-09-04"},{"lineNumber":92,"author":{"gitId":"Kokseng1"},"content":"     * @throws DukeException if task is still undone","lastModifiedDate":"2023-09-04"},{"lineNumber":93,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":94,"author":{"gitId":"Kokseng1"},"content":"    public static String unmarkTask(int i) throws DukeException {","lastModifiedDate":"2023-09-08"},{"lineNumber":95,"author":{"gitId":"Kokseng1"},"content":"        return tasks.get(i).unmark();","lastModifiedDate":"2023-09-08"},{"lineNumber":96,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":97,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"Kokseng1"},"content":"     * getter for task from list","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"Kokseng1"},"content":"     * @param i index of task to be gotten","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"Kokseng1"},"content":"     * @return task at index i","lastModifiedDate":"2023-09-05"},{"lineNumber":102,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":103,"author":{"gitId":"Kokseng1"},"content":"    public static Task getTask(int i) {","lastModifiedDate":"2023-09-08"},{"lineNumber":104,"author":{"gitId":"Kokseng1"},"content":"        return tasks.get(i);","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":107,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":108,"author":{"gitId":"Kokseng1"},"content":"     * find tasks containing a certain word","lastModifiedDate":"2023-09-06"},{"lineNumber":109,"author":{"gitId":"Kokseng1"},"content":"     * @param word word to look for","lastModifiedDate":"2023-09-06"},{"lineNumber":110,"author":{"gitId":"Kokseng1"},"content":"     * @return ArrayList of Tasks containing the word","lastModifiedDate":"2023-09-06"},{"lineNumber":111,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":112,"author":{"gitId":"Kokseng1"},"content":"    public static ArrayList\u003cTask\u003e find(String word) {","lastModifiedDate":"2023-09-08"},{"lineNumber":113,"author":{"gitId":"Kokseng1"},"content":"        String wordToFind \u003d word.split(\" \")[1];","lastModifiedDate":"2023-09-06"},{"lineNumber":114,"author":{"gitId":"Kokseng1"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-06"},{"lineNumber":115,"author":{"gitId":"Kokseng1"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-06"},{"lineNumber":116,"author":{"gitId":"Kokseng1"},"content":"            if (task.getDescription().contains(wordToFind)) {","lastModifiedDate":"2023-09-06"},{"lineNumber":117,"author":{"gitId":"Kokseng1"},"content":"                result.add(task);","lastModifiedDate":"2023-09-06"},{"lineNumber":118,"author":{"gitId":"Kokseng1"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":119,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":120,"author":{"gitId":"Kokseng1"},"content":"        return result;","lastModifiedDate":"2023-09-06"},{"lineNumber":121,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":122,"author":{"gitId":"Kokseng1"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"Kokseng1":122}},{"path":"src/main/java/mainDuke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kokseng1"},"content":"package mainDuke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"Kokseng1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Kokseng1"},"content":"import mainDuke.exceptions.DukeException;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"Kokseng1"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"Kokseng1"},"content":" * Responsible for printing messages and receiving commands.","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":"public class Ui {","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"     * Scanner to read input.","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"Kokseng1"},"content":"    private static final Scanner SC \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"Kokseng1"},"content":"     * Read and returns command.","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"Kokseng1"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"Kokseng1"},"content":"     * @return String of user input.","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"Kokseng1"},"content":"    public static String readCommand() {","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"Kokseng1"},"content":"        return SC.nextLine();","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"Kokseng1"},"content":"     * Prints a message to the user.","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"Kokseng1"},"content":"     * @param message String message to be printed.","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"Kokseng1"},"content":"    public static void print(String message) {","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"Kokseng1"},"content":"        System.out.println(message);","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"Kokseng1"},"content":"     * Greeting to be printed at start of program.","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"Kokseng1"},"content":"    public static void printGreeting() {","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"Kokseng1"},"content":"        String name \u003d \"Chaty\";","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"Kokseng1"},"content":"        System.out.println(\"Hello! I\u0027m \" + name + \"\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"Kokseng1"},"content":"                + \"What can I do for you?\" + \"\\n\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"Kokseng1"},"content":"     * Prints an arraylist, a new line for each object in the list.","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"Kokseng1"},"content":"     * @param list list of objects to be printed.","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"Kokseng1"},"content":"    public static void printArrayList(ArrayList list) {","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"Kokseng1"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"Kokseng1"},"content":"            Ui.print((i + 1) + \".\" + list.get(i));","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"Kokseng1"},"content":"    public static String getListAsString(ArrayList list) throws DukeException {","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"Kokseng1"},"content":"        if (list.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"Kokseng1"},"content":"            throw new DukeException(\"There are no tasks yet\");","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"Kokseng1"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"Kokseng1"},"content":"        for (Object obj : list) {","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"Kokseng1"},"content":"            stringBuilder.append(obj.toString()).append(\"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"Kokseng1"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"Kokseng1"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"Kokseng1":64}},{"path":"src/main/java/mainDuke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kokseng1"},"content":"package mainDuke.exceptions;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"Kokseng1"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":" * Represents a Duke exclusive error, not including parsing between String and Task","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"Kokseng1"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"Kokseng1"},"content":"     * public onstructor, returns a \u003ccode\u003eDukeException\u003c/code\u003e instance","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"Kokseng1"},"content":"     * @param message message that is to be displayed","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"Kokseng1"},"content":"        super(message);","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"Kokseng1":14}},{"path":"src/main/java/mainDuke/exceptions/TaskParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kokseng1"},"content":"package mainDuke.exceptions;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"Kokseng1"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":" * Represents a parsing error between String and Task","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"Kokseng1"},"content":"public class TaskParseException extends Exception {","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"Kokseng1"},"content":"     * public onstructor, returns a \u003ccode\u003eTaskParseException\u003c/code\u003e instance","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"Kokseng1"},"content":"     * @param message message that is to be displayed","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":"    public TaskParseException(String message) {","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"Kokseng1"},"content":"        super(message);","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"Kokseng1":14}},{"path":"src/main/java/mainDuke/stageStuff/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kokseng1"},"content":"package mainDuke.stageStuff;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"Kokseng1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"Kokseng1"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"Kokseng1"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"Kokseng1"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"Kokseng1"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"Kokseng1"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"Kokseng1"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"Kokseng1"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"Kokseng1"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"Kokseng1"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"Kokseng1"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"Kokseng1"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"Kokseng1"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"Kokseng1"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"Kokseng1"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"Kokseng1"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"Kokseng1"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"Kokseng1"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"Kokseng1"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"Kokseng1"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"Kokseng1"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"Kokseng1"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"Kokseng1"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"Kokseng1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"Kokseng1"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"Kokseng1"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"Kokseng1"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"Kokseng1"},"content":"        assert displayPicture !\u003d null : \"displayPicture should not be null\";","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"Kokseng1"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"Kokseng1"},"content":"    private void flip() {","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"Kokseng1"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"Kokseng1"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"Kokseng1"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"Kokseng1"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"Kokseng1"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"Kokseng1"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"Kokseng1"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"Kokseng1"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"Kokseng1"},"content":"        db.flip();","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"Kokseng1"},"content":"        return db;","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"Kokseng1"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"Kokseng1":62}},{"path":"src/main/java/mainDuke/stageStuff/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kokseng1"},"content":"package mainDuke.stageStuff;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"Kokseng1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"Kokseng1"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"Kokseng1"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"Kokseng1"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"Kokseng1"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":"import mainDuke.Duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"Kokseng1"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"Kokseng1"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"Kokseng1"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"Kokseng1"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"Kokseng1"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"Kokseng1"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"Kokseng1"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"Kokseng1"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"Kokseng1"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"Kokseng1"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"Kokseng1"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"Kokseng1"},"content":"            stage.show();","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"Kokseng1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"Kokseng1"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"Kokseng1"},"content":"}","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"Kokseng1":33}},{"path":"src/main/java/mainDuke/stageStuff/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kokseng1"},"content":"package mainDuke.stageStuff;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"Kokseng1"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"Kokseng1"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"Kokseng1"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"Kokseng1"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"Kokseng1"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":"import mainDuke.Duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"Kokseng1"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"Kokseng1"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"Kokseng1"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"Kokseng1"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"Kokseng1"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"Kokseng1"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"Kokseng1"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"Kokseng1"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"Kokseng1"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"Kokseng1"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"Kokseng1"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"Kokseng1"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"Kokseng1"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"Kokseng1"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"Kokseng1"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"Kokseng1"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"Kokseng1"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"Kokseng1"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"Kokseng1"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"Kokseng1"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"Kokseng1"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"Kokseng1"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"Kokseng1"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"Kokseng1"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"Kokseng1"},"content":"        assert input !\u003d null : \"input should not be null\";","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"Kokseng1"},"content":"        assert response !\u003d null : \"response should not be null\";","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"Kokseng1"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"Kokseng1"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"Kokseng1"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"Kokseng1"},"content":"        );","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"Kokseng1"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"Kokseng1"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"Kokseng1":55}},{"path":"src/main/java/mainDuke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kokseng1"},"content":"package mainDuke.task;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"Kokseng1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"Kokseng1"},"content":"import mainDuke.exceptions.DukeException;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"Kokseng1"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":" * Represents a Task of Deadline type, has a \u003ccode\u003eby\u003c/code\u003e that indicates when the task should be done","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":" * by. \u003ccode\u003eby\u003c/code\u003e is stored in \u003ccode\u003eLocalDate\u003c/code\u003e format.","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"Kokseng1"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"Kokseng1"},"content":"     * Indicates when the task should be done.","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"Kokseng1"},"content":"    private final LocalDate by;","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"Kokseng1"},"content":"    private final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMMM yyyy\");","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"Kokseng1"},"content":"     * Constructor, returns a \u003ccode\u003eDeadline\u003c/code\u003e instance.","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"Kokseng1"},"content":"     * @param done whether the task is done or not","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"Kokseng1"},"content":"     * @param desc description or name of the task, and when the task must be done by, in","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"Kokseng1"},"content":"     *            \"YYYY-MM-DD\" format","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"Kokseng1"},"content":"     * @throws DukeException error if incorrect format is used for by date and is unable to be parsed","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"Kokseng1"},"content":"    public Deadline(boolean done, String desc) throws DukeException {","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"Kokseng1"},"content":"        super(done, desc.substring(9, desc.indexOf(\"/by\")));","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"Kokseng1"},"content":"        String byString \u003d desc.substring(desc.indexOf(\"/by\") + 4).replace(\" \", \"\");","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"Kokseng1"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"Kokseng1"},"content":"            this.by \u003d LocalDate.parse(byString);","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"Kokseng1"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"Kokseng1"},"content":"            throw new DukeException(\"Incorrect date format! Use eg.2019-12-02\");","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"Kokseng1"},"content":"     * Getter for \u003ccode\u003eby\u003c/code\u003e.","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"Kokseng1"},"content":"     * @return LocalDate by","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"Kokseng1"},"content":"    public LocalDate getBy() {","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"Kokseng1"},"content":"        return this.by;","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"Kokseng1"},"content":"     * String representation of Deadline, including task type, if task is done, by date and task name.","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"Kokseng1"},"content":"     * @return String representation of Deadline","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"Kokseng1"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"Kokseng1"},"content":"    public String toString() {","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"Kokseng1"},"content":"        return \"[D]\" + super.toString() + \"\\n(by: \" + this.by.format(formatter) + \")\";","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"Kokseng1"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"Kokseng1":53}},{"path":"src/main/java/mainDuke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kokseng1"},"content":"package mainDuke.task;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"Kokseng1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"Kokseng1"},"content":"import mainDuke.exceptions.DukeException;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"Kokseng1"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":" * Represents a Task of Event type, has a \u003ccode\u003eto\u003c/code\u003e and \u003ccode\u003efrom\u003c/code\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":" * \u003ccode\u003eto\u003c/code\u003e and \u003ccode\u003efrom\u003c/code\u003e is stored in \u003ccode\u003eLocalDate\u003c/code\u003e format.","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"Kokseng1"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"Kokseng1"},"content":"     * When the event starts.","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"Kokseng1"},"content":"    private final LocalDate from;","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"Kokseng1"},"content":"     * When the event ends.","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"Kokseng1"},"content":"    private final LocalDate to;","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"Kokseng1"},"content":"    private final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMMM yyyy\");","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"Kokseng1"},"content":"     * Constructor for Event, returns an Event.","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"Kokseng1"},"content":"     * @param done whether the event is done or over.","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"Kokseng1"},"content":"     * @param desc name of the event, when is it from, indicated by /from and when is it to","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"Kokseng1"},"content":"     *        , indicated by \u003ccode\u003eto\u003c/code\u003e. Both must be in YYYY-MM-DD format.","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"Kokseng1"},"content":"     * @throws DukeException throws an error if the date is unable to be parsed, likely due","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"Kokseng1"},"content":"     *       to wrong format.","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"Kokseng1"},"content":"    public Event(boolean done, String desc) throws DukeException {","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"Kokseng1"},"content":"        super(done, desc.substring(6, desc.indexOf(\"/from\")));","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"Kokseng1"},"content":"        int fromIndex \u003d desc.indexOf(\"/from\");","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"Kokseng1"},"content":"        int toIndex \u003d desc.indexOf(\"/to\");","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"Kokseng1"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"Kokseng1"},"content":"            String fromString \u003d desc.substring(fromIndex + 6, toIndex).replace(\" \", \"\");","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"Kokseng1"},"content":"            String toString \u003d desc.substring(toIndex + 4).replace(\" \", \"\");","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"Kokseng1"},"content":"            this.from \u003d LocalDate.parse(fromString);","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"Kokseng1"},"content":"            this.to \u003d LocalDate.parse(toString);","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"Kokseng1"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"Kokseng1"},"content":"            throw new DukeException(\"You didn\u0027t enter the event in the correct format!\");","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"Kokseng1"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"Kokseng1"},"content":"            throw new DukeException(\"Incorrect date format! Use eg.2019-12-02\");","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"Kokseng1"},"content":"     * Getter for from date.","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"Kokseng1"},"content":"     * @return LocalDate from.","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"Kokseng1"},"content":"    public LocalDate getFrom() {","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"Kokseng1"},"content":"        return this.from;","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"Kokseng1"},"content":"     * Getter for to date.","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"Kokseng1"},"content":"     * @return LocalDate to.","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"Kokseng1"},"content":"    public LocalDate getTo() {","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"Kokseng1"},"content":"        return this.to;","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"Kokseng1"},"content":"     * String representation of Event, including task type, if task is done, from and to date, and task name.","lastModifiedDate":"2023-09-09"},{"lineNumber":66,"author":{"gitId":"Kokseng1"},"content":"     * @return String representation of Deadline.","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":68,"author":{"gitId":"Kokseng1"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":69,"author":{"gitId":"Kokseng1"},"content":"    public String toString() {","lastModifiedDate":"2023-09-04"},{"lineNumber":70,"author":{"gitId":"Kokseng1"},"content":"        return \"[E]\" + super.toString() + \"\\n(from: \" + this.from.format(formatter)","lastModifiedDate":"2023-09-10"},{"lineNumber":71,"author":{"gitId":"Kokseng1"},"content":"                + \" to: \" + this.to.format(formatter) + \")\";","lastModifiedDate":"2023-09-04"},{"lineNumber":72,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"Kokseng1"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"Kokseng1":73}},{"path":"src/main/java/mainDuke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kokseng1"},"content":"package mainDuke.task;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Kokseng1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"import mainDuke.exceptions.DukeException;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"Kokseng1"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"Kokseng1"},"content":" * Represents a Task, a supertype of Event, Deadline and Todo.","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":" * \u003ccode\u003eisDone\u003c/code\u003e shows whether the task is completed","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"Kokseng1"},"content":"public abstract class Task {","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"    private ArrayList tags;","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"Kokseng1"},"content":"     * Name of task","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"Kokseng1"},"content":"    private final String description;","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"Kokseng1"},"content":"     * Whether the task is done.","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"Kokseng1"},"content":"    private boolean isDone;","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"Kokseng1"},"content":"     * Constructor, should not be used because this is an abstract class. For initialising description","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"Kokseng1"},"content":"     * and isDone only.","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"Kokseng1"},"content":"     * @param done whether the task is done.","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"Kokseng1"},"content":"     * @param description name of task.","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"Kokseng1"},"content":"    public Task(boolean done, String description) {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Kokseng1"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"Kokseng1"},"content":"        this.tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"Kokseng1"},"content":"        String updatedDesc \u003d addAndFilterTags(description);","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"Kokseng1"},"content":"        this.description \u003d updatedDesc;","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"Kokseng1"},"content":"     * Getter for boolean isDone.","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"Kokseng1"},"content":"     * @return boolean isDone.","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"Kokseng1"},"content":"    public boolean getisDone() {","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"Kokseng1"},"content":"        return this.isDone;","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"Kokseng1"},"content":"     * Getter for descriptions","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"Kokseng1"},"content":"     * @return","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"Kokseng1"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"Kokseng1"},"content":"        return this.description;","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"Kokseng1"},"content":"     * Marks the task as done, if it is undone.","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"Kokseng1"},"content":"     * @throws DukeException if task is already done.","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"Kokseng1"},"content":"    public String mark() throws DukeException {","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"Kokseng1"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"Kokseng1"},"content":"            throw new DukeException(\"Task already done\");","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"Kokseng1"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"Kokseng1"},"content":"        return (\"Nice! I\u0027ve marked this task as done:\\n\" + toString());","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"Kokseng1"},"content":"     * Unmarks the task as undone, if it is done.","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"Kokseng1"},"content":"     * @throws DukeException if task is still undone.","lastModifiedDate":"2023-09-09"},{"lineNumber":66,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":67,"author":{"gitId":"Kokseng1"},"content":"    public String unmark() throws DukeException {","lastModifiedDate":"2023-09-08"},{"lineNumber":68,"author":{"gitId":"Kokseng1"},"content":"        if (!this.isDone) {","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"Kokseng1"},"content":"            throw new DukeException(\"Task still undone\");","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"Kokseng1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"Kokseng1"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" + toString();","lastModifiedDate":"2023-09-08"},{"lineNumber":73,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"Kokseng1"},"content":"     * Get String representation of whether the task is done.","lastModifiedDate":"2023-09-09"},{"lineNumber":76,"author":{"gitId":"Kokseng1"},"content":"     * @return \u003ccode\u003e\"X\"\u003c/code\u003e for done, \" \" for undone.","lastModifiedDate":"2023-09-09"},{"lineNumber":77,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":78,"author":{"gitId":"Kokseng1"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"Kokseng1"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":82,"author":{"gitId":"Kokseng1"},"content":"     * String representation of task, including whether the task is done.","lastModifiedDate":"2023-09-09"},{"lineNumber":83,"author":{"gitId":"Kokseng1"},"content":"     * @return string representation of task.","lastModifiedDate":"2023-09-09"},{"lineNumber":84,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":85,"author":{"gitId":"Kokseng1"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":86,"author":{"gitId":"Kokseng1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"Kokseng1"},"content":"        String tagString \u003d \"\";","lastModifiedDate":"2023-09-10"},{"lineNumber":88,"author":{"gitId":"Kokseng1"},"content":"        if (tags.size() \u003e 0) {","lastModifiedDate":"2023-09-10"},{"lineNumber":89,"author":{"gitId":"Kokseng1"},"content":"            tagString \u003d \"\\n  Tags : \";","lastModifiedDate":"2023-09-10"},{"lineNumber":90,"author":{"gitId":"Kokseng1"},"content":"            for (int i \u003d 0; i \u003c tags.size(); i++) {","lastModifiedDate":"2023-09-10"},{"lineNumber":91,"author":{"gitId":"Kokseng1"},"content":"                tagString \u003d tagString + tags.get(i) + \" \";","lastModifiedDate":"2023-09-10"},{"lineNumber":92,"author":{"gitId":"Kokseng1"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":93,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":94,"author":{"gitId":"Kokseng1"},"content":"        return (\"[\" + this.getStatusIcon() + \"] \" + this.description + tagString);","lastModifiedDate":"2023-09-10"},{"lineNumber":95,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":96,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":98,"author":{"gitId":"Kokseng1"},"content":"     * Converts hard drive\u0027s String format of a task into an actual task item.","lastModifiedDate":"2023-09-09"},{"lineNumber":99,"author":{"gitId":"Kokseng1"},"content":"     * @param text String from hard drive.","lastModifiedDate":"2023-09-09"},{"lineNumber":100,"author":{"gitId":"Kokseng1"},"content":"     * @return task item.","lastModifiedDate":"2023-09-09"},{"lineNumber":101,"author":{"gitId":"Kokseng1"},"content":"     * @throws DukeException if string cannot be recognised and cannot be parsed into a task.","lastModifiedDate":"2023-09-09"},{"lineNumber":102,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":103,"author":{"gitId":"Kokseng1"},"content":"    public static Task parse(String text) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"Kokseng1"},"content":"        String[] parts \u003d text.split(\"\\\\|\");","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"Kokseng1"},"content":"        String first \u003d parts[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"Kokseng1"},"content":"        Task task;","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"Kokseng1"},"content":"        assert parts[1].equals(\"1\") | parts[1].equals(\"0\") : \"isDone indicator should be either\"","lastModifiedDate":"2023-09-09"},{"lineNumber":108,"author":{"gitId":"Kokseng1"},"content":"                + \"1 or 0\";","lastModifiedDate":"2023-09-09"},{"lineNumber":109,"author":{"gitId":"Kokseng1"},"content":"        boolean done \u003d parts[1].equals(\"1\"); // 1 \u003d done, 0 \u003d undone","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":111,"author":{"gitId":"Kokseng1"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"Kokseng1"},"content":"        System.out.println(\"desc : \" + description);","lastModifiedDate":"2023-09-10"},{"lineNumber":113,"author":{"gitId":"Kokseng1"},"content":"        switch (first) {","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"Kokseng1"},"content":"        case \"T\":","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"Kokseng1"},"content":"            task \u003d new Todo(done, \"todo \" + description);","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"Kokseng1"},"content":"            break;","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"Kokseng1"},"content":"        case \"E\":","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"Kokseng1"},"content":"            String from \u003d parts[3];","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"Kokseng1"},"content":"            String to \u003d parts[4];","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"Kokseng1"},"content":"            task \u003d new Event(done, \"event \" + description + \" /from \" + from + \" /to \" + to);","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"Kokseng1"},"content":"            break;","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"Kokseng1"},"content":"        case \"D\":","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"Kokseng1"},"content":"            String by \u003d parts[3];","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"Kokseng1"},"content":"            task \u003d new Deadline(done, \"deadline \" + description + \" /by \" + by);","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"Kokseng1"},"content":"            break;","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":129,"author":{"gitId":"Kokseng1"},"content":"        default:","lastModifiedDate":"2023-09-03"},{"lineNumber":130,"author":{"gitId":"Kokseng1"},"content":"            throw new DukeException(\"Unable to parse from hard drive\");","lastModifiedDate":"2023-09-03"},{"lineNumber":131,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"Kokseng1"},"content":"        System.out.println(\"here : \" + task);","lastModifiedDate":"2023-09-10"},{"lineNumber":133,"author":{"gitId":"Kokseng1"},"content":"        return task;","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":136,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":137,"author":{"gitId":"Kokseng1"},"content":"     * Adds tags to task from input string, then returns the description with tags filtered out.","lastModifiedDate":"2023-09-10"},{"lineNumber":138,"author":{"gitId":"Kokseng1"},"content":"     * @param text original description.","lastModifiedDate":"2023-09-10"},{"lineNumber":139,"author":{"gitId":"Kokseng1"},"content":"     * @return description with tags filtered out.","lastModifiedDate":"2023-09-10"},{"lineNumber":140,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":141,"author":{"gitId":"Kokseng1"},"content":"    private String addAndFilterTags(String text) {","lastModifiedDate":"2023-09-10"},{"lineNumber":142,"author":{"gitId":"Kokseng1"},"content":"        String[] words \u003d text.split(\"\\\\s+\"); // Assumes words are separated by spaces","lastModifiedDate":"2023-09-10"},{"lineNumber":143,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":144,"author":{"gitId":"Kokseng1"},"content":"        StringBuilder filteredText \u003d new StringBuilder();","lastModifiedDate":"2023-09-10"},{"lineNumber":145,"author":{"gitId":"Kokseng1"},"content":"        // Check for words starting with \"#\"","lastModifiedDate":"2023-09-10"},{"lineNumber":146,"author":{"gitId":"Kokseng1"},"content":"        for (String word : words) {","lastModifiedDate":"2023-09-10"},{"lineNumber":147,"author":{"gitId":"Kokseng1"},"content":"            if (word.startsWith(\"#\")) {","lastModifiedDate":"2023-09-10"},{"lineNumber":148,"author":{"gitId":"Kokseng1"},"content":"                tags.add(word);","lastModifiedDate":"2023-09-10"},{"lineNumber":149,"author":{"gitId":"Kokseng1"},"content":"            } else {","lastModifiedDate":"2023-09-10"},{"lineNumber":150,"author":{"gitId":"Kokseng1"},"content":"                filteredText.append(word);","lastModifiedDate":"2023-09-10"},{"lineNumber":151,"author":{"gitId":"Kokseng1"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":152,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":153,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":154,"author":{"gitId":"Kokseng1"},"content":"        return filteredText.toString();","lastModifiedDate":"2023-09-10"},{"lineNumber":155,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":156,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":157,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":158,"author":{"gitId":"Kokseng1"},"content":"     * returns tags in string form.","lastModifiedDate":"2023-09-10"},{"lineNumber":159,"author":{"gitId":"Kokseng1"},"content":"     * @return tags in string form, #tag1 #tag2 etc.","lastModifiedDate":"2023-09-10"},{"lineNumber":160,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":161,"author":{"gitId":"Kokseng1"},"content":"    public String getTags() {","lastModifiedDate":"2023-09-10"},{"lineNumber":162,"author":{"gitId":"Kokseng1"},"content":"        StringBuilder text \u003d new StringBuilder();","lastModifiedDate":"2023-09-10"},{"lineNumber":163,"author":{"gitId":"Kokseng1"},"content":"        for (int i \u003d 0; i \u003c tags.size(); i++) {","lastModifiedDate":"2023-09-10"},{"lineNumber":164,"author":{"gitId":"Kokseng1"},"content":"            text.append(\" \" + tags.get(i));","lastModifiedDate":"2023-09-10"},{"lineNumber":165,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":166,"author":{"gitId":"Kokseng1"},"content":"        return text.toString();","lastModifiedDate":"2023-09-10"},{"lineNumber":167,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":168,"author":{"gitId":"Kokseng1"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Kokseng1":168}},{"path":"src/main/java/mainDuke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kokseng1"},"content":"package mainDuke.task;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"Kokseng1"},"content":"import mainDuke.exceptions.DukeException;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"Kokseng1"},"content":" * Represents a task of Todo type.","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"Kokseng1"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"Kokseng1"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":"     * constructor, returns a todo instance.","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":"     * @param done whether the task is done.","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"Kokseng1"},"content":"     * @param desc name of the task.","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"     * @throws DukeException if the user left the task field empty.","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"Kokseng1"},"content":"    public Todo(boolean done, String desc) throws DukeException {","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"Kokseng1"},"content":"        super(done, desc.substring(5));","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"Kokseng1"},"content":"        if (desc.substring(5).isEmpty()) {","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"Kokseng1"},"content":"            throw new DukeException(\"You forgot to enter the task!\");","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"Kokseng1"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"Kokseng1"},"content":"     * String representation of item, including indication of tasktype (todo).","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"Kokseng1"},"content":"     * @return string representation of todo.","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"Kokseng1"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"Kokseng1"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"Kokseng1"},"content":"    public String toString() {","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"Kokseng1"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"Kokseng1"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"Kokseng1":30}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Kokseng1"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"Kokseng1"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"Kokseng1"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"Kokseng1"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"Kokseng1"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"Kokseng1"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"Kokseng1"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"Kokseng1"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"Kokseng1":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Kokseng1"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"Kokseng1"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"Kokseng1"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"Kokseng1"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"Kokseng1"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"mainDuke.stageStuff.MainWindow\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"Kokseng1"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"Kokseng1"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"Kokseng1"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"Kokseng1"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"Kokseng1"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"Kokseng1"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"Kokseng1":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Kokseng1"},"content":"todo read book","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Kokseng1"},"content":"todo","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"Kokseng1"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"deadline return book /by 2019-12-02","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Kokseng1"},"content":"deadline return book","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Kokseng1"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"Kokseng1"},"content":"event project meeting /from 2019-12-02 /to 2019-12-03","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Kokseng1"},"content":"list","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"Kokseng1"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"delete 3","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Kokseng1"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"Kokseng1":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"Kokseng1"},"content":"del ACTUAL.TXT","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java*.java","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Kokseng1":2,"-":19}}]
