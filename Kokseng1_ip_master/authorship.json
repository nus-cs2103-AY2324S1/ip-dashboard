[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kokseng1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Kokseng1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Kokseng1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"class Deadline extends Task {","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Kokseng1"},"content":"    final LocalDate by;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Kokseng1"},"content":"    private final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMMM yyyy\");","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"Kokseng1"},"content":"    public Deadline(boolean done, String desc) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Kokseng1"},"content":"        super(done, desc.substring(9, desc.indexOf(\"/by\")));","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":"        String byString \u003d desc.substring(desc.indexOf(\"/by\") + 4).replace(\" \", \"\");","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Kokseng1"},"content":"            this.by \u003d LocalDate.parse(byString);","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":"            throw new DukeException(\"Incorrect date format! Use eg.2019-12-02\");","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"Kokseng1"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"Kokseng1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Kokseng1"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + this.by.format(formatter) + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Kokseng1"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Kokseng1":22}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"Kokseng1"},"content":"    public enum TaskType {","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"Kokseng1"},"content":"        BYE,","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"        LIST,","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"        MARK,","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Kokseng1"},"content":"        UNMARK,","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"Kokseng1"},"content":"        DELETE,","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"Kokseng1"},"content":"        EVENT,","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"Kokseng1"},"content":"        TODO,","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":"        DEADLINE","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"Kokseng1"},"content":"    public static void run() {","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"        Ui.printGreeting();","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":"        String inputString \u003d Ui.readCommand();","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"Kokseng1"},"content":"        TaskType taskType \u003d null;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"Kokseng1"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Kokseng1"},"content":"        while (taskType !\u003d TaskType.BYE) {","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"Kokseng1"},"content":"            try {","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"Kokseng1"},"content":"                taskType \u003d Parser.parseType(inputString);","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"Kokseng1"},"content":"                taskList.updateFromStorage(); //load tasks from hard drive if it is available, into taskList","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"Kokseng1"},"content":"                switch (taskType) {","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"Kokseng1"},"content":"                case LIST: {","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"Kokseng1"},"content":"                    taskList.printList();","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"Kokseng1"},"content":"                    break;","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Kokseng1"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"Kokseng1"},"content":"                case MARK: {","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"Kokseng1"},"content":"                    int tasknum \u003d Parser.getMarkIndex(inputString);","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"Kokseng1"},"content":"                    taskList.markTask(tasknum);","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"Kokseng1"},"content":"                    break;","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"Kokseng1"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"Kokseng1"},"content":"                case UNMARK: {","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"Kokseng1"},"content":"                    int tasknum \u003d Parser.getUnmarkIndex(inputString);","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"Kokseng1"},"content":"                    taskList.unmarkTask(tasknum);","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"Kokseng1"},"content":"                    break;","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"Kokseng1"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"Kokseng1"},"content":"                case DEADLINE:","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"Kokseng1"},"content":"                case TODO:","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"Kokseng1"},"content":"                case EVENT:","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"Kokseng1"},"content":"                    Task nextTask \u003d Parser.parseTask(inputString, taskType);","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"Kokseng1"},"content":"                    taskList.addTask(nextTask);","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"Kokseng1"},"content":"                    break;","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"Kokseng1"},"content":"                case DELETE: {","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"Kokseng1"},"content":"                    taskList.deleteTask(Parser.getDeleteIndex(inputString));","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"Kokseng1"},"content":"                    break;","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"Kokseng1"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"Kokseng1"},"content":"                default: {","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"Kokseng1"},"content":"                    throw new DukeException(\"I can\u0027t identify your command!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"Kokseng1"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"Kokseng1"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"Kokseng1"},"content":"                taskList.saveList();","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"Kokseng1"},"content":"                inputString \u003d Ui.readCommand();","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"Kokseng1"},"content":"                taskType \u003d Parser.parseType(inputString);","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"Kokseng1"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"Kokseng1"},"content":"                inputString \u003d Ui.readCommand();","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"Kokseng1"},"content":"                Ui.print(e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"Kokseng1"},"content":"            } catch (TaskParseException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"Kokseng1"},"content":"                Ui.print(e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"Kokseng1"},"content":"                inputString \u003d Ui.readCommand();","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"Kokseng1"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"Kokseng1"},"content":"        Ui.print(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"Kokseng1"},"content":"        Duke.run();","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Kokseng1":70,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kokseng1"},"content":"class DukeException extends Exception {","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"Kokseng1"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Kokseng1"},"content":"        super(message);","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Kokseng1":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kokseng1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Kokseng1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Kokseng1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Kokseng1"},"content":"class Event extends Task {","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"Kokseng1"},"content":"    final LocalDate from;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Kokseng1"},"content":"    final LocalDate to;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Kokseng1"},"content":"    private final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMMM yyyy\");","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":"    public Event(boolean done, String desc) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Kokseng1"},"content":"        super(done, desc.substring(6, desc.indexOf(\"/from\")));","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"        int fromIndex \u003d desc.indexOf(\"/from\");","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":"        int toIndex \u003d desc.indexOf(\"/to\");","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Kokseng1"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"Kokseng1"},"content":"            String fromString \u003d desc.substring(fromIndex + 6, toIndex).replace(\" \", \"\");","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Kokseng1"},"content":"            String toString \u003d desc.substring(toIndex + 4).replace(\" \", \"\");","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Kokseng1"},"content":"            this.from \u003d LocalDate.parse(fromString);","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Kokseng1"},"content":"            this.to \u003d LocalDate.parse(toString);","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Kokseng1"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"Kokseng1"},"content":"            throw new DukeException(\"You didn\u0027t enter the event in the correct format!\");","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"Kokseng1"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Kokseng1"},"content":"            throw new DukeException(\"Incorrect date format! Use eg.2019-12-02\");","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"Kokseng1"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"Kokseng1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"Kokseng1"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + this.from.format(formatter)","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"Kokseng1"},"content":"                + \" to: \" + this.to.format(formatter) + \")\";","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"Kokseng1"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Kokseng1":34}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kokseng1"},"content":"public class Parser {","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Kokseng1"},"content":"    public static Integer getDeleteIndex(String text) {","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"Kokseng1"},"content":"        return Integer.parseInt(text.split(\" \")[1]) - 1;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Kokseng1"},"content":"    public static Integer getMarkIndex(String text) {","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"Kokseng1"},"content":"        return Integer.parseInt(text.split(\" \")[1]) - 1;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":"    public static Integer getUnmarkIndex(String text) {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":"        return Integer.parseInt(text.split(\" \")[1]) - 1;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":"    public static Task parseTask(String text, Duke.TaskType type) throws DukeException, TaskParseException {","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"Kokseng1"},"content":"        switch (type) {","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"Kokseng1"},"content":"        case TODO: {","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"Kokseng1"},"content":"            return new Todo(false, text);","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"Kokseng1"},"content":"        case DEADLINE: {","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"Kokseng1"},"content":"            if (!text.contains(\"/by\") || text.length() \u003c\u003d text.indexOf(\"/by\") + 4) {","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"Kokseng1"},"content":"                throw new DukeException(\"You forgot to specify when the deadline ends!\");","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"Kokseng1"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"Kokseng1"},"content":"            return new Deadline(false, text);","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"Kokseng1"},"content":"        case EVENT: {","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"Kokseng1"},"content":"            if (!text.contains(\"/from\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"Kokseng1"},"content":"                throw new DukeException(\"You forgot to specify when the event starts!\");","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"Kokseng1"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"Kokseng1"},"content":"            if (!text.contains(\"/to\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"Kokseng1"},"content":"                throw new DukeException(\"You forgot to specify when the event ends!\");","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"Kokseng1"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"Kokseng1"},"content":"            return new Event(false, text);","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"Kokseng1"},"content":"        default: {","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"Kokseng1"},"content":"            throw new DukeException(\"Not a task!\");","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"Kokseng1"},"content":"    public static Duke.TaskType parseType(String text) throws DukeException, TaskParseException {","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"Kokseng1"},"content":"        String[] textParts \u003d text.split(\" \");","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"Kokseng1"},"content":"        String firstWord \u003d textParts[0].toLowerCase();","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"Kokseng1"},"content":"        if (textParts.length \u003c\u003d 1 \u0026\u0026 !firstWord.equals(\"list\") \u0026\u0026 !firstWord.equals(\"bye\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"Kokseng1"},"content":"            throw new DukeException(\"You forgot to write the task\");","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"Kokseng1"},"content":"        switch (textParts[0].toLowerCase()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"Kokseng1"},"content":"        case \"list\": {","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"Kokseng1"},"content":"            return Duke.TaskType.LIST;","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"Kokseng1"},"content":"        case \"mark\": {","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"Kokseng1"},"content":"            return Duke.TaskType.MARK;","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"Kokseng1"},"content":"        case \"unmark\": {","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"Kokseng1"},"content":"            return Duke.TaskType.UNMARK;","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"Kokseng1"},"content":"        case \"deadline\": {","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"Kokseng1"},"content":"            return Duke.TaskType.DEADLINE;","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"Kokseng1"},"content":"        case \"event\": {","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"Kokseng1"},"content":"            return Duke.TaskType.EVENT;","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"Kokseng1"},"content":"        case \"todo\": {","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"Kokseng1"},"content":"            return Duke.TaskType.TODO;","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"Kokseng1"},"content":"        case \"delete\": {","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"Kokseng1"},"content":"            return Duke.TaskType.DELETE;","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"Kokseng1"},"content":"        case \"bye\": {","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"Kokseng1"},"content":"            return Duke.TaskType.BYE;","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"Kokseng1"},"content":"        default: {","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"Kokseng1"},"content":"            throw new TaskParseException(\"Not a TaskType\");","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"Kokseng1"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"Kokseng1":85}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kokseng1"},"content":"import java.io.File;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Kokseng1"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"Kokseng1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Kokseng1"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"Kokseng1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Kokseng1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Kokseng1"},"content":"import java.util.List;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"Kokseng1"},"content":"class Storage {","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"    static final String FILE_NAME \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Kokseng1"},"content":"    static void checkFileExists() {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Kokseng1"},"content":"        Path path \u003d Paths.get(FILE_NAME);","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"Kokseng1"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Kokseng1"},"content":"            if (!Files.exists(path)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Kokseng1"},"content":"                Ui.print(\"data file not found, creating a new one\");","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"Kokseng1"},"content":"                Path dirPath \u003d Paths.get(\"./data\");","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Kokseng1"},"content":"                Files.createDirectories(dirPath);","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Kokseng1"},"content":"                File file \u003d new File(FILE_NAME);","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"Kokseng1"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Kokseng1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"Kokseng1"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"Kokseng1"},"content":"    public static void saveTask(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"Kokseng1"},"content":"        checkFileExists();","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"Kokseng1"},"content":"        try (FileWriter fileWriter \u003d new FileWriter(FILE_NAME)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"Kokseng1"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Kokseng1"},"content":"                String text \u003d \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"Kokseng1"},"content":"                if (task instanceof Todo) {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"Kokseng1"},"content":"                    String done \u003d task.isDone","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"Kokseng1"},"content":"                            ? \"1\"","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Kokseng1"},"content":"                            : \"0\";","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"Kokseng1"},"content":"                    String desc \u003d task.description;","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"Kokseng1"},"content":"                    text \u003d \"T|\" + done + \"|\" + desc;","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"Kokseng1"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"Kokseng1"},"content":"                    String done \u003d task.isDone","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"Kokseng1"},"content":"                            ? \"1\"","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"Kokseng1"},"content":"                            : \"0\";","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"Kokseng1"},"content":"                    String desc \u003d task.description;","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"Kokseng1"},"content":"                    LocalDate from \u003d ((Event) task).from;","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"Kokseng1"},"content":"                    LocalDate to \u003d ((Event) task).to;","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"Kokseng1"},"content":"                    text \u003d \"E|\" + done + \"|\" + desc + \"|\" + from + \"|\" + to;","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"Kokseng1"},"content":"                } else if (task instanceof Deadline) {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"Kokseng1"},"content":"                    String done \u003d task.isDone","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"Kokseng1"},"content":"                            ? \"1\"","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"Kokseng1"},"content":"                            : \"0\";","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"Kokseng1"},"content":"                    String desc \u003d task.description;","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"Kokseng1"},"content":"                    LocalDate by \u003d ((Deadline) task).by;","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"Kokseng1"},"content":"                    text \u003d \"D|\" + done + \"|\" + desc + \"|\" + by;","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"Kokseng1"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"Kokseng1"},"content":"                fileWriter.write(text + \"\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"Kokseng1"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"Kokseng1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"Kokseng1"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"Kokseng1"},"content":"    public static ArrayList\u003cTask\u003e loadTasks() throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"Kokseng1"},"content":"        checkFileExists();","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"Kokseng1"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"Kokseng1"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"Kokseng1"},"content":"            Scanner sc \u003d new Scanner(new File(FILE_NAME));","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"Kokseng1"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"Kokseng1"},"content":"                String next \u003d sc.nextLine();","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"Kokseng1"},"content":"                Task nextTask \u003d Task.parse(next);","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"Kokseng1"},"content":"                tasks.add(nextTask);","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"Kokseng1"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"Kokseng1"},"content":"            return tasks;","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"Kokseng1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"Kokseng1"},"content":"            throw new DukeException(\"There are no tasks\");","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"Kokseng1"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Kokseng1":79}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kokseng1"},"content":"class Task {","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"Kokseng1"},"content":"    protected final String description;","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Kokseng1"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"    public Task(boolean done, String description) {","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Kokseng1"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"Kokseng1"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":"    public void mark() throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"Kokseng1"},"content":"            throw new DukeException(\"Task already done\");","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"Kokseng1"},"content":"        Ui.print(\"Nice! I\u0027ve marked this task as done:\\n\" + toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"Kokseng1"},"content":"    public void unmark() throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"Kokseng1"},"content":"        if (!this.isDone) {","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Kokseng1"},"content":"            throw new DukeException(\"Task still undone\");","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Kokseng1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"Kokseng1"},"content":"        Ui.print(\"OK, I\u0027ve marked this task as not done yet:\\n\" + toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"Kokseng1"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"Kokseng1"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"Kokseng1"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"Kokseng1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"Kokseng1"},"content":"        return (\"[\" + this.getStatusIcon() + \"] \" + this.description);","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"Kokseng1"},"content":"    public static Task parse(String text) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"Kokseng1"},"content":"        String[] parts \u003d text.split(\"\\\\|\");","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Kokseng1"},"content":"        String first \u003d parts[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"Kokseng1"},"content":"        Task task;","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"Kokseng1"},"content":"        boolean done \u003d parts[1].equals(\"1\"); // 1 \u003d done, 0 \u003d undone","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"Kokseng1"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"Kokseng1"},"content":"        switch (first) {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"Kokseng1"},"content":"        case \"T\":","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"Kokseng1"},"content":"            task \u003d new Todo(done, \"todo \" + description);","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"Kokseng1"},"content":"            break;","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"Kokseng1"},"content":"        case \"E\":","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"Kokseng1"},"content":"            String from \u003d parts[3];","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"Kokseng1"},"content":"            String to \u003d parts[4];","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"Kokseng1"},"content":"            task \u003d new Event(done, \"event \" + description + \" /from \" + from + \" /to \" + to);","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"Kokseng1"},"content":"            break;","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"Kokseng1"},"content":"        case \"D\":","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"Kokseng1"},"content":"            String by \u003d parts[3];","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"Kokseng1"},"content":"            task \u003d new Deadline(done, \"deadline \" + description + \" /by \" + by);","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"Kokseng1"},"content":"            break;","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"Kokseng1"},"content":"        default:","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"Kokseng1"},"content":"            throw new DukeException(\"Unable to parse from hard drive\");","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"Kokseng1"},"content":"        return task;","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"Kokseng1"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Kokseng1":62}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kokseng1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"Kokseng1"},"content":"public class TaskList {","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Kokseng1"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"Kokseng1"},"content":"    public void saveList() {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":"        Storage.saveTask(tasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"    public void updateFromStorage() {","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"Kokseng1"},"content":"            tasks \u003d Storage.loadTasks();","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"Kokseng1"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"Kokseng1"},"content":"            Ui.print(\"No tasks found in storage, starting new list\");","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"Kokseng1"},"content":"    public void printList() {","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"Kokseng1"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"Kokseng1"},"content":"            System.out.println((i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"Kokseng1"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"Kokseng1"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"Kokseng1"},"content":"        Ui.print(\"Got it. I\u0027ve added this task: \\n\" + task + \"\\nnow you have \"","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"Kokseng1"},"content":"                + tasks.size() + \" tasks in the list\");","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"Kokseng1"},"content":"    public void deleteTask(int i) throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"Kokseng1"},"content":"        if (tasks.size() \u003c\u003d 0) {","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"Kokseng1"},"content":"            throw new DukeException(\"There are no tasks to delete\");","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"Kokseng1"},"content":"        } else if (tasks.size() \u003c i) {","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"Kokseng1"},"content":"            throw new DukeException(\"Task index out of range\");","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"Kokseng1"},"content":"        Task deleted \u003d tasks.remove(i);","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"Kokseng1"},"content":"        Ui.print(\"Noted. I\u0027ve removed this task:\\n\" + deleted + \"\\nNow you have \"","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"Kokseng1"},"content":"                + tasks.size() + \" tasks in the list\");","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"Kokseng1"},"content":"    public void markTask(int i) throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"Kokseng1"},"content":"        tasks.get(i).mark();","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"Kokseng1"},"content":"    public void unmarkTask(int i) throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"Kokseng1"},"content":"        tasks.get(i).unmark();","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"Kokseng1"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"Kokseng1":51}},{"path":"src/main/java/TaskParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kokseng1"},"content":"public class TaskParseException extends Exception {","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Kokseng1"},"content":"    public TaskParseException(String message) {","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"Kokseng1"},"content":"        super(message);","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Kokseng1":5}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kokseng1"},"content":"class Todo extends Task {","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"Kokseng1"},"content":"    public Todo(boolean done, String desc) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Kokseng1"},"content":"        super(done, desc.substring(5));","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"        if (desc.substring(5).isEmpty()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"            throw new DukeException(\"You forgot to enter the task!\");","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Kokseng1"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"Kokseng1"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Kokseng1":13}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kokseng1"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"Kokseng1"},"content":"public class Ui {","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"    private static final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Kokseng1"},"content":"    public static String readCommand() {","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"Kokseng1"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":"    public static void print(String message) {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":"        System.out.println(message);","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":"    public static void printGreeting() {","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"Kokseng1"},"content":"        String name \u003d \"Chaty\";","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"Kokseng1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"Kokseng1"},"content":"        System.out.println(\"Hello! I\u0027m \" + name + \"\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"Kokseng1"},"content":"                + \"What can I do for you?\" + \"\\n\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"Kokseng1"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"Kokseng1"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"Kokseng1":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Kokseng1"},"content":"todo read book","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Kokseng1"},"content":"todo","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"Kokseng1"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"Kokseng1"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"Kokseng1"},"content":"deadline return book /by 2019-12-02","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Kokseng1"},"content":"deadline return book","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Kokseng1"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"Kokseng1"},"content":"event project meeting /from 2019-12-02 /to 2019-12-03","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Kokseng1"},"content":"list","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"Kokseng1"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Kokseng1"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"Kokseng1"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"Kokseng1"},"content":"delete 3","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"Kokseng1"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Kokseng1"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"Kokseng1":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"Kokseng1"},"content":"del ACTUAL.TXT","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Kokseng1":1,"-":20}}]
