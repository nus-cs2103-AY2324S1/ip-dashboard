[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"eyelessrhyme7"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"eyelessrhyme7"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"eyelessrhyme7"},"content":"checkstyle {","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"eyelessrhyme7"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"eyelessrhyme7"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"eyelessrhyme7"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"eyelessrhyme7"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"eyelessrhyme7"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"eyelessrhyme7"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"eyelessrhyme7"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"eyelessrhyme7"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"eyelessrhyme7"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"eyelessrhyme7"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"eyelessrhyme7"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"eyelessrhyme7"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"eyelessrhyme7"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"eyelessrhyme7"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"eyelessrhyme7"},"content":"//    mainClassName \u003d \u0027duke.Duke\u0027","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"eyelessrhyme7"},"content":"    mainClassName \u003d \u0027duke.Launcher\u0027","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"eyelessrhyme7"},"content":"    archiveBaseName \u003d \"duke-v03-GUI\"","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"eyelessrhyme7"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"eyelessrhyme7":23,"-":40}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"eyelessrhyme7"},"content":"T|1|read book","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"eyelessrhyme7"},"content":"D|0|return book|2023-09-06 18:30:00","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"eyelessrhyme7"},"content":"D|0|submit quiz|2023-09-08 23:59:00","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"eyelessrhyme7"},"content":"D|0|return book|2023-10-02 23:59:00","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"eyelessrhyme7"},"content":"E|0|project meeting|2023-09-13 18:30:00|2023-09-13 20:30:00","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"eyelessrhyme7"},"content":"T|1|join sports club","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"eyelessrhyme7":6}},{"path":"data/outputDuke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"eyelessrhyme7"},"content":"T|1|read book","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"eyelessrhyme7"},"content":"D|0|return book|2023-09-06T18:30","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"eyelessrhyme7"},"content":"D|0|submit quiz|2023-09-08T23:59","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"eyelessrhyme7"},"content":"D|0|return book|2023-10-02T23:59","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"eyelessrhyme7"},"content":"E|0|project meeting|2023-09-13T18:30","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"eyelessrhyme7"},"content":"T|1|join sports club","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"eyelessrhyme7":6}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"eyelessrhyme7"},"content":"# Capt. Price Bot - User Guide","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"eyelessrhyme7"},"content":"*Created by: Raman Gupta*","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"eyelessrhyme7"},"content":"![Capt. Price Ready for Mission](https://www.greenmangaming.com/blog/wp-content/uploads/2019/10/Captain-Price.jpg)","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"eyelessrhyme7"},"content":"## Introduction","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"eyelessrhyme7"},"content":"Welcome to Capt. Price Bot - Your Command Line Task Management Companion! Seamlessly manage, organize, and plan your tasks through the power of commands. Let Capt. Price assist you in your journey towards peak productivity.","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"eyelessrhyme7"},"content":"_\"On your command, Sergeant! (literally)\"_","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"eyelessrhyme7"},"content":"## Getting Started","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"eyelessrhyme7"},"content":"1. Go to GitHub Releases, and download the JAR file onto your computer.","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"eyelessrhyme7"},"content":"2. Run the JAR file titled `priceBot-v1.0-final`.","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"eyelessrhyme7"},"content":"3. Follow the instructions below to harness the full potential of Capt. Price!","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"eyelessrhyme7"},"content":"## Features Overview","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"eyelessrhyme7"},"content":"### Create Tasks","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"eyelessrhyme7"},"content":"- **Todo Tasks:** Create todo tasks with descriptions to keep track of things to do.","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"eyelessrhyme7"},"content":"- **Deadline Tasks:** Manage and prioritize with deadline tasks that include descriptions and due dates.","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"eyelessrhyme7"},"content":"- **Event Tasks:** Keep your calendar organized with event tasks including descriptions, start, and end times.","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"eyelessrhyme7"},"content":"### List Tasks the Way You Want","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"eyelessrhyme7"},"content":"- List all tasks to get a comprehensive overview of your to-do list.","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"eyelessrhyme7"},"content":"- List tasks due within one week or month to stay on top of your schedule.","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":32,"author":{"gitId":"eyelessrhyme7"},"content":"### Delete and Mark/Unmark Tasks","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"eyelessrhyme7"},"content":"- Easily delete tasks when they\u0027re no longer relevant, and edit your task list as needed.","lastModifiedDate":"2023-09-22"},{"lineNumber":35,"author":{"gitId":"eyelessrhyme7"},"content":"- Mark tasks as done to keep track of your progress and accomplishments.","lastModifiedDate":"2023-09-22"},{"lineNumber":36,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"eyelessrhyme7"},"content":"### Tag Tasks","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":39,"author":{"gitId":"eyelessrhyme7"},"content":"- Categorize tasks with tags like #sport or #fun for better organization and easy retrieval.","lastModifiedDate":"2023-09-22"},{"lineNumber":40,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"eyelessrhyme7"},"content":"### Find Tasks","lastModifiedDate":"2023-09-22"},{"lineNumber":42,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":43,"author":{"gitId":"eyelessrhyme7"},"content":"- Search for tasks using keywords to quickly locate what you need within your task list.","lastModifiedDate":"2023-09-22"},{"lineNumber":44,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":45,"author":{"gitId":"eyelessrhyme7"},"content":"### Set Parent Tasks or Dependencies","lastModifiedDate":"2023-09-22"},{"lineNumber":46,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":47,"author":{"gitId":"eyelessrhyme7"},"content":"- Define task dependencies to manage the order in which tasks should be completed or to signify prerequisites.","lastModifiedDate":"2023-09-22"},{"lineNumber":48,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":49,"author":{"gitId":"eyelessrhyme7"},"content":"### Get Motivated","lastModifiedDate":"2023-09-22"},{"lineNumber":50,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":51,"author":{"gitId":"eyelessrhyme7"},"content":"- Let Capt. Price inspire you with randomized motivational quotes to help you power through your tasks!","lastModifiedDate":"2023-09-22"},{"lineNumber":52,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":53,"author":{"gitId":"eyelessrhyme7"},"content":"## Commands","lastModifiedDate":"2023-09-22"},{"lineNumber":54,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":55,"author":{"gitId":"eyelessrhyme7"},"content":"### 1. `todo`","lastModifiedDate":"2023-09-22"},{"lineNumber":56,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":57,"author":{"gitId":"eyelessrhyme7"},"content":"Create a todo task with a description. Todo tasks are for general tasks that don\u0027t have specific deadlines.","lastModifiedDate":"2023-09-22"},{"lineNumber":58,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":59,"author":{"gitId":"eyelessrhyme7"},"content":"**Entering**","lastModifiedDate":"2023-09-22"},{"lineNumber":60,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":61,"author":{"gitId":"eyelessrhyme7"},"content":"```markdown","lastModifiedDate":"2023-09-22"},{"lineNumber":62,"author":{"gitId":"eyelessrhyme7"},"content":"todo quiz","lastModifiedDate":"2023-09-22"},{"lineNumber":63,"author":{"gitId":"eyelessrhyme7"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":64,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":65,"author":{"gitId":"eyelessrhyme7"},"content":"**would return something like:**","lastModifiedDate":"2023-09-22"},{"lineNumber":66,"author":{"gitId":"eyelessrhyme7"},"content":"```markdown","lastModifiedDate":"2023-09-22"},{"lineNumber":67,"author":{"gitId":"eyelessrhyme7"},"content":"added: [T][ ] quiz  | DoAfter : NONE |","lastModifiedDate":"2023-09-22"},{"lineNumber":68,"author":{"gitId":"eyelessrhyme7"},"content":"Now you have 7 tasks in the list.","lastModifiedDate":"2023-09-22"},{"lineNumber":69,"author":{"gitId":"eyelessrhyme7"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":70,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":71,"author":{"gitId":"eyelessrhyme7"},"content":"### 2. `deadline`","lastModifiedDate":"2023-09-22"},{"lineNumber":72,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":73,"author":{"gitId":"eyelessrhyme7"},"content":"Create a deadline task with a description and a due date. Deadline tasks help you manage tasks with specific deadlines.","lastModifiedDate":"2023-09-22"},{"lineNumber":74,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":75,"author":{"gitId":"eyelessrhyme7"},"content":"**Entering**","lastModifiedDate":"2023-09-22"},{"lineNumber":76,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":77,"author":{"gitId":"eyelessrhyme7"},"content":"```markdown","lastModifiedDate":"2023-09-22"},{"lineNumber":78,"author":{"gitId":"eyelessrhyme7"},"content":"deadline geo quiz /by 2023-10-04 16:00:00","lastModifiedDate":"2023-09-22"},{"lineNumber":79,"author":{"gitId":"eyelessrhyme7"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":80,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":81,"author":{"gitId":"eyelessrhyme7"},"content":"**would return something like:**","lastModifiedDate":"2023-09-22"},{"lineNumber":82,"author":{"gitId":"eyelessrhyme7"},"content":"```markdown","lastModifiedDate":"2023-09-22"},{"lineNumber":83,"author":{"gitId":"eyelessrhyme7"},"content":"added: [D][ ] geo quiz  | DoAfter : NONE |  (by: 16:00, 04 October 2023)","lastModifiedDate":"2023-09-22"},{"lineNumber":84,"author":{"gitId":"eyelessrhyme7"},"content":"Now you have 8 tasks in the list.","lastModifiedDate":"2023-09-22"},{"lineNumber":85,"author":{"gitId":"eyelessrhyme7"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":86,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":87,"author":{"gitId":"eyelessrhyme7"},"content":"### 3. `event`","lastModifiedDate":"2023-09-22"},{"lineNumber":88,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":89,"author":{"gitId":"eyelessrhyme7"},"content":"Create an event task with a description, start time, and end time. Event tasks are ideal for managing calendar events.","lastModifiedDate":"2023-09-22"},{"lineNumber":90,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":91,"author":{"gitId":"eyelessrhyme7"},"content":"**Entering**","lastModifiedDate":"2023-09-22"},{"lineNumber":92,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":93,"author":{"gitId":"eyelessrhyme7"},"content":"```markdown","lastModifiedDate":"2023-09-22"},{"lineNumber":94,"author":{"gitId":"eyelessrhyme7"},"content":"event team meeting /from 2023-10-04 16:00:00 /to 2023-10-04 17:00:00","lastModifiedDate":"2023-09-22"},{"lineNumber":95,"author":{"gitId":"eyelessrhyme7"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":96,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":97,"author":{"gitId":"eyelessrhyme7"},"content":"**would return something like:**","lastModifiedDate":"2023-09-22"},{"lineNumber":98,"author":{"gitId":"eyelessrhyme7"},"content":"```markdown","lastModifiedDate":"2023-09-22"},{"lineNumber":99,"author":{"gitId":"eyelessrhyme7"},"content":"added: [E][ ] team meeting  | DoAfter : NONE |  (from: 16:00, 04 October 2023 to: 17:00, 04 October 2023)","lastModifiedDate":"2023-09-22"},{"lineNumber":100,"author":{"gitId":"eyelessrhyme7"},"content":"Now you have 9 tasks in the list.","lastModifiedDate":"2023-09-22"},{"lineNumber":101,"author":{"gitId":"eyelessrhyme7"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":102,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":103,"author":{"gitId":"eyelessrhyme7"},"content":"### 4. `list`","lastModifiedDate":"2023-09-22"},{"lineNumber":104,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":105,"author":{"gitId":"eyelessrhyme7"},"content":"List all tasks in your task list for a comprehensive overview.","lastModifiedDate":"2023-09-22"},{"lineNumber":106,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":107,"author":{"gitId":"eyelessrhyme7"},"content":"**Entering**","lastModifiedDate":"2023-09-22"},{"lineNumber":108,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":109,"author":{"gitId":"eyelessrhyme7"},"content":"```markdown","lastModifiedDate":"2023-09-22"},{"lineNumber":110,"author":{"gitId":"eyelessrhyme7"},"content":"list","lastModifiedDate":"2023-09-22"},{"lineNumber":111,"author":{"gitId":"eyelessrhyme7"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":112,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":113,"author":{"gitId":"eyelessrhyme7"},"content":"**would return something like:**","lastModifiedDate":"2023-09-22"},{"lineNumber":114,"author":{"gitId":"eyelessrhyme7"},"content":"```markdown","lastModifiedDate":"2023-09-22"},{"lineNumber":115,"author":{"gitId":"eyelessrhyme7"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-09-22"},{"lineNumber":116,"author":{"gitId":"eyelessrhyme7"},"content":"1. [T][X] read book  | DoAfter : NONE |","lastModifiedDate":"2023-09-22"},{"lineNumber":117,"author":{"gitId":"eyelessrhyme7"},"content":"2. [D][ ] return book  | DoAfter : NONE |  (by: 18:30, 06 September 2023)","lastModifiedDate":"2023-09-22"},{"lineNumber":118,"author":{"gitId":"eyelessrhyme7"},"content":"3. [D][ ] submit quiz  | DoAfter : NONE |  (by: 23:59, 08 September 2023)","lastModifiedDate":"2023-09-22"},{"lineNumber":119,"author":{"gitId":"eyelessrhyme7"},"content":"4. [D][ ] return book  | DoAfter : NONE |  (by: 23:59, 02 October 2023)","lastModifiedDate":"2023-09-22"},{"lineNumber":120,"author":{"gitId":"eyelessrhyme7"},"content":"5. [E][ ] project meeting  | DoAfter : NONE |  (from: 18:30, 13 September 2023 to: 20:30, 13 September 2023)","lastModifiedDate":"2023-09-22"},{"lineNumber":121,"author":{"gitId":"eyelessrhyme7"},"content":"6. [T][X] join sports club  | DoAfter : NONE |","lastModifiedDate":"2023-09-22"},{"lineNumber":122,"author":{"gitId":"eyelessrhyme7"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":123,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":124,"author":{"gitId":"eyelessrhyme7"},"content":"### 5. `list week`","lastModifiedDate":"2023-09-22"},{"lineNumber":125,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":126,"author":{"gitId":"eyelessrhyme7"},"content":"List tasks due within one week from the current date.","lastModifiedDate":"2023-09-22"},{"lineNumber":127,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":128,"author":{"gitId":"eyelessrhyme7"},"content":"**Entering**","lastModifiedDate":"2023-09-22"},{"lineNumber":129,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":130,"author":{"gitId":"eyelessrhyme7"},"content":"```markdown","lastModifiedDate":"2023-09-22"},{"lineNumber":131,"author":{"gitId":"eyelessrhyme7"},"content":"list week","lastModifiedDate":"2023-09-22"},{"lineNumber":132,"author":{"gitId":"eyelessrhyme7"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":133,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":134,"author":{"gitId":"eyelessrhyme7"},"content":"**would return something like:**","lastModifiedDate":"2023-09-22"},{"lineNumber":135,"author":{"gitId":"eyelessrhyme7"},"content":"```markdown","lastModifiedDate":"2023-09-22"},{"lineNumber":136,"author":{"gitId":"eyelessrhyme7"},"content":"Here are the tasks in your list that start/due within one week:","lastModifiedDate":"2023-09-22"},{"lineNumber":137,"author":{"gitId":"eyelessrhyme7"},"content":"1. [T][X] read book  | DoAfter : NONE |","lastModifiedDate":"2023-09-22"},{"lineNumber":138,"author":{"gitId":"eyelessrhyme7"},"content":"2. [T][X] join sports club  | DoAfter : NONE |","lastModifiedDate":"2023-09-22"},{"lineNumber":139,"author":{"gitId":"eyelessrhyme7"},"content":"3. [T][ ] quiz  | DoAfter : NONE |","lastModifiedDate":"2023-09-22"},{"lineNumber":140,"author":{"gitId":"eyelessrhyme7"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":141,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":142,"author":{"gitId":"eyelessrhyme7"},"content":"### 6. `list month`","lastModifiedDate":"2023-09-22"},{"lineNumber":143,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":144,"author":{"gitId":"eyelessrhyme7"},"content":"List tasks due within one month from the current date.","lastModifiedDate":"2023-09-22"},{"lineNumber":145,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":146,"author":{"gitId":"eyelessrhyme7"},"content":"**Entering**","lastModifiedDate":"2023-09-22"},{"lineNumber":147,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":148,"author":{"gitId":"eyelessrhyme7"},"content":"```markdown","lastModifiedDate":"2023-09-22"},{"lineNumber":149,"author":{"gitId":"eyelessrhyme7"},"content":"list month","lastModifiedDate":"2023-09-22"},{"lineNumber":150,"author":{"gitId":"eyelessrhyme7"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":151,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":152,"author":{"gitId":"eyelessrhyme7"},"content":"**would return something like:**","lastModifiedDate":"2023-09-22"},{"lineNumber":153,"author":{"gitId":"eyelessrhyme7"},"content":"```markdown","lastModifiedDate":"2023-09-22"},{"lineNumber":154,"author":{"gitId":"eyelessrhyme7"},"content":"Here are the tasks in your list that start/due within one month:","lastModifiedDate":"2023-09-22"},{"lineNumber":155,"author":{"gitId":"eyelessrhyme7"},"content":"1. [T][X] read book  | DoAfter : NONE |","lastModifiedDate":"2023-09-22"},{"lineNumber":156,"author":{"gitId":"eyelessrhyme7"},"content":"2. [D][ ] return book  | DoAfter : NONE |  (by: 23:59, 02 October 2023)","lastModifiedDate":"2023-09-22"},{"lineNumber":157,"author":{"gitId":"eyelessrhyme7"},"content":"3. [T][X] join sports club  | DoAfter : NONE |","lastModifiedDate":"2023-09-22"},{"lineNumber":158,"author":{"gitId":"eyelessrhyme7"},"content":"4. [T][ ] quiz  | DoAfter : NONE |","lastModifiedDate":"2023-09-22"},{"lineNumber":159,"author":{"gitId":"eyelessrhyme7"},"content":"5. [D][ ] geo quiz  | DoAfter : NONE |  (by: 16:00, 04 October 2023)","lastModifiedDate":"2023-09-22"},{"lineNumber":160,"author":{"gitId":"eyelessrhyme7"},"content":"6. [E][ ] team meeting  | DoAfter : NONE |  (from: 16:00, 04 October 2023 to: 17:00, 04 October 2023)","lastModifiedDate":"2023-09-22"},{"lineNumber":161,"author":{"gitId":"eyelessrhyme7"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":162,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":163,"author":{"gitId":"eyelessrhyme7"},"content":"### 7. `delete`","lastModifiedDate":"2023-09-22"},{"lineNumber":164,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":165,"author":{"gitId":"eyelessrhyme7"},"content":"Delete a task from your task list by specifying its index.","lastModifiedDate":"2023-09-22"},{"lineNumber":166,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":167,"author":{"gitId":"eyelessrhyme7"},"content":"**Entering**","lastModifiedDate":"2023-09-22"},{"lineNumber":168,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":169,"author":{"gitId":"eyelessrhyme7"},"content":"```markdown","lastModifiedDate":"2023-09-22"},{"lineNumber":170,"author":{"gitId":"eyelessrhyme7"},"content":"delete 4","lastModifiedDate":"2023-09-22"},{"lineNumber":171,"author":{"gitId":"eyelessrhyme7"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":172,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":173,"author":{"gitId":"eyelessrhyme7"},"content":"**would return something like:**","lastModifiedDate":"2023-09-22"},{"lineNumber":174,"author":{"gitId":"eyelessrhyme7"},"content":"```markdown","lastModifiedDate":"2023-09-22"},{"lineNumber":175,"author":{"gitId":"eyelessrhyme7"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2023-09-22"},{"lineNumber":176,"author":{"gitId":"eyelessrhyme7"},"content":"[D][ ] return book  | DoAfter : NONE |  (by: 23:59, 02 October 2023)","lastModifiedDate":"2023-09-22"},{"lineNumber":177,"author":{"gitId":"eyelessrhyme7"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":178,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":179,"author":{"gitId":"eyelessrhyme7"},"content":"### 8. `mark`","lastModifiedDate":"2023-09-22"},{"lineNumber":180,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":181,"author":{"gitId":"eyelessrhyme7"},"content":"Mark a task as done by specifying its index. This helps you track completed tasks.","lastModifiedDate":"2023-09-22"},{"lineNumber":182,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":183,"author":{"gitId":"eyelessrhyme7"},"content":"**Entering**","lastModifiedDate":"2023-09-22"},{"lineNumber":184,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":185,"author":{"gitId":"eyelessrhyme7"},"content":"```markdown","lastModifiedDate":"2023-09-22"},{"lineNumber":186,"author":{"gitId":"eyelessrhyme7"},"content":"mark 3","lastModifiedDate":"2023-09-22"},{"lineNumber":187,"author":{"gitId":"eyelessrhyme7"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":188,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":189,"author":{"gitId":"eyelessrhyme7"},"content":"**would return something like:**","lastModifiedDate":"2023-09-22"},{"lineNumber":190,"author":{"gitId":"eyelessrhyme7"},"content":"```markdown","lastModifiedDate":"2023-09-22"},{"lineNumber":191,"author":{"gitId":"eyelessrhyme7"},"content":"Nice! I\u0027ve marked this task as done: ","lastModifiedDate":"2023-09-22"},{"lineNumber":192,"author":{"gitId":"eyelessrhyme7"},"content":"[D][X] submit quiz  | DoAfter : NONE |  (by: 23:59, 08 September 2023)","lastModifiedDate":"2023-09-22"},{"lineNumber":193,"author":{"gitId":"eyelessrhyme7"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":194,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":195,"author":{"gitId":"eyelessrhyme7"},"content":"### 9. `unmark`","lastModifiedDate":"2023-09-22"},{"lineNumber":196,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":197,"author":{"gitId":"eyelessrhyme7"},"content":"Unmark a task as done by specifying its index. Use this if you want to revisit/revise a completed task.","lastModifiedDate":"2023-09-22"},{"lineNumber":198,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":199,"author":{"gitId":"eyelessrhyme7"},"content":"**Entering**","lastModifiedDate":"2023-09-22"},{"lineNumber":200,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":201,"author":{"gitId":"eyelessrhyme7"},"content":"```markdown","lastModifiedDate":"2023-09-22"},{"lineNumber":202,"author":{"gitId":"eyelessrhyme7"},"content":"unmark 3","lastModifiedDate":"2023-09-22"},{"lineNumber":203,"author":{"gitId":"eyelessrhyme7"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":204,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":205,"author":{"gitId":"eyelessrhyme7"},"content":"**would return something like:**","lastModifiedDate":"2023-09-22"},{"lineNumber":206,"author":{"gitId":"eyelessrhyme7"},"content":"```markdown","lastModifiedDate":"2023-09-22"},{"lineNumber":207,"author":{"gitId":"eyelessrhyme7"},"content":"Ok, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-09-22"},{"lineNumber":208,"author":{"gitId":"eyelessrhyme7"},"content":"[D][ ] submit quiz  | DoAfter : NONE |  (by: 23:59, 08 September 2023)","lastModifiedDate":"2023-09-22"},{"lineNumber":209,"author":{"gitId":"eyelessrhyme7"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":210,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":211,"author":{"gitId":"eyelessrhyme7"},"content":"### 10. `find`","lastModifiedDate":"2023-09-22"},{"lineNumber":212,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":213,"author":{"gitId":"eyelessrhyme7"},"content":"Find tasks containing specific keywords in their descriptions.","lastModifiedDate":"2023-09-22"},{"lineNumber":214,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":215,"author":{"gitId":"eyelessrhyme7"},"content":"**Entering**","lastModifiedDate":"2023-09-22"},{"lineNumber":216,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":217,"author":{"gitId":"eyelessrhyme7"},"content":"```markdown","lastModifiedDate":"2023-09-22"},{"lineNumber":218,"author":{"gitId":"eyelessrhyme7"},"content":"find quiz","lastModifiedDate":"2023-09-22"},{"lineNumber":219,"author":{"gitId":"eyelessrhyme7"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":220,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":221,"author":{"gitId":"eyelessrhyme7"},"content":"**would return something like:**","lastModifiedDate":"2023-09-22"},{"lineNumber":222,"author":{"gitId":"eyelessrhyme7"},"content":"```markdown","lastModifiedDate":"2023-09-22"},{"lineNumber":223,"author":{"gitId":"eyelessrhyme7"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2023-09-22"},{"lineNumber":224,"author":{"gitId":"eyelessrhyme7"},"content":"1. [D][ ] submit quiz  | DoAfter : NONE |  (by: 23:59, 08 September 2023)","lastModifiedDate":"2023-09-22"},{"lineNumber":225,"author":{"gitId":"eyelessrhyme7"},"content":"2. [T][ ] quiz  | DoAfter : NONE |","lastModifiedDate":"2023-09-22"},{"lineNumber":226,"author":{"gitId":"eyelessrhyme7"},"content":"3. [D][ ] geo quiz  | DoAfter : NONE |  (by: 16:00, 04 October 2023)","lastModifiedDate":"2023-09-22"},{"lineNumber":227,"author":{"gitId":"eyelessrhyme7"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":228,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":229,"author":{"gitId":"eyelessrhyme7"},"content":"### 11. `tag`","lastModifiedDate":"2023-09-22"},{"lineNumber":230,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":231,"author":{"gitId":"eyelessrhyme7"},"content":"Add tags to a task by specifying its index and tags. Tags help you categorize and organize your tasks.","lastModifiedDate":"2023-09-22"},{"lineNumber":232,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":233,"author":{"gitId":"eyelessrhyme7"},"content":"**Entering**","lastModifiedDate":"2023-09-22"},{"lineNumber":234,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":235,"author":{"gitId":"eyelessrhyme7"},"content":"```markdown","lastModifiedDate":"2023-09-22"},{"lineNumber":236,"author":{"gitId":"eyelessrhyme7"},"content":"tag 3 imp math","lastModifiedDate":"2023-09-22"},{"lineNumber":237,"author":{"gitId":"eyelessrhyme7"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":238,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":239,"author":{"gitId":"eyelessrhyme7"},"content":"**would return something like:**","lastModifiedDate":"2023-09-22"},{"lineNumber":240,"author":{"gitId":"eyelessrhyme7"},"content":"```markdown","lastModifiedDate":"2023-09-22"},{"lineNumber":241,"author":{"gitId":"eyelessrhyme7"},"content":"Noted. I\u0027ve added tags to this task:","lastModifiedDate":"2023-09-22"},{"lineNumber":242,"author":{"gitId":"eyelessrhyme7"},"content":"[D][ ] submit quiz #imp #math | DoAfter : NONE |  (by: 23:59, 08 September 2023)","lastModifiedDate":"2023-09-22"},{"lineNumber":243,"author":{"gitId":"eyelessrhyme7"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":244,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":245,"author":{"gitId":"eyelessrhyme7"},"content":"### 12. `doafter`","lastModifiedDate":"2023-09-22"},{"lineNumber":246,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":247,"author":{"gitId":"eyelessrhyme7"},"content":"Set task dependencies by specifying the index of the dependent task and the index of the task it depends on. ","lastModifiedDate":"2023-09-22"},{"lineNumber":248,"author":{"gitId":"eyelessrhyme7"},"content":"This helps you manage task order and prerequisites.","lastModifiedDate":"2023-09-22"},{"lineNumber":249,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":250,"author":{"gitId":"eyelessrhyme7"},"content":"**Entering**","lastModifiedDate":"2023-09-22"},{"lineNumber":251,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":252,"author":{"gitId":"eyelessrhyme7"},"content":"```markdown","lastModifiedDate":"2023-09-22"},{"lineNumber":253,"author":{"gitId":"eyelessrhyme7"},"content":"doafter 3 5","lastModifiedDate":"2023-09-22"},{"lineNumber":254,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":255,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":256,"author":{"gitId":"eyelessrhyme7"},"content":"**would return something like:**","lastModifiedDate":"2023-09-22"},{"lineNumber":257,"author":{"gitId":"eyelessrhyme7"},"content":"```markdown","lastModifiedDate":"2023-09-22"},{"lineNumber":258,"author":{"gitId":"eyelessrhyme7"},"content":"Noted. I\u0027ve added a dependency to this task:","lastModifiedDate":"2023-09-22"},{"lineNumber":259,"author":{"gitId":"eyelessrhyme7"},"content":"[D][ ] submit quiz | DoAfter : join sports club |  (by: 23:59, 08 September 2023)","lastModifiedDate":"2023-09-22"},{"lineNumber":260,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":261,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":262,"author":{"gitId":"eyelessrhyme7"},"content":"### 13. `motivate`","lastModifiedDate":"2023-09-22"},{"lineNumber":263,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":264,"author":{"gitId":"eyelessrhyme7"},"content":"Need motivation? Capt. Price has you covered! Use this command to get a motivational quote from Capt. Price.","lastModifiedDate":"2023-09-22"},{"lineNumber":265,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":266,"author":{"gitId":"eyelessrhyme7"},"content":"**Entering**","lastModifiedDate":"2023-09-22"},{"lineNumber":267,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":268,"author":{"gitId":"eyelessrhyme7"},"content":"```markdown","lastModifiedDate":"2023-09-22"},{"lineNumber":269,"author":{"gitId":"eyelessrhyme7"},"content":"motivate","lastModifiedDate":"2023-09-22"},{"lineNumber":270,"author":{"gitId":"eyelessrhyme7"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":271,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":272,"author":{"gitId":"eyelessrhyme7"},"content":"**would return something like:**","lastModifiedDate":"2023-09-22"},{"lineNumber":273,"author":{"gitId":"eyelessrhyme7"},"content":"```markdown","lastModifiedDate":"2023-09-22"},{"lineNumber":274,"author":{"gitId":"eyelessrhyme7"},"content":"Here\u0027s your dose of motivation, Sergeant!","lastModifiedDate":"2023-09-22"},{"lineNumber":275,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":276,"author":{"gitId":"eyelessrhyme7"},"content":"`In the war against procrastination, we\u0027ll fight tooth and nail to victory, soldier!`","lastModifiedDate":"2023-09-22"},{"lineNumber":277,"author":{"gitId":"eyelessrhyme7"},"content":"~ Capt. Price","lastModifiedDate":"2023-09-22"},{"lineNumber":278,"author":{"gitId":"eyelessrhyme7"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":279,"author":{"gitId":"eyelessrhyme7"},"content":"## File Saving Info","lastModifiedDate":"2023-09-22"},{"lineNumber":280,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":281,"author":{"gitId":"eyelessrhyme7"},"content":"If you have an input data file `./data/duke.txt`, Capt. Price Bot will read initial tasks from the file. Any changes will be written to an `outputDuke.txt` file in the same folder for your convenience. Sharing/exporting the file can help you share your task list between friends and computers.","lastModifiedDate":"2023-09-22"},{"lineNumber":282,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":283,"author":{"gitId":"eyelessrhyme7"},"content":"## Additional Queries","lastModifiedDate":"2023-09-22"},{"lineNumber":284,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":285,"author":{"gitId":"eyelessrhyme7"},"content":"For additional questions, feedback, or assistance, feel free to contact the creator at \u003cu\u003eeyelessrhyme7@gmail.com\u003c/u\u003e. We\u0027re always open to feedback and ready to help you make the most of Capt. Price Bot.","lastModifiedDate":"2023-09-22"},{"lineNumber":286,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":287,"author":{"gitId":"eyelessrhyme7"},"content":"_\"Task Management, Simplified - On Your Command!\"_","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"eyelessrhyme7":272,"-":15}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eyelessrhyme7"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"eyelessrhyme7"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"eyelessrhyme7"},"content":" * The `Command` class defines constants representing various commands that can be used in the Duke application.","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"eyelessrhyme7"},"content":" * These commands are used for user interaction.","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"eyelessrhyme7"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"eyelessrhyme7"},"content":"public class Command {","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"eyelessrhyme7"},"content":"     * Represents the \"exit\" command, which allows the user to exit the Duke application.","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final String EXIT \u003d \"bye\";","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"eyelessrhyme7"},"content":"     * Represents the \"list\" command, which allows the user to list all tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final String LIST \u003d \"list\";","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"eyelessrhyme7"},"content":"     * Represents the \"list week\" command, which allows the user to list tasks due within a week.","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final String LIST_WITHIN_WEEK \u003d \"list week\";","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"eyelessrhyme7"},"content":"     * Represents the \"list month\" command, which allows the user to list tasks due within a month.","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final String LIST_WITHIN_MONTH \u003d \"list month\";","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"eyelessrhyme7"},"content":"     * Represents the \"delete\" command, which allows the user to delete a task.","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"eyelessrhyme7"},"content":"     * The task number should be appended to this command.","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"eyelessrhyme7"},"content":"     * Example: \"delete 2\" will delete the task with index 2.","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final String DELETE \u003d \"delete \";","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"eyelessrhyme7"},"content":"     * Represents the \"mark\" command, which allows the user to mark a task as done.","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"eyelessrhyme7"},"content":"     * The task number should be appended to this command.","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"eyelessrhyme7"},"content":"     * Example: \"mark 1\" will mark the task with index 1 as done.","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final String MARK \u003d \"mark \";","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"eyelessrhyme7"},"content":"     * Represents the \"unmark\" command, which allows the user to mark a task as not done.","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"eyelessrhyme7"},"content":"     * The task number should be appended to this command.","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"eyelessrhyme7"},"content":"     * Example: \"unmark 3\" will mark the task with index 3 as not done.","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final String UNMARK \u003d \"unmark \";","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":51,"author":{"gitId":"eyelessrhyme7"},"content":"     * Represents the \"find\" command, which allows the user to find tasks based on keywords.","lastModifiedDate":"2023-09-14"},{"lineNumber":52,"author":{"gitId":"eyelessrhyme7"},"content":"     * The search query strings should be appended to this command.","lastModifiedDate":"2023-09-14"},{"lineNumber":53,"author":{"gitId":"eyelessrhyme7"},"content":"     * Example: \"find game\" will find tasks that match string game.","lastModifiedDate":"2023-09-14"},{"lineNumber":54,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":55,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final String FIND \u003d \"find \";","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":57,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":58,"author":{"gitId":"eyelessrhyme7"},"content":"     * Represents the \"tag\" command, which allows the user to add tags to a task.","lastModifiedDate":"2023-09-14"},{"lineNumber":59,"author":{"gitId":"eyelessrhyme7"},"content":"     * The task number and tags should be appended to this command.","lastModifiedDate":"2023-09-14"},{"lineNumber":60,"author":{"gitId":"eyelessrhyme7"},"content":"     * Example: \"tag 3 fun sport\" will add tags fun and sport to task 3.","lastModifiedDate":"2023-09-14"},{"lineNumber":61,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":62,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final String TAG \u003d \"tag \";","lastModifiedDate":"2023-09-14"},{"lineNumber":63,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":64,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":65,"author":{"gitId":"eyelessrhyme7"},"content":"     * Represents the \"doafter\" command, which allows the user to add parent task to a task.","lastModifiedDate":"2023-09-22"},{"lineNumber":66,"author":{"gitId":"eyelessrhyme7"},"content":"     * The task numbers of child and parent respectively to be added to command.","lastModifiedDate":"2023-09-22"},{"lineNumber":67,"author":{"gitId":"eyelessrhyme7"},"content":"     * Example: \"doafter 3 4\" will set 4 to be parent of 3.","lastModifiedDate":"2023-09-22"},{"lineNumber":68,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":69,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final String DOAFTER \u003d \"doafter \";","lastModifiedDate":"2023-09-14"},{"lineNumber":70,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":71,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":72,"author":{"gitId":"eyelessrhyme7"},"content":"     * Represents the \"start\" system command, which allows the ui to intialize","lastModifiedDate":"2023-09-21"},{"lineNumber":73,"author":{"gitId":"eyelessrhyme7"},"content":"     * the starting message. If by chance used by user, it will just display the greeting.","lastModifiedDate":"2023-09-21"},{"lineNumber":74,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":75,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final String START \u003d \"SystemCode247890Start\";","lastModifiedDate":"2023-09-21"},{"lineNumber":76,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final String MOTIVATE \u003d \"motivate\";","lastModifiedDate":"2023-09-22"},{"lineNumber":77,"author":{"gitId":"eyelessrhyme7"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"eyelessrhyme7":77}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eyelessrhyme7"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"eyelessrhyme7"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"eyelessrhyme7"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"eyelessrhyme7"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"eyelessrhyme7"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"eyelessrhyme7"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"eyelessrhyme7"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"eyelessrhyme7"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"eyelessrhyme7"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"eyelessrhyme7"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"eyelessrhyme7"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"eyelessrhyme7"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"eyelessrhyme7"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"eyelessrhyme7"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"eyelessrhyme7"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"eyelessrhyme7"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"eyelessrhyme7"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"eyelessrhyme7"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"eyelessrhyme7"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"eyelessrhyme7"},"content":" * A custom control representing a dialog box in the Duke application.","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"eyelessrhyme7"},"content":" * It consists of an ImageView for the speaker\u0027s image and a label for the text.","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"eyelessrhyme7"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"eyelessrhyme7"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"eyelessrhyme7"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"eyelessrhyme7"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"eyelessrhyme7"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"eyelessrhyme7"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"eyelessrhyme7"},"content":"     * Constructs a new DialogBox with the given text and image.","lastModifiedDate":"2023-09-22"},{"lineNumber":35,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":36,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param text The text content of the dialog box.","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param img  The image representing the speaker.","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":39,"author":{"gitId":"eyelessrhyme7"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"eyelessrhyme7"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"eyelessrhyme7"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"eyelessrhyme7"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"eyelessrhyme7"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"eyelessrhyme7"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"eyelessrhyme7"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"eyelessrhyme7"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"eyelessrhyme7"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"eyelessrhyme7"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"eyelessrhyme7"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"eyelessrhyme7"},"content":"        //Size of image and dialog properties","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"eyelessrhyme7"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"eyelessrhyme7"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"eyelessrhyme7"},"content":"//        dialog.setWrapText(true);","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"eyelessrhyme7"},"content":"        //Circle Clip for displayPicture","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"eyelessrhyme7"},"content":"        Circle clipCircle \u003d new Circle(50);","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"eyelessrhyme7"},"content":"        displayPicture.setClip(clipCircle);","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"eyelessrhyme7"},"content":"        clipCircle.setCenterX(displayPicture.getFitWidth() / 2);","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"eyelessrhyme7"},"content":"        clipCircle.setCenterY(displayPicture.getFitHeight() / 2);","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"eyelessrhyme7"},"content":"        // Padding and Setting for DialogBox","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"eyelessrhyme7"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"eyelessrhyme7"},"content":"        this.setPadding(new Insets(20)); //Padding around DialogBox","lastModifiedDate":"2023-09-21"},{"lineNumber":66,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"eyelessrhyme7"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"eyelessrhyme7"},"content":"    private void flip() {","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"eyelessrhyme7"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"eyelessrhyme7"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"eyelessrhyme7"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"eyelessrhyme7"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":79,"author":{"gitId":"eyelessrhyme7"},"content":"     * Constructs a new DialogBox with the given text and image.","lastModifiedDate":"2023-09-22"},{"lineNumber":80,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":81,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param text The text content of the dialog box.","lastModifiedDate":"2023-09-22"},{"lineNumber":82,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param img  The image representing the speaker.","lastModifiedDate":"2023-09-22"},{"lineNumber":83,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":84,"author":{"gitId":"eyelessrhyme7"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"eyelessrhyme7"},"content":"        var db \u003d  new DialogBox(text, img);","lastModifiedDate":"2023-09-21"},{"lineNumber":86,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":87,"author":{"gitId":"eyelessrhyme7"},"content":"        //Background for text-part only","lastModifiedDate":"2023-09-21"},{"lineNumber":88,"author":{"gitId":"eyelessrhyme7"},"content":"        db.dialog.setBackground(new Background(new BackgroundFill(Color.web(\"#ABEB9B\"), null, null)));","lastModifiedDate":"2023-09-21"},{"lineNumber":89,"author":{"gitId":"eyelessrhyme7"},"content":"        return db;","lastModifiedDate":"2023-09-21"},{"lineNumber":90,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":91,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":92,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":93,"author":{"gitId":"eyelessrhyme7"},"content":"     * Creates a DialogBox for Duke\u0027s responses.","lastModifiedDate":"2023-09-22"},{"lineNumber":94,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":95,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param text The text content of Duke\u0027s response.","lastModifiedDate":"2023-09-22"},{"lineNumber":96,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param img  The image representing Duke.","lastModifiedDate":"2023-09-22"},{"lineNumber":97,"author":{"gitId":"eyelessrhyme7"},"content":"     * @return A DialogBox for Duke\u0027s response.","lastModifiedDate":"2023-09-22"},{"lineNumber":98,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":99,"author":{"gitId":"eyelessrhyme7"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":100,"author":{"gitId":"eyelessrhyme7"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":101,"author":{"gitId":"eyelessrhyme7"},"content":"        db.flip();","lastModifiedDate":"2023-09-07"},{"lineNumber":102,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":103,"author":{"gitId":"eyelessrhyme7"},"content":"        //Background for text-part only","lastModifiedDate":"2023-09-21"},{"lineNumber":104,"author":{"gitId":"eyelessrhyme7"},"content":"        db.dialog.setBackground(new Background(new BackgroundFill(Color.web(\"#BFD2EF\"), null, null)));","lastModifiedDate":"2023-09-21"},{"lineNumber":105,"author":{"gitId":"eyelessrhyme7"},"content":"        return db;","lastModifiedDate":"2023-09-07"},{"lineNumber":106,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":107,"author":{"gitId":"eyelessrhyme7"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":108,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":109,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"eyelessrhyme7":109}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eyelessrhyme7"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"eyelessrhyme7"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"eyelessrhyme7"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"eyelessrhyme7"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"eyelessrhyme7"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"eyelessrhyme7"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"eyelessrhyme7"},"content":"import javafx.util.Pair;","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"eyelessrhyme7"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"eyelessrhyme7"},"content":" * Duke is a task management bot that helps you keep track of your tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"eyelessrhyme7"},"content":" * You can add, mark as done, delete, and list tasks with Duke.","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"eyelessrhyme7"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"eyelessrhyme7"},"content":"    private LocalDate currentDate;","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"eyelessrhyme7"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"eyelessrhyme7"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"eyelessrhyme7"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"eyelessrhyme7"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"eyelessrhyme7"},"content":"     * Constructor for Duke. currentDate, ui, tasks is initialized by default.","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param filePath The file path to the data file where tasks are stored.","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"eyelessrhyme7"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"eyelessrhyme7"},"content":"        // Initialize the current date to the current system date.","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"eyelessrhyme7"},"content":"        this.currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"eyelessrhyme7"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"eyelessrhyme7"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"eyelessrhyme7"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"eyelessrhyme7"},"content":"            // Attempt to load tasks from the specified file path.","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"eyelessrhyme7"},"content":"            this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"eyelessrhyme7"},"content":"            assert this.tasks.getSize() !\u003d 0 : \"taskList initialized from file cannot be empty\";","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"eyelessrhyme7"},"content":"            ","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"eyelessrhyme7"},"content":"        } catch (IOException | InvalidFileFormatException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"eyelessrhyme7"},"content":"            // Handle exceptions related to file loading.","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"eyelessrhyme7"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"eyelessrhyme7"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"eyelessrhyme7"},"content":"            System.out.println(\"Starting Duke with Task List...\");","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"eyelessrhyme7"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"eyelessrhyme7"},"content":"     * Sets the current date for Duke. Useful for list-within-week and list-within-month commands","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param date The LocalDate to set as the current date.","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"eyelessrhyme7"},"content":"    private void setcurrentDate(LocalDate date) {","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"eyelessrhyme7"},"content":"        this.currentDate \u003d date;","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"eyelessrhyme7"},"content":"     * Runs the Duke bot, accepting and processing user commands. Scanner object and infinite while loop handled here.","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"eyelessrhyme7"},"content":"    public void runBot() {","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"eyelessrhyme7"},"content":"        // Display a greeting message to the user.","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"eyelessrhyme7"},"content":"        this.ui.displayGreeting();","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"eyelessrhyme7"},"content":"        // Initialize a new scanner object to interact with user input from Command Line.","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"eyelessrhyme7"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"eyelessrhyme7"},"content":"        String userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"eyelessrhyme7"},"content":"        while (!userInput.equalsIgnoreCase(Command.EXIT)) {","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"eyelessrhyme7"},"content":"            // Generate a response based on the user\u0027s input.","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"eyelessrhyme7"},"content":"            String botOutput \u003d generateResponse(userInput);","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":72,"author":{"gitId":"eyelessrhyme7"},"content":"            // Display the bot\u0027s response to the user.","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"eyelessrhyme7"},"content":"            this.ui.displayMessage(botOutput);","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"eyelessrhyme7"},"content":"            // Read the next user input.","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"eyelessrhyme7"},"content":"            userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-09-04"},{"lineNumber":77,"author":{"gitId":"eyelessrhyme7"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":78,"author":{"gitId":"eyelessrhyme7"},"content":"        // Display an exit greeting when the bot exits.","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"eyelessrhyme7"},"content":"        this.ui.displayExitGreeting();","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":81,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"eyelessrhyme7"},"content":"     * Generates a response for the given user input. Keeps track of and modifies TaskList list.","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param userInput The user\u0027s input command.","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"eyelessrhyme7"},"content":"     * @return A response generated based on the user input.","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"eyelessrhyme7"},"content":"    public String generateResponse(String userInput) {","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"eyelessrhyme7"},"content":"        // Initialize the bot\u0027s response.","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"eyelessrhyme7"},"content":"        String botOutput \u003d \"\";","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"eyelessrhyme7"},"content":"        // Check for various user commands and generate responses accordingly.","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"eyelessrhyme7"},"content":"        if (userInput.equalsIgnoreCase(Command.START)) {","lastModifiedDate":"2023-09-21"},{"lineNumber":94,"author":{"gitId":"eyelessrhyme7"},"content":"            botOutput \u003d botOutput + this.ui.getEntryGreeting();","lastModifiedDate":"2023-09-21"},{"lineNumber":95,"author":{"gitId":"eyelessrhyme7"},"content":"        } else if (userInput.strip().equalsIgnoreCase(Command.LIST)) {","lastModifiedDate":"2023-09-22"},{"lineNumber":96,"author":{"gitId":"eyelessrhyme7"},"content":"            // Generate a list of tasks and display it to the user.","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"eyelessrhyme7"},"content":"            botOutput \u003d botOutput + \"Here are the tasks in your list: \\n    \" + this.tasks.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":98,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":99,"author":{"gitId":"eyelessrhyme7"},"content":"        } else if (userInput.strip().equalsIgnoreCase(Command.LIST_WITHIN_WEEK)) {","lastModifiedDate":"2023-09-22"},{"lineNumber":100,"author":{"gitId":"eyelessrhyme7"},"content":"            // Generate a list of tasks due within a week and display it to the user.","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"eyelessrhyme7"},"content":"            TaskList listWeek \u003d this.tasks.dueWithinWeek();","lastModifiedDate":"2023-09-07"},{"lineNumber":102,"author":{"gitId":"eyelessrhyme7"},"content":"            botOutput \u003d botOutput + \"Here are the tasks in your list that start/due within one week: \\n    \"","lastModifiedDate":"2023-09-07"},{"lineNumber":103,"author":{"gitId":"eyelessrhyme7"},"content":"                    + listWeek.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":104,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":105,"author":{"gitId":"eyelessrhyme7"},"content":"        } else if (userInput.strip().equalsIgnoreCase(Command.LIST_WITHIN_MONTH)) {","lastModifiedDate":"2023-09-22"},{"lineNumber":106,"author":{"gitId":"eyelessrhyme7"},"content":"            // Generate a list of tasks due within a month and display it to the user.","lastModifiedDate":"2023-09-05"},{"lineNumber":107,"author":{"gitId":"eyelessrhyme7"},"content":"            TaskList monthWeek \u003d this.tasks.dueWithinMonth();","lastModifiedDate":"2023-09-07"},{"lineNumber":108,"author":{"gitId":"eyelessrhyme7"},"content":"            botOutput \u003d botOutput + \"Here are the tasks in your list that start/due within one month: \\n    \"","lastModifiedDate":"2023-09-07"},{"lineNumber":109,"author":{"gitId":"eyelessrhyme7"},"content":"                    + monthWeek.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":110,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":111,"author":{"gitId":"eyelessrhyme7"},"content":"        } else if (userInput.strip().startsWith(Command.MARK)) {","lastModifiedDate":"2023-09-22"},{"lineNumber":112,"author":{"gitId":"eyelessrhyme7"},"content":"            botOutput \u003d markResponse(userInput.strip(), botOutput);","lastModifiedDate":"2023-09-22"},{"lineNumber":113,"author":{"gitId":"eyelessrhyme7"},"content":"        } else if (userInput.strip().startsWith(Command.UNMARK)) {","lastModifiedDate":"2023-09-22"},{"lineNumber":114,"author":{"gitId":"eyelessrhyme7"},"content":"            botOutput \u003d unmarkResponse(userInput.strip(), botOutput);","lastModifiedDate":"2023-09-22"},{"lineNumber":115,"author":{"gitId":"eyelessrhyme7"},"content":"        } else if (userInput.strip().startsWith(Command.DELETE)) {","lastModifiedDate":"2023-09-22"},{"lineNumber":116,"author":{"gitId":"eyelessrhyme7"},"content":"            botOutput \u003d deleteResponse(userInput.strip(), botOutput);","lastModifiedDate":"2023-09-22"},{"lineNumber":117,"author":{"gitId":"eyelessrhyme7"},"content":"        } else if (userInput.strip().startsWith(Command.TAG)) {","lastModifiedDate":"2023-09-22"},{"lineNumber":118,"author":{"gitId":"eyelessrhyme7"},"content":"            botOutput \u003d tagResponse(userInput.strip(), botOutput);","lastModifiedDate":"2023-09-22"},{"lineNumber":119,"author":{"gitId":"eyelessrhyme7"},"content":"        } else if (userInput.strip().startsWith(Command.DOAFTER)) {","lastModifiedDate":"2023-09-22"},{"lineNumber":120,"author":{"gitId":"eyelessrhyme7"},"content":"            botOutput \u003d doafterResponse(userInput.strip(), botOutput);","lastModifiedDate":"2023-09-22"},{"lineNumber":121,"author":{"gitId":"eyelessrhyme7"},"content":"        } else if (userInput.strip().startsWith(Command.FIND)) {","lastModifiedDate":"2023-09-22"},{"lineNumber":122,"author":{"gitId":"eyelessrhyme7"},"content":"            botOutput \u003d findResponse(userInput.strip(), botOutput);","lastModifiedDate":"2023-09-22"},{"lineNumber":123,"author":{"gitId":"eyelessrhyme7"},"content":"        } else if (userInput.strip().equalsIgnoreCase(Command.EXIT)) {","lastModifiedDate":"2023-09-22"},{"lineNumber":124,"author":{"gitId":"eyelessrhyme7"},"content":"            botOutput \u003d this.ui.getExitGreeting();","lastModifiedDate":"2023-09-22"},{"lineNumber":125,"author":{"gitId":"eyelessrhyme7"},"content":"        } else if (userInput.strip().equalsIgnoreCase(Command.MOTIVATE)) {","lastModifiedDate":"2023-09-22"},{"lineNumber":126,"author":{"gitId":"eyelessrhyme7"},"content":"            botOutput \u003d \"Here\u0027s your dose of motivation, Sergeant!\";","lastModifiedDate":"2023-09-22"},{"lineNumber":127,"author":{"gitId":"eyelessrhyme7"},"content":"        } else {","lastModifiedDate":"2023-09-22"},{"lineNumber":128,"author":{"gitId":"eyelessrhyme7"},"content":"            botOutput \u003d taskCreationResponse(userInput.strip(), botOutput);","lastModifiedDate":"2023-09-22"},{"lineNumber":129,"author":{"gitId":"eyelessrhyme7"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":130,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":131,"author":{"gitId":"eyelessrhyme7"},"content":"        assert botOutput.isEmpty() \u003d\u003d false : \"botOutput message cannot be empty\";","lastModifiedDate":"2023-09-22"},{"lineNumber":132,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":133,"author":{"gitId":"eyelessrhyme7"},"content":"        botOutput \u003d botOutput + this.ui.getQuote();","lastModifiedDate":"2023-09-22"},{"lineNumber":134,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":135,"author":{"gitId":"eyelessrhyme7"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":136,"author":{"gitId":"eyelessrhyme7"},"content":"            // Write the updated taskList into file","lastModifiedDate":"2023-09-22"},{"lineNumber":137,"author":{"gitId":"eyelessrhyme7"},"content":"            this.storage.saveTasksToFile(this.tasks);","lastModifiedDate":"2023-09-22"},{"lineNumber":138,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":139,"author":{"gitId":"eyelessrhyme7"},"content":"        } catch (IOException | InvalidFileFormatException e) {","lastModifiedDate":"2023-09-22"},{"lineNumber":140,"author":{"gitId":"eyelessrhyme7"},"content":"            // Handle exceptions related to file loading.","lastModifiedDate":"2023-09-22"},{"lineNumber":141,"author":{"gitId":"eyelessrhyme7"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-22"},{"lineNumber":142,"author":{"gitId":"eyelessrhyme7"},"content":"            botOutput +\u003d \"\\n\\n Task file was not written successfully.\";","lastModifiedDate":"2023-09-22"},{"lineNumber":143,"author":{"gitId":"eyelessrhyme7"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":144,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":145,"author":{"gitId":"eyelessrhyme7"},"content":"        // Return the generated bot response to run() method.","lastModifiedDate":"2023-09-22"},{"lineNumber":146,"author":{"gitId":"eyelessrhyme7"},"content":"        return botOutput;","lastModifiedDate":"2023-09-22"},{"lineNumber":147,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":148,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":149,"author":{"gitId":"eyelessrhyme7"},"content":"    private String taskCreationResponse(String userInput, String botOutput) {","lastModifiedDate":"2023-09-22"},{"lineNumber":150,"author":{"gitId":"eyelessrhyme7"},"content":"        try {","lastModifiedDate":"2023-09-22"},{"lineNumber":151,"author":{"gitId":"eyelessrhyme7"},"content":"            // Attempt to create a new task based on the user input.","lastModifiedDate":"2023-09-22"},{"lineNumber":152,"author":{"gitId":"eyelessrhyme7"},"content":"            Task t \u003d Task.taskCon(userInput);","lastModifiedDate":"2023-09-22"},{"lineNumber":153,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":154,"author":{"gitId":"eyelessrhyme7"},"content":"            assert t !\u003d null : \"created task t cannot be null\";","lastModifiedDate":"2023-09-22"},{"lineNumber":155,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":156,"author":{"gitId":"eyelessrhyme7"},"content":"            this.tasks.addTask(t);","lastModifiedDate":"2023-09-22"},{"lineNumber":157,"author":{"gitId":"eyelessrhyme7"},"content":"                botOutput \u003d botOutput + \"added: \" + t + \"\\n    Now you have \" + this.tasks.getSize() + \" tasks in the list.\";","lastModifiedDate":"2023-09-22"},{"lineNumber":158,"author":{"gitId":"eyelessrhyme7"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2023-09-22"},{"lineNumber":159,"author":{"gitId":"eyelessrhyme7"},"content":"            // Handle invalid commands.","lastModifiedDate":"2023-09-22"},{"lineNumber":160,"author":{"gitId":"eyelessrhyme7"},"content":"            botOutput \u003d \"OOPS!!! I\u0027m sorry, but I\u0027m afraid I don\u0027t comprehend Major!\";","lastModifiedDate":"2023-09-22"},{"lineNumber":161,"author":{"gitId":"eyelessrhyme7"},"content":"        } catch (InvalidTaskCreationException t) {","lastModifiedDate":"2023-09-22"},{"lineNumber":162,"author":{"gitId":"eyelessrhyme7"},"content":"            // Handle invalid task creation.","lastModifiedDate":"2023-09-22"},{"lineNumber":163,"author":{"gitId":"eyelessrhyme7"},"content":"            botOutput \u003d t.getMessage();","lastModifiedDate":"2023-09-22"},{"lineNumber":164,"author":{"gitId":"eyelessrhyme7"},"content":"        } catch (DateTimeParseException d) {","lastModifiedDate":"2023-09-22"},{"lineNumber":165,"author":{"gitId":"eyelessrhyme7"},"content":"            // Handle date and time format exceptions.","lastModifiedDate":"2023-09-22"},{"lineNumber":166,"author":{"gitId":"eyelessrhyme7"},"content":"            botOutput \u003d \"Please specify deadlines and dates in the following format, \" + Task.DATE_TIME_FORMAT;","lastModifiedDate":"2023-09-22"},{"lineNumber":167,"author":{"gitId":"eyelessrhyme7"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":168,"author":{"gitId":"eyelessrhyme7"},"content":"        return botOutput;","lastModifiedDate":"2023-09-22"},{"lineNumber":169,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":170,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":171,"author":{"gitId":"eyelessrhyme7"},"content":"    private String findResponse(String userInput, String botOutput) {","lastModifiedDate":"2023-09-22"},{"lineNumber":172,"author":{"gitId":"eyelessrhyme7"},"content":"        try {","lastModifiedDate":"2023-09-22"},{"lineNumber":173,"author":{"gitId":"eyelessrhyme7"},"content":"            String[] queryString \u003d parser.parseFind(userInput, this.tasks);","lastModifiedDate":"2023-09-22"},{"lineNumber":174,"author":{"gitId":"eyelessrhyme7"},"content":"            TaskList listSearchMatches \u003d this.tasks.searchMatches(queryString);","lastModifiedDate":"2023-09-22"},{"lineNumber":175,"author":{"gitId":"eyelessrhyme7"},"content":"            botOutput \u003d botOutput + \"Here are the matching tasks in your list: \\n    \"","lastModifiedDate":"2023-09-22"},{"lineNumber":176,"author":{"gitId":"eyelessrhyme7"},"content":"                    + listSearchMatches.toString();","lastModifiedDate":"2023-09-22"},{"lineNumber":177,"author":{"gitId":"eyelessrhyme7"},"content":"        } catch (ParserException p) {","lastModifiedDate":"2023-09-22"},{"lineNumber":178,"author":{"gitId":"eyelessrhyme7"},"content":"            botOutput \u003d p.getMessage();","lastModifiedDate":"2023-09-22"},{"lineNumber":179,"author":{"gitId":"eyelessrhyme7"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":180,"author":{"gitId":"eyelessrhyme7"},"content":"        return botOutput;","lastModifiedDate":"2023-09-22"},{"lineNumber":181,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":182,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":183,"author":{"gitId":"eyelessrhyme7"},"content":"    private String doafterResponse(String userInput, String botOutput) {","lastModifiedDate":"2023-09-22"},{"lineNumber":184,"author":{"gitId":"eyelessrhyme7"},"content":"        botOutput \u003d botOutput + \"Noted. I\u0027ve added dependency to this task: \\n    \";","lastModifiedDate":"2023-09-22"},{"lineNumber":185,"author":{"gitId":"eyelessrhyme7"},"content":"        try {","lastModifiedDate":"2023-09-22"},{"lineNumber":186,"author":{"gitId":"eyelessrhyme7"},"content":"            Pair\u003cInteger, Integer\u003e p \u003d parser.parseDoAfter(userInput, this.tasks);","lastModifiedDate":"2023-09-22"},{"lineNumber":187,"author":{"gitId":"eyelessrhyme7"},"content":"            int childTaskNo \u003d p.getKey();","lastModifiedDate":"2023-09-22"},{"lineNumber":188,"author":{"gitId":"eyelessrhyme7"},"content":"            int parentTaskNo \u003d p.getValue();","lastModifiedDate":"2023-09-22"},{"lineNumber":189,"author":{"gitId":"eyelessrhyme7"},"content":"            Task child \u003d this.tasks.getTask(childTaskNo - 1);","lastModifiedDate":"2023-09-22"},{"lineNumber":190,"author":{"gitId":"eyelessrhyme7"},"content":"            Task parent \u003d this.tasks.getTask(parentTaskNo - 1);","lastModifiedDate":"2023-09-22"},{"lineNumber":191,"author":{"gitId":"eyelessrhyme7"},"content":"            child.setParentTask(parent);","lastModifiedDate":"2023-09-22"},{"lineNumber":192,"author":{"gitId":"eyelessrhyme7"},"content":"            assert child !\u003d null : \"retrieved task child cannot be null\";","lastModifiedDate":"2023-09-22"},{"lineNumber":193,"author":{"gitId":"eyelessrhyme7"},"content":"            assert parent !\u003d null : \"retrieved task parent cannot be null\";","lastModifiedDate":"2023-09-22"},{"lineNumber":194,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":195,"author":{"gitId":"eyelessrhyme7"},"content":"            botOutput +\u003d child;","lastModifiedDate":"2023-09-22"},{"lineNumber":196,"author":{"gitId":"eyelessrhyme7"},"content":"        } catch (ParserException p) {","lastModifiedDate":"2023-09-05"},{"lineNumber":197,"author":{"gitId":"eyelessrhyme7"},"content":"            // Handle parsing exceptions.","lastModifiedDate":"2023-09-05"},{"lineNumber":198,"author":{"gitId":"eyelessrhyme7"},"content":"            botOutput \u003d p.getMessage();","lastModifiedDate":"2023-09-05"},{"lineNumber":199,"author":{"gitId":"eyelessrhyme7"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":200,"author":{"gitId":"eyelessrhyme7"},"content":"        return botOutput;","lastModifiedDate":"2023-09-22"},{"lineNumber":201,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":202,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":203,"author":{"gitId":"eyelessrhyme7"},"content":"    private String tagResponse(String userInput, String botOutput) {","lastModifiedDate":"2023-09-22"},{"lineNumber":204,"author":{"gitId":"eyelessrhyme7"},"content":"        botOutput \u003d botOutput + \"Noted. I\u0027ve added tags to this task: \\n    \";","lastModifiedDate":"2023-09-22"},{"lineNumber":205,"author":{"gitId":"eyelessrhyme7"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":206,"author":{"gitId":"eyelessrhyme7"},"content":"            Pair\u003cInteger, String[]\u003e p \u003d parser.parseTag(userInput, this.tasks);","lastModifiedDate":"2023-09-22"},{"lineNumber":207,"author":{"gitId":"eyelessrhyme7"},"content":"            int taskNo \u003d p.getKey();","lastModifiedDate":"2023-09-22"},{"lineNumber":208,"author":{"gitId":"eyelessrhyme7"},"content":"            String[] tags \u003d p.getValue();","lastModifiedDate":"2023-09-22"},{"lineNumber":209,"author":{"gitId":"eyelessrhyme7"},"content":"            Task x \u003d this.tasks.getTask(taskNo - 1);","lastModifiedDate":"2023-09-07"},{"lineNumber":210,"author":{"gitId":"eyelessrhyme7"},"content":"            if (tags.length \u003d\u003d 0) {","lastModifiedDate":"2023-09-22"},{"lineNumber":211,"author":{"gitId":"eyelessrhyme7"},"content":"                throw new ParserException(\"Please enter valid tags in the format: \u0027tag 4 fun sport\u0027\");","lastModifiedDate":"2023-09-22"},{"lineNumber":212,"author":{"gitId":"eyelessrhyme7"},"content":"            }","lastModifiedDate":"2023-09-22"},{"lineNumber":213,"author":{"gitId":"eyelessrhyme7"},"content":"            x.addTags(tags);","lastModifiedDate":"2023-09-22"},{"lineNumber":214,"author":{"gitId":"eyelessrhyme7"},"content":"            assert x !\u003d null : \"retrieved task x cannot be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":215,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":216,"author":{"gitId":"eyelessrhyme7"},"content":"            botOutput +\u003d x;","lastModifiedDate":"2023-09-05"},{"lineNumber":217,"author":{"gitId":"eyelessrhyme7"},"content":"        } catch (ParserException p) {","lastModifiedDate":"2023-09-05"},{"lineNumber":218,"author":{"gitId":"eyelessrhyme7"},"content":"            // Handle parsing exceptions.","lastModifiedDate":"2023-09-05"},{"lineNumber":219,"author":{"gitId":"eyelessrhyme7"},"content":"            botOutput \u003d p.getMessage();","lastModifiedDate":"2023-09-05"},{"lineNumber":220,"author":{"gitId":"eyelessrhyme7"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":221,"author":{"gitId":"eyelessrhyme7"},"content":"        return botOutput;","lastModifiedDate":"2023-09-22"},{"lineNumber":222,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":223,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":224,"author":{"gitId":"eyelessrhyme7"},"content":"    private String deleteResponse(String userInput, String botOutput) {","lastModifiedDate":"2023-09-22"},{"lineNumber":225,"author":{"gitId":"eyelessrhyme7"},"content":"        // Process a command to delete a task and display the deleted task.","lastModifiedDate":"2023-09-05"},{"lineNumber":226,"author":{"gitId":"eyelessrhyme7"},"content":"        botOutput \u003d botOutput + \"Noted. I\u0027ve removed this task: \\n    \";","lastModifiedDate":"2023-08-24"},{"lineNumber":227,"author":{"gitId":"eyelessrhyme7"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":228,"author":{"gitId":"eyelessrhyme7"},"content":"            int taskNo \u003d parser.parseDelete(userInput, this.tasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":229,"author":{"gitId":"eyelessrhyme7"},"content":"            Task x \u003d this.tasks.deleteTask(taskNo - 1);","lastModifiedDate":"2023-09-07"},{"lineNumber":230,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":231,"author":{"gitId":"eyelessrhyme7"},"content":"            assert x !\u003d null : \"retrieved task x cannot be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":232,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":233,"author":{"gitId":"eyelessrhyme7"},"content":"            botOutput +\u003d x;","lastModifiedDate":"2023-09-05"},{"lineNumber":234,"author":{"gitId":"eyelessrhyme7"},"content":"        } catch (ParserException p) {","lastModifiedDate":"2023-09-05"},{"lineNumber":235,"author":{"gitId":"eyelessrhyme7"},"content":"            // Handle parsing exceptions.","lastModifiedDate":"2023-09-05"},{"lineNumber":236,"author":{"gitId":"eyelessrhyme7"},"content":"            botOutput \u003d p.getMessage();","lastModifiedDate":"2023-09-05"},{"lineNumber":237,"author":{"gitId":"eyelessrhyme7"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":238,"author":{"gitId":"eyelessrhyme7"},"content":"        return botOutput;","lastModifiedDate":"2023-09-22"},{"lineNumber":239,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":240,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":241,"author":{"gitId":"eyelessrhyme7"},"content":"    private String unmarkResponse(String userInput, String botOutput) {","lastModifiedDate":"2023-09-22"},{"lineNumber":242,"author":{"gitId":"eyelessrhyme7"},"content":"        // Process a command to mark a task as not done and display the result.","lastModifiedDate":"2023-09-22"},{"lineNumber":243,"author":{"gitId":"eyelessrhyme7"},"content":"        botOutput \u003d botOutput + \"Ok, I\u0027ve marked this task as not done yet: \\n    \";","lastModifiedDate":"2023-09-22"},{"lineNumber":244,"author":{"gitId":"eyelessrhyme7"},"content":"        try {","lastModifiedDate":"2023-09-14"},{"lineNumber":245,"author":{"gitId":"eyelessrhyme7"},"content":"            int taskNo \u003d parser.parseUnmark(userInput, this.tasks);","lastModifiedDate":"2023-09-22"},{"lineNumber":246,"author":{"gitId":"eyelessrhyme7"},"content":"            Task x \u003d this.tasks.getTask(taskNo - 1);","lastModifiedDate":"2023-09-14"},{"lineNumber":247,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":248,"author":{"gitId":"eyelessrhyme7"},"content":"            assert x !\u003d null : \"retrieved task x cannot be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":249,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":250,"author":{"gitId":"eyelessrhyme7"},"content":"            x.markAsUndone();","lastModifiedDate":"2023-09-22"},{"lineNumber":251,"author":{"gitId":"eyelessrhyme7"},"content":"            botOutput +\u003d x;","lastModifiedDate":"2023-09-14"},{"lineNumber":252,"author":{"gitId":"eyelessrhyme7"},"content":"        } catch (ParserException p) {","lastModifiedDate":"2023-09-14"},{"lineNumber":253,"author":{"gitId":"eyelessrhyme7"},"content":"            // Handle parsing exceptions.","lastModifiedDate":"2023-09-14"},{"lineNumber":254,"author":{"gitId":"eyelessrhyme7"},"content":"            botOutput \u003d p.getMessage();","lastModifiedDate":"2023-09-14"},{"lineNumber":255,"author":{"gitId":"eyelessrhyme7"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":256,"author":{"gitId":"eyelessrhyme7"},"content":"        return botOutput;","lastModifiedDate":"2023-09-22"},{"lineNumber":257,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":258,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":259,"author":{"gitId":"eyelessrhyme7"},"content":"    private String markResponse(String userInput, String botOutput) {","lastModifiedDate":"2023-09-22"},{"lineNumber":260,"author":{"gitId":"eyelessrhyme7"},"content":"        // Process a command to mark a task as done and display the result.","lastModifiedDate":"2023-09-22"},{"lineNumber":261,"author":{"gitId":"eyelessrhyme7"},"content":"        botOutput \u003d botOutput + \"Nice! I\u0027ve marked this task as done: \\n    \";","lastModifiedDate":"2023-09-22"},{"lineNumber":262,"author":{"gitId":"eyelessrhyme7"},"content":"        try {","lastModifiedDate":"2023-09-14"},{"lineNumber":263,"author":{"gitId":"eyelessrhyme7"},"content":"            int taskNo \u003d parser.parseMark(userInput, this.tasks);","lastModifiedDate":"2023-09-22"},{"lineNumber":264,"author":{"gitId":"eyelessrhyme7"},"content":"            Task x \u003d this.tasks.getTask(taskNo - 1);","lastModifiedDate":"2023-09-22"},{"lineNumber":265,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":266,"author":{"gitId":"eyelessrhyme7"},"content":"            assert x !\u003d null : \"retrieved task x cannot be null\";","lastModifiedDate":"2023-09-22"},{"lineNumber":267,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":268,"author":{"gitId":"eyelessrhyme7"},"content":"            x.markAsDone();","lastModifiedDate":"2023-09-22"},{"lineNumber":269,"author":{"gitId":"eyelessrhyme7"},"content":"            botOutput +\u003d x;","lastModifiedDate":"2023-09-22"},{"lineNumber":270,"author":{"gitId":"eyelessrhyme7"},"content":"        } catch (ParserException p) {","lastModifiedDate":"2023-09-14"},{"lineNumber":271,"author":{"gitId":"eyelessrhyme7"},"content":"            // Handle parsing exceptions.","lastModifiedDate":"2023-09-14"},{"lineNumber":272,"author":{"gitId":"eyelessrhyme7"},"content":"            botOutput \u003d p.getMessage();","lastModifiedDate":"2023-09-14"},{"lineNumber":273,"author":{"gitId":"eyelessrhyme7"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":274,"author":{"gitId":"eyelessrhyme7"},"content":"        return botOutput;","lastModifiedDate":"2023-09-04"},{"lineNumber":275,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":276,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":277,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":278,"author":{"gitId":"eyelessrhyme7"},"content":"     * The main method to start the Duke bot.","lastModifiedDate":"2023-09-05"},{"lineNumber":279,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":280,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param args The command-line arguments (not used in this application).","lastModifiedDate":"2023-09-05"},{"lineNumber":281,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":282,"author":{"gitId":"eyelessrhyme7"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-04"},{"lineNumber":283,"author":{"gitId":"eyelessrhyme7"},"content":"        // Specify the file path for data storage.","lastModifiedDate":"2023-09-05"},{"lineNumber":284,"author":{"gitId":"eyelessrhyme7"},"content":"        String filePath \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-09-04"},{"lineNumber":285,"author":{"gitId":"eyelessrhyme7"},"content":"//        assert false: \"falseee\";","lastModifiedDate":"2023-09-13"},{"lineNumber":286,"author":{"gitId":"eyelessrhyme7"},"content":"        // Create an instance of Duke and run the bot.","lastModifiedDate":"2023-09-05"},{"lineNumber":287,"author":{"gitId":"eyelessrhyme7"},"content":"        Duke dukeInstance \u003d new Duke(filePath);","lastModifiedDate":"2023-09-05"},{"lineNumber":288,"author":{"gitId":"eyelessrhyme7"},"content":"        dukeInstance.runBot();","lastModifiedDate":"2023-09-04"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"eyelessrhyme7":287,"-":3}},{"path":"src/main/java/duke/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eyelessrhyme7"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"eyelessrhyme7"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"eyelessrhyme7"},"content":" * The `InvalidCommandException` class is a custom exception that is thrown when an invalid command","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"eyelessrhyme7"},"content":" * is encountered in the Duke application.","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"eyelessrhyme7"},"content":" * This exception is used to handle cases where the user provides an unrecognized command.","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"eyelessrhyme7"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"eyelessrhyme7"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"eyelessrhyme7"},"content":"     * Constructs a new `InvalidCommandException` with the specified detail message.","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param message The detail message indicating the reason for the exception.","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"eyelessrhyme7"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"eyelessrhyme7"},"content":"        // Call the constructor of the parent class (Exception) and provide the error message.","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"eyelessrhyme7"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"eyelessrhyme7"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"eyelessrhyme7":19}},{"path":"src/main/java/duke/InvalidFileFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eyelessrhyme7"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"eyelessrhyme7"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"eyelessrhyme7"},"content":" * The `InvalidFileFormatException` class is a custom exception that is thrown when an invalid","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"eyelessrhyme7"},"content":" * file format is encountered while loading data in the Duke application.","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"eyelessrhyme7"},"content":" * This exception is used to handle cases where the data file has an unexpected or corrupted format.","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"eyelessrhyme7"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"eyelessrhyme7"},"content":"public class InvalidFileFormatException extends Exception {","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"eyelessrhyme7"},"content":"     * Constructs a new `InvalidFileFormatException` with the specified detail message.","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param message The detail message indicating the reason for the exception.","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"eyelessrhyme7"},"content":"    public InvalidFileFormatException(String message) {","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"eyelessrhyme7"},"content":"        // Call the constructor of the parent class (Exception) and provide the error message.","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"eyelessrhyme7"},"content":"        super(message);","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"eyelessrhyme7"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"eyelessrhyme7":19}},{"path":"src/main/java/duke/InvalidTaskCreationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eyelessrhyme7"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"eyelessrhyme7"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"eyelessrhyme7"},"content":" * The `InvalidTaskCreationException` class is a custom exception that is thrown when an error occurs","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"eyelessrhyme7"},"content":" * during the creation of a task in the Duke application.","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"eyelessrhyme7"},"content":" * This exception is used to handle cases where task creation fails due to invalid input or other issues.","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"eyelessrhyme7"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"eyelessrhyme7"},"content":"public class InvalidTaskCreationException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"eyelessrhyme7"},"content":"     * Constructs a new `InvalidTaskCreationException` with the specified detail message.","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param message The detail message indicating the reason for the exception.","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"eyelessrhyme7"},"content":"    public InvalidTaskCreationException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"eyelessrhyme7"},"content":"        // Call the constructor of the parent class (Exception) and provide the error message.","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"eyelessrhyme7"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"eyelessrhyme7"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"eyelessrhyme7":19}},{"path":"src/main/java/duke/InvalidTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eyelessrhyme7"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"eyelessrhyme7"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"eyelessrhyme7"},"content":" * The `InvalidTaskNumberException` class is a custom exception that is thrown when an","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"eyelessrhyme7"},"content":" * invalid task number is encountered in the Duke application.","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"eyelessrhyme7"},"content":" * This exception is used to handle cases where an invalid task number is provided as input.","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"eyelessrhyme7"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"eyelessrhyme7"},"content":"public class InvalidTaskNumberException extends Exception {","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"eyelessrhyme7"},"content":"     * Constructs a new `InvalidTaskNumberException` with the specified detail message.","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param message The detail message indicating the reason for the exception.","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"eyelessrhyme7"},"content":"    public InvalidTaskNumberException(String message) {","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"eyelessrhyme7"},"content":"        // Call the constructor of the parent class (Exception) and provide the error message.","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"eyelessrhyme7"},"content":"        super(message);","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"eyelessrhyme7"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"eyelessrhyme7":19}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eyelessrhyme7"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"eyelessrhyme7"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"eyelessrhyme7"},"content":"/**","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"eyelessrhyme7"},"content":" * This class serves as the launcher for the Duke application.","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"eyelessrhyme7"},"content":" */","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"eyelessrhyme7"},"content":"public class Launcher {","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"eyelessrhyme7"},"content":"     * The main method of the Launcher class, which starts the Duke application.","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param args Command-line arguments (if any) to pass to the application.","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"eyelessrhyme7"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"eyelessrhyme7"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"eyelessrhyme7"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"eyelessrhyme7":17}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eyelessrhyme7"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"eyelessrhyme7"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"eyelessrhyme7"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"eyelessrhyme7"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"eyelessrhyme7"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"eyelessrhyme7"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"eyelessrhyme7"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"eyelessrhyme7"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"eyelessrhyme7"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"eyelessrhyme7"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"eyelessrhyme7"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"eyelessrhyme7"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"eyelessrhyme7"},"content":"    private Duke duke \u003d new Duke(\"./data/duke.txt\");","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"eyelessrhyme7"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"eyelessrhyme7"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"eyelessrhyme7"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"eyelessrhyme7"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"eyelessrhyme7"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"eyelessrhyme7"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"eyelessrhyme7"},"content":"            stage.setTitle(\"Capt. Price\");","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"eyelessrhyme7"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"eyelessrhyme7"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"eyelessrhyme7"},"content":"            stage.show();","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"eyelessrhyme7"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"eyelessrhyme7"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"eyelessrhyme7"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"eyelessrhyme7"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"eyelessrhyme7":32}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eyelessrhyme7"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"eyelessrhyme7"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"eyelessrhyme7"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"eyelessrhyme7"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"eyelessrhyme7"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"eyelessrhyme7"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"eyelessrhyme7"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"eyelessrhyme7"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"eyelessrhyme7"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"eyelessrhyme7"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"eyelessrhyme7"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"eyelessrhyme7"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"eyelessrhyme7"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"eyelessrhyme7"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"eyelessrhyme7"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"eyelessrhyme7"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"eyelessrhyme7"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"eyelessrhyme7"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"eyelessrhyme7"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"eyelessrhyme7"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"eyelessrhyme7"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"eyelessrhyme7"},"content":"    // Images for the user and Duke","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"eyelessrhyme7"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"eyelessrhyme7"},"content":"    private Image captainImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaCaptain.jpg\"));","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"eyelessrhyme7"},"content":"     * Initializes the main window by binding the scroll pane\u0027s vertical value to","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"eyelessrhyme7"},"content":"     * the dialog container\u0027s height property.","lastModifiedDate":"2023-09-22"},{"lineNumber":32,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"eyelessrhyme7"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"eyelessrhyme7"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"eyelessrhyme7"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":39,"author":{"gitId":"eyelessrhyme7"},"content":"     * Sets the Duke instance for this main window and initializes the greeting message from Duke.","lastModifiedDate":"2023-09-22"},{"lineNumber":40,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param d The Duke instance to set.","lastModifiedDate":"2023-09-22"},{"lineNumber":42,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":43,"author":{"gitId":"eyelessrhyme7"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"eyelessrhyme7"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"eyelessrhyme7"},"content":"        //Initialize Greeting from Bot","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"eyelessrhyme7"},"content":"        String input \u003d Command.START;","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"eyelessrhyme7"},"content":"        String response \u003d duke.generateResponse(input);","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"eyelessrhyme7"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(response, captainImage));","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"eyelessrhyme7"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"eyelessrhyme7"},"content":"     * Creates two dialog boxes, one echoing user input and the other","lastModifiedDate":"2023-09-22"},{"lineNumber":55,"author":{"gitId":"eyelessrhyme7"},"content":"     * containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-22"},{"lineNumber":56,"author":{"gitId":"eyelessrhyme7"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"eyelessrhyme7"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"eyelessrhyme7"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"eyelessrhyme7"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"eyelessrhyme7"},"content":"        String response \u003d duke.generateResponse(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"eyelessrhyme7"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"eyelessrhyme7"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"eyelessrhyme7"},"content":"                DialogBox.getDukeDialog(response, captainImage)","lastModifiedDate":"2023-09-21"},{"lineNumber":65,"author":{"gitId":"eyelessrhyme7"},"content":"        );","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"eyelessrhyme7"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"eyelessrhyme7"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"eyelessrhyme7":68}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eyelessrhyme7"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"eyelessrhyme7"},"content":"import javafx.util.Pair;","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"eyelessrhyme7"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"eyelessrhyme7"},"content":" * The `Parser` class is responsible for parsing user input and extracting relevant information","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"eyelessrhyme7"},"content":" * for processing in the Duke application.","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"eyelessrhyme7"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"eyelessrhyme7"},"content":"public class Parser {","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"eyelessrhyme7"},"content":"     * Parses a user input string to extract the task number to mark as done.","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param userInput The user\u0027s input command.","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param list      The task list to validate the task number against.","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"eyelessrhyme7"},"content":"     * @return The task number to mark as done.","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"eyelessrhyme7"},"content":"     * @throws ParserException if parsing or validation fails.","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"eyelessrhyme7"},"content":"    public int parseMark(String userInput, TaskList list) throws ParserException {","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"eyelessrhyme7"},"content":"        int taskNo;","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"eyelessrhyme7"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"eyelessrhyme7"},"content":"            // Extract the task number from the user input.","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"eyelessrhyme7"},"content":"            taskNo \u003d Integer.parseInt(userInput.substring(5));","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"eyelessrhyme7"},"content":"            // Check if the task number is within valid bounds.","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"eyelessrhyme7"},"content":"            if (taskNo \u003e list.getSize() | taskNo \u003c 1) {","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"eyelessrhyme7"},"content":"                throw new InvalidTaskNumberException(\"Please enter valid Task No. to mark!\");","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"eyelessrhyme7"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"eyelessrhyme7"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"eyelessrhyme7"},"content":"            throw new ParserException(\"Please enter valid Task No. (INTEGER) to mark in the format: \u0027mark 4\u0027\");","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"eyelessrhyme7"},"content":"        } catch (InvalidTaskNumberException d) {","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"eyelessrhyme7"},"content":"            throw new ParserException(\"Please enter valid Task No. to mark!\");","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"eyelessrhyme7"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"eyelessrhyme7"},"content":"        return taskNo;","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"eyelessrhyme7"},"content":"     * Parses a user input string to extract the task number to unmark as not done.","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param userInput The user\u0027s input command.","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param list      The task list to validate the task number against.","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"eyelessrhyme7"},"content":"     * @return The task number to unmark as not done.","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"eyelessrhyme7"},"content":"     * @throws ParserException if parsing or validation fails.","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"eyelessrhyme7"},"content":"    public int parseUnmark(String userInput, TaskList list) throws ParserException {","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"eyelessrhyme7"},"content":"        int taskNo;","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"eyelessrhyme7"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"eyelessrhyme7"},"content":"            // Extract the task number from the user input.","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"eyelessrhyme7"},"content":"            taskNo \u003d Integer.parseInt(userInput.substring(7));","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"eyelessrhyme7"},"content":"            // Check if the task number is within valid bounds.","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"eyelessrhyme7"},"content":"            if (taskNo \u003e list.getSize() | taskNo \u003c 1) {","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"eyelessrhyme7"},"content":"                throw new InvalidTaskNumberException(\"Please enter valid Task No. to unmark!\");","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"eyelessrhyme7"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"eyelessrhyme7"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"eyelessrhyme7"},"content":"            throw new ParserException(\"Please enter valid Task No. (INTEGER) to unmark in the format: \u0027unmark 4\u0027\");","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"eyelessrhyme7"},"content":"        } catch (InvalidTaskNumberException d) {","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"eyelessrhyme7"},"content":"            throw new ParserException(\"Please enter valid Task No. to unmark!\");","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"eyelessrhyme7"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"eyelessrhyme7"},"content":"        return taskNo;","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"eyelessrhyme7"},"content":"     * Parses a user input string to extract the task number to delete.","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param userInput The user\u0027s input command.","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param list      The task list to validate the task number against.","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"eyelessrhyme7"},"content":"     * @return The task number to delete.","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"eyelessrhyme7"},"content":"     * @throws ParserException if parsing or validation fails.","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"eyelessrhyme7"},"content":"    public int parseDelete(String userInput, TaskList list) throws ParserException {","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"eyelessrhyme7"},"content":"        int taskNo;","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"eyelessrhyme7"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"eyelessrhyme7"},"content":"            // Extract the task number from the user input.","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"eyelessrhyme7"},"content":"            taskNo \u003d Integer.parseInt(userInput.substring(7));","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"eyelessrhyme7"},"content":"            // Check if the task number is within valid bounds.","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"eyelessrhyme7"},"content":"            if (taskNo \u003e list.getSize() | taskNo \u003c 1) {","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"eyelessrhyme7"},"content":"                throw new InvalidTaskNumberException(\"Please enter valid Task No. to delete!\");","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"eyelessrhyme7"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"eyelessrhyme7"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"eyelessrhyme7"},"content":"            throw new ParserException(\"Please enter valid Task No. (INTEGER) to delete in the format: \u0027delete 4\u0027\");","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"eyelessrhyme7"},"content":"        } catch (InvalidTaskNumberException d) {","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"eyelessrhyme7"},"content":"            throw new ParserException(\"Please enter valid Task No. to delete!\");","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"eyelessrhyme7"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"eyelessrhyme7"},"content":"        return taskNo;","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":90,"author":{"gitId":"eyelessrhyme7"},"content":"     * Parses a user input string to search for a specific task.","lastModifiedDate":"2023-09-07"},{"lineNumber":91,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":92,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param userInput The user\u0027s input command.","lastModifiedDate":"2023-09-07"},{"lineNumber":93,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param list      The task list to validate the task number against.","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"eyelessrhyme7"},"content":"     * @return The query string to search for.a","lastModifiedDate":"2023-09-07"},{"lineNumber":95,"author":{"gitId":"eyelessrhyme7"},"content":"     * @throws ParserException if parsing or validation fails.","lastModifiedDate":"2023-09-07"},{"lineNumber":96,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":97,"author":{"gitId":"eyelessrhyme7"},"content":"    public String[] parseFind(String userInput, TaskList list) throws ParserException {","lastModifiedDate":"2023-09-07"},{"lineNumber":98,"author":{"gitId":"eyelessrhyme7"},"content":"        String argsString \u003d userInput.substring(5).trim();","lastModifiedDate":"2023-09-07"},{"lineNumber":99,"author":{"gitId":"eyelessrhyme7"},"content":"        return argsString.split(\"\\\\s+\");","lastModifiedDate":"2023-09-07"},{"lineNumber":100,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":102,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":103,"author":{"gitId":"eyelessrhyme7"},"content":"     * Parses a user input string to extract the task number to add tags to.","lastModifiedDate":"2023-09-22"},{"lineNumber":104,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":105,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param userInput The user\u0027s input command.","lastModifiedDate":"2023-09-22"},{"lineNumber":106,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param list      The task list to validate the task number against.","lastModifiedDate":"2023-09-22"},{"lineNumber":107,"author":{"gitId":"eyelessrhyme7"},"content":"     * @return A pair containing the task number and an array of tags to add.","lastModifiedDate":"2023-09-22"},{"lineNumber":108,"author":{"gitId":"eyelessrhyme7"},"content":"     * @throws ParserException if parsing or validation fails.","lastModifiedDate":"2023-09-22"},{"lineNumber":109,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":110,"author":{"gitId":"eyelessrhyme7"},"content":"    public Pair\u003cInteger, String[]\u003e parseTag(String userInput, TaskList list) throws ParserException {","lastModifiedDate":"2023-09-14"},{"lineNumber":111,"author":{"gitId":"eyelessrhyme7"},"content":"        int taskNo;","lastModifiedDate":"2023-09-14"},{"lineNumber":112,"author":{"gitId":"eyelessrhyme7"},"content":"        String[] args \u003d userInput.substring(4).split(\" \");","lastModifiedDate":"2023-09-14"},{"lineNumber":113,"author":{"gitId":"eyelessrhyme7"},"content":"        try {","lastModifiedDate":"2023-09-14"},{"lineNumber":114,"author":{"gitId":"eyelessrhyme7"},"content":"            // Extract the task number from the user input.","lastModifiedDate":"2023-09-14"},{"lineNumber":115,"author":{"gitId":"eyelessrhyme7"},"content":"            taskNo \u003d Integer.parseInt(args[0]);","lastModifiedDate":"2023-09-14"},{"lineNumber":116,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":117,"author":{"gitId":"eyelessrhyme7"},"content":"            // Check if the task number is within valid bounds.","lastModifiedDate":"2023-09-14"},{"lineNumber":118,"author":{"gitId":"eyelessrhyme7"},"content":"            if (taskNo \u003e list.getSize() | taskNo \u003c 1) {","lastModifiedDate":"2023-09-14"},{"lineNumber":119,"author":{"gitId":"eyelessrhyme7"},"content":"                throw new InvalidTaskNumberException(\"Please enter valid Task No. to tag!\");","lastModifiedDate":"2023-09-14"},{"lineNumber":120,"author":{"gitId":"eyelessrhyme7"},"content":"            }","lastModifiedDate":"2023-09-14"},{"lineNumber":121,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":122,"author":{"gitId":"eyelessrhyme7"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-14"},{"lineNumber":123,"author":{"gitId":"eyelessrhyme7"},"content":"            throw new ParserException(\"Please enter valid Task No. (INTEGER) to tag in the format: \u0027tag 4 fun sport\u0027\");","lastModifiedDate":"2023-09-14"},{"lineNumber":124,"author":{"gitId":"eyelessrhyme7"},"content":"        } catch (InvalidTaskNumberException d) {","lastModifiedDate":"2023-09-14"},{"lineNumber":125,"author":{"gitId":"eyelessrhyme7"},"content":"            throw new ParserException(\"Please enter valid Task No. to tag!\");","lastModifiedDate":"2023-09-14"},{"lineNumber":126,"author":{"gitId":"eyelessrhyme7"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":127,"author":{"gitId":"eyelessrhyme7"},"content":"        int newLength \u003d args.length - 1;","lastModifiedDate":"2023-09-14"},{"lineNumber":128,"author":{"gitId":"eyelessrhyme7"},"content":"        String[] tagsToOutput \u003d new String[newLength];","lastModifiedDate":"2023-09-14"},{"lineNumber":129,"author":{"gitId":"eyelessrhyme7"},"content":"        System.arraycopy(args, 1, tagsToOutput, 0, newLength);","lastModifiedDate":"2023-09-14"},{"lineNumber":130,"author":{"gitId":"eyelessrhyme7"},"content":"        return new Pair\u003c\u003e(taskNo, tagsToOutput);","lastModifiedDate":"2023-09-14"},{"lineNumber":131,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":132,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":133,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":134,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":135,"author":{"gitId":"eyelessrhyme7"},"content":"     * Parses a user input string to extract the task numbers for setting a task as dependent on another task.","lastModifiedDate":"2023-09-22"},{"lineNumber":136,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":137,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param userInput The user\u0027s input command.","lastModifiedDate":"2023-09-22"},{"lineNumber":138,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param list      The task list to validate the task numbers against.","lastModifiedDate":"2023-09-22"},{"lineNumber":139,"author":{"gitId":"eyelessrhyme7"},"content":"     * @return A pair containing the child task number and the parent task number.","lastModifiedDate":"2023-09-22"},{"lineNumber":140,"author":{"gitId":"eyelessrhyme7"},"content":"     * @throws ParserException if parsing or validation fails.","lastModifiedDate":"2023-09-22"},{"lineNumber":141,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":142,"author":{"gitId":"eyelessrhyme7"},"content":"    public Pair\u003cInteger, Integer\u003e parseDoAfter(String userInput, TaskList list) throws ParserException {","lastModifiedDate":"2023-09-14"},{"lineNumber":143,"author":{"gitId":"eyelessrhyme7"},"content":"        int childTaskNo;","lastModifiedDate":"2023-09-14"},{"lineNumber":144,"author":{"gitId":"eyelessrhyme7"},"content":"        int parentTaskNo;","lastModifiedDate":"2023-09-14"},{"lineNumber":145,"author":{"gitId":"eyelessrhyme7"},"content":"        String[] args \u003d userInput.substring(8).split(\" \");","lastModifiedDate":"2023-09-14"},{"lineNumber":146,"author":{"gitId":"eyelessrhyme7"},"content":"        try {","lastModifiedDate":"2023-09-14"},{"lineNumber":147,"author":{"gitId":"eyelessrhyme7"},"content":"            // Extract the task numbers from the user input.","lastModifiedDate":"2023-09-14"},{"lineNumber":148,"author":{"gitId":"eyelessrhyme7"},"content":"            childTaskNo \u003d Integer.parseInt(args[0]);","lastModifiedDate":"2023-09-14"},{"lineNumber":149,"author":{"gitId":"eyelessrhyme7"},"content":"            parentTaskNo \u003d Integer.parseInt(args[1]);","lastModifiedDate":"2023-09-14"},{"lineNumber":150,"author":{"gitId":"eyelessrhyme7"},"content":"            // Check if the task numbers are within valid bounds.","lastModifiedDate":"2023-09-14"},{"lineNumber":151,"author":{"gitId":"eyelessrhyme7"},"content":"            if ((childTaskNo \u003e list.getSize() | childTaskNo \u003c 1) ||","lastModifiedDate":"2023-09-22"},{"lineNumber":152,"author":{"gitId":"eyelessrhyme7"},"content":"                    (parentTaskNo \u003e list.getSize() | parentTaskNo \u003c 1) ||","lastModifiedDate":"2023-09-22"},{"lineNumber":153,"author":{"gitId":"eyelessrhyme7"},"content":"                    args.length \u003e 2) {","lastModifiedDate":"2023-09-22"},{"lineNumber":154,"author":{"gitId":"eyelessrhyme7"},"content":"                throw new InvalidTaskNumberException(\"Please enter valid Task No.!\");","lastModifiedDate":"2023-09-14"},{"lineNumber":155,"author":{"gitId":"eyelessrhyme7"},"content":"            }","lastModifiedDate":"2023-09-14"},{"lineNumber":156,"author":{"gitId":"eyelessrhyme7"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-14"},{"lineNumber":157,"author":{"gitId":"eyelessrhyme7"},"content":"            throw new ParserException(\"Please enter valid Task No. (INTEGER) to doAfter in the format: \u0027doafter 4 5\u0027\");","lastModifiedDate":"2023-09-14"},{"lineNumber":158,"author":{"gitId":"eyelessrhyme7"},"content":"        } catch (InvalidTaskNumberException d) {","lastModifiedDate":"2023-09-14"},{"lineNumber":159,"author":{"gitId":"eyelessrhyme7"},"content":"            throw new ParserException(\"Please enter valid Task No.!\");","lastModifiedDate":"2023-09-14"},{"lineNumber":160,"author":{"gitId":"eyelessrhyme7"},"content":"        } catch (ArrayIndexOutOfBoundsException a) {","lastModifiedDate":"2023-09-22"},{"lineNumber":161,"author":{"gitId":"eyelessrhyme7"},"content":"            throw new ParserException(\"Please enter valid Task No. args : like \u0027doafter 4 5\u0027\");","lastModifiedDate":"2023-09-22"},{"lineNumber":162,"author":{"gitId":"eyelessrhyme7"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":163,"author":{"gitId":"eyelessrhyme7"},"content":"        return new Pair\u003c\u003e(childTaskNo, parentTaskNo);","lastModifiedDate":"2023-09-14"},{"lineNumber":164,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":165,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":166,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":167,"author":{"gitId":"eyelessrhyme7"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"eyelessrhyme7":167}},{"path":"src/main/java/duke/ParserException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eyelessrhyme7"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"eyelessrhyme7"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"eyelessrhyme7"},"content":" * The `ParserException` class is a custom exception that is thrown when an error occurs during parsing","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"eyelessrhyme7"},"content":" * user input in the Duke application.","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"eyelessrhyme7"},"content":" * This exception is used to handle parsing-related errors.","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"eyelessrhyme7"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"eyelessrhyme7"},"content":"public class ParserException extends Exception {","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"eyelessrhyme7"},"content":"     * Constructs a new `ParserException` with the specified detail message.","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param message The detail message indicating the reason for the exception.","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"eyelessrhyme7"},"content":"    public ParserException(String message) {","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"eyelessrhyme7"},"content":"        super(message);","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"eyelessrhyme7"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"eyelessrhyme7":18}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eyelessrhyme7"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"eyelessrhyme7"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"eyelessrhyme7"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"eyelessrhyme7"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"eyelessrhyme7"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"eyelessrhyme7"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"eyelessrhyme7"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"eyelessrhyme7"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"eyelessrhyme7"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"eyelessrhyme7"},"content":" * The `Storage` class handles the reading and writing of tasks from/to a data file.","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"eyelessrhyme7"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"eyelessrhyme7"},"content":"public class Storage {","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"eyelessrhyme7"},"content":"    private String filePath;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"eyelessrhyme7"},"content":"    private String outputFilePath \u003d \"./data/outputDuke.txt\";","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"eyelessrhyme7"},"content":"     * Constructs a new `Storage` instance with the specified file path.","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param filePath The file path where task data is stored.","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"eyelessrhyme7"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"eyelessrhyme7"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"eyelessrhyme7"},"content":"     * Loads tasks from the data file specified in the constructor.","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"eyelessrhyme7"},"content":"     * @return An ArrayList of Task objects representing the tasks loaded from the file.","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"eyelessrhyme7"},"content":"     * @throws IOException              if there is an issue reading the file.","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"eyelessrhyme7"},"content":"     * @throws InvalidFileFormatException if the file contains tasks in an invalid format.","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"eyelessrhyme7"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException, InvalidFileFormatException {","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"eyelessrhyme7"},"content":"        BufferedReader reader \u003d new BufferedReader(new FileReader(this.filePath));","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"eyelessrhyme7"},"content":"        String line;","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"eyelessrhyme7"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"eyelessrhyme7"},"content":"        while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"eyelessrhyme7"},"content":"            switch (line.charAt(0)) {","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"eyelessrhyme7"},"content":"            case \u0027T\u0027:","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"eyelessrhyme7"},"content":"                loadTodoTask(line, taskList);","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"eyelessrhyme7"},"content":"                break;","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"eyelessrhyme7"},"content":"            case \u0027D\u0027:","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"eyelessrhyme7"},"content":"                loadDeadlineTask(line, taskList);","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"eyelessrhyme7"},"content":"                break;","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"eyelessrhyme7"},"content":"            case \u0027E\u0027:","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"eyelessrhyme7"},"content":"                loadEventTask(line, taskList);","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"eyelessrhyme7"},"content":"                break;","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"eyelessrhyme7"},"content":"            default:","lastModifiedDate":"2023-09-13"},{"lineNumber":55,"author":{"gitId":"eyelessrhyme7"},"content":"                // Handle invalid lines or raise an exception if needed.","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"eyelessrhyme7"},"content":"                break;","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"eyelessrhyme7"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"eyelessrhyme7"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"eyelessrhyme7"},"content":"        return taskList;","lastModifiedDate":"2023-09-13"},{"lineNumber":60,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"eyelessrhyme7"},"content":"    private static void loadEventTask(String line, ArrayList\u003cTask\u003e taskList) throws InvalidFileFormatException {","lastModifiedDate":"2023-09-13"},{"lineNumber":63,"author":{"gitId":"eyelessrhyme7"},"content":"        String[] splitStringList \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"eyelessrhyme7"},"content":"        if (splitStringList.length !\u003d 5) {","lastModifiedDate":"2023-09-13"},{"lineNumber":65,"author":{"gitId":"eyelessrhyme7"},"content":"            throw new InvalidFileFormatException(\"Invalid format for Event task in the file.\");","lastModifiedDate":"2023-09-13"},{"lineNumber":66,"author":{"gitId":"eyelessrhyme7"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"eyelessrhyme7"},"content":"        String fabricatedUserInput \u003d \"event \" + splitStringList[2] + \"/from \" + splitStringList[3] + \"/to \"","lastModifiedDate":"2023-09-13"},{"lineNumber":69,"author":{"gitId":"eyelessrhyme7"},"content":"                + splitStringList[4];","lastModifiedDate":"2023-09-13"},{"lineNumber":70,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":71,"author":{"gitId":"eyelessrhyme7"},"content":"        Task ev;","lastModifiedDate":"2023-09-13"},{"lineNumber":72,"author":{"gitId":"eyelessrhyme7"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"eyelessrhyme7"},"content":"            ev \u003d Task.taskCon(fabricatedUserInput);","lastModifiedDate":"2023-09-13"},{"lineNumber":74,"author":{"gitId":"eyelessrhyme7"},"content":"        } catch (InvalidCommandException | InvalidTaskCreationException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"eyelessrhyme7"},"content":"            throw new InvalidFileFormatException(\"Invalid format for Event task in the file.\");","lastModifiedDate":"2023-09-13"},{"lineNumber":76,"author":{"gitId":"eyelessrhyme7"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"eyelessrhyme7"},"content":"        if (splitStringList[1].equals(\"1\")) {","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"eyelessrhyme7"},"content":"            ev.markAsDone();","lastModifiedDate":"2023-09-13"},{"lineNumber":80,"author":{"gitId":"eyelessrhyme7"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":81,"author":{"gitId":"eyelessrhyme7"},"content":"        taskList.add(ev);","lastModifiedDate":"2023-09-13"},{"lineNumber":82,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"eyelessrhyme7"},"content":"    private static void loadDeadlineTask(String line, ArrayList\u003cTask\u003e taskList) throws InvalidFileFormatException {","lastModifiedDate":"2023-09-13"},{"lineNumber":85,"author":{"gitId":"eyelessrhyme7"},"content":"        String[] splitStringList \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-09-13"},{"lineNumber":86,"author":{"gitId":"eyelessrhyme7"},"content":"        if (splitStringList.length !\u003d 4) {","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"eyelessrhyme7"},"content":"            throw new InvalidFileFormatException(\"Invalid format for Deadline task in the\"","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"eyelessrhyme7"},"content":"                    + \" file.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"eyelessrhyme7"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"eyelessrhyme7"},"content":"        String fabricatedUserInput \u003d \"deadline \" + splitStringList[2] + \"/by \" + splitStringList[3];","lastModifiedDate":"2023-09-13"},{"lineNumber":91,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":92,"author":{"gitId":"eyelessrhyme7"},"content":"        Task d;","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"eyelessrhyme7"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":94,"author":{"gitId":"eyelessrhyme7"},"content":"            d \u003d Task.taskCon(fabricatedUserInput);","lastModifiedDate":"2023-09-05"},{"lineNumber":95,"author":{"gitId":"eyelessrhyme7"},"content":"        } catch (InvalidCommandException | InvalidTaskCreationException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":96,"author":{"gitId":"eyelessrhyme7"},"content":"            throw new InvalidFileFormatException(\"Invalid format for Deadline task in the\"","lastModifiedDate":"2023-09-07"},{"lineNumber":97,"author":{"gitId":"eyelessrhyme7"},"content":"                    + \" file.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":98,"author":{"gitId":"eyelessrhyme7"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"eyelessrhyme7"},"content":"        if (splitStringList[1].equals(\"1\")) {","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"eyelessrhyme7"},"content":"            d.markAsDone();","lastModifiedDate":"2023-09-05"},{"lineNumber":102,"author":{"gitId":"eyelessrhyme7"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":103,"author":{"gitId":"eyelessrhyme7"},"content":"        taskList.add(d);","lastModifiedDate":"2023-09-05"},{"lineNumber":104,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"eyelessrhyme7"},"content":"    private static void loadTodoTask(String line, ArrayList\u003cTask\u003e taskList) throws InvalidFileFormatException {","lastModifiedDate":"2023-09-13"},{"lineNumber":107,"author":{"gitId":"eyelessrhyme7"},"content":"        String[] splitStringList \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-09-13"},{"lineNumber":108,"author":{"gitId":"eyelessrhyme7"},"content":"        if (splitStringList.length !\u003d 3) {","lastModifiedDate":"2023-09-13"},{"lineNumber":109,"author":{"gitId":"eyelessrhyme7"},"content":"            throw new InvalidFileFormatException(\"Invalid format for Todo task in the file.\");","lastModifiedDate":"2023-09-13"},{"lineNumber":110,"author":{"gitId":"eyelessrhyme7"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":111,"author":{"gitId":"eyelessrhyme7"},"content":"        String fabricatedUserInput \u003d \"todo \" + splitStringList[2];","lastModifiedDate":"2023-09-13"},{"lineNumber":112,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":113,"author":{"gitId":"eyelessrhyme7"},"content":"        Task t;","lastModifiedDate":"2023-09-13"},{"lineNumber":114,"author":{"gitId":"eyelessrhyme7"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":115,"author":{"gitId":"eyelessrhyme7"},"content":"            t \u003d Task.taskCon(fabricatedUserInput);","lastModifiedDate":"2023-09-13"},{"lineNumber":116,"author":{"gitId":"eyelessrhyme7"},"content":"        } catch (InvalidCommandException | InvalidTaskCreationException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":117,"author":{"gitId":"eyelessrhyme7"},"content":"            throw new InvalidFileFormatException(\"Invalid format for Todo task in the file.\");","lastModifiedDate":"2023-09-13"},{"lineNumber":118,"author":{"gitId":"eyelessrhyme7"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":119,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":120,"author":{"gitId":"eyelessrhyme7"},"content":"        if (splitStringList[1].equals(\"1\")) {","lastModifiedDate":"2023-09-05"},{"lineNumber":121,"author":{"gitId":"eyelessrhyme7"},"content":"            t.markAsDone();","lastModifiedDate":"2023-09-13"},{"lineNumber":122,"author":{"gitId":"eyelessrhyme7"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":123,"author":{"gitId":"eyelessrhyme7"},"content":"        taskList.add(t);","lastModifiedDate":"2023-09-13"},{"lineNumber":124,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":125,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":126,"author":{"gitId":"eyelessrhyme7"},"content":"    public void saveTasksToFile(TaskList tasks) throws IOException, InvalidFileFormatException {","lastModifiedDate":"2023-09-22"},{"lineNumber":127,"author":{"gitId":"eyelessrhyme7"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(this.outputFilePath))) {","lastModifiedDate":"2023-09-22"},{"lineNumber":128,"author":{"gitId":"eyelessrhyme7"},"content":"            for (Task task : tasks.taskArrayList) {","lastModifiedDate":"2023-09-22"},{"lineNumber":129,"author":{"gitId":"eyelessrhyme7"},"content":"                String taskOutput \u003d task.toFileOutput();","lastModifiedDate":"2023-09-22"},{"lineNumber":130,"author":{"gitId":"eyelessrhyme7"},"content":"                writer.write(taskOutput);","lastModifiedDate":"2023-09-22"},{"lineNumber":131,"author":{"gitId":"eyelessrhyme7"},"content":"                writer.newLine(); // Add a newline after each task","lastModifiedDate":"2023-09-22"},{"lineNumber":132,"author":{"gitId":"eyelessrhyme7"},"content":"            }","lastModifiedDate":"2023-09-22"},{"lineNumber":133,"author":{"gitId":"eyelessrhyme7"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-22"},{"lineNumber":134,"author":{"gitId":"eyelessrhyme7"},"content":"            e.printStackTrace(); // Handle the exception as needed","lastModifiedDate":"2023-09-22"},{"lineNumber":135,"author":{"gitId":"eyelessrhyme7"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":136,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":137,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":138,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":139,"author":{"gitId":"eyelessrhyme7"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"eyelessrhyme7":139}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eyelessrhyme7"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"eyelessrhyme7"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"eyelessrhyme7"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"eyelessrhyme7"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"eyelessrhyme7"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"eyelessrhyme7"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"eyelessrhyme7"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"eyelessrhyme7"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"eyelessrhyme7"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"eyelessrhyme7"},"content":" * The `TaskList` class manages a list of tasks in the Duke application.","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"eyelessrhyme7"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"eyelessrhyme7"},"content":"public class TaskList {","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final int DAYS_IN_A_WEEK \u003d 7;","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final int DAYS_IN_A_MONTH \u003d 30;","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"eyelessrhyme7"},"content":"    public ArrayList\u003cTask\u003e taskArrayList;","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"eyelessrhyme7"},"content":"     * Constructs an empty `TaskList`.","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"eyelessrhyme7"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"eyelessrhyme7"},"content":"        this.taskArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"eyelessrhyme7"},"content":"     * Constructs a `TaskList` with an existing ArrayList of tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param taskArrayList The ArrayList containing tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"eyelessrhyme7"},"content":"    public TaskList(ArrayList taskArrayList) {","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"eyelessrhyme7"},"content":"        this.taskArrayList \u003d taskArrayList;","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"eyelessrhyme7"},"content":"     * Gets a task at the specified index.","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"eyelessrhyme7"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"eyelessrhyme7"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"eyelessrhyme7"},"content":"        return this.taskArrayList.get(index);","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"eyelessrhyme7"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param task The task to add.","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"eyelessrhyme7"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"eyelessrhyme7"},"content":"        this.taskArrayList.add(task);","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"eyelessrhyme7"},"content":"     * Deletes a task at the specified index and returns the deleted task.","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param index The index of the task to delete.","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"eyelessrhyme7"},"content":"     * @return The deleted task.","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"eyelessrhyme7"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"eyelessrhyme7"},"content":"        Task x \u003d this.getTask(index);","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"eyelessrhyme7"},"content":"        this.taskArrayList.remove(index);","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"eyelessrhyme7"},"content":"        return x;","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"eyelessrhyme7"},"content":"     * Gets the size of the task list.","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"eyelessrhyme7"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"eyelessrhyme7"},"content":"    public int getSize() {","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"eyelessrhyme7"},"content":"        return this.taskArrayList.size();","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"eyelessrhyme7"},"content":"     * Converts the task list to a formatted string for display.","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"eyelessrhyme7"},"content":"     * @return A formatted string representing the tasks in the list.","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"eyelessrhyme7"},"content":"    public String toString() {","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"eyelessrhyme7"},"content":"        String botOutput \u003d IntStream.range(0, this.taskArrayList.size())","lastModifiedDate":"2023-09-13"},{"lineNumber":83,"author":{"gitId":"eyelessrhyme7"},"content":"                .mapToObj(i -\u003e (i + 1) + \". \" + this.taskArrayList.get(i))","lastModifiedDate":"2023-09-13"},{"lineNumber":84,"author":{"gitId":"eyelessrhyme7"},"content":"                .collect(Collectors.joining(\"\\n    \"));","lastModifiedDate":"2023-09-13"},{"lineNumber":85,"author":{"gitId":"eyelessrhyme7"},"content":"        return botOutput;","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"eyelessrhyme7"},"content":"     * Filters and returns a TaskList containing tasks due within one week from the current date.","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"eyelessrhyme7"},"content":"     * @return A TaskList containing tasks due within one week.","lastModifiedDate":"2023-09-05"},{"lineNumber":92,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"eyelessrhyme7"},"content":"    public TaskList dueWithinWeek() {","lastModifiedDate":"2023-09-05"},{"lineNumber":94,"author":{"gitId":"eyelessrhyme7"},"content":"        TaskList listWeek \u003d new TaskList();","lastModifiedDate":"2023-09-05"},{"lineNumber":95,"author":{"gitId":"eyelessrhyme7"},"content":"        LocalDateTime currentDate \u003d LocalDateTime.now();","lastModifiedDate":"2023-09-05"},{"lineNumber":96,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":97,"author":{"gitId":"eyelessrhyme7"},"content":"        listWeek.taskArrayList \u003d this.taskArrayList.stream().filter(t -\u003e {","lastModifiedDate":"2023-09-13"},{"lineNumber":98,"author":{"gitId":"eyelessrhyme7"},"content":"            LocalDateTime taskDueDate \u003d t.getUrgencyDate();","lastModifiedDate":"2023-09-13"},{"lineNumber":99,"author":{"gitId":"eyelessrhyme7"},"content":"            long daysDifference \u003d ChronoUnit.DAYS.between(currentDate, taskDueDate);","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"eyelessrhyme7"},"content":"            return daysDifference \u003e\u003d 0 \u0026\u0026 daysDifference \u003c\u003d DAYS_IN_A_WEEK;","lastModifiedDate":"2023-09-13"},{"lineNumber":101,"author":{"gitId":"eyelessrhyme7"},"content":"        }).collect(Collectors.toCollection(ArrayList:: new));","lastModifiedDate":"2023-09-13"},{"lineNumber":102,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":103,"author":{"gitId":"eyelessrhyme7"},"content":"        return listWeek;","lastModifiedDate":"2023-09-05"},{"lineNumber":104,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":107,"author":{"gitId":"eyelessrhyme7"},"content":"     * Filters and returns a TaskList containing tasks due within one month from the current date.","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"eyelessrhyme7"},"content":"     * @return A TaskList containing tasks due within one month.","lastModifiedDate":"2023-09-05"},{"lineNumber":110,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":111,"author":{"gitId":"eyelessrhyme7"},"content":"    public TaskList dueWithinMonth() {","lastModifiedDate":"2023-09-05"},{"lineNumber":112,"author":{"gitId":"eyelessrhyme7"},"content":"        TaskList listMonth \u003d new TaskList();","lastModifiedDate":"2023-09-05"},{"lineNumber":113,"author":{"gitId":"eyelessrhyme7"},"content":"        LocalDateTime currentDate \u003d LocalDateTime.now();","lastModifiedDate":"2023-09-05"},{"lineNumber":114,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":115,"author":{"gitId":"eyelessrhyme7"},"content":"        listMonth.taskArrayList \u003d this.taskArrayList.stream().filter(t -\u003e {","lastModifiedDate":"2023-09-13"},{"lineNumber":116,"author":{"gitId":"eyelessrhyme7"},"content":"            LocalDateTime taskDueDate \u003d t.getUrgencyDate();","lastModifiedDate":"2023-09-13"},{"lineNumber":117,"author":{"gitId":"eyelessrhyme7"},"content":"            long daysDifference \u003d ChronoUnit.DAYS.between(currentDate, taskDueDate);","lastModifiedDate":"2023-09-05"},{"lineNumber":118,"author":{"gitId":"eyelessrhyme7"},"content":"            return daysDifference \u003e\u003d 0 \u0026\u0026 daysDifference \u003c\u003d DAYS_IN_A_MONTH;","lastModifiedDate":"2023-09-13"},{"lineNumber":119,"author":{"gitId":"eyelessrhyme7"},"content":"        }).collect(Collectors.toCollection(ArrayList:: new));","lastModifiedDate":"2023-09-13"},{"lineNumber":120,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":121,"author":{"gitId":"eyelessrhyme7"},"content":"        return listMonth;","lastModifiedDate":"2023-09-05"},{"lineNumber":122,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":123,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":124,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":125,"author":{"gitId":"eyelessrhyme7"},"content":"     * Searches for relevant or matching tasks within the tasklist.","lastModifiedDate":"2023-09-07"},{"lineNumber":126,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":127,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param queryStrings The user\u0027s input query string.","lastModifiedDate":"2023-09-07"},{"lineNumber":128,"author":{"gitId":"eyelessrhyme7"},"content":"     * @return The TaskList of matching tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":129,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":130,"author":{"gitId":"eyelessrhyme7"},"content":"    public TaskList searchMatches(String... queryStrings) {","lastModifiedDate":"2023-09-07"},{"lineNumber":131,"author":{"gitId":"eyelessrhyme7"},"content":"        TaskList listSearches \u003d new TaskList();","lastModifiedDate":"2023-09-05"},{"lineNumber":132,"author":{"gitId":"eyelessrhyme7"},"content":"        for (Task t: this.taskArrayList) {","lastModifiedDate":"2023-09-05"},{"lineNumber":133,"author":{"gitId":"eyelessrhyme7"},"content":"            String taskDescription \u003d t.getDescription();","lastModifiedDate":"2023-09-05"},{"lineNumber":134,"author":{"gitId":"eyelessrhyme7"},"content":"            searchMatchesInTask(listSearches, t, taskDescription, queryStrings);","lastModifiedDate":"2023-09-13"},{"lineNumber":135,"author":{"gitId":"eyelessrhyme7"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":136,"author":{"gitId":"eyelessrhyme7"},"content":"        return listSearches;","lastModifiedDate":"2023-09-13"},{"lineNumber":137,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":138,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":139,"author":{"gitId":"eyelessrhyme7"},"content":"    private static void searchMatchesInTask(TaskList listSearches, Task t, String taskDescription, String[] queryStrings) {","lastModifiedDate":"2023-09-13"},{"lineNumber":140,"author":{"gitId":"eyelessrhyme7"},"content":"        for (String queryString : queryStrings) {","lastModifiedDate":"2023-09-07"},{"lineNumber":141,"author":{"gitId":"eyelessrhyme7"},"content":"            if (taskDescription.contains(queryString)) {","lastModifiedDate":"2023-09-05"},{"lineNumber":142,"author":{"gitId":"eyelessrhyme7"},"content":"                listSearches.addTask(t);","lastModifiedDate":"2023-09-05"},{"lineNumber":143,"author":{"gitId":"eyelessrhyme7"},"content":"                break; //Break the loop if a match is found with any one keyword.","lastModifiedDate":"2023-09-13"},{"lineNumber":144,"author":{"gitId":"eyelessrhyme7"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":145,"author":{"gitId":"eyelessrhyme7"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":146,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":147,"author":{"gitId":"eyelessrhyme7"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"eyelessrhyme7":147}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eyelessrhyme7"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"eyelessrhyme7"},"content":"import java.util.Random;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"eyelessrhyme7"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"eyelessrhyme7"},"content":" * The `Ui` class handles user interface-related functionality, including displaying messages and greetings.","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"eyelessrhyme7"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"eyelessrhyme7"},"content":"public class Ui {","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"eyelessrhyme7"},"content":"    private String greeting;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"eyelessrhyme7"},"content":"    private String exitGreeting;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"eyelessrhyme7"},"content":"    private String horizontalBar;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"eyelessrhyme7"},"content":"    private String[] quotes \u003d {\"Soldier, your mission is clear: Conquer your tasks and bring order to the chaos.\",","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"eyelessrhyme7"},"content":"            \"In the war against procrastination, we\u0027ll fight tooth and nail to victory, soldier!\",","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"eyelessrhyme7"},"content":"            \"Time waits for no one, soldier. Move swiftly and conquer your to-do list.\",","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"eyelessrhyme7"},"content":"            \"In the battle of productivity, we lead from the front, taking down tasks one by one.\",","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"eyelessrhyme7"},"content":"            \"With you in the battlefield of life, against task enemies!\",","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"eyelessrhyme7"},"content":"            \"No retreat, no surrender! We tackle tasks head-on, like true warriors.\",","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"eyelessrhyme7"},"content":"            \"Task enemies beware! We\u0027re on a relentless mission to accomplish it all.\",","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"eyelessrhyme7"},"content":"            \"Every completed task is a step closer to victory. Keep pushing forward!\",","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"eyelessrhyme7"},"content":"            \"No excuses, soldier! You are the commander of your tasks, and victory is the only option.\",","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"eyelessrhyme7"},"content":"            \"With every task you complete, you weaken the forces of chaos and strengthen the fortress of productivity.\",","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"eyelessrhyme7"},"content":"            \"A true warrior of productivity knows that success is achieved through discipline and relentless effort. Keep charging forward!\",","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"eyelessrhyme7"},"content":"            \"Stay vigilant, soldier, for the enemy of progress is cunning. But with diligence, you shall overcome.\"","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"eyelessrhyme7"},"content":"    };","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"eyelessrhyme7"},"content":"    private String logo;","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"eyelessrhyme7"},"content":"     * Constructs a new `Ui` instance with default greetings, horizontal bar, and logo.","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"eyelessrhyme7"},"content":"    public Ui() {","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"eyelessrhyme7"},"content":"        this.greeting \u003d \"Hello, I\u0027m Capt. Price! What can I do for you today, Major?\";","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"eyelessrhyme7"},"content":"        this.exitGreeting \u003d \"Over and out. See you next mission Major!\";","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"eyelessrhyme7"},"content":"        this.horizontalBar \u003d \"-------------------------------------------------\";","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"eyelessrhyme7"},"content":"        this.logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"eyelessrhyme7"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"eyelessrhyme7"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"eyelessrhyme7"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"eyelessrhyme7"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"eyelessrhyme7"},"content":"     * Constructs a new `Ui` instance with custom greetings, horizontal bar, and logo.","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param greeting      The custom greeting message.","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param exitGreeting  The custom exit greeting message.","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param horizontalBar The custom horizontal bar string.","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param logo          The custom logo string.","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"eyelessrhyme7"},"content":"    public Ui(String greeting, String exitGreeting, String horizontalBar, String logo) {","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"eyelessrhyme7"},"content":"        this.greeting \u003d greeting;","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"eyelessrhyme7"},"content":"        this.exitGreeting \u003d exitGreeting;","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"eyelessrhyme7"},"content":"        this.horizontalBar \u003d horizontalBar;","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"eyelessrhyme7"},"content":"        this.logo \u003d logo;","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"eyelessrhyme7"},"content":"     * Formats a message with a horizontal bar and spaces for display.","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param message The message to format.","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"eyelessrhyme7"},"content":"     * @return The formatted message.","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"eyelessrhyme7"},"content":"    private String botMessage(String message) {","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"eyelessrhyme7"},"content":"        String space \u003d \"    \";","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"eyelessrhyme7"},"content":"        return space + this.horizontalBar + \"\\n\" + space + message + \"\\n\" + space + this.horizontalBar;","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"eyelessrhyme7"},"content":"     * Displays the greeting message.","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"eyelessrhyme7"},"content":"    public void displayGreeting() {","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"eyelessrhyme7"},"content":"        System.out.println(this.botMessage(this.greeting));","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"eyelessrhyme7"},"content":"     * Displays the exit greeting message.","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"eyelessrhyme7"},"content":"    public void displayExitGreeting() {","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"eyelessrhyme7"},"content":"        System.out.println(this.botMessage(this.exitGreeting));","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":82,"author":{"gitId":"eyelessrhyme7"},"content":"     * Returns the entry greeting message.","lastModifiedDate":"2023-09-21"},{"lineNumber":83,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":84,"author":{"gitId":"eyelessrhyme7"},"content":"    public String getEntryGreeting() {","lastModifiedDate":"2023-09-21"},{"lineNumber":85,"author":{"gitId":"eyelessrhyme7"},"content":"        return this.greeting;","lastModifiedDate":"2023-09-21"},{"lineNumber":86,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":87,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":88,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"eyelessrhyme7"},"content":"     * Returns the exit greeting message.","lastModifiedDate":"2023-09-07"},{"lineNumber":90,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":91,"author":{"gitId":"eyelessrhyme7"},"content":"    public String getExitGreeting() {","lastModifiedDate":"2023-09-07"},{"lineNumber":92,"author":{"gitId":"eyelessrhyme7"},"content":"        return this.exitGreeting;","lastModifiedDate":"2023-09-07"},{"lineNumber":93,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":95,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":96,"author":{"gitId":"eyelessrhyme7"},"content":"     * Displays a message using the botMessage formatting.","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param message The message to display.","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"eyelessrhyme7"},"content":"    public void displayMessage(String message) {","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"eyelessrhyme7"},"content":"        System.out.println(botMessage(message));","lastModifiedDate":"2023-09-05"},{"lineNumber":102,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":103,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":104,"author":{"gitId":"eyelessrhyme7"},"content":"    public String getQuote() {","lastModifiedDate":"2023-09-21"},{"lineNumber":105,"author":{"gitId":"eyelessrhyme7"},"content":"        Random random \u003d new Random();","lastModifiedDate":"2023-09-21"},{"lineNumber":106,"author":{"gitId":"eyelessrhyme7"},"content":"        int randomIndex \u003d random.nextInt(quotes.length);","lastModifiedDate":"2023-09-21"},{"lineNumber":107,"author":{"gitId":"eyelessrhyme7"},"content":"        return \"\\n\\n `\" + quotes[randomIndex] + \"` \\n     ~ Capt. Price\";","lastModifiedDate":"2023-09-21"},{"lineNumber":108,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":109,"author":{"gitId":"eyelessrhyme7"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"eyelessrhyme7":109}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eyelessrhyme7"},"content":"package duke.task;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"eyelessrhyme7"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"eyelessrhyme7"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"eyelessrhyme7"},"content":"import duke.InvalidTaskCreationException;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"eyelessrhyme7"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"eyelessrhyme7"},"content":" * The `Deadline` class represents a task with a specific deadline in the Duke application.","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"eyelessrhyme7"},"content":" * It is a subclass of the `Task` class.","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"eyelessrhyme7"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"eyelessrhyme7"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"eyelessrhyme7"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"eyelessrhyme7"},"content":"     * Constructs a new `Deadline` task with the specified description and deadline.","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param by          The deadline of the task as a LocalDateTime object.","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"eyelessrhyme7"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"eyelessrhyme7"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"eyelessrhyme7"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"eyelessrhyme7"},"content":"     * Parses user input and creates a `Deadline` task.","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param description The description of the `Deadline` task.","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param by          The deadline as a string to be parsed into a LocalDateTime object.","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"eyelessrhyme7"},"content":"     * @return A `Deadline` task instance.","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"eyelessrhyme7"},"content":"     * @throws InvalidTaskCreationException if the description or deadline is empty.","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"eyelessrhyme7"},"content":"     * @throws DateTimeParseException       if there is an issue parsing the deadline string to LocalDateTime.","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"eyelessrhyme7"},"content":"    public static Deadline deadlineCon(String description, String by) throws InvalidTaskCreationException,","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"eyelessrhyme7"},"content":"            DateTimeParseException {","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"eyelessrhyme7"},"content":"        if (description.equalsIgnoreCase(\"\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"eyelessrhyme7"},"content":"            throw new InvalidTaskCreationException(\"OOPS!!! The description of a Deadline Task cannot be empty.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"eyelessrhyme7"},"content":"        } else if (by.equalsIgnoreCase(\"\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"eyelessrhyme7"},"content":"            throw new InvalidTaskCreationException(\"OOPS!!! The deadline time of a Deadline Task cannot be empty.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"eyelessrhyme7"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"eyelessrhyme7"},"content":"            LocalDateTime deadlineDate \u003d LocalDateTime.parse(by, Task.DATE_TIME_FORMATTER);","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"eyelessrhyme7"},"content":"            return new Deadline(description, deadlineDate);","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"eyelessrhyme7"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"eyelessrhyme7"},"content":"     * Gets the urgency date and time for the `Deadline` task, which is the deadline itself.","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"eyelessrhyme7"},"content":"     * @return The urgency date and time (deadline).","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"eyelessrhyme7"},"content":"    public LocalDateTime getUrgencyDate() {","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"eyelessrhyme7"},"content":"        return this.by;","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"eyelessrhyme7"},"content":"     * Converts the `Deadline` task to a formatted string representation for display.","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"eyelessrhyme7"},"content":"     * @return A formatted string representing the `Deadline` task.","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"eyelessrhyme7"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"eyelessrhyme7"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"eyelessrhyme7"},"content":"        // Format the LocalDateTime object to a string","lastModifiedDate":"2023-09-04"},{"lineNumber":66,"author":{"gitId":"eyelessrhyme7"},"content":"        String formattedDate \u003d this.by.format(Task.OUTPUT_FORMATTER);","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"eyelessrhyme7"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formattedDate + \")\";","lastModifiedDate":"2023-09-04"},{"lineNumber":68,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":70,"author":{"gitId":"eyelessrhyme7"},"content":"    @Override","lastModifiedDate":"2023-09-22"},{"lineNumber":71,"author":{"gitId":"eyelessrhyme7"},"content":"    public String toFileOutput() {","lastModifiedDate":"2023-09-22"},{"lineNumber":72,"author":{"gitId":"eyelessrhyme7"},"content":"        String isDoneString \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-09-22"},{"lineNumber":73,"author":{"gitId":"eyelessrhyme7"},"content":"        return \"D|\" + isDoneString + \"|\" + this.description + \"|\" + this.by;","lastModifiedDate":"2023-09-22"},{"lineNumber":74,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":75,"author":{"gitId":"eyelessrhyme7"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"eyelessrhyme7":75}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eyelessrhyme7"},"content":"package duke.task;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"eyelessrhyme7"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"eyelessrhyme7"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"eyelessrhyme7"},"content":"import duke.InvalidTaskCreationException;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"eyelessrhyme7"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"eyelessrhyme7"},"content":" * The `Event` class represents a task with a specific event time range in the Duke application.","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"eyelessrhyme7"},"content":" * It is a subclass of the `Task` class.","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"eyelessrhyme7"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"eyelessrhyme7"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"eyelessrhyme7"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"eyelessrhyme7"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"eyelessrhyme7"},"content":"     * Constructs a new `Event` task with the specified description and event time range.","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param from        The start time of the event as a LocalDateTime object.","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param to          The end time of the event as a LocalDateTime object.","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"eyelessrhyme7"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"eyelessrhyme7"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"eyelessrhyme7"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"eyelessrhyme7"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"eyelessrhyme7"},"content":"     * Parses user input and creates an `Event` task.","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param description The description of the `Event` task.","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param from        The start time of the event as a string to be parsed into a LocalDateTime object.","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param to          The end time of the event as a string to be parsed into a LocalDateTime object.","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"eyelessrhyme7"},"content":"     * @return An `Event` task instance.","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"eyelessrhyme7"},"content":"     * @throws InvalidTaskCreationException if the description, start time, or end time is empty.","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"eyelessrhyme7"},"content":"     * @throws DateTimeParseException       if there is an issue parsing the start or end time strings to LocalDateTime.","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"eyelessrhyme7"},"content":"    public static Event eventCon(String description, String from, String to) throws InvalidTaskCreationException,","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"eyelessrhyme7"},"content":"            DateTimeParseException {","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"eyelessrhyme7"},"content":"        if (description.equalsIgnoreCase(\"\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"eyelessrhyme7"},"content":"            throw new InvalidTaskCreationException(\"OOPS!!! The description of a Event Task cannot be empty.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"eyelessrhyme7"},"content":"        } else if (from.equalsIgnoreCase(\"\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"eyelessrhyme7"},"content":"            throw new InvalidTaskCreationException(\"OOPS!!! The from time of a Event Task cannot be empty.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"eyelessrhyme7"},"content":"        } else if (to.equalsIgnoreCase(\"\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"eyelessrhyme7"},"content":"            throw new InvalidTaskCreationException(\"OOPS!!! The to time of a Event Task cannot be empty.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"eyelessrhyme7"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"eyelessrhyme7"},"content":"            LocalDateTime eventStartTimeDate \u003d LocalDateTime.parse(from, Task.DATE_TIME_FORMATTER);","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"eyelessrhyme7"},"content":"            LocalDateTime eventEndTimeDate \u003d LocalDateTime.parse(to, Task.DATE_TIME_FORMATTER);","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"eyelessrhyme7"},"content":"            return new Event(description, eventStartTimeDate, eventEndTimeDate);","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"eyelessrhyme7"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"eyelessrhyme7"},"content":"     * Gets the urgency date and time for the `Event` task, which is the start time of the event.","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"eyelessrhyme7"},"content":"     * @return The urgency date and time (start time).","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"eyelessrhyme7"},"content":"    public LocalDateTime getUrgencyDate() {","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"eyelessrhyme7"},"content":"        return this.from;","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"eyelessrhyme7"},"content":"     * Converts the `Event` task to a formatted string representation for display.","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"eyelessrhyme7"},"content":"     * @return A formatted string representing the `Event` task.","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"eyelessrhyme7"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"eyelessrhyme7"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"eyelessrhyme7"},"content":"        String formattedDateFrom \u003d this.from.format(Task.OUTPUT_FORMATTER);","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"eyelessrhyme7"},"content":"        String formattedDateTo \u003d this.to.format(Task.OUTPUT_FORMATTER);","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"eyelessrhyme7"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + formattedDateFrom + \" to: \" + formattedDateTo + \")\";","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":77,"author":{"gitId":"eyelessrhyme7"},"content":"    @Override","lastModifiedDate":"2023-09-22"},{"lineNumber":78,"author":{"gitId":"eyelessrhyme7"},"content":"    public String toFileOutput() {","lastModifiedDate":"2023-09-22"},{"lineNumber":79,"author":{"gitId":"eyelessrhyme7"},"content":"        String isDoneString \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-09-22"},{"lineNumber":80,"author":{"gitId":"eyelessrhyme7"},"content":"        return \"E|\" + isDoneString + \"|\" + this.description + \"|\" + this.from;","lastModifiedDate":"2023-09-22"},{"lineNumber":81,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":82,"author":{"gitId":"eyelessrhyme7"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"eyelessrhyme7":82}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eyelessrhyme7"},"content":"package duke.task;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"eyelessrhyme7"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"eyelessrhyme7"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"eyelessrhyme7"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"eyelessrhyme7"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"eyelessrhyme7"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"eyelessrhyme7"},"content":"import duke.InvalidCommandException;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"eyelessrhyme7"},"content":"import duke.InvalidTaskCreationException;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"eyelessrhyme7"},"content":"import duke.ParserException;","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"eyelessrhyme7"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"eyelessrhyme7"},"content":" * The `Task` class represents a task in the Duke application. It serves as the base class for different types of tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"eyelessrhyme7"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"eyelessrhyme7"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"eyelessrhyme7"},"content":"    // Date and Time formats","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final String DATE_FORMAT \u003d \"yyyy-MM-dd\";","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final String DATE_TIME_FORMAT \u003d \"yyyy-MM-dd HH:mm:ss\";","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(DATE_TIME_FORMAT);","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"HH:mm, dd MMMM yyyy\");","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final int BEGIN_INDEX_TODO \u003d 5;","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final int BEGIN_INDEX_DEADLINE \u003d 9;","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final int BEGIN_INDEX_EVENT \u003d 6;","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"eyelessrhyme7"},"content":"    protected String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"eyelessrhyme7"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"eyelessrhyme7"},"content":"    protected ArrayList\u003cString\u003e tagsList;","lastModifiedDate":"2023-09-14"},{"lineNumber":28,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":29,"author":{"gitId":"eyelessrhyme7"},"content":"    protected Task parentTask;","lastModifiedDate":"2023-09-14"},{"lineNumber":30,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":31,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"eyelessrhyme7"},"content":"     * Constructs a new `Task` with the specified description.","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"eyelessrhyme7"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"eyelessrhyme7"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"eyelessrhyme7"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"eyelessrhyme7"},"content":"        this.tagsList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-14"},{"lineNumber":40,"author":{"gitId":"eyelessrhyme7"},"content":"        this.parentTask \u003d null;","lastModifiedDate":"2023-09-14"},{"lineNumber":41,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"eyelessrhyme7"},"content":"     * Parses user input and creates a specific type of task (Todo, Deadline, or Event).","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param userInput The user input to parse.","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"eyelessrhyme7"},"content":"     * @return An instance of a specific task type (Todo, Deadline, or Event).","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"eyelessrhyme7"},"content":"     * @throws InvalidCommandException      if the user input does not match any valid command.","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"eyelessrhyme7"},"content":"     * @throws InvalidTaskCreationException if there is an issue creating the task from the input.","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"eyelessrhyme7"},"content":"     * @throws DateTimeParseException       if there is an issue parsing date and time.","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"eyelessrhyme7"},"content":"    public static Task taskCon(String userInput) throws InvalidCommandException, InvalidTaskCreationException,","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"eyelessrhyme7"},"content":"            DateTimeParseException {","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"eyelessrhyme7"},"content":"        if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"eyelessrhyme7"},"content":"            try {","lastModifiedDate":"2023-09-22"},{"lineNumber":57,"author":{"gitId":"eyelessrhyme7"},"content":"                return ToDo.toDoCon(userInput.substring(BEGIN_INDEX_TODO));","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"eyelessrhyme7"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-22"},{"lineNumber":59,"author":{"gitId":"eyelessrhyme7"},"content":"                throw new InvalidTaskCreationException(\"Please enter todo task creation in the following format\" +","lastModifiedDate":"2023-09-22"},{"lineNumber":60,"author":{"gitId":"eyelessrhyme7"},"content":"                        \": \u0027todo taskName\u0027\");","lastModifiedDate":"2023-09-22"},{"lineNumber":61,"author":{"gitId":"eyelessrhyme7"},"content":"            }","lastModifiedDate":"2023-09-22"},{"lineNumber":62,"author":{"gitId":"eyelessrhyme7"},"content":"        } else if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"eyelessrhyme7"},"content":"            try {","lastModifiedDate":"2023-09-22"},{"lineNumber":65,"author":{"gitId":"eyelessrhyme7"},"content":"                String[] splitInput \u003d userInput.split(\"/by\");","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"eyelessrhyme7"},"content":"                String taskDescription \u003d splitInput[0].substring(BEGIN_INDEX_DEADLINE).trim();","lastModifiedDate":"2023-09-13"},{"lineNumber":67,"author":{"gitId":"eyelessrhyme7"},"content":"                String deadline \u003d splitInput[1].trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"eyelessrhyme7"},"content":"                return Deadline.deadlineCon(taskDescription, deadline);","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"eyelessrhyme7"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-22"},{"lineNumber":71,"author":{"gitId":"eyelessrhyme7"},"content":"                throw new InvalidTaskCreationException(\"Please enter deadline task creation in the following format\" +","lastModifiedDate":"2023-09-22"},{"lineNumber":72,"author":{"gitId":"eyelessrhyme7"},"content":"                        \": \u0027deadline taskName /by 2023-10-31 23:59:00\u0027\");","lastModifiedDate":"2023-09-22"},{"lineNumber":73,"author":{"gitId":"eyelessrhyme7"},"content":"            }","lastModifiedDate":"2023-09-22"},{"lineNumber":74,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"eyelessrhyme7"},"content":"        } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"eyelessrhyme7"},"content":"            try {","lastModifiedDate":"2023-09-22"},{"lineNumber":78,"author":{"gitId":"eyelessrhyme7"},"content":"                String[] splitInput \u003d userInput.split(\"/from\");","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"eyelessrhyme7"},"content":"                String taskDescription \u003d splitInput[0].substring(BEGIN_INDEX_EVENT).trim();","lastModifiedDate":"2023-09-13"},{"lineNumber":80,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":81,"author":{"gitId":"eyelessrhyme7"},"content":"                String[] eventDetails \u003d splitInput[1].split(\"/to\");","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"eyelessrhyme7"},"content":"                String eventStartTime \u003d eventDetails[0].trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"eyelessrhyme7"},"content":"                String eventEndTime \u003d eventDetails[1].trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"eyelessrhyme7"},"content":"                return Event.eventCon(taskDescription, eventStartTime, eventEndTime);","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"eyelessrhyme7"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-22"},{"lineNumber":87,"author":{"gitId":"eyelessrhyme7"},"content":"                throw new InvalidTaskCreationException(\"Please enter event task creation in the following format\" +","lastModifiedDate":"2023-09-22"},{"lineNumber":88,"author":{"gitId":"eyelessrhyme7"},"content":"                        \": \u0027event taskName /from 2023-10-31 23:59:00 /to 2023-11-02 23:59:00\u0027\");","lastModifiedDate":"2023-09-22"},{"lineNumber":89,"author":{"gitId":"eyelessrhyme7"},"content":"            }","lastModifiedDate":"2023-09-22"},{"lineNumber":90,"author":{"gitId":"eyelessrhyme7"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"eyelessrhyme7"},"content":"            throw new InvalidCommandException(\"Invalid command to add task!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"eyelessrhyme7"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":96,"author":{"gitId":"eyelessrhyme7"},"content":"     * Gets the urgency date and time for the task.","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"eyelessrhyme7"},"content":"     * @return The urgency date and time.","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"eyelessrhyme7"},"content":"    public LocalDateTime getUrgencyDate() {","lastModifiedDate":"2023-09-04"},{"lineNumber":101,"author":{"gitId":"eyelessrhyme7"},"content":"        return LocalDateTime.now();","lastModifiedDate":"2023-09-04"},{"lineNumber":102,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":103,"author":{"gitId":"eyelessrhyme7"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-05"},{"lineNumber":104,"author":{"gitId":"eyelessrhyme7"},"content":"        return this.description;","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":107,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"eyelessrhyme7"},"content":"     * Gets the status icon for the task (either \"X\" for done or \" \" for not done).","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":110,"author":{"gitId":"eyelessrhyme7"},"content":"     * @return The status icon.","lastModifiedDate":"2023-09-05"},{"lineNumber":111,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":112,"author":{"gitId":"eyelessrhyme7"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"eyelessrhyme7"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":117,"author":{"gitId":"eyelessrhyme7"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-09-05"},{"lineNumber":118,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":119,"author":{"gitId":"eyelessrhyme7"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":120,"author":{"gitId":"eyelessrhyme7"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":121,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":122,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":123,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":124,"author":{"gitId":"eyelessrhyme7"},"content":"     * Marks the task as undone.","lastModifiedDate":"2023-09-05"},{"lineNumber":125,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":126,"author":{"gitId":"eyelessrhyme7"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":127,"author":{"gitId":"eyelessrhyme7"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":128,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":129,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":130,"author":{"gitId":"eyelessrhyme7"},"content":"    public void addTags(String... tags) {","lastModifiedDate":"2023-09-14"},{"lineNumber":131,"author":{"gitId":"eyelessrhyme7"},"content":"        tagsList.addAll(Arrays.asList(tags));","lastModifiedDate":"2023-09-14"},{"lineNumber":132,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":133,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":134,"author":{"gitId":"eyelessrhyme7"},"content":"    public String printTags() {","lastModifiedDate":"2023-09-14"},{"lineNumber":135,"author":{"gitId":"eyelessrhyme7"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-09-14"},{"lineNumber":136,"author":{"gitId":"eyelessrhyme7"},"content":"        for (String tag : this.tagsList) {","lastModifiedDate":"2023-09-14"},{"lineNumber":137,"author":{"gitId":"eyelessrhyme7"},"content":"            result.append(\"#\").append(tag).append(\" \");","lastModifiedDate":"2023-09-14"},{"lineNumber":138,"author":{"gitId":"eyelessrhyme7"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":139,"author":{"gitId":"eyelessrhyme7"},"content":"        return result.toString().trim(); // Remove trailing space","lastModifiedDate":"2023-09-14"},{"lineNumber":140,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":141,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":142,"author":{"gitId":"eyelessrhyme7"},"content":"    private String printDoAfter() {","lastModifiedDate":"2023-09-22"},{"lineNumber":143,"author":{"gitId":"eyelessrhyme7"},"content":"        if (this.parentTask \u003d\u003d null) {","lastModifiedDate":"2023-09-14"},{"lineNumber":144,"author":{"gitId":"eyelessrhyme7"},"content":"            return \"DoAfter : \" + \"NONE\";","lastModifiedDate":"2023-09-21"},{"lineNumber":145,"author":{"gitId":"eyelessrhyme7"},"content":"        } else {","lastModifiedDate":"2023-09-14"},{"lineNumber":146,"author":{"gitId":"eyelessrhyme7"},"content":"            return \"DoAfter : \" + this.parentTask.description;","lastModifiedDate":"2023-09-14"},{"lineNumber":147,"author":{"gitId":"eyelessrhyme7"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":148,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":149,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":150,"author":{"gitId":"eyelessrhyme7"},"content":"    public void setParentTask(Task parent) {","lastModifiedDate":"2023-09-14"},{"lineNumber":151,"author":{"gitId":"eyelessrhyme7"},"content":"        this.parentTask \u003d parent;","lastModifiedDate":"2023-09-14"},{"lineNumber":152,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":153,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":154,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":155,"author":{"gitId":"eyelessrhyme7"},"content":"     * Converts the task to a formatted string representation for display.","lastModifiedDate":"2023-09-05"},{"lineNumber":156,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":157,"author":{"gitId":"eyelessrhyme7"},"content":"     * @return A formatted string representing the task.","lastModifiedDate":"2023-09-05"},{"lineNumber":158,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":159,"author":{"gitId":"eyelessrhyme7"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":160,"author":{"gitId":"eyelessrhyme7"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":161,"author":{"gitId":"eyelessrhyme7"},"content":"        return \"[\" + getStatusIcon() + \"]\" + \" \" + this.description + \" \" + this.printTags() + \" | \" + this.printDoAfter() + \" | \";","lastModifiedDate":"2023-09-14"},{"lineNumber":162,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":163,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":164,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":165,"author":{"gitId":"eyelessrhyme7"},"content":"     * Gets the parent task for the task (either \"X\" or null for no parent).","lastModifiedDate":"2023-09-22"},{"lineNumber":166,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":167,"author":{"gitId":"eyelessrhyme7"},"content":"     * @return The parent task.","lastModifiedDate":"2023-09-22"},{"lineNumber":168,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":169,"author":{"gitId":"eyelessrhyme7"},"content":"    public Task getParentTask() {","lastModifiedDate":"2023-09-22"},{"lineNumber":170,"author":{"gitId":"eyelessrhyme7"},"content":"        return this.parentTask;","lastModifiedDate":"2023-09-22"},{"lineNumber":171,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":172,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":173,"author":{"gitId":"eyelessrhyme7"},"content":"    public String toFileOutput() {","lastModifiedDate":"2023-09-22"},{"lineNumber":174,"author":{"gitId":"eyelessrhyme7"},"content":"        return \"Task\";","lastModifiedDate":"2023-09-22"},{"lineNumber":175,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":176,"author":{"gitId":"eyelessrhyme7"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"eyelessrhyme7":176}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eyelessrhyme7"},"content":"package duke.task;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"eyelessrhyme7"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"eyelessrhyme7"},"content":"import duke.InvalidTaskCreationException;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"eyelessrhyme7"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"eyelessrhyme7"},"content":" * The `ToDo` class represents a simple task without a specific deadline or event time range in the Duke application.","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"eyelessrhyme7"},"content":" * It is a subclass of the `Task` class.","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"eyelessrhyme7"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"eyelessrhyme7"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"eyelessrhyme7"},"content":"     * Constructs a new `ToDo` task with the specified description.","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"eyelessrhyme7"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"eyelessrhyme7"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"eyelessrhyme7"},"content":"     * Parses user input and creates a `ToDo` task.","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param description The description of the `ToDo` task.","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"eyelessrhyme7"},"content":"     * @return A `ToDo` task instance.","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"eyelessrhyme7"},"content":"     * @throws InvalidTaskCreationException if the description is empty.","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"eyelessrhyme7"},"content":"    public static ToDo toDoCon(String description) throws InvalidTaskCreationException {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"eyelessrhyme7"},"content":"        if (description.equalsIgnoreCase(\"\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"eyelessrhyme7"},"content":"            throw new InvalidTaskCreationException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"eyelessrhyme7"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"eyelessrhyme7"},"content":"        return new ToDo(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"eyelessrhyme7"},"content":"     * Gets the urgency date and time for the `ToDo` task, which is the current date and time.","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"eyelessrhyme7"},"content":"     * @return The urgency date and time (current date and time).","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"eyelessrhyme7"},"content":"    public LocalDateTime getUrgencyDate() {","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"eyelessrhyme7"},"content":"        return LocalDateTime.now();","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"eyelessrhyme7"},"content":"     * Converts the `ToDo` task to a formatted string representation for display.","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"eyelessrhyme7"},"content":"     * @return A formatted string representing the `ToDo` task.","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"eyelessrhyme7"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"eyelessrhyme7"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"eyelessrhyme7"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":55,"author":{"gitId":"eyelessrhyme7"},"content":"    @Override","lastModifiedDate":"2023-09-22"},{"lineNumber":56,"author":{"gitId":"eyelessrhyme7"},"content":"    public String toFileOutput() {","lastModifiedDate":"2023-09-22"},{"lineNumber":57,"author":{"gitId":"eyelessrhyme7"},"content":"        String isDoneString \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-09-22"},{"lineNumber":58,"author":{"gitId":"eyelessrhyme7"},"content":"        return \"T|\" + isDoneString + \"|\" + this.description;","lastModifiedDate":"2023-09-22"},{"lineNumber":59,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":60,"author":{"gitId":"eyelessrhyme7"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"eyelessrhyme7":60}},{"path":"src/main/resources/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"eyelessrhyme7"},"content":"T|1|read book","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"eyelessrhyme7"},"content":"D|0|return book|2023-09-06 18:30:00","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"eyelessrhyme7"},"content":"D|0|submit quiz|2023-09-08 23:59:00","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"eyelessrhyme7"},"content":"D|0|return book|2023-10-02 23:59:00","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"eyelessrhyme7"},"content":"E|0|project meeting|2023-09-13 18:30:00|2023-09-13 20:30:00","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"eyelessrhyme7"},"content":"T|1|join sports club","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"eyelessrhyme7":6}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"eyelessrhyme7"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"eyelessrhyme7"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"eyelessrhyme7"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"eyelessrhyme7"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"eyelessrhyme7"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"eyelessrhyme7"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"eyelessrhyme7"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"eyelessrhyme7"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"eyelessrhyme7"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"eyelessrhyme7"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"eyelessrhyme7"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"eyelessrhyme7"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"eyelessrhyme7"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"eyelessrhyme7"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"eyelessrhyme7"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"eyelessrhyme7"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"eyelessrhyme7"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"eyelessrhyme7":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"eyelessrhyme7"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"eyelessrhyme7"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"eyelessrhyme7"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"eyelessrhyme7"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"eyelessrhyme7"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"eyelessrhyme7"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"eyelessrhyme7"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"605.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\" style\u003d\"-fx-background-color: #0F053B;\"\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"eyelessrhyme7"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"eyelessrhyme7"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"524.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"eyelessrhyme7"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"524.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" style\u003d\"-fx-background-color: #9287FA;\"/\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"eyelessrhyme7"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"600.0\" vvalue\u003d\"1.0\"  \u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"eyelessrhyme7"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"eyelessrhyme7"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"600.0\" style\u003d\"-fx-background-color: #0F053B;\"/\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"eyelessrhyme7"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"eyelessrhyme7"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"eyelessrhyme7"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"eyelessrhyme7"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"eyelessrhyme7":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eyelessrhyme7"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"eyelessrhyme7"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"eyelessrhyme7"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"eyelessrhyme7"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"eyelessrhyme7"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"eyelessrhyme7"},"content":"class ParserTest {","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"eyelessrhyme7"},"content":"    @Test","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"eyelessrhyme7"},"content":"    @DisplayName(\"Test assert ParserException in parseMark (when invalid Task number passed)\")","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"eyelessrhyme7"},"content":"    public void parseMark_invalidTaskNo_throwsParserException() {","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"eyelessrhyme7"},"content":"        Exception parserException \u003d assertThrows(duke.ParserException.class, ()","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"eyelessrhyme7"},"content":"                -\u003e new Parser().parseMark(\"mark 6\", new TaskList()));","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"eyelessrhyme7"},"content":"        assertEquals(\"Please enter valid Task No. to mark!\", parserException.getMessage());","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"eyelessrhyme7"},"content":"    @Test","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"eyelessrhyme7"},"content":"    @DisplayName(\"Test assert ParserException in parseMark (when non-int argument passed)\")","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"eyelessrhyme7"},"content":"    public void parseMark_nonIntArgument_throwsParserException() {","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"eyelessrhyme7"},"content":"        Exception parserException \u003d assertThrows(duke.ParserException.class, ()","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"eyelessrhyme7"},"content":"                -\u003e new Parser().parseMark(\"mark f\", new TaskList()));","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"eyelessrhyme7"},"content":"        assertEquals(\"Please enter valid Task No. (INTEGER) to mark in the format: \u0027mark 4\u0027\",","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"eyelessrhyme7"},"content":"                parserException.getMessage());","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"eyelessrhyme7"},"content":"    @Test","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"eyelessrhyme7"},"content":"    @DisplayName(\"Test assert ParserException in parseDelete (when non-int argument passed)\")","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"eyelessrhyme7"},"content":"    public void parseDelete_nonIntArgument_throwsParserException() {","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"eyelessrhyme7"},"content":"        Exception parserException \u003d assertThrows(duke.ParserException.class, ()","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"eyelessrhyme7"},"content":"                -\u003e new Parser().parseDelete(\"delete f\", new TaskList()));","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"eyelessrhyme7"},"content":"        assertEquals(\"Please enter valid Task No. (INTEGER) to delete in the format: \u0027delete 4\u0027\",","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"eyelessrhyme7"},"content":"                parserException.getMessage());","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":36,"author":{"gitId":"eyelessrhyme7"},"content":"    @Test","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"eyelessrhyme7"},"content":"    @DisplayName(\"Test assert ParserException in parseDelete (when invalid TaskNo argument passed)\")","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"eyelessrhyme7"},"content":"    public void parseDelete_invalidTaskNo_throwsParserException() {","lastModifiedDate":"2023-09-22"},{"lineNumber":39,"author":{"gitId":"eyelessrhyme7"},"content":"        Exception parserException \u003d assertThrows(duke.ParserException.class, ()","lastModifiedDate":"2023-09-22"},{"lineNumber":40,"author":{"gitId":"eyelessrhyme7"},"content":"                -\u003e new Parser().parseDelete(\"delete 9\", new TaskList()));","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"eyelessrhyme7"},"content":"        assertEquals(\"Please enter valid Task No. to delete!\",","lastModifiedDate":"2023-09-22"},{"lineNumber":42,"author":{"gitId":"eyelessrhyme7"},"content":"                parserException.getMessage());","lastModifiedDate":"2023-09-22"},{"lineNumber":43,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":44,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":45,"author":{"gitId":"eyelessrhyme7"},"content":"    @Test","lastModifiedDate":"2023-09-22"},{"lineNumber":46,"author":{"gitId":"eyelessrhyme7"},"content":"    @DisplayName(\"Test assert ParserException in parseTag (when non-int argument passed)\")","lastModifiedDate":"2023-09-22"},{"lineNumber":47,"author":{"gitId":"eyelessrhyme7"},"content":"    public void parseTag_invalidTaskNo_throwsParserException() {","lastModifiedDate":"2023-09-22"},{"lineNumber":48,"author":{"gitId":"eyelessrhyme7"},"content":"        Exception parserException \u003d assertThrows(duke.ParserException.class, ()","lastModifiedDate":"2023-09-22"},{"lineNumber":49,"author":{"gitId":"eyelessrhyme7"},"content":"                -\u003e new Parser().parseTag(\"tag g fun sport\", new TaskList()));","lastModifiedDate":"2023-09-22"},{"lineNumber":50,"author":{"gitId":"eyelessrhyme7"},"content":"        assertEquals(\"Please enter valid Task No. (INTEGER) to tag in the format: \u0027tag 4 fun sport\u0027\",","lastModifiedDate":"2023-09-22"},{"lineNumber":51,"author":{"gitId":"eyelessrhyme7"},"content":"                parserException.getMessage());","lastModifiedDate":"2023-09-22"},{"lineNumber":52,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":53,"author":{"gitId":"eyelessrhyme7"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"eyelessrhyme7":53}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eyelessrhyme7"},"content":"package duke.task;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"eyelessrhyme7"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"eyelessrhyme7"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"eyelessrhyme7"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"eyelessrhyme7"},"content":"public class TodoTest {","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"eyelessrhyme7"},"content":"    @Test","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"eyelessrhyme7"},"content":"    @DisplayName(\"Test assert Todo Creation\")","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"eyelessrhyme7"},"content":"    public void creation() {","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"eyelessrhyme7"},"content":"        ToDo todo1 \u003d new ToDo(\"Read notes\");","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"eyelessrhyme7"},"content":"        ToDo todo2 \u003d new ToDo(\"Read notes\");","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"eyelessrhyme7"},"content":"        assertEquals(todo1.toString(), todo2.toString());","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"eyelessrhyme7"},"content":"    @Test","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"eyelessrhyme7"},"content":"    @DisplayName(\"Test assert Todo UrgencyDate\")","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"eyelessrhyme7"},"content":"    public void urgencyDate() {","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"eyelessrhyme7"},"content":"        ToDo todo1 \u003d new ToDo(\"Complete Quiz\");","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"eyelessrhyme7"},"content":"        ToDo todo2 \u003d new ToDo(\"Complete Quiz 4\");","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"eyelessrhyme7"},"content":"        assertEquals(todo1.getUrgencyDate().getHour(), todo2.getUrgencyDate().getHour());","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"eyelessrhyme7"},"content":"    @Test","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"eyelessrhyme7"},"content":"    @DisplayName(\"Test assert Todo Parent Task\")","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"eyelessrhyme7"},"content":"    public void parentTask() {","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"eyelessrhyme7"},"content":"        ToDo todo1 \u003d new ToDo(\"Complete Quiz\");","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"eyelessrhyme7"},"content":"        ToDo todo2 \u003d new ToDo(\"Complete Quiz 4\");","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"eyelessrhyme7"},"content":"        assertEquals(todo1.getParentTask(), todo2.getParentTask());","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"eyelessrhyme7"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"eyelessrhyme7":30}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"eyelessrhyme7"},"content":"todo quiz","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"eyelessrhyme7"},"content":"deadline lab /by Monday 7pm","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"eyelessrhyme7"},"content":"event sharing /from Monday 7pm /to Friday 10pm","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"eyelessrhyme7"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"eyelessrhyme7":4}}]
