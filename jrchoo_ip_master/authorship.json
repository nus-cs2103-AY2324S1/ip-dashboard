[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jrchoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"jrchoo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"jrchoo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"jrchoo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"jrchoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"jrchoo"},"content":"    private final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"jrchoo"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"jrchoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"jrchoo"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"jrchoo"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"jrchoo"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"jrchoo"},"content":"            this.by \u003d LocalDateTime.parse(by, formatter);","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"jrchoo"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"jrchoo"},"content":"            System.out.println(\"Date given is in an invalid format.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"jrchoo"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"jrchoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"jrchoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"jrchoo"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"jrchoo"},"content":"    public String toString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"jrchoo"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by.format(DateTimeFormatter.ofPattern(\"d MMM yyyy h:mm a\")) + \")\";","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"jrchoo"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"jrchoo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"jrchoo"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"jrchoo"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"jrchoo"},"content":"        return \"D\" + super.getDescription() + \" | \" + this.by.format(formatter);","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"jrchoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"jrchoo"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jrchoo":27}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jrchoo"},"content":"import java.io.*;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"jrchoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"jrchoo"},"content":"import java.util.List;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"jrchoo"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"jrchoo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"jrchoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"jrchoo"},"content":"    private enum Commands {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"jrchoo"},"content":"        todo, deadline, event, mark, unmark, list, delete, bye;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"jrchoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"jrchoo"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"jrchoo"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"jrchoo"},"content":"            File gideon \u003d new File(\"./data/gideon.txt\");","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"jrchoo"},"content":"            if (gideon.createNewFile()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"jrchoo"},"content":"                System.out.println(\"File created: \" + gideon.getName());","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"jrchoo"},"content":"            } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"jrchoo"},"content":"                System.out.println(\"Opening saved file.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"jrchoo"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"jrchoo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"jrchoo"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(gideon));","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"jrchoo"},"content":"            String currentLine;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"jrchoo"},"content":"            while ((currentLine \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"jrchoo"},"content":"                System.out.println(currentLine);","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"jrchoo"},"content":"                String[] taskInfo \u003d currentLine.split(\"\\\\|\");","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"jrchoo"},"content":"                String type \u003d taskInfo[0].trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"jrchoo"},"content":"                String status \u003d taskInfo[1];","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"jrchoo"},"content":"                String description \u003d taskInfo[2].trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"jrchoo"},"content":"                if (\"T\".equals(type)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"jrchoo"},"content":"                    Todo todo \u003d new Todo(description);","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"jrchoo"},"content":"                    if (\"X\".equals(status)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"jrchoo"},"content":"                        todo.markAsDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"jrchoo"},"content":"                    }","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"jrchoo"},"content":"                    tasks.add(todo);","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"jrchoo"},"content":"                } else if (\"D\".equals(type)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"jrchoo"},"content":"                    String by \u003d taskInfo[3];","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"jrchoo"},"content":"                    Deadline deadline \u003d new Deadline(description, by.trim());","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"jrchoo"},"content":"                    if (\"X\".equals(status)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"jrchoo"},"content":"                        deadline.markAsDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"jrchoo"},"content":"                    }","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"jrchoo"},"content":"                    tasks.add(deadline);","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"jrchoo"},"content":"                } else if (\"E\".equals(type)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"jrchoo"},"content":"                    String[] duration \u003d taskInfo[3].split(\"-\");","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"jrchoo"},"content":"                    String from \u003d duration[0];","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"jrchoo"},"content":"                    String to \u003d duration[1];","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"jrchoo"},"content":"                    Event event \u003d new Event(description, from, to);","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"jrchoo"},"content":"                    if (\"X\".equals(status)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"jrchoo"},"content":"                        event.markAsDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"jrchoo"},"content":"                    }","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"jrchoo"},"content":"                    tasks.add(event);","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"jrchoo"},"content":"                } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"jrchoo"},"content":"                    System.out.println(\"There are no tasks.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"jrchoo"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"jrchoo"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"jrchoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"jrchoo"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(gideon, true));","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"jrchoo"},"content":"            Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"jrchoo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"jrchoo"},"content":"            System.out.println(\"Hello! I\u0027m Gideon\");","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"jrchoo"},"content":"            System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"jrchoo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"jrchoo"},"content":"            while (true) {","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"jrchoo"},"content":"                String userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"jrchoo"},"content":"                if (userInput.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"jrchoo"},"content":"                    System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"jrchoo"},"content":"                    break;","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"jrchoo"},"content":"                } else if (userInput.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"jrchoo"},"content":"                    System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"jrchoo"},"content":"                    for(int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"jrchoo"},"content":"                        System.out.println((i + 1) + \". \" + tasks.get(i).toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"jrchoo"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"jrchoo"},"content":"                } else if (userInput.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"jrchoo"},"content":"                    try {","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"jrchoo"},"content":"                        int id \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"jrchoo"},"content":"                        Task markedTask \u003d tasks.get(id - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"jrchoo"},"content":"                        markedTask.markAsDone();","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"jrchoo"},"content":"                        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"jrchoo"},"content":"                        System.out.println(markedTask.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"jrchoo"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"jrchoo"},"content":"                        System.out.println(\"To mark a task you need to include the index\");","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"jrchoo"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"jrchoo"},"content":"                } else if (userInput.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"jrchoo"},"content":"                    try {","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"jrchoo"},"content":"                        int id \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"jrchoo"},"content":"                        Task unmarkedTask \u003d tasks.get(id - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"jrchoo"},"content":"                        unmarkedTask.markAsUnDone();","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"jrchoo"},"content":"                        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"jrchoo"},"content":"                        System.out.println(unmarkedTask.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"jrchoo"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"jrchoo"},"content":"                        System.out.println(\"To unmark a task you need to include the index\");","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"jrchoo"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"jrchoo"},"content":"                } else if (userInput.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"jrchoo"},"content":"                    int id \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"jrchoo"},"content":"                    Task unmarkedTask \u003d tasks.get(id - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"jrchoo"},"content":"                    unmarkedTask.markAsUnDone();","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"jrchoo"},"content":"                    System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"jrchoo"},"content":"                    System.out.println(unmarkedTask.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"jrchoo"},"content":"                } else if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"jrchoo"},"content":"                    try {","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"jrchoo"},"content":"                        String description \u003d userInput.substring(5);","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"jrchoo"},"content":"                        Todo todo \u003d new Todo(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"jrchoo"},"content":"                        tasks.add(todo);","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"jrchoo"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"jrchoo"},"content":"                        writer.write(todo.getDescription().concat(\"\\n\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"jrchoo"},"content":"                        System.out.println(todo.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"jrchoo"},"content":"                        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":107,"author":{"gitId":"jrchoo"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"jrchoo"},"content":"                        System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"jrchoo"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"jrchoo"},"content":"                } else if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"jrchoo"},"content":"                    try {","lastModifiedDate":"2023-08-24"},{"lineNumber":112,"author":{"gitId":"jrchoo"},"content":"                        int index \u003d userInput.indexOf(\"/\");","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"jrchoo"},"content":"                        String description \u003d userInput.substring(9, index - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"jrchoo"},"content":"                        String by \u003d userInput.substring(index + 3);","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"jrchoo"},"content":"                        Deadline deadline \u003d new Deadline(description, by.trim());","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"jrchoo"},"content":"                        tasks.add(deadline);","lastModifiedDate":"2023-08-24"},{"lineNumber":117,"author":{"gitId":"jrchoo"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":118,"author":{"gitId":"jrchoo"},"content":"                        writer.write(deadline.getDescription().concat(\"\\n\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"jrchoo"},"content":"                        System.out.println(deadline.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"jrchoo"},"content":"                        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":121,"author":{"gitId":"jrchoo"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":122,"author":{"gitId":"jrchoo"},"content":"                        System.out.println(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":123,"author":{"gitId":"jrchoo"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":124,"author":{"gitId":"jrchoo"},"content":"                } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":125,"author":{"gitId":"jrchoo"},"content":"                    try {","lastModifiedDate":"2023-08-24"},{"lineNumber":126,"author":{"gitId":"jrchoo"},"content":"                        int indexOfFrom \u003d userInput.indexOf(\"/\");","lastModifiedDate":"2023-08-24"},{"lineNumber":127,"author":{"gitId":"jrchoo"},"content":"                        String description \u003d userInput.substring( 6, indexOfFrom - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":128,"author":{"gitId":"jrchoo"},"content":"                        String duration \u003d userInput.substring(indexOfFrom + 4);","lastModifiedDate":"2023-08-24"},{"lineNumber":129,"author":{"gitId":"jrchoo"},"content":"                        int indexOfTo \u003d duration.indexOf(\"/\");","lastModifiedDate":"2023-08-24"},{"lineNumber":130,"author":{"gitId":"jrchoo"},"content":"                        String from \u003d duration.substring(1, indexOfTo - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":131,"author":{"gitId":"jrchoo"},"content":"                        String to \u003d duration.substring(indexOfTo + 3);","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"jrchoo"},"content":"                        Event event \u003d new Event(description, from, to);","lastModifiedDate":"2023-08-24"},{"lineNumber":133,"author":{"gitId":"jrchoo"},"content":"                        tasks.add(event);","lastModifiedDate":"2023-08-24"},{"lineNumber":134,"author":{"gitId":"jrchoo"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":135,"author":{"gitId":"jrchoo"},"content":"                        writer.write(event.getDescription().concat(\"\\n\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"jrchoo"},"content":"                        System.out.println(event.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"jrchoo"},"content":"                        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":138,"author":{"gitId":"jrchoo"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":139,"author":{"gitId":"jrchoo"},"content":"                        System.out.println(\"☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":140,"author":{"gitId":"jrchoo"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":141,"author":{"gitId":"jrchoo"},"content":"                } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":142,"author":{"gitId":"jrchoo"},"content":"                    try {","lastModifiedDate":"2023-08-24"},{"lineNumber":143,"author":{"gitId":"jrchoo"},"content":"                        int id \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":144,"author":{"gitId":"jrchoo"},"content":"                        Task taskToBeRemoved \u003d tasks.get(id - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":145,"author":{"gitId":"jrchoo"},"content":"                        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":146,"author":{"gitId":"jrchoo"},"content":"                        System.out.println(taskToBeRemoved.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"jrchoo"},"content":"                        tasks.remove(taskToBeRemoved);","lastModifiedDate":"2023-08-24"},{"lineNumber":148,"author":{"gitId":"jrchoo"},"content":"                        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":149,"author":{"gitId":"jrchoo"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":150,"author":{"gitId":"jrchoo"},"content":"                        System.out.println(\"To delete a task you have to include the index\");","lastModifiedDate":"2023-08-24"},{"lineNumber":151,"author":{"gitId":"jrchoo"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":152,"author":{"gitId":"jrchoo"},"content":"                } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":153,"author":{"gitId":"jrchoo"},"content":"                    System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-24"},{"lineNumber":154,"author":{"gitId":"jrchoo"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":155,"author":{"gitId":"jrchoo"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":156,"author":{"gitId":"jrchoo"},"content":"            reader.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":157,"author":{"gitId":"jrchoo"},"content":"            writer.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":158,"author":{"gitId":"jrchoo"},"content":"            scanner.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":159,"author":{"gitId":"jrchoo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":160,"author":{"gitId":"jrchoo"},"content":"            StringBuffer inputString \u003d new StringBuffer();","lastModifiedDate":"2023-09-02"},{"lineNumber":161,"author":{"gitId":"jrchoo"},"content":"            for (Task task: tasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":162,"author":{"gitId":"jrchoo"},"content":"                String line \u003d task.getDescription();","lastModifiedDate":"2023-09-02"},{"lineNumber":163,"author":{"gitId":"jrchoo"},"content":"                inputString.append(line);","lastModifiedDate":"2023-09-02"},{"lineNumber":164,"author":{"gitId":"jrchoo"},"content":"                inputString.append(\"\\n\");","lastModifiedDate":"2023-09-02"},{"lineNumber":165,"author":{"gitId":"jrchoo"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":166,"author":{"gitId":"jrchoo"},"content":"            FileOutputStream fileOut \u003d new FileOutputStream(gideon);","lastModifiedDate":"2023-09-02"},{"lineNumber":167,"author":{"gitId":"jrchoo"},"content":"            fileOut.write(inputString.toString().getBytes());","lastModifiedDate":"2023-09-02"},{"lineNumber":168,"author":{"gitId":"jrchoo"},"content":"            fileOut.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":169,"author":{"gitId":"jrchoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":170,"author":{"gitId":"jrchoo"},"content":"            System.out.println(\"An error has occurred.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":171,"author":{"gitId":"jrchoo"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jrchoo":169,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jrchoo"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"jrchoo"},"content":"    DukeException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"jrchoo"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"jrchoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"jrchoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"jrchoo"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jrchoo":6}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jrchoo"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"jrchoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"jrchoo"},"content":"    protected String from;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"jrchoo"},"content":"    protected String to;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"jrchoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"jrchoo"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"jrchoo"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"jrchoo"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"jrchoo"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"jrchoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"jrchoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"jrchoo"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"jrchoo"},"content":"    public String toString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"jrchoo"},"content":"        return \"[E]\" + super.toString() + \" (from:\" + from + \" to:\" + to + \")\";","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"jrchoo"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"jrchoo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"jrchoo"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"jrchoo"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"jrchoo"},"content":"        return \"E\" + super.getDescription() + \" |\" + this.from + \"-\" + this.to;","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"jrchoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"jrchoo"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jrchoo":21}},{"path":"src/main/java/InvalidDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jrchoo"},"content":"public class InvalidDescriptionException extends DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"jrchoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"jrchoo"},"content":"    InvalidDescriptionException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"jrchoo"},"content":"        super(\"☹ OOPS!!! The description of a \" + message + \" cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"jrchoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"jrchoo"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jrchoo":6}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jrchoo"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"jrchoo"},"content":"    protected String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"jrchoo"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"jrchoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"jrchoo"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"jrchoo"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"jrchoo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"jrchoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"jrchoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"jrchoo"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"jrchoo"},"content":"     * Returns either a blank or \"X\" depending on the isDone of a Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"jrchoo"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"jrchoo"},"content":"     * @return A string \"X\" or an empty string \" \".","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"jrchoo"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"jrchoo"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"jrchoo"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"jrchoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"jrchoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"jrchoo"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"jrchoo"},"content":"     * Sets the boolean isDone of a Task to true.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"jrchoo"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"jrchoo"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"jrchoo"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"jrchoo"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"jrchoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"jrchoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"jrchoo"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"jrchoo"},"content":"     * Sets the boolean isDone of a Task to false.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"jrchoo"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"jrchoo"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"jrchoo"},"content":"    public void markAsUnDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"jrchoo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"jrchoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"jrchoo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"jrchoo"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"jrchoo"},"content":"     * Returns a string representation of the task with its status and description.","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"jrchoo"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"jrchoo"},"content":"     * @return A string representing the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"jrchoo"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"jrchoo"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"jrchoo"},"content":"    public String toString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"jrchoo"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"jrchoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"jrchoo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"jrchoo"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"jrchoo"},"content":"     * Returns a string representation of the task to be saved into a file.","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"jrchoo"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"jrchoo"},"content":"     * @return A string representing the task in a file.","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"jrchoo"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"jrchoo"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"jrchoo"},"content":"        return \" |\" + this.getStatusIcon() + \"| \" + this.description;","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"jrchoo"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"jrchoo"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jrchoo":53}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jrchoo"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"jrchoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"jrchoo"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"jrchoo"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"jrchoo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"jrchoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"jrchoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"jrchoo"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"jrchoo"},"content":"    public String toString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"jrchoo"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"jrchoo"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"jrchoo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"jrchoo"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"jrchoo"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"jrchoo"},"content":"        return \"T\" + super.getDescription();","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"jrchoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"jrchoo"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jrchoo":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jrchoo"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"jrchoo"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"jrchoo"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"jrchoo"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"jrchoo"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"jrchoo"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"jrchoo"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"jrchoo"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"jrchoo"},"content":"unmark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"jrchoo"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"jrchoo"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jrchoo":11}}]
