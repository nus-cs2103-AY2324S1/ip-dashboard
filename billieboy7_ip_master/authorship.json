[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"    private String time;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"    DateTimeFormatter outputFormatWithTime \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mma\");","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"    public Deadline(String description, String time) {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"        this.time \u003d time;","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"    public Deadline(String description, LocalDateTime dateTime) {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"        super(description);","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"    public String storeFormat() {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"        String taskType \u003d \"D\";","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"        String isTaskDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"            isTaskDone \u003d \"1\";","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"            isTaskDone \u003d \"0\";","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"        return (taskType + \" | \" + isTaskDone + \" | \" + this.description + \" | \" + this.time);","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"        if (dateTime \u003d\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"            return String.format(\"[D]%s (by: %s)\", super.toString(), time);","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"billieboy7"},"content":"            return String.format(\"[D]%s (by: %s)\", super.toString(), dateTime.format(outputFormatWithTime));","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"billieboy7":46}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"    Scanner userInput \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"    TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"        duke.start();","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"    static void line() {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"        String line \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"        System.out.println(line);","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"billieboy7"},"content":"    private void start() {","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"billieboy7"},"content":"        line();","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"billieboy7"},"content":"        System.out.println(\" Hello! I\u0027m JARVIS\");","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"billieboy7"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"billieboy7"},"content":"        line();","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"billieboy7"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"billieboy7"},"content":"            this.loadList();","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"billieboy7"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"billieboy7"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"billieboy7"},"content":"        while (true) {","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"billieboy7"},"content":"            String input \u003d userInput.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"billieboy7"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"billieboy7"},"content":"                if (input.equals(\"bye\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"billieboy7"},"content":"                    exit();","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"billieboy7"},"content":"                    break;","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"billieboy7"},"content":"                } else if (input.equals(\"list\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"billieboy7"},"content":"                    tasks.list();","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"billieboy7"},"content":"                } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"billieboy7"},"content":"                    testMarkAndDelete(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"billieboy7"},"content":"                    int taskIndex \u003d Integer.parseInt(input.substring(5)) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"billieboy7"},"content":"                    tasks.mark(taskIndex);","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"billieboy7"},"content":"                } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"billieboy7"},"content":"                    testMarkAndDelete(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"billieboy7"},"content":"                    int taskIndex \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"billieboy7"},"content":"                    tasks.unmark(taskIndex);","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"billieboy7"},"content":"                } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"billieboy7"},"content":"                    if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"billieboy7"},"content":"                        String description \u003d input.substring(4).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"billieboy7"},"content":"                        // test whether the todo is valid","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"billieboy7"},"content":"                        testToDo(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"billieboy7"},"content":"                        tasks.addToDo(description);","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"billieboy7"},"content":"                    } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"billieboy7"},"content":"                        testEvent(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"billieboy7"},"content":"                        tasks.addEvent(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"billieboy7"},"content":"                    } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"billieboy7"},"content":"                        testDeadline(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"billieboy7"},"content":"                        tasks.addDeadline(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"billieboy7"},"content":"                    } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"billieboy7"},"content":"                        testMarkAndDelete(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"billieboy7"},"content":"                        tasks.deleteTask(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"billieboy7"},"content":"                    } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"billieboy7"},"content":"                        throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"billieboy7"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"billieboy7"},"content":"                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"billieboy7"},"content":"                    line();","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"billieboy7"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"billieboy7"},"content":"            } catch (DukeException exception) {","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"billieboy7"},"content":"                System.out.println(exception.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":105,"author":{"gitId":"billieboy7"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"billieboy7"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"billieboy7"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"billieboy7"},"content":"    private void exit() throws DukeException, IOException {","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"billieboy7"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"billieboy7"},"content":"        this.saveList();","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"billieboy7"},"content":"        line();","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":117,"author":{"gitId":"billieboy7"},"content":"    private void testToDo(String description) throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":118,"author":{"gitId":"billieboy7"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":119,"author":{"gitId":"billieboy7"},"content":"            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":120,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":121,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":122,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":123,"author":{"gitId":"billieboy7"},"content":"    private void testMarkAndDelete(String description) throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":124,"author":{"gitId":"billieboy7"},"content":"        String[] words \u003d description.split(\" \");","lastModifiedDate":"2023-08-24"},{"lineNumber":125,"author":{"gitId":"billieboy7"},"content":"        String index \u003d String.join(\" \", Arrays.copyOfRange(words, 1, words.length));","lastModifiedDate":"2023-08-24"},{"lineNumber":126,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":127,"author":{"gitId":"billieboy7"},"content":"        if (index.isEmpty() || !index.matches(\"-?(0|[1-9]\\\\d*)\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":128,"author":{"gitId":"billieboy7"},"content":"            throw new DukeException(\"Following \\\"mark\\\" or \\\"unmark\\\" or \\\"delete\\\", an integer value is expected. Blanks or\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":129,"author":{"gitId":"billieboy7"},"content":"                    \" non-integer values are invalid.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":130,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":131,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":132,"author":{"gitId":"billieboy7"},"content":"        int intIndex \u003d Integer.parseInt(index);","lastModifiedDate":"2023-08-24"},{"lineNumber":133,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":134,"author":{"gitId":"billieboy7"},"content":"        // Passing the first case means the index is an integer","lastModifiedDate":"2023-08-24"},{"lineNumber":135,"author":{"gitId":"billieboy7"},"content":"        if (intIndex \u003c 1) {","lastModifiedDate":"2023-08-24"},{"lineNumber":136,"author":{"gitId":"billieboy7"},"content":"            throw new DukeException(\"The index following \\\"mark\\\" or \\\"unmark\\\" should start from 1.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":137,"author":{"gitId":"billieboy7"},"content":"        } else if (intIndex \u003e tasks.size()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"billieboy7"},"content":"            throw new DukeException(\"The index following \\\"mark\\\" or \\\"unmark\\\" should not exceed the total number of \"","lastModifiedDate":"2023-08-24"},{"lineNumber":139,"author":{"gitId":"billieboy7"},"content":"                    + \"tasks in the list\");","lastModifiedDate":"2023-08-24"},{"lineNumber":140,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":141,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":142,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":143,"author":{"gitId":"billieboy7"},"content":"    private void testEvent(String description) throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":144,"author":{"gitId":"billieboy7"},"content":"        String[] list \u003d description.split(\"/\");","lastModifiedDate":"2023-08-24"},{"lineNumber":145,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":146,"author":{"gitId":"billieboy7"},"content":"        if (list.length !\u003d 3) {","lastModifiedDate":"2023-08-24"},{"lineNumber":147,"author":{"gitId":"billieboy7"},"content":"            throw new DukeException(\"Invalid input. Fill up all fields. Do not forget the \\\"/\\\" symbol before your\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":148,"author":{"gitId":"billieboy7"},"content":"                    \" start and end time.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":149,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":150,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":151,"author":{"gitId":"billieboy7"},"content":"        String title \u003d list[0].substring(6);","lastModifiedDate":"2023-08-24"},{"lineNumber":152,"author":{"gitId":"billieboy7"},"content":"        String start \u003d list[1].substring(5);","lastModifiedDate":"2023-08-24"},{"lineNumber":153,"author":{"gitId":"billieboy7"},"content":"        String end \u003d list[2].substring(3);","lastModifiedDate":"2023-08-24"},{"lineNumber":154,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":155,"author":{"gitId":"billieboy7"},"content":"        if (start.isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":156,"author":{"gitId":"billieboy7"},"content":"            throw new DukeException(\"\\\"from\\\" time missing!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":157,"author":{"gitId":"billieboy7"},"content":"        } else if (end.isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":158,"author":{"gitId":"billieboy7"},"content":"            throw new DukeException(\"\\\"to\\\" time missing!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":159,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":160,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":161,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":162,"author":{"gitId":"billieboy7"},"content":"    private void testDeadline(String description) throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":163,"author":{"gitId":"billieboy7"},"content":"        String[] list \u003d description.split(\"/\");","lastModifiedDate":"2023-08-24"},{"lineNumber":164,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":165,"author":{"gitId":"billieboy7"},"content":"        if (list.length !\u003d 2) {","lastModifiedDate":"2023-08-24"},{"lineNumber":166,"author":{"gitId":"billieboy7"},"content":"            throw new DukeException(\"Invalid input. Fill up all fields. Do not forget the \\\"/\\\" symbol before your\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":167,"author":{"gitId":"billieboy7"},"content":"                    \" end time.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":168,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":169,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":170,"author":{"gitId":"billieboy7"},"content":"        String time \u003d list[1];","lastModifiedDate":"2023-08-24"},{"lineNumber":171,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":172,"author":{"gitId":"billieboy7"},"content":"        if (!time.startsWith(\"by\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":173,"author":{"gitId":"billieboy7"},"content":"            throw new DukeException(\"Invalid input. Start with \\\"by\\\".\");","lastModifiedDate":"2023-08-24"},{"lineNumber":174,"author":{"gitId":"billieboy7"},"content":"        } else if (time.substring(2).equals(\" \") || time.substring(2).isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":175,"author":{"gitId":"billieboy7"},"content":"            throw new DukeException(\"Invalid input. Field Empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":176,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":177,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":178,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":179,"author":{"gitId":"billieboy7"},"content":"    private void loadList() throws DukeException, IOException {","lastModifiedDate":"2023-08-31"},{"lineNumber":180,"author":{"gitId":"billieboy7"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":181,"author":{"gitId":"billieboy7"},"content":"            File file \u003d new File(\"./data/data.txt\");","lastModifiedDate":"2023-08-31"},{"lineNumber":182,"author":{"gitId":"billieboy7"},"content":"            FileReader fileReader \u003d new FileReader(file);","lastModifiedDate":"2023-08-31"},{"lineNumber":183,"author":{"gitId":"billieboy7"},"content":"            BufferedReader reader \u003d new BufferedReader(fileReader); // BufferedReader wraps the fileReader","lastModifiedDate":"2023-08-31"},{"lineNumber":184,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":185,"author":{"gitId":"billieboy7"},"content":"            String line;","lastModifiedDate":"2023-08-31"},{"lineNumber":186,"author":{"gitId":"billieboy7"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":187,"author":{"gitId":"billieboy7"},"content":"                String[] inputArray \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-08-31"},{"lineNumber":188,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":189,"author":{"gitId":"billieboy7"},"content":"                switch(inputArray[0]) {","lastModifiedDate":"2023-08-31"},{"lineNumber":190,"author":{"gitId":"billieboy7"},"content":"                    case \"T\":","lastModifiedDate":"2023-08-31"},{"lineNumber":191,"author":{"gitId":"billieboy7"},"content":"                        ToDo toDo \u003d new ToDo(inputArray[2]);","lastModifiedDate":"2023-08-31"},{"lineNumber":192,"author":{"gitId":"billieboy7"},"content":"                        if (inputArray[1] \u003d\u003d \"1\") {","lastModifiedDate":"2023-08-31"},{"lineNumber":193,"author":{"gitId":"billieboy7"},"content":"                            toDo.taskDone(true);","lastModifiedDate":"2023-08-31"},{"lineNumber":194,"author":{"gitId":"billieboy7"},"content":"                        }","lastModifiedDate":"2023-08-31"},{"lineNumber":195,"author":{"gitId":"billieboy7"},"content":"                        tasks.addTask(toDo);","lastModifiedDate":"2023-08-31"},{"lineNumber":196,"author":{"gitId":"billieboy7"},"content":"                        break;","lastModifiedDate":"2023-08-31"},{"lineNumber":197,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":198,"author":{"gitId":"billieboy7"},"content":"                    case \"E\":","lastModifiedDate":"2023-08-31"},{"lineNumber":199,"author":{"gitId":"billieboy7"},"content":"                        Event event \u003d new Event(inputArray[2], inputArray[3], inputArray[4]);","lastModifiedDate":"2023-08-31"},{"lineNumber":200,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":201,"author":{"gitId":"billieboy7"},"content":"                        if (inputArray[1] \u003d\u003d \"1\") {","lastModifiedDate":"2023-08-31"},{"lineNumber":202,"author":{"gitId":"billieboy7"},"content":"                            event.taskDone(true);","lastModifiedDate":"2023-08-31"},{"lineNumber":203,"author":{"gitId":"billieboy7"},"content":"                        }","lastModifiedDate":"2023-08-31"},{"lineNumber":204,"author":{"gitId":"billieboy7"},"content":"                        tasks.addTask(event);","lastModifiedDate":"2023-08-31"},{"lineNumber":205,"author":{"gitId":"billieboy7"},"content":"                        break;","lastModifiedDate":"2023-08-31"},{"lineNumber":206,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":207,"author":{"gitId":"billieboy7"},"content":"                    case \"D\":","lastModifiedDate":"2023-08-31"},{"lineNumber":208,"author":{"gitId":"billieboy7"},"content":"                        Deadline deadline \u003d new Deadline(inputArray[2], inputArray[3]);","lastModifiedDate":"2023-08-31"},{"lineNumber":209,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":210,"author":{"gitId":"billieboy7"},"content":"                        if (inputArray[1] \u003d\u003d \"1\") {","lastModifiedDate":"2023-08-31"},{"lineNumber":211,"author":{"gitId":"billieboy7"},"content":"                            deadline.taskDone(true);","lastModifiedDate":"2023-08-31"},{"lineNumber":212,"author":{"gitId":"billieboy7"},"content":"                        }","lastModifiedDate":"2023-08-31"},{"lineNumber":213,"author":{"gitId":"billieboy7"},"content":"                        tasks.addTask(deadline);","lastModifiedDate":"2023-08-31"},{"lineNumber":214,"author":{"gitId":"billieboy7"},"content":"                        break;","lastModifiedDate":"2023-08-31"},{"lineNumber":215,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":216,"author":{"gitId":"billieboy7"},"content":"                    default:","lastModifiedDate":"2023-08-31"},{"lineNumber":217,"author":{"gitId":"billieboy7"},"content":"                        throw new DukeException(\"An unexpected error occurred while reading the text file. Error Code:\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":218,"author":{"gitId":"billieboy7"},"content":"                                \" 01\");","lastModifiedDate":"2023-08-31"},{"lineNumber":219,"author":{"gitId":"billieboy7"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":220,"author":{"gitId":"billieboy7"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":221,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":222,"author":{"gitId":"billieboy7"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":223,"author":{"gitId":"billieboy7"},"content":"            this.saveList();","lastModifiedDate":"2023-08-31"},{"lineNumber":224,"author":{"gitId":"billieboy7"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":225,"author":{"gitId":"billieboy7"},"content":"            throw new DukeException(\"IO error occurred. Check the formatting of the text file - data.txt.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":226,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":227,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":228,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":229,"author":{"gitId":"billieboy7"},"content":"    private void saveList() throws DukeException, IOException {","lastModifiedDate":"2023-08-31"},{"lineNumber":230,"author":{"gitId":"billieboy7"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":231,"author":{"gitId":"billieboy7"},"content":"            File file \u003d new File(\"./data/data.txt\");","lastModifiedDate":"2023-08-31"},{"lineNumber":232,"author":{"gitId":"billieboy7"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2023-08-31"},{"lineNumber":233,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":234,"author":{"gitId":"billieboy7"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file));","lastModifiedDate":"2023-08-31"},{"lineNumber":235,"author":{"gitId":"billieboy7"},"content":"            writer \u003d tasks.printStoreFormat(writer);","lastModifiedDate":"2023-08-31"},{"lineNumber":236,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":237,"author":{"gitId":"billieboy7"},"content":"            writer.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":238,"author":{"gitId":"billieboy7"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":239,"author":{"gitId":"billieboy7"},"content":"            throw new DukeException(\"IO exception occurred.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":240,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"billieboy7":231,"-":11}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"    DukeException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"billieboy7":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"    private String startTime;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"    private String endTime;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"    private LocalDateTime startDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"    private LocalDateTime endDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"    DateTimeFormatter outputFormatWithTime \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mma\");","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"    public Event(String description, String startTime, String endTime) {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"    public Event(String description, LocalDateTime startDateTime, LocalDateTime endDateTime) {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"        super(description);","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"    public String storeFormat() {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"        String taskType \u003d \"D\";","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"        String isTaskDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"            isTaskDone \u003d \"1\";","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"            isTaskDone \u003d \"0\";","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"        return (taskType + \" | \" + isTaskDone + \" | \" + this.description + \" | \" + this.startTime + \" | \" +","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"                this.endTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"billieboy7"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"billieboy7"},"content":"        if (startDateTime \u003d\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"billieboy7"},"content":"            return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), startTime, endTime);","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"billieboy7"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"billieboy7"},"content":"            return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), startDateTime.format(outputFormatWithTime)","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"billieboy7"},"content":"                    , endDateTime.format(outputFormatWithTime));","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"billieboy7":49}},{"path":"src/main/java/FileReader.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"public class FileReader {","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"    private static void printFileContents(String filePath) throws FileNotFoundException {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"        File f \u003d new File(filePath); // create a File for the given file path","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"            System.out.println(s.nextLine());","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"            printFileContents(\"data/data.txt\");","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"            System.out.println(\"File not found\");","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"billieboy7":24}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"    protected String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"    public void taskDone(boolean status) {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"        if (status) {","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"        System.out.println(this.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"    public String storeFormat() {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"        return null;","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"billieboy7":32}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"public class TaskList {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"    ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"    public TaskList() {}","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"    public void deleteTask(String input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"        int taskIndex \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"        System.out.println(taskList.get(taskIndex));","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"        taskList.remove(taskIndex);","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"    public void addEvent(String input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"        String[] list \u003d input.split(\"/\");","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"        String title \u003d list[0].substring(6);","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"        String start \u003d list[1].substring(5).trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"        String end \u003d list[2].substring(3).trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"        // returns 1 if correct datetime","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"        // returns 0 if random string input","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"        int startTimeFormat \u003d this.computeDateTimeFormat(start);","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"        int endTimeFormat \u003d this.computeDateTimeFormat(end);","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"        if (startTimeFormat !\u003d 1 || endTimeFormat !\u003d 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"            Event event \u003d new Event(title, start, end);","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"            System.out.println(event.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"            taskList.add(event);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"billieboy7"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"billieboy7"},"content":"                DateTimeFormatter inputFormatWithTime \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"billieboy7"},"content":"                LocalDateTime startDateTime \u003d LocalDateTime.parse(start, inputFormatWithTime);","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"billieboy7"},"content":"                LocalDateTime endDateTime \u003d LocalDateTime.parse(end, inputFormatWithTime);","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"billieboy7"},"content":"                Event event \u003d new Event(title, startDateTime, endDateTime);","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"billieboy7"},"content":"                System.out.println(event.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"billieboy7"},"content":"                taskList.add(event);","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"billieboy7"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"billieboy7"},"content":"                System.out.println(\"Invalid date-time format. Stick to the given format of dd-MM-yyyy HHmm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"billieboy7"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"billieboy7"},"content":"    public void addDeadline(String input) {","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"billieboy7"},"content":"        String[] list \u003d input.split(\"/\");","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"billieboy7"},"content":"        String title \u003d list[0].substring(9);","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"billieboy7"},"content":"        String time \u003d list[1].substring(3).trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"billieboy7"},"content":"        // returns 1 if correct datetime","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"billieboy7"},"content":"        // returns 0 if random string input","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"billieboy7"},"content":"        int timeFormat \u003d this.computeDateTimeFormat(time);","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"billieboy7"},"content":"        if (timeFormat \u003d\u003d 0) {","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"billieboy7"},"content":"            Deadline deadline \u003d new Deadline(title, time);","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"billieboy7"},"content":"            System.out.println(deadline.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"billieboy7"},"content":"            taskList.add(deadline);","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"billieboy7"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"billieboy7"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"billieboy7"},"content":"                DateTimeFormatter inputFormatWithTime \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"billieboy7"},"content":"                LocalDateTime dateTime \u003d LocalDateTime.parse(time, inputFormatWithTime);","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"billieboy7"},"content":"                Deadline deadline \u003d new Deadline(title, dateTime);","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"billieboy7"},"content":"                System.out.println(deadline.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"billieboy7"},"content":"                taskList.add(deadline);","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"billieboy7"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"billieboy7"},"content":"                System.out.println(\"Invalid date-time format. Stick to the given format of dd-MM-yyyy HHmm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"billieboy7"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"billieboy7"},"content":"    public void addToDo(String input) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"billieboy7"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"billieboy7"},"content":"        ToDo toDo \u003d new ToDo(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"billieboy7"},"content":"        System.out.println(toDo.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"billieboy7"},"content":"        taskList.add(toDo);","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"billieboy7"},"content":"    // method to quickly load up tasks into the tasklist during loading","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"billieboy7"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"billieboy7"},"content":"        taskList.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"billieboy7"},"content":"    public void list() {","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"billieboy7"},"content":"        Duke.line();","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"billieboy7"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"billieboy7"},"content":"            System.out.println(\"There are no tasks in your list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"billieboy7"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"billieboy7"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"billieboy7"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"billieboy7"},"content":"                int index \u003d i + 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"billieboy7"},"content":"                Task t \u003d taskList.get(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"billieboy7"},"content":"                System.out.println(index + \".\" + t.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"billieboy7"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"billieboy7"},"content":"        Duke.line();","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"billieboy7"},"content":"    public void mark(int taskIndex) {","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"billieboy7"},"content":"        Task currTask \u003d taskList.get(taskIndex);","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"billieboy7"},"content":"        currTask.taskDone(true);","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"billieboy7"},"content":"    public void unmark(int taskIndex) {","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"billieboy7"},"content":"        Task currTask \u003d taskList.get(taskIndex);","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"billieboy7"},"content":"        currTask.taskDone(false);","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"billieboy7"},"content":"    public BufferedWriter printStoreFormat(BufferedWriter writer) throws IOException {","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"billieboy7"},"content":"        for (Task t : taskList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"billieboy7"},"content":"            writer.append(t.storeFormat()).append(\"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"billieboy7"},"content":"        return writer;","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"billieboy7"},"content":"    public int size() {","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"billieboy7"},"content":"        return taskList.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"billieboy7"},"content":"    public static boolean isNumeric(String strNum) {","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"billieboy7"},"content":"        if (strNum \u003d\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"billieboy7"},"content":"            return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"billieboy7"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"billieboy7"},"content":"            double d \u003d Double.parseDouble(strNum);","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"billieboy7"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"billieboy7"},"content":"            return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":142,"author":{"gitId":"billieboy7"},"content":"        return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":143,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":145,"author":{"gitId":"billieboy7"},"content":"    private int computeDateTimeFormat(String input) {","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":147,"author":{"gitId":"billieboy7"},"content":"        // returns 1 if correct datetime","lastModifiedDate":"2023-09-01"},{"lineNumber":148,"author":{"gitId":"billieboy7"},"content":"        // returns 2 if correct date","lastModifiedDate":"2023-09-01"},{"lineNumber":149,"author":{"gitId":"billieboy7"},"content":"        // returns 0 if random string input","lastModifiedDate":"2023-09-01"},{"lineNumber":150,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":151,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":152,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":153,"author":{"gitId":"billieboy7"},"content":"       // Assume that the date input is dd/MM/yyyy 16-08-1977 1800","lastModifiedDate":"2023-09-01"},{"lineNumber":154,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":155,"author":{"gitId":"billieboy7"},"content":"        String[] blankArray \u003d input.split(\" \");","lastModifiedDate":"2023-09-01"},{"lineNumber":156,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"billieboy7"},"content":"        // Check for datetime input","lastModifiedDate":"2023-09-01"},{"lineNumber":158,"author":{"gitId":"billieboy7"},"content":"        if (blankArray.length \u003d\u003d 2 \u0026\u0026 isNumeric(blankArray[1])) {","lastModifiedDate":"2023-09-01"},{"lineNumber":159,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":160,"author":{"gitId":"billieboy7"},"content":"            String[] slashArray \u003d blankArray[0].split(\"-\");","lastModifiedDate":"2023-09-01"},{"lineNumber":161,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":162,"author":{"gitId":"billieboy7"},"content":"            boolean isAllNumeric \u003d true;","lastModifiedDate":"2023-09-01"},{"lineNumber":163,"author":{"gitId":"billieboy7"},"content":"            for (String s : slashArray) {","lastModifiedDate":"2023-09-01"},{"lineNumber":164,"author":{"gitId":"billieboy7"},"content":"                if (!isNumeric(s)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":165,"author":{"gitId":"billieboy7"},"content":"                    isAllNumeric \u003d false;","lastModifiedDate":"2023-09-01"},{"lineNumber":166,"author":{"gitId":"billieboy7"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":167,"author":{"gitId":"billieboy7"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":168,"author":{"gitId":"billieboy7"},"content":"            if (slashArray.length \u003d\u003d 3 \u0026\u0026 isAllNumeric) {","lastModifiedDate":"2023-09-01"},{"lineNumber":169,"author":{"gitId":"billieboy7"},"content":"                return 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":170,"author":{"gitId":"billieboy7"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":171,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":172,"author":{"gitId":"billieboy7"},"content":"//        } else if (blankArray.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":173,"author":{"gitId":"billieboy7"},"content":"//","lastModifiedDate":"2023-09-01"},{"lineNumber":174,"author":{"gitId":"billieboy7"},"content":"//            String[] slashArray \u003d blankArray[0].split(\"/\");","lastModifiedDate":"2023-09-01"},{"lineNumber":175,"author":{"gitId":"billieboy7"},"content":"//            boolean isAllNumeric \u003d true;","lastModifiedDate":"2023-09-01"},{"lineNumber":176,"author":{"gitId":"billieboy7"},"content":"//            for (String s : slashArray) {","lastModifiedDate":"2023-09-01"},{"lineNumber":177,"author":{"gitId":"billieboy7"},"content":"//                if (!isNumeric(s)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":178,"author":{"gitId":"billieboy7"},"content":"//                    isAllNumeric \u003d false;","lastModifiedDate":"2023-09-01"},{"lineNumber":179,"author":{"gitId":"billieboy7"},"content":"//                }","lastModifiedDate":"2023-09-01"},{"lineNumber":180,"author":{"gitId":"billieboy7"},"content":"//            }","lastModifiedDate":"2023-09-01"},{"lineNumber":181,"author":{"gitId":"billieboy7"},"content":"//","lastModifiedDate":"2023-09-01"},{"lineNumber":182,"author":{"gitId":"billieboy7"},"content":"//            if (slashArray.length \u003d\u003d 3 \u0026\u0026 isAllNumeric) {","lastModifiedDate":"2023-09-01"},{"lineNumber":183,"author":{"gitId":"billieboy7"},"content":"//                return 2;","lastModifiedDate":"2023-09-01"},{"lineNumber":184,"author":{"gitId":"billieboy7"},"content":"//            }","lastModifiedDate":"2023-09-01"},{"lineNumber":185,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":186,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":187,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":188,"author":{"gitId":"billieboy7"},"content":"        return 0;","lastModifiedDate":"2023-09-01"},{"lineNumber":189,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":190,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"billieboy7":190}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"    public ToDo(String description) throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"    public String storeFormat() {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"        String taskType \u003d \"T\";","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"        String isTaskDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"            isTaskDone \u003d \"1\";","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"            isTaskDone \u003d \"0\";","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"        return (taskType + \" | \" + isTaskDone + \" | \" + this.description);","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"billieboy7":22}}]
