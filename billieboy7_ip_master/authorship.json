[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"# Main.Duke project template","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"3. After that, locate the `src/main/java/Main.Duke.java` file, right-click it, and choose `Run Main.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"billieboy7":2,"-":22}},{"path":"src/main/java/Command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package Command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import Task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"import Main.UI;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import Main.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"import Exception.DukeException;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"    public ByeCommand() {}","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"    public void execute(TaskList taskList, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"        ui.byeMessage();","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"        storage.saveList(taskList);","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"    public boolean end() {","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"        return false;","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"billieboy7":22}},{"path":"src/main/java/Command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package Command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import Task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"import Main.UI;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import Main.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"import Exception.DukeException;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"    public void execute(TaskList taskList, UI ui, Storage storage) throws DukeException {}","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"    public boolean end() {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"        return true;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"billieboy7":16}},{"path":"src/main/java/Command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package Command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import Task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"import Main.UI;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import Main.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"import Exception.DukeException;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"    String fullCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"    public DeadlineCommand(String fullCommand) {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"    public void execute(TaskList taskList, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"        taskList.addDeadline(fullCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"        storage.saveList(taskList);","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"billieboy7":21}},{"path":"src/main/java/Command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package Command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import Task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"import Main.UI;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import Main.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"import Exception.DukeException;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"    String fullCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"    public DeleteCommand(String fullCommand) {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"    public void execute(TaskList taskList, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"        taskList.deleteTask(fullCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"        storage.saveList(taskList);","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"billieboy7":22}},{"path":"src/main/java/Command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package Command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import Task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"import Main.UI;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import Main.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"import Exception.DukeException;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"    String fullCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"    public EventCommand(String fullCommand) {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"    public void execute(TaskList taskList, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"        taskList.addEvent(fullCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"        storage.saveList(taskList);","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"billieboy7":21}},{"path":"src/main/java/Command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package Command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import Task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"import Main.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import Main.UI;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"    public ListCommand() {}","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"    public void execute(TaskList taskList, UI ui, Storage storage) {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"        ui.list(taskList.getTaskArrayList());","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"billieboy7":16}},{"path":"src/main/java/Command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package Command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import Task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"import Main.UI;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import Main.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"import Exception.DukeException;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"    int index;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"    public void execute(TaskList taskList, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"            taskList.mark(this.index);","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"            storage.saveList(taskList);","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"        } catch (RuntimeException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"            throw new DukeException(String.format(\"Given index is out of range. Index range should be between\" +","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"                            \" 1 and %d.\",","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"                    taskList.size()));","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"billieboy7":28}},{"path":"src/main/java/Command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package Command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import Task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"import Main.UI;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import Main.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"import Exception.DukeException;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"    String description;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"    public ToDoCommand(String description) {","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"    public void execute(TaskList taskList, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"        taskList.addToDo(description);","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"        storage.saveList(taskList);","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"billieboy7":20}},{"path":"src/main/java/Command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package Command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import Task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"import Main.UI;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import Main.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"import Exception.DukeException;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"    int index;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"    public void execute(TaskList taskList, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"            taskList.unmark(this.index);","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"            storage.saveList(taskList);","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"        } catch (RuntimeException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"            throw new DukeException(String.format(\"Given index is out of range. Index range should be between\" +","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"                            \" 1 and %d.\",","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"                    taskList.size()));","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"billieboy7":27}},{"path":"src/main/java/Exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package Exception;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"billieboy7":7}},{"path":"src/main/java/Main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package Main;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import Command.Command;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import Task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"import Exception.DukeException;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"    Scanner userInput \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"    TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"    Storage storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"    UI ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"        Duke duke \u003d new Duke(\"./data/data.txt\");","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"        duke.start();","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"    private Duke(String filePath) {","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"        this.storage \u003d new Storage(filePath, tasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"        this.ui \u003d new UI();","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"        this.ui.welcomeMessage();","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"            this.storage.loadList();","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"    private void start() {","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"billieboy7"},"content":"        boolean isContinue \u003d true;","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"billieboy7"},"content":"        while (isContinue) {","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"billieboy7"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"billieboy7"},"content":"                String input \u003d userInput.nextLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"billieboy7"},"content":"                Command command \u003d Parser.parse(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"billieboy7"},"content":"                command.execute(this.tasks, this.ui, this.storage);","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"billieboy7"},"content":"                isContinue \u003d command.end();","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"billieboy7"},"content":"                if (isContinue) {","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"billieboy7"},"content":"                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"billieboy7"},"content":"                    this.ui.divider();","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"billieboy7"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"billieboy7"},"content":"            } catch (DukeException exception) {","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"billieboy7"},"content":"                System.out.println(exception.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"billieboy7"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"billieboy7":58,"-":2}},{"path":"src/main/java/Main/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package Main;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import Command.ByeCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"import Command.Command;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import Command.ListCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"import Command.MarkCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"import Command.UnmarkCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"import Command.ToDoCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"import Command.EventCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"import Command.DeadlineCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"import Command.DeleteCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"import Exception.DukeException;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"public class Parser {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"    static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"            if (Parser.isBye(fullCommand)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"                return new ByeCommand();","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"            } else if (Parser.isList(fullCommand)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"                return new ListCommand();","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"            } else if (Parser.isMark(fullCommand)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"                Parser.testMarkAndDelete(fullCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"                int taskIndex \u003d Integer.parseInt(fullCommand.substring(5)) - 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"                return new MarkCommand(taskIndex);","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"            } else if (Parser.isUnmark(fullCommand)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"                Parser.testMarkAndDelete(fullCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"                int taskIndex \u003d Integer.parseInt(fullCommand.substring(7)) - 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"                return new UnmarkCommand(taskIndex);","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"            } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"                if (Parser.isToDo(fullCommand)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"                    String description \u003d fullCommand.substring(4).trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"                    // test whether the todo is valid","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"                    Parser.testToDo(description);","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"                    return new ToDoCommand(description);","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"billieboy7"},"content":"                } else if (Parser.isEvent(fullCommand)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"billieboy7"},"content":"                    Parser.testEvent(fullCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"billieboy7"},"content":"                    return new EventCommand(fullCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"billieboy7"},"content":"                } else if (Parser.isDeadline(fullCommand)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"billieboy7"},"content":"                    Parser.testDeadline(fullCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"billieboy7"},"content":"                    return new DeadlineCommand(fullCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"billieboy7"},"content":"                } else if (Parser.isDelete(fullCommand)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"billieboy7"},"content":"                    Parser.testMarkAndDelete(fullCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"billieboy7"},"content":"                    return new DeleteCommand(fullCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"billieboy7"},"content":"                } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"billieboy7"},"content":"                    throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"billieboy7"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"billieboy7"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"billieboy7"},"content":"    public static boolean isBye(String fullCommand) {","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"billieboy7"},"content":"        return fullCommand.equals(\"bye\");","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"billieboy7"},"content":"    public static boolean isList(String fullCommand) {","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"billieboy7"},"content":"        return fullCommand.startsWith(\"list\");","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"billieboy7"},"content":"    public static boolean isMark(String fullCommand) {","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"billieboy7"},"content":"        return fullCommand.startsWith(\"mark\");","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"billieboy7"},"content":"    public static boolean isUnmark(String fullCommand) {","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"billieboy7"},"content":"        return fullCommand.startsWith(\"unmark\");","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"billieboy7"},"content":"    public static boolean isToDo(String fullCommand) {","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"billieboy7"},"content":"        return fullCommand.startsWith(\"todo\");","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"billieboy7"},"content":"    public static boolean isEvent(String fullCommand) {","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"billieboy7"},"content":"        return fullCommand.startsWith(\"event\");","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"billieboy7"},"content":"    public static boolean isDeadline(String fullCommand) {","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"billieboy7"},"content":"        return fullCommand.startsWith(\"deadline\");","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"billieboy7"},"content":"    public static boolean isDelete(String fullCommand) {","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"billieboy7"},"content":"        return fullCommand.startsWith(\"delete\");","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"billieboy7"},"content":"    private static void testToDo(String description) throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"billieboy7"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"billieboy7"},"content":"            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"billieboy7"},"content":"    private static void testMarkAndDelete(String description) throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"billieboy7"},"content":"        String[] words \u003d description.split(\" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"billieboy7"},"content":"        String index \u003d String.join(\" \", Arrays.copyOfRange(words, 1, words.length));","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"billieboy7"},"content":"        if (index.isEmpty() || !index.matches(\"-?(0|[1-9]\\\\d*)\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"billieboy7"},"content":"            throw new DukeException(\"Following \\\"mark\\\" or \\\"unmark\\\" or \\\"delete\\\", an integer value is expected. Blanks or\" +","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"billieboy7"},"content":"                    \" non-integer values are invalid.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"billieboy7"},"content":"    private static void testEvent(String description) throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"billieboy7"},"content":"        String[] list \u003d description.split(\"/\");","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"billieboy7"},"content":"        if (list.length !\u003d 3) {","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"billieboy7"},"content":"            throw new DukeException(\"Invalid input. Fill up all fields. Do not forget the \\\"/\\\" symbol before your\" +","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"billieboy7"},"content":"                    \" start and end time.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"billieboy7"},"content":"        String title \u003d list[0].substring(6);","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"billieboy7"},"content":"        String start \u003d list[1].substring(5);","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"billieboy7"},"content":"        String end \u003d list[2].substring(3);","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"billieboy7"},"content":"        if (start.isEmpty()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"billieboy7"},"content":"            throw new DukeException(\"\\\"from\\\" time missing!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"billieboy7"},"content":"        } else if (end.isEmpty()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"billieboy7"},"content":"            throw new DukeException(\"\\\"to\\\" time missing!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"billieboy7"},"content":"    private static void testDeadline(String description) throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"billieboy7"},"content":"        String[] list \u003d description.split(\"/\");","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"billieboy7"},"content":"        if (list.length !\u003d 2) {","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"billieboy7"},"content":"            throw new DukeException(\"Invalid input. Fill up all fields. Do not forget the \\\"/\\\" symbol before your\" +","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"billieboy7"},"content":"                    \" end time.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":135,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"billieboy7"},"content":"        String time \u003d list[1];","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"billieboy7"},"content":"        if (!time.startsWith(\"by\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"billieboy7"},"content":"            throw new DukeException(\"Invalid input. Start with \\\"by\\\".\");","lastModifiedDate":"2023-09-02"},{"lineNumber":141,"author":{"gitId":"billieboy7"},"content":"        } else if (time.substring(2).equals(\" \") || time.substring(2).isEmpty()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"billieboy7"},"content":"            throw new DukeException(\"Invalid input. Field Empty.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"billieboy7":145}},{"path":"src/main/java/Main/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package Main;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import Exception.DukeException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"import Task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"import Task.ToDo;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"import Task.Deadline;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"import Task.Event;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"import Task.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"import java.io.File;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"public class Storage {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"    String filePath;","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"    TaskList taskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"    public Storage(String filePath, TaskList taskList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"    public void saveList(TaskList taskList) throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file));","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"            for (Task task : taskList.getTaskArrayList()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"                writer.append(task.storeFormat()).append(\"\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"billieboy7"},"content":"            writer.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"billieboy7"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"billieboy7"},"content":"            throw new DukeException(\"IO exception occurred.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"billieboy7"},"content":"    void loadList() throws DukeException, IOException {","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"billieboy7"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"billieboy7"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"billieboy7"},"content":"            FileReader fileReader \u003d new FileReader(file);","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"billieboy7"},"content":"            BufferedReader reader \u003d new BufferedReader(fileReader); // BufferedReader wraps the fileReader","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"billieboy7"},"content":"            String line;","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"billieboy7"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"billieboy7"},"content":"                String[] inputArray \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"billieboy7"},"content":"                switch(inputArray[0]) {","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"billieboy7"},"content":"                    case \"T\":","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"billieboy7"},"content":"                        ToDo toDo \u003d new ToDo(inputArray[2]);","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"billieboy7"},"content":"                        int status \u003d Integer.parseInt(inputArray[1]);","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"billieboy7"},"content":"                        if (status \u003d\u003d 1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"billieboy7"},"content":"                            toDo.taskDone(true);","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"billieboy7"},"content":"                        }","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"billieboy7"},"content":"                        this.taskList.addTask(toDo);","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"billieboy7"},"content":"                        break;","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"billieboy7"},"content":"                    case \"E\":","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"billieboy7"},"content":"                        Event event \u003d new Event(inputArray[2], inputArray[3], inputArray[4]);","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"billieboy7"},"content":"                        if (inputArray[1] \u003d\u003d \"1\") {","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"billieboy7"},"content":"                            event.taskDone(true);","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"billieboy7"},"content":"                        }","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"billieboy7"},"content":"                        this.taskList.addTask(event);","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"billieboy7"},"content":"                        break;","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"billieboy7"},"content":"                    case \"D\":","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"billieboy7"},"content":"                        Deadline deadline \u003d new Deadline(inputArray[2], inputArray[3]);","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"billieboy7"},"content":"                        if (inputArray[1] \u003d\u003d \"1\") {","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"billieboy7"},"content":"                            deadline.taskDone(true);","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"billieboy7"},"content":"                        }","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"billieboy7"},"content":"                        this.taskList.addTask(deadline);","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"billieboy7"},"content":"                        break;","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"billieboy7"},"content":"                    default:","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"billieboy7"},"content":"                        throw new DukeException(\"An unexpected error occurred while reading the text file. Error Code:\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"billieboy7"},"content":"                                \" 01\");","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"billieboy7"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"billieboy7"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"billieboy7"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"billieboy7"},"content":"            this.saveList(this.taskList);","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"billieboy7"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"billieboy7"},"content":"            throw new DukeException(\"IO error occurred. Check the formatting of the text file - data.txt.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"billieboy7":98}},{"path":"src/main/java/Main/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package Main;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import Task.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"public class UI {","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"    public UI() {}","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"    void divider() {","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"        String line \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"        System.out.println(line);","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"    void welcomeMessage() {","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"        this.divider();","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"        System.out.println(\" Hello! I\u0027m JARVIS\");","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"        this.divider();","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"    public void list(ArrayList\u003cTask\u003e taskArrayList) {","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"        this.divider();","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"        if (taskArrayList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"            System.out.println(\"There are no tasks in your list.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"            for (int i \u003d 0; i \u003c taskArrayList.size(); i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"                int index \u003d i + 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"                Task t \u003d taskArrayList.get(i);","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"billieboy7"},"content":"                System.out.println(index + \".\" + t.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"billieboy7"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"billieboy7"},"content":"        this.divider();","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"billieboy7"},"content":"    public void byeMessage() {","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"billieboy7"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"billieboy7"},"content":"        this.divider();","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"billieboy7":51}},{"path":"src/main/java/Task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"    private String time;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"    DateTimeFormatter outputFormatWithTime \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mma\");","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"    public Deadline(String description, String time) {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"        this.time \u003d time;","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"    public Deadline(String description, LocalDateTime dateTime) {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"        super(description);","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"    public String storeFormat() {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"        String taskType \u003d \"D\";","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"        String isTaskDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"            isTaskDone \u003d \"1\";","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"            isTaskDone \u003d \"0\";","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"        if (this.dateTime \u003d\u003d null) {","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"            return (taskType + \" | \" + isTaskDone + \" | \" + this.description.trim() + \" | \" + this.time);","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"            return (taskType + \" | \" + isTaskDone + \" | \" + this.description.trim() + \" | \" +","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"                    this.dateTime.format(outputFormatWithTime));","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"billieboy7"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"billieboy7"},"content":"        if (dateTime \u003d\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"billieboy7"},"content":"            return String.format(\"[D]%s (by: %s)\", super.toString(), time);","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"billieboy7"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"billieboy7"},"content":"            return String.format(\"[D]%s (by: %s)\", super.toString(), dateTime.format(outputFormatWithTime));","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"billieboy7":52}},{"path":"src/main/java/Task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"    private String startTime;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"    private String endTime;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"    private LocalDateTime startDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"    private LocalDateTime endDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"    DateTimeFormatter outputFormatWithTime \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mma\");","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"    public Event(String description, String startTime, String endTime) {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"    public Event(String description, LocalDateTime startDateTime, LocalDateTime endDateTime) {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"        super(description);","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"    public String storeFormat() {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"        String taskType \u003d \"E\";","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"        String isTaskDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"            isTaskDone \u003d \"1\";","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"            isTaskDone \u003d \"0\";","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"        if (startDateTime \u003d\u003d null) {","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"            return (taskType + \" | \" + isTaskDone + \" | \" + this.description.trim() + \" | \" + this.startTime + \" | \" +","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"                    this.endTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"            return (taskType + \" | \" + isTaskDone + \" | \" + this.description.trim() + \" | \"","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"billieboy7"},"content":"                    + this.startDateTime.format(outputFormatWithTime) + \" | \" +","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"billieboy7"},"content":"                    this.endDateTime.format(outputFormatWithTime));","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"billieboy7"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"billieboy7"},"content":"        if (startDateTime \u003d\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"billieboy7"},"content":"            return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), startTime, endTime);","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"billieboy7"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"billieboy7"},"content":"            return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), startDateTime.format(outputFormatWithTime)","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"billieboy7"},"content":"                    , endDateTime.format(outputFormatWithTime));","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"billieboy7":56}},{"path":"src/main/java/Task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"    protected String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"    public void taskDone(boolean status) {","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"    public String storeFormat() {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"        return null;","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"billieboy7":28}},{"path":"src/main/java/Task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import Exception.DukeException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"public class TaskList {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"    ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"    public TaskList() {}","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"    public void deleteTask(String input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"        int taskIndex \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"        System.out.println(taskList.get(taskIndex));","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"        taskList.remove(taskIndex);","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"    public void addEvent(String input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"        String[] list \u003d input.split(\"/\");","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"        String title \u003d list[0].substring(6);","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"        String start \u003d list[1].substring(5).trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"        String end \u003d list[2].substring(3).trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"        // returns 1 if correct datetime","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"        // returns 0 if random string input","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"        int startTimeFormat \u003d this.computeDateTimeFormat(start);","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"        int endTimeFormat \u003d this.computeDateTimeFormat(end);","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"        if (startTimeFormat !\u003d 1 || endTimeFormat !\u003d 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"            Event event \u003d new Event(title, start, end);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"            System.out.println(event.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"            taskList.add(event);","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"billieboy7"},"content":"                DateTimeFormatter inputFormatWithTime \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"billieboy7"},"content":"                LocalDateTime startDateTime \u003d LocalDateTime.parse(start, inputFormatWithTime);","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"billieboy7"},"content":"                LocalDateTime endDateTime \u003d LocalDateTime.parse(end, inputFormatWithTime);","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"billieboy7"},"content":"                Event event \u003d new Event(title, startDateTime, endDateTime);","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"billieboy7"},"content":"                System.out.println(event.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"billieboy7"},"content":"                taskList.add(event);","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"billieboy7"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"billieboy7"},"content":"                System.out.println(\"Invalid date-time format. Stick to the given format of dd-MM-yyyy HHmm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"billieboy7"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"billieboy7"},"content":"    public void addDeadline(String input) {","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"billieboy7"},"content":"        String[] list \u003d input.split(\"/\");","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"billieboy7"},"content":"        String title \u003d list[0].substring(9);","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"billieboy7"},"content":"        String time \u003d list[1].substring(3).trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"billieboy7"},"content":"        // returns 1 if correct datetime","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"billieboy7"},"content":"        // returns 0 if random string input","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"billieboy7"},"content":"        int timeFormat \u003d this.computeDateTimeFormat(time);","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"billieboy7"},"content":"        if (timeFormat \u003d\u003d 0) {","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"billieboy7"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"billieboy7"},"content":"            Deadline deadline \u003d new Deadline(title, time);","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"billieboy7"},"content":"            System.out.println(deadline.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"billieboy7"},"content":"            taskList.add(deadline);","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"billieboy7"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"billieboy7"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"billieboy7"},"content":"                DateTimeFormatter inputFormatWithTime \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"billieboy7"},"content":"                LocalDateTime dateTime \u003d LocalDateTime.parse(time, inputFormatWithTime);","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"billieboy7"},"content":"                Deadline deadline \u003d new Deadline(title, dateTime);","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"billieboy7"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"billieboy7"},"content":"                System.out.println(deadline.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"billieboy7"},"content":"                taskList.add(deadline);","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"billieboy7"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"billieboy7"},"content":"                System.out.println(\"Invalid date-time format. Stick to the given format of dd-MM-yyyy HHmm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"billieboy7"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"billieboy7"},"content":"    public void addToDo(String input) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"billieboy7"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"billieboy7"},"content":"        ToDo toDo \u003d new ToDo(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"billieboy7"},"content":"        System.out.println(toDo.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"billieboy7"},"content":"        taskList.add(toDo);","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"billieboy7"},"content":"    // method to quickly load up tasks into the tasklist during loading","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"billieboy7"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"billieboy7"},"content":"        taskList.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"billieboy7"},"content":"    public void mark(int taskIndex) {","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"billieboy7"},"content":"        Task currTask \u003d taskList.get(taskIndex);","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"billieboy7"},"content":"        currTask.taskDone(true);","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"billieboy7"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"billieboy7"},"content":"        System.out.println(currTask);","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"billieboy7"},"content":"    public void unmark(int taskIndex) {","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"billieboy7"},"content":"        Task currTask \u003d taskList.get(taskIndex);","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"billieboy7"},"content":"        currTask.taskDone(false);","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"billieboy7"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"billieboy7"},"content":"        System.out.println(currTask);","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"billieboy7"},"content":"    public int size() {","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"billieboy7"},"content":"        return taskList.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"billieboy7"},"content":"    public static boolean isNumeric(String strNum) {","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"billieboy7"},"content":"        if (strNum \u003d\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"billieboy7"},"content":"            return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"billieboy7"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"billieboy7"},"content":"            double d \u003d Double.parseDouble(strNum);","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"billieboy7"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"billieboy7"},"content":"            return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"billieboy7"},"content":"        return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"billieboy7"},"content":"    int computeDateTimeFormat(String input) {","lastModifiedDate":"2023-09-03"},{"lineNumber":128,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"billieboy7"},"content":"        // returns 1 if correct datetime","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"billieboy7"},"content":"        // returns 2 if correct date","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"billieboy7"},"content":"        // returns 0 if random string input","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"billieboy7"},"content":"       // Assume that the date input is dd/MM/yyyy 16-08-1977 1800","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"billieboy7"},"content":"        String[] blankArray \u003d input.split(\" \");","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"billieboy7"},"content":"        // Check for datetime input","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"billieboy7"},"content":"        if (blankArray.length \u003d\u003d 2 \u0026\u0026 isNumeric(blankArray[1])) {","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"billieboy7"},"content":"            String[] slashArray \u003d blankArray[0].split(\"-\");","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":142,"author":{"gitId":"billieboy7"},"content":"            boolean isAllNumeric \u003d true;","lastModifiedDate":"2023-09-01"},{"lineNumber":143,"author":{"gitId":"billieboy7"},"content":"            for (String s : slashArray) {","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"billieboy7"},"content":"                if (!isNumeric(s)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":145,"author":{"gitId":"billieboy7"},"content":"                    isAllNumeric \u003d false;","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"billieboy7"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":147,"author":{"gitId":"billieboy7"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":148,"author":{"gitId":"billieboy7"},"content":"            if (slashArray.length \u003d\u003d 3 \u0026\u0026 isAllNumeric) {","lastModifiedDate":"2023-09-01"},{"lineNumber":149,"author":{"gitId":"billieboy7"},"content":"                return 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":150,"author":{"gitId":"billieboy7"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":151,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":152,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":153,"author":{"gitId":"billieboy7"},"content":"        return 0;","lastModifiedDate":"2023-09-01"},{"lineNumber":154,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":155,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":156,"author":{"gitId":"billieboy7"},"content":"    public ArrayList\u003cTask\u003e getTaskArrayList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"billieboy7"},"content":"        return taskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":158,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":159,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"billieboy7":159}},{"path":"src/main/java/Task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import Exception.DukeException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"    public ToDo(String description) throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"    public String storeFormat() {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"        String taskType \u003d \"T\";","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"        String isTaskDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"            isTaskDone \u003d \"1\";","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"            isTaskDone \u003d \"0\";","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"        return (taskType + \" | \" + isTaskDone + \" | \" + this.description.trim());","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"billieboy7":26}},{"path":"src/test/java/Main/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package Main;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import Command.*;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"import Exception.DukeException;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"// Testing the Parser.parse() method","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"    public void parseTest() throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"        assertEquals(new ByeCommand().end(), Parser.parse(\"bye\").end());","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"    public void byeByeShouldThrowDukeExceptionParseTest() {","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"        assertThrows(DukeException.class,","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"                () -\u003e {","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"                    Parser.parse(\"bye bye\");","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"                });","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"    public void byeShouldReturnByeCommandParseTest() throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"        assertEquals(ByeCommand.class, Parser.parse(\"bye\").getClass());","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"    public void shouldReturnEventCommandParseTest() throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"        assertEquals(EventCommand.class, Parser.parse(\"event Amma Birthday Dinner \" +","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"                \"/from 02-08-2023 1800 /to 02-08-2023 2200\").getClass());","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"    public void eventSpellingMistakeShouldReturnDukeException() {","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"        assertThrows(DukeException.class,","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"                () -\u003e {","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"billieboy7"},"content":"            Parser.parse(\"evennt Amma Birthday Dinner \" +","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"billieboy7"},"content":"                \"/from 02-08-2023 1800 /to 02-08-2023 2200\");","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"billieboy7"},"content":"        });","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"billieboy7"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"billieboy7"},"content":"    public void notIndicatingToShouldReturnDukeException() {","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"billieboy7"},"content":"        assertThrows(DukeException.class,","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"billieboy7"},"content":"                () -\u003e {","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"billieboy7"},"content":"                    Parser.parse(\"evennt Amma Birthday Dinner \" +","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"billieboy7"},"content":"                            \"/from 02-08-2023 1800\");","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"billieboy7"},"content":"                });","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"billieboy7"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"billieboy7"},"content":"    public void notIndicatingFromShouldReturnDukeException() {","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"billieboy7"},"content":"        assertThrows(DukeException.class,","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"billieboy7"},"content":"                () -\u003e {","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"billieboy7"},"content":"                    Parser.parse(\"evennt Amma Birthday Dinner \" +","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"billieboy7"},"content":"                            \"/to 02-08-2023 1800\");","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"billieboy7"},"content":"                });","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"billieboy7":63}},{"path":"src/test/java/Task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"    public void storeFormatTest() {","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"        assertEquals(\"D | 0 | homework | tomorrow\", new Deadline(\"homework\",","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"                \"tomorrow\").storeFormat());","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"        assertEquals(\"D | 0 | clean room | tonight 8pm\", new Deadline(\"clean room\",","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"                \"tonight 8pm\").storeFormat());","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"        assertEquals(\"D | 0 | watch movie | 16 Aug 1977 2:00AM\", new Deadline(\"watch movie\",","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"                LocalDateTime.parse(\"16-08-1977 0200\",","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"                        DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))).storeFormat());","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"billieboy7":24}},{"path":"src/test/java/Task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"    // Test - private int computeDateTimeFormat(String input)","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"    // The method is used to identify dates in the below Local Date Time format :","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"    // \"dd-MM-yyyy HHmm\" with HHmm in the 24 hour format. Note: This method only checks for the","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"    // structure of the input. The validity of the Local Date Time Format is validated/tested later.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"    // The method will return 1 if it is in LocalDateTimeFormat, 0 if it is a custom string format","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"    public void localDateTimeShouldReturnOne() {","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"        TaskList task \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"        String input \u003d \"16-08-1977 1700\";","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"        assertEquals(1, task.computeDateTimeFormat(input));","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"    public void customInputShouldReturnZero() {","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"        TaskList task \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"        String input \u003d \"16 August 1977 5pm\";","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"        assertEquals(0, task.computeDateTimeFormat(input));","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"billieboy7":33}}]
