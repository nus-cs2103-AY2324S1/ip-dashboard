[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"# Duke - Task Tracker","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"\u003e \"Implement whatever organizational system works best for you, but then be sure to review your to-do list at least once a week.\" â€“ Cheryl Barker ([Source](https://bookroo.com/quotes/to-do-lists))","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"Liberate your mind from the burden of remembering tasks. Duke offers:","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"- Easy to use task tracker","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"- Intuitive text-based interface","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"- Remarkable ~~speed~~ SPEED","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"So what do you have to do :","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"1. Download it from [here](https://github.com/billieboy7/ip/releases/tag/A-Jar).","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"2. Double-click the executable.","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"3. Input your tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"4. Let it handle your task management for you ðŸ˜‰","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"**Awesome Features**","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"- [x] Task management","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"- [ ] Calendar View (coming soon)","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"- [ ] Reminders (coming soon)","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"If you Java programmer, you can use it to practice Java too. Here\u0027s the ```main``` method:","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"```java","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"        Duke duke \u003d new Duke(\"./data/data.txt\");","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"        duke.start();","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"billieboy7":35}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-17"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-17"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-17"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-17"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-17"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-17"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-17"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-17"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-17"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-17"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"billieboy7"},"content":"    mainClass.set(\"gui.Launcher\")","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"billieboy7"},"content":"    archiveFileName \u003d \u0027dukeLatest.jar\u0027","lastModifiedDate":"2023-09-25"},{"lineNumber":51,"author":{"gitId":"billieboy7"},"content":"//    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2023-09-25"},{"lineNumber":52,"author":{"gitId":"billieboy7"},"content":"//    archiveClassifier \u003d null","lastModifiedDate":"2023-09-25"},{"lineNumber":53,"author":{"gitId":"billieboy7"},"content":"//    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"billieboy7"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"billieboy7":21,"-":38}},{"path":"data/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"T | 0 | one","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"T | 0 | two","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"T | 0 | four","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"billieboy7":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"# User Guide for Duke","lastModifiedDate":"2023-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"### ","lastModifiedDate":"2023-09-24"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"Duke is a robust desktop application designed for efficiently managing to-do lists, events, deadlines, and task","lastModifiedDate":"2023-09-24"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"completion status. It combines the user-friendly interface of a graphical application with the flexibility of handling ","lastModifiedDate":"2023-09-24"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"various task types, making it a speedy solution for task management, especially for those with fast typing skills.","lastModifiedDate":"2023-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"### Adding a todo task : `todo`","lastModifiedDate":"2023-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"Add a todo task, which only contains a description. ","lastModifiedDate":"2023-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"Format: `todo DESCRIPTION`","lastModifiedDate":"2023-09-24"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"Example Command: ","lastModifiedDate":"2023-09-24"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"* `todo homework`","lastModifiedDate":"2023-09-24"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"* `todo assignment`","lastModifiedDate":"2023-09-24"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"### Adding an event task : `event`","lastModifiedDate":"2023-09-24"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"Adds an event task, which contains a description, start time and end time.","lastModifiedDate":"2023-09-24"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"Format: `event DESCRIPTION /from STARTTIME /to ENDTIME`","lastModifiedDate":"2023-09-24"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"Example Command:","lastModifiedDate":"2023-09-24"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"* `event Welcome Tea /from  19th July 2023  1700 /to 19th July 2023 1900`","lastModifiedDate":"2023-09-24"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"### Adding a deadline task : `deadline`","lastModifiedDate":"2023-09-24"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"Adds a deadline task, which contains a description and a due date.","lastModifiedDate":"2023-09-24"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"Format: `deadline DESCRIPTION /by ENDTIME`","lastModifiedDate":"2023-09-24"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"Example Command:","lastModifiedDate":"2023-09-24"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"* `deadline Individual Project /by  19th July 2023  1700`","lastModifiedDate":"2023-09-24"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"* `deadline SEP Submission /by  24th July 2023  1900`","lastModifiedDate":"2023-09-24"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"### Listing all tasks : `list`","lastModifiedDate":"2023-09-24"},{"lineNumber":41,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":42,"author":{"gitId":"billieboy7"},"content":"Lists all the users task. ","lastModifiedDate":"2023-09-24"},{"lineNumber":43,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":44,"author":{"gitId":"billieboy7"},"content":"Format: `list`","lastModifiedDate":"2023-09-24"},{"lineNumber":45,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":46,"author":{"gitId":"billieboy7"},"content":"Example Command:","lastModifiedDate":"2023-09-24"},{"lineNumber":47,"author":{"gitId":"billieboy7"},"content":"* `list`","lastModifiedDate":"2023-09-24"},{"lineNumber":48,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":49,"author":{"gitId":"billieboy7"},"content":"### Deleting task : `delete`","lastModifiedDate":"2023-09-24"},{"lineNumber":50,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":51,"author":{"gitId":"billieboy7"},"content":"Delete the task specified from the task list. ","lastModifiedDate":"2023-09-24"},{"lineNumber":52,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":53,"author":{"gitId":"billieboy7"},"content":"Format: `delete INDEX`","lastModifiedDate":"2023-09-24"},{"lineNumber":54,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":55,"author":{"gitId":"billieboy7"},"content":"Example Command:","lastModifiedDate":"2023-09-24"},{"lineNumber":56,"author":{"gitId":"billieboy7"},"content":"* `delete 1` - deletes Task 1","lastModifiedDate":"2023-09-24"},{"lineNumber":57,"author":{"gitId":"billieboy7"},"content":"* `delete 5` - deletes Task 5","lastModifiedDate":"2023-09-24"},{"lineNumber":58,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":59,"author":{"gitId":"billieboy7"},"content":"### Marking task as done : `mark`","lastModifiedDate":"2023-09-24"},{"lineNumber":60,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":61,"author":{"gitId":"billieboy7"},"content":"Marks a task as done, while it retains the task in the task list.","lastModifiedDate":"2023-09-24"},{"lineNumber":62,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":63,"author":{"gitId":"billieboy7"},"content":"Format: `mark INDEX`","lastModifiedDate":"2023-09-24"},{"lineNumber":64,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":65,"author":{"gitId":"billieboy7"},"content":"Example Command:","lastModifiedDate":"2023-09-24"},{"lineNumber":66,"author":{"gitId":"billieboy7"},"content":"* `mark 1` - marks Task 1 as done","lastModifiedDate":"2023-09-24"},{"lineNumber":67,"author":{"gitId":"billieboy7"},"content":"* `mark 5` - marks Task 5 as done","lastModifiedDate":"2023-09-24"},{"lineNumber":68,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":69,"author":{"gitId":"billieboy7"},"content":"### Marking task as not done : `unmark`","lastModifiedDate":"2023-09-24"},{"lineNumber":70,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":71,"author":{"gitId":"billieboy7"},"content":"Marks a task as not done, while it retains the task in the task list.","lastModifiedDate":"2023-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":73,"author":{"gitId":"billieboy7"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2023-09-24"},{"lineNumber":74,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":75,"author":{"gitId":"billieboy7"},"content":"Example Command:","lastModifiedDate":"2023-09-24"},{"lineNumber":76,"author":{"gitId":"billieboy7"},"content":"* `unmark 1` - marks Task 1 as not done","lastModifiedDate":"2023-09-24"},{"lineNumber":77,"author":{"gitId":"billieboy7"},"content":"* `unmark 5` - marks Task 5 as not done","lastModifiedDate":"2023-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":79,"author":{"gitId":"billieboy7"},"content":"### Updating the task description : `update description`","lastModifiedDate":"2023-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":81,"author":{"gitId":"billieboy7"},"content":"Updates the task description to the new one specified by the user without deleting the task.","lastModifiedDate":"2023-09-24"},{"lineNumber":82,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":83,"author":{"gitId":"billieboy7"},"content":"Format: `update description INDEX /update UPDATEDDESCRIPTION`","lastModifiedDate":"2023-09-24"},{"lineNumber":84,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":85,"author":{"gitId":"billieboy7"},"content":"Example Command:","lastModifiedDate":"2023-09-24"},{"lineNumber":86,"author":{"gitId":"billieboy7"},"content":"* `update description 1 /update homework` - changes description of Task 1 to \u0027homework\u0027","lastModifiedDate":"2023-09-24"},{"lineNumber":87,"author":{"gitId":"billieboy7"},"content":"* `update description 5 /update birthday party` - changes description of Task 5 to \u0027birthday party\u0027","lastModifiedDate":"2023-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":91,"author":{"gitId":"billieboy7"},"content":"### Adding a todo task : `todo`","lastModifiedDate":"2023-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":93,"author":{"gitId":"billieboy7"},"content":"Add a todo task, which only contains a description.","lastModifiedDate":"2023-09-24"},{"lineNumber":94,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":95,"author":{"gitId":"billieboy7"},"content":"Format: `todo DESCRIPTION`","lastModifiedDate":"2023-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2023-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":99,"author":{"gitId":"billieboy7"},"content":"`todo homework`","lastModifiedDate":"2023-09-24"},{"lineNumber":100,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":101,"author":{"gitId":"billieboy7"},"content":"Expected outcome:","lastModifiedDate":"2023-09-24"},{"lineNumber":102,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":103,"author":{"gitId":"billieboy7"},"content":"Adds a todo task with the description \u0027homework\u0027","lastModifiedDate":"2023-09-24"},{"lineNumber":104,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":105,"author":{"gitId":"billieboy7"},"content":"```","lastModifiedDate":"2023-09-24"},{"lineNumber":106,"author":{"gitId":"billieboy7"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-24"},{"lineNumber":107,"author":{"gitId":"billieboy7"},"content":"[T][] homework","lastModifiedDate":"2023-09-24"},{"lineNumber":108,"author":{"gitId":"billieboy7"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2023-09-24"},{"lineNumber":109,"author":{"gitId":"billieboy7"},"content":"```","lastModifiedDate":"2023-09-24"},{"lineNumber":110,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":111,"author":{"gitId":"billieboy7"},"content":"### Adding an event task : `event`","lastModifiedDate":"2023-09-24"},{"lineNumber":112,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":113,"author":{"gitId":"billieboy7"},"content":"Adds an event task, which contains a description, start time and end time.","lastModifiedDate":"2023-09-24"},{"lineNumber":114,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":115,"author":{"gitId":"billieboy7"},"content":"Format: `event DESCRIPTION /from STARTTIME /to ENDTIME`","lastModifiedDate":"2023-09-24"},{"lineNumber":116,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":117,"author":{"gitId":"billieboy7"},"content":"Example of usage:","lastModifiedDate":"2023-09-24"},{"lineNumber":118,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":119,"author":{"gitId":"billieboy7"},"content":"* `event Welcome Tea /from  19th July 2023  1700 /to 19th July 2023 1900`","lastModifiedDate":"2023-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":123,"author":{"gitId":"billieboy7"},"content":"Adds an Event task with the description \u0027Welcome Tea\u0027","lastModifiedDate":"2023-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-09-24"},{"lineNumber":126,"author":{"gitId":"billieboy7"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-24"},{"lineNumber":127,"author":{"gitId":"billieboy7"},"content":"[E][] Welcome Tea (from: 19th July 2023 1700 to: 19th July 2023 1900)","lastModifiedDate":"2023-09-24"},{"lineNumber":128,"author":{"gitId":"billieboy7"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2023-09-24"},{"lineNumber":129,"author":{"gitId":"billieboy7"},"content":"```","lastModifiedDate":"2023-09-24"},{"lineNumber":130,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":131,"author":{"gitId":"billieboy7"},"content":"### Adding a deadline task : `deadline`","lastModifiedDate":"2023-09-24"},{"lineNumber":132,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":133,"author":{"gitId":"billieboy7"},"content":"Adds a deadline task, which contains a description and a due date.","lastModifiedDate":"2023-09-24"},{"lineNumber":134,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":135,"author":{"gitId":"billieboy7"},"content":"Format: `deadline DESCRIPTION /by ENDTIME`","lastModifiedDate":"2023-09-24"},{"lineNumber":136,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":137,"author":{"gitId":"billieboy7"},"content":"Example of usage:","lastModifiedDate":"2023-09-24"},{"lineNumber":138,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":139,"author":{"gitId":"billieboy7"},"content":"* `deadline Individual Project /by  19th July 2023  1700`","lastModifiedDate":"2023-09-24"},{"lineNumber":140,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":141,"author":{"gitId":"billieboy7"},"content":"Expected outcome:","lastModifiedDate":"2023-09-24"},{"lineNumber":142,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":143,"author":{"gitId":"billieboy7"},"content":"Adds a deadline task with the description \u0027Individual Project\u0027","lastModifiedDate":"2023-09-24"},{"lineNumber":144,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":145,"author":{"gitId":"billieboy7"},"content":"```","lastModifiedDate":"2023-09-24"},{"lineNumber":146,"author":{"gitId":"billieboy7"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-24"},{"lineNumber":147,"author":{"gitId":"billieboy7"},"content":"[D][] Individual Project (by: 19th July 2023 1700)","lastModifiedDate":"2023-09-24"},{"lineNumber":148,"author":{"gitId":"billieboy7"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2023-09-24"},{"lineNumber":149,"author":{"gitId":"billieboy7"},"content":"```","lastModifiedDate":"2023-09-24"},{"lineNumber":150,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":151,"author":{"gitId":"billieboy7"},"content":"### Listing all tasks : `list`","lastModifiedDate":"2023-09-24"},{"lineNumber":152,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":153,"author":{"gitId":"billieboy7"},"content":"Lists all the users task.","lastModifiedDate":"2023-09-24"},{"lineNumber":154,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":155,"author":{"gitId":"billieboy7"},"content":"Format: `list`","lastModifiedDate":"2023-09-24"},{"lineNumber":156,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":157,"author":{"gitId":"billieboy7"},"content":"Example of usage:","lastModifiedDate":"2023-09-24"},{"lineNumber":158,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":159,"author":{"gitId":"billieboy7"},"content":"* `list`","lastModifiedDate":"2023-09-24"},{"lineNumber":160,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":161,"author":{"gitId":"billieboy7"},"content":"Expected outcome:","lastModifiedDate":"2023-09-24"},{"lineNumber":162,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":163,"author":{"gitId":"billieboy7"},"content":"Lists all tasks.","lastModifiedDate":"2023-09-24"},{"lineNumber":164,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":165,"author":{"gitId":"billieboy7"},"content":"```","lastModifiedDate":"2023-09-24"},{"lineNumber":166,"author":{"gitId":"billieboy7"},"content":"Here are the tasks in your list: ","lastModifiedDate":"2023-09-24"},{"lineNumber":167,"author":{"gitId":"billieboy7"},"content":"1.[T][] homework","lastModifiedDate":"2023-09-24"},{"lineNumber":168,"author":{"gitId":"billieboy7"},"content":"2.[E][] Welcome Tea (from: 19th July 2023 1700 to: 19th July 2023 1900)","lastModifiedDate":"2023-09-24"},{"lineNumber":169,"author":{"gitId":"billieboy7"},"content":"3.[D][] Individual Project (by: 19th July 2023 1700)","lastModifiedDate":"2023-09-24"},{"lineNumber":170,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":171,"author":{"gitId":"billieboy7"},"content":"-----------------------------------------------------------------------","lastModifiedDate":"2023-09-24"},{"lineNumber":172,"author":{"gitId":"billieboy7"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2023-09-24"},{"lineNumber":173,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":174,"author":{"gitId":"billieboy7"},"content":"-----------------------------------------------------------------------","lastModifiedDate":"2023-09-24"},{"lineNumber":175,"author":{"gitId":"billieboy7"},"content":"```","lastModifiedDate":"2023-09-24"},{"lineNumber":176,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":177,"author":{"gitId":"billieboy7"},"content":"### Deleting task : `delete`","lastModifiedDate":"2023-09-24"},{"lineNumber":178,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":179,"author":{"gitId":"billieboy7"},"content":"Delete the task specified from the task list.","lastModifiedDate":"2023-09-24"},{"lineNumber":180,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":181,"author":{"gitId":"billieboy7"},"content":"Format: `delete INDEX`","lastModifiedDate":"2023-09-24"},{"lineNumber":182,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":183,"author":{"gitId":"billieboy7"},"content":"Example of usage:","lastModifiedDate":"2023-09-24"},{"lineNumber":184,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":185,"author":{"gitId":"billieboy7"},"content":"* `delete 1` ","lastModifiedDate":"2023-09-24"},{"lineNumber":186,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":187,"author":{"gitId":"billieboy7"},"content":"Expected outcome:","lastModifiedDate":"2023-09-24"},{"lineNumber":188,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":189,"author":{"gitId":"billieboy7"},"content":"Deletes Task 1","lastModifiedDate":"2023-09-24"},{"lineNumber":190,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":191,"author":{"gitId":"billieboy7"},"content":"```","lastModifiedDate":"2023-09-24"},{"lineNumber":192,"author":{"gitId":"billieboy7"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2023-09-24"},{"lineNumber":193,"author":{"gitId":"billieboy7"},"content":"[T][] homework","lastModifiedDate":"2023-09-24"},{"lineNumber":194,"author":{"gitId":"billieboy7"},"content":"Now you have 2 tasks in the list. ","lastModifiedDate":"2023-09-24"},{"lineNumber":195,"author":{"gitId":"billieboy7"},"content":"```","lastModifiedDate":"2023-09-24"},{"lineNumber":196,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":197,"author":{"gitId":"billieboy7"},"content":"#### Marking task as done : `mark`","lastModifiedDate":"2023-09-24"},{"lineNumber":198,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":199,"author":{"gitId":"billieboy7"},"content":"Marks a task as done, while it retains the task in the task list.","lastModifiedDate":"2023-09-24"},{"lineNumber":200,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":201,"author":{"gitId":"billieboy7"},"content":"Format: `mark INDEX`","lastModifiedDate":"2023-09-24"},{"lineNumber":202,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":203,"author":{"gitId":"billieboy7"},"content":"Example of usage:","lastModifiedDate":"2023-09-24"},{"lineNumber":204,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":205,"author":{"gitId":"billieboy7"},"content":"* `mark 1`","lastModifiedDate":"2023-09-24"},{"lineNumber":206,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":207,"author":{"gitId":"billieboy7"},"content":"Expected outcome:","lastModifiedDate":"2023-09-24"},{"lineNumber":208,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":209,"author":{"gitId":"billieboy7"},"content":"Marks Task 1 as done.","lastModifiedDate":"2023-09-24"},{"lineNumber":210,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":211,"author":{"gitId":"billieboy7"},"content":"```","lastModifiedDate":"2023-09-24"},{"lineNumber":212,"author":{"gitId":"billieboy7"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-09-24"},{"lineNumber":213,"author":{"gitId":"billieboy7"},"content":"[E][X] Welcome Tea (from: 19th July 2023 1700 to: 19th July 2023 1900)","lastModifiedDate":"2023-09-24"},{"lineNumber":214,"author":{"gitId":"billieboy7"},"content":"Now you have 2 tasks in the list. ","lastModifiedDate":"2023-09-24"},{"lineNumber":215,"author":{"gitId":"billieboy7"},"content":"```","lastModifiedDate":"2023-09-24"},{"lineNumber":216,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":217,"author":{"gitId":"billieboy7"},"content":"### Marking task as not done : `unmark`","lastModifiedDate":"2023-09-24"},{"lineNumber":218,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":219,"author":{"gitId":"billieboy7"},"content":"Marks a task as not done, while it retains the task in the task list.","lastModifiedDate":"2023-09-24"},{"lineNumber":220,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":221,"author":{"gitId":"billieboy7"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2023-09-24"},{"lineNumber":222,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":223,"author":{"gitId":"billieboy7"},"content":"Example of usage:","lastModifiedDate":"2023-09-24"},{"lineNumber":224,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":225,"author":{"gitId":"billieboy7"},"content":"* `unmark 1`","lastModifiedDate":"2023-09-24"},{"lineNumber":226,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":227,"author":{"gitId":"billieboy7"},"content":"Expected outcome:","lastModifiedDate":"2023-09-24"},{"lineNumber":228,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":229,"author":{"gitId":"billieboy7"},"content":"Marks Task 1 as not done","lastModifiedDate":"2023-09-24"},{"lineNumber":230,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":231,"author":{"gitId":"billieboy7"},"content":"```","lastModifiedDate":"2023-09-24"},{"lineNumber":232,"author":{"gitId":"billieboy7"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-09-24"},{"lineNumber":233,"author":{"gitId":"billieboy7"},"content":"[E][] Welcome Tea (from: 19th July 2023 1700 to: 19th July 2023 1900)","lastModifiedDate":"2023-09-24"},{"lineNumber":234,"author":{"gitId":"billieboy7"},"content":"Now you have 2 tasks in the list. ","lastModifiedDate":"2023-09-24"},{"lineNumber":235,"author":{"gitId":"billieboy7"},"content":"```","lastModifiedDate":"2023-09-24"},{"lineNumber":236,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":237,"author":{"gitId":"billieboy7"},"content":"### Updating the task description : `update description`","lastModifiedDate":"2023-09-24"},{"lineNumber":238,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":239,"author":{"gitId":"billieboy7"},"content":"Updates the task description to the new one specified by the user without deleting the task.","lastModifiedDate":"2023-09-24"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":241,"author":{"gitId":"billieboy7"},"content":"Format: `update description INDEX /update UPDATEDDESCRIPTION`","lastModifiedDate":"2023-09-24"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":245,"author":{"gitId":"billieboy7"},"content":"* `update description 1 /update birthday party` ","lastModifiedDate":"2023-09-24"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":249,"author":{"gitId":"billieboy7"},"content":"Changes description of Task 1 to \u0027birthday party\u0027.","lastModifiedDate":"2023-09-24"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":251,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":252,"author":{"gitId":"billieboy7"},"content":"Updated the description of Task 1 from \"Welcome Tea\" to \"birthday party\"","lastModifiedDate":"2023-09-24"},{"lineNumber":253,"author":{"gitId":"billieboy7"},"content":"Now you have 2 tasks in the list. ","lastModifiedDate":"2023-09-24"},{"lineNumber":254,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"billieboy7":223,"-":31}},{"path":"src/main/java/Command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package command;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import main.Storage;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"import main.UI;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import task.Task;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"import task.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"/**","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":" * FindCommand is a subclass of Command.","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":" * Used to execute Find Commands.","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":" */","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"    private String keyword;","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"    public FindCommand(String fullCommand) {","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"        this.keyword \u003d fullCommand.substring(5);","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"     * @param taskList object containing the ArrayList of tasks","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"     * @param ui user interface responsible for terminal messages","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"     * @param storage object to communicate with data.txt file","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"     * @return find message to be printed in the GUI","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"    public String execute(TaskList taskList, UI ui, Storage storage) {","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"        TaskList findList \u003d new TaskList();","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"        for (Task t : taskList.getTaskArrayList()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"            if(t.getDescription().contains(this.keyword)) {","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"                findList.addTask(t);","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"        String message \u003d ui.findList(findList.getTaskArrayList(), true);","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"        return message;","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"billieboy7":40}},{"path":"src/main/java/Command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package command;","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import main.Storage;","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"import main.UI;","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import task.TaskList;","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":" * ListCommand is a subclass of Command.","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":" * Used to execute List Commands.","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"     * Constructor for ListCommand","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"    public ListCommand() {}","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"     * method to execute the list sequence","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"     * @param taskList object containing the ArrayList of tasks","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"     * @param ui user interface responsible for terminal messages","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"     * @param storage object to communicate with data.txt file","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"     * @return list message to be printed in the GUI","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"    public String execute(TaskList taskList, UI ui, Storage storage) {","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"        return ui.printList(taskList.getTaskArrayList());","lastModifiedDate":"2023-09-19"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"billieboy7":30}},{"path":"src/main/java/Command/UpdateDescriptionCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package command;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import exception.DukeException;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"import main.Storage;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import main.UI;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"import task.TaskList;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"import static java.lang.Integer.parseInt;","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"/**","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":" * UpdateDescriptionCommand is a subclass of Command.","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":" * Used to execute Update Description Commands.","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":" */","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"public class UpdateDescriptionCommand extends Command {","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"    private String updatedDescription;","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"    private int taskIndex;","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"     * Constructor for UpdateDescriptionCommand","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"     * @param command user command","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"    public UpdateDescriptionCommand(String command) {","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"        String shortCommand \u003d command.substring(18).trim();","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"        this.taskIndex \u003d parseInt(shortCommand, 0, 1, 10);","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"        String[] list \u003d shortCommand.split(\"/\");","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"        this.updatedDescription \u003d list[1].trim().substring(7);","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"     * @param taskList object containing the ArrayList of tasks","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"     * @param ui user interface responsible for terminal messages","lastModifiedDate":"2023-09-25"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"     * @param storage object to communicate with data.txt file","lastModifiedDate":"2023-09-25"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"     * @return execute message to be printed in the GUI","lastModifiedDate":"2023-09-25"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"     * @throws DukeException","lastModifiedDate":"2023-09-25"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":41,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"billieboy7"},"content":"    public String execute(TaskList taskList, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"billieboy7"},"content":"        String message \u003d taskList.updateTaskDescription(taskIndex, this.updatedDescription);","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"billieboy7"},"content":"        storage.saveList(taskList);","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"billieboy7"},"content":"        return message;","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"billieboy7":47}},{"path":"src/main/java/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package command;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import exception.DukeException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"import task.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import main.UI;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"import main.Storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":" * ByeCommand is a subclass of Command.","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":" * Used to execute Bye Commands.","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"     * Constructor for ByeCommand","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"    public ByeCommand() {","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"     * method to execute the bye sequence","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"     * @param taskList object containing the ArrayList of tasks","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"     * @param ui       user interface responsible for terminal messages","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"     * @param storage  object to communicate with data.txt file","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"     * @return bye message to be printed in the GUI","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"     * @throws DukeException organic exception for Duke","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"    public String execute(TaskList taskList, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"        storage.saveList(taskList);","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"        return ui.printByeMessage();","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"     * Method to decide whether program should continue","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"     * @return false, signifying end of program","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"billieboy7"},"content":"    public boolean isContinue() {","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"billieboy7"},"content":"        return false;","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"billieboy7":44}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package command;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import task.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"import main.UI;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import main.Storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"import exception.DukeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":" * Abstract Command class","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"     * method to execute a command sequence","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"     * @param taskList object containing the ArrayList of tasks","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"     * @param ui user interface responsible for terminal messages","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"     * @param storage object to communicate with data.txt file","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"     * @return output message to be printed in the GUI","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"     * @throws DukeException","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"    public String execute(TaskList taskList, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"        return null;","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"     * Method to decide whether program should continue","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"     * @return true, signifying continuance of program","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"    public boolean isContinue() {","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"        return true;","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"billieboy7":33}},{"path":"src/main/java/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package command;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import task.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"import main.UI;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import main.Storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"import exception.DukeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":" * DeadlineCommand is a subclass of Command.","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":" * Used to execute Deadline Commands.","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"    private String fullCommand;","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"     * Constructor for DeadlineCommand","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"     * @param fullCommand full user input","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"    public DeadlineCommand(String fullCommand) {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"     * method to execute the deadline sequence","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"     * @param taskList object containing the ArrayList of tasks","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"     * @param ui       user interface responsible for terminal messages","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"     * @param storage  object to communicate with data.txt file","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"     * @return deadline message to be printed in the GUI","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"     * @throws DukeException organic exception for Duke","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"    public String execute(TaskList taskList, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"        String message \u003d taskList.addDeadline(fullCommand);","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"        storage.saveList(taskList);","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"        return message;","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"billieboy7":40}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package command;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import task.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"import main.UI;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import main.Storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"import exception.DukeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":" * DeleteCommand is a subclass of Command.","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":" * Used to execute Delete Commands.","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"    private String fullCommand;","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"     * Constructor for DeleteCommand","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"     * @param fullCommand full user input","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"    public DeleteCommand(String fullCommand) {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"     * method to execute the delete sequence","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"     * @param taskList object containing the ArrayList of tasks","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"     * @param ui       user interface responsible for terminal messages","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"     * @param storage  object to communicate with data.txt file","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"     * @return delete message to be printed in the GUI","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"     * @throws DukeException organic exception for Duke","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"    public String execute(TaskList taskList, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"        // In the event that the task list is empty;","lastModifiedDate":"2023-09-25"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"        if (taskList.getSize() \u003d\u003d 0) {","lastModifiedDate":"2023-09-25"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"            StringBuilder emptyTaskMessage \u003d new StringBuilder(\"No tasks in the task list to be deleted.\");","lastModifiedDate":"2023-09-25"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"            emptyTaskMessage.append(ui.printDivider());","lastModifiedDate":"2023-09-25"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"            return String.valueOf(emptyTaskMessage);","lastModifiedDate":"2023-09-25"},{"lineNumber":41,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":42,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":43,"author":{"gitId":"billieboy7"},"content":"        int taskIndex \u003d Integer.parseInt(this.fullCommand.substring(7).trim()) - 1;","lastModifiedDate":"2023-09-25"},{"lineNumber":44,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":45,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":46,"author":{"gitId":"billieboy7"},"content":"        String message \u003d ui.showDelete(taskIndex, taskList);","lastModifiedDate":"2023-09-25"},{"lineNumber":47,"author":{"gitId":"billieboy7"},"content":"        taskList.deleteTask(taskIndex);","lastModifiedDate":"2023-09-25"},{"lineNumber":48,"author":{"gitId":"billieboy7"},"content":"        storage.saveList(taskList);","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":50,"author":{"gitId":"billieboy7"},"content":"        return message;","lastModifiedDate":"2023-09-18"},{"lineNumber":51,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"billieboy7":53}},{"path":"src/main/java/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package command;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import task.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"import main.UI;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import main.Storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"import exception.DukeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":" * EventCommand is a subclass of Command.","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":" * Used to execute Event Commands.","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"    private String fullCommand;","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"     * Constructor for EventCommand","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"     * @param fullCommand full user input","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"    public EventCommand(String fullCommand) {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"     * method to execute the event sequence","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"     * @param taskList object containing the ArrayList of tasks","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"     * @param ui       user interface responsible for terminal messages","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"     * @param storage  object to communicate with data.txt file","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"     * @return event message to be printed in the GUI","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"     * @throws DukeException organic exception for Duke","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"    public String execute(TaskList taskList, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"        String message \u003d taskList.addEvent(fullCommand);","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"        storage.saveList(taskList);","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"        return message;","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"billieboy7":40}},{"path":"src/main/java/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package command;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import task.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"import main.UI;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import main.Storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"import exception.DukeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":" * Mark Command is a subclass of Command.","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":" * Used to execute Mark Commands.","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"    private int index;","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"     * Constructor for MarkCommand","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"     * @param index index of task to be marked","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"     * method to execute the mark sequence","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"     * @param taskList object containing the ArrayList of tasks","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"     * @param ui       user interface responsible for terminal messages","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"     * @param storage  object to communicate with data.txt file","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"     * @return mark message to be printed in the GUI","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"     * @throws DukeException organic exception for Duke","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"    public String execute(TaskList taskList, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"        // Empty task list","lastModifiedDate":"2023-09-25"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"        if (taskList.getSize() \u003d\u003d 0) {","lastModifiedDate":"2023-09-25"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"            StringBuilder emptyTaskMessage \u003d new StringBuilder(\"No tasks in the task list to be marked as done.\");","lastModifiedDate":"2023-09-25"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"            emptyTaskMessage.append(ui.printDivider());","lastModifiedDate":"2023-09-25"},{"lineNumber":41,"author":{"gitId":"billieboy7"},"content":"            return String.valueOf(emptyTaskMessage);","lastModifiedDate":"2023-09-25"},{"lineNumber":42,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":43,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":44,"author":{"gitId":"billieboy7"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"billieboy7"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"billieboy7"},"content":"            sb.append(taskList.mark(this.index));","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"billieboy7"},"content":"            storage.saveList(taskList);","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"billieboy7"},"content":"        } catch (RuntimeException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"billieboy7"},"content":"            throw new DukeException(String.format(\"Given index is out of range. Index range should be between\" +","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"billieboy7"},"content":"                            \" 1 and %d.\",","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"billieboy7"},"content":"                    taskList.getSize()));","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"billieboy7"},"content":"        return String.valueOf(sb);","lastModifiedDate":"2023-09-18"},{"lineNumber":54,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"billieboy7":55}},{"path":"src/main/java/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package command;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import task.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"import main.UI;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import main.Storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"import exception.DukeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":" * ToDoCommand is a subclass of Command.","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":" * Used to execute ToDo Commands.","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"    String description;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"     * Constructor for ToDo Command","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"     * @param description user description to be saved for ToDo tasks","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"    public ToDoCommand(String description) {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"     * @param taskList object containing the ArrayList of tasks","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"     * @param ui user interface responsible for terminal messages","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"     * @param storage object to communicate with data.txt file","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"     * @return todo message to be printed in the GUI","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"     * @throws DukeException","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"    public String execute(TaskList taskList, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"        String message \u003d taskList.addToDo(description);","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"        storage.saveList(taskList);","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"        return message;","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"billieboy7":38}},{"path":"src/main/java/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package command;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import task.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"import main.UI;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import main.Storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"import exception.DukeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":" * UnmarkCommand is a subclass of Command.","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":" * Used to execute Unmark Commands.","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"    int index;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"     * Constructor for UnmarkCommand","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"     * @param index index of task to be unmarked","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"     * method to execute the unmark sequence","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"     * @param taskList object containing the ArrayList of tasks","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"     * @param ui user interface responsible for terminal messages","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"     * @param storage object to communicate with data.txt file","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"     * @return unmark message to be printed in the GUI","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"     * @throws DukeException organic exception for Duke","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"    public String execute(TaskList taskList, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"        // Empty task list","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"        if (taskList.getSize() \u003d\u003d 0) {","lastModifiedDate":"2023-09-25"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"            StringBuilder emptyTaskMessage \u003d new StringBuilder(\"No tasks in the task list to be marked as not done.\");","lastModifiedDate":"2023-09-25"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"            emptyTaskMessage.append(ui.printDivider());","lastModifiedDate":"2023-09-25"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"            return String.valueOf(emptyTaskMessage);","lastModifiedDate":"2023-09-25"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":41,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":42,"author":{"gitId":"billieboy7"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-25"},{"lineNumber":43,"author":{"gitId":"billieboy7"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"billieboy7"},"content":"            sb.append(taskList.unmark(this.index));","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"billieboy7"},"content":"            storage.saveList(taskList);","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"billieboy7"},"content":"        } catch (RuntimeException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"billieboy7"},"content":"            throw new DukeException(String.format(\"Given index is out of range. Index range should be between\" +","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"billieboy7"},"content":"                            \" 1 and %d.\",","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"billieboy7"},"content":"                    taskList.getSize()));","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"billieboy7"},"content":"        return String.valueOf(sb);","lastModifiedDate":"2023-09-18"},{"lineNumber":52,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"billieboy7":53}},{"path":"src/main/java/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package exception;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":" * DukeException class is subclass of the Exception class","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"     * Constructor for DukeException","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"     * @param message message to be output when exception is thrown","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"billieboy7":15}},{"path":"src/main/java/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package gui;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"/**","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":" */","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"    @FXML","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"    @FXML","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"        try {","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"billieboy7"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"billieboy7"},"content":"    private void flip() {","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"billieboy7"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"billieboy7"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-18"},{"lineNumber":49,"author":{"gitId":"billieboy7"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-18"},{"lineNumber":50,"author":{"gitId":"billieboy7"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-18"},{"lineNumber":51,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":52,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":53,"author":{"gitId":"billieboy7"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-18"},{"lineNumber":54,"author":{"gitId":"billieboy7"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-18"},{"lineNumber":55,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":56,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":57,"author":{"gitId":"billieboy7"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-18"},{"lineNumber":58,"author":{"gitId":"billieboy7"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-18"},{"lineNumber":59,"author":{"gitId":"billieboy7"},"content":"        db.flip();","lastModifiedDate":"2023-09-18"},{"lineNumber":60,"author":{"gitId":"billieboy7"},"content":"        return db;","lastModifiedDate":"2023-09-18"},{"lineNumber":61,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":62,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-09-18"},{"lineNumber":63,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"billieboy7":63}},{"path":"src/main/java/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package gui;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"/**","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":" * Launcher class is in charge of launching the application.","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":" */","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"public class Launcher {","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"billieboy7":12}},{"path":"src/main/java/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package gui;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"import main.Duke;","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"/**","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":" */","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"    private final Duke duke \u003d new Duke(\"./data/data.txt\");","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"        try {","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"            stage.show();","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"billieboy7":34}},{"path":"src/main/java/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package gui;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2023-09-24"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"import main.Duke;","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"import main.UI;","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"/**","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":" */","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"    @FXML","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"    @FXML","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"    @FXML","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"    @FXML","lastModifiedDate":"2023-09-24"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"    private Text dialogText;","lastModifiedDate":"2023-09-24"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"    @FXML","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"    private UI ui \u003d new UI();","lastModifiedDate":"2023-09-24"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"    @FXML","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"        String welcomeMessage \u003d ui.printWelcomeMessage();","lastModifiedDate":"2023-09-24"},{"lineNumber":41,"author":{"gitId":"billieboy7"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(welcomeMessage, dukeImage));","lastModifiedDate":"2023-09-24"},{"lineNumber":42,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"billieboy7"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"billieboy7"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":49,"author":{"gitId":"billieboy7"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-18"},{"lineNumber":50,"author":{"gitId":"billieboy7"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-18"},{"lineNumber":51,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":52,"author":{"gitId":"billieboy7"},"content":"    @FXML","lastModifiedDate":"2023-09-18"},{"lineNumber":53,"author":{"gitId":"billieboy7"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-18"},{"lineNumber":54,"author":{"gitId":"billieboy7"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-18"},{"lineNumber":55,"author":{"gitId":"billieboy7"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-18"},{"lineNumber":56,"author":{"gitId":"billieboy7"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-18"},{"lineNumber":57,"author":{"gitId":"billieboy7"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-18"},{"lineNumber":58,"author":{"gitId":"billieboy7"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-18"},{"lineNumber":59,"author":{"gitId":"billieboy7"},"content":"        );","lastModifiedDate":"2023-09-18"},{"lineNumber":60,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":61,"author":{"gitId":"billieboy7"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-25"},{"lineNumber":62,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":63,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":64,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-09-18"},{"lineNumber":65,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"billieboy7":65}},{"path":"src/main/java/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package main;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import command.Command;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"import exception.DukeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import task.TaskList;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":" * Duke class - Main class","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"    Scanner userInput \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"    TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"    Storage storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"    UI ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"        Duke duke \u003d new Duke(\"./data/data.txt\");","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"        duke.start();","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"     * Constructor for Duke class","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"     * @param filePath file path from which past saved date, if available, should be read from","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-09-17"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"        this.storage \u003d new Storage(filePath, tasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"        this.ui \u003d new UI();","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"        this.ui.printWelcomeMessage();","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"            this.storage.loadList();","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"billieboy7"},"content":"     * Method to start the Duke program","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"billieboy7"},"content":"    private void start() {","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"billieboy7"},"content":"        boolean isContinue \u003d true;","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"billieboy7"},"content":"        while (isContinue) {","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"billieboy7"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"billieboy7"},"content":"                String input \u003d userInput.nextLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"billieboy7"},"content":"                Command command \u003d Parser.parse(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"billieboy7"},"content":"                command.execute(this.tasks, this.ui, this.storage);","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"billieboy7"},"content":"                isContinue \u003d command.isContinue();","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"billieboy7"},"content":"                if (isContinue) {","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"billieboy7"},"content":"                    System.out.println(\"Now you have \" + tasks.getSize() + \" tasks in the list.\");","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"billieboy7"},"content":"                    this.ui.printDivider();","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"billieboy7"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"billieboy7"},"content":"            } catch (DukeException exception) {","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"billieboy7"},"content":"                System.out.println(exception.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"billieboy7"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":66,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":67,"author":{"gitId":"billieboy7"},"content":"     * getResponse fetches an output from the bot.","lastModifiedDate":"2023-09-25"},{"lineNumber":68,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":69,"author":{"gitId":"billieboy7"},"content":"     * @param input Input typed in by the user.","lastModifiedDate":"2023-09-25"},{"lineNumber":70,"author":{"gitId":"billieboy7"},"content":"     * @return Output from the bot in response to the input.","lastModifiedDate":"2023-09-25"},{"lineNumber":71,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":72,"author":{"gitId":"billieboy7"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-18"},{"lineNumber":73,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":74,"author":{"gitId":"billieboy7"},"content":"        StringBuilder botResponse \u003d new StringBuilder();","lastModifiedDate":"2023-09-18"},{"lineNumber":75,"author":{"gitId":"billieboy7"},"content":"        boolean isContinue;","lastModifiedDate":"2023-09-18"},{"lineNumber":76,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":77,"author":{"gitId":"billieboy7"},"content":"        try {","lastModifiedDate":"2023-09-18"},{"lineNumber":78,"author":{"gitId":"billieboy7"},"content":"            Command command \u003d Parser.parse(input);","lastModifiedDate":"2023-09-18"},{"lineNumber":79,"author":{"gitId":"billieboy7"},"content":"            botResponse.append(command.execute(this.tasks, this.ui, this.storage));","lastModifiedDate":"2023-09-18"},{"lineNumber":80,"author":{"gitId":"billieboy7"},"content":"            isContinue \u003d command.isContinue();","lastModifiedDate":"2023-09-18"},{"lineNumber":81,"author":{"gitId":"billieboy7"},"content":"            if (isContinue) {","lastModifiedDate":"2023-09-18"},{"lineNumber":82,"author":{"gitId":"billieboy7"},"content":"                botResponse.append(\"\\nNow you have \" + tasks.getSize() + \" tasks in the list.\");","lastModifiedDate":"2023-09-18"},{"lineNumber":83,"author":{"gitId":"billieboy7"},"content":"                botResponse.append(this.ui.printDivider());","lastModifiedDate":"2023-09-18"},{"lineNumber":84,"author":{"gitId":"billieboy7"},"content":"            }","lastModifiedDate":"2023-09-18"},{"lineNumber":85,"author":{"gitId":"billieboy7"},"content":"        } catch(DukeException e){","lastModifiedDate":"2023-09-18"},{"lineNumber":86,"author":{"gitId":"billieboy7"},"content":"                return e.getMessage();","lastModifiedDate":"2023-09-18"},{"lineNumber":87,"author":{"gitId":"billieboy7"},"content":"            }","lastModifiedDate":"2023-09-18"},{"lineNumber":88,"author":{"gitId":"billieboy7"},"content":"            return String.valueOf(botResponse);","lastModifiedDate":"2023-09-18"},{"lineNumber":89,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":90,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"billieboy7":89,"-":2}},{"path":"src/main/java/main/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package main;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import command.ByeCommand;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"import command.Command;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import command.DeadlineCommand;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"import command.DeleteCommand;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"import command.EventCommand;","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"import command.FindCommand;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"import command.ListCommand;","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"import command.MarkCommand;","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"import command.ToDoCommand;","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"import command.UnmarkCommand;","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"import command.UpdateDescriptionCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"import exception.DukeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":" * Parser class to read user input","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"public class Parser {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"     * Parse method reads users input and directs the course of action.","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"     * @param fullCommand User input","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"     * @return Return an Object belonging to the command class for further execution.","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"     * @throws DukeException Organic exception to Duke - subclass of Exception class.","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"    static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"        if (Parser.isBye(fullCommand)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"            assert fullCommand.startsWith(\"bye\") : \"Should start with Bye\";","lastModifiedDate":"2023-09-19"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"            return new ByeCommand();","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"        } else if (Parser.isList(fullCommand)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"            assert fullCommand.startsWith(\"list\") : \"Should start with list\";","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"            return new ListCommand();","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"        } else if (Parser.isMark(fullCommand)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"            assert fullCommand.startsWith(\"mark\") : \"Should start with mark\";","lastModifiedDate":"2023-09-19"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"            int taskIndex \u003d Integer.parseInt(fullCommand.substring(5).trim()) - 1;","lastModifiedDate":"2023-09-24"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"            return new MarkCommand(taskIndex);","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"billieboy7"},"content":"        } else if (Parser.isUnmark(fullCommand)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"billieboy7"},"content":"            assert fullCommand.startsWith(\"unmark\") : \"Should start with unmark\";","lastModifiedDate":"2023-09-19"},{"lineNumber":43,"author":{"gitId":"billieboy7"},"content":"            int taskIndex \u003d Integer.parseInt(fullCommand.substring(7).trim()) - 1;","lastModifiedDate":"2023-09-24"},{"lineNumber":44,"author":{"gitId":"billieboy7"},"content":"            return new UnmarkCommand(taskIndex);","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"billieboy7"},"content":"        } else if (Parser.isToDo(fullCommand)) {","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"billieboy7"},"content":"            assert fullCommand.startsWith(\"todo\") : \"Should start with todo\";","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"billieboy7"},"content":"            String description \u003d fullCommand.substring(4).trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"billieboy7"},"content":"            return new ToDoCommand(description);","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"billieboy7"},"content":"        } else if (Parser.isEvent(fullCommand)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"billieboy7"},"content":"            assert fullCommand.startsWith(\"event\") : \"Should start with event\";","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"billieboy7"},"content":"            return new EventCommand(fullCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"billieboy7"},"content":"        } else if (Parser.isDeadline(fullCommand)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"billieboy7"},"content":"            assert fullCommand.startsWith(\"deadline\") : \"Should start with deadline\";","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"billieboy7"},"content":"            return new DeadlineCommand(fullCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"billieboy7"},"content":"        } else if (Parser.isDelete(fullCommand)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"billieboy7"},"content":"            assert fullCommand.startsWith(\"delete\") : \"Should start with delete\";","lastModifiedDate":"2023-09-19"},{"lineNumber":60,"author":{"gitId":"billieboy7"},"content":"            return new DeleteCommand(fullCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"billieboy7"},"content":"        } else if (Parser.isFind(fullCommand)) {","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"billieboy7"},"content":"            assert fullCommand.startsWith(\"find\") : \"Should start with find\";","lastModifiedDate":"2023-09-19"},{"lineNumber":64,"author":{"gitId":"billieboy7"},"content":"            return new FindCommand(fullCommand);","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"billieboy7"},"content":"        } else if (Parser.isUpdateDescription(fullCommand)) {","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"billieboy7"},"content":"            return new UpdateDescriptionCommand(fullCommand);","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"billieboy7"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"billieboy7"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"billieboy7"},"content":"    private static boolean isBye(String fullCommand) {","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"billieboy7"},"content":"        return fullCommand.equals(\"bye\");","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"billieboy7"},"content":"    private static boolean isList(String fullCommand) {","lastModifiedDate":"2023-09-04"},{"lineNumber":77,"author":{"gitId":"billieboy7"},"content":"        return fullCommand.startsWith(\"list\");","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"billieboy7"},"content":"    private static boolean isMark(String fullCommand) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"billieboy7"},"content":"        boolean isMarkCommand \u003d fullCommand.startsWith(\"mark\");","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"billieboy7"},"content":"        if (isMarkCommand) {","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"billieboy7"},"content":"            testMarkAndDelete(fullCommand);","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":86,"author":{"gitId":"billieboy7"},"content":"        return isMarkCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"billieboy7"},"content":"    private static boolean isUnmark(String fullCommand) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"billieboy7"},"content":"        boolean isUnmarkCommand \u003d fullCommand.startsWith(\"unmark\");","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"billieboy7"},"content":"        if (isUnmarkCommand) {","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"billieboy7"},"content":"            testMarkAndDelete(fullCommand);","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"billieboy7"},"content":"        return isUnmarkCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":97,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"billieboy7"},"content":"    private static boolean isToDo(String fullCommand) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"billieboy7"},"content":"        boolean isToDoCommand \u003d fullCommand.startsWith(\"todo\");","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"billieboy7"},"content":"        String description \u003d fullCommand.substring(4).trim();","lastModifiedDate":"2023-09-20"},{"lineNumber":102,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":103,"author":{"gitId":"billieboy7"},"content":"        if (isToDoCommand) {","lastModifiedDate":"2023-09-20"},{"lineNumber":104,"author":{"gitId":"billieboy7"},"content":"            testToDo(description);","lastModifiedDate":"2023-09-20"},{"lineNumber":105,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"billieboy7"},"content":"        return isToDoCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":108,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"billieboy7"},"content":"    private static boolean isEvent(String fullCommand) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":111,"author":{"gitId":"billieboy7"},"content":"        boolean isEventCommand \u003d fullCommand.startsWith(\"event\");","lastModifiedDate":"2023-09-20"},{"lineNumber":112,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":113,"author":{"gitId":"billieboy7"},"content":"        if (isEventCommand) {","lastModifiedDate":"2023-09-20"},{"lineNumber":114,"author":{"gitId":"billieboy7"},"content":"            testEvent(fullCommand);","lastModifiedDate":"2023-09-20"},{"lineNumber":115,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":116,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":117,"author":{"gitId":"billieboy7"},"content":"        return isEventCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":118,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":119,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":120,"author":{"gitId":"billieboy7"},"content":"    private static boolean isDeadline(String fullCommand) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":121,"author":{"gitId":"billieboy7"},"content":"        boolean isDeadlineCommand \u003d fullCommand.startsWith(\"deadline\");","lastModifiedDate":"2023-09-20"},{"lineNumber":122,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":123,"author":{"gitId":"billieboy7"},"content":"        if (isDeadlineCommand) {","lastModifiedDate":"2023-09-20"},{"lineNumber":124,"author":{"gitId":"billieboy7"},"content":"            testDeadline(fullCommand);","lastModifiedDate":"2023-09-20"},{"lineNumber":125,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":126,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":127,"author":{"gitId":"billieboy7"},"content":"        return isDeadlineCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":128,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":129,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":130,"author":{"gitId":"billieboy7"},"content":"    private static boolean isDelete(String fullCommand) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":131,"author":{"gitId":"billieboy7"},"content":"        boolean isDeleteCommand \u003d fullCommand.startsWith(\"delete\");","lastModifiedDate":"2023-09-20"},{"lineNumber":132,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":133,"author":{"gitId":"billieboy7"},"content":"        if (isDeleteCommand) {","lastModifiedDate":"2023-09-20"},{"lineNumber":134,"author":{"gitId":"billieboy7"},"content":"            testMarkAndDelete(fullCommand);","lastModifiedDate":"2023-09-20"},{"lineNumber":135,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"billieboy7"},"content":"        return isDeleteCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":138,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"billieboy7"},"content":"    private static boolean isFind(String fullCommand) {","lastModifiedDate":"2023-09-25"},{"lineNumber":141,"author":{"gitId":"billieboy7"},"content":"        String[] inputArray \u003d fullCommand.split(\" \");","lastModifiedDate":"2023-09-05"},{"lineNumber":142,"author":{"gitId":"billieboy7"},"content":"        return inputArray[0].equals(\"find\");","lastModifiedDate":"2023-09-05"},{"lineNumber":143,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":144,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":145,"author":{"gitId":"billieboy7"},"content":"    private static boolean isUpdateDescription(String fullCommand) throws DukeException {","lastModifiedDate":"2023-09-25"},{"lineNumber":146,"author":{"gitId":"billieboy7"},"content":"        boolean isUpdateDescriptionCommand \u003d fullCommand.startsWith(\"update description\");","lastModifiedDate":"2023-09-20"},{"lineNumber":147,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":148,"author":{"gitId":"billieboy7"},"content":"        if (isUpdateDescriptionCommand) {","lastModifiedDate":"2023-09-20"},{"lineNumber":149,"author":{"gitId":"billieboy7"},"content":"            String information \u003d fullCommand.substring(18).trim();","lastModifiedDate":"2023-09-20"},{"lineNumber":150,"author":{"gitId":"billieboy7"},"content":"            testUpdateDescription(information);","lastModifiedDate":"2023-09-20"},{"lineNumber":151,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":152,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":153,"author":{"gitId":"billieboy7"},"content":"        return isUpdateDescriptionCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":154,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":155,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":156,"author":{"gitId":"billieboy7"},"content":"    private static void testToDo(String description) throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":157,"author":{"gitId":"billieboy7"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":158,"author":{"gitId":"billieboy7"},"content":"            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":159,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":160,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":161,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":162,"author":{"gitId":"billieboy7"},"content":"    private static void testMarkAndDelete(String description) throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":163,"author":{"gitId":"billieboy7"},"content":"        String[] words \u003d description.split(\" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":164,"author":{"gitId":"billieboy7"},"content":"        String index \u003d String.join(\" \", Arrays.copyOfRange(words, 1, words.length));","lastModifiedDate":"2023-09-02"},{"lineNumber":165,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":166,"author":{"gitId":"billieboy7"},"content":"        if (index.isEmpty() || !index.matches(\"-?(0|[1-9]\\\\d*)\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":167,"author":{"gitId":"billieboy7"},"content":"            throw new DukeException(\"Following \\\"mark\\\" or \\\"unmark\\\" or \\\"delete\\\", an integer value is expected. Blanks or\" +","lastModifiedDate":"2023-09-02"},{"lineNumber":168,"author":{"gitId":"billieboy7"},"content":"                    \" non-integer values are invalid.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":169,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":170,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":171,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":172,"author":{"gitId":"billieboy7"},"content":"    private static void testEvent(String description) throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":173,"author":{"gitId":"billieboy7"},"content":"        String[] list \u003d description.split(\"/\");","lastModifiedDate":"2023-09-02"},{"lineNumber":174,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":175,"author":{"gitId":"billieboy7"},"content":"        if (list.length !\u003d 3) {","lastModifiedDate":"2023-09-02"},{"lineNumber":176,"author":{"gitId":"billieboy7"},"content":"            throw new DukeException(\"Invalid input. Fill up all fields. Do not forget the \\\"/\\\" symbol before your\" +","lastModifiedDate":"2023-09-02"},{"lineNumber":177,"author":{"gitId":"billieboy7"},"content":"                    \" start and end time.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":178,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":179,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":180,"author":{"gitId":"billieboy7"},"content":"        String start \u003d list[1].substring(5);","lastModifiedDate":"2023-09-02"},{"lineNumber":181,"author":{"gitId":"billieboy7"},"content":"        String end \u003d list[2].substring(3);","lastModifiedDate":"2023-09-02"},{"lineNumber":182,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":183,"author":{"gitId":"billieboy7"},"content":"        if (start.isEmpty()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":184,"author":{"gitId":"billieboy7"},"content":"            throw new DukeException(\"\\\"from\\\" time missing!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":185,"author":{"gitId":"billieboy7"},"content":"        } else if (end.isEmpty()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":186,"author":{"gitId":"billieboy7"},"content":"            throw new DukeException(\"\\\"to\\\" time missing!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":187,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":188,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":189,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":190,"author":{"gitId":"billieboy7"},"content":"    private static void testDeadline(String description) throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":191,"author":{"gitId":"billieboy7"},"content":"        String[] list \u003d description.split(\"/\");","lastModifiedDate":"2023-09-02"},{"lineNumber":192,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":193,"author":{"gitId":"billieboy7"},"content":"        if (list.length !\u003d 2) {","lastModifiedDate":"2023-09-02"},{"lineNumber":194,"author":{"gitId":"billieboy7"},"content":"            throw new DukeException(\"Invalid input. Fill up all fields. Do not forget the \\\"/\\\" symbol before your\" +","lastModifiedDate":"2023-09-02"},{"lineNumber":195,"author":{"gitId":"billieboy7"},"content":"                    \" end time.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":196,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":197,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":198,"author":{"gitId":"billieboy7"},"content":"        String time \u003d list[1];","lastModifiedDate":"2023-09-02"},{"lineNumber":199,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":200,"author":{"gitId":"billieboy7"},"content":"        if (!time.startsWith(\"by\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":201,"author":{"gitId":"billieboy7"},"content":"            throw new DukeException(\"Invalid input. Start with \\\"by\\\".\");","lastModifiedDate":"2023-09-02"},{"lineNumber":202,"author":{"gitId":"billieboy7"},"content":"        } else if (time.substring(2).equals(\" \") || time.substring(2).isEmpty()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":203,"author":{"gitId":"billieboy7"},"content":"            throw new DukeException(\"Invalid input. Field Empty.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":204,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":205,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":206,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":207,"author":{"gitId":"billieboy7"},"content":"    private static void testUpdateDescription(String description) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":208,"author":{"gitId":"billieboy7"},"content":"        String[] list \u003d description.split(\" \");","lastModifiedDate":"2023-09-20"},{"lineNumber":209,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":210,"author":{"gitId":"billieboy7"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":211,"author":{"gitId":"billieboy7"},"content":"            // this is just to test whether there is an integer following the update description command","lastModifiedDate":"2023-09-20"},{"lineNumber":212,"author":{"gitId":"billieboy7"},"content":"            Integer.parseInt(list[0].trim());","lastModifiedDate":"2023-09-20"},{"lineNumber":213,"author":{"gitId":"billieboy7"},"content":"        } catch (NumberFormatException ex) {","lastModifiedDate":"2023-09-20"},{"lineNumber":214,"author":{"gitId":"billieboy7"},"content":"            throw new DukeException(\"update description should be followed by an integer, which represents\" +","lastModifiedDate":"2023-09-20"},{"lineNumber":215,"author":{"gitId":"billieboy7"},"content":"                    \" the index of the task description to be updated.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":216,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":217,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":218,"author":{"gitId":"billieboy7"},"content":"        if (list[2].isEmpty()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":219,"author":{"gitId":"billieboy7"},"content":"            throw new DukeException(\"missing description field\");","lastModifiedDate":"2023-09-20"},{"lineNumber":220,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":221,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":222,"author":{"gitId":"billieboy7"},"content":"        // by this stage, it has been confirmed that there is an integer value after update description and there is","lastModifiedDate":"2023-09-20"},{"lineNumber":223,"author":{"gitId":"billieboy7"},"content":"        // a description field.","lastModifiedDate":"2023-09-20"},{"lineNumber":224,"author":{"gitId":"billieboy7"},"content":"        String[] slashList \u003d description.split(\"/\");","lastModifiedDate":"2023-09-20"},{"lineNumber":225,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":226,"author":{"gitId":"billieboy7"},"content":"        String update \u003d slashList[1]; // the information on the update should be the second element in the list","lastModifiedDate":"2023-09-20"},{"lineNumber":227,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":228,"author":{"gitId":"billieboy7"},"content":"        if (!update.startsWith(\"update\")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":229,"author":{"gitId":"billieboy7"},"content":"            throw new DukeException(\"Invalid input. Start with \\\"update\\\".\");","lastModifiedDate":"2023-09-20"},{"lineNumber":230,"author":{"gitId":"billieboy7"},"content":"        } else if (update.substring(6).trim().isEmpty()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":231,"author":{"gitId":"billieboy7"},"content":"            throw new DukeException(\"Empty input\");","lastModifiedDate":"2023-09-20"},{"lineNumber":232,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":233,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":234,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":235,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"billieboy7":235}},{"path":"src/main/java/main/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package main;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import exception.DukeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"import task.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"import task.ToDo;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"import task.Deadline;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"import task.Event;","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"import task.Task;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"import java.io.File;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":" * Storage class to create objects that manage saving/loading data","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"public class Storage {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"    String filePath;","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"    TaskList taskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"     * Constructor for Storage class.","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"     * @param filePath File path from which past saved date, if available, should be read from or load to.","lastModifiedDate":"2023-09-25"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"     * @param taskList Contains the ArrayList of Task.","lastModifiedDate":"2023-09-25"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"    public Storage(String filePath, TaskList taskList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"billieboy7"},"content":"     * Saves data in the given TaskList object to the file specified in the file path.","lastModifiedDate":"2023-09-25"},{"lineNumber":42,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":43,"author":{"gitId":"billieboy7"},"content":"     * @param taskList Contains the ArrayList of Task.","lastModifiedDate":"2023-09-25"},{"lineNumber":44,"author":{"gitId":"billieboy7"},"content":"     * @throws DukeException Organic exception for Duke.","lastModifiedDate":"2023-09-25"},{"lineNumber":45,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"billieboy7"},"content":"    public void saveList(TaskList taskList) throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"billieboy7"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"billieboy7"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"billieboy7"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"billieboy7"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"billieboy7"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file));","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"billieboy7"},"content":"            for (Task task : taskList.getTaskArrayList()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"billieboy7"},"content":"                writer.append(task.outputStoreFormat()).append(\"\\n\");","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"billieboy7"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"billieboy7"},"content":"            writer.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"billieboy7"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"billieboy7"},"content":"            throw new DukeException(\"IO exception occurred.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"billieboy7"},"content":"     * Loads data from the file specified in the file path.","lastModifiedDate":"2023-09-25"},{"lineNumber":66,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":67,"author":{"gitId":"billieboy7"},"content":"     * @throws DukeException Organic exception for Duke.","lastModifiedDate":"2023-09-25"},{"lineNumber":68,"author":{"gitId":"billieboy7"},"content":"     * @throws IOException input/output error when there is an error reading from the data file.","lastModifiedDate":"2023-09-04"},{"lineNumber":69,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":70,"author":{"gitId":"billieboy7"},"content":"    void loadList() throws DukeException, IOException {","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"billieboy7"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"billieboy7"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"billieboy7"},"content":"            FileReader fileReader \u003d new FileReader(file);","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"billieboy7"},"content":"            BufferedReader reader \u003d new BufferedReader(fileReader); // BufferedReader wraps the fileReader","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"billieboy7"},"content":"            String line;","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"billieboy7"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"billieboy7"},"content":"                String[] inputArray \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"billieboy7"},"content":"                switch (inputArray[0]) {","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"billieboy7"},"content":"                case \"T\":","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"billieboy7"},"content":"                    ToDo toDo \u003d new ToDo(inputArray[2]);","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"billieboy7"},"content":"                    int status \u003d Integer.parseInt(inputArray[1]);","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"billieboy7"},"content":"                    if (status \u003d\u003d 1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"billieboy7"},"content":"                        toDo.setTaskDone(true);","lastModifiedDate":"2023-09-04"},{"lineNumber":87,"author":{"gitId":"billieboy7"},"content":"                    }","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"billieboy7"},"content":"                    this.taskList.addTask(toDo);","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"billieboy7"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"billieboy7"},"content":"                case \"E\":","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"billieboy7"},"content":"                    Event event \u003d new Event(inputArray[2], inputArray[3], inputArray[4]);","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"billieboy7"},"content":"                    if (inputArray[1] \u003d\u003d \"1\") {","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"billieboy7"},"content":"                        event.setTaskDone(true);","lastModifiedDate":"2023-09-04"},{"lineNumber":96,"author":{"gitId":"billieboy7"},"content":"                    }","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"billieboy7"},"content":"                    this.taskList.addTask(event);","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"billieboy7"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"billieboy7"},"content":"                case \"D\":","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"billieboy7"},"content":"                    Deadline deadline \u003d new Deadline(inputArray[2], inputArray[3]);","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"billieboy7"},"content":"                    if (inputArray[1] \u003d\u003d \"1\") {","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"billieboy7"},"content":"                        deadline.setTaskDone(true);","lastModifiedDate":"2023-09-04"},{"lineNumber":105,"author":{"gitId":"billieboy7"},"content":"                    }","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"billieboy7"},"content":"                    this.taskList.addTask(deadline);","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"billieboy7"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"billieboy7"},"content":"                default:","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"billieboy7"},"content":"                    throw new DukeException(\"An unexpected error occurred while reading the text file. Error Code:\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"billieboy7"},"content":"                            \" 01\");","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"billieboy7"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"billieboy7"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"billieboy7"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"billieboy7"},"content":"            this.saveList(this.taskList);","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"billieboy7"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"billieboy7"},"content":"            throw new DukeException(\"IO error occurred. Check the formatting of the text file - data.txt.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"billieboy7":121}},{"path":"src/main/java/main/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package main;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import exception.DukeException;","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"import task.Task;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import task.TaskList;","lastModifiedDate":"2023-09-17"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":" * UI class - User Interface - Handles the display shown by the program.","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"public class UI {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"     * Constructor for UI class.","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"    public UI() {}","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"     * Generates the divider displayed in the terminal.","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"    public String printDivider() {","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"        String line \u003d \"\\n________________________________________________________\";","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"        return line;","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"     * Generates the welcome message displayed in the terminal.","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"    public String printWelcomeMessage() {","lastModifiedDate":"2023-09-24"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"        sb.append(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"billieboy7"},"content":"        sb.append(this.printDivider());","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"billieboy7"},"content":"        sb.append(\"\\nHello! I\u0027m DUKE\");","lastModifiedDate":"2023-09-24"},{"lineNumber":44,"author":{"gitId":"billieboy7"},"content":"        sb.append(\"\\nWhat can I do for you?\");","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"billieboy7"},"content":"        sb.append(this.printDivider());","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"billieboy7"},"content":"        return String.valueOf(sb);","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"billieboy7"},"content":"     * Lists out the tasks stored in the ArrayList\u003cTask\u003e Object.","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":53,"author":{"gitId":"billieboy7"},"content":"     * @param taskArrayList Contains the list of Tasks.","lastModifiedDate":"2023-09-25"},{"lineNumber":54,"author":{"gitId":"billieboy7"},"content":"     * @return List all tasks in String format","lastModifiedDate":"2023-09-25"},{"lineNumber":55,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"billieboy7"},"content":"    public String printList(ArrayList\u003cTask\u003e taskArrayList) {","lastModifiedDate":"2023-09-18"},{"lineNumber":57,"author":{"gitId":"billieboy7"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-18"},{"lineNumber":58,"author":{"gitId":"billieboy7"},"content":"        sb.append(this.printDivider());","lastModifiedDate":"2023-09-18"},{"lineNumber":59,"author":{"gitId":"billieboy7"},"content":"        if (taskArrayList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"billieboy7"},"content":"            sb.append(\"\\nThere are no tasks in your list.\");","lastModifiedDate":"2023-09-18"},{"lineNumber":61,"author":{"gitId":"billieboy7"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"billieboy7"},"content":"            sb.append(\"\\nHere are the tasks in your list:\");","lastModifiedDate":"2023-09-18"},{"lineNumber":63,"author":{"gitId":"billieboy7"},"content":"            for (int i \u003d 0; i \u003c taskArrayList.size(); i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"billieboy7"},"content":"                int index \u003d i + 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"billieboy7"},"content":"                Task t \u003d taskArrayList.get(i);","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"billieboy7"},"content":"                sb.append(\"\\n\" + index + \".\" + t.toString());","lastModifiedDate":"2023-09-18"},{"lineNumber":67,"author":{"gitId":"billieboy7"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"billieboy7"},"content":"        sb.append(this.printDivider());","lastModifiedDate":"2023-09-18"},{"lineNumber":70,"author":{"gitId":"billieboy7"},"content":"        return String.valueOf(sb);","lastModifiedDate":"2023-09-18"},{"lineNumber":71,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":74,"author":{"gitId":"billieboy7"},"content":"     * Finds out the tasks stored in the ArrayList\u003cTask\u003e Object.","lastModifiedDate":"2023-09-25"},{"lineNumber":75,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":76,"author":{"gitId":"billieboy7"},"content":"     * @param taskArrayList Contains the list of Tasks.","lastModifiedDate":"2023-09-25"},{"lineNumber":77,"author":{"gitId":"billieboy7"},"content":"     * @param isMatchingList Boolean for whether it is a list of tasks queried by the user.","lastModifiedDate":"2023-09-25"},{"lineNumber":78,"author":{"gitId":"billieboy7"},"content":"     * @return List of tasks.","lastModifiedDate":"2023-09-25"},{"lineNumber":79,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":80,"author":{"gitId":"billieboy7"},"content":"    public String findList(ArrayList\u003cTask\u003e taskArrayList, Boolean isMatchingList) {","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"billieboy7"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-18"},{"lineNumber":82,"author":{"gitId":"billieboy7"},"content":"        sb.append(this.printDivider());","lastModifiedDate":"2023-09-18"},{"lineNumber":83,"author":{"gitId":"billieboy7"},"content":"        if (taskArrayList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"billieboy7"},"content":"            sb.append(\"\\nThere are no matching tasks in your list.\");","lastModifiedDate":"2023-09-18"},{"lineNumber":85,"author":{"gitId":"billieboy7"},"content":"        } else if (isMatchingList) {","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"billieboy7"},"content":"            sb.append(\"\\nHere are the \" + taskArrayList.size() + \" matching tasks in your list:\");","lastModifiedDate":"2023-09-18"},{"lineNumber":87,"author":{"gitId":"billieboy7"},"content":"            for (int i \u003d 0; i \u003c taskArrayList.size(); i++) {","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"billieboy7"},"content":"                int index \u003d i + 1;","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"billieboy7"},"content":"                Task t \u003d taskArrayList.get(i);","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"billieboy7"},"content":"                sb.append(\"\\n\").append(index + \".\" + t.toString());","lastModifiedDate":"2023-09-18"},{"lineNumber":91,"author":{"gitId":"billieboy7"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":92,"author":{"gitId":"billieboy7"},"content":"        } else {","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"billieboy7"},"content":"            sb.append(\"\\nHere are the tasks in your list:\");","lastModifiedDate":"2023-09-18"},{"lineNumber":94,"author":{"gitId":"billieboy7"},"content":"            for (int i \u003d 0; i \u003c taskArrayList.size(); i++) {","lastModifiedDate":"2023-09-05"},{"lineNumber":95,"author":{"gitId":"billieboy7"},"content":"                int index \u003d i + 1;","lastModifiedDate":"2023-09-05"},{"lineNumber":96,"author":{"gitId":"billieboy7"},"content":"                Task t \u003d taskArrayList.get(i);","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"billieboy7"},"content":"                sb.append(\"\\n\").append(index + \".\" + t.toString());","lastModifiedDate":"2023-09-18"},{"lineNumber":98,"author":{"gitId":"billieboy7"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"billieboy7"},"content":"        sb.append(this.printDivider());","lastModifiedDate":"2023-09-18"},{"lineNumber":101,"author":{"gitId":"billieboy7"},"content":"        return String.valueOf(sb);","lastModifiedDate":"2023-09-18"},{"lineNumber":102,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":103,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":104,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":105,"author":{"gitId":"billieboy7"},"content":"     * Generates the bye message displayed in the terminal.","lastModifiedDate":"2023-09-04"},{"lineNumber":106,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":107,"author":{"gitId":"billieboy7"},"content":"     * @return Bye message in string format.","lastModifiedDate":"2023-09-25"},{"lineNumber":108,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":109,"author":{"gitId":"billieboy7"},"content":"    public String printByeMessage() {","lastModifiedDate":"2023-09-18"},{"lineNumber":110,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":111,"author":{"gitId":"billieboy7"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-18"},{"lineNumber":112,"author":{"gitId":"billieboy7"},"content":"        sb.append(\"\\nBye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-18"},{"lineNumber":113,"author":{"gitId":"billieboy7"},"content":"        sb.append(this.printDivider());","lastModifiedDate":"2023-09-18"},{"lineNumber":114,"author":{"gitId":"billieboy7"},"content":"        return String.valueOf(sb);","lastModifiedDate":"2023-09-18"},{"lineNumber":115,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":117,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":118,"author":{"gitId":"billieboy7"},"content":"     * Generates the delete message displayed in the terminal.","lastModifiedDate":"2023-09-25"},{"lineNumber":119,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":120,"author":{"gitId":"billieboy7"},"content":"     * @param taskIndex Index of task to be deleted.","lastModifiedDate":"2023-09-25"},{"lineNumber":121,"author":{"gitId":"billieboy7"},"content":"     * @param taskList Task list containing all the tasks.","lastModifiedDate":"2023-09-25"},{"lineNumber":122,"author":{"gitId":"billieboy7"},"content":"     * @return Delete message in string format.","lastModifiedDate":"2023-09-25"},{"lineNumber":123,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":124,"author":{"gitId":"billieboy7"},"content":"    public String showDelete(int taskIndex, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-09-25"},{"lineNumber":125,"author":{"gitId":"billieboy7"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-18"},{"lineNumber":126,"author":{"gitId":"billieboy7"},"content":"        sb.append(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-09-18"},{"lineNumber":127,"author":{"gitId":"billieboy7"},"content":"        try {","lastModifiedDate":"2023-09-25"},{"lineNumber":128,"author":{"gitId":"billieboy7"},"content":"            sb.append(\"\\n\").append(taskList.getTaskArrayList().get(taskIndex));","lastModifiedDate":"2023-09-18"},{"lineNumber":129,"author":{"gitId":"billieboy7"},"content":"        } catch (RuntimeException e) {","lastModifiedDate":"2023-09-25"},{"lineNumber":130,"author":{"gitId":"billieboy7"},"content":"            throw new DukeException(String.format(\"Given index is out of range. Index range should be between\" +","lastModifiedDate":"2023-09-25"},{"lineNumber":131,"author":{"gitId":"billieboy7"},"content":"                            \" 1 and %d.\",","lastModifiedDate":"2023-09-25"},{"lineNumber":132,"author":{"gitId":"billieboy7"},"content":"                    taskList.getSize()));","lastModifiedDate":"2023-09-25"},{"lineNumber":133,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":134,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":135,"author":{"gitId":"billieboy7"},"content":"        return String.valueOf(sb);","lastModifiedDate":"2023-09-18"},{"lineNumber":136,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":137,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":138,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":139,"author":{"gitId":"billieboy7"},"content":"     * Generates the add task message displayed in the terminal.","lastModifiedDate":"2023-09-25"},{"lineNumber":140,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":141,"author":{"gitId":"billieboy7"},"content":"     * @param task Task to be added.","lastModifiedDate":"2023-09-25"},{"lineNumber":142,"author":{"gitId":"billieboy7"},"content":"     * @return Add Task message in string format.","lastModifiedDate":"2023-09-25"},{"lineNumber":143,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":144,"author":{"gitId":"billieboy7"},"content":"    public static String showAddTask(Task task) {","lastModifiedDate":"2023-09-18"},{"lineNumber":145,"author":{"gitId":"billieboy7"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-18"},{"lineNumber":146,"author":{"gitId":"billieboy7"},"content":"        sb.append(\"\\nGot it. I\u0027ve added this task:\");","lastModifiedDate":"2023-09-18"},{"lineNumber":147,"author":{"gitId":"billieboy7"},"content":"        sb.append(\"\\n\").append(task);","lastModifiedDate":"2023-09-18"},{"lineNumber":148,"author":{"gitId":"billieboy7"},"content":"        return String.valueOf(sb);","lastModifiedDate":"2023-09-18"},{"lineNumber":149,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":150,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":151,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":152,"author":{"gitId":"billieboy7"},"content":"     * Generates the mark task message displayed in the terminal.","lastModifiedDate":"2023-09-25"},{"lineNumber":153,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":154,"author":{"gitId":"billieboy7"},"content":"     * @param task Task to be marked.","lastModifiedDate":"2023-09-25"},{"lineNumber":155,"author":{"gitId":"billieboy7"},"content":"     * @return Mark task message in string format.","lastModifiedDate":"2023-09-25"},{"lineNumber":156,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":157,"author":{"gitId":"billieboy7"},"content":"    public static String showMarked(Task task) {","lastModifiedDate":"2023-09-18"},{"lineNumber":158,"author":{"gitId":"billieboy7"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-18"},{"lineNumber":159,"author":{"gitId":"billieboy7"},"content":"        sb.append(\"\\nNice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-09-18"},{"lineNumber":160,"author":{"gitId":"billieboy7"},"content":"        sb.append(\"\\n\").append(task);","lastModifiedDate":"2023-09-18"},{"lineNumber":161,"author":{"gitId":"billieboy7"},"content":"        return String.valueOf(sb);","lastModifiedDate":"2023-09-18"},{"lineNumber":162,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":163,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":164,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":165,"author":{"gitId":"billieboy7"},"content":"     * Generates the unmark task message displayed in the terminal.","lastModifiedDate":"2023-09-25"},{"lineNumber":166,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":167,"author":{"gitId":"billieboy7"},"content":"     * @param task Task to be unmarked.","lastModifiedDate":"2023-09-25"},{"lineNumber":168,"author":{"gitId":"billieboy7"},"content":"     * @return Unmark task message in string format.","lastModifiedDate":"2023-09-25"},{"lineNumber":169,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":170,"author":{"gitId":"billieboy7"},"content":"    public static String showUnmarked(Task task) {","lastModifiedDate":"2023-09-18"},{"lineNumber":171,"author":{"gitId":"billieboy7"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-18"},{"lineNumber":172,"author":{"gitId":"billieboy7"},"content":"        sb.append(\"\\nOK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-09-18"},{"lineNumber":173,"author":{"gitId":"billieboy7"},"content":"        sb.append(\"\\n\").append(task);","lastModifiedDate":"2023-09-18"},{"lineNumber":174,"author":{"gitId":"billieboy7"},"content":"        return String.valueOf(sb);","lastModifiedDate":"2023-09-18"},{"lineNumber":175,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":176,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":177,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":178,"author":{"gitId":"billieboy7"},"content":"     * Generates the update task description message displayed in the terminal.","lastModifiedDate":"2023-09-25"},{"lineNumber":179,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":180,"author":{"gitId":"billieboy7"},"content":"     * @param taskIndex Index of the task in the task list to be updated.","lastModifiedDate":"2023-09-25"},{"lineNumber":181,"author":{"gitId":"billieboy7"},"content":"     * @param oldDescription Old description of the task to be updated.","lastModifiedDate":"2023-09-25"},{"lineNumber":182,"author":{"gitId":"billieboy7"},"content":"     * @param newDescription New description of the task to be updated.","lastModifiedDate":"2023-09-25"},{"lineNumber":183,"author":{"gitId":"billieboy7"},"content":"     * @return Update description message in string format.","lastModifiedDate":"2023-09-25"},{"lineNumber":184,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":185,"author":{"gitId":"billieboy7"},"content":"    public static String showUpdatedDescription(int taskIndex, String oldDescription, String newDescription) {","lastModifiedDate":"2023-09-20"},{"lineNumber":186,"author":{"gitId":"billieboy7"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-20"},{"lineNumber":187,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":188,"author":{"gitId":"billieboy7"},"content":"        sb.append(\"Updated the description of Task \").append(taskIndex);","lastModifiedDate":"2023-09-20"},{"lineNumber":189,"author":{"gitId":"billieboy7"},"content":"        sb.append(\" from \\\"\").append(oldDescription).append(\"\\\"\");","lastModifiedDate":"2023-09-20"},{"lineNumber":190,"author":{"gitId":"billieboy7"},"content":"        sb.append(\" to \\\"\").append(newDescription).append(\"\\\"\");","lastModifiedDate":"2023-09-20"},{"lineNumber":191,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":192,"author":{"gitId":"billieboy7"},"content":"        return String.valueOf(sb);","lastModifiedDate":"2023-09-20"},{"lineNumber":193,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":194,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"billieboy7":194}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package task;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":" * Deadline class is a subclass of Task class.","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"    private String time;","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"    DateTimeFormatter outputFormatWithTime \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mma\");","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"     * Constructor for Deadline class.","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"     * @param description user provided description.","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"     * @param time user provided description.","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"    public Deadline(String description, String time) {","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"        this.time \u003d time;","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"     * Overloaded Constructor for Deadline class.","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"     * @param description user provided description.","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"     * @param dateTime user provided end time as a LocalDateTime object.","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"    public Deadline(String description, LocalDateTime dateTime) {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"        super(description);","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"     * outputStoreFormat() method.","lastModifiedDate":"2023-09-25"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":41,"author":{"gitId":"billieboy7"},"content":"     * @return the specific format in which the task should be saved in the data file.","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"billieboy7"},"content":"    public String outputStoreFormat() {","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"billieboy7"},"content":"        String taskType \u003d \"D\";","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"billieboy7"},"content":"        String isTaskDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"billieboy7"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"billieboy7"},"content":"            isTaskDone \u003d \"1\";","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"billieboy7"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"billieboy7"},"content":"            isTaskDone \u003d \"0\";","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"billieboy7"},"content":"        if (this.dateTime \u003d\u003d null) {","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"billieboy7"},"content":"            return (taskType + \" | \" + isTaskDone + \" | \" + this.description.trim() + \" | \" + this.time);","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"billieboy7"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"billieboy7"},"content":"            return (taskType + \" | \" + isTaskDone + \" | \" + this.description.trim() + \" | \" +","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"billieboy7"},"content":"                    this.dateTime.format(outputFormatWithTime));","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"billieboy7"},"content":"     * toString() method.","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":66,"author":{"gitId":"billieboy7"},"content":"     * @return string text of the task in which the task will be displayed in the terminal.","lastModifiedDate":"2023-09-04"},{"lineNumber":67,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":68,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"billieboy7"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"billieboy7"},"content":"        if (dateTime \u003d\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"billieboy7"},"content":"            return String.format(\"[D]%s (by: %s)\", super.toString(), time);","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"billieboy7"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"billieboy7"},"content":"            return String.format(\"[D]%s (by: %s)\", super.toString(), dateTime.format(outputFormatWithTime));","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"billieboy7":78}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package task;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":" * Event class is a subclass of Task class.","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"    private String startTime;","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"    private String endTime;","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"    private LocalDateTime startDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"    private LocalDateTime endDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"    DateTimeFormatter outputFormatWithTime \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mma\");","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"     * Constructor for Event class.","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"     * @param description User provided description.","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"     * @param startTime User provided start time.","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"     * @param endTime User provided end time.","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"    public Event(String description, String startTime, String endTime) {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"     * Overloaded Constructor for Event class.","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"     * @param description User provided description.","lastModifiedDate":"2023-09-25"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"     * @param startDateTime User provided start time as a LocalDateTime object.","lastModifiedDate":"2023-09-25"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"     * @param endDateTime User provided end time as a LocalDateTime object.","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"    public Event(String description, LocalDateTime startDateTime, LocalDateTime endDateTime) {","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"        super(description);","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"billieboy7"},"content":"     * storeFormat() method.","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":46,"author":{"gitId":"billieboy7"},"content":"     * @return The specific format in which the task should be saved in the data file.","lastModifiedDate":"2023-09-25"},{"lineNumber":47,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"billieboy7"},"content":"    public String outputStoreFormat() {","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"billieboy7"},"content":"        String taskType \u003d \"E\";","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"billieboy7"},"content":"        String isTaskDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"billieboy7"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"billieboy7"},"content":"            isTaskDone \u003d \"1\";","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"billieboy7"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"billieboy7"},"content":"            isTaskDone \u003d \"0\";","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"billieboy7"},"content":"        if (startDateTime \u003d\u003d null) {","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"billieboy7"},"content":"            return (taskType + \" | \" + isTaskDone + \" | \" + this.description.trim() + \" | \" + this.startTime + \" | \" +","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"billieboy7"},"content":"                    this.endTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"billieboy7"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"billieboy7"},"content":"            return (taskType + \" | \" + isTaskDone + \" | \" + this.description.trim() + \" | \"","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"billieboy7"},"content":"                    + this.startDateTime.format(outputFormatWithTime) + \" | \" +","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"billieboy7"},"content":"                    this.endDateTime.format(outputFormatWithTime));","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":71,"author":{"gitId":"billieboy7"},"content":"     * toString() method.","lastModifiedDate":"2023-09-04"},{"lineNumber":72,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":73,"author":{"gitId":"billieboy7"},"content":"     * @return String text of the task in which the task will be displayed in the terminal.","lastModifiedDate":"2023-09-25"},{"lineNumber":74,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"billieboy7"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"billieboy7"},"content":"        if (startDateTime \u003d\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"billieboy7"},"content":"            return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), startTime, endTime);","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"billieboy7"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"billieboy7"},"content":"            return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), startDateTime.format(outputFormatWithTime)","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"billieboy7"},"content":"                    , endDateTime.format(outputFormatWithTime));","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"billieboy7":84}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package task;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":" * Task class.","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"    protected String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"     * Constructor for Task class.","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"     * @param description description provided by user.","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"     * Setter method which updates whether a task is done.","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"     * @param status Boolean value which represents whether a task is done","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"     *               true - task is done, false - task is not done","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"    public void setTaskDone(boolean status) {","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"     * storeFormat() method.","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"     * @return The specific format in which the task should be saved in the data file.","lastModifiedDate":"2023-09-25"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"    public String outputStoreFormat() {","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"        return null;","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"billieboy7"},"content":"     * getter function.","lastModifiedDate":"2023-09-25"},{"lineNumber":44,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":45,"author":{"gitId":"billieboy7"},"content":"     * @return Retrieves the saved description.","lastModifiedDate":"2023-09-25"},{"lineNumber":46,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"billieboy7"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"billieboy7"},"content":"        return this.description;","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"billieboy7"},"content":"    public String updateDescription(String updatedDescription) {","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"billieboy7"},"content":"        String oldDescription \u003d this.description;","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"billieboy7"},"content":"        this.description \u003d updatedDescription;","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"billieboy7"},"content":"        return oldDescription;","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"billieboy7"},"content":"     * toString() method.","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":60,"author":{"gitId":"billieboy7"},"content":"     * @return String text of the task in which the task will be displayed in the terminal.","lastModifiedDate":"2023-09-25"},{"lineNumber":61,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"billieboy7"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"billieboy7"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"billieboy7":67}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package task;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import exception.DukeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"import main.UI;","lastModifiedDate":"2023-09-17"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":" * Wrapper class that contains ArrayList of type Task.","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"public class TaskList {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"    ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"     * Constructor for TaskList class.","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"    public TaskList() {}","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"     * Deletes Task from the Task List.","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"     * @param taskIndex Index of task to be deleted.","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"    public void deleteTask(int taskIndex) {","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"        taskList.remove(taskIndex);","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"     * Adds Event to the Task List.","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"     * @param input User input specifying the details of the Event to be added.","lastModifiedDate":"2023-09-25"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"    public String addEvent(String input) {","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"billieboy7"},"content":"        String[] list \u003d input.split(\"/\");","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"billieboy7"},"content":"        String title \u003d list[0].substring(6);","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"billieboy7"},"content":"        String start \u003d list[1].substring(5).trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"billieboy7"},"content":"        String end \u003d list[2].substring(3).trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"billieboy7"},"content":"        // returns 1 if correct datetime","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"billieboy7"},"content":"        // returns 0 if random string input","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"billieboy7"},"content":"        int startTimeFormat \u003d this.computeDateTimeFormat(start);","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"billieboy7"},"content":"        int endTimeFormat \u003d this.computeDateTimeFormat(end);","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"billieboy7"},"content":"        if (startTimeFormat !\u003d 1 || endTimeFormat !\u003d 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"billieboy7"},"content":"            Event event \u003d new Event(title, start, end);","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"billieboy7"},"content":"            sb.append(UI.showAddTask(event));","lastModifiedDate":"2023-09-18"},{"lineNumber":56,"author":{"gitId":"billieboy7"},"content":"            taskList.add(event);","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"billieboy7"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"billieboy7"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"billieboy7"},"content":"                DateTimeFormatter inputFormatWithTime \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"billieboy7"},"content":"                LocalDateTime startDateTime \u003d LocalDateTime.parse(start, inputFormatWithTime);","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"billieboy7"},"content":"                LocalDateTime endDateTime \u003d LocalDateTime.parse(end, inputFormatWithTime);","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"billieboy7"},"content":"                Event event \u003d new Event(title, startDateTime, endDateTime);","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"billieboy7"},"content":"                sb.append(UI.showAddTask(event));","lastModifiedDate":"2023-09-18"},{"lineNumber":64,"author":{"gitId":"billieboy7"},"content":"                taskList.add(event);","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"billieboy7"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"billieboy7"},"content":"                sb.append(\"Invalid date-time format. Stick to the given format of dd-MM-yyyy HHmm\");","lastModifiedDate":"2023-09-18"},{"lineNumber":67,"author":{"gitId":"billieboy7"},"content":"                System.out.println(\"Invalid date-time format. Stick to the given format of dd-MM-yyyy HHmm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"billieboy7"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"billieboy7"},"content":"        return String.valueOf(sb);","lastModifiedDate":"2023-09-18"},{"lineNumber":71,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":74,"author":{"gitId":"billieboy7"},"content":"     * Adds Deadline to the Task List.","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":76,"author":{"gitId":"billieboy7"},"content":"     * @param input User input specifying the details of the Deadline to be added.","lastModifiedDate":"2023-09-25"},{"lineNumber":77,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":78,"author":{"gitId":"billieboy7"},"content":"    public String addDeadline(String input) {","lastModifiedDate":"2023-09-18"},{"lineNumber":79,"author":{"gitId":"billieboy7"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-18"},{"lineNumber":80,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":81,"author":{"gitId":"billieboy7"},"content":"        String[] list \u003d input.split(\"/\");","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"billieboy7"},"content":"        String title \u003d list[0].substring(9);","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"billieboy7"},"content":"        String time \u003d list[1].substring(3).trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"billieboy7"},"content":"        // returns 1 if correct datetime","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"billieboy7"},"content":"        // returns 0 if random string input","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"billieboy7"},"content":"        int timeFormat \u003d this.computeDateTimeFormat(time);","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"billieboy7"},"content":"        if (timeFormat \u003d\u003d 0) {","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"billieboy7"},"content":"            Deadline deadline \u003d new Deadline(title, time);","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"billieboy7"},"content":"            sb.append(UI.showAddTask(deadline));","lastModifiedDate":"2023-09-18"},{"lineNumber":93,"author":{"gitId":"billieboy7"},"content":"            taskList.add(deadline);","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"billieboy7"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"billieboy7"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"billieboy7"},"content":"                DateTimeFormatter inputFormatWithTime \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"billieboy7"},"content":"                LocalDateTime dateTime \u003d LocalDateTime.parse(time, inputFormatWithTime);","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"billieboy7"},"content":"                Deadline deadline \u003d new Deadline(title, dateTime);","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"billieboy7"},"content":"                sb.append(UI.showAddTask(deadline));","lastModifiedDate":"2023-09-18"},{"lineNumber":100,"author":{"gitId":"billieboy7"},"content":"                taskList.add(deadline);","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"billieboy7"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"billieboy7"},"content":"                sb.append(\"Invalid date-time format. Stick to the given format of dd-MM-yyyy HHmm\");","lastModifiedDate":"2023-09-18"},{"lineNumber":103,"author":{"gitId":"billieboy7"},"content":"                System.out.println(\"Invalid date-time format. Stick to the given format of dd-MM-yyyy HHmm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"billieboy7"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"billieboy7"},"content":"        return String.valueOf(sb);","lastModifiedDate":"2023-09-18"},{"lineNumber":107,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":110,"author":{"gitId":"billieboy7"},"content":"     * Adds ToDoTask to the Task List.","lastModifiedDate":"2023-09-04"},{"lineNumber":111,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":112,"author":{"gitId":"billieboy7"},"content":"     * @param input User input specifying the details of the ToDoTask to be added.","lastModifiedDate":"2023-09-25"},{"lineNumber":113,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":114,"author":{"gitId":"billieboy7"},"content":"    public String addToDo(String input) throws DukeException {","lastModifiedDate":"2023-09-18"},{"lineNumber":115,"author":{"gitId":"billieboy7"},"content":"        ToDo toDo \u003d new ToDo(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"billieboy7"},"content":"        String message \u003d UI.showAddTask(toDo);","lastModifiedDate":"2023-09-18"},{"lineNumber":117,"author":{"gitId":"billieboy7"},"content":"        taskList.add(toDo);","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"billieboy7"},"content":"        return message;","lastModifiedDate":"2023-09-18"},{"lineNumber":119,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":122,"author":{"gitId":"billieboy7"},"content":"     * Generic method to add tasks to the Task List.","lastModifiedDate":"2023-09-04"},{"lineNumber":123,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":124,"author":{"gitId":"billieboy7"},"content":"     * @param task Task object to be added to the tasks list.","lastModifiedDate":"2023-09-25"},{"lineNumber":125,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":126,"author":{"gitId":"billieboy7"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"billieboy7"},"content":"        taskList.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":131,"author":{"gitId":"billieboy7"},"content":"     * Marks the specific task as done.","lastModifiedDate":"2023-09-25"},{"lineNumber":132,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":133,"author":{"gitId":"billieboy7"},"content":"     * @param taskIndex Index of the task to be marked as done.","lastModifiedDate":"2023-09-25"},{"lineNumber":134,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":135,"author":{"gitId":"billieboy7"},"content":"    public String mark(int taskIndex) {","lastModifiedDate":"2023-09-18"},{"lineNumber":136,"author":{"gitId":"billieboy7"},"content":"        Task currTask \u003d taskList.get(taskIndex);","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"billieboy7"},"content":"        currTask.setTaskDone(true);","lastModifiedDate":"2023-09-04"},{"lineNumber":138,"author":{"gitId":"billieboy7"},"content":"        return UI.showMarked(currTask);","lastModifiedDate":"2023-09-18"},{"lineNumber":139,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":142,"author":{"gitId":"billieboy7"},"content":"     * Unmarks the specific task.","lastModifiedDate":"2023-09-25"},{"lineNumber":143,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":144,"author":{"gitId":"billieboy7"},"content":"     * @param taskIndex Index of the task to be unmarked.","lastModifiedDate":"2023-09-25"},{"lineNumber":145,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":146,"author":{"gitId":"billieboy7"},"content":"    public String unmark(int taskIndex) {","lastModifiedDate":"2023-09-18"},{"lineNumber":147,"author":{"gitId":"billieboy7"},"content":"        Task currTask \u003d taskList.get(taskIndex);","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"billieboy7"},"content":"        currTask.setTaskDone(false);","lastModifiedDate":"2023-09-04"},{"lineNumber":149,"author":{"gitId":"billieboy7"},"content":"        return UI.showUnmarked(currTask);","lastModifiedDate":"2023-09-18"},{"lineNumber":150,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":153,"author":{"gitId":"billieboy7"},"content":"     * Return string output to be displayed in  GUI when Task Description is updated.","lastModifiedDate":"2023-09-25"},{"lineNumber":154,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":155,"author":{"gitId":"billieboy7"},"content":"     * @param taskIndex Index of the task to be updated.","lastModifiedDate":"2023-09-25"},{"lineNumber":156,"author":{"gitId":"billieboy7"},"content":"     * @param updatedDescription New description to be updated.","lastModifiedDate":"2023-09-25"},{"lineNumber":157,"author":{"gitId":"billieboy7"},"content":"     * @return String output to be displayed in  GUI when Task Description is updated.","lastModifiedDate":"2023-09-25"},{"lineNumber":158,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":159,"author":{"gitId":"billieboy7"},"content":"    public String updateTaskDescription(int taskIndex, String updatedDescription) {","lastModifiedDate":"2023-09-20"},{"lineNumber":160,"author":{"gitId":"billieboy7"},"content":"        Task currTask \u003d this.taskList.get(taskIndex - 1);","lastModifiedDate":"2023-09-20"},{"lineNumber":161,"author":{"gitId":"billieboy7"},"content":"        // update description returns old description","lastModifiedDate":"2023-09-20"},{"lineNumber":162,"author":{"gitId":"billieboy7"},"content":"        String oldDescription \u003d currTask.updateDescription(updatedDescription);","lastModifiedDate":"2023-09-20"},{"lineNumber":163,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":164,"author":{"gitId":"billieboy7"},"content":"        return UI.showUpdatedDescription(taskIndex, oldDescription, updatedDescription);","lastModifiedDate":"2023-09-20"},{"lineNumber":165,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":166,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":167,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":168,"author":{"gitId":"billieboy7"},"content":"     * getSize() method.","lastModifiedDate":"2023-09-25"},{"lineNumber":169,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":170,"author":{"gitId":"billieboy7"},"content":"     * @return Number of tasks in the task list.","lastModifiedDate":"2023-09-25"},{"lineNumber":171,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":172,"author":{"gitId":"billieboy7"},"content":"    public int getSize() {","lastModifiedDate":"2023-09-04"},{"lineNumber":173,"author":{"gitId":"billieboy7"},"content":"        return taskList.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":174,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":175,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":176,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":177,"author":{"gitId":"billieboy7"},"content":"     * Checks whether given string is made up of just numbers.","lastModifiedDate":"2023-09-04"},{"lineNumber":178,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":179,"author":{"gitId":"billieboy7"},"content":"     * @param strNum String to be tested.","lastModifiedDate":"2023-09-25"},{"lineNumber":180,"author":{"gitId":"billieboy7"},"content":"     * @return true - is numeric, false - not numeric.","lastModifiedDate":"2023-09-04"},{"lineNumber":181,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":182,"author":{"gitId":"billieboy7"},"content":"    public static boolean isNumeric(String strNum) {","lastModifiedDate":"2023-09-01"},{"lineNumber":183,"author":{"gitId":"billieboy7"},"content":"        if (strNum \u003d\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":184,"author":{"gitId":"billieboy7"},"content":"            return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":185,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":186,"author":{"gitId":"billieboy7"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":187,"author":{"gitId":"billieboy7"},"content":"            double d \u003d Double.parseDouble(strNum);","lastModifiedDate":"2023-09-01"},{"lineNumber":188,"author":{"gitId":"billieboy7"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-09-01"},{"lineNumber":189,"author":{"gitId":"billieboy7"},"content":"            return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":190,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":191,"author":{"gitId":"billieboy7"},"content":"        return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":192,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":193,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":194,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":195,"author":{"gitId":"billieboy7"},"content":"     * The method is used to identify dates in the below Local Date Time format :","lastModifiedDate":"2023-09-04"},{"lineNumber":196,"author":{"gitId":"billieboy7"},"content":"     * \"dd-MM-yyyy HHmm\" with HHmm in the 24 hour format. Note: This method only checks for the","lastModifiedDate":"2023-09-04"},{"lineNumber":197,"author":{"gitId":"billieboy7"},"content":"     * structure of the input. The validity of the Local Date Time Format is validated/tested later.","lastModifiedDate":"2023-09-04"},{"lineNumber":198,"author":{"gitId":"billieboy7"},"content":"     * The method will return 1 if it is in LocalDateTimeFormat, 0 if it is a custom string format","lastModifiedDate":"2023-09-04"},{"lineNumber":199,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":200,"author":{"gitId":"billieboy7"},"content":"     * @param input string to run the test on.","lastModifiedDate":"2023-09-04"},{"lineNumber":201,"author":{"gitId":"billieboy7"},"content":"     * @return 1 or 0.","lastModifiedDate":"2023-09-04"},{"lineNumber":202,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":203,"author":{"gitId":"billieboy7"},"content":"    int computeDateTimeFormat(String input) {","lastModifiedDate":"2023-09-03"},{"lineNumber":204,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":205,"author":{"gitId":"billieboy7"},"content":"        // returns 1 if correct datetime","lastModifiedDate":"2023-09-01"},{"lineNumber":206,"author":{"gitId":"billieboy7"},"content":"        // returns 2 if correct date","lastModifiedDate":"2023-09-01"},{"lineNumber":207,"author":{"gitId":"billieboy7"},"content":"        // returns 0 if random string input","lastModifiedDate":"2023-09-01"},{"lineNumber":208,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":209,"author":{"gitId":"billieboy7"},"content":"        // Assume that the date input is dd/MM/yyyy 16-08-1977 1800","lastModifiedDate":"2023-09-01"},{"lineNumber":210,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":211,"author":{"gitId":"billieboy7"},"content":"        String[] blankArray \u003d input.split(\" \");","lastModifiedDate":"2023-09-01"},{"lineNumber":212,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":213,"author":{"gitId":"billieboy7"},"content":"        // Check for datetime input","lastModifiedDate":"2023-09-01"},{"lineNumber":214,"author":{"gitId":"billieboy7"},"content":"        if (blankArray.length \u003d\u003d 2 \u0026\u0026 isNumeric(blankArray[1])) {","lastModifiedDate":"2023-09-01"},{"lineNumber":215,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":216,"author":{"gitId":"billieboy7"},"content":"            String[] slashArray \u003d blankArray[0].split(\"-\");","lastModifiedDate":"2023-09-01"},{"lineNumber":217,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":218,"author":{"gitId":"billieboy7"},"content":"            boolean isAllNumeric \u003d true;","lastModifiedDate":"2023-09-01"},{"lineNumber":219,"author":{"gitId":"billieboy7"},"content":"            for (String s : slashArray) {","lastModifiedDate":"2023-09-01"},{"lineNumber":220,"author":{"gitId":"billieboy7"},"content":"                if (!isNumeric(s)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":221,"author":{"gitId":"billieboy7"},"content":"                    isAllNumeric \u003d false;","lastModifiedDate":"2023-09-01"},{"lineNumber":222,"author":{"gitId":"billieboy7"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":223,"author":{"gitId":"billieboy7"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":224,"author":{"gitId":"billieboy7"},"content":"            if (slashArray.length \u003d\u003d 3 \u0026\u0026 isAllNumeric) {","lastModifiedDate":"2023-09-01"},{"lineNumber":225,"author":{"gitId":"billieboy7"},"content":"                return 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":226,"author":{"gitId":"billieboy7"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":227,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":228,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":229,"author":{"gitId":"billieboy7"},"content":"        return 0;","lastModifiedDate":"2023-09-01"},{"lineNumber":230,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":231,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":232,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":233,"author":{"gitId":"billieboy7"},"content":"     * getter method.","lastModifiedDate":"2023-09-04"},{"lineNumber":234,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":235,"author":{"gitId":"billieboy7"},"content":"     * @return ArrayList of Task objects.","lastModifiedDate":"2023-09-04"},{"lineNumber":236,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":237,"author":{"gitId":"billieboy7"},"content":"    public ArrayList\u003cTask\u003e getTaskArrayList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":238,"author":{"gitId":"billieboy7"},"content":"        return taskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":239,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":240,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"billieboy7":240}},{"path":"src/main/java/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package task;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import exception.DukeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":" * ToDo class is a subclass of Task class.","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"     * Constructor for ToDo class.","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"     * @param description user provided description.","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"     * @throws DukeException organic exception by Duke.","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"    public ToDo(String description) throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"     * outputStoreFormat() method.","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"     * @return the specific format in which the task should be saved in the data file.","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"    public String outputStoreFormat() {","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"        String taskType \u003d \"T\";","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"        String isTaskDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"            isTaskDone \u003d \"1\";","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"            isTaskDone \u003d \"0\";","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"        return (taskType + \" | \" + isTaskDone + \" | \" + this.description.trim());","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"     * toString() method.","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":42,"author":{"gitId":"billieboy7"},"content":"     * @return string text of the task in which the task will be displayed in the terminal.","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"billieboy7"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"billieboy7"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"billieboy7":48}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-24"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\" /\u003e","lastModifiedDate":"2023-09-24"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-17"}],"authorContributionMap":{"billieboy7":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"gui.MainWindow\"\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-17"}],"authorContributionMap":{"billieboy7":19}},{"path":"src/test/java/main/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package main;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import command.ByeCommand;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import command.EventCommand;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"import exception.DukeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"//Underscores may be used in test method names using the","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"// following three part format featureUnderTest_testScenario_expectedBehavior()","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"// Testing the Parser.parse() method","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"    public void parse_correctByeInput() throws DukeException {","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"        assertEquals(new ByeCommand().isContinue(), Parser.parse(\"bye\").isContinue());","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"    public void parse_incorrectByeInput() {","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"        assertThrows(DukeException.class,","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"                () -\u003e {","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"                    Parser.parse(\"bye bye\");","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"                });","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"    public void parse_inputStartingWithEvent_shouldReturnEventCommandParseTest() throws DukeException {","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"        assertEquals(EventCommand.class, Parser.parse(\"event Amma Birthday Dinner \" +","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"                \"/from 02-08-2023 1800 /to 02-08-2023 2200\").getClass());","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"billieboy7"},"content":"    public void parse_eventSpellingMistake_shouldReturnDukeException() {","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"billieboy7"},"content":"        assertThrows(DukeException.class,","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"billieboy7"},"content":"                () -\u003e {","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"billieboy7"},"content":"                    Parser.parse(\"evennt Amma Birthday Dinner \" +","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"billieboy7"},"content":"                            \"/from 02-08-2023 1800 /to 02-08-2023 2200\");","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"billieboy7"},"content":"                });","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"billieboy7"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"billieboy7"},"content":"    public void parse_notIndicatingTo_shouldReturnDukeException() {","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"billieboy7"},"content":"        assertThrows(DukeException.class,","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"billieboy7"},"content":"                () -\u003e {","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"billieboy7"},"content":"                    Parser.parse(\"evennt Amma Birthday Dinner \" +","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"billieboy7"},"content":"                            \"/from 02-08-2023 1800\");","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"billieboy7"},"content":"                });","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"billieboy7"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"billieboy7"},"content":"    public void parse_notIndicatingFrom_shouldReturnDukeException() {","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"billieboy7"},"content":"        assertThrows(DukeException.class,","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"billieboy7"},"content":"                () -\u003e {","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"billieboy7"},"content":"                    Parser.parse(\"evennt Amma Birthday Dinner \" +","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"billieboy7"},"content":"                            \"/to 02-08-2023 1800\");","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"billieboy7"},"content":"                });","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"billieboy7":66}},{"path":"src/test/java/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package task;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"    public void outputStoreFormat() {","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"        assertEquals(\"D | 0 | homework | tomorrow\", new Deadline(\"homework\",","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"                \"tomorrow\").outputStoreFormat());","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"        assertEquals(\"D | 0 | clean room | tonight 8pm\", new Deadline(\"clean room\",","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"                \"tonight 8pm\").outputStoreFormat());","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"        assertEquals(\"D | 0 | watch movie | 16 Aug 1977 2:00AM\", new Deadline(\"watch movie\",","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"                LocalDateTime.parse(\"16-08-1977 0200\",","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"                        DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))).outputStoreFormat());","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"billieboy7":25}},{"path":"src/test/java/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package task;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"    // Test - private int computeDateTimeFormat(String input)","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"    // The method is used to identify dates in the below Local Date Time format :","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"    // \"dd-MM-yyyy HHmm\" with HHmm in the 24 hour format. Note: This method only checks for the","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"    // structure of the input. The validity of the Local Date Time Format is validated/tested later.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"    // The method will return 1 if it is in LocalDateTimeFormat, 0 if it is a custom string format","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"    public void computeDateTimeFormat_localDateTimeInput_shouldReturnOne() {","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"        TaskList task \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"        String input \u003d \"16-08-1977 1700\";","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"        assertEquals(1, task.computeDateTimeFormat(input));","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"    public void computeDateTimeFormat_customInput_shouldReturnZero() {","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"        TaskList task \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"        String input \u003d \"16 August 1977 5pm\";","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"        assertEquals(0, task.computeDateTimeFormat(input));","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"billieboy7":33}}]
