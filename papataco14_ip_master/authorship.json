[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"papataco14"},"content":"# Main project template","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"papataco14"},"content":"3. After that, locate the `src/main/java/Main.java` file, right-click it, and choose `Run Main.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"papataco14":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"papataco14"},"content":"/* Gradle commands to run in project root dir:","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"papataco14"},"content":"    ./gradlew build","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"papataco14"},"content":"    ./gradlew run","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"papataco14"},"content":"*/","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"papataco14"},"content":"    testImplementation group: \u0027org.mockito\u0027, name: \u0027mockito-core\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"papataco14"},"content":"    mainClass.set(\"chad.Main\")","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"papataco14"},"content":"    archiveBaseName \u003d \"chad\"","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"papataco14":8,"-":40}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"papataco14"},"content":"D | 0 | sleep | 2023-03-03 12:00","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"papataco14"},"content":"E | 0 | meeting | 2021-01-01 00:00 | 2022-01-02 12:00","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"papataco14"},"content":"T | 0 | sleep","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"papataco14":3}},{"path":"src/main/java/chad/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"papataco14"},"content":"package chad;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"papataco14"},"content":"import chad.chatengine.ChatEngine;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"papataco14"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"papataco14"},"content":" * The entry point for the Chad application.","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"papataco14"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"papataco14"},"content":"public class Main {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"papataco14"},"content":"     * The main method that starts the ChatEngine.","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"papataco14"},"content":"     * @param args the command-line arguments.","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"papataco14"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"papataco14"},"content":"        ChatEngine chatEngine \u003d new ChatEngine(\"./data/tasks.txt\");","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"papataco14"},"content":"        chatEngine.start();","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"papataco14"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"papataco14":17}},{"path":"src/main/java/chad/chatengine/ChadException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"papataco14"},"content":"package chad.chatengine;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"papataco14"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"papataco14"},"content":" * Represents exceptions specific to the Chad chatbot application.","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"papataco14"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"papataco14"},"content":"public class ChadException extends Exception {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"papataco14"},"content":"     * Constructs a new ChadException with a specific message.","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"papataco14"},"content":"     * @param message the detail message for the exception.","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"papataco14"},"content":"    public ChadException(String message) {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"papataco14"},"content":"        super(message);","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"papataco14"},"content":"     * Exception thrown when an invalid command is encountered.","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"papataco14"},"content":"    public static class InvalidCommandException extends ChadException {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"papataco14"},"content":"        /**","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"papataco14"},"content":"         * Constructs a new InvalidCommandException with a specific message.","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"papataco14"},"content":"         * @param message the detail message for the exception.","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"papataco14"},"content":"         */","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"papataco14"},"content":"        public InvalidCommandException(String message) {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"papataco14"},"content":"            super(message);","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"papataco14"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"papataco14"},"content":"     * Exception thrown when an invalid argument is encountered.","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"papataco14"},"content":"    public static class InvalidArgumentException extends ChadException {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"papataco14"},"content":"        /**","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"papataco14"},"content":"         * Constructs a new InvalidArgumentException with a specific message.","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"papataco14"},"content":"         * @param message the detail message for the exception.","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"papataco14"},"content":"         */","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"papataco14"},"content":"        public InvalidArgumentException(String message) {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"papataco14"},"content":"            super(message);","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"papataco14"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"papataco14"},"content":"     * Exception thrown when an invalid format is encountered.","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"papataco14"},"content":"    public static class InvalidFormatException extends ChadException {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"papataco14"},"content":"        /**","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"papataco14"},"content":"         * Constructs a new InvalidFormatException with a specific message.","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"papataco14"},"content":"         * @param message the detail message for the exception.","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"papataco14"},"content":"         */","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"papataco14"},"content":"        public InvalidFormatException(String message) {","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"papataco14"},"content":"            super(message);","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"papataco14"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"papataco14"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"papataco14":57}},{"path":"src/main/java/chad/chatengine/ChatEngine.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"papataco14"},"content":"package chad.chatengine;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"papataco14"},"content":"import chad.io.IOHandler;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"papataco14"},"content":"import chad.io.ConsoleIO;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"papataco14"},"content":"import chad.task.TaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"papataco14"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"papataco14"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"papataco14"},"content":"import java.nio.file.NoSuchFileException;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"papataco14"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"papataco14"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"papataco14"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"papataco14"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"papataco14"},"content":" * Core engine for handling chat interactions and tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"papataco14"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"papataco14"},"content":"public class ChatEngine {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"papataco14"},"content":"    final IOHandler ioHandler;","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"papataco14"},"content":"    TaskList taskList; // stores list of tasks","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"papataco14"},"content":"    final Storage storage;","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"papataco14"},"content":"    static final String DATE_FORMAT \u003d \"yyyy-MM-dd HH:mm\";","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"papataco14"},"content":"     * Constructs a new ChatEngine.","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"papataco14"},"content":"     * ","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"papataco14"},"content":"     * @param filePath the path where tasks are stored.","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"papataco14"},"content":"    public ChatEngine(String filePath) {","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"papataco14"},"content":"        this.ioHandler \u003d new ConsoleIO();","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"papataco14"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"papataco14"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"papataco14"},"content":"            this.taskList \u003d new TaskList(storage.loadTasks()); // load tasks from storage","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"papataco14"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"papataco14"},"content":"            this.taskList \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"papataco14"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"papataco14"},"content":"     * Constructs a new ChatEngine for testing.","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"papataco14"},"content":"     * ","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"papataco14"},"content":"     * @param ioHandler mock io handler for testing.","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"papataco14"},"content":"     * @param taskList  mock task list for testing.","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"papataco14"},"content":"     * @param filePath  mock file path for testing.","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"papataco14"},"content":"    ChatEngine(IOHandler ioHandler, TaskList taskList, String filePath) {","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"papataco14"},"content":"        this.ioHandler \u003d ioHandler;","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"papataco14"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"papataco14"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"papataco14"},"content":"     * Starts the chat interaction.","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"papataco14"},"content":"    public void start() {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"papataco14"},"content":"        ioHandler.greet();","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"papataco14"},"content":"        boolean canContinueChat \u003d true;","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"papataco14"},"content":"        while (canContinueChat) {","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"papataco14"},"content":"            String input \u003d ioHandler.readInput();","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"papataco14"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"papataco14"},"content":"                String[] parsedInput \u003d Parser.parseInput(input);","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"papataco14"},"content":"                canContinueChat \u003d commandHandler(parsedInput);","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"papataco14"},"content":"            } catch (ChadException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"papataco14"},"content":"                ioHandler.writeOutput(\"Error: \" + e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"papataco14"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"papataco14"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"papataco14"},"content":"        ioHandler.sayGoodbye();","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"papataco14"},"content":"     * Handles various commands parsed from the input.","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"papataco14"},"content":"     * ","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"papataco14"},"content":"     * @param parsedInput the parsed input array.","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"papataco14"},"content":"     * @return true if chat should continue, false otherwise.","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"papataco14"},"content":"     * @throws ChadException if an invalid command or argument is encountered.","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"papataco14"},"content":"    boolean commandHandler(String[] parsedInput) throws ChadException {","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"papataco14"},"content":"        Parser.CommandType command \u003d Parser.parseCommandType(parsedInput[0]);","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"papataco14"},"content":"        switch (command) {","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"papataco14"},"content":"        case MARK:","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"papataco14"},"content":"            handleMark(parsedInput);","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"papataco14"},"content":"            break;","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"papataco14"},"content":"        case UNMARK:","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"papataco14"},"content":"            handleUnmark(parsedInput);","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"papataco14"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"papataco14"},"content":"        case LIST:","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"papataco14"},"content":"            handleList();","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"papataco14"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"papataco14"},"content":"        case TODO:","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"papataco14"},"content":"            handleTodo(parsedInput);","lastModifiedDate":"2023-09-05"},{"lineNumber":92,"author":{"gitId":"papataco14"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"papataco14"},"content":"        case DEADLINE:","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"papataco14"},"content":"            handleDeadline(parsedInput);","lastModifiedDate":"2023-09-05"},{"lineNumber":95,"author":{"gitId":"papataco14"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"papataco14"},"content":"        case EVENT:","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"papataco14"},"content":"            handleEvent(parsedInput);","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"papataco14"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"papataco14"},"content":"        case DELETE:","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"papataco14"},"content":"            handleDelete(parsedInput);","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"papataco14"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"papataco14"},"content":"        case FIND:","lastModifiedDate":"2023-09-06"},{"lineNumber":103,"author":{"gitId":"papataco14"},"content":"            handleFind(parsedInput);","lastModifiedDate":"2023-09-06"},{"lineNumber":104,"author":{"gitId":"papataco14"},"content":"            break;","lastModifiedDate":"2023-09-06"},{"lineNumber":105,"author":{"gitId":"papataco14"},"content":"        case BYE:","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"papataco14"},"content":"            return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"papataco14"},"content":"        default:","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"papataco14"},"content":"            throw new ChadException.InvalidCommandException(\"Unknown command: \" + parsedInput[0]);","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"papataco14"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"papataco14"},"content":"        return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":114,"author":{"gitId":"papataco14"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-09-06"},{"lineNumber":115,"author":{"gitId":"papataco14"},"content":"     * ","lastModifiedDate":"2023-09-06"},{"lineNumber":116,"author":{"gitId":"papataco14"},"content":"     * @param parsedInput the parsed input array.","lastModifiedDate":"2023-09-06"},{"lineNumber":117,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":118,"author":{"gitId":"papataco14"},"content":"    void handleMark(String[] parsedInput) {","lastModifiedDate":"2023-09-06"},{"lineNumber":119,"author":{"gitId":"papataco14"},"content":"        int index \u003d Integer.parseInt(parsedInput[1]) - 1;","lastModifiedDate":"2023-09-05"},{"lineNumber":120,"author":{"gitId":"papataco14"},"content":"        String response \u003d taskList.markTaskAsDone(index);","lastModifiedDate":"2023-09-05"},{"lineNumber":121,"author":{"gitId":"papataco14"},"content":"        ioHandler.writeOutput(response);","lastModifiedDate":"2023-09-05"},{"lineNumber":122,"author":{"gitId":"papataco14"},"content":"        saveTasks();","lastModifiedDate":"2023-09-05"},{"lineNumber":123,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":125,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":126,"author":{"gitId":"papataco14"},"content":"     * Marks a task as not done.","lastModifiedDate":"2023-09-06"},{"lineNumber":127,"author":{"gitId":"papataco14"},"content":"     * ","lastModifiedDate":"2023-09-06"},{"lineNumber":128,"author":{"gitId":"papataco14"},"content":"     * @param parsedInput the parsed input array.","lastModifiedDate":"2023-09-06"},{"lineNumber":129,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":130,"author":{"gitId":"papataco14"},"content":"    void handleUnmark(String[] parsedInput){","lastModifiedDate":"2023-09-06"},{"lineNumber":131,"author":{"gitId":"papataco14"},"content":"        int index \u003d Integer.parseInt(parsedInput[1]) - 1;","lastModifiedDate":"2023-09-05"},{"lineNumber":132,"author":{"gitId":"papataco14"},"content":"        String response \u003d taskList.markTaskAsNotDone(index);","lastModifiedDate":"2023-09-05"},{"lineNumber":133,"author":{"gitId":"papataco14"},"content":"        ioHandler.writeOutput(response);","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"papataco14"},"content":"        saveTasks();","lastModifiedDate":"2023-09-03"},{"lineNumber":135,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":138,"author":{"gitId":"papataco14"},"content":"     * Lists all the tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":139,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":140,"author":{"gitId":"papataco14"},"content":"    void handleList() {","lastModifiedDate":"2023-09-06"},{"lineNumber":141,"author":{"gitId":"papataco14"},"content":"        ioHandler.writeOutput(taskList.displayTasks());","lastModifiedDate":"2023-09-05"},{"lineNumber":142,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":144,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":145,"author":{"gitId":"papataco14"},"content":"     * Adds a new ToDo task.","lastModifiedDate":"2023-09-06"},{"lineNumber":146,"author":{"gitId":"papataco14"},"content":"     * ","lastModifiedDate":"2023-09-06"},{"lineNumber":147,"author":{"gitId":"papataco14"},"content":"     * @param parts the parsed input array containing the task description.","lastModifiedDate":"2023-09-06"},{"lineNumber":148,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":149,"author":{"gitId":"papataco14"},"content":"    void handleTodo(String[] parts) {","lastModifiedDate":"2023-09-06"},{"lineNumber":150,"author":{"gitId":"papataco14"},"content":"        taskList.addTodo(parts[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":151,"author":{"gitId":"papataco14"},"content":"        ioHandler.writeOutput(\"Added new ToDo: \" + parts[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":152,"author":{"gitId":"papataco14"},"content":"        saveTasks();","lastModifiedDate":"2023-09-03"},{"lineNumber":153,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":154,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":155,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":156,"author":{"gitId":"papataco14"},"content":"     * Adds a new Deadline task.","lastModifiedDate":"2023-09-06"},{"lineNumber":157,"author":{"gitId":"papataco14"},"content":"     * ","lastModifiedDate":"2023-09-06"},{"lineNumber":158,"author":{"gitId":"papataco14"},"content":"     * @param parts the parsed input array containing the task and deadline details.","lastModifiedDate":"2023-09-06"},{"lineNumber":159,"author":{"gitId":"papataco14"},"content":"     * @throws ChadException if the date format is incorrect.","lastModifiedDate":"2023-09-06"},{"lineNumber":160,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":161,"author":{"gitId":"papataco14"},"content":"    void handleDeadline(String[] parts) throws ChadException {","lastModifiedDate":"2023-09-06"},{"lineNumber":162,"author":{"gitId":"papataco14"},"content":"        String[] deadlineParts \u003d parts[1].split(\" /by \", 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":163,"author":{"gitId":"papataco14"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":164,"author":{"gitId":"papataco14"},"content":"            LocalDateTime dueDate \u003d LocalDateTime.parse(deadlineParts[1], DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2023-09-05"},{"lineNumber":165,"author":{"gitId":"papataco14"},"content":"            taskList.addDeadline(deadlineParts[0], dueDate);","lastModifiedDate":"2023-09-05"},{"lineNumber":166,"author":{"gitId":"papataco14"},"content":"            ioHandler.writeOutput(\"Added new Deadline: \" + deadlineParts[0] + \" by \" + dueDate);","lastModifiedDate":"2023-09-05"},{"lineNumber":167,"author":{"gitId":"papataco14"},"content":"            saveTasks();","lastModifiedDate":"2023-09-03"},{"lineNumber":168,"author":{"gitId":"papataco14"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":169,"author":{"gitId":"papataco14"},"content":"            throw new ChadException.InvalidFormatException(\"Invalid date format. Please use \" + DATE_FORMAT);","lastModifiedDate":"2023-09-05"},{"lineNumber":170,"author":{"gitId":"papataco14"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":171,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":172,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":173,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":174,"author":{"gitId":"papataco14"},"content":"     * Adds a new Event task.","lastModifiedDate":"2023-09-06"},{"lineNumber":175,"author":{"gitId":"papataco14"},"content":"     * ","lastModifiedDate":"2023-09-06"},{"lineNumber":176,"author":{"gitId":"papataco14"},"content":"     * @param parts the parsed input array containing the event and time details.","lastModifiedDate":"2023-09-06"},{"lineNumber":177,"author":{"gitId":"papataco14"},"content":"     * @throws ChadException if the date format is incorrect.","lastModifiedDate":"2023-09-06"},{"lineNumber":178,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":179,"author":{"gitId":"papataco14"},"content":"    void handleEvent(String[] parts) throws ChadException {","lastModifiedDate":"2023-09-06"},{"lineNumber":180,"author":{"gitId":"papataco14"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":181,"author":{"gitId":"papataco14"},"content":"            String[] eventParts \u003d parts[1].split(\" /from | /to \", 3);","lastModifiedDate":"2023-08-30"},{"lineNumber":182,"author":{"gitId":"papataco14"},"content":"            LocalDateTime start \u003d LocalDateTime.parse(eventParts[1], DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2023-09-05"},{"lineNumber":183,"author":{"gitId":"papataco14"},"content":"            LocalDateTime end \u003d LocalDateTime.parse(eventParts[2], DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2023-09-05"},{"lineNumber":184,"author":{"gitId":"papataco14"},"content":"            taskList.addEvent(eventParts[0], start, end);","lastModifiedDate":"2023-09-05"},{"lineNumber":185,"author":{"gitId":"papataco14"},"content":"            ioHandler.writeOutput(\"Added new Event: \" + eventParts[0] + \" from \" + start + \" to \" + end);","lastModifiedDate":"2023-09-05"},{"lineNumber":186,"author":{"gitId":"papataco14"},"content":"            saveTasks();","lastModifiedDate":"2023-09-03"},{"lineNumber":187,"author":{"gitId":"papataco14"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":188,"author":{"gitId":"papataco14"},"content":"            throw new ChadException.InvalidFormatException(\"Invalid date format. Please use \" + DATE_FORMAT);","lastModifiedDate":"2023-09-05"},{"lineNumber":189,"author":{"gitId":"papataco14"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":190,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":191,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":192,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":193,"author":{"gitId":"papataco14"},"content":"     * Deletes a task.","lastModifiedDate":"2023-09-06"},{"lineNumber":194,"author":{"gitId":"papataco14"},"content":"     * ","lastModifiedDate":"2023-09-06"},{"lineNumber":195,"author":{"gitId":"papataco14"},"content":"     * @param parts the parsed input array containing the index of the task to be","lastModifiedDate":"2023-09-06"},{"lineNumber":196,"author":{"gitId":"papataco14"},"content":"     *              deleted.","lastModifiedDate":"2023-09-06"},{"lineNumber":197,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":198,"author":{"gitId":"papataco14"},"content":"    void handleDelete(String[] parts) {","lastModifiedDate":"2023-09-06"},{"lineNumber":199,"author":{"gitId":"papataco14"},"content":"        int index \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":200,"author":{"gitId":"papataco14"},"content":"        String response \u003d taskList.deleteTask(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":201,"author":{"gitId":"papataco14"},"content":"        ioHandler.writeOutput(response);","lastModifiedDate":"2023-09-01"},{"lineNumber":202,"author":{"gitId":"papataco14"},"content":"        saveTasks();","lastModifiedDate":"2023-09-03"},{"lineNumber":203,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":204,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":205,"author":{"gitId":"papataco14"},"content":"    void handleFind(String[] parsedInput) {","lastModifiedDate":"2023-09-06"},{"lineNumber":206,"author":{"gitId":"papataco14"},"content":"        String keyword \u003d parsedInput[1];","lastModifiedDate":"2023-09-06"},{"lineNumber":207,"author":{"gitId":"papataco14"},"content":"        String matchingTasks \u003d taskList.findTasks(keyword);","lastModifiedDate":"2023-09-06"},{"lineNumber":208,"author":{"gitId":"papataco14"},"content":"        ioHandler.writeOutput(matchingTasks);","lastModifiedDate":"2023-09-06"},{"lineNumber":209,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":210,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":211,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":212,"author":{"gitId":"papataco14"},"content":"     * Saves the current state of tasks to the storage.","lastModifiedDate":"2023-09-06"},{"lineNumber":213,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":214,"author":{"gitId":"papataco14"},"content":"    void saveTasks() {","lastModifiedDate":"2023-09-06"},{"lineNumber":215,"author":{"gitId":"papataco14"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":216,"author":{"gitId":"papataco14"},"content":"            storage.saveTasks(taskList);","lastModifiedDate":"2023-09-03"},{"lineNumber":217,"author":{"gitId":"papataco14"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":218,"author":{"gitId":"papataco14"},"content":"            ioHandler.writeOutput(\"Error: File not found. \" + e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":219,"author":{"gitId":"papataco14"},"content":"        } catch (NoSuchFileException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":220,"author":{"gitId":"papataco14"},"content":"            ioHandler.writeOutput(\"Error: Directory not found. \" + e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":221,"author":{"gitId":"papataco14"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":222,"author":{"gitId":"papataco14"},"content":"            ioHandler.writeOutput(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":223,"author":{"gitId":"papataco14"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":224,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":225,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":226,"author":{"gitId":"papataco14"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"papataco14":226}},{"path":"src/main/java/chad/chatengine/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"papataco14"},"content":"package chad.chatengine;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"papataco14"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"papataco14"},"content":" * Utility class for parsing chat commands and input.","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"papataco14"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"papataco14"},"content":"public class Parser {","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"papataco14"},"content":"     * Enumeration of possible command types.","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"papataco14"},"content":"    public enum CommandType {","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"papataco14"},"content":"        BYE, MARK, UNMARK, LIST, TODO, DEADLINE, EVENT, DELETE, FIND, UNKNOWN","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"papataco14"},"content":"     * Parses the type of command.","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"papataco14"},"content":"     * ","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"papataco14"},"content":"     * @param command the command string.","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"papataco14"},"content":"     * @return the type of command.","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"papataco14"},"content":"    public static CommandType parseCommandType(String command) {","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"papataco14"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"papataco14"},"content":"            return CommandType.valueOf(command.toUpperCase());","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"papataco14"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"papataco14"},"content":"            return CommandType.UNKNOWN;","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"papataco14"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"papataco14"},"content":"     * Parses the input string into command and arguments.","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"papataco14"},"content":"     * ","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"papataco14"},"content":"     * @param input the user\u0027s input string.","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"papataco14"},"content":"     * @return a String array containing the command and its arguments.","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"papataco14"},"content":"     * @throws ChadException if the input is invalid or incomplete.","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"papataco14"},"content":"    public static String[] parseInput(String input) throws ChadException {","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"papataco14"},"content":"        if (input.trim().isEmpty()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"papataco14"},"content":"            throw new ChadException.InvalidArgumentException(\"Input cannot be empty.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"papataco14"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"papataco14"},"content":"        String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"papataco14"},"content":"        CommandType command \u003d parseCommandType(parts[0]);","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"papataco14"},"content":"        switch (command) {","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"papataco14"},"content":"        case MARK:","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"papataco14"},"content":"        case UNMARK:","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"papataco14"},"content":"        case DELETE:","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"papataco14"},"content":"            if (parts.length \u003c 2) {","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"papataco14"},"content":"                throw new ChadException.InvalidArgumentException(\"Missing index for \" + command);","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"papataco14"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"papataco14"},"content":"            break;","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"papataco14"},"content":"        case TODO:","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"papataco14"},"content":"            if (parts.length \u003c 2) {","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"papataco14"},"content":"                throw new ChadException.InvalidArgumentException(\"Missing task description for ToDo.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"papataco14"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"papataco14"},"content":"            break;","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"papataco14"},"content":"        case DEADLINE:","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"papataco14"},"content":"            if (parts.length \u003c 2 || !parts[1].contains(\" /by \")) {","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"papataco14"},"content":"                throw new ChadException.InvalidArgumentException(","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"papataco14"},"content":"                        \"Invalid format for Deadline. Use: deadline {task} /by {date}\");","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"papataco14"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"papataco14"},"content":"            break;","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"papataco14"},"content":"        case EVENT:","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"papataco14"},"content":"            if (parts.length \u003c 2 || !parts[1].contains(\" /from \") || !parts[1].contains(\" /to \")) {","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"papataco14"},"content":"                throw new ChadException.InvalidArgumentException(","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"papataco14"},"content":"                        \"Invalid format for Event. Use: event {task} /from {start} /to {end}\");","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"papataco14"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"papataco14"},"content":"            break;","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"papataco14"},"content":"        case LIST:","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"papataco14"},"content":"        case BYE:","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"papataco14"},"content":"            break;","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"papataco14"},"content":"        case FIND:","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"papataco14"},"content":"            if (parts.length \u003c 2) {","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"papataco14"},"content":"                throw new ChadException.InvalidArgumentException(\"Missing keyword for find.\");","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"papataco14"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"papataco14"},"content":"            break;","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"papataco14"},"content":"        case UNKNOWN:","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"papataco14"},"content":"        default:","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"papataco14"},"content":"            throw new ChadException.InvalidCommandException(\"Unknown command: \" + parts[0]);","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"papataco14"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"papataco14"},"content":"        return parts;","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"papataco14"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"papataco14":84}},{"path":"src/main/java/chad/chatengine/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"papataco14"},"content":"package chad.chatengine;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"papataco14"},"content":"import chad.task.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"papataco14"},"content":"import chad.task.TaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"papataco14"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"papataco14"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"papataco14"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"papataco14"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"papataco14"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"papataco14"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"papataco14"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"papataco14"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"papataco14"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"papataco14"},"content":" * Manages storage operations for tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"papataco14"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"papataco14"},"content":"public class Storage {","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"papataco14"},"content":"    private Path filePath;","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"papataco14"},"content":"     * Constructs a new Storage instance.","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"papataco14"},"content":"     * @param filePath the path to the file for storing tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"papataco14"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"papataco14"},"content":"        this.filePath \u003d Paths.get(filePath);","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"papataco14"},"content":"        ensureFileExists();","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"papataco14"},"content":"     * Ensures the file for storage exists.","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"papataco14"},"content":"    private void ensureFileExists() {","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"papataco14"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"papataco14"},"content":"            if (Files.notExists(filePath)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"papataco14"},"content":"                Path parentDir \u003d filePath.getParent();","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"papataco14"},"content":"                if (Files.notExists(parentDir)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"papataco14"},"content":"                    Files.createDirectories(parentDir);","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"papataco14"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"papataco14"},"content":"                Files.createFile(filePath);","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"papataco14"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"papataco14"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"papataco14"},"content":"            System.out.println(\"An error occurred while creating the file or directory: \" + e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"papataco14"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"papataco14"},"content":"     * Saves the tasks to the file.","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"papataco14"},"content":"     * @param taskList the list of tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"papataco14"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"papataco14"},"content":"    public void saveTasks(TaskList taskList) throws IOException {","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"papataco14"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"papataco14"},"content":"        try (BufferedWriter writer \u003d Files.newBufferedWriter(filePath)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"papataco14"},"content":"            for (Task task : taskList.getTasks()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"papataco14"},"content":"                writer.write(task.toFileFormat(formatter));","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"papataco14"},"content":"                writer.newLine();","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"papataco14"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"papataco14"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"papataco14"},"content":"     * Loads tasks from the storage file.","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"papataco14"},"content":"     * @return an ArrayList of Task objects loaded from the storage file.","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"papataco14"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"papataco14"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws IOException {","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"papataco14"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"papataco14"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"papataco14"},"content":"        try (BufferedReader reader \u003d Files.newBufferedReader(filePath)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"papataco14"},"content":"            String line;","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"papataco14"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"papataco14"},"content":"                Task task \u003d Task.fromFileFormat(line, formatter);","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"papataco14"},"content":"                tasks.add(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"papataco14"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"papataco14"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"papataco14"},"content":"        return tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"papataco14"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"papataco14":82}},{"path":"src/main/java/chad/io/ConsoleIO.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"papataco14"},"content":"package chad.io;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"papataco14"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"papataco14"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"papataco14"},"content":" * Implements the IOHandler interface for console-based input and output.","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"papataco14"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"papataco14"},"content":"public class ConsoleIO implements IOHandler {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"papataco14"},"content":"    private Scanner sc;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"papataco14"},"content":"     * Initializes a new Scanner for console input.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"papataco14"},"content":"    public ConsoleIO() {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"papataco14"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"papataco14"},"content":"     * Greets the user upon program startup.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"papataco14"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"papataco14"},"content":"    public void greet() {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"papataco14"},"content":"        System.out.println(\"Hello! I\u0027m Chad!\\nWhat do you want?\");","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"papataco14"},"content":"        System.out.println(\"______________________________________\");","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"papataco14"},"content":"     * Bids farewell to the user.","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"papataco14"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"papataco14"},"content":"    public void sayGoodbye() {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"papataco14"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"papataco14"},"content":"     * Reads a line of input from the user.","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"papataco14"},"content":"     * @return the line as a string.","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"papataco14"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"papataco14"},"content":"    public String readInput() {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"papataco14"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"papataco14"},"content":"     * Writes a line of output to the user.","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"papataco14"},"content":"     * @param output the string to be outputted.","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"papataco14"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"papataco14"},"content":"    public void writeOutput(String output) {","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"papataco14"},"content":"        System.out.println(output);","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"papataco14"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"papataco14":53}},{"path":"src/main/java/chad/io/IOHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"papataco14"},"content":"package chad.io;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"papataco14"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"papataco14"},"content":" * Interface for handling input and output operations.","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"papataco14"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"papataco14"},"content":"public interface IOHandler {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"papataco14"},"content":"     * Reads input from the user.","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"papataco14"},"content":"     * @return the user\u0027s input as a string.","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"papataco14"},"content":"    String readInput();","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"papataco14"},"content":"     * Writes output to the user.","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"papataco14"},"content":"     * @param output the string to be outputted.","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"papataco14"},"content":"    void writeOutput(String output);","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"papataco14"},"content":"     * Greets the user upon startup.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"papataco14"},"content":"    void greet();","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"papataco14"},"content":"     * Bids farewell to the user upon exiting.","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"papataco14"},"content":"    void sayGoodbye();","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"papataco14"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"papataco14":28}},{"path":"src/main/java/chad/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"papataco14"},"content":"package chad.task;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"papataco14"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"papataco14"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"papataco14"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"papataco14"},"content":" * Represents a deadline task with a due date.","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"papataco14"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"papataco14"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"papataco14"},"content":"    private LocalDateTime dueDate;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"papataco14"},"content":"     * Constructs a new Deadline instance.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"papataco14"},"content":"     * @param description the description of the task.","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"papataco14"},"content":"     * @param dueDate the due date for the task.","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"papataco14"},"content":"    public Deadline(String description, LocalDateTime dueDate) {","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"papataco14"},"content":"        super(description);","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"papataco14"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"papataco14"},"content":"     * Returns a string representation of the deadline task.","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"papataco14"},"content":"     * @return the string format of the deadline task.","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"papataco14"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"papataco14"},"content":"    public String toString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"papataco14"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mm a\");","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"papataco14"},"content":"        return String.format(\"[D][%s] %s (by: %s)\", super.getStatusIcon(), description, dueDate.format(formatter));","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"papataco14"},"content":"     * Returns the deadline task in a format suitable for file storage.","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"papataco14"},"content":"     * @param formatter the DateTimeFormatter to use for the due date.","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"papataco14"},"content":"     * @return the string format of the deadline task for file storage.","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"papataco14"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"papataco14"},"content":"    public String toFileFormat(DateTimeFormatter formatter) {","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"papataco14"},"content":"        return String.format(\"D | %s | %s | %s\", super.isDoneString(), description, dueDate.format(formatter));","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"papataco14"},"content":"     * Gets the due date of the deadline task.","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"papataco14"},"content":"     * @return the due date as a LocalDateTime object.","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"papataco14"},"content":"    public LocalDateTime getDueDate() {","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"papataco14"},"content":"        return dueDate;","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"papataco14"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"papataco14":49}},{"path":"src/main/java/chad/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"papataco14"},"content":"package chad.task;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"papataco14"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"papataco14"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"papataco14"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"papataco14"},"content":" * Represents an event task with a start and end time.","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"papataco14"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"papataco14"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"papataco14"},"content":"    private LocalDateTime start;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"papataco14"},"content":"    private LocalDateTime end;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"papataco14"},"content":"     * Constructs a new Event instance.","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"papataco14"},"content":"     * @param description the description of the task.","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"papataco14"},"content":"     * @param start the start time for the event.","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"papataco14"},"content":"     * @param end the end time for the event.","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"papataco14"},"content":"    public Event(String description, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"papataco14"},"content":"        super(description);","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"papataco14"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"papataco14"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"papataco14"},"content":"     * Returns a string representation of the event task.","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"papataco14"},"content":"     * @return the string format of the event task.","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"papataco14"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"papataco14"},"content":"    public String toString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"papataco14"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mm a\");","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"papataco14"},"content":"        return String.format(\"[E][%s] %s (from: %s to: %s)\", super.getStatusIcon(),","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"papataco14"},"content":"                description, start.format(formatter), end.format(formatter));","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"papataco14"},"content":"     * Returns the event task in a format suitable for file storage.","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"papataco14"},"content":"     * @param formatter the DateTimeFormatter to use for the start and end times.","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"papataco14"},"content":"     * @return the string format of the event task for file storage.","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"papataco14"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"papataco14"},"content":"    public String toFileFormat(DateTimeFormatter formatter) {","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"papataco14"},"content":"        return String.format(\"E | %s | %s | %s | %s\", super.isDoneString(), description, start.format(formatter),","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"papataco14"},"content":"                end.format(formatter));","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"papataco14"},"content":"     * Gets the start time of the event task.","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"papataco14"},"content":"     * @return the start time as a LocalDateTime object.","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"papataco14"},"content":"    public LocalDateTime getStart() {","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"papataco14"},"content":"        return start;","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"papataco14"},"content":"     * Gets the end time of the event task.","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"papataco14"},"content":"     * @return the end time as a LocalDateTime object.","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"papataco14"},"content":"    public LocalDateTime getEnd() {","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"papataco14"},"content":"        return end;","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"papataco14"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"papataco14":62}},{"path":"src/main/java/chad/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"papataco14"},"content":"package chad.task;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"papataco14"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"papataco14"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"papataco14"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"papataco14"},"content":" * Represents a Task that the user wants to keep track off.","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"papataco14"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"papataco14"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"papataco14"},"content":"    protected String description;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"papataco14"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"papataco14"},"content":"     * Constructs a new Task instance.","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"papataco14"},"content":"     * @param description the description of the task.","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"papataco14"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"papataco14"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"papataco14"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"papataco14"},"content":"     * Gets the status icon representing the task\u0027s completion status.","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"papataco14"},"content":"     * @return \"X\" if the task is done, empty string otherwise.","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"papataco14"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"papataco14"},"content":"        return (isDone ? \"X\" : \"\");","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"papataco14"},"content":"     * Gets the completion status of the task as a string.","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"papataco14"},"content":"     * @return \"1\" if the task is done, \"0\" otherwise.","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"papataco14"},"content":"    public String isDoneString() {","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"papataco14"},"content":"        return isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"papataco14"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"papataco14"},"content":"    public void mark() {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"papataco14"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"papataco14"},"content":"     * Unmarks the task, setting its status to not done.","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"papataco14"},"content":"    public void unMark() {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"papataco14"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"papataco14"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"papataco14"},"content":"     * @return the string format of the task.","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"papataco14"},"content":"    public abstract String toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"papataco14"},"content":"     * Returns the task in a format suitable for file storage.","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"papataco14"},"content":"     * @param formatter the DateTimeFormatter to use for date and time representation.","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"papataco14"},"content":"     * @return the string format of the task for file storage.","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"papataco14"},"content":"    public abstract String toFileFormat(DateTimeFormatter formatter);","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"papataco14"},"content":"     * Creates a Task object from a string representation in a file.","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"papataco14"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"papataco14"},"content":"     * @param line The string representation of the task read from a file.","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"papataco14"},"content":"     * @param formatter The DateTimeFormatter to use for parsing any LocalDateTime objects.","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"papataco14"},"content":"     * @return A Task object corresponding to the provided string.","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"papataco14"},"content":"    public static Task fromFileFormat(String line, DateTimeFormatter formatter) {","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"papataco14"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"papataco14"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"papataco14"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"papataco14"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"papataco14"},"content":"        Task task \u003d null;","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"papataco14"},"content":"        switch (type) {","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"papataco14"},"content":"            case \"T\":","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"papataco14"},"content":"                task \u003d new ToDo(description);","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"papataco14"},"content":"                break;","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"papataco14"},"content":"            case \"D\":","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"papataco14"},"content":"                LocalDateTime dueDate \u003d LocalDateTime.parse(parts[3], formatter);","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"papataco14"},"content":"                task \u003d new Deadline(description, dueDate);","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"papataco14"},"content":"                break;","lastModifiedDate":"2023-09-06"},{"lineNumber":87,"author":{"gitId":"papataco14"},"content":"            case \"E\":","lastModifiedDate":"2023-09-06"},{"lineNumber":88,"author":{"gitId":"papataco14"},"content":"                LocalDateTime start \u003d LocalDateTime.parse(parts[3], formatter);","lastModifiedDate":"2023-09-06"},{"lineNumber":89,"author":{"gitId":"papataco14"},"content":"                LocalDateTime end \u003d LocalDateTime.parse(parts[4], formatter);","lastModifiedDate":"2023-09-06"},{"lineNumber":90,"author":{"gitId":"papataco14"},"content":"                task \u003d new Event(description, start, end);","lastModifiedDate":"2023-09-06"},{"lineNumber":91,"author":{"gitId":"papataco14"},"content":"                break;","lastModifiedDate":"2023-09-06"},{"lineNumber":92,"author":{"gitId":"papataco14"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":93,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":94,"author":{"gitId":"papataco14"},"content":"        if (task !\u003d null \u0026\u0026 isDone) {","lastModifiedDate":"2023-09-06"},{"lineNumber":95,"author":{"gitId":"papataco14"},"content":"            task.mark();","lastModifiedDate":"2023-09-06"},{"lineNumber":96,"author":{"gitId":"papataco14"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":97,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":98,"author":{"gitId":"papataco14"},"content":"        return task;","lastModifiedDate":"2023-09-06"},{"lineNumber":99,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":100,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":101,"author":{"gitId":"papataco14"},"content":"    String getDescription() {","lastModifiedDate":"2023-09-06"},{"lineNumber":102,"author":{"gitId":"papataco14"},"content":"        return description;","lastModifiedDate":"2023-09-06"},{"lineNumber":103,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":104,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":105,"author":{"gitId":"papataco14"},"content":"    boolean isDone() {","lastModifiedDate":"2023-09-06"},{"lineNumber":106,"author":{"gitId":"papataco14"},"content":"        return isDone;","lastModifiedDate":"2023-09-06"},{"lineNumber":107,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":108,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":109,"author":{"gitId":"papataco14"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"papataco14":109}},{"path":"src/main/java/chad/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"papataco14"},"content":"package chad.task;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"papataco14"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"papataco14"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"papataco14"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"papataco14"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"papataco14"},"content":" * Represents a list of tasks, providing methods to manipulate the tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"papataco14"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"papataco14"},"content":"public class TaskList {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"papataco14"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"papataco14"},"content":"     * Constructs a new empty TaskList.","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"papataco14"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"papataco14"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"papataco14"},"content":"     * Constructs a new TaskList with existing tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"papataco14"},"content":"     * @param tasks an ArrayList of existing tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"papataco14"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"papataco14"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"papataco14"},"content":"     * Adds a new ToDo task to the list.","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"papataco14"},"content":"     * @param description the description of the ToDo task.","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"papataco14"},"content":"    public void addTodo(String description) {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"papataco14"},"content":"        tasks.add(new ToDo(description));","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"papataco14"},"content":"     * Adds a new Deadline task to the list.","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"papataco14"},"content":"     * @param description the description of the Deadline task.","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"papataco14"},"content":"     * @param dueDate the due date of the Deadline task.","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"papataco14"},"content":"    public void addDeadline(String description, LocalDateTime dueDate) {","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"papataco14"},"content":"        tasks.add(new Deadline(description, dueDate));","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"papataco14"},"content":"     * Adds a new Event task to the list.","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"papataco14"},"content":"     * @param description the description of the Event task.","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"papataco14"},"content":"     * @param start the start date and time of the Event task.","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"papataco14"},"content":"     * @param end the end date and time of the Event task.","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"papataco14"},"content":"    public void addEvent(String description, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"papataco14"},"content":"        tasks.add(new Event(description, start, end));","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"papataco14"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"papataco14"},"content":"     * @param index the index of the task to be marked as done.","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"papataco14"},"content":"     * @return a status message indicating success or failure.","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"papataco14"},"content":"    public String markTaskAsDone(int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"papataco14"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"papataco14"},"content":"            Task task \u003d tasks.get(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"papataco14"},"content":"            task.mark();","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"papataco14"},"content":"            return \"Yessir! This task is marked as done:\\n\" + task.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"papataco14"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"papataco14"},"content":"        return \"Invalid task index.\";","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"papataco14"},"content":"     * Marks a task as not done.","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"papataco14"},"content":"     * @param index the index of the task to be marked as not done.","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"papataco14"},"content":"     * @return a status message indicating success or failure.","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"papataco14"},"content":"    public String markTaskAsNotDone(int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"papataco14"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"papataco14"},"content":"            Task task \u003d tasks.get(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"papataco14"},"content":"            task.unMark();","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"papataco14"},"content":"            return \"Aite, I\u0027ve marked this task as not done yet:\\n\" + task.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"papataco14"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"papataco14"},"content":"        return \"Invalid task index.\";","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"papataco14"},"content":"     * Returns a string representation of all tasks in the list.","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"papataco14"},"content":"     * @return a string containing all tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":87,"author":{"gitId":"papataco14"},"content":"    public String displayTasks() {","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"papataco14"},"content":"        StringBuilder sb \u003d new StringBuilder(\"Here\u0027s your tasks m8:\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"papataco14"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"papataco14"},"content":"            sb.append((i + 1) + \".\" + tasks.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"papataco14"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"papataco14"},"content":"        sb.append(\"Now you have \" + tasks.size() + \" tasks in your list\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"papataco14"},"content":"        return sb.toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":97,"author":{"gitId":"papataco14"},"content":"     * Deletes a task from the list.","lastModifiedDate":"2023-09-06"},{"lineNumber":98,"author":{"gitId":"papataco14"},"content":"     * @param taskIndex the index of the task to be deleted.","lastModifiedDate":"2023-09-06"},{"lineNumber":99,"author":{"gitId":"papataco14"},"content":"     * @return a status message indicating success or failure.","lastModifiedDate":"2023-09-06"},{"lineNumber":100,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":101,"author":{"gitId":"papataco14"},"content":"    public String deleteTask(int taskIndex) {","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"papataco14"},"content":"        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c tasks.size()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"papataco14"},"content":"            Task task \u003d tasks.get(taskIndex);","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"papataco14"},"content":"            tasks.remove(taskIndex);","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"papataco14"},"content":"            return \"Aite, this task is gone bro: \" + task.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"papataco14"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"papataco14"},"content":"        return \"Invalid task index.\";","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":111,"author":{"gitId":"papataco14"},"content":"     * Returns the ArrayList of tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":112,"author":{"gitId":"papataco14"},"content":"     * @return an ArrayList containing all tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":113,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":114,"author":{"gitId":"papataco14"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-09-03"},{"lineNumber":115,"author":{"gitId":"papataco14"},"content":"        return tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":116,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":117,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":118,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":119,"author":{"gitId":"papataco14"},"content":"     * Sets the ArrayList of tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":120,"author":{"gitId":"papataco14"},"content":"     * @param tasks the new ArrayList of tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":121,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":122,"author":{"gitId":"papataco14"},"content":"    public void setTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":123,"author":{"gitId":"papataco14"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":124,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":125,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":126,"author":{"gitId":"papataco14"},"content":"    public String findTasks(String keyword) {","lastModifiedDate":"2023-09-06"},{"lineNumber":127,"author":{"gitId":"papataco14"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d (ArrayList\u003cTask\u003e) tasks.stream()","lastModifiedDate":"2023-09-06"},{"lineNumber":128,"author":{"gitId":"papataco14"},"content":"                .filter(task -\u003e task.getDescription().toLowerCase().contains(keyword.toLowerCase()))","lastModifiedDate":"2023-09-06"},{"lineNumber":129,"author":{"gitId":"papataco14"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-09-06"},{"lineNumber":130,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":131,"author":{"gitId":"papataco14"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2023-09-06"},{"lineNumber":132,"author":{"gitId":"papataco14"},"content":"            return \"No tasks found with that keyword.\";","lastModifiedDate":"2023-09-06"},{"lineNumber":133,"author":{"gitId":"papataco14"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":134,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":135,"author":{"gitId":"papataco14"},"content":"        StringBuilder sb \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-09-06"},{"lineNumber":136,"author":{"gitId":"papataco14"},"content":"        for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2023-09-06"},{"lineNumber":137,"author":{"gitId":"papataco14"},"content":"            sb.append((i + 1) + \".\" + matchingTasks.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2023-09-06"},{"lineNumber":138,"author":{"gitId":"papataco14"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":139,"author":{"gitId":"papataco14"},"content":"        return sb.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":140,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":141,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":142,"author":{"gitId":"papataco14"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"papataco14":142}},{"path":"src/main/java/chad/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"papataco14"},"content":"package chad.task;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"papataco14"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"papataco14"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"papataco14"},"content":" * Represents a ToDo task.","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"papataco14"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"papataco14"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"papataco14"},"content":"     * Constructs a new ToDo task.","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"papataco14"},"content":"     * @param description the description of the ToDo task.","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"papataco14"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"papataco14"},"content":"        super(description);","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"papataco14"},"content":"     * Returns a string representation of the ToDo task.","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"papataco14"},"content":"     * @return the string format of the ToDo task.","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"papataco14"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"papataco14"},"content":"    public String toString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"papataco14"},"content":"        return String.format(\"[T][%s] %s\", super.getStatusIcon(), description);","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"papataco14"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"papataco14"},"content":"     * Returns the ToDo task in a format suitable for file storage.","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"papataco14"},"content":"     * @param formatter the DateTimeFormatter to use for date and time representation.","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"papataco14"},"content":"     * @return the string format of the ToDo task for file storage.","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"papataco14"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"papataco14"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"papataco14"},"content":"    public String toFileFormat(DateTimeFormatter formatter) {","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"papataco14"},"content":"        return String.format(\"T | %s | %s\", super.isDoneString(), description);","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"papataco14"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"papataco14":35}},{"path":"src/test/java/chad/chatengine/ChatEngineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"papataco14"},"content":"package chad.chatengine;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"papataco14"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"papataco14"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"papataco14"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"papataco14"},"content":"import static org.mockito.Mockito.*;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"papataco14"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"papataco14"},"content":"import chad.io.IOHandler;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"papataco14"},"content":"import chad.task.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"papataco14"},"content":"public class ChatEngineTest {","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"papataco14"},"content":"    private ChatEngine chatEngine;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"papataco14"},"content":"    private IOHandler ioHandler;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"papataco14"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"papataco14"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"papataco14"},"content":"    public void setUp() {","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"papataco14"},"content":"        ioHandler \u003d mock(IOHandler.class);","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"papataco14"},"content":"        taskList \u003d mock(TaskList.class);","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"papataco14"},"content":"        chatEngine \u003d new ChatEngine(ioHandler, taskList, \"some/file/path\");","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"papataco14"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"papataco14"},"content":"    public void handleEvent_validInput_addsEvent() throws ChadException {","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"papataco14"},"content":"        String[] parsedInput \u003d new String[]{\"EVENT\", \"Meeting /from 2023-12-01 14:00 /to 2023-12-01 16:00\"};","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"papataco14"},"content":"        chatEngine.handleEvent(parsedInput);","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"papataco14"},"content":"        verify(taskList).addEvent(\"Meeting\", LocalDateTime.of(2023, 12, 1, 14, 0), LocalDateTime.of(2023, 12, 1, 16, 0));","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"papataco14"},"content":"        verify(ioHandler).writeOutput(\"Added new Event: Meeting from 2023-12-01T14:00 to 2023-12-01T16:00\");","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"papataco14"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"papataco14"},"content":"    public void handleEvent_invalidDateFormat_throwsException() {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"papataco14"},"content":"        String[] parsedInput \u003d new String[]{\"EVENT\", \"Meeting /from 2023-12-01 14:00 /to 2023-12-01\"};","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"papataco14"},"content":"        Exception exception \u003d assertThrows(ChadException.class, () -\u003e chatEngine.handleEvent(parsedInput));","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"papataco14"},"content":"        assertEquals(\"Invalid date format. Please use yyyy-MM-dd HH:mm\", exception.getMessage());","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"papataco14"},"content":"}","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"papataco14":41}},{"path":"src/test/java/chad/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"papataco14"},"content":"package chad.task;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"papataco14"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"papataco14"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"papataco14"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"papataco14"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"papataco14"},"content":"public class TaskTest {","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"papataco14"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"papataco14"},"content":"    public void testFromFileFormatForToDo() {","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"papataco14"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"papataco14"},"content":"        Task task \u003d Task.fromFileFormat(\"T | 1 | Read book\", formatter);","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"papataco14"},"content":"        assertTrue(task instanceof ToDo);","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"papataco14"},"content":"        assertEquals(\"Read book\", task.getDescription());","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"papataco14"},"content":"        assertTrue(task.isDone());","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"papataco14"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"papataco14"},"content":"    public void testFromFileFormatForDeadline() {","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"papataco14"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"papataco14"},"content":"        Task task \u003d Task.fromFileFormat(\"D | 0 | Submit Assignment | 2023-12-01 23:59\", formatter);","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"papataco14"},"content":"        assertTrue(task instanceof Deadline);","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"papataco14"},"content":"        assertEquals(\"Submit Assignment\", task.getDescription());","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"papataco14"},"content":"        assertFalse(task.isDone());","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"papataco14"},"content":"        assertEquals(LocalDateTime.of(2023, 12, 1, 23, 59), ((Deadline) task).getDueDate());","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"papataco14"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"papataco14"},"content":"    public void testFromFileFormatForEvent() {","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"papataco14"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"papataco14"},"content":"        Task task \u003d Task.fromFileFormat(\"E | 1 | Team Meeting | 2023-12-01 14:00 | 2023-12-01 16:00\", formatter);","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"papataco14"},"content":"        assertTrue(task instanceof Event);","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"papataco14"},"content":"        assertEquals(\"Team Meeting\", task.getDescription());","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"papataco14"},"content":"        assertTrue(task.isDone());","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"papataco14"},"content":"        assertEquals(LocalDateTime.of(2023, 12, 1, 14, 0), ((Event) task).getStart());","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"papataco14"},"content":"        assertEquals(LocalDateTime.of(2023, 12, 1, 16, 0), ((Event) task).getEnd());","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"papataco14"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"papataco14"},"content":"}","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"papataco14"},"content":"","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"papataco14":43}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"papataco14"},"content":"toDo one","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"papataco14"},"content":"deadline two /by Friday","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"papataco14"},"content":"Event three /from saturday /to sun","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"papataco14"},"content":"list","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"papataco14"},"content":"bye","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"papataco14":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"papataco14"},"content":"java -classpath ..\\bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"papataco14":1,"-":20}}]
