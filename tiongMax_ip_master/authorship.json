[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"tiongMax"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":41,"tiongMax":1}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tiongMax"},"content":"D/ /asdf/2001-01-31T10:00","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tiongMax"},"content":"D/X/asdf/2019-12-02T19:00","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tiongMax"},"content":"D/ /asdf/2019-12-02T19:00","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"tiongMax"},"content":"E/ /re5/2019-12-02T19:00/2019-12-01T19:00","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"tiongMax"},"content":"D/ /asdf/2029-05-03T20:29","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"tiongMax"},"content":"T/ /asdf","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"tiongMax"},"content":"T/ /ssfd","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"tiongMax"},"content":"D/ /asdf/2019-12-02T19:00","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"tiongMax"},"content":"E/ /sad/2019-12-02T19:00/2019-12-02T20:00","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"tiongMax"},"content":"T/ /asfd","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"tiongMax"},"content":"D/ /aasdf/2019-12-02T19:00","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"tiongMax"},"content":"E/ /asfd/2222-02-02T22:22/2222-02-02T22:23","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"tiongMax":12}},{"path":"src/Test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tiongMax"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tiongMax"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"tiongMax"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"tiongMax"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"tiongMax"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"tiongMax"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"tiongMax"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"tiongMax"},"content":"    public void check_deadline_contentLine() {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"tiongMax"},"content":"        Deadline d \u003d new Deadline(\"Checking\", false, LocalDateTime.of(2023, 8, 31, 2, 20));","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"tiongMax"},"content":"        assertEquals(\"D/ /Checking/2023-08-31T02:20\", d.contentLine());","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"tiongMax"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"tiongMax"},"content":"    public void check_todo_toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"tiongMax"},"content":"        Deadline d \u003d new Deadline(\"Checking\", false, LocalDateTime.of(2023, 8, 31, 2, 20));","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"tiongMax"},"content":"        assertEquals(\"[D][ ] Checking (by: 31/Aug/2023 02:20)\", d.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"tiongMax"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"tiongMax":23}},{"path":"src/Test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tiongMax"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tiongMax"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"tiongMax"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"tiongMax"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"tiongMax"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"tiongMax"},"content":"public class EventTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"tiongMax"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"tiongMax"},"content":"    public void check_event_contentLine() {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"tiongMax"},"content":"        Event e \u003d new Event(\"Checking\", false, LocalDateTime.of(2019, 12, 2, 19, 00),","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"tiongMax"},"content":"                LocalDateTime.of(2023, 8, 31, 2, 20));","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"tiongMax"},"content":"        assertEquals(\"E/ /Checking/2019-12-02T19:00/2023-08-31T02:20\", e.contentLine());","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"tiongMax"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"tiongMax"},"content":"    public void check_event_toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"tiongMax"},"content":"        Event e \u003d new Event(\"Checking\", true, LocalDateTime.of(2019, 12, 2, 19, 00),","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"tiongMax"},"content":"                LocalDateTime.of(2023, 8, 31, 2, 20));","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"tiongMax"},"content":"        assertEquals(\"[E][X] Checking (from: 02/Dec/2019 19:00 to: 31/Aug/2023 02:20)\", e.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"tiongMax"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"tiongMax":25}},{"path":"src/Test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tiongMax"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tiongMax"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"tiongMax"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"tiongMax"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"tiongMax"},"content":"public class TodoTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"tiongMax"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"tiongMax"},"content":"    public void check_todo_contentLine() {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"tiongMax"},"content":"        Todo t \u003d new Todo(\"Checking\", false);","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"tiongMax"},"content":"        assertEquals(\"T/ /Checking\", t.contentLine());","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"tiongMax"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"tiongMax"},"content":"    public void check_todo_toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"tiongMax"},"content":"        Todo t \u003d new Todo(\"Checking\", false);","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"tiongMax"},"content":"        assertEquals(\"[T][ ] Checking\", t.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"tiongMax"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"tiongMax":23}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tiongMax"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tiongMax"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"tiongMax"},"content":"import duke.exception.InvalidIndexException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"tiongMax"},"content":"import duke.exception.NoSuchCommandException;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"tiongMax"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"tiongMax"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"tiongMax"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"tiongMax"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"tiongMax"},"content":"    /*","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"tiongMax"},"content":"        The task list of Duke.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"tiongMax"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"tiongMax"},"content":"    /*","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"tiongMax"},"content":"        The interface for interaction with user.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"tiongMax"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"tiongMax"},"content":"    /*","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"tiongMax"},"content":"        The file that is responsible for reading, writing and saving of the tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"tiongMax"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"tiongMax"},"content":"    /*","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"tiongMax"},"content":"        A parser that is used to parse the input of the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"tiongMax"},"content":"    private Parser parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"tiongMax"},"content":"     * Constructs a Duke object with the given file path.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"tiongMax"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"tiongMax"},"content":"     * @param filePath The path of the file that contains the information of the tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"tiongMax"},"content":"    public Duke(Path filePath) {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"tiongMax"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"tiongMax"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"tiongMax"},"content":"        tasks \u003d new TaskList(storage.processFile());","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"tiongMax"},"content":"     * Runs the Duke application to interact with the user until the exit command is entered.","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"tiongMax"},"content":"    public void run() {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"tiongMax"},"content":"        ui.welcomeMessage();","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"tiongMax"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"tiongMax"},"content":"        while (!isExit) {","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"tiongMax"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"tiongMax"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"tiongMax"},"content":"                System.out.println(Ui.showLine()); // show the divider line (\"_______\")","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"tiongMax"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"tiongMax"},"content":"                c.execute(tasks, storage);","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"tiongMax"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"tiongMax"},"content":"            } catch (NoSuchCommandException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"tiongMax"},"content":"                System.out.println(e);","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"tiongMax"},"content":"            } catch (InvalidIndexException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"tiongMax"},"content":"                System.out.println(e);","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"tiongMax"},"content":"            } catch (NumberFormatException | StringIndexOutOfBoundsException | DateTimeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"tiongMax"},"content":"                System.out.println(Ui.showLine());","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"tiongMax"},"content":"                System.out.println(\"\\tPlease enter a proper date.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"tiongMax"},"content":"                System.out.println(\"\\t\" + e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"tiongMax"},"content":"                System.out.println();","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"tiongMax"},"content":"                System.out.println(Ui.showLine());","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"tiongMax"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"tiongMax"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"tiongMax"},"content":"        ui.farewell();","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"tiongMax"},"content":"     * The entry point for the application.","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"tiongMax"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"tiongMax"},"content":"     * @param args The command-line arguments.","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"tiongMax"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"tiongMax"},"content":"        new Duke(Paths.get(\"data\", \"duke.txt\")).run();","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":2,"tiongMax":79}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tiongMax"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tiongMax"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"tiongMax"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"tiongMax"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"tiongMax"},"content":"public class Parser {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"tiongMax"},"content":"     * Parses a date and time in string and converts it to a LocalDateTime object.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"tiongMax"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"tiongMax"},"content":"     * @param dateAndTime The date and time in string to be parsed.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"tiongMax"},"content":"     * @return A LocalDateTime object for the date and time in string format.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"tiongMax"},"content":"     * @throws DateTimeException If invalid date or time is passed in.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"tiongMax"},"content":"    public LocalDateTime checkDateAndTime(String dateAndTime) {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"tiongMax"},"content":"        String[] dateSplit \u003d dateAndTime.split(\"/\");","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"tiongMax"},"content":"        if (dateSplit.length \u003c 4) {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"tiongMax"},"content":"            throw new DateTimeException(\"Please enter the time.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"tiongMax"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"tiongMax"},"content":"        int hr \u003d Integer.parseInt(dateSplit[dateSplit.length - 1].substring(0, 2));","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"tiongMax"},"content":"        int min \u003d Integer.parseInt(dateSplit[dateSplit.length - 1].substring(2));","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"tiongMax"},"content":"        return LocalDateTime.of(Integer.parseInt(dateSplit[2]), Integer.parseInt(dateSplit[1]),","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"tiongMax"},"content":"                Integer.parseInt(dateSplit[0]), hr, min);","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"tiongMax"},"content":"     * Parses a user input and returns Command instance.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"tiongMax"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"tiongMax"},"content":"     * @param fullCommand The input of the user, including command and details.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"tiongMax"},"content":"     * @return A `Command` object with the command and details.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"tiongMax"},"content":"    public static Command parse(String fullCommand) {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"tiongMax"},"content":"        //0: command 1: detail","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"tiongMax"},"content":"        String[] splitted \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"tiongMax"},"content":"        Command c;","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"tiongMax"},"content":"        if (splitted.length \u003e 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"tiongMax"},"content":"            return new Command(splitted[0], splitted[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"tiongMax"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"tiongMax"},"content":"            return new Command(splitted[0], \"\");","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"tiongMax"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"tiongMax"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"tiongMax":46}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tiongMax"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tiongMax"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"tiongMax"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"tiongMax"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"tiongMax"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"tiongMax"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"tiongMax"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"tiongMax"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"tiongMax"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"tiongMax"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"tiongMax"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"tiongMax"},"content":"import java.util.List;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"tiongMax"},"content":"public class Storage {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"tiongMax"},"content":"     * The relative path of the file that contains the information of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"tiongMax"},"content":"    private Path relativePath;","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"tiongMax"},"content":"     * Constructs a Storage object with the provided file path.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"tiongMax"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"tiongMax"},"content":"     * @param relativePath The relative file path where task data is stored.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"tiongMax"},"content":"    public Storage(Path relativePath) {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"tiongMax"},"content":"        this.relativePath \u003d relativePath;","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"tiongMax"},"content":"     * Reads and processes data of task from the text file of the relative path.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"tiongMax"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"tiongMax"},"content":"     * @return An ArrayList of `Task` objects representing the tasks read from the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"tiongMax"},"content":"    public ArrayList\u003cTask\u003e processFile() {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"tiongMax"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"tiongMax"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"tiongMax"},"content":"            if (Files.exists(relativePath)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"tiongMax"},"content":"                List\u003cString\u003e content \u003d Files.readAllLines(relativePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"tiongMax"},"content":"                if (content.size() \u003e 0) {","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"tiongMax"},"content":"                    for (String line : content) {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"tiongMax"},"content":"                        result.add(processLines(line));","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"tiongMax"},"content":"                    }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"tiongMax"},"content":"                } // else no task yet","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"tiongMax"},"content":"            } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"tiongMax"},"content":"                Files.createFile(relativePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"tiongMax"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"tiongMax"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"tiongMax"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"tiongMax"},"content":"        } catch (Exception e) { // catch for wrong format or corrupted file","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"tiongMax"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"tiongMax"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"tiongMax"},"content":"        return result;","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"tiongMax"},"content":"     * Writes data of the task from the provided task list into the text file of the relative path.","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"tiongMax"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"tiongMax"},"content":"     * @param tasks The task list to be written into the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"tiongMax"},"content":"    public void writeInto(TaskList tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"tiongMax"},"content":"        ArrayList\u003cString\u003e content \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"tiongMax"},"content":"        tasks.copyArrInto(content);","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"tiongMax"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"tiongMax"},"content":"            Files.write(relativePath, content);","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"tiongMax"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"tiongMax"},"content":"            System.out.println(\"\\t\" + e);","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"tiongMax"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"tiongMax"},"content":"     * Processes a line of text from the text file and convert it into a Task object accordingly.","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"tiongMax"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"tiongMax"},"content":"     * @param line The line of text representing a task in the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"tiongMax"},"content":"     * @return A Task object converted from the line of text.","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"tiongMax"},"content":"     * @throws Exception If the line of text is not in the correct format or is corrupted.","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"tiongMax"},"content":"    public Task processLines(String line) throws Exception {","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"tiongMax"},"content":"        Task t;","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"tiongMax"},"content":"        String[] taskArr \u003d line.split(\"/\");","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"tiongMax"},"content":"        switch (taskArr[0]) {","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"tiongMax"},"content":"        case \"T\":","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"tiongMax"},"content":"            t \u003d new Todo(taskArr[2], !taskArr[1].isBlank());","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"tiongMax"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"tiongMax"},"content":"        case \"D\":","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"tiongMax"},"content":"            t \u003d new Deadline(taskArr[2], !taskArr[1].isBlank(), processDateAndLine(taskArr[3]));","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"tiongMax"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"tiongMax"},"content":"        case \"E\":","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"tiongMax"},"content":"            t \u003d new Event(taskArr[2], !taskArr[1].isBlank(), processDateAndLine(taskArr[3]),","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"tiongMax"},"content":"                    processDateAndLine(taskArr[4]));","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"tiongMax"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"tiongMax"},"content":"        default:","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"tiongMax"},"content":"            throw new Exception(\"Some of the content is not in the correct format or it is corrupted\");","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"tiongMax"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"tiongMax"},"content":"        return t;","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"tiongMax"},"content":"     * Processes a date and time in string format and convert it into a `LocalDateTime` object.","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"tiongMax"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"tiongMax"},"content":"     * @param dateAndTime The date and time in string format to be parsed.","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"tiongMax"},"content":"     * @return A LocalDateTime object converted from parsed date and time.","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"tiongMax"},"content":"    public LocalDateTime processDateAndLine(String dateAndTime) {","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"tiongMax"},"content":"        dateAndTime \u003d dateAndTime.replace(\"T\", \"-\").replace(\":\", \"\");","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"tiongMax"},"content":"        String[] split \u003d dateAndTime.split(\"-\");","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"tiongMax"},"content":"        int hr \u003d Integer.parseInt(split[split.length - 1].substring(0, 2));","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"tiongMax"},"content":"        int min \u003d Integer.parseInt(split[split.length - 1].substring(2));","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"tiongMax"},"content":"        return LocalDateTime.of(Integer.parseInt(split[0]), Integer.parseInt(split[1]),","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"tiongMax"},"content":"                Integer.parseInt(split[2]), hr, min);","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"tiongMax"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"tiongMax":118}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tiongMax"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tiongMax"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"tiongMax"},"content":"public class Ui {","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"tiongMax"},"content":"     * Displays the information of the application and greet the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"tiongMax"},"content":"    public void welcomeMessage() {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"tiongMax"},"content":"        String logo \u003d \"\\t ____        _        \\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"tiongMax"},"content":"                + \"\\t|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"tiongMax"},"content":"                + \"\\t| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"tiongMax"},"content":"                + \"\\t| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"tiongMax"},"content":"                + \"\\t|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"tiongMax"},"content":"        System.out.println(\"\\tHello from\\n\" + logo);","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"tiongMax"},"content":"        System.out.println(showLine());","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"tiongMax"},"content":"        System.out.println(\"\\t Hello! I\u0027m YOLO \\n\\t What can I do for you? \\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"tiongMax"},"content":"        System.out.println(showLine());","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"tiongMax"},"content":"        System.out.println();","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"tiongMax"},"content":"     * Displays the farewell message when the application is terminated.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"tiongMax"},"content":"    public void farewell() {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"tiongMax"},"content":"        System.out.println(showLine());","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"tiongMax"},"content":"        System.out.println(\"\\t Bye. Hope to see you again soon! \\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"tiongMax"},"content":"        System.out.println(showLine());","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"tiongMax"},"content":"     * Returns a string of \u0027-\u0027 that acts a divider.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"tiongMax"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"tiongMax"},"content":"     * @return A string of dashes that looks like a line.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"tiongMax"},"content":"    public static String showLine() {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"tiongMax"},"content":"        return \"\\t---------------------------------------------------------------------------\";","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"tiongMax"},"content":"     * Reads and returns input of the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"tiongMax"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"tiongMax"},"content":"     * @return A string that contains the input of the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"tiongMax"},"content":"    public String readCommand() {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"tiongMax"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"tiongMax"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"tiongMax"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"tiongMax":54}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tiongMax"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tiongMax"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"tiongMax"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"tiongMax"},"content":"import duke.Parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"tiongMax"},"content":"import duke.exception.EmptyDescriptionException;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"tiongMax"},"content":"import duke.exception.InvalidIndexException;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"tiongMax"},"content":"import duke.exception.NoSuchCommandException;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"tiongMax"},"content":"import duke.exception.UnmatchedArgumentException;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"tiongMax"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"tiongMax"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"tiongMax"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"tiongMax"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"tiongMax"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"tiongMax"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"tiongMax"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"tiongMax"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"tiongMax"},"content":"public class Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"tiongMax"},"content":"    /*","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"tiongMax"},"content":"        The keyword for which command method to call.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"tiongMax"},"content":"    private String command;","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"tiongMax"},"content":"    /*","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"tiongMax"},"content":"        The details of the command.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"tiongMax"},"content":"    private String details;","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"tiongMax"},"content":"    /*","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"tiongMax"},"content":"        True if there is a detail for the command, False otherwise.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"tiongMax"},"content":"    private boolean isValidDetail;","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"tiongMax"},"content":"     * Creates a new Command object with the command and details passed in.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"tiongMax"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"tiongMax"},"content":"     * @param command The command from user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"tiongMax"},"content":"     * @param details The details of user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"tiongMax"},"content":"    public Command(String command, String details) {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"tiongMax"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"tiongMax"},"content":"        if (details.equals(\"\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"tiongMax"},"content":"            this.isValidDetail \u003d false;","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"tiongMax"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"tiongMax"},"content":"            this.isValidDetail \u003d true;","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"tiongMax"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"tiongMax"},"content":"        this.details \u003d details;","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"tiongMax"},"content":"     * Executes the function based on the command and details provided.","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"tiongMax"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"tiongMax"},"content":"     * @param tasks The task list for addition of task.","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"tiongMax"},"content":"     * @param storage The storage object for reading or writing tasks into a specific file.","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"tiongMax"},"content":"     * @throws NoSuchCommandException When an invalid command is inputted.","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"tiongMax"},"content":"     * @throws InvalidIndexException If an invalid task index is inputted.","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"tiongMax"},"content":"     * @throws EmptyDescriptionException If a task description is not inputted.","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"tiongMax"},"content":"     * @throws UnmatchedArgumentException If unmatched arguments are inputted.","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"tiongMax"},"content":"    public void execute(TaskList tasks, Storage storage) throws NoSuchCommandException, InvalidIndexException {","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"tiongMax"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"tiongMax"},"content":"            if (command.equals(\"list\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"tiongMax"},"content":"                tasks.listAllTask();","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"tiongMax"},"content":"            } else if (command.equals(\"mark\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"tiongMax"},"content":"                if (!isValidDetail) {","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"tiongMax"},"content":"                    throw new InvalidIndexException();","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"tiongMax"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"tiongMax"},"content":"                int index \u003d Integer.parseInt(details);","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"tiongMax"},"content":"                if (index \u003e 0 \u0026\u0026 index \u003c\u003d tasks.size()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"tiongMax"},"content":"                    mark(index, tasks, storage);","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"tiongMax"},"content":"                } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"tiongMax"},"content":"                    throw new InvalidIndexException();","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"tiongMax"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"tiongMax"},"content":"            } else if (command.equals(\"delete\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"tiongMax"},"content":"                if (!isValidDetail) {","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"tiongMax"},"content":"                    throw new InvalidIndexException();","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"tiongMax"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"tiongMax"},"content":"                int index \u003d Integer.parseInt(details);","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"tiongMax"},"content":"                if (index \u003e 0 \u0026\u0026 index \u003c\u003d tasks.size()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"tiongMax"},"content":"                    delete(index, tasks, storage);","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"tiongMax"},"content":"                } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"tiongMax"},"content":"                    throw new InvalidIndexException();","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"tiongMax"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"tiongMax"},"content":"            } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"tiongMax"},"content":"                if (!isValidDetail) {","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"tiongMax"},"content":"                    throw new InvalidIndexException();","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"tiongMax"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"tiongMax"},"content":"                int index \u003d Integer.parseInt(details);","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"tiongMax"},"content":"                if (index \u003e 0 \u0026\u0026 index \u003c\u003d tasks.size()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"tiongMax"},"content":"                    unmark(index, tasks, storage);","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"tiongMax"},"content":"                } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"tiongMax"},"content":"                    throw new InvalidIndexException();","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"tiongMax"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"tiongMax"},"content":"            } else if (command.equals(\"todo\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"tiongMax"},"content":"                addTodo(details, tasks, storage);","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"tiongMax"},"content":"            } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"tiongMax"},"content":"                addDeadline(details, tasks, storage);","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"tiongMax"},"content":"            } else if (command.equals(\"event\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"tiongMax"},"content":"                addEvent(details, tasks, storage);","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"tiongMax"},"content":"            } else if (command.equals(\"due\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"tiongMax"},"content":"                checkTaskDue(details, tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"tiongMax"},"content":"            } else if (command.equals(\"find\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"tiongMax"},"content":"                find(details, tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"tiongMax"},"content":"            } else if (command.equals(\"bye\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"tiongMax"},"content":"                isExit();","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"tiongMax"},"content":"            } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"tiongMax"},"content":"                throw new NoSuchCommandException();","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"tiongMax"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"tiongMax"},"content":"        } catch (NoSuchCommandException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"tiongMax"},"content":"            System.out.println(e);","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"tiongMax"},"content":"        } catch (UnmatchedArgumentException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"tiongMax"},"content":"            System.out.println(e);","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"tiongMax"},"content":"        } catch (InvalidIndexException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"tiongMax"},"content":"            System.out.println(e);","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"tiongMax"},"content":"        } catch (EmptyDescriptionException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"tiongMax"},"content":"            System.out.println(e);","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"tiongMax"},"content":"        } catch (NumberFormatException | StringIndexOutOfBoundsException | DateTimeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"tiongMax"},"content":"            System.out.println(Ui.showLine());","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"tiongMax"},"content":"            System.out.println(\"\\tPlease enter a proper date.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"tiongMax"},"content":"            System.out.println(\"\\t\" + e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"tiongMax"},"content":"            System.out.println();","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"tiongMax"},"content":"            System.out.println(Ui.showLine());","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"tiongMax"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"tiongMax"},"content":"     * Marks a task as done and updates it into the storage (file).","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"tiongMax"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"tiongMax"},"content":"     * @param i The index of the task to be marked as done in the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"tiongMax"},"content":"     * @param tasks The task list containing the tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"tiongMax"},"content":"     * @param storage The storage object that contains the file for updating.","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"tiongMax"},"content":"    public static void mark(int i, TaskList tasks, Storage storage) {","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"tiongMax"},"content":"        tasks.get(i - 1).mark();","lastModifiedDate":"2023-09-01"},{"lineNumber":142,"author":{"gitId":"tiongMax"},"content":"        System.out.println(Ui.showLine());","lastModifiedDate":"2023-09-01"},{"lineNumber":143,"author":{"gitId":"tiongMax"},"content":"        System.out.println(\" \\tNice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"tiongMax"},"content":"        System.out.println(\"\\t  \" + tasks.get(i - 1).toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":145,"author":{"gitId":"tiongMax"},"content":"        System.out.println();","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"tiongMax"},"content":"        System.out.println(Ui.showLine());","lastModifiedDate":"2023-09-01"},{"lineNumber":147,"author":{"gitId":"tiongMax"},"content":"        storage.writeInto(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":148,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":149,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":150,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":151,"author":{"gitId":"tiongMax"},"content":"     * Unmarks a task and updates it into the storage (file).","lastModifiedDate":"2023-09-01"},{"lineNumber":152,"author":{"gitId":"tiongMax"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":153,"author":{"gitId":"tiongMax"},"content":"     * @param i The index of the task to be unmarked in the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":154,"author":{"gitId":"tiongMax"},"content":"     * @param tasks The task list containing the tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":155,"author":{"gitId":"tiongMax"},"content":"     * @param storage The storage object that contains the file for updating.","lastModifiedDate":"2023-09-01"},{"lineNumber":156,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"tiongMax"},"content":"    public static void unmark(int i, TaskList tasks, Storage storage) {","lastModifiedDate":"2023-09-01"},{"lineNumber":158,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":159,"author":{"gitId":"tiongMax"},"content":"        tasks.get(i - 1).unmark();","lastModifiedDate":"2023-09-01"},{"lineNumber":160,"author":{"gitId":"tiongMax"},"content":"        System.out.println(Ui.showLine());","lastModifiedDate":"2023-09-01"},{"lineNumber":161,"author":{"gitId":"tiongMax"},"content":"        System.out.println(\" \\tOk! I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":162,"author":{"gitId":"tiongMax"},"content":"        System.out.println(\"\\t  \" + tasks.get(i - 1).toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":163,"author":{"gitId":"tiongMax"},"content":"        System.out.println();","lastModifiedDate":"2023-09-01"},{"lineNumber":164,"author":{"gitId":"tiongMax"},"content":"        System.out.println(Ui.showLine());","lastModifiedDate":"2023-09-01"},{"lineNumber":165,"author":{"gitId":"tiongMax"},"content":"        storage.writeInto(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":166,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":167,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":168,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":169,"author":{"gitId":"tiongMax"},"content":"     * Adds a new task of type Todo into the task list and updates the storage (file).","lastModifiedDate":"2023-09-01"},{"lineNumber":170,"author":{"gitId":"tiongMax"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":171,"author":{"gitId":"tiongMax"},"content":"     * @param message The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":172,"author":{"gitId":"tiongMax"},"content":"     * @param tasks The task list for the addition of task.","lastModifiedDate":"2023-09-01"},{"lineNumber":173,"author":{"gitId":"tiongMax"},"content":"     * @param storage The storage object that contains the file for updating.","lastModifiedDate":"2023-09-01"},{"lineNumber":174,"author":{"gitId":"tiongMax"},"content":"     * @throws UnmatchedArgumentException If the description of the task is empty.","lastModifiedDate":"2023-09-01"},{"lineNumber":175,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":176,"author":{"gitId":"tiongMax"},"content":"    public static void addTodo(String message, TaskList tasks, Storage storage) throws UnmatchedArgumentException {","lastModifiedDate":"2023-09-01"},{"lineNumber":177,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":178,"author":{"gitId":"tiongMax"},"content":"        if (message.isBlank()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":179,"author":{"gitId":"tiongMax"},"content":"            throw new UnmatchedArgumentException(0, 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":180,"author":{"gitId":"tiongMax"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":181,"author":{"gitId":"tiongMax"},"content":"        System.out.println(Ui.showLine());","lastModifiedDate":"2023-09-01"},{"lineNumber":182,"author":{"gitId":"tiongMax"},"content":"        System.out.println(\"\\tGot it. I\u0027ve added this task: \");","lastModifiedDate":"2023-09-01"},{"lineNumber":183,"author":{"gitId":"tiongMax"},"content":"        Task todo \u003d new Todo(message, false);","lastModifiedDate":"2023-09-01"},{"lineNumber":184,"author":{"gitId":"tiongMax"},"content":"        tasks.add(todo);","lastModifiedDate":"2023-09-01"},{"lineNumber":185,"author":{"gitId":"tiongMax"},"content":"        System.out.println(\"\\t  \" + todo);","lastModifiedDate":"2023-09-01"},{"lineNumber":186,"author":{"gitId":"tiongMax"},"content":"        System.out.println(\"\\tNow you have \" + tasks.size() + (tasks.size() \u003e 1 ? \" tasks\" : \" task\") + \" in the list.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":187,"author":{"gitId":"tiongMax"},"content":"        System.out.println();","lastModifiedDate":"2023-09-01"},{"lineNumber":188,"author":{"gitId":"tiongMax"},"content":"        System.out.println(Ui.showLine());","lastModifiedDate":"2023-09-01"},{"lineNumber":189,"author":{"gitId":"tiongMax"},"content":"        storage.writeInto(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":190,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":191,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":192,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":193,"author":{"gitId":"tiongMax"},"content":"     * Adds a new task of type Deadline to the task list and updates the storage (file).","lastModifiedDate":"2023-09-01"},{"lineNumber":194,"author":{"gitId":"tiongMax"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":195,"author":{"gitId":"tiongMax"},"content":"     * @param message The description and deadline of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":196,"author":{"gitId":"tiongMax"},"content":"     * @param tasks The task list for the addition of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":197,"author":{"gitId":"tiongMax"},"content":"     * @param storage The storage object that contains the file for updating.","lastModifiedDate":"2023-09-01"},{"lineNumber":198,"author":{"gitId":"tiongMax"},"content":"     * @throws UnmatchedArgumentException If the arguments passed in are insufficient.","lastModifiedDate":"2023-09-01"},{"lineNumber":199,"author":{"gitId":"tiongMax"},"content":"     * @throws EmptyDescriptionException If the description of the task is empty.","lastModifiedDate":"2023-09-01"},{"lineNumber":200,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":201,"author":{"gitId":"tiongMax"},"content":"    public static void addDeadline(String message, TaskList tasks, Storage storage) throws UnmatchedArgumentException,","lastModifiedDate":"2023-09-01"},{"lineNumber":202,"author":{"gitId":"tiongMax"},"content":"            EmptyDescriptionException {","lastModifiedDate":"2023-09-01"},{"lineNumber":203,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":204,"author":{"gitId":"tiongMax"},"content":"        String[] arr \u003d message.split(\" /\");","lastModifiedDate":"2023-09-01"},{"lineNumber":205,"author":{"gitId":"tiongMax"},"content":"        Parser p \u003d new Parser();","lastModifiedDate":"2023-09-01"},{"lineNumber":206,"author":{"gitId":"tiongMax"},"content":"        if (arr.length \u003c 2) {","lastModifiedDate":"2023-09-01"},{"lineNumber":207,"author":{"gitId":"tiongMax"},"content":"            throw new UnmatchedArgumentException(arr.length, 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":208,"author":{"gitId":"tiongMax"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":209,"author":{"gitId":"tiongMax"},"content":"        if (arr[0].isBlank()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":210,"author":{"gitId":"tiongMax"},"content":"            throw new EmptyDescriptionException(\"todo\");","lastModifiedDate":"2023-09-01"},{"lineNumber":211,"author":{"gitId":"tiongMax"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":212,"author":{"gitId":"tiongMax"},"content":"        String dateAndTime \u003d arr[1].substring(3).replace(\" \", \"/\");","lastModifiedDate":"2023-09-01"},{"lineNumber":213,"author":{"gitId":"tiongMax"},"content":"        Deadline dl \u003d new Deadline(arr[0], false, p.checkDateAndTime(dateAndTime));","lastModifiedDate":"2023-09-01"},{"lineNumber":214,"author":{"gitId":"tiongMax"},"content":"        tasks.add(dl);","lastModifiedDate":"2023-09-01"},{"lineNumber":215,"author":{"gitId":"tiongMax"},"content":"        System.out.println(Ui.showLine());","lastModifiedDate":"2023-09-01"},{"lineNumber":216,"author":{"gitId":"tiongMax"},"content":"        System.out.println(\"\\tGot it. I\u0027ve added this task: \");","lastModifiedDate":"2023-09-01"},{"lineNumber":217,"author":{"gitId":"tiongMax"},"content":"        System.out.println(\"\\t  \" + dl);","lastModifiedDate":"2023-09-01"},{"lineNumber":218,"author":{"gitId":"tiongMax"},"content":"        System.out.println(\"\\tNow you have \" + tasks.size() + (tasks.size() \u003e 1 ? \" tasks\" : \" task\") + \" in the list.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":219,"author":{"gitId":"tiongMax"},"content":"        System.out.println();","lastModifiedDate":"2023-09-01"},{"lineNumber":220,"author":{"gitId":"tiongMax"},"content":"        System.out.println(Ui.showLine());","lastModifiedDate":"2023-09-01"},{"lineNumber":221,"author":{"gitId":"tiongMax"},"content":"        storage.writeInto(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":222,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":223,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":224,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":225,"author":{"gitId":"tiongMax"},"content":"     * Adds a task of type Event to the task list and updates the storage (file).","lastModifiedDate":"2023-09-01"},{"lineNumber":226,"author":{"gitId":"tiongMax"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":227,"author":{"gitId":"tiongMax"},"content":"     * @param message The description and the event duration of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":228,"author":{"gitId":"tiongMax"},"content":"     * @param tasks The task list for the addition of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":229,"author":{"gitId":"tiongMax"},"content":"     * @param storage The storage object for that contains the file for updating.","lastModifiedDate":"2023-09-01"},{"lineNumber":230,"author":{"gitId":"tiongMax"},"content":"     * @throws UnmatchedArgumentException If the arguments passed in are insufficient.","lastModifiedDate":"2023-09-01"},{"lineNumber":231,"author":{"gitId":"tiongMax"},"content":"     * @throws EmptyDescriptionException If the description of the task is empty.","lastModifiedDate":"2023-09-01"},{"lineNumber":232,"author":{"gitId":"tiongMax"},"content":"     * @throws DateTimeException If the start or end time of the event is invalid.","lastModifiedDate":"2023-09-01"},{"lineNumber":233,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":234,"author":{"gitId":"tiongMax"},"content":"    public static void addEvent(String message, TaskList tasks, Storage storage) throws UnmatchedArgumentException, EmptyDescriptionException {","lastModifiedDate":"2023-09-01"},{"lineNumber":235,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":236,"author":{"gitId":"tiongMax"},"content":"        String[] arr \u003d message.split(\" /\");","lastModifiedDate":"2023-09-01"},{"lineNumber":237,"author":{"gitId":"tiongMax"},"content":"        Parser p \u003d new Parser();","lastModifiedDate":"2023-09-01"},{"lineNumber":238,"author":{"gitId":"tiongMax"},"content":"        if (arr.length \u003c 3) {","lastModifiedDate":"2023-09-01"},{"lineNumber":239,"author":{"gitId":"tiongMax"},"content":"            throw new UnmatchedArgumentException(arr.length, 3);","lastModifiedDate":"2023-09-01"},{"lineNumber":240,"author":{"gitId":"tiongMax"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":241,"author":{"gitId":"tiongMax"},"content":"        if (arr[0].isBlank()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":242,"author":{"gitId":"tiongMax"},"content":"            throw new EmptyDescriptionException(\"todo\");","lastModifiedDate":"2023-09-01"},{"lineNumber":243,"author":{"gitId":"tiongMax"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":244,"author":{"gitId":"tiongMax"},"content":"        LocalDateTime start \u003d p.checkDateAndTime(arr[1].substring(5).replace(\" \", \"/\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":245,"author":{"gitId":"tiongMax"},"content":"        LocalDateTime end \u003d p.checkDateAndTime(arr[2].substring(3).replace(\" \", \"/\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":246,"author":{"gitId":"tiongMax"},"content":"        if (end.isBefore(start) || end.isEqual(start)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":247,"author":{"gitId":"tiongMax"},"content":"            throw new DateTimeException(\"The end is date should not be earlier or the same as the start date.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":248,"author":{"gitId":"tiongMax"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":249,"author":{"gitId":"tiongMax"},"content":"        Event e \u003d new Event(arr[0], false, start, end);","lastModifiedDate":"2023-09-01"},{"lineNumber":250,"author":{"gitId":"tiongMax"},"content":"        tasks.add(e);","lastModifiedDate":"2023-09-01"},{"lineNumber":251,"author":{"gitId":"tiongMax"},"content":"        System.out.println(Ui.showLine());","lastModifiedDate":"2023-09-01"},{"lineNumber":252,"author":{"gitId":"tiongMax"},"content":"        System.out.println(\"\\tGot it. I\u0027ve added this task: \");","lastModifiedDate":"2023-09-01"},{"lineNumber":253,"author":{"gitId":"tiongMax"},"content":"        System.out.println(\"\\t  \" + e);","lastModifiedDate":"2023-09-01"},{"lineNumber":254,"author":{"gitId":"tiongMax"},"content":"        System.out.println(\"\\tNow you have \" + tasks.size() + (tasks.size() \u003e 1 ? \" tasks\" : \" task\") + \" in the list.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":255,"author":{"gitId":"tiongMax"},"content":"        System.out.println();","lastModifiedDate":"2023-09-01"},{"lineNumber":256,"author":{"gitId":"tiongMax"},"content":"        System.out.println(Ui.showLine());","lastModifiedDate":"2023-09-01"},{"lineNumber":257,"author":{"gitId":"tiongMax"},"content":"        storage.writeInto(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":258,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":259,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":260,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":261,"author":{"gitId":"tiongMax"},"content":"     * Deletes a task from the task list based on the index provided and updates the storage (file).","lastModifiedDate":"2023-09-01"},{"lineNumber":262,"author":{"gitId":"tiongMax"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":263,"author":{"gitId":"tiongMax"},"content":"     * @param index The task with the index to be deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":264,"author":{"gitId":"tiongMax"},"content":"     * @param tasks The task list for the deletion of task.","lastModifiedDate":"2023-09-01"},{"lineNumber":265,"author":{"gitId":"tiongMax"},"content":"     * @param storage The storage object that contains the file for updating.","lastModifiedDate":"2023-09-01"},{"lineNumber":266,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":267,"author":{"gitId":"tiongMax"},"content":"    public static void delete(int index, TaskList tasks, Storage storage) {","lastModifiedDate":"2023-09-01"},{"lineNumber":268,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":269,"author":{"gitId":"tiongMax"},"content":"        System.out.println(Ui.showLine());","lastModifiedDate":"2023-09-01"},{"lineNumber":270,"author":{"gitId":"tiongMax"},"content":"        System.out.println(\"\\tNoted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":271,"author":{"gitId":"tiongMax"},"content":"        System.out.println(\"\\t  \" + tasks.get(index - 1));","lastModifiedDate":"2023-09-01"},{"lineNumber":272,"author":{"gitId":"tiongMax"},"content":"        tasks.remove(index - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":273,"author":{"gitId":"tiongMax"},"content":"        System.out.println(\"\\tNow that you have \" + tasks.size() + (tasks.size() \u003c 2 ? \" task\" : \" tasks\") + \" in the list.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":274,"author":{"gitId":"tiongMax"},"content":"        System.out.println();","lastModifiedDate":"2023-09-01"},{"lineNumber":275,"author":{"gitId":"tiongMax"},"content":"        System.out.println(Ui.showLine());","lastModifiedDate":"2023-09-01"},{"lineNumber":276,"author":{"gitId":"tiongMax"},"content":"        storage.writeInto(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":277,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":278,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":279,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":280,"author":{"gitId":"tiongMax"},"content":"     * Checks for the task that has the contains the same date as provided in the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":281,"author":{"gitId":"tiongMax"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":282,"author":{"gitId":"tiongMax"},"content":"     * @param dueDate The task with the date in the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":283,"author":{"gitId":"tiongMax"},"content":"     * @param tasks The task list to search for based on the provided date.","lastModifiedDate":"2023-09-01"},{"lineNumber":284,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":285,"author":{"gitId":"tiongMax"},"content":"    public static void checkTaskDue(String dueDate, TaskList tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":286,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":287,"author":{"gitId":"tiongMax"},"content":"        ArrayList\u003cTask\u003e dueDateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":288,"author":{"gitId":"tiongMax"},"content":"        Parser p \u003d new Parser();","lastModifiedDate":"2023-09-01"},{"lineNumber":289,"author":{"gitId":"tiongMax"},"content":"        LocalDateTime date \u003d p.checkDateAndTime(dueDate.replace(\" \", \"/\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":290,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":291,"author":{"gitId":"tiongMax"},"content":"        for (Task t : tasks.getTasks()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":292,"author":{"gitId":"tiongMax"},"content":"            if (t instanceof Deadline \u0026\u0026","lastModifiedDate":"2023-09-01"},{"lineNumber":293,"author":{"gitId":"tiongMax"},"content":"                    ((Deadline) t).getDueDate().isEqual(date)){","lastModifiedDate":"2023-09-01"},{"lineNumber":294,"author":{"gitId":"tiongMax"},"content":"                dueDateList.add(t);","lastModifiedDate":"2023-09-01"},{"lineNumber":295,"author":{"gitId":"tiongMax"},"content":"            } else if (t instanceof Event \u0026\u0026","lastModifiedDate":"2023-09-01"},{"lineNumber":296,"author":{"gitId":"tiongMax"},"content":"                    (((Event) t).getStart().isEqual(date) ||","lastModifiedDate":"2023-09-01"},{"lineNumber":297,"author":{"gitId":"tiongMax"},"content":"                            ((Event) t).getEnd().isEqual(date))) {","lastModifiedDate":"2023-09-01"},{"lineNumber":298,"author":{"gitId":"tiongMax"},"content":"                dueDateList.add(t);","lastModifiedDate":"2023-09-01"},{"lineNumber":299,"author":{"gitId":"tiongMax"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":300,"author":{"gitId":"tiongMax"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":301,"author":{"gitId":"tiongMax"},"content":"        boolean isGreaterThan1 \u003d dueDateList.size() \u003e 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":302,"author":{"gitId":"tiongMax"},"content":"        System.out.println(\"\\tHere \" + (isGreaterThan1 ? \"are\" : \"is\") +\" the \" +","lastModifiedDate":"2023-09-01"},{"lineNumber":303,"author":{"gitId":"tiongMax"},"content":"                (isGreaterThan1 ? \"tasks that contain\" : \"task that contains\") + \" the date:\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":304,"author":{"gitId":"tiongMax"},"content":"        for (Task t : dueDateList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":305,"author":{"gitId":"tiongMax"},"content":"            System.out.println(\"\\t\\t\" + t);","lastModifiedDate":"2023-09-01"},{"lineNumber":306,"author":{"gitId":"tiongMax"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":307,"author":{"gitId":"tiongMax"},"content":"        System.out.println(Ui.showLine());","lastModifiedDate":"2023-09-01"},{"lineNumber":308,"author":{"gitId":"tiongMax"},"content":"        System.out.println();","lastModifiedDate":"2023-09-01"},{"lineNumber":309,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":310,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":311,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":312,"author":{"gitId":"tiongMax"},"content":"     * Checks if the program should terminate from the command.","lastModifiedDate":"2023-09-01"},{"lineNumber":313,"author":{"gitId":"tiongMax"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":314,"author":{"gitId":"tiongMax"},"content":"     * @return true if the command is \"bye\", false otherwise.","lastModifiedDate":"2023-09-01"},{"lineNumber":315,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":316,"author":{"gitId":"tiongMax"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-01"},{"lineNumber":317,"author":{"gitId":"tiongMax"},"content":"        return (command.equals(\"bye\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":318,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":319,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":320,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":321,"author":{"gitId":"tiongMax"},"content":"     * Checks for the task that has the contains the provided message in the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":322,"author":{"gitId":"tiongMax"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":323,"author":{"gitId":"tiongMax"},"content":"     * @param toFind The task with the message in the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":324,"author":{"gitId":"tiongMax"},"content":"     * @param tasks The task list to search for based on the provided message.","lastModifiedDate":"2023-09-01"},{"lineNumber":325,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":326,"author":{"gitId":"tiongMax"},"content":"    public void find(String toFind, TaskList tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":327,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":328,"author":{"gitId":"tiongMax"},"content":"        ArrayList\u003cTask\u003e contain \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":329,"author":{"gitId":"tiongMax"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":330,"author":{"gitId":"tiongMax"},"content":"            if (tasks.get(i).getDescription().contains(toFind)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":331,"author":{"gitId":"tiongMax"},"content":"                contain.add(tasks.get(i));","lastModifiedDate":"2023-09-01"},{"lineNumber":332,"author":{"gitId":"tiongMax"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":333,"author":{"gitId":"tiongMax"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":334,"author":{"gitId":"tiongMax"},"content":"        boolean isGreaterThan1 \u003d contain.size() \u003e 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":335,"author":{"gitId":"tiongMax"},"content":"        System.out.println(\"\\tHere \" + (isGreaterThan1 ? \"are\" : \"is\") + \" are the matching \" +","lastModifiedDate":"2023-09-01"},{"lineNumber":336,"author":{"gitId":"tiongMax"},"content":"                (isGreaterThan1 ? \"tasks\" : \"task\") + \" in your list:\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":337,"author":{"gitId":"tiongMax"},"content":"        for (int i \u003d 0; i \u003c contain.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":338,"author":{"gitId":"tiongMax"},"content":"            System.out.println(\"\\t\\t\" + (i + 1) + \". \" + contain.get(i));","lastModifiedDate":"2023-09-01"},{"lineNumber":339,"author":{"gitId":"tiongMax"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":340,"author":{"gitId":"tiongMax"},"content":"        System.out.println(Ui.showLine());","lastModifiedDate":"2023-09-01"},{"lineNumber":341,"author":{"gitId":"tiongMax"},"content":"        System.out.println();","lastModifiedDate":"2023-09-01"},{"lineNumber":342,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":343,"author":{"gitId":"tiongMax"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"tiongMax":343}},{"path":"src/main/java/duke/exception/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tiongMax"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tiongMax"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"tiongMax"},"content":"public class EmptyDescriptionException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"tiongMax"},"content":"     * Constructs an EmptyDescriptionException object by error message provided.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"tiongMax"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"tiongMax"},"content":"     * @param message The error message.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"tiongMax"},"content":"    public EmptyDescriptionException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"tiongMax"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"tiongMax"},"content":"     * Overrides the `toString\u0027 method of the parent class to provide a formatted error message.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"tiongMax"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"tiongMax"},"content":"     * @return A formatted error message indicating that the details of the command inputted is empty.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"tiongMax"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"tiongMax"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"tiongMax"},"content":"        String result \u003d \"\\n\\tOOPS! The description of the \" + getMessage() + \" cannot be empty.\";","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"tiongMax"},"content":"        return Ui.showLine() + result + \" \\n\" + Ui.showLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"tiongMax"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tiongMax":27}},{"path":"src/main/java/duke/exception/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tiongMax"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tiongMax"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"tiongMax"},"content":"public class InvalidIndexException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"tiongMax"},"content":"     * Overrides the `toString\u0027 method of the parent class to provide a formatted error message.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"tiongMax"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"tiongMax"},"content":"     * @return A formatted error message informing the user to provide a proper index.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"tiongMax"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"tiongMax"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"tiongMax"},"content":"        String result \u003d \"\\n\\tOOPS! Please choose a proper index.\";","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"tiongMax"},"content":"        return Ui.showLine() + result + \"\\n\" + Ui.showLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"tiongMax"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tiongMax":18}},{"path":"src/main/java/duke/exception/NoSuchCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tiongMax"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tiongMax"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"tiongMax"},"content":"public class NoSuchCommandException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"tiongMax"},"content":"     * Overrides the `toString\u0027 method of the parent class to provide a formatted error message.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"tiongMax"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"tiongMax"},"content":"     * @return A formatted error message indicating the bot does not understand the command.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"tiongMax"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"tiongMax"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"tiongMax"},"content":"        String result \u003d \"\\n\\tOOPS!!! I\u0027m sorry , but I don\u0027t know what that means :-( \";","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"tiongMax"},"content":"        return Ui.showLine() + result + \" \\n\" + Ui.showLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"tiongMax"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tiongMax":18}},{"path":"src/main/java/duke/exception/UnmatchedArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tiongMax"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tiongMax"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"tiongMax"},"content":"public class UnmatchedArgumentException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"tiongMax"},"content":"    /*","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"tiongMax"},"content":"        The amount of argument inputted by the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"tiongMax"},"content":"    private int got;","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"tiongMax"},"content":"    /*","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"tiongMax"},"content":"        The actual amount of argument required by the command.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"tiongMax"},"content":"    private int actual;","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"tiongMax"},"content":"     * Construct an UnmatchedArgumentException object with provided number of arguments.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"tiongMax"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"tiongMax"},"content":"     * @param got The amount of argument inputted by the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"tiongMax"},"content":"     * @param actual The actual amount of argument required by the command.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"tiongMax"},"content":"    public UnmatchedArgumentException(int got, int actual) {","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"tiongMax"},"content":"        this.got \u003d got;","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"tiongMax"},"content":"        this.actual \u003d actual;","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"tiongMax"},"content":"     * Overrides the `toString\u0027 method of the parent class to provide a formatted error message.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"tiongMax"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"tiongMax"},"content":"     * @return A formatted error message indicating that the amount of argument passed in is insufficient.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"tiongMax"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"tiongMax"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"tiongMax"},"content":"        String result \u003d \"\\n\\tOOPS! The argument passed does not match the requirement.\";","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"tiongMax"},"content":"        result +\u003d \"\\n\\tExpected \" + this.actual + \" , got \" + this.got + \"\\n\";","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"tiongMax"},"content":"        return Ui.showLine() + result + \" \\n\" + Ui.showLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"tiongMax"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tiongMax":40}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tiongMax"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tiongMax"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"tiongMax"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"tiongMax"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"tiongMax"},"content":"    /*","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"tiongMax"},"content":"        The due date and time of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"tiongMax"},"content":"    private LocalDateTime dueDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"tiongMax"},"content":"     * Constructs a Deadline object with the provided description, status, and due date.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"tiongMax"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"tiongMax"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"tiongMax"},"content":"     * @param isDone True if the task is done else otherwise.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"tiongMax"},"content":"     * @param dueDate The deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"tiongMax"},"content":"    public Deadline(String description, boolean isDone, LocalDateTime dueDate) {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"tiongMax"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"tiongMax"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"tiongMax"},"content":"    public LocalDateTime getDueDate() {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"tiongMax"},"content":"        return this.dueDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"tiongMax"},"content":"     * Generates the format of the task to be written into the text file.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"tiongMax"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"tiongMax"},"content":"     * @return The format of the task in the text file.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"tiongMax"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"tiongMax"},"content":"    public String contentLine() {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"tiongMax"},"content":"        return \"D\" + super.contentLine() + \"/\" + this.dueDate.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"tiongMax"},"content":"     * Overrides the \u0027toString\u0027 method of the parent class with to display the task in different format.","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"tiongMax"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"tiongMax"},"content":"     * @return The appearance of the task in the application.","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"tiongMax"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"tiongMax"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"tiongMax"},"content":"        String result \u003d \"[D]\" + super.toString() + \" (by: \" + formatDate(this.dueDate) + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"tiongMax"},"content":"        return result;","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"tiongMax"},"content":"     * Convert the date and time provided into another format.","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"tiongMax"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"tiongMax"},"content":"     * @param l The date and time to be changed.","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"tiongMax"},"content":"     * @return The date and time in \"dd/MMM/yyyy HH:mm\" format.","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"tiongMax"},"content":"    public String formatDate(LocalDateTime l) {","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"tiongMax"},"content":"        return l.format(DateTimeFormatter.ofPattern(\"dd/MMM/yyyy HH:mm\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"tiongMax"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tiongMax":62}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tiongMax"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tiongMax"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"tiongMax"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"tiongMax"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"tiongMax"},"content":"    /*","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"tiongMax"},"content":"        The start date and time of the period of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"tiongMax"},"content":"    private LocalDateTime start;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"tiongMax"},"content":"    /*","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"tiongMax"},"content":"        The end date and time of the period of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"tiongMax"},"content":"    private LocalDateTime end;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"tiongMax"},"content":"     * Constructs an Event object with the provided description, status, and start and end date and time for the period.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"tiongMax"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"tiongMax"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"tiongMax"},"content":"     * @param isDone True if the task is done else otherwise.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"tiongMax"},"content":"     * @param start The start date and time.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"tiongMax"},"content":"     * @param end The end date and time.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"tiongMax"},"content":"    public Event(String description, boolean isDone, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"tiongMax"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"tiongMax"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"tiongMax"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"tiongMax"},"content":"    public LocalDateTime getStart() {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"tiongMax"},"content":"        return this.start;","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"tiongMax"},"content":"    public LocalDateTime getEnd() {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"tiongMax"},"content":"        return this.end;","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"tiongMax"},"content":"     * Generates the format of the task to be written into the text file.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"tiongMax"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"tiongMax"},"content":"     * @return The format of the task in the text file.","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"tiongMax"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"tiongMax"},"content":"    public String contentLine() {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"tiongMax"},"content":"        return \"E\" + super.contentLine() + \"/\" + this.start.toString() + \"/\" + this.end.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"tiongMax"},"content":"     * Overrides the \u0027toString\u0027 method of the parent class with to display the task in different format.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"tiongMax"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"tiongMax"},"content":"     * @return The appearance of the task in the application.","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"tiongMax"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"tiongMax"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"tiongMax"},"content":"        String result \u003d \"[E]\" + super.toString() + \" (from: \" + formatDate(this.start) + \" to: \" +","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"tiongMax"},"content":"                formatDate(this.end) + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"tiongMax"},"content":"        return result;","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"tiongMax"},"content":"     * Convert the date and time provided into another format.","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"tiongMax"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"tiongMax"},"content":"     * @param l The date and time to be changed.","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"tiongMax"},"content":"     * @return The date and time in \"dd/MMM/yyyy HH:mm\" format.","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"tiongMax"},"content":"    public String formatDate(LocalDateTime l) {","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"tiongMax"},"content":"        return l.format(DateTimeFormatter.ofPattern(\"dd/MMM/yyyy HH:mm\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"tiongMax"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tiongMax":72}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tiongMax"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tiongMax"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"tiongMax"},"content":"    /*","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"tiongMax"},"content":"        The detail of the dask.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"tiongMax"},"content":"    protected String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"tiongMax"},"content":"    /*","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"tiongMax"},"content":"        The status of the task whether it is completed or not.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"tiongMax"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"tiongMax"},"content":"     * Constructs an Event object with the provided description and status.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"tiongMax"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"tiongMax"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"tiongMax"},"content":"     * @param isDone True if the task is done else otherwise.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"tiongMax"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"tiongMax"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"tiongMax"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"tiongMax"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"tiongMax"},"content":"        return this.description;","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"tiongMax"},"content":"     * Marks the status of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"tiongMax"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"tiongMax"},"content":"     * @return A \"X\" if the task is completed else \" \".","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"tiongMax"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"tiongMax"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"tiongMax"},"content":"     * Set the task to complete.","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"tiongMax"},"content":"    public void mark() {","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"tiongMax"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"tiongMax"},"content":"     * Set the task to incomplete.","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"tiongMax"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"tiongMax"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"tiongMax"},"content":"     * Generates the format of the task to be written into the text file.","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"tiongMax"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"tiongMax"},"content":"     * @return The format of the task in the text file.","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"tiongMax"},"content":"    public String contentLine() {","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"tiongMax"},"content":"        return \"/\" + getStatusIcon() + \"/\" + this.description;","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"tiongMax"},"content":"     * Overrides the \u0027toString\u0027 method of the parent class with to display the task in different format.","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"tiongMax"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"tiongMax"},"content":"     * @return The appearance of the task in the application.","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"tiongMax"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"tiongMax"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"tiongMax"},"content":"        String result \u003d \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"tiongMax"},"content":"        return result;","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"tiongMax"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tiongMax":75}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tiongMax"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tiongMax"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"tiongMax"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"tiongMax"},"content":"public class TaskList {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"tiongMax"},"content":"    /*","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"tiongMax"},"content":"        The task list for the application.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"tiongMax"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"tiongMax"},"content":"     * Constructs a TaskList object with the provided task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"tiongMax"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"tiongMax"},"content":"     * @param tasks The initial list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"tiongMax"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"tiongMax"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"tiongMax"},"content":"     * Constructs a TaskList object without the provided task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"tiongMax"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"tiongMax"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"tiongMax"},"content":"     * Lists all the tasks in the task list and displays them.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"tiongMax"},"content":"    public void listAllTask() {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"tiongMax"},"content":"        System.out.println(Ui.showLine());","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"tiongMax"},"content":"        System.out.println(\"\\tHere \" + (tasks.size() \u003e 1 ? \"are\" : \"is\") +","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"tiongMax"},"content":"                \" the \" + (tasks.size() \u003e 1 ? \"tasks\" : \"task\") + \" in your list: \");","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"tiongMax"},"content":"        if (tasks.size() \u003e 0) {","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"tiongMax"},"content":"            for (int i \u003d 1; i \u003c tasks.size() + 1; i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"tiongMax"},"content":"                System.out.println(\"\\t\" + i + \".\" + tasks.get(i - 1).toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"tiongMax"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"tiongMax"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"tiongMax"},"content":"        System.out.println();","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"tiongMax"},"content":"        System.out.println(Ui.showLine());","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"tiongMax"},"content":"     * Copies the contents of the task list into a provided list.","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"tiongMax"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"tiongMax"},"content":"     * @param here The list where the task will be copied.","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"tiongMax"},"content":"    public void copyArrInto(ArrayList\u003cString\u003e here) {","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"tiongMax"},"content":"        for (Task t : this.tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"tiongMax"},"content":"            here.add(t.contentLine());","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"tiongMax"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"tiongMax"},"content":"     * Returns the number of tasks in the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"tiongMax"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"tiongMax"},"content":"     * @return The number of tasks in the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"tiongMax"},"content":"    public int size() {","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"tiongMax"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"tiongMax"},"content":"     * Adds a task into the task list`.","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"tiongMax"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"tiongMax"},"content":"     * @param t The task to be added.","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"tiongMax"},"content":"    public void add(Task t) {","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"tiongMax"},"content":"        this.tasks.add(t);","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"tiongMax"},"content":"     * Retrieves a task of provided index from the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"tiongMax"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"tiongMax"},"content":"     * @param i The index of the task to retrieve.","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"tiongMax"},"content":"     * @return The task at the provided index.","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"tiongMax"},"content":"    public Task get(int i) {","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"tiongMax"},"content":"        return this.tasks.get(i);","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"tiongMax"},"content":"     * Removes a task of provided index from the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"tiongMax"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"tiongMax"},"content":"     * @param i The index of the task to remove.","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"tiongMax"},"content":"    public void remove(int i) {","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"tiongMax"},"content":"        this.tasks.remove(i);","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"tiongMax"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"tiongMax"},"content":"        return this.tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"tiongMax"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"tiongMax":98}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tiongMax"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tiongMax"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"tiongMax"},"content":"     * Constructs a Todo object with the provided description and status.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"tiongMax"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"tiongMax"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"tiongMax"},"content":"     * @param isDone True if the task is done else false.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"tiongMax"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"tiongMax"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"tiongMax"},"content":"     * Generates the format of the task to be written into the text file.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"tiongMax"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"tiongMax"},"content":"     * @return The format of the task in the text file.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"tiongMax"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"tiongMax"},"content":"    public String contentLine() {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"tiongMax"},"content":"        return \"T\" + super.contentLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"tiongMax"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"tiongMax"},"content":"     * Overrides the \u0027toString\u0027 method of the parent class with to display the task in different format.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"tiongMax"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"tiongMax"},"content":"     * @return The appearance of the task in the application.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"tiongMax"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"tiongMax"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"tiongMax"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"tiongMax"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"tiongMax"},"content":"        String result \u003d \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"tiongMax"},"content":"        return result;","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"tiongMax"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"tiongMax"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tiongMax":36}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tiongMax"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"tiongMax"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"tiongMax"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"tiongMax"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"tiongMax"},"content":"todo","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"tiongMax"},"content":"blah","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"tiongMax"},"content":"delete 3","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"tiongMax"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"tiongMax"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"tiongMax"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"tiongMax"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tiongMax":11}}]
