[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"Heran9"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"Heran9"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"Heran9"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"Heran9"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"Heran9"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"Heran9"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"Heran9"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"Heran9"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"Heran9"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"Heran9"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"Heran9"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"Heran9"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"Heran9"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":27,"author":{"gitId":"Heran9"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.8.1\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"Heran9"},"content":"    mainClass.set(\"moss.Launcher\")","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"Heran9"},"content":"    archiveBaseName \u003d \"moss\"","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"Heran9"},"content":"    archiveFileName \u003d \u0027moss.jar\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"Heran9"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Heran9":20,"-":40}},{"path":"data/Moss.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Heran9"},"content":"T |   | coffee","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Heran9":1}},{"path":"src/main/java/moss/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Heran9"},"content":"package moss;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Heran9"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Heran9"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Heran9"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Heran9"},"content":" * Represents a task with a specific deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Heran9"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Heran9"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Heran9"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Heran9"},"content":"     * The deadline date for the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Heran9"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Heran9"},"content":"    private final LocalDate date;","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Heran9"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Heran9"},"content":"     * Constructs a new Deadline object with the given description and deadline date.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Heran9"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"Heran9"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"Heran9"},"content":"     * @param date The deadline date for the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Heran9"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"Heran9"},"content":"    public Deadline(String description, LocalDate date) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Heran9"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"Heran9"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"Heran9"},"content":"    ","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Heran9"},"content":"    /** Returns the deadline for the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Heran9"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Heran9"},"content":"     * @return The deadline for the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Heran9"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Heran9"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Heran9"},"content":"        return date;","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Heran9"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Heran9"},"content":"     * Returns a string representation of the Deadline object.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Heran9"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Heran9"},"content":"     * @param x A placeholder parameter to differentiate this method signature.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Heran9"},"content":"     * @return A formatted string containing task type, description, and deadline date.","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Heran9"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Heran9"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"Heran9"},"content":"    public String toString(String x) {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Heran9"},"content":"        return \"D | \" + super.toString() + \" | \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Heran9"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Heran9"},"content":"     * Returns a string representation of the Deadline object.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Heran9"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Heran9"},"content":"     * @return A string containing task type, description, and unformatted deadline date.","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Heran9"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Heran9"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Heran9"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Heran9"},"content":"        return \"D | \" + super.toString() + \" | \" + date;","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Heran9"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Heran9":57}},{"path":"src/main/java/moss/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Heran9"},"content":"package moss;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"Heran9"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"Heran9"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"Heran9"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"Heran9"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"Heran9"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"Heran9"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"Heran9"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"Heran9"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"Heran9"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"Heran9"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"Heran9"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"Heran9"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":17,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"Heran9"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"Heran9"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"Heran9"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"Heran9"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"Heran9"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"Heran9"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"Heran9"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"Heran9"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"Heran9"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"Heran9"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"Heran9"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"Heran9"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"Heran9"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"Heran9"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"Heran9"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"Heran9"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"Heran9"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"Heran9"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"Heran9"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"Heran9"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"Heran9"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"Heran9"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"Heran9"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"Heran9"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"Heran9"},"content":"    private void flip() {","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"Heran9"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"Heran9"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"Heran9"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"Heran9"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"Heran9"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"Heran9"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"Heran9"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"Heran9"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"Heran9"},"content":"        db.flip();","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"Heran9"},"content":"        return db;","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"Heran9"},"content":"}","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"Heran9":63}},{"path":"src/main/java/moss/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Heran9"},"content":"package moss;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Heran9"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Heran9"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Heran9"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Heran9"},"content":" * Represents an event task with a specific start time and end time.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Heran9"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Heran9"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Heran9"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Heran9"},"content":"     * The start date of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Heran9"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Heran9"},"content":"    private final LocalDate fromDate;","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Heran9"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Heran9"},"content":"     * The end date of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Heran9"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Heran9"},"content":"    private final LocalDate toDate;","lastModifiedDate":"2023-09-14"},{"lineNumber":20,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"Heran9"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"Heran9"},"content":"     * Constructs a new Event object with the given description, start date, and end date.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Heran9"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"Heran9"},"content":"     * @param description The description of the event.","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"Heran9"},"content":"     * @param fromDate The start date of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Heran9"},"content":"     * @param toDate The end date of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Heran9"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"Heran9"},"content":"    public Event(String description, LocalDate fromDate, LocalDate toDate) {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Heran9"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"Heran9"},"content":"        this.fromDate \u003d fromDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Heran9"},"content":"        this.toDate \u003d toDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Heran9"},"content":"    ","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Heran9"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Heran9"},"content":"     * Returns the start time of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Heran9"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Heran9"},"content":"     * @return The start time of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Heran9"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Heran9"},"content":"    public LocalDate getFromDate() {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Heran9"},"content":"        return fromDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Heran9"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Heran9"},"content":"     * Returns the end time of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Heran9"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"Heran9"},"content":"     * @return The end time of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Heran9"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Heran9"},"content":"    public LocalDate getToDate() {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Heran9"},"content":"        return toDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Heran9"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Heran9"},"content":"     * Returns a string representation of the Event object.","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"Heran9"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"Heran9"},"content":"     * @param x A placeholder parameter to differentiate this method signature.","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"Heran9"},"content":"     * @return A formatted string containing event type, description, start date, and end date.","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"Heran9"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"Heran9"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"Heran9"},"content":"    public String toString(String x) {","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Heran9"},"content":"        return \"E | \" + super.toString() + \" | \" +","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"Heran9"},"content":"                fromDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" | \" +","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"Heran9"},"content":"                toDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"Heran9"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"Heran9"},"content":"     * Returns a string representation of the Event object.","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"Heran9"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"Heran9"},"content":"     * @return A string containing event type, description, unformatted start date, and unformatted end date.","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"Heran9"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"Heran9"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"Heran9"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"Heran9"},"content":"        return \"E | \" + super.toString() + \" | \" + fromDate + \" | \" + toDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"Heran9"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Heran9":76}},{"path":"src/main/java/moss/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Heran9"},"content":"package moss;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"Heran9"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"Heran9"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"Heran9"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"Heran9"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"Heran9"},"content":"public class Launcher {","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"Heran9"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"Heran9"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"Heran9"},"content":"}","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"Heran9":12}},{"path":"src/main/java/moss/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Heran9"},"content":"package moss;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"Heran9"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"Heran9"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"Heran9"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"Heran9"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"Heran9"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"Heran9"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"Heran9"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"Heran9"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"Heran9"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"Heran9"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"Heran9"},"content":"    private Moss moss \u003d new Moss();","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"Heran9"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"Heran9"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"Heran9"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"Heran9"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"Heran9"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"Heran9"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"Heran9"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"Heran9"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setMoss(moss);","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"Heran9"},"content":"            stage.show();","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"Heran9"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"Heran9"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"Heran9"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"Heran9"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"Heran9":32}},{"path":"src/main/java/moss/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Heran9"},"content":"package moss;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"Heran9"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"Heran9"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"Heran9"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"Heran9"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"Heran9"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"Heran9"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"Heran9"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"Heran9"},"content":"import moss.DialogBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"Heran9"},"content":"import moss.Moss;","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"Heran9"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"Heran9"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"Heran9"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"Heran9"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"Heran9"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"Heran9"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"Heran9"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"Heran9"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"Heran9"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"Heran9"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"Heran9"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"Heran9"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"Heran9"},"content":"    private Moss moss \u003d new Moss();","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"Heran9"},"content":"    private UI ui \u003d new UI();","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"Heran9"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"Heran9"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"Heran9"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"Heran9"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"Heran9"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"Heran9"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(ui.greeting(), dukeImage)","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"Heran9"},"content":"        );","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"Heran9"},"content":"        userInput.setPromptText(\"Type your message here...\");","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"Heran9"},"content":"    public void setMoss(Moss d) {","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"Heran9"},"content":"        moss \u003d d;","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"Heran9"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"Heran9"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"Heran9"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"Heran9"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"Heran9"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"Heran9"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"Heran9"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"Heran9"},"content":"        String response \u003d moss.getResponse(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"Heran9"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"Heran9"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"Heran9"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"Heran9"},"content":"        );","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"Heran9"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"Heran9"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"Heran9":59}},{"path":"src/main/java/moss/Moss.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Heran9"},"content":"package moss;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Heran9"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Heran9"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Heran9"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"Heran9"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"Heran9"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"Heran9"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"Heran9"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"Heran9"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"Heran9"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"Heran9"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"Heran9"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"Heran9"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Heran9"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Heran9"},"content":" * Moss is a simple task management application that allows users to add, list, mark, unmark, and delete tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Heran9"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"Heran9"},"content":"public class Moss extends Application{","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"Heran9"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"Heran9"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"Heran9"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"Heran9"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Heran9"},"content":"     * The list of tasks managed by the application.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Heran9"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Heran9"},"content":"    static ArrayList\u003cTask\u003e things \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Heran9"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"Heran9"},"content":"     * The main method that initializes the application and handles user input.","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"Heran9"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"Heran9"},"content":"     * @param args Command-line arguments (not used in this application).","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"Heran9"},"content":"     * @throws MossException If there\u0027s an issue with loading tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Heran9"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"Heran9"},"content":"    public static void main(String[] args) throws MossException {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Heran9"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"Heran9"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Heran9"},"content":"            things \u003d (ArrayList\u003cTask\u003e) storage.loadTasks();","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Heran9"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Heran9"},"content":"            throw new MossException(\"Failed to load tasks\");","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Heran9"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Heran9"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Heran9"},"content":"        ui.greeting();","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Heran9"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"Heran9"},"content":"        String message \u003d sc.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"Heran9"},"content":"        // Process user input until \"bye\" is entered","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"Heran9"},"content":"        while (!message.equals(\"bye\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"Heran9"},"content":"            Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-14"},{"lineNumber":54,"author":{"gitId":"Heran9"},"content":"            parser.execute(message, things, storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Heran9"},"content":"            message \u003d sc.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"Heran9"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":58,"author":{"gitId":"Heran9"},"content":"        // Farewell message","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"Heran9"},"content":"        ui.bye();","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"Heran9"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"Heran9"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"Heran9"},"content":"        //Step 1. Formatting the window to look as expected.","lastModifiedDate":"2023-09-08"},{"lineNumber":65,"author":{"gitId":"Heran9"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2023-09-08"},{"lineNumber":66,"author":{"gitId":"Heran9"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-09-08"},{"lineNumber":67,"author":{"gitId":"Heran9"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-09-08"},{"lineNumber":68,"author":{"gitId":"Heran9"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-09-08"},{"lineNumber":69,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":70,"author":{"gitId":"Heran9"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-09-08"},{"lineNumber":71,"author":{"gitId":"Heran9"},"content":"        Button sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-09-14"},{"lineNumber":72,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":73,"author":{"gitId":"Heran9"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-09-08"},{"lineNumber":74,"author":{"gitId":"Heran9"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-09-08"},{"lineNumber":75,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":76,"author":{"gitId":"Heran9"},"content":"        Scene scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-09-14"},{"lineNumber":77,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":78,"author":{"gitId":"Heran9"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-09-08"},{"lineNumber":79,"author":{"gitId":"Heran9"},"content":"        stage.show();","lastModifiedDate":"2023-09-08"},{"lineNumber":80,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":81,"author":{"gitId":"Heran9"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2023-09-08"},{"lineNumber":82,"author":{"gitId":"Heran9"},"content":"        stage.setTitle(\"moss\");","lastModifiedDate":"2023-09-14"},{"lineNumber":83,"author":{"gitId":"Heran9"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-09-08"},{"lineNumber":84,"author":{"gitId":"Heran9"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-09-08"},{"lineNumber":85,"author":{"gitId":"Heran9"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-09-08"},{"lineNumber":86,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":87,"author":{"gitId":"Heran9"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-09-08"},{"lineNumber":88,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":89,"author":{"gitId":"Heran9"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-09-08"},{"lineNumber":90,"author":{"gitId":"Heran9"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-09-08"},{"lineNumber":91,"author":{"gitId":"Heran9"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-09-08"},{"lineNumber":92,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":93,"author":{"gitId":"Heran9"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-09-08"},{"lineNumber":94,"author":{"gitId":"Heran9"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-09-08"},{"lineNumber":95,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":96,"author":{"gitId":"Heran9"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2023-09-08"},{"lineNumber":97,"author":{"gitId":"Heran9"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-09-08"},{"lineNumber":98,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":99,"author":{"gitId":"Heran9"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-09-08"},{"lineNumber":100,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":101,"author":{"gitId":"Heran9"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-09-08"},{"lineNumber":102,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":103,"author":{"gitId":"Heran9"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-09-08"},{"lineNumber":104,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":105,"author":{"gitId":"Heran9"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-08"},{"lineNumber":106,"author":{"gitId":"Heran9"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-08"},{"lineNumber":107,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":108,"author":{"gitId":"Heran9"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-09-08"},{"lineNumber":109,"author":{"gitId":"Heran9"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-09-08"},{"lineNumber":110,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":111,"author":{"gitId":"Heran9"},"content":"        //Step 3. Add functionality to handle user input.","lastModifiedDate":"2023-09-08"},{"lineNumber":112,"author":{"gitId":"Heran9"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-09-08"},{"lineNumber":113,"author":{"gitId":"Heran9"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2023-09-08"},{"lineNumber":114,"author":{"gitId":"Heran9"},"content":"            userInput.clear();","lastModifiedDate":"2023-09-08"},{"lineNumber":115,"author":{"gitId":"Heran9"},"content":"        });","lastModifiedDate":"2023-09-08"},{"lineNumber":116,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":117,"author":{"gitId":"Heran9"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-09-08"},{"lineNumber":118,"author":{"gitId":"Heran9"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2023-09-08"},{"lineNumber":119,"author":{"gitId":"Heran9"},"content":"            userInput.clear();","lastModifiedDate":"2023-09-08"},{"lineNumber":120,"author":{"gitId":"Heran9"},"content":"        });","lastModifiedDate":"2023-09-08"},{"lineNumber":121,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":122,"author":{"gitId":"Heran9"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-09-08"},{"lineNumber":123,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":124,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":125,"author":{"gitId":"Heran9"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":126,"author":{"gitId":"Heran9"},"content":"     * Iteration 1:","lastModifiedDate":"2023-09-08"},{"lineNumber":127,"author":{"gitId":"Heran9"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2023-09-08"},{"lineNumber":128,"author":{"gitId":"Heran9"},"content":"     * @param text String containing text to add","lastModifiedDate":"2023-09-08"},{"lineNumber":129,"author":{"gitId":"Heran9"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2023-09-08"},{"lineNumber":130,"author":{"gitId":"Heran9"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":131,"author":{"gitId":"Heran9"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2023-09-08"},{"lineNumber":132,"author":{"gitId":"Heran9"},"content":"        // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2023-09-08"},{"lineNumber":133,"author":{"gitId":"Heran9"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2023-09-08"},{"lineNumber":134,"author":{"gitId":"Heran9"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2023-09-08"},{"lineNumber":135,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":136,"author":{"gitId":"Heran9"},"content":"        return textToAdd;","lastModifiedDate":"2023-09-08"},{"lineNumber":137,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":138,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":139,"author":{"gitId":"Heran9"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":140,"author":{"gitId":"Heran9"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-09-08"},{"lineNumber":141,"author":{"gitId":"Heran9"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-09-08"},{"lineNumber":142,"author":{"gitId":"Heran9"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":143,"author":{"gitId":"Heran9"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-08"},{"lineNumber":144,"author":{"gitId":"Heran9"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":145,"author":{"gitId":"Heran9"},"content":"            Storage storage \u003d new Storage();","lastModifiedDate":"2023-09-08"},{"lineNumber":146,"author":{"gitId":"Heran9"},"content":"            Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-14"},{"lineNumber":147,"author":{"gitId":"Heran9"},"content":"            return parser.execute(input, things, storage);","lastModifiedDate":"2023-09-08"},{"lineNumber":148,"author":{"gitId":"Heran9"},"content":"        } catch (MossException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":149,"author":{"gitId":"Heran9"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-09-08"},{"lineNumber":150,"author":{"gitId":"Heran9"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":151,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":152,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":153,"author":{"gitId":"Heran9"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":154,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":155,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"Heran9":155}},{"path":"src/main/java/moss/MossException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Heran9"},"content":"package moss;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Heran9"},"content":"public class MossException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Heran9"},"content":"    public MossException(String error) {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Heran9"},"content":"        super(error);","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Heran9"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Heran9":7}},{"path":"src/main/java/moss/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Heran9"},"content":"package moss;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Heran9"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Heran9"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Heran9"},"content":" * The Parser class is responsible for parsing and executing user commands for task management.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Heran9"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Heran9"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Heran9"},"content":"    public Parser() {","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Heran9"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Heran9"},"content":"     * Executes the parsed user command by delegating to the TaskList class.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Heran9"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Heran9"},"content":"     * @param message The user command to be executed.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Heran9"},"content":"     * @param things The list of tasks to be managed.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Heran9"},"content":"     * @param storage The storage object for saving and loading tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Heran9"},"content":"     * @throws MossException If there\u0027s an issue with task management.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Heran9"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Heran9"},"content":"    public String execute(String message, ArrayList\u003cTask\u003e things, moss.Storage storage) throws moss.MossException {","lastModifiedDate":"2023-09-14"},{"lineNumber":22,"author":{"gitId":"Heran9"},"content":"        return moss.TaskList.command(message, things, storage);","lastModifiedDate":"2023-09-14"},{"lineNumber":23,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Heran9"},"content":"}","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Heran9":25}},{"path":"src/main/java/moss/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Heran9"},"content":"package moss;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Heran9"},"content":"import java.io.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Heran9"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Heran9"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Heran9"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Heran9"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Heran9"},"content":"import java.util.List;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Heran9"},"content":"import java.util.Objects;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Heran9"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Heran9"},"content":" * The Storage class handles the loading and saving of tasks to a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Heran9"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Heran9"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Heran9"},"content":"    private final String FILE_PATH;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Heran9"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Heran9"},"content":"     * Constructs a Storage object with the default file path.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Heran9"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Heran9"},"content":"     * @throws MossException If there\u0027s an issue creating the file or directory.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Heran9"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Heran9"},"content":"    public Storage() throws MossException {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Heran9"},"content":"        this.FILE_PATH \u003d \"./data/Moss.txt\";","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Heran9"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Heran9"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Heran9"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Heran9"},"content":"                Files.createDirectories(Path.of(this.FILE_PATH).getParent());","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Heran9"},"content":"                Files.createFile(Path.of(this.FILE_PATH));","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":31,"author":{"gitId":"Heran9"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Heran9"},"content":"                throw new MossException(\"Could not create file or directory\");","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Heran9"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Heran9"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Heran9"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Heran9"},"content":"     * Loads tasks from the file and returns a list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Heran9"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Heran9"},"content":"     * @return A list of tasks loaded from the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Heran9"},"content":"     * @throws MossException If there\u0027s an issue reading the file or parsing tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Heran9"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Heran9"},"content":"    public List\u003cTask\u003e loadTasks() throws MossException {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Heran9"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Heran9"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Heran9"},"content":"            File file \u003d new File(FILE_PATH);","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Heran9"},"content":"            if (file.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Heran9"},"content":"                BufferedReader reader \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Heran9"},"content":"                String line;","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Heran9"},"content":"                while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Heran9"},"content":"                    String[] tokens \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Heran9"},"content":"                    assert tokens.length \u003e\u003d 3 : \"Invalid file format: Not enough tokens\";","lastModifiedDate":"2023-09-14"},{"lineNumber":54,"author":{"gitId":"Heran9"},"content":"                    String type \u003d tokens[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Heran9"},"content":"                    boolean marked \u003d Objects.equals(tokens[1], \"X\");","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Heran9"},"content":"                    String description \u003d tokens[2];","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":58,"author":{"gitId":"Heran9"},"content":"                    // Add assertions to validate task type and tokens based on type","lastModifiedDate":"2023-09-14"},{"lineNumber":59,"author":{"gitId":"Heran9"},"content":"                    assert type.equals(\"T\") || type.equals(\"D\") || type.equals(\"E\") : \"Invalid task type\";","lastModifiedDate":"2023-09-14"},{"lineNumber":60,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":61,"author":{"gitId":"Heran9"},"content":"                    Task task;","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"Heran9"},"content":"                    switch (type) {","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"Heran9"},"content":"                    case \"T\":","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"Heran9"},"content":"                        assert tokens.length \u003d\u003d 3 : \"Invalid ToDo task format\";","lastModifiedDate":"2023-09-14"},{"lineNumber":65,"author":{"gitId":"Heran9"},"content":"                        task \u003d new ToDo(description);","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"Heran9"},"content":"                        break;","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"Heran9"},"content":"                    case \"D\":","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"Heran9"},"content":"                        assert tokens.length \u003d\u003d 4 : \"Invalid Deadline task format\";","lastModifiedDate":"2023-09-14"},{"lineNumber":69,"author":{"gitId":"Heran9"},"content":"                        String by \u003d tokens[3];","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"Heran9"},"content":"                        LocalDate date \u003d LocalDate.parse(by);","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"Heran9"},"content":"                        task \u003d new Deadline(description, date);","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"Heran9"},"content":"                        break;","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"Heran9"},"content":"                    case \"E\":","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"Heran9"},"content":"                        assert tokens.length \u003d\u003d 5 : \"Invalid Event task format\";","lastModifiedDate":"2023-09-14"},{"lineNumber":75,"author":{"gitId":"Heran9"},"content":"                        String from \u003d tokens[3];","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"Heran9"},"content":"                        LocalDate fromDate \u003d LocalDate.parse(from);","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"Heran9"},"content":"                        String to \u003d tokens[4];","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"Heran9"},"content":"                        LocalDate toDate \u003d LocalDate.parse(to);","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"Heran9"},"content":"                        task \u003d new Event(description, fromDate, toDate);","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"Heran9"},"content":"                        break;","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"Heran9"},"content":"                    default:","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"Heran9"},"content":"                        throw new MossException(\"Invalid task type\");","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"Heran9"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"Heran9"},"content":"                    if (marked) {","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"Heran9"},"content":"                        task.markDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"Heran9"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"Heran9"},"content":"                    tasks.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"Heran9"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"Heran9"},"content":"                reader.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"Heran9"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"Heran9"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"Heran9"},"content":"            throw new MossException(\"Error loading tasks from file\");","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"Heran9"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"Heran9"},"content":"        return tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"Heran9"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"Heran9"},"content":"     * Saves a list of tasks to the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"Heran9"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"Heran9"},"content":"     * @param tasks The list of tasks to be saved.","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"Heran9"},"content":"     * @throws MossException If there\u0027s an issue writing to the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"Heran9"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"Heran9"},"content":"    public void saveTasks(List\u003cTask\u003e tasks) throws MossException {","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"Heran9"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"Heran9"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(FILE_PATH));","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"Heran9"},"content":"            List\u003cString\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"Heran9"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"Heran9"},"content":"                data.add(task.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"Heran9"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"Heran9"},"content":"            Files.write(Path.of(FILE_PATH), data);","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"Heran9"},"content":"            writer.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"Heran9"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"Heran9"},"content":"            throw new MossException(\"Error saving tasks to file\");","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"Heran9"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"Heran9"},"content":"}","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"Heran9"},"content":"// Example usage","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Heran9":122}},{"path":"src/main/java/moss/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Heran9"},"content":"package moss;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Heran9"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Heran9"},"content":" * Represents a task with a description and completion status.","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Heran9"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Heran9"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Heran9"},"content":"    private String description;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Heran9"},"content":"    private boolean isDone;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Heran9"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Heran9"},"content":"     * Constructs a Moss.Task object with the given description and sets its completion status to false.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Heran9"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Heran9"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Heran9"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Heran9"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Heran9"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Heran9"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"Heran9"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Heran9"},"content":"     * Gets the completion status of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Heran9"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Heran9"},"content":"     * @return True if the task is done, otherwise false.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Heran9"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Heran9"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Heran9"},"content":"        return isDone;","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Heran9"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Heran9"},"content":"     * Gets the description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Heran9"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Heran9"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Heran9"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Heran9"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Heran9"},"content":"        return description;","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Heran9"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"Heran9"},"content":"     * Gets a status icon representing the completion status of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"Heran9"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"Heran9"},"content":"     * @return An \"X\" if the task is done, otherwise a space.","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"Heran9"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"Heran9"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"Heran9"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"Heran9"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"Heran9"},"content":"     * Marks the task as done and prints a confirmation message.","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"Heran9"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"Heran9"},"content":"    public String markDone() {","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"Heran9"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"Heran9"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"Heran9"},"content":"        output +\u003d \"____________________________________________________________\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"Heran9"},"content":"                + \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"Heran9"},"content":"                + this + \"\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":57,"author":{"gitId":"Heran9"},"content":"                + \"____________________________________________________________\\n\";","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"Heran9"},"content":"        return output;","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"Heran9"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"Heran9"},"content":"     * Marks the task as not done and prints a confirmation message.","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"Heran9"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"Heran9"},"content":"    public String markUndone() {","lastModifiedDate":"2023-09-08"},{"lineNumber":65,"author":{"gitId":"Heran9"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"Heran9"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-09-08"},{"lineNumber":67,"author":{"gitId":"Heran9"},"content":"        output +\u003d \"____________________________________________________________\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":68,"author":{"gitId":"Heran9"},"content":"                + \"Nice! I\u0027ve marked this task as undone:\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":69,"author":{"gitId":"Heran9"},"content":"                + this + \"\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":70,"author":{"gitId":"Heran9"},"content":"                + \"____________________________________________________________\\n\";","lastModifiedDate":"2023-09-08"},{"lineNumber":71,"author":{"gitId":"Heran9"},"content":"        return output;","lastModifiedDate":"2023-09-08"},{"lineNumber":72,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"Heran9"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"Heran9"},"content":"     * Returns a string representation of the task, including its completion status and description.","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"Heran9"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"Heran9"},"content":"     * @return The formatted string.","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"Heran9"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"Heran9"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"Heran9"},"content":"        return getStatusIcon() + \" | \" + this.description;","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"Heran9"},"content":"    public String toString(String x) {","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"Heran9"},"content":"        return getStatusIcon() + \" | \" + this.description;","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"Heran9"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Heran9":87}},{"path":"src/main/java/moss/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Heran9"},"content":"package moss;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Heran9"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Heran9"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Heran9"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Heran9"},"content":" * The TaskList class handles processing and executing user commands related to task management.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Heran9"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Heran9"},"content":"public class TaskList {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Heran9"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Heran9"},"content":"     * Processes and executes user commands related to task management.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Heran9"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Heran9"},"content":"     * @param message The user command to be processed.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Heran9"},"content":"     * @param things The list of tasks being managed.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Heran9"},"content":"     * @param storage The storage object for saving tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Heran9"},"content":"     * @throws MossException If there\u0027s an issue with processing commands or managing tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Heran9"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Heran9"},"content":"    public static String command(String message, ArrayList\u003cTask\u003e things, Storage storage) throws MossException {","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"Heran9"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"Heran9"},"content":"        if (message.equals(\"bye\")){","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"Heran9"},"content":"            UI ui \u003d new UI();","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"Heran9"},"content":"            return ui.bye();","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"Heran9"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"Heran9"},"content":"        if (message.equals(\"list\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Heran9"},"content":"            // List all tasks","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Heran9"},"content":"            String temp \u003d \"\";","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"Heran9"},"content":"            for (int i \u003d 0; i \u003c things.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Heran9"},"content":"                temp +\u003d (i + 1) + (\".\") + (things.get(i).toString(\"x\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"Heran9"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Heran9"},"content":"            output +\u003d \"___________________________________________________________\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"Heran9"},"content":"                    + \"Here are the tasks in your list:\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"Heran9"},"content":"                    + temp + \"\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"Heran9"},"content":"                    + \"____________________________________________________________\\n\";","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"Heran9"},"content":"            return output;","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"Heran9"},"content":"        } else if (message.startsWith(\"mark\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Heran9"},"content":"            // Mark a task as done","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Heran9"},"content":"            String indexSubstring \u003d message.substring(5);","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Heran9"},"content":"            int index \u003d Integer.parseInt(indexSubstring) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Heran9"},"content":"            output \u003d things.get(index).markDone();","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"Heran9"},"content":"            storage.saveTasks(things);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Heran9"},"content":"            return output;","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"Heran9"},"content":"        } else if (message.startsWith(\"unmark\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Heran9"},"content":"            // Mark a task as undone","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Heran9"},"content":"            String indexSubstring \u003d message.substring(7);","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Heran9"},"content":"            int index \u003d Integer.parseInt(indexSubstring) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Heran9"},"content":"            output +\u003d things.get(index).markUndone();","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"Heran9"},"content":"            storage.saveTasks(things);","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Heran9"},"content":"            return output;","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"Heran9"},"content":"        } else if (message.startsWith(\"delete\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Heran9"},"content":"            // Delete a task","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Heran9"},"content":"            String indexSubstring \u003d message.substring(7);","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Heran9"},"content":"            int index \u003d Integer.parseInt(indexSubstring) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Heran9"},"content":"            Task temp \u003d things.remove(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Heran9"},"content":"            output +\u003d \"___________________________________________________________\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"Heran9"},"content":"                    + \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"Heran9"},"content":"                    + temp.toString() + \"\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"Heran9"},"content":"                    + \"Now you have \" + things.size() + \" tasks in the list.\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"Heran9"},"content":"                    + \"________________________________________________________\\n\";","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"Heran9"},"content":"            storage.saveTasks(things);","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Heran9"},"content":"            return output;","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"Heran9"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"Heran9"},"content":"            // Process other commands using the command method","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"Heran9"},"content":"            if (message.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"Heran9"},"content":"                // check if the command is valid otherwise throw errors","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"Heran9"},"content":"                if (message.length() \u003c\u003d 5) {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"Heran9"},"content":"                    throw new MossException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"Heran9"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"Heran9"},"content":"                ToDo task \u003d new ToDo(message.substring(5));","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"Heran9"},"content":"                things.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"Heran9"},"content":"                storage.saveTasks(things);","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"Heran9"},"content":"                // Provide feedback about the added task","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"Heran9"},"content":"                output +\u003d \"________________________________________________________\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":75,"author":{"gitId":"Heran9"},"content":"                        + \"Got it. I\u0027ve added this task: \\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":76,"author":{"gitId":"Heran9"},"content":"                        + things.get(things.size() - 1).toString() + \"\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":77,"author":{"gitId":"Heran9"},"content":"                        + \"Now you have \" + things.size() + \" tasks in the list.\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":78,"author":{"gitId":"Heran9"},"content":"                        +\"________________________________________________________\\n\";","lastModifiedDate":"2023-09-08"},{"lineNumber":79,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":80,"author":{"gitId":"Heran9"},"content":"                return output;","lastModifiedDate":"2023-09-08"},{"lineNumber":81,"author":{"gitId":"Heran9"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"Heran9"},"content":"            // Add a deadline task","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"Heran9"},"content":"            else if (message.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"Heran9"},"content":"                // Find the position of \"/by\" in the input","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"Heran9"},"content":"                if (message.length() \u003c\u003d 9) {","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"Heran9"},"content":"                    throw new MossException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"Heran9"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"Heran9"},"content":"                int byIndex \u003d message.indexOf(\"/by\");","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"Heran9"},"content":"                // Extract the substring after \"/by\"","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"Heran9"},"content":"                String deadlineInfo \u003d message.substring(byIndex + 4).trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"Heran9"},"content":"                // Split the deadlineInfo by space to get individual parts","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"Heran9"},"content":"                String[] parts \u003d deadlineInfo.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"Heran9"},"content":"                // The day is the last part of the parts array","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"Heran9"},"content":"                String day \u003d parts[parts.length - 1];","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"Heran9"},"content":"                LocalDate date \u003d LocalDate.parse(day);","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"Heran9"},"content":"                // Extract the substring before \"/by\"","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"Heran9"},"content":"                String taskDescription \u003d message.substring(9, byIndex).trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"Heran9"},"content":"                Deadline task \u003d new Deadline(taskDescription, date);","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"Heran9"},"content":"                things.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"Heran9"},"content":"                storage.saveTasks(things);","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"Heran9"},"content":"                // Provide feedback about the added task","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"Heran9"},"content":"                output +\u003d \"____________________________________________________________\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":108,"author":{"gitId":"Heran9"},"content":"                        + \"Got it. I\u0027ve added this task: \\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":109,"author":{"gitId":"Heran9"},"content":"                        + things.get(things.size() - 1).toString() + \"\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":110,"author":{"gitId":"Heran9"},"content":"                        + \"Now you have \" + things.size() + \" tasks in the list.\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":111,"author":{"gitId":"Heran9"},"content":"                        + \"____________________________________________________________\\n\";","lastModifiedDate":"2023-09-08"},{"lineNumber":112,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":113,"author":{"gitId":"Heran9"},"content":"                return output;","lastModifiedDate":"2023-09-08"},{"lineNumber":114,"author":{"gitId":"Heran9"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"Heran9"},"content":"            // Add an event task","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"Heran9"},"content":"            else if (message.startsWith(\"event\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"Heran9"},"content":"                if (message.length() \u003c\u003d 6) {","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"Heran9"},"content":"                    throw new MossException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"Heran9"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"Heran9"},"content":"                int byIndex \u003d message.indexOf(\"/from\");","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"Heran9"},"content":"                int fromIndex \u003d message.indexOf(\"/from\");","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"Heran9"},"content":"                int toIndex \u003d message.indexOf(\"/to\");","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"Heran9"},"content":"                // Extract the substring between \"/from\" and \"/to\" and behind \"to\"","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"Heran9"},"content":"                String from \u003d message.substring(fromIndex + 5, toIndex).trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"Heran9"},"content":"                LocalDate fromDate \u003d LocalDate.parse(from);","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"Heran9"},"content":"                String to \u003d message.substring(toIndex + 3).trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"Heran9"},"content":"                LocalDate toDate \u003d LocalDate.parse(to);","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"Heran9"},"content":"                String taskDescription \u003d message.substring(6, byIndex).trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"Heran9"},"content":"                Event task \u003d new Event(taskDescription, fromDate, toDate);","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"Heran9"},"content":"                things.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"Heran9"},"content":"                storage.saveTasks(things);","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"Heran9"},"content":"                // Provide feedback about the added task","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"Heran9"},"content":"                output +\u003d \"____________________________________________________________\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":140,"author":{"gitId":"Heran9"},"content":"                        + \"Got it. I\u0027ve added this task: \\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":141,"author":{"gitId":"Heran9"},"content":"                        + things.get(things.size() - 1).toString() + \"\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":142,"author":{"gitId":"Heran9"},"content":"                        + \"Now you have \" + things.size() + \" tasks in the list.\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":143,"author":{"gitId":"Heran9"},"content":"                        + \"____________________________________________________________\\n\";","lastModifiedDate":"2023-09-08"},{"lineNumber":144,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":145,"author":{"gitId":"Heran9"},"content":"                return output;","lastModifiedDate":"2023-09-08"},{"lineNumber":146,"author":{"gitId":"Heran9"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"Heran9"},"content":"            else if (message.startsWith(\"find\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":148,"author":{"gitId":"Heran9"},"content":"                String taskDescription \u003d message.substring(5);","lastModifiedDate":"2023-09-01"},{"lineNumber":149,"author":{"gitId":"Heran9"},"content":"                int count \u003d 0;","lastModifiedDate":"2023-09-01"},{"lineNumber":150,"author":{"gitId":"Heran9"},"content":"                output +\u003d \"________________________________________________________\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":151,"author":{"gitId":"Heran9"},"content":"                        + \"Here are the matching tasks in your list: \\n\";","lastModifiedDate":"2023-09-08"},{"lineNumber":152,"author":{"gitId":"Heran9"},"content":"                for (Task thing : things) {","lastModifiedDate":"2023-09-14"},{"lineNumber":153,"author":{"gitId":"Heran9"},"content":"                    if (thing.getDescription().contains(taskDescription)) {","lastModifiedDate":"2023-09-14"},{"lineNumber":154,"author":{"gitId":"Heran9"},"content":"                        count++;","lastModifiedDate":"2023-09-01"},{"lineNumber":155,"author":{"gitId":"Heran9"},"content":"                        output +\u003d count + \". \" + thing.toString(\"\") + \"\\n\";","lastModifiedDate":"2023-09-14"},{"lineNumber":156,"author":{"gitId":"Heran9"},"content":"                    }","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"Heran9"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":158,"author":{"gitId":"Heran9"},"content":"                if (count \u003d\u003d 0) {","lastModifiedDate":"2023-09-01"},{"lineNumber":159,"author":{"gitId":"Heran9"},"content":"                    output +\u003d \"There is no matching task.\\n\";","lastModifiedDate":"2023-09-08"},{"lineNumber":160,"author":{"gitId":"Heran9"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":161,"author":{"gitId":"Heran9"},"content":"                return output;","lastModifiedDate":"2023-09-08"},{"lineNumber":162,"author":{"gitId":"Heran9"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":163,"author":{"gitId":"Heran9"},"content":"            // check if the command is valid otherwise throw errors","lastModifiedDate":"2023-09-01"},{"lineNumber":164,"author":{"gitId":"Heran9"},"content":"            else {","lastModifiedDate":"2023-09-01"},{"lineNumber":165,"author":{"gitId":"Heran9"},"content":"                // Invalid command","lastModifiedDate":"2023-09-01"},{"lineNumber":166,"author":{"gitId":"Heran9"},"content":"                throw new MossException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-01"},{"lineNumber":167,"author":{"gitId":"Heran9"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":168,"author":{"gitId":"Heran9"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":169,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":170,"author":{"gitId":"Heran9"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Heran9":170}},{"path":"src/main/java/moss/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Heran9"},"content":"package moss;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Heran9"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Heran9"},"content":" * Represents a to-do task that can be managed in the task management application.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Heran9"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Heran9"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Heran9"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Heran9"},"content":"     * Constructs a new ToDo object with the given description.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Heran9"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Heran9"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Heran9"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Heran9"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Heran9"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Heran9"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Heran9"},"content":"     * Returns a string representation of the ToDo object.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Heran9"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Heran9"},"content":"     * @return A string containing task type and description.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Heran9"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Heran9"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"Heran9"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"Heran9"},"content":"        return \"T | \" + super.toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Heran9"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Heran9"},"content":"     * Returns a string representation of the ToDo object.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Heran9"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Heran9"},"content":"     * @param x A placeholder parameter to differentiate this method signature.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Heran9"},"content":"     * @return A string containing task type and description.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Heran9"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Heran9"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Heran9"},"content":"    public String toString(String x) {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Heran9"},"content":"        return \"T | \" + super.toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Heran9"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Heran9":38}},{"path":"src/main/java/moss/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Heran9"},"content":"package moss;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Heran9"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Heran9"},"content":" * The UI class handles user interface interactions and provides messages for the application.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Heran9"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Heran9"},"content":"public class UI {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Heran9"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Heran9"},"content":"     * Displays a greeting message when the application starts.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Heran9"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Heran9"},"content":"    public String greeting() {","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"Heran9"},"content":"        String greet \u003d \"____________________________________________________________\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Heran9"},"content":"                + \"Hello! I\u0027m Moss \\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Heran9"},"content":"                + \"What can I do for you? \\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Heran9"},"content":"                + \"____________________________________________________________\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Heran9"},"content":"        return greet;","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Heran9"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Heran9"},"content":"     * Displays a farewell message when the application is about to exit.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Heran9"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Heran9"},"content":"    public String bye() {","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"Heran9"},"content":"        String bye \u003d \"________________________________________________________\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"Heran9"},"content":"                +\"Bye. Hope to see you again soon! \\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"Heran9"},"content":"                + \"________________________________________________________\";","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"Heran9"},"content":"        return bye;","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Heran9"},"content":"}","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Heran9":30}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Heran9"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"Heran9"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"Heran9"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"Heran9"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"Heran9"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"Heran9"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"Heran9"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"Heran9"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"Heran9"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"Heran9"},"content":"  \u003c/children\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"Heran9"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"Heran9"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"Heran9"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"Heran9"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"Heran9":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Heran9"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"Heran9"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"Heran9"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"Heran9"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"Heran9"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"Heran9"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"Heran9"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"moss.MainWindow\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"Heran9"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"Heran9"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"Heran9"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"Heran9"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"Heran9"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"Heran9"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"Heran9"},"content":"      \u003c/content\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"Heran9"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"Heran9"},"content":"  \u003c/children\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"Heran9"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"Heran9":19}},{"path":"src/test/java/moss/MossTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Heran9"},"content":"package moss;  //same package as the class being tested","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Heran9"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Heran9"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Heran9"},"content":"public class MossTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Heran9"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Heran9"},"content":"    public void dummyTest(){","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Heran9"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Heran9"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Heran9"},"content":"    public void anotherDummyTest(){","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Heran9"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Heran9"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Heran9":17}},{"path":"src/test/java/moss/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Heran9"},"content":"package moss;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Heran9"},"content":"import moss.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Heran9"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Heran9"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Heran9"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Heran9"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Heran9"},"content":"import java.util.List;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Heran9"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Heran9"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Heran9"},"content":" * The StorageTest class contains unit tests for the Storage class.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Heran9"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Heran9"},"content":"public class StorageTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Heran9"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Heran9"},"content":"     * Tests the loading and saving of tasks using the Storage class.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Heran9"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Heran9"},"content":"     * @throws MossException If there\u0027s an issue with loading or saving tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Heran9"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Heran9"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Heran9"},"content":"    public void testLoadAndSaveTasks() throws MossException {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Heran9"},"content":"        // Create sample tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Heran9"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Heran9"},"content":"        tasks.add(new ToDo(\"Buy groceries\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Heran9"},"content":"        tasks.add(new Deadline(\"Finish homework\", LocalDate.parse(\"2023-09-15\")));","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Heran9"},"content":"        tasks.add(new Event(\"Party\", LocalDate.parse(\"2023-09-20\"), LocalDate.parse(\"2023-09-22\")));","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Heran9"},"content":"        tasks.get(0).markDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Heran9"},"content":"        // Create a storage instance","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Heran9"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Heran9"},"content":"        // Save tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Heran9"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Heran9"},"content":"        // Load tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Heran9"},"content":"        List\u003cTask\u003e loadedTasks \u003d storage.loadTasks();","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Heran9"},"content":"        // Check if tasks are loaded correctly","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Heran9"},"content":"        assertEquals(3, loadedTasks.size());","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Heran9"},"content":"        assertTrue(loadedTasks.get(0).isDone());","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"Heran9"},"content":"        assertEquals(\"Finish homework\", loadedTasks.get(1).getDescription());","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Heran9"},"content":"        assertFalse(loadedTasks.get(1).isDone());","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Heran9"},"content":"        assertEquals(LocalDate.parse(\"2023-09-15\"), ((Deadline) loadedTasks.get(1)).getDate());","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Heran9"},"content":"        assertEquals(\"Party\", loadedTasks.get(2).getDescription());","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Heran9"},"content":"        assertFalse(loadedTasks.get(2).isDone());","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Heran9"},"content":"        assertEquals(LocalDate.parse(\"2023-09-20\"), ((Event) loadedTasks.get(2)).getFromDate());","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Heran9"},"content":"        assertEquals(LocalDate.parse(\"2023-09-22\"), ((Event) loadedTasks.get(2)).getToDate());","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"Heran9"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Heran9":58}},{"path":"src/test/java/moss/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Heran9"},"content":"package moss;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Heran9"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Heran9"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Heran9"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Heran9"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Heran9"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Heran9"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Heran9"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Heran9"},"content":" * The TaskListTest class contains unit tests for the TaskList class.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Heran9"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Heran9"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Heran9"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Heran9"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Heran9"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Heran9"},"content":"     * Sets up the test environment before each test method is executed.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Heran9"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Heran9"},"content":"     * @throws MossException If there\u0027s an issue with setting up the environment.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Heran9"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Heran9"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Heran9"},"content":"    public void setUp() throws MossException {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Heran9"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Heran9"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Heran9"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Heran9"},"content":"     * Tests the \u0027command\u0027 method for adding a to-do task.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Heran9"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Heran9"},"content":"     * @throws MossException If there\u0027s an issue with task management.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Heran9"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Heran9"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Heran9"},"content":"    public void testCommand_AddToDo() throws MossException {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Heran9"},"content":"        TaskList.command(\"todo Buy groceries\", tasks, storage);","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Heran9"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Heran9"},"content":"        assertTrue(tasks.get(0) instanceof ToDo);","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Heran9"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Heran9"},"content":"     * Tests the \u0027command\u0027 method for adding a deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Heran9"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Heran9"},"content":"     * @throws MossException If there\u0027s an issue with task management.","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Heran9"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Heran9"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Heran9"},"content":"    public void testCommand_AddDeadline() throws MossException {","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"Heran9"},"content":"        TaskList.command(\"deadline Finish homework /by 2023-09-15\", tasks, storage);","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Heran9"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Heran9"},"content":"        assertTrue(tasks.get(0) instanceof Deadline);","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Heran9"},"content":"        assertEquals(LocalDate.parse(\"2023-09-14\"), ((Deadline) tasks.get(0)).getDate());","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Heran9"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Heran9"},"content":"     * Tests the \u0027command\u0027 method for adding an event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"Heran9"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"Heran9"},"content":"     * @throws MossException If there\u0027s an issue with task management.","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"Heran9"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"Heran9"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"Heran9"},"content":"    public void testCommand_AddEvent() throws MossException {","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"Heran9"},"content":"        TaskList.command(\"event Party /from 2023-09-20 /to 2023-09-22\", tasks, storage);","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"Heran9"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"Heran9"},"content":"        assertTrue(tasks.get(0) instanceof Event);","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"Heran9"},"content":"        assertEquals(LocalDate.parse(\"2023-09-21\"), ((Event) tasks.get(0)).getFromDate());","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"Heran9"},"content":"        assertEquals(LocalDate.parse(\"2023-09-22\"), ((Event) tasks.get(0)).getToDate());","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"Heran9"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"Heran9"},"content":"     * Tests the \u0027command\u0027 method for marking a task as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"Heran9"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"Heran9"},"content":"     * @throws MossException If there\u0027s an issue with task management.","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"Heran9"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"Heran9"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"Heran9"},"content":"    public void testCommand_MarkTaskDone() throws MossException {","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"Heran9"},"content":"        Task task \u003d new ToDo(\"Buy groceries\");","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"Heran9"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"Heran9"},"content":"        TaskList.command(\"mark 1\", tasks, storage);","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"Heran9"},"content":"        assertTrue(task.isDone());","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"Heran9"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"Heran9"},"content":"     * Tests the \u0027command\u0027 method for marking a task as undone.","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"Heran9"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"Heran9"},"content":"     * @throws MossException If there\u0027s an issue with task management.","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"Heran9"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"Heran9"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"Heran9"},"content":"    public void testCommand_MarkTaskUndone() throws MossException {","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"Heran9"},"content":"        Task task \u003d new ToDo(\"Buy groceries\");","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"Heran9"},"content":"        task.markDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"Heran9"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"Heran9"},"content":"        TaskList.command(\"unmark 1\", tasks, storage);","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"Heran9"},"content":"        assertFalse(task.isDone());","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"Heran9"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"Heran9"},"content":"     * Tests the \u0027command\u0027 method for deleting a task.","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"Heran9"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"Heran9"},"content":"     * @throws MossException If there\u0027s an issue with task management.","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"Heran9"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"Heran9"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"Heran9"},"content":"    public void testCommand_DeleteTask() throws MossException {","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"Heran9"},"content":"        Task task \u003d new ToDo(\"Buy groceries\");","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"Heran9"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"Heran9"},"content":"        TaskList.command(\"delete 1\", tasks, storage);","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"Heran9"},"content":"        assertEquals(0, tasks.size());","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"Heran9"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"Heran9"},"content":"    // Add more tests for other cases, error conditions, etc.","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"Heran9"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"Heran9"},"content":"","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Heran9":114}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Heran9"},"content":"todo learn coding","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Heran9"},"content":"event zoom lecture /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Heran9"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Heran9"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Heran9"},"content":"todo get haircut","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Heran9"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Heran9"},"content":"mark 3","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Heran9"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Heran9"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Heran9"},"content":"event zoom lecture /from Tue 4pm /to 6pm","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Heran9"},"content":"deadline group project /by 2023.8.29","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Heran9"},"content":"mark 5","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Heran9"},"content":"list","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Heran9":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Heran9"},"content":"java -classpath ..\\bin Moss \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Heran9":1,"-":20}}]
