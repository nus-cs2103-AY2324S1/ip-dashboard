[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"woojiahao"},"content":"# cyrus.Duke project template","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"woojiahao"},"content":"3. After that, locate the `src/main/java/cyrus.Duke.java` file, right-click it, and choose `Run cyrus.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"woojiahao":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"woojiahao"},"content":"    implementation group: \u0027com.google.code.gson\u0027, name: \u0027gson\u0027, version: \u00272.10.1\u0027","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"woojiahao"},"content":"    mainClass.set(\"cyrus.Duke\")","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"woojiahao":2,"-":41}},{"path":"src/main/java/cyrus/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woojiahao"},"content":"package cyrus;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"woojiahao"},"content":"import cyrus.commands.Command;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"woojiahao"},"content":"import cyrus.commands.CommandType;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"woojiahao"},"content":"import cyrus.parser.ParseInfo;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"woojiahao"},"content":"import cyrus.parser.Parser;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"woojiahao"},"content":"import cyrus.storage.FileStorage;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"woojiahao"},"content":"import cyrus.storage.IStorage;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"woojiahao"},"content":"import cyrus.tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"woojiahao"},"content":"import cyrus.ui.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"woojiahao"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"woojiahao"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"woojiahao"},"content":" * Entry point of Cyrus interface.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"woojiahao"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"woojiahao"},"content":"    private final static IStorage STORAGE \u003d new FileStorage(\"data/data.json\");","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"woojiahao"},"content":"    private final static TaskList TASK_LIST \u003d new TaskList(STORAGE);","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"woojiahao"},"content":"    private final static Parser PARSER \u003d new Parser();","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"woojiahao"},"content":"        Ui.printText(\"Hello! I\u0027m Cyrus\", \"What can I do for you?\");","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"woojiahao"},"content":"        String input;","lastModifiedDate":"2023-08-19"},{"lineNumber":25,"author":{"gitId":"woojiahao"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-19"},{"lineNumber":26,"author":{"gitId":"woojiahao"},"content":"        while (true) {","lastModifiedDate":"2023-08-19"},{"lineNumber":27,"author":{"gitId":"woojiahao"},"content":"            input \u003d sc.nextLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"woojiahao"},"content":"            ParseInfo parseInfo \u003d PARSER.parse(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":30,"author":{"gitId":"woojiahao"},"content":"            // Handle empty inputs","lastModifiedDate":"2023-08-19"},{"lineNumber":31,"author":{"gitId":"woojiahao"},"content":"            if (parseInfo.equals(ParseInfo.EMPTY)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"woojiahao"},"content":"                Ui.printText(\"Enter a command please!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"woojiahao"},"content":"                continue;","lastModifiedDate":"2023-08-19"},{"lineNumber":34,"author":{"gitId":"woojiahao"},"content":"            }","lastModifiedDate":"2023-08-19"},{"lineNumber":35,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":36,"author":{"gitId":"woojiahao"},"content":"            if (parseInfo.getCommandType() \u003d\u003d CommandType.BYE) {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"woojiahao"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"woojiahao"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":40,"author":{"gitId":"woojiahao"},"content":"            Command commandToRun \u003d PARSER.dispatchCommand(TASK_LIST, parseInfo);","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"woojiahao"},"content":"            commandToRun.run();","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"woojiahao"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":43,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":44,"author":{"gitId":"woojiahao"},"content":"        Ui.printText(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"woojiahao":42,"-":4}},{"path":"src/main/java/cyrus/adapters/LocalDateAdapter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woojiahao"},"content":"package cyrus.adapters;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"woojiahao"},"content":"import com.google.gson.TypeAdapter;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"woojiahao"},"content":"import com.google.gson.stream.JsonReader;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"woojiahao"},"content":"import com.google.gson.stream.JsonWriter;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"woojiahao"},"content":"import cyrus.utility.DateUtility;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"woojiahao"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"woojiahao"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"woojiahao"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"woojiahao"},"content":" * GSON adapter to properly handle {@code LocalDate} values in the various {@code Task}.","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"woojiahao"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"woojiahao"},"content":"public class LocalDateAdapter extends TypeAdapter\u003cLocalDate\u003e {","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"woojiahao"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"woojiahao"},"content":"     * When writing {@code LocalDateAdapter} to JSON, convert it to the input format of {@code dd","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"woojiahao"},"content":"     * /MM/yyy}.","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"woojiahao"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"woojiahao"},"content":"     * @param jsonWriter writes the value to the JSON","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"woojiahao"},"content":"     * @param localDate  the Java object to write. May be null.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"woojiahao"},"content":"     * @throws IOException if {@code jsonWriter} encounters an error with writing","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"woojiahao"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"woojiahao"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"woojiahao"},"content":"    public void write(JsonWriter jsonWriter, LocalDate localDate) throws IOException {","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"woojiahao"},"content":"        jsonWriter.value(DateUtility.toInputFormat(localDate));","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"woojiahao"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"woojiahao"},"content":"     * When attempting to deserialize to a {@code LocalDate}, use the same input format as {@code","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"woojiahao"},"content":"     * dd/MM/yyyy}.","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"woojiahao"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"woojiahao"},"content":"     * @param jsonReader reads the value from JSON","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"woojiahao"},"content":"     * @return {@code LocalDate} value","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"woojiahao"},"content":"     * @throws IOException if {@code jsonReader} encounters error with reading","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"woojiahao"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"woojiahao"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"woojiahao"},"content":"    public LocalDate read(JsonReader jsonReader) throws IOException {","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"woojiahao"},"content":"        String input \u003d jsonReader.nextString();","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"woojiahao"},"content":"        return DateUtility.parse(input);","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"woojiahao"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"woojiahao":41}},{"path":"src/main/java/cyrus/commands/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woojiahao"},"content":"package cyrus.commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"woojiahao"},"content":"import cyrus.parser.ParseInfo;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"woojiahao"},"content":"import cyrus.tasks.Deadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"woojiahao"},"content":"import cyrus.tasks.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"woojiahao"},"content":"import cyrus.tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"woojiahao"},"content":"import cyrus.ui.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"woojiahao"},"content":"import cyrus.utility.DateUtility;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"woojiahao"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"woojiahao"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"woojiahao"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"woojiahao"},"content":" * Command to add a {@code Deadline} to the given {@code TaskList}.","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"woojiahao"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"woojiahao"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"woojiahao"},"content":"    public AddDeadlineCommand(TaskList taskList, ParseInfo parseInfo) {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"woojiahao"},"content":"        super(taskList, parseInfo);","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"woojiahao"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"woojiahao"},"content":"     * To add a {@code Deadline}, must ensure that the deadline has an argument (i.e. name of the","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"woojiahao"},"content":"     * deadline) and it contains the {@code by} option which corresponds to a valid {@code","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"woojiahao"},"content":"     * LocalDate} format which is {@code dd/MM/yyyy}.","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"woojiahao"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"woojiahao"},"content":"     * @throws CommandError if no arguments are present, no {@code by} option is provided, or date","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"woojiahao"},"content":"     *                      format is invalid.","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"woojiahao"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"woojiahao"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"woojiahao"},"content":"    public void execute() throws CommandError {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"woojiahao"},"content":"        if (this.parseInfo.hasNoArgument()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"woojiahao"},"content":"            throw new CommandError(\"Deadline is missing a body!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"woojiahao"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"woojiahao"},"content":"        HashMap\u003cString, String\u003e options \u003d this.parseInfo.getOptions();","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"woojiahao"},"content":"        if (!options.containsKey(\"by\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"woojiahao"},"content":"            throw new CommandError(\"Invalid deadline format: missing /by\");","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"woojiahao"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"woojiahao"},"content":"        String deadlineName \u003d this.parseInfo.getArgument();","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"woojiahao"},"content":"        String deadlineBy \u003d this.parseInfo.getOptions().get(\"by\");","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"woojiahao"},"content":"        LocalDate deadlineDate \u003d DateUtility.parse(deadlineBy);","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"woojiahao"},"content":"        if (deadlineDate \u003d\u003d null) {","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"woojiahao"},"content":"            throw new CommandError(\"Invalid deadline format: invalid by string, must be format dd/MM/yyyy\");","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"woojiahao"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"woojiahao"},"content":"        Task deadline \u003d new Deadline(deadlineName, deadlineDate);","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"woojiahao"},"content":"        this.taskList.addTask(deadline);","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"woojiahao"},"content":"        Ui.printAddTask(deadline, this.taskList.size());","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"woojiahao"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"woojiahao":51}},{"path":"src/main/java/cyrus/commands/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woojiahao"},"content":"package cyrus.commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"woojiahao"},"content":"import cyrus.parser.ParseInfo;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"woojiahao"},"content":"import cyrus.tasks.Event;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"woojiahao"},"content":"import cyrus.tasks.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"woojiahao"},"content":"import cyrus.tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"woojiahao"},"content":"import cyrus.ui.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"woojiahao"},"content":"import cyrus.utility.DateUtility;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"woojiahao"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"woojiahao"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"woojiahao"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"woojiahao"},"content":" * Command to add an {@code Event} to the given {@code TaskList}.","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"woojiahao"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"woojiahao"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"woojiahao"},"content":"    public AddEventCommand(TaskList taskList, ParseInfo parseInfo) {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"woojiahao"},"content":"        super(taskList, parseInfo);","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"woojiahao"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"woojiahao"},"content":"     * To add an {@code Event}, must ensure that the event has an argument (i.e. name of the","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"woojiahao"},"content":"     * deadline) and it contains a {@code from} and {@code to} option which corresponds to a valid","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"woojiahao"},"content":"     * {@code LocalDate} format which is {@code dd/MM/yyyy}.","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"woojiahao"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"woojiahao"},"content":"     * @throws CommandError if no arguments are present, no {@code from} or {@code to} option is","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"woojiahao"},"content":"     *                      provided, or date formats are invalid.","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"woojiahao"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"woojiahao"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"woojiahao"},"content":"    public void execute() throws CommandError {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"woojiahao"},"content":"        if (this.parseInfo.hasNoArgument()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"woojiahao"},"content":"            throw new CommandError(\"Event is missing a body!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"woojiahao"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"woojiahao"},"content":"        HashMap\u003cString, String\u003e options \u003d this.parseInfo.getOptions();","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"woojiahao"},"content":"        if (!options.containsKey(\"from\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"woojiahao"},"content":"            throw new CommandError(\"Invalid event format: missing /from\");","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"woojiahao"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"woojiahao"},"content":"        if (!options.containsKey(\"to\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"woojiahao"},"content":"            throw new CommandError(\"Invalid event format: missing /to\");","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"woojiahao"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"woojiahao"},"content":"        String eventName \u003d this.parseInfo.getArgument();","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"woojiahao"},"content":"        String eventFrom \u003d options.get(\"from\");","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"woojiahao"},"content":"        String eventTo \u003d options.get(\"to\");","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"woojiahao"},"content":"        LocalDate eventFromDate \u003d DateUtility.parse(eventFrom);","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"woojiahao"},"content":"        LocalDate eventToDate \u003d DateUtility.parse(eventTo);","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"woojiahao"},"content":"        if (eventFrom \u003d\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"woojiahao"},"content":"            throw new CommandError(\"Invalid event format: invalid from string, must be format\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"woojiahao"},"content":"                    \" dd/MM/yyyy\");","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"woojiahao"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"woojiahao"},"content":"        Task event \u003d new Event(eventName, eventFromDate, eventToDate);","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"woojiahao"},"content":"        this.taskList.addTask(event);","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"woojiahao"},"content":"        Ui.printAddTask(event, this.taskList.size());","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"woojiahao"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"woojiahao":59}},{"path":"src/main/java/cyrus/commands/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woojiahao"},"content":"package cyrus.commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"woojiahao"},"content":"import cyrus.parser.ParseInfo;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"woojiahao"},"content":"import cyrus.tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"woojiahao"},"content":"import cyrus.tasks.ToDo;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"woojiahao"},"content":"import cyrus.ui.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"woojiahao"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"woojiahao"},"content":" * Command to add a {@code ToDo} to the given {@code TaskList}.","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"woojiahao"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"woojiahao"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"woojiahao"},"content":"    public AddTodoCommand(TaskList taskList, ParseInfo parseInfo) {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"woojiahao"},"content":"        super(taskList, parseInfo);","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"woojiahao"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"woojiahao"},"content":"     * To add a {@code ToDo}, must ensure that the todo has an argument (i.e. name of the","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"woojiahao"},"content":"     * deadline).","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"woojiahao"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"woojiahao"},"content":"     * @throws CommandError if no arguments are present.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"woojiahao"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"woojiahao"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"woojiahao"},"content":"    public void execute() throws CommandError {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"woojiahao"},"content":"        if (this.parseInfo.hasNoArgument()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"woojiahao"},"content":"            throw new CommandError(\"ToDo is missing a body!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"woojiahao"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"woojiahao"},"content":"        String content \u003d String.join(\" \", this.parseInfo.getArgument());","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"woojiahao"},"content":"        ToDo todo \u003d new ToDo(content);","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"woojiahao"},"content":"        this.taskList.addTask(todo);","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"woojiahao"},"content":"        Ui.printAddTask(todo, this.taskList.size());","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"woojiahao"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"woojiahao":32}},{"path":"src/main/java/cyrus/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woojiahao"},"content":"package cyrus.commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"woojiahao"},"content":"import cyrus.parser.ParseInfo;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"woojiahao"},"content":"import cyrus.tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"woojiahao"},"content":"import cyrus.ui.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"woojiahao"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"woojiahao"},"content":" * Represents a general command to operate on a {@code TaskList} and a given {@code ParseInfo}","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"woojiahao"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"woojiahao"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"woojiahao"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"woojiahao"},"content":"     * {@code TaskList} made {@code protected final} since sub-classes should be able to access it.","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"woojiahao"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"woojiahao"},"content":"    protected final TaskList taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"woojiahao"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"woojiahao"},"content":"     * {@code ParseInfo} made {@code protected final} since sub-classes should be able to access it.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"woojiahao"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"woojiahao"},"content":"    protected final ParseInfo parseInfo;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"woojiahao"},"content":"    public Command(TaskList taskList, ParseInfo parseInfo) {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"woojiahao"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"woojiahao"},"content":"        this.parseInfo \u003d parseInfo;","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"woojiahao"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"woojiahao"},"content":"     * Behavior of command that operates on the given {@code TaskList} and {@code ParseInfo}.","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"woojiahao"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"woojiahao"},"content":"     * @throws CommandError if there is a validation error with the {@code ParseInfo}","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"woojiahao"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"woojiahao"},"content":"    public abstract void execute() throws CommandError;","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"woojiahao"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"woojiahao"},"content":"     * Executes the command behavior and prints any errors thrown.","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"woojiahao"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"woojiahao"},"content":"    public final void run() {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"woojiahao"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"woojiahao"},"content":"            this.execute();","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"woojiahao"},"content":"        } catch (CommandError e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"woojiahao"},"content":"            Ui.printText(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"woojiahao"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"woojiahao"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"woojiahao":42}},{"path":"src/main/java/cyrus/commands/CommandError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woojiahao"},"content":"package cyrus.commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"woojiahao"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"woojiahao"},"content":" * Custom error that occurs when a {@code Command} executes.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"woojiahao"},"content":" *","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"woojiahao"},"content":" * \u003cp\u003eOften occurs when the input is parsed wrongly.\u003c/p\u003e","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"woojiahao"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"woojiahao"},"content":"public class CommandError extends Exception {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"woojiahao"},"content":"    public CommandError(String reason) {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"woojiahao"},"content":"        super(reason);","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"woojiahao"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"woojiahao":12}},{"path":"src/main/java/cyrus/commands/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woojiahao"},"content":"package cyrus.commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"woojiahao"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"woojiahao"},"content":" * Types of commands available to the bot.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"woojiahao"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"woojiahao"},"content":"public enum CommandType {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"woojiahao"},"content":"    ADD_TODO,","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"woojiahao"},"content":"    ADD_EVENT,","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"woojiahao"},"content":"    ADD_DEADLINE,","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"woojiahao"},"content":"    BYE,","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"woojiahao"},"content":"    FIND_TASK,","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"woojiahao"},"content":"    DELETE_TASK,","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"woojiahao"},"content":"    LIST_TASKS,","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"woojiahao"},"content":"    MARK_TASK,","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"woojiahao"},"content":"    UNMARK_TASK,","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"woojiahao"},"content":"    UNKNOWN;","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"woojiahao"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"woojiahao"},"content":"     * Maps a {@code String} input to a {@code CommandType}.","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"woojiahao"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"woojiahao"},"content":"     * @param input input to map","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"woojiahao"},"content":"     * @return mapped {@code CommandType}","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"woojiahao"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"woojiahao"},"content":"    public static CommandType fromString(String input) {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"woojiahao"},"content":"        switch (input) {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"woojiahao"},"content":"        case \"bye\":","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"woojiahao"},"content":"            return BYE;","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"woojiahao"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"woojiahao"},"content":"            return ADD_TODO;","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"woojiahao"},"content":"        case \"event\":","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"woojiahao"},"content":"            return ADD_EVENT;","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"woojiahao"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"woojiahao"},"content":"            return ADD_DEADLINE;","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"woojiahao"},"content":"        case \"delete\":","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"woojiahao"},"content":"            return DELETE_TASK;","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"woojiahao"},"content":"        case \"list\":","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"woojiahao"},"content":"            return LIST_TASKS;","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"woojiahao"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"woojiahao"},"content":"            return MARK_TASK;","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"woojiahao"},"content":"        case \"unmark\":","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"woojiahao"},"content":"            return UNMARK_TASK;","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"woojiahao"},"content":"        case \"find\":","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"woojiahao"},"content":"            return FIND_TASK;","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"woojiahao"},"content":"        default:","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"woojiahao"},"content":"            return UNKNOWN;","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"woojiahao"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"woojiahao"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"woojiahao":48}},{"path":"src/main/java/cyrus/commands/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woojiahao"},"content":"package cyrus.commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"woojiahao"},"content":"import cyrus.parser.ParseInfo;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"woojiahao"},"content":"import cyrus.tasks.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"woojiahao"},"content":"import cyrus.tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"woojiahao"},"content":"import cyrus.ui.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"woojiahao"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"woojiahao"},"content":" * Command to delete a {@code Task} from the given {@code TaskList}.","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"woojiahao"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"woojiahao"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"woojiahao"},"content":"    public DeleteTaskCommand(TaskList taskList, ParseInfo parseInfo) {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"woojiahao"},"content":"        super(taskList, parseInfo);","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"woojiahao"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"woojiahao"},"content":"     * Deletes the {@code Task} corresponding to the command\u0027s argument.","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"woojiahao"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"woojiahao"},"content":"     * @throws CommandError if no argument is present or if the value given is out of index or not","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"woojiahao"},"content":"     *                      a number.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"woojiahao"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"woojiahao"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"woojiahao"},"content":"    public void execute() throws CommandError {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"woojiahao"},"content":"        if (this.parseInfo.hasNoArgument()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"woojiahao"},"content":"            throw new CommandError(\"Missing task index\");","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"woojiahao"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"woojiahao"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"woojiahao"},"content":"            int i \u003d Integer.parseInt(this.parseInfo.getArgument());","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"woojiahao"},"content":"            Task task \u003d this.taskList.getTask(i - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"woojiahao"},"content":"            this.taskList.removeTask(i - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"woojiahao"},"content":"            Ui.printText(","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"woojiahao"},"content":"                    \"Noted. I\u0027ve removed this task:\",","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"woojiahao"},"content":"                    task.toString(),","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"woojiahao"},"content":"                    String.format(\"Now you have %d cyrus.tasks in the list.\", this.taskList.size())","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"woojiahao"},"content":"            );","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"woojiahao"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"woojiahao"},"content":"            throw new CommandError(\"Invalid task index: must be integer\");","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"woojiahao"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"woojiahao"},"content":"            throw new CommandError(\"Invalid task index: index out of bounds\");","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"woojiahao"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"woojiahao"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"woojiahao":42}},{"path":"src/main/java/cyrus/commands/FindTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woojiahao"},"content":"package cyrus.commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"woojiahao"},"content":"import cyrus.parser.ParseInfo;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"woojiahao"},"content":"import cyrus.tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"woojiahao"},"content":"import cyrus.ui.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"woojiahao"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"woojiahao"},"content":"import java.util.List;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"woojiahao"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"woojiahao"},"content":" * Command to find {@code Task} given keyword.","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"woojiahao"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"woojiahao"},"content":"public class FindTaskCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"woojiahao"},"content":"    public FindTaskCommand(TaskList taskList, ParseInfo parseInfo) {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"woojiahao"},"content":"        super(taskList, parseInfo);","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"woojiahao"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"woojiahao"},"content":"     * Returns list of matching tasks given keyword, taken from argument.","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"woojiahao"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"woojiahao"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"woojiahao"},"content":"    public void execute() {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"woojiahao"},"content":"        var tasks \u003d this.taskList.findTask(this.parseInfo.getArgument());","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"woojiahao"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"woojiahao"},"content":"            Ui.printText(\"No tasks found\");","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"woojiahao"},"content":"            return;","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"woojiahao"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"woojiahao"},"content":"        List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"woojiahao"},"content":"        lines.add(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"woojiahao"},"content":"        for (var task : tasks) {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"woojiahao"},"content":"            lines.add(task.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"woojiahao"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"woojiahao"},"content":"        Ui.printText(lines.toArray(String[]::new));","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"woojiahao"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"woojiahao":35}},{"path":"src/main/java/cyrus/commands/ListTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woojiahao"},"content":"package cyrus.commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"woojiahao"},"content":"import cyrus.parser.ParseInfo;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"woojiahao"},"content":"import cyrus.tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"woojiahao"},"content":"import cyrus.ui.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"woojiahao"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"woojiahao"},"content":" * Command to list out the {@code Task} within the {@code TaskList}.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"woojiahao"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"woojiahao"},"content":"public class ListTasksCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"woojiahao"},"content":"    public ListTasksCommand(TaskList taskList, ParseInfo parseInfo) {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"woojiahao"},"content":"        super(taskList, parseInfo);","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"woojiahao"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"woojiahao"},"content":"     * Print the string representation of the {@code TaskList}.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"woojiahao"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"woojiahao"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"woojiahao"},"content":"    public void execute() {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"woojiahao"},"content":"        Ui.printText(this.taskList.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"woojiahao"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"woojiahao":22}},{"path":"src/main/java/cyrus/commands/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woojiahao"},"content":"package cyrus.commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"woojiahao"},"content":"import cyrus.parser.ParseInfo;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"woojiahao"},"content":"import cyrus.tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"woojiahao"},"content":"import cyrus.ui.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"woojiahao"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"woojiahao"},"content":" * Command to mark a {@code Task} in the given {@code TaskList}.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"woojiahao"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"woojiahao"},"content":"public class MarkTaskCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"woojiahao"},"content":"    public MarkTaskCommand(TaskList taskList, ParseInfo parseInfo) {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"woojiahao"},"content":"        super(taskList, parseInfo);","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"woojiahao"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"woojiahao"},"content":"     * Marks the {@code Task} corresponding to the command\u0027s argument as done.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"woojiahao"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"woojiahao"},"content":"     * @throws CommandError if no argument is present or if the value given is out of bounds or not","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"woojiahao"},"content":"     *                      a number.","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"woojiahao"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"woojiahao"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"woojiahao"},"content":"    public void execute() throws CommandError {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"woojiahao"},"content":"        if (this.parseInfo.hasNoArgument()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"woojiahao"},"content":"            throw new CommandError(\"Missing task index\");","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"woojiahao"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"woojiahao"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"woojiahao"},"content":"            int i \u003d Integer.parseInt(this.parseInfo.getArgument());","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"woojiahao"},"content":"            this.taskList.setTaskStatus(i - 1, true);","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"woojiahao"},"content":"            Ui.printText(\"Nice! I\u0027ve marked this task as done:\",","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"woojiahao"},"content":"                    this.taskList.getTask(i - 1).toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"woojiahao"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"woojiahao"},"content":"            throw new CommandError(\"Invalid task index: must be integer\");","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"woojiahao"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"woojiahao"},"content":"            throw new CommandError(\"Invalid task index: index out of bounds\");","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"woojiahao"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"woojiahao"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"woojiahao":38}},{"path":"src/main/java/cyrus/commands/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woojiahao"},"content":"package cyrus.commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"woojiahao"},"content":"import cyrus.parser.ParseInfo;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"woojiahao"},"content":"import cyrus.tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"woojiahao"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"woojiahao"},"content":" * Command to represent when an invalid command is provided.","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"woojiahao"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"woojiahao"},"content":"public class UnknownCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"woojiahao"},"content":"    public UnknownCommand(TaskList taskList, ParseInfo parseInfo) {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"woojiahao"},"content":"        super(taskList, parseInfo);","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"woojiahao"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"woojiahao"},"content":"     * Relies on the thrown {@code CommandError}.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"woojiahao"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"woojiahao"},"content":"     * @throws CommandError by default","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"woojiahao"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"woojiahao"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"woojiahao"},"content":"    public void execute() throws CommandError {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"woojiahao"},"content":"        throw new CommandError(\"I\u0027m sorry, I don\u0027t know what that means :(\");","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"woojiahao"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"woojiahao":23}},{"path":"src/main/java/cyrus/commands/UnmarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woojiahao"},"content":"package cyrus.commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"woojiahao"},"content":"import cyrus.parser.ParseInfo;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"woojiahao"},"content":"import cyrus.tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"woojiahao"},"content":"import cyrus.ui.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"woojiahao"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"woojiahao"},"content":" * Command to unmark a {@code Task} in the given {@code TaskList}.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"woojiahao"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"woojiahao"},"content":"public class UnmarkTaskCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"woojiahao"},"content":"    public UnmarkTaskCommand(TaskList taskList, ParseInfo parseInfo) {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"woojiahao"},"content":"        super(taskList, parseInfo);","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"woojiahao"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"woojiahao"},"content":"     * Marks the {@code Task} corresponding to the command\u0027s argument as not done.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"woojiahao"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"woojiahao"},"content":"     * @throws CommandError if no argument is present or if the value given is out of bounds or not","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"woojiahao"},"content":"     *                      a number.","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"woojiahao"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"woojiahao"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"woojiahao"},"content":"    public void execute() throws CommandError {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"woojiahao"},"content":"        if (this.parseInfo.hasNoArgument()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"woojiahao"},"content":"            throw new CommandError(\"Missing task index\");","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"woojiahao"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"woojiahao"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"woojiahao"},"content":"            int i \u003d Integer.parseInt(this.parseInfo.getArgument());","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"woojiahao"},"content":"            this.taskList.setTaskStatus(i - 1, false);","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"woojiahao"},"content":"            Ui.printText(\"OK, I\u0027ve marked this task as not done yet:\",","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"woojiahao"},"content":"                    this.taskList.getTask(i - 1).toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"woojiahao"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"woojiahao"},"content":"            throw new CommandError(\"Invalid task index: must be integer\");","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"woojiahao"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"woojiahao"},"content":"            throw new CommandError(\"Invalid task index: index out of bounds\");","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"woojiahao"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"woojiahao"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"woojiahao":38}},{"path":"src/main/java/cyrus/parser/ParseInfo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woojiahao"},"content":"package cyrus.parser;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"woojiahao"},"content":"import cyrus.commands.CommandType;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"woojiahao"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"woojiahao"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"woojiahao"},"content":" * Packet of information about the parsing response.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"woojiahao"},"content":" *","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"woojiahao"},"content":" * \u003cp\u003eModelled after CLI applications where the {@code argument} is the text before any options","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"woojiahao"},"content":" * and an {@code option} is the values of \"flags\".\u003c/p\u003e","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"woojiahao"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"woojiahao"},"content":"public class ParseInfo {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"woojiahao"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"woojiahao"},"content":"     * Default {@code ParseInfo} for an empty command.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"woojiahao"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"woojiahao"},"content":"    public final static ParseInfo EMPTY \u003d new ParseInfo(","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"woojiahao"},"content":"            CommandType.UNKNOWN,","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"woojiahao"},"content":"            \"\",","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"woojiahao"},"content":"            new HashMap\u003c\u003e()","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"woojiahao"},"content":"    );","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"woojiahao"},"content":"    private final CommandType commandType;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"woojiahao"},"content":"    private final String argument;","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"woojiahao"},"content":"    private final HashMap\u003cString, String\u003e options;","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"woojiahao"},"content":"    public ParseInfo(CommandType commandType, String argument, HashMap\u003cString, String\u003e options) {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"woojiahao"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"woojiahao"},"content":"        this.argument \u003d argument;","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"woojiahao"},"content":"        this.options \u003d options;","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"woojiahao"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"woojiahao"},"content":"     * Returns if parsed command has no argument.","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"woojiahao"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"woojiahao"},"content":"     * @return true if parsed command has no arguments","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"woojiahao"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"woojiahao"},"content":"    public boolean hasNoArgument() {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"woojiahao"},"content":"        return this.argument.equals(\"\");","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"woojiahao"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"woojiahao"},"content":"     * Returns {@code argument} of the command.","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"woojiahao"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"woojiahao"},"content":"     * @return argument of command","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"woojiahao"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"woojiahao"},"content":"    public String getArgument() {","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"woojiahao"},"content":"        return this.argument;","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"woojiahao"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"woojiahao"},"content":"     * Create a copy of the options to avoid accidentally modifying the current options map.","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"woojiahao"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"woojiahao"},"content":"     * @return Copy of options hashmap.","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"woojiahao"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"woojiahao"},"content":"    public HashMap\u003cString, String\u003e getOptions() {","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"woojiahao"},"content":"        return new HashMap\u003c\u003e(this.options);","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"woojiahao"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"woojiahao"},"content":"     * Returns {@code commandType} of the command.","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"woojiahao"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"woojiahao"},"content":"     * @return command type","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"woojiahao"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"woojiahao"},"content":"    public CommandType getCommandType() {","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"woojiahao"},"content":"        return this.commandType;","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"woojiahao"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"woojiahao":68}},{"path":"src/main/java/cyrus/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woojiahao"},"content":"package cyrus.parser;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"woojiahao"},"content":"import cyrus.commands.*;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"woojiahao"},"content":"import cyrus.tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"woojiahao"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"woojiahao"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"woojiahao"},"content":"import java.util.List;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"woojiahao"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"woojiahao"},"content":" * Parses user input into a command format. See {@code ParseInfo} for more information about the","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"woojiahao"},"content":" * parsed form.","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"woojiahao"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"woojiahao"},"content":"public class Parser {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"woojiahao"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"woojiahao"},"content":"     * Dispatches {@code Command} given a {@code taskList} and {@code parseInfo} about the incoming","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"woojiahao"},"content":"     * string command.","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"woojiahao"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"woojiahao"},"content":"     * @param taskList  {@code TaskList} of tasks to provide to the command when running","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"woojiahao"},"content":"     * @param parseInfo {@code ParseInfo} parsed from command","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"woojiahao"},"content":"     * @return appropriate {@code Command}","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"woojiahao"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"woojiahao"},"content":"    public Command dispatchCommand(TaskList taskList, ParseInfo parseInfo) {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"woojiahao"},"content":"        switch (parseInfo.getCommandType()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"woojiahao"},"content":"        case ADD_TODO:","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"woojiahao"},"content":"            return new AddTodoCommand(taskList, parseInfo);","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"woojiahao"},"content":"        case ADD_EVENT:","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"woojiahao"},"content":"            return new AddEventCommand(taskList, parseInfo);","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"woojiahao"},"content":"        case ADD_DEADLINE:","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"woojiahao"},"content":"            return new AddDeadlineCommand(taskList, parseInfo);","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"woojiahao"},"content":"        case FIND_TASK:","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"woojiahao"},"content":"            return new FindTaskCommand(taskList, parseInfo);","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"woojiahao"},"content":"        case DELETE_TASK:","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"woojiahao"},"content":"            return new DeleteTaskCommand(taskList, parseInfo);","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"woojiahao"},"content":"        case LIST_TASKS:","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"woojiahao"},"content":"            return new ListTasksCommand(taskList, parseInfo);","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"woojiahao"},"content":"        case MARK_TASK:","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"woojiahao"},"content":"            return new MarkTaskCommand(taskList, parseInfo);","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"woojiahao"},"content":"        case UNMARK_TASK:","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"woojiahao"},"content":"            return new UnmarkTaskCommand(taskList, parseInfo);","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"woojiahao"},"content":"        case UNKNOWN:","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"woojiahao"},"content":"            return new UnknownCommand(taskList, parseInfo);","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"woojiahao"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"woojiahao"},"content":"        return new UnknownCommand(taskList, parseInfo);","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"woojiahao"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"woojiahao"},"content":"     * Perform simple parsing on the user input where we read tokens in while no /[word] is","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"woojiahao"},"content":"     * encountered.","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"woojiahao"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"woojiahao"},"content":"     * @param line Line to parse","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"woojiahao"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"woojiahao"},"content":"    public ParseInfo parse(String line) {","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"woojiahao"},"content":"        String input \u003d line.trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"woojiahao"},"content":"        if (input.equals(\"\")) return ParseInfo.EMPTY;","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"woojiahao"},"content":"        String[] parts \u003d input.split(\"\\\\s+\");","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"woojiahao"},"content":"        List\u003cString\u003e argumentParts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"woojiahao"},"content":"        // Parse the argument first","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"woojiahao"},"content":"        int i \u003d 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"woojiahao"},"content":"        while (i \u003c parts.length) {","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"woojiahao"},"content":"            if (parts[i].startsWith(\"/\") \u0026\u0026 parts[i].length() !\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"woojiahao"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"woojiahao"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"woojiahao"},"content":"            argumentParts.add(parts[i++]);","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"woojiahao"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"woojiahao"},"content":"        String argument \u003d String.join(\" \", argumentParts);","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"woojiahao"},"content":"        HashMap\u003cString, String\u003e options \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"woojiahao"},"content":"        while (i \u003c parts.length) {","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"woojiahao"},"content":"            String key \u003d \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"woojiahao"},"content":"            List\u003cString\u003e acc \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"woojiahao"},"content":"            if (parts[i].startsWith(\"/\") \u0026\u0026 parts[i].length() !\u003d 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"woojiahao"},"content":"                key \u003d parts[i].substring(1);","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"woojiahao"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"woojiahao"},"content":"            while (++i \u003c parts.length \u0026\u0026 !(parts[i].startsWith(\"/\") \u0026\u0026 parts[i].length() !\u003d 1)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"woojiahao"},"content":"                acc.add(parts[i]);","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"woojiahao"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"woojiahao"},"content":"            options.put(key, String.join(\" \", acc));","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"woojiahao"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"woojiahao"},"content":"        return new ParseInfo(CommandType.fromString(parts[0]), argument, options);","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"woojiahao"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"woojiahao":87}},{"path":"src/main/java/cyrus/storage/FileStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woojiahao"},"content":"package cyrus.storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"woojiahao"},"content":"import com.google.gson.Gson;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"woojiahao"},"content":"import com.google.gson.GsonBuilder;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"woojiahao"},"content":"import com.google.gson.reflect.TypeToken;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"woojiahao"},"content":"import cyrus.adapters.LocalDateAdapter;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"woojiahao"},"content":"import cyrus.tasks.Deadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"woojiahao"},"content":"import cyrus.tasks.Event;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"woojiahao"},"content":"import cyrus.tasks.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"woojiahao"},"content":"import cyrus.tasks.ToDo;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"woojiahao"},"content":"import cyrus.utility.DateUtility;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"woojiahao"},"content":"import java.io.*;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"woojiahao"},"content":"import java.lang.reflect.Modifier;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"woojiahao"},"content":"import java.lang.reflect.Type;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"woojiahao"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"woojiahao"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"woojiahao"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"woojiahao"},"content":"import java.util.List;","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"woojiahao"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"woojiahao"},"content":"import static java.lang.Boolean.parseBoolean;","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"woojiahao"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"woojiahao"},"content":" * Storage of task list using JSON files.","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"woojiahao"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"woojiahao"},"content":"public class FileStorage implements IStorage {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"woojiahao"},"content":"    private static final Gson GSON \u003d","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"woojiahao"},"content":"            new GsonBuilder()","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"woojiahao"},"content":"                    .excludeFieldsWithModifiers(Modifier.TRANSIENT)","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"woojiahao"},"content":"                    .setPrettyPrinting()","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"woojiahao"},"content":"                    .registerTypeAdapter(LocalDate.class, new LocalDateAdapter())","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"woojiahao"},"content":"                    .create();","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"woojiahao"},"content":"    private final String dataFilePath;","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"woojiahao"},"content":"    public FileStorage(String dataFilePath) {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"woojiahao"},"content":"        this.dataFilePath \u003d dataFilePath;","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"woojiahao"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"woojiahao"},"content":"     * Loads a list of {@code Task} from a file, determined by {@code dataFilePath}.","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"woojiahao"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"woojiahao"},"content":"     * @return list of {@code Task} from file","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"woojiahao"},"content":"     * @throws IllegalStateException if task format is invalid as that means that the data file","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"woojiahao"},"content":"     *                               should be purged and retried","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"woojiahao"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"woojiahao"},"content":"    // TODO: Figure out a better way to handle file IO errors in the code","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"woojiahao"},"content":"    // Potentially just delete and re-create a blank file (but that means any existing data is","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"woojiahao"},"content":"    // immediately lost)","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"woojiahao"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"woojiahao"},"content":"    public List\u003cTask\u003e load() {","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"woojiahao"},"content":"        try (BufferedReader br \u003d new BufferedReader(new FileReader(dataFilePath))) {","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"woojiahao"},"content":"            Type listType \u003d new TypeToken\u003cList\u003cHashMap\u003cString, String\u003e\u003e\u003e() {","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"woojiahao"},"content":"            }.getType();","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"woojiahao"},"content":"            List\u003cHashMap\u003cString, String\u003e\u003e jsonTasks \u003d GSON.fromJson(br, listType);","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"woojiahao"},"content":"            List\u003cTask\u003e fileTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"woojiahao"},"content":"            for (HashMap\u003cString, String\u003e entry : jsonTasks) {","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"woojiahao"},"content":"                enforceFields(entry);","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"woojiahao"},"content":"                String type \u003d entry.get(\"type\");","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"woojiahao"},"content":"                Task task;","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"woojiahao"},"content":"                switch (type) {","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"woojiahao"},"content":"                case \"todo\":","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"woojiahao"},"content":"                    task \u003d new ToDo(entry.get(\"name\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"woojiahao"},"content":"                    break;","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"woojiahao"},"content":"                case \"deadline\":","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"woojiahao"},"content":"                    LocalDate deadlineDate \u003d DateUtility.parse(entry.get(\"due\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"woojiahao"},"content":"                    if (deadlineDate \u003d\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"woojiahao"},"content":"                        throw new IllegalStateException(\"Invalid deadline format\");","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"woojiahao"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"woojiahao"},"content":"                    task \u003d new Deadline(entry.get(\"name\"), deadlineDate);","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"woojiahao"},"content":"                    break;","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"woojiahao"},"content":"                case \"event\":","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"woojiahao"},"content":"                    LocalDate fromDate \u003d DateUtility.parse(entry.get(\"from\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"woojiahao"},"content":"                    LocalDate toDate \u003d DateUtility.parse(entry.get(\"to\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"woojiahao"},"content":"                    if (fromDate \u003d\u003d null || toDate \u003d\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"woojiahao"},"content":"                        throw new IllegalStateException(\"Invalid from/to format\");","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"woojiahao"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"woojiahao"},"content":"                    task \u003d new Event(entry.get(\"name\"), fromDate, toDate);","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"woojiahao"},"content":"                    break;","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"woojiahao"},"content":"                default:","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"woojiahao"},"content":"                    throw new IllegalStateException(\"Invalid task type found in data.json\");","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"woojiahao"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"woojiahao"},"content":"                task.setDone(parseBoolean(entry.get(\"status\")));","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"woojiahao"},"content":"                fileTasks.add(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"woojiahao"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"woojiahao"},"content":"            return fileTasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"woojiahao"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"woojiahao"},"content":"            createDataFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"woojiahao"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"woojiahao"},"content":"            System.out.println(\"Failed to read cyrus.tasks from data file\");","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"woojiahao"},"content":"            System.exit(0);","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"woojiahao"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"woojiahao"},"content":"        return new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"woojiahao"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"woojiahao"},"content":"     * Saves a list of tasks into a JSON file.","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"woojiahao"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"woojiahao"},"content":"     * @param tasks list of tasks to save","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"woojiahao"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"woojiahao"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"woojiahao"},"content":"    public void save(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"woojiahao"},"content":"        try (BufferedWriter bw \u003d new BufferedWriter(new FileWriter(dataFilePath))) {","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"woojiahao"},"content":"            GSON.toJson(tasks, bw);","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"woojiahao"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"woojiahao"},"content":"            System.out.println(\"Failed to save cyrus.tasks to data file\");","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"woojiahao"},"content":"            System.exit(0);","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"woojiahao"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"woojiahao"},"content":"    private void createDataFile() {","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"woojiahao"},"content":"        File file \u003d new File(dataFilePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"woojiahao"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"woojiahao"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"woojiahao"},"content":"            file.createNewFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"woojiahao"},"content":"        } catch (IOException ne) {","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"woojiahao"},"content":"            System.out.println(\"Unable to create file, Cyrus cannot run\");","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"woojiahao"},"content":"            System.exit(0);","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"woojiahao"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"woojiahao"},"content":"    private void enforceFields(HashMap\u003cString, String\u003e map) {","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"woojiahao"},"content":"        String[] mandatoryKeys \u003d {\"type\", \"status\", \"name\"};","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"woojiahao"},"content":"        Consumer\u003cString[]\u003e checkKeys \u003d (keys) -\u003e {","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"woojiahao"},"content":"            for (String key : keys) {","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"woojiahao"},"content":"                if (!map.containsKey(key)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":130,"author":{"gitId":"woojiahao"},"content":"                    throw new IllegalStateException(","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"woojiahao"},"content":"                            String.format(\"All entries in data.json must contain \\\"%s\\\" field\", key)","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"woojiahao"},"content":"                    );","lastModifiedDate":"2023-08-29"},{"lineNumber":133,"author":{"gitId":"woojiahao"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"woojiahao"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"woojiahao"},"content":"        };","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"woojiahao"},"content":"        checkKeys.accept(mandatoryKeys);","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"woojiahao"},"content":"        String type \u003d map.get(\"type\");","lastModifiedDate":"2023-08-29"},{"lineNumber":139,"author":{"gitId":"woojiahao"},"content":"        switch (type) {","lastModifiedDate":"2023-08-29"},{"lineNumber":140,"author":{"gitId":"woojiahao"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-29"},{"lineNumber":141,"author":{"gitId":"woojiahao"},"content":"            checkKeys.accept(new String[]{\"due\"});","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"woojiahao"},"content":"            break;","lastModifiedDate":"2023-08-29"},{"lineNumber":143,"author":{"gitId":"woojiahao"},"content":"        case \"event\":","lastModifiedDate":"2023-08-29"},{"lineNumber":144,"author":{"gitId":"woojiahao"},"content":"            checkKeys.accept(new String[]{\"from\", \"to\"});","lastModifiedDate":"2023-08-29"},{"lineNumber":145,"author":{"gitId":"woojiahao"},"content":"            break;","lastModifiedDate":"2023-08-29"},{"lineNumber":146,"author":{"gitId":"woojiahao"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":147,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":148,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":149,"author":{"gitId":"woojiahao"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"woojiahao":149}},{"path":"src/main/java/cyrus/storage/IStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woojiahao"},"content":"package cyrus.storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"woojiahao"},"content":"import cyrus.tasks.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"woojiahao"},"content":"import java.util.List;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"woojiahao"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"woojiahao"},"content":" * Interface to allow different types of storage to be used.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"woojiahao"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"woojiahao"},"content":"public interface IStorage {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"woojiahao"},"content":"    public List\u003cTask\u003e load();","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"woojiahao"},"content":"    public void save(List\u003cTask\u003e tasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"woojiahao"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"woojiahao":14}},{"path":"src/main/java/cyrus/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woojiahao"},"content":"package cyrus.tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":3,"author":{"gitId":"woojiahao"},"content":"import com.google.gson.annotations.SerializedName;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"woojiahao"},"content":"import cyrus.utility.DateUtility;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"woojiahao"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"woojiahao"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"woojiahao"},"content":" * Deadline task that contains the name of the deadline and the due date (i.e. {@code deadline}.","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"woojiahao"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"woojiahao"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"woojiahao"},"content":"    @SerializedName(\"type\")","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"woojiahao"},"content":"    private final static String TYPE \u003d \"deadline\";","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"woojiahao"},"content":"    @SerializedName(\"due\")","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"woojiahao"},"content":"    private final LocalDate deadline;","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"woojiahao"},"content":"    public Deadline(String name, LocalDate deadline) {","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"woojiahao"},"content":"        super(name);","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"woojiahao"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":21,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":22,"author":{"gitId":"woojiahao"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":23,"author":{"gitId":"woojiahao"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":24,"author":{"gitId":"woojiahao"},"content":"        return String.format(","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"woojiahao"},"content":"                \"[D] %s (by: %s)\",","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"woojiahao"},"content":"                super.toString(),","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"woojiahao"},"content":"                DateUtility.formatLocalDate(this.deadline)","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"woojiahao"},"content":"        );","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":30,"author":{"gitId":"woojiahao"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"woojiahao":30}},{"path":"src/main/java/cyrus/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woojiahao"},"content":"package cyrus.tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":3,"author":{"gitId":"woojiahao"},"content":"import com.google.gson.annotations.SerializedName;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"woojiahao"},"content":"import cyrus.utility.DateUtility;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"woojiahao"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"woojiahao"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"woojiahao"},"content":" * Event task that contains the name of the event as well as when the event starts (i.e. {@code","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"woojiahao"},"content":" * from}) and ends (i.e. {@code to}).","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"woojiahao"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"woojiahao"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"woojiahao"},"content":"    @SerializedName(\"type\")","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"woojiahao"},"content":"    private final static String TYPE \u003d \"event\";","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"woojiahao"},"content":"    private final LocalDate from;","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"woojiahao"},"content":"    private final LocalDate to;","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"woojiahao"},"content":"    public Event(String name, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"woojiahao"},"content":"        super(name);","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"woojiahao"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-19"},{"lineNumber":21,"author":{"gitId":"woojiahao"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-19"},{"lineNumber":22,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":23,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":24,"author":{"gitId":"woojiahao"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":25,"author":{"gitId":"woojiahao"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":26,"author":{"gitId":"woojiahao"},"content":"        return String.format(","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"woojiahao"},"content":"                \"[E] %s (from: %s to: %s)\",","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"woojiahao"},"content":"                super.toString(),","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"woojiahao"},"content":"                DateUtility.formatLocalDate(this.from),","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"woojiahao"},"content":"                DateUtility.formatLocalDate(this.to)","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"woojiahao"},"content":"        );","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":33,"author":{"gitId":"woojiahao"},"content":"}","lastModifiedDate":"2023-08-19"},{"lineNumber":34,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"woojiahao":34}},{"path":"src/main/java/cyrus/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woojiahao"},"content":"package cyrus.tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":3,"author":{"gitId":"woojiahao"},"content":"import com.google.gson.annotations.SerializedName;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"woojiahao"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"woojiahao"},"content":" * Represents general task stored within the {@code TaskList}.","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"woojiahao"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"woojiahao"},"content":"public class Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"woojiahao"},"content":"    public final String name;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"woojiahao"},"content":"    @SerializedName(\"status\")","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"woojiahao"},"content":"    private boolean done;","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"woojiahao"},"content":"    public Task(String name) {","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"woojiahao"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"woojiahao"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"woojiahao"},"content":"     * Set {@code done} value.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"woojiahao"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"woojiahao"},"content":"     * @param done value to set to","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"woojiahao"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"woojiahao"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2023-08-19"},{"lineNumber":23,"author":{"gitId":"woojiahao"},"content":"        this.done \u003d done;","lastModifiedDate":"2023-08-19"},{"lineNumber":24,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":25,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":26,"author":{"gitId":"woojiahao"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"woojiahao"},"content":"     * Custom string representation of {@code Task}.","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"woojiahao"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"woojiahao"},"content":"     * @return string representation of {@code Task}","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"woojiahao"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"woojiahao"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":32,"author":{"gitId":"woojiahao"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":33,"author":{"gitId":"woojiahao"},"content":"        return String.format(\"[%s] %s\", this.done ? \"X\" : \" \", this.name);","lastModifiedDate":"2023-08-19"},{"lineNumber":34,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":35,"author":{"gitId":"woojiahao"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"woojiahao":35}},{"path":"src/main/java/cyrus/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woojiahao"},"content":"package cyrus.tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"woojiahao"},"content":"import cyrus.storage.IStorage;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"woojiahao"},"content":"import java.util.List;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"woojiahao"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"woojiahao"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"woojiahao"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"woojiahao"},"content":" * Wrapper around the list of {@code Task}.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"woojiahao"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"woojiahao"},"content":"public class TaskList {","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"woojiahao"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"woojiahao"},"content":"    private final IStorage storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"woojiahao"},"content":"    public TaskList(IStorage storage) {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"woojiahao"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"woojiahao"},"content":"        this.tasks \u003d storage.load();","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"woojiahao"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"woojiahao"},"content":"     * Adds task and saves to file.","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"woojiahao"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"woojiahao"},"content":"     * @param task {@code Task} to add","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"woojiahao"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"woojiahao"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"woojiahao"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"woojiahao"},"content":"        this.saveTasks();","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"woojiahao"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"woojiahao"},"content":"     * Removes task by index and saves tto file.","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"woojiahao"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"woojiahao"},"content":"     * @param index index position of task to remove","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"woojiahao"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"woojiahao"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"woojiahao"},"content":"        this.tasks.remove(index);","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"woojiahao"},"content":"        this.saveTasks();","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"woojiahao"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"woojiahao"},"content":"     * Updates {@code Task} at {@code index} to given {@code status}.","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"woojiahao"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"woojiahao"},"content":"     * @param index  index position of task to update","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"woojiahao"},"content":"     * @param status status to update to","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"woojiahao"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"woojiahao"},"content":"    public void setTaskStatus(int index, boolean status) {","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"woojiahao"},"content":"        this.tasks.get(index).setDone(status);","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"woojiahao"},"content":"        this.saveTasks();","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"woojiahao"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"woojiahao"},"content":"     * Finds {@code Task} whose name matches the given {@code keyword}.","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"woojiahao"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"woojiahao"},"content":"     * @param keyword keyword to find task.","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"woojiahao"},"content":"     * @return all tasks that match the {@code keyword}.","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"woojiahao"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"woojiahao"},"content":"    public List\u003cTask\u003e findTask(String keyword) {","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"woojiahao"},"content":"        return this.tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"woojiahao"},"content":"                .stream()","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"woojiahao"},"content":"                .filter(task -\u003e task.name.contains(keyword))","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"woojiahao"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"woojiahao"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"woojiahao"},"content":"     * Get size of current {@code TaskList}.","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"woojiahao"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"woojiahao"},"content":"     * @return size of {@code TaskList}","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"woojiahao"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"woojiahao"},"content":"    public int size() {","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"woojiahao"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"woojiahao"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"woojiahao"},"content":"     * Get {@code Task} given {@code index}.","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"woojiahao"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"woojiahao"},"content":"     * @param index index position of task to update","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"woojiahao"},"content":"     * @return {@code Task} corresponding to the {@code index}","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"woojiahao"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"woojiahao"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"woojiahao"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"woojiahao"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"woojiahao"},"content":"    public String toString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":86,"author":{"gitId":"woojiahao"},"content":"        if (this.tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"woojiahao"},"content":"            return \"You do not have any cyrus.tasks, use todo, deadline, or event to add new ones!\";","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"woojiahao"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"woojiahao"},"content":"        List\u003cString\u003e formattedTasks \u003d IntStream","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"woojiahao"},"content":"                .range(0, tasks.size())","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"woojiahao"},"content":"                .mapToObj((j) -\u003e String.format(\"%d. %s\", j + 1, this.tasks.get(j)))","lastModifiedDate":"2023-08-28"},{"lineNumber":92,"author":{"gitId":"woojiahao"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-08-28"},{"lineNumber":93,"author":{"gitId":"woojiahao"},"content":"        formattedTasks.add(0, \"Here are the cyrus.tasks in your list:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"woojiahao"},"content":"        return String.join(\"\\n\", formattedTasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":96,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":97,"author":{"gitId":"woojiahao"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"woojiahao"},"content":"     * Helper function to save the current list of tasks to the storage.","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"woojiahao"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"woojiahao"},"content":"    private void saveTasks() {","lastModifiedDate":"2023-08-28"},{"lineNumber":101,"author":{"gitId":"woojiahao"},"content":"        this.storage.save(this.tasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":103,"author":{"gitId":"woojiahao"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"woojiahao":103}},{"path":"src/main/java/cyrus/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woojiahao"},"content":"package cyrus.tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":3,"author":{"gitId":"woojiahao"},"content":"import com.google.gson.annotations.SerializedName;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"woojiahao"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"woojiahao"},"content":" * To-Do task that only includes the name of the task to complete.","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"woojiahao"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"woojiahao"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"woojiahao"},"content":"    @SerializedName(\"type\")","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"woojiahao"},"content":"    private static final String TYPE \u003d \"todo\";","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"woojiahao"},"content":"    public ToDo(String name) {","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"woojiahao"},"content":"        super(name);","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"woojiahao"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"woojiahao"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"woojiahao"},"content":"        return String.format(\"[T] %s\", super.toString());","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"woojiahao"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"woojiahao":20}},{"path":"src/main/java/cyrus/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woojiahao"},"content":"package cyrus.ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"woojiahao"},"content":"import cyrus.tasks.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"woojiahao"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"woojiahao"},"content":"import java.util.List;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"woojiahao"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"woojiahao"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"woojiahao"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"woojiahao"},"content":" * Utility to handle CLI text printing to ensure uniform output.","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"woojiahao"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"woojiahao"},"content":"public class Ui {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"woojiahao"},"content":"    private final static String DELIMITER \u003d \"-\".repeat(80);","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"woojiahao"},"content":"    private final static int INDENTATION \u003d 4;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"woojiahao"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"woojiahao"},"content":"     * Print multiple lines of text with delimiters above and below.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"woojiahao"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"woojiahao"},"content":"     * \u003cp\u003eIf a line contains {@code \\n}, then it splits up the text by {@code \\n}.\u003c/p\u003e","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"woojiahao"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"woojiahao"},"content":"     * @param lines list of lines to display","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"woojiahao"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"woojiahao"},"content":"    public static void printText(String... lines) {","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"woojiahao"},"content":"        String frontPadding \u003d \" \".repeat(INDENTATION);","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"woojiahao"},"content":"        // If there are newlines in text, we want to convert those to separate lines","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"woojiahao"},"content":"        // This ensures that our indentation is applied to every new line","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"woojiahao"},"content":"        List\u003cString\u003e text \u003d","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"woojiahao"},"content":"                Arrays.stream(lines)","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"woojiahao"},"content":"                        .flatMap((line) -\u003e Stream.of(line.split(\"\\n\")))","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"woojiahao"},"content":"                        .collect(Collectors.toList());","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"woojiahao"},"content":"        System.out.printf(\"%s%s\\n\", frontPadding, DELIMITER);","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"woojiahao"},"content":"        for (String line : text) {","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"woojiahao"},"content":"            System.out.printf(\"%s%s\\n\", frontPadding, line);","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"woojiahao"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"woojiahao"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"woojiahao"},"content":"     * Helper method to print that a task is added along with task details.","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"woojiahao"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"woojiahao"},"content":"     * @param task         added task","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"woojiahao"},"content":"     * @param taskListSize size of the current task list after addition","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"woojiahao"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"woojiahao"},"content":"    public static void printAddTask(Task task, int taskListSize) {","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"woojiahao"},"content":"        printText(","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"woojiahao"},"content":"                \"Got it. I\u0027ve added this task:\",","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"woojiahao"},"content":"                task.toString(),","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"woojiahao"},"content":"                String.format(\"Now you have %d cyrus.tasks in the list.\", taskListSize)","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"woojiahao"},"content":"        );","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"woojiahao"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"woojiahao":51}},{"path":"src/main/java/cyrus/utility/DateUtility.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woojiahao"},"content":"package cyrus.utility;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"woojiahao"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"woojiahao"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"woojiahao"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"woojiahao"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"woojiahao"},"content":" * Utility to deal with {@code LocalDate}.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"woojiahao"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"woojiahao"},"content":"public class DateUtility {","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"woojiahao"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"woojiahao"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMMM \" +","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"woojiahao"},"content":"            \"yyyy\");","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"woojiahao"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"woojiahao"},"content":"     * Parse a string into a {@code LocalDate} of format {@code dd/MM/yyyy}.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"woojiahao"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"woojiahao"},"content":"     * @param str string to parse","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"woojiahao"},"content":"     * @return {@code LocalDate} if the string is of valid format, else {@code null}","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"woojiahao"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"woojiahao"},"content":"    public static LocalDate parse(String str) {","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"woojiahao"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"woojiahao"},"content":"            return LocalDate.parse(str, INPUT_FORMATTER);","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"woojiahao"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"woojiahao"},"content":"            return null;","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"woojiahao"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"woojiahao"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"woojiahao"},"content":"     * Formats {@code LocalDate} to output format of {@code dd MMMM yyyy} such as {@code 15","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"woojiahao"},"content":"     * September 2024}.","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"woojiahao"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"woojiahao"},"content":"     * @param ld {@code LocalDate} to format","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"woojiahao"},"content":"     * @return date formatted in {@code dd MMMM yyyy}","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"woojiahao"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"woojiahao"},"content":"    public static String formatLocalDate(LocalDate ld) {","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"woojiahao"},"content":"        return ld.format(OUTPUT_FORMATTER);","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"woojiahao"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"woojiahao"},"content":"     * Formats {@code LocalDate} to output format of {@code dd/MM/yyyy} such as {@code 15/09/2024}.","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"woojiahao"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"woojiahao"},"content":"     * @param ld {@code LocalDate} to format","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"woojiahao"},"content":"     * @return date formatted in {@code dd/MM/yyyy}","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"woojiahao"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"woojiahao"},"content":"    public static String toInputFormat(LocalDate ld) {","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"woojiahao"},"content":"        return ld.format(INPUT_FORMATTER);","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"woojiahao"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"woojiahao":49}},{"path":"src/test/java/cyrus/commands/CommandTypeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woojiahao"},"content":"package cyrus.commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"woojiahao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"woojiahao"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"woojiahao"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"woojiahao"},"content":"public class CommandTypeTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"woojiahao"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"woojiahao"},"content":"    public void testFromString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"woojiahao"},"content":"        var expected \u003d new HashMap\u003cString, CommandType\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"woojiahao"},"content":"        String[] testStrings \u003d {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"woojiahao"},"content":"                \"bye\", \"todo\", \"deadline\", \"event\", \"delete\", \"list\", \"mark\", \"unmark\", \"nonsense\"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"woojiahao"},"content":"        };","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"woojiahao"},"content":"        expected.put(\"bye\", CommandType.BYE);","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"woojiahao"},"content":"        expected.put(\"todo\", CommandType.ADD_TODO);","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"woojiahao"},"content":"        expected.put(\"deadline\", CommandType.ADD_DEADLINE);","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"woojiahao"},"content":"        expected.put(\"event\", CommandType.ADD_EVENT);","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"woojiahao"},"content":"        expected.put(\"delete\", CommandType.DELETE_TASK);","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"woojiahao"},"content":"        expected.put(\"list\", CommandType.LIST_TASKS);","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"woojiahao"},"content":"        expected.put(\"mark\", CommandType.MARK_TASK);","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"woojiahao"},"content":"        expected.put(\"unmark\", CommandType.UNMARK_TASK);","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"woojiahao"},"content":"        expected.put(\"nonsense\", CommandType.UNKNOWN);","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"woojiahao"},"content":"        for (var test : testStrings) {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"woojiahao"},"content":"            assertEquals(expected.get(test), CommandType.fromString(test));","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"woojiahao"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"woojiahao"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"woojiahao":30}},{"path":"src/test/java/cyrus/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woojiahao"},"content":"package cyrus.parser;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"woojiahao"},"content":"import cyrus.commands.CommandType;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"woojiahao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"woojiahao"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"woojiahao"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"woojiahao"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"woojiahao"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"woojiahao"},"content":"    private static final Parser PARSER \u003d new Parser();","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"woojiahao"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"woojiahao"},"content":"    public void testParseWithEmptyLine() {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"woojiahao"},"content":"        assertEquals(ParseInfo.EMPTY, PARSER.parse(\"\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"woojiahao"},"content":"        assertEquals(ParseInfo.EMPTY, PARSER.parse(\"  \"));","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"woojiahao"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"woojiahao"},"content":"    public void testParseWithUnknownCommand() {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"woojiahao"},"content":"        assertEquals(CommandType.UNKNOWN, PARSER.parse(\"unknown hi this is unknown\").getCommandType());","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"woojiahao"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"woojiahao"},"content":"    public void testParseWithNoArgument() {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"woojiahao"},"content":"        assertEquals(","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"woojiahao"},"content":"                \"\",","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"woojiahao"},"content":"                PARSER.parse(\"todo /option1 this /other other option!\").getArgument()","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"woojiahao"},"content":"        );","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"woojiahao"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"woojiahao"},"content":"    public void testParseWithOptions() {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"woojiahao"},"content":"        HashMap\u003cString, String\u003e options \u003d","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"woojiahao"},"content":"                PARSER.parse(\"todo /a this is a /b b /c hello! / this should be together\").getOptions();","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"woojiahao"},"content":"        HashMap\u003cString, String\u003e expected \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"woojiahao"},"content":"        expected.put(\"a\", \"this is a\");","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"woojiahao"},"content":"        expected.put(\"b\", \"b\");","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"woojiahao"},"content":"        expected.put(\"c\", \"hello! / this should be together\");","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"woojiahao"},"content":"        for (var entry : expected.entrySet()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"woojiahao"},"content":"            assertTrue(options.containsKey(entry.getKey()));","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"woojiahao"},"content":"            assertEquals(entry.getValue(), options.getOrDefault(entry.getKey(), \"invalid\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"woojiahao"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"woojiahao"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"woojiahao"},"content":"    public void testParseWithoutOptions() {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"woojiahao"},"content":"        ParseInfo info \u003d PARSER.parse(\"todo this is a todo\");","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"woojiahao"},"content":"        assertEquals(CommandType.ADD_TODO, info.getCommandType());","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"woojiahao"},"content":"        assertEquals(\"this is a todo\", info.getArgument());","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"woojiahao"},"content":"        assertEquals(0, info.getOptions().size());","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"woojiahao"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"woojiahao":54}},{"path":"src/test/java/cyrus/storage/FileStorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woojiahao"},"content":"package cyrus.storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"woojiahao"},"content":"import com.google.gson.GsonBuilder;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"woojiahao"},"content":"import cyrus.adapters.LocalDateAdapter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"woojiahao"},"content":"import cyrus.tasks.Deadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"woojiahao"},"content":"import cyrus.tasks.Event;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"woojiahao"},"content":"import cyrus.tasks.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"woojiahao"},"content":"import cyrus.tasks.ToDo;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"woojiahao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"woojiahao"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"woojiahao"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"woojiahao"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"woojiahao"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"woojiahao"},"content":"import java.lang.reflect.Modifier;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"woojiahao"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"woojiahao"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"woojiahao"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"woojiahao"},"content":"import java.util.List;","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"woojiahao"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"woojiahao"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"woojiahao"},"content":"public class FileStorageTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"woojiahao"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"woojiahao"},"content":"    public void testLoadFileCreation() {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"woojiahao"},"content":"        FileStorage storage \u003d new FileStorage(\"test_data/test.json\");","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"woojiahao"},"content":"        storage.load();","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"woojiahao"},"content":"        File testFile \u003d new File(\"test_data/test.json\");","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"woojiahao"},"content":"        assertTrue(testFile.exists());","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"woojiahao"},"content":"        testFile.deleteOnExit();","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"woojiahao"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"woojiahao"},"content":"    public void testLoadFileCreationNested() {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"woojiahao"},"content":"        FileStorage storage \u003d new FileStorage(\"test_data/nested/test.json\");","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"woojiahao"},"content":"        storage.load();","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"woojiahao"},"content":"        File testFile \u003d new File(\"test_data/nested/test.json\");","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"woojiahao"},"content":"        assertTrue(testFile.exists());","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"woojiahao"},"content":"        testFile.deleteOnExit();","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"woojiahao"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"woojiahao"},"content":"    public void testLoadEmptyFile() throws IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"woojiahao"},"content":"        File testFile \u003d new File(\"test_data/test.json\");","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"woojiahao"},"content":"        testFile.getParentFile().mkdirs();","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"woojiahao"},"content":"        testFile.createNewFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"woojiahao"},"content":"        FileStorage storage \u003d new FileStorage(\"test_data/test.json\");","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"woojiahao"},"content":"        var tasks \u003d storage.load();","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"woojiahao"},"content":"        assertEquals(0, tasks.size());","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"woojiahao"},"content":"        testFile.deleteOnExit();","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"woojiahao"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"woojiahao"},"content":"    public void testLoadWithValidData() throws IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"woojiahao"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"woojiahao"},"content":"        var formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"woojiahao"},"content":"        tasks.add(new ToDo(\"todo task\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"woojiahao"},"content":"        tasks.add(new Deadline(\"deadline task\", LocalDate.parse(\"16/08/2023\", formatter)));","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"woojiahao"},"content":"        tasks.add(new Event(\"event task\", LocalDate.parse(\"16/08/2023\", formatter), LocalDate.parse(","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"woojiahao"},"content":"                \"19/09/2023\", formatter)));","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"woojiahao"},"content":"        var gson \u003d","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"woojiahao"},"content":"                new GsonBuilder()","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"woojiahao"},"content":"                        .excludeFieldsWithModifiers(Modifier.TRANSIENT)","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"woojiahao"},"content":"                        .registerTypeAdapter(LocalDate.class, new LocalDateAdapter())","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"woojiahao"},"content":"                        .create();","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"woojiahao"},"content":"        File testFile \u003d new File(\"test_data/test.json\");","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"woojiahao"},"content":"        testFile.getParentFile().mkdirs();","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"woojiahao"},"content":"        testFile.createNewFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"woojiahao"},"content":"        try (BufferedWriter bw \u003d new BufferedWriter(new FileWriter(\"test_data/test.json\"))) {","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"woojiahao"},"content":"            gson.toJson(tasks, bw);","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"woojiahao"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"woojiahao"},"content":"            return;","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"woojiahao"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"woojiahao"},"content":"        FileStorage storage \u003d new FileStorage(\"test_data/test.json\");","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"woojiahao"},"content":"        List\u003cTask\u003e retrievedTasks \u003d storage.load();","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"woojiahao"},"content":"        for (int i \u003d 0; i \u003c retrievedTasks.size(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"woojiahao"},"content":"            assertEquals(tasks.get(i).toString(), retrievedTasks.get(i).toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"woojiahao"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"woojiahao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"woojiahao"},"content":"        testFile.deleteOnExit();","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"woojiahao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"woojiahao"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"woojiahao":87}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"woojiahao"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":2,"author":{"gitId":"woojiahao"},"content":"todo read book","lastModifiedDate":"2023-08-19"},{"lineNumber":3,"author":{"gitId":"woojiahao"},"content":"todo buy groceries","lastModifiedDate":"2023-08-19"},{"lineNumber":4,"author":{"gitId":"woojiahao"},"content":"deadline finish assignment /by Next Monday","lastModifiedDate":"2023-08-19"},{"lineNumber":5,"author":{"gitId":"woojiahao"},"content":"deadline","lastModifiedDate":"2023-08-19"},{"lineNumber":6,"author":{"gitId":"woojiahao"},"content":"deadline finish other assignment","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"woojiahao"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"woojiahao"},"content":"event school interviews /from Monday","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"woojiahao"},"content":"event school interviews /from Monday /to Friday","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"woojiahao"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"woojiahao"},"content":"mark 0","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"woojiahao"},"content":"mark 5","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"woojiahao"},"content":"mark 4","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"woojiahao"},"content":"mark 3","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"woojiahao"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"woojiahao"},"content":"unmark 4","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"woojiahao"},"content":"delete 3","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"woojiahao"},"content":"delete 7","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"woojiahao"},"content":"bye","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"woojiahao":19}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"woojiahao"},"content":"REM run the program, feed cyrus.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"woojiahao"},"content":"java -classpath ..\\bin cyrus.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"woojiahao":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"woojiahao"},"content":"# run the program, feed cyrus.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"woojiahao":1,"-":37}}]
