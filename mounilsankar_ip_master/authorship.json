[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"D|0|return book |2019-10-15T18:00","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"E|0|join club |2019-01-14T19:00|2019-01-18T19:00","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"mounilsankar":2}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"    protected String fullCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"    public Command(String fullCommand) {","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"    public abstract void execute(TaskList tasks ,Ui ui, Storage storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"mounilsankar":9}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"    public Deadline(String description, LocalDateTime deadline) {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"    public static Deadline readFromFile(String[] components) {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"        boolean isDone \u003d components[1].equals(\"1\");","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"        Deadline deadline \u003d new Deadline(components[2], LocalDateTime.parse(components[3]));","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"        if(isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"            deadline.markDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"        return deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"    public String writeFileFormat() {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"        return \"D|\" + super.writeFileFormat() + \"|\" + this.deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"        return \"[D] \"","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"                + super.toString()","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"                + \"(by: \"","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"                + this.deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\"))","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"                + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"mounilsankar":31}},{"path":"src/main/java/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"public class DeadlineCommand extends Command{","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"    public DeadlineCommand(String fullCommand) {","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"        super(fullCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"    public void execute(TaskList tasks ,Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"        String[] words \u003d this.fullCommand.split(\" \", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"        if(words.length \u003c 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"                    throw new InvalidArgumentException(\"deadline\");","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"                } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"                    String[] taskWithDeadline \u003d words[1].split(\"/\", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"                    String c \u003d taskWithDeadline[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"                    if(taskWithDeadline.length \u003c 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"                        throw new InvalidArgumentException(\"deadline\");","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"                    String[] splitTask \u003d  taskWithDeadline[1].split(\" \", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"                    if(splitTask.length \u003c 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"                        throw new InvalidArgumentException(\"deadline\");","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"                    } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"                        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"                            LocalDateTime deadline \u003d LocalDateTime.parse(splitTask[1], Storage.dateTimeInputFormatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"                            Deadline t \u003d new Deadline(c, deadline);","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"                            tasks.addTask(t);","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"                        } catch(DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"                            throw new InvalidDateException();","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"                        }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"mounilsankar":38}},{"path":"src/main/java/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"    public DeleteCommand(String command) {","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"        super(command);","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"    public void execute(TaskList tasks ,Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"        String[] words \u003d this.fullCommand.split(\" \", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"            tasks.deleteTask(Integer.parseInt(words[1]) - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"            throw new InvalidArgumentException(\"☹ OOPS!!! I\u0027m sorry, please enter a valid index to mark\");","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"mounilsankar":18}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"    private static TaskList tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"            tasks \u003d  new TaskList(this.storage.readTasksFromFile());","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"            tasks \u003d  new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"    public void run() {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"        Ui.greet();","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"        while(!isExit) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"                Ui.showError(e);","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"mounilsankar":31,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"public class DukeException extends RuntimeException{","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"mounilsankar":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"    private LocalDateTime start;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"    private LocalDateTime end;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"    public Event(String description, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"    public static Event readFromFile(String[] components) {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"        boolean isDone \u003d components[1].equals(\"1\");","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"        Event event \u003d new Event(components[2], LocalDateTime.parse(components[3]),","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"                LocalDateTime.parse(components[4]));","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"        if(isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"            event.markDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"        return event;","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"    public String writeFileFormat() {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"        //store as E|1/0|this.start|this.end","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"        return \"E|\" + super.writeFileFormat() + \"|\" + this.start + \"|\" + this.end;","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"        return \"[E] \"","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"                + super.toString()","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"                + \"(from: \"","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"                + this.start.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\"))","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"                + \" to: \"","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"                + this.end.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\"))","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"                + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"mounilsankar":37}},{"path":"src/main/java/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"    public EventCommand(String fullCommand) {","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"        super(fullCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"    public void execute(TaskList tasks ,Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"        String[] words \u003d this.fullCommand.split(\" \", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"        if(words.length \u003c 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"            throw new InvalidArgumentException(\"event\");","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"            String[] splitCommand \u003d words[1].split(\"/\", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"            if(splitCommand.length \u003c 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"                throw new InvalidArgumentException(\"event\");","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"            String c \u003d splitCommand[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"            String[] splitDeadline \u003d splitCommand[1].split(\"/\", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"            if(splitDeadline.length \u003c 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"                throw new InvalidArgumentException(\"event\");","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"            } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"                if(splitDeadline[0].split(\" \", 2).length \u003c 2","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"                        || splitDeadline[1].split(\" \", 2).length \u003c 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"                    throw new InvalidArgumentException(\"event\");","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"                } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"                    try {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"                        LocalDateTime from \u003d LocalDateTime.parse(splitDeadline[0].split(\" \", 2)[1].strip(), Storage.dateTimeInputFormatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"                        LocalDateTime to \u003d LocalDateTime.parse(splitDeadline[1].split(\" \", 2)[1].strip(), Storage.dateTimeInputFormatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"                        Event t \u003d new Event(c, from, to);","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"                        tasks.addTask(t);","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"                    } catch(DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"                        throw new InvalidDateException();","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"mounilsankar"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"mounilsankar"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"mounilsankar":44}},{"path":"src/main/java/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"    public ExitCommand(String command) {","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"        super(command);","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"    public void execute(TaskList tasks ,Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"        Ui.showLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"        Ui.showLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"        try{","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"            storage.writeTasksToFile(tasks.getTasks());","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"            throw new DukeException(\"Error in writing taskList to file!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"        return true;","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"mounilsankar":21}},{"path":"src/main/java/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"public class InvalidArgumentException extends DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"    public InvalidArgumentException(String s) {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but arguments to \" + s + \" cannot be empty\");","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"mounilsankar":5}},{"path":"src/main/java/InvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"public class InvalidDateException extends DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"    public InvalidDateException() {","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but your date is in the incorrect format! \" +","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"                \"please key it in yyyy-mm-dd format! :-(\");","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"mounilsankar":6}},{"path":"src/main/java/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"public class InvalidTaskException extends DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"    public InvalidTaskException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"mounilsankar":5}},{"path":"src/main/java/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"    public ListCommand(String fullCommand) {","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"        super(fullCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"    public void execute(TaskList tasks ,Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"                Ui.showLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"                tasks.printTasks();","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"                Ui.showLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"mounilsankar":17}},{"path":"src/main/java/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"    public MarkCommand(String fullCommand) {","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"        super(fullCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"    public void execute(TaskList tasks ,Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"            String[] words \u003d this.fullCommand.split(\" \", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"            Task t \u003d tasks.getTasks().get(Integer.parseInt(words[1]) - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"            t.markDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"            Ui.showLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"            System.out.println(t);","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"            Ui.showLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"            throw new InvalidArgumentException(\"☹ OOPS!!! I\u0027m sorry, please enter a valid index to mark\");","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"mounilsankar":23}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"    public static Command parse(String fullCommand) {","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"        //read first word in command","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"        String[] words \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"        switch(words[0]) {","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"            case \"bye\":","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"                return new ExitCommand(fullCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"            case \"delete\":","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"                return new DeleteCommand(fullCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"            case \"list\":","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"                return new ListCommand(fullCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"            case \"mark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"                return new MarkCommand(fullCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"            case \"unmark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"                return new UnmarkCommand(fullCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"            case \"todo\":","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"                return new TodoCommand(fullCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"            case \"deadline\":","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"                return new DeadlineCommand(fullCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"            case \"event\":","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"                return new EventCommand(fullCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"            default:","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"                throw new InvalidTaskException();","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"mounilsankar":26}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"    //path for file to read/right to","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"    private final String FILE_PATH;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"    public static final String DATETIME_INPUT_FORMAT \u003d \"yyyy-MM-dd HHmm\";","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"    public static final DateTimeFormatter dateTimeInputFormatter","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"            \u003d DateTimeFormatter.ofPattern(DATETIME_INPUT_FORMAT);","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"        this.FILE_PATH \u003d filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"    public void writeTasksToFile(ArrayList\u003cTask\u003e taskList) throws IOException {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"        //check if file path exists already or not","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"        String fileDirectory \u003d \"./\" + FILE_PATH.split(\"/\",2)[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"        File dir \u003d new File(fileDirectory);","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"            dir.mkdir();","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"        FileWriter fw \u003d  new FileWriter(FILE_PATH);","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"            fw.write(task.writeFileFormat() + \"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"        fw.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"    public ArrayList\u003cTask\u003e readTasksFromFile() throws FileNotFoundException {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"        Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"        ArrayList\u003cTask\u003e savedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"            String line \u003d scanner.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"            Task task \u003d Task.readFromFile(line);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"mounilsankar"},"content":"            if (task !\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"mounilsankar"},"content":"                savedTasks.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"mounilsankar"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"        return savedTasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"mounilsankar":45}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"    protected static final String DATETIME_INPUT_FORMAT \u003d \"yyyy-MM-dd HHmm\";","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"    protected static final DateTimeFormatter dateTimeInputFormatter","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"            \u003d DateTimeFormatter.ofPattern(DATETIME_INPUT_FORMAT);","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"        this.isDone \u003d  false;","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"    public static Task readFromFile(String line) {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"        String[] components \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"        switch(components[0]) {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"            case(\"T\"):","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"                return Todo.readFromFile(components);","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"            case(\"D\"):","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"                return Deadline.readFromFile(components);","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"            case(\"E\"):","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"                return Event.readFromFile(components);","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"            default:","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"                return null;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"    public String writeFileFormat() {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"        return (this.isDone ? \"1\" : \"0\")  + \"|\" + this.description;","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"mounilsankar"},"content":"    public void markUndone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"mounilsankar"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"        return(\"[\"","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"mounilsankar"},"content":"                + this.getStatusIcon()","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"mounilsankar"},"content":"                + \"] \"","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"mounilsankar"},"content":"                + this.description);","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"mounilsankar":49}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"public class TaskList {","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"    final String HORIZONTAL \u003d \"_____________________________________________________________\";","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"        this.taskList \u003d tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"        this.taskList.add(t);","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"        System.out.println(HORIZONTAL);","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"        System.out.println(t);","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"        System.out.println(\"Now you have \" + this.taskList.size() + \" in the list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"        System.out.println(HORIZONTAL);","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"        return this.taskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"    public void deleteTask(int i) {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"        Task t \u003d this.taskList.get(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"        this.taskList.remove(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"        int length \u003d this.taskList.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"        System.out.println(HORIZONTAL);","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"        System.out.println(\"Noted! I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"        System.out.println(t);","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"        System.out.println(\"Now you have \" + length + \" tasks in the list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"        System.out.println(HORIZONTAL);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"mounilsankar"},"content":"    public void printTasks() {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"mounilsankar"},"content":"        int len \u003dthis.taskList.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"mounilsankar"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"mounilsankar"},"content":"        for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"mounilsankar"},"content":"            int task_number \u003d i + 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"mounilsankar"},"content":"            Task t \u003d this.taskList.get(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"mounilsankar"},"content":"            System.out.println(task_number","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"mounilsankar"},"content":"                    + \". \"","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"mounilsankar"},"content":"                    + t);","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"mounilsankar":50}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"    public static Todo readFromFile(String[] components) {","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"        boolean isDone \u003d components[1].equals(\"1\");","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"        Todo todo \u003d new Todo(components[2]);","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"        if(isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"            todo.markDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"        return todo;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"    public String writeFileFormat() {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"        return \"T|\" + super.writeFileFormat();","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"mounilsankar":21}},{"path":"src/main/java/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"    public TodoCommand(String fullCommand) {","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"        super(fullCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"    public void execute(TaskList tasks ,Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"        String[] words \u003d this.fullCommand.split(\" \", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"        if(words.length \u003c 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"            throw new InvalidArgumentException(\"todo\");","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"            Todo t \u003d new Todo(words[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"            tasks.addTask(t);","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"mounilsankar":19}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"    final static String HORIZONTAL_LINE \u003d \"_____________________________________________________________\";","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"    public Ui() {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"        this.scanner \u003d  new Scanner(System.in);","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"    public String readCommand() {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"        String command \u003d scanner.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"        return command;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"    public static void showLine() {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"    public static void greet() {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"        String logo \u003d \"       .__\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"                + \"  ____ |__| ____   ____\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"                + \"/    \\\\|  |/    \\\\ /  _  \\\\\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"                + \"|   |  \\\\  |   |  (  \u003c_\u003e )\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"                + \"|___|  /__|___|  /\\\\____/\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"                + \"     \\\\/        \\\\/\";","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"mounilsankar"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"mounilsankar"},"content":"        Ui.showLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"mounilsankar"},"content":"        System.out.println(\"Hello! I\u0027m NINO!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"mounilsankar"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"mounilsankar"},"content":"        Ui.showLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"mounilsankar"},"content":"    public static void showError(DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"mounilsankar"},"content":"        Ui.showLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"mounilsankar"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"mounilsankar"},"content":"        Ui.showLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"mounilsankar"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"mounilsankar":37}},{"path":"src/main/java/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"    public UnmarkCommand(String fullCommand) {","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"        super(fullCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"    public void execute(TaskList tasks ,Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"            String[] words \u003d this.fullCommand.split(\" \", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"            Task t \u003d tasks.getTasks().get(Integer.parseInt(words[1]) - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"            t.markUndone();","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"            Ui.showLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"mounilsankar"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"mounilsankar"},"content":"            System.out.println(t);","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"mounilsankar"},"content":"            Ui.showLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"mounilsankar"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"mounilsankar"},"content":"            throw new InvalidArgumentException(\"☹ OOPS!!! I\u0027m sorry, please enter a valid index to mark\");","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"mounilsankar"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"mounilsankar"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"mounilsankar"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"mounilsankar"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"mounilsankar"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"mounilsankar"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"mounilsankar":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mounilsankar"},"content":"todo read book","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"mounilsankar"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"mounilsankar"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"mounilsankar"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"mounilsankar"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"mounilsankar"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"mounilsankar"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"mounilsankar"},"content":"unmark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"mounilsankar"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"mounilsankar"},"content":"todo","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"mounilsankar"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"mounilsankar":11}}]
