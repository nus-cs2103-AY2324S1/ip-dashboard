[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HugeNoob"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"HugeNoob"},"content":" * Represents a task that needs to be done before a specific date/time.","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"HugeNoob"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"HugeNoob"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"HugeNoob"},"content":"    // The date/time of the deadline.","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"HugeNoob"},"content":"    private String endTime;","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"HugeNoob"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"HugeNoob"},"content":"     * Creates a new Deadline object.","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"HugeNoob"},"content":"     * ","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"HugeNoob"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"HugeNoob"},"content":"     * @param endTime The date/time of the deadline.","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"HugeNoob"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"HugeNoob"},"content":"    public Deadline(String description, String endTime) {","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"HugeNoob"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"HugeNoob"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"HugeNoob"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"HugeNoob"},"content":"     * Returns the string representation of the deadline.","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"HugeNoob"},"content":"     * ","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"HugeNoob"},"content":"     * @return The string representation of the deadline. ","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"HugeNoob"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"HugeNoob"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"HugeNoob"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"HugeNoob"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), endTime);","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"HugeNoob"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"HugeNoob":29}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HugeNoob"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"HugeNoob"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"HugeNoob"},"content":" * Duke is a chatbot that helps you keep track of your tasks.","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"HugeNoob"},"content":" * In this version, Duke is renamed to LilBro.","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"HugeNoob"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"HugeNoob"},"content":"    // The divider is used to separate the user\u0027s input from LilBro\u0027s output.","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"HugeNoob"},"content":"    private static final String DIVIDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"HugeNoob"},"content":"    // The task list is used to store the user\u0027s tasks.","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"HugeNoob"},"content":"    private static final TaskList list \u003d new TaskList();","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"HugeNoob"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"HugeNoob"},"content":"     * The command enum is used to store the valid commands that LilBro can","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"HugeNoob"},"content":"     * understand.","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"HugeNoob"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"HugeNoob"},"content":"    private static enum Command {","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"HugeNoob"},"content":"        EXIT(\"bye\"),","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"HugeNoob"},"content":"        LIST_TASKS(\"list\"),","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"HugeNoob"},"content":"        ADD_TODO(\"todo\"),","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"HugeNoob"},"content":"        ADD_DEADLINE(\"deadline\"),","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"HugeNoob"},"content":"        ADD_EVENT(\"event\"),","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"HugeNoob"},"content":"        MARK_TASK(\"mark\"),","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"HugeNoob"},"content":"        UNMARK_TASK(\"unmark\"),","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"HugeNoob"},"content":"        DELETE_TASK(\"delete\");","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"HugeNoob"},"content":"        // The string representation of the command.","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"HugeNoob"},"content":"        private final String value;","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"HugeNoob"},"content":"        /**","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"HugeNoob"},"content":"         * The constructor is used to create a new command with the given value.","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"HugeNoob"},"content":"         * ","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"HugeNoob"},"content":"         * @param value The string representation of the command.","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"HugeNoob"},"content":"         */","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"HugeNoob"},"content":"        private Command(String value) {","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"HugeNoob"},"content":"            this.value \u003d value;","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"HugeNoob"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"HugeNoob"},"content":"        /**","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"HugeNoob"},"content":"         * The fromString method is used to get the command from the given string.","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"HugeNoob"},"content":"         * ","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"HugeNoob"},"content":"         * @param value The string representation of the command.","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"HugeNoob"},"content":"         * @return The command if it exists, null otherwise.","lastModifiedDate":"2023-08-21"},{"lineNumber":46,"author":{"gitId":"HugeNoob"},"content":"         */","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"HugeNoob"},"content":"        public static Command fromString(String value) {","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"HugeNoob"},"content":"            for (Command command : Command.values()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"HugeNoob"},"content":"                if (command.value.equalsIgnoreCase(value)) {","lastModifiedDate":"2023-08-21"},{"lineNumber":50,"author":{"gitId":"HugeNoob"},"content":"                    return command;","lastModifiedDate":"2023-08-21"},{"lineNumber":51,"author":{"gitId":"HugeNoob"},"content":"                }","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"HugeNoob"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":53,"author":{"gitId":"HugeNoob"},"content":"            return null;","lastModifiedDate":"2023-08-21"},{"lineNumber":54,"author":{"gitId":"HugeNoob"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":55,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":57,"author":{"gitId":"HugeNoob"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":58,"author":{"gitId":"HugeNoob"},"content":"     * The main method is used to run the program.","lastModifiedDate":"2023-08-21"},{"lineNumber":59,"author":{"gitId":"HugeNoob"},"content":"     * ","lastModifiedDate":"2023-08-21"},{"lineNumber":60,"author":{"gitId":"HugeNoob"},"content":"     * @param args The command line arguments.","lastModifiedDate":"2023-08-21"},{"lineNumber":61,"author":{"gitId":"HugeNoob"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"HugeNoob"},"content":"        Duke.greet();","lastModifiedDate":"2023-08-21"},{"lineNumber":64,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":65,"author":{"gitId":"HugeNoob"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-21"},{"lineNumber":66,"author":{"gitId":"HugeNoob"},"content":"        while (true) {","lastModifiedDate":"2023-08-21"},{"lineNumber":67,"author":{"gitId":"HugeNoob"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2023-08-21"},{"lineNumber":68,"author":{"gitId":"HugeNoob"},"content":"            String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-21"},{"lineNumber":69,"author":{"gitId":"HugeNoob"},"content":"            Command command \u003d Command.fromString(parts[0]);","lastModifiedDate":"2023-08-21"},{"lineNumber":70,"author":{"gitId":"HugeNoob"},"content":"            String commandArgs \u003d parts.length \u003e 1 ? parts[1].trim() : \"\";","lastModifiedDate":"2023-08-21"},{"lineNumber":71,"author":{"gitId":"HugeNoob"},"content":"            try {","lastModifiedDate":"2023-08-21"},{"lineNumber":72,"author":{"gitId":"HugeNoob"},"content":"                if (!Duke.executeCommand(command, commandArgs)) {","lastModifiedDate":"2023-08-21"},{"lineNumber":73,"author":{"gitId":"HugeNoob"},"content":"                    break;","lastModifiedDate":"2023-08-21"},{"lineNumber":74,"author":{"gitId":"HugeNoob"},"content":"                }","lastModifiedDate":"2023-08-21"},{"lineNumber":75,"author":{"gitId":"HugeNoob"},"content":"            } catch (DukeException de) {","lastModifiedDate":"2023-08-21"},{"lineNumber":76,"author":{"gitId":"HugeNoob"},"content":"                System.out.println(DIVIDER);","lastModifiedDate":"2023-08-21"},{"lineNumber":77,"author":{"gitId":"HugeNoob"},"content":"                System.out.println(de.getMessage());","lastModifiedDate":"2023-08-21"},{"lineNumber":78,"author":{"gitId":"HugeNoob"},"content":"                System.out.println(DIVIDER);","lastModifiedDate":"2023-08-21"},{"lineNumber":79,"author":{"gitId":"HugeNoob"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":80,"author":{"gitId":"HugeNoob"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":81,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":82,"author":{"gitId":"HugeNoob"},"content":"        scanner.close();","lastModifiedDate":"2023-08-21"},{"lineNumber":83,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":84,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":85,"author":{"gitId":"HugeNoob"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":86,"author":{"gitId":"HugeNoob"},"content":"     * Greets the user.","lastModifiedDate":"2023-08-21"},{"lineNumber":87,"author":{"gitId":"HugeNoob"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":88,"author":{"gitId":"HugeNoob"},"content":"    public static void greet() {","lastModifiedDate":"2023-08-21"},{"lineNumber":89,"author":{"gitId":"HugeNoob"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-08-21"},{"lineNumber":90,"author":{"gitId":"HugeNoob"},"content":"        System.out.println(\"Hello! I\u0027m LilBro!\");","lastModifiedDate":"2023-08-21"},{"lineNumber":91,"author":{"gitId":"HugeNoob"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-08-21"},{"lineNumber":92,"author":{"gitId":"HugeNoob"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-08-21"},{"lineNumber":93,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":94,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":95,"author":{"gitId":"HugeNoob"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":96,"author":{"gitId":"HugeNoob"},"content":"     * Bids goodbye to the user.","lastModifiedDate":"2023-08-21"},{"lineNumber":97,"author":{"gitId":"HugeNoob"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":98,"author":{"gitId":"HugeNoob"},"content":"    public static void exit() {","lastModifiedDate":"2023-08-21"},{"lineNumber":99,"author":{"gitId":"HugeNoob"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-08-21"},{"lineNumber":100,"author":{"gitId":"HugeNoob"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-21"},{"lineNumber":101,"author":{"gitId":"HugeNoob"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-08-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":103,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":104,"author":{"gitId":"HugeNoob"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":105,"author":{"gitId":"HugeNoob"},"content":"     * Echoes the given input.","lastModifiedDate":"2023-08-21"},{"lineNumber":106,"author":{"gitId":"HugeNoob"},"content":"     * ","lastModifiedDate":"2023-08-21"},{"lineNumber":107,"author":{"gitId":"HugeNoob"},"content":"     * @param input The input to echo.","lastModifiedDate":"2023-08-21"},{"lineNumber":108,"author":{"gitId":"HugeNoob"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":109,"author":{"gitId":"HugeNoob"},"content":"    public static void echo(String input) {","lastModifiedDate":"2023-08-21"},{"lineNumber":110,"author":{"gitId":"HugeNoob"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-08-21"},{"lineNumber":111,"author":{"gitId":"HugeNoob"},"content":"        System.out.println(input);","lastModifiedDate":"2023-08-21"},{"lineNumber":112,"author":{"gitId":"HugeNoob"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-08-21"},{"lineNumber":113,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":114,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":115,"author":{"gitId":"HugeNoob"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":116,"author":{"gitId":"HugeNoob"},"content":"     * Executes the given command with the given arguments.","lastModifiedDate":"2023-08-21"},{"lineNumber":117,"author":{"gitId":"HugeNoob"},"content":"     * ","lastModifiedDate":"2023-08-21"},{"lineNumber":118,"author":{"gitId":"HugeNoob"},"content":"     * @param command The command to execute.","lastModifiedDate":"2023-08-21"},{"lineNumber":119,"author":{"gitId":"HugeNoob"},"content":"     * @param args    The arguments to pass to the command.","lastModifiedDate":"2023-08-21"},{"lineNumber":120,"author":{"gitId":"HugeNoob"},"content":"     * @throws DukeInvalidCommandException  If the command is invalid.","lastModifiedDate":"2023-08-21"},{"lineNumber":121,"author":{"gitId":"HugeNoob"},"content":"     * @throws DukeInvalidArgumentException If the arguments are invalid.","lastModifiedDate":"2023-08-21"},{"lineNumber":122,"author":{"gitId":"HugeNoob"},"content":"     * @return True if the command was executed successfully, false otherwise.","lastModifiedDate":"2023-08-21"},{"lineNumber":123,"author":{"gitId":"HugeNoob"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":124,"author":{"gitId":"HugeNoob"},"content":"    private static boolean executeCommand(Command command, String args)","lastModifiedDate":"2023-08-21"},{"lineNumber":125,"author":{"gitId":"HugeNoob"},"content":"            throws DukeInvalidCommandException, DukeInvalidArgumentException {","lastModifiedDate":"2023-08-21"},{"lineNumber":126,"author":{"gitId":"HugeNoob"},"content":"        if (command \u003d\u003d null) {","lastModifiedDate":"2023-08-21"},{"lineNumber":127,"author":{"gitId":"HugeNoob"},"content":"            throw new DukeInvalidCommandException(","lastModifiedDate":"2023-08-21"},{"lineNumber":128,"author":{"gitId":"HugeNoob"},"content":"                    \"Not sure what you\u0027re blabbering on about, please use a valid command.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":129,"author":{"gitId":"HugeNoob"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":130,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":131,"author":{"gitId":"HugeNoob"},"content":"        switch (command) {","lastModifiedDate":"2023-08-21"},{"lineNumber":132,"author":{"gitId":"HugeNoob"},"content":"            case EXIT:","lastModifiedDate":"2023-08-21"},{"lineNumber":133,"author":{"gitId":"HugeNoob"},"content":"                Duke.exit();","lastModifiedDate":"2023-08-21"},{"lineNumber":134,"author":{"gitId":"HugeNoob"},"content":"                return false;","lastModifiedDate":"2023-08-21"},{"lineNumber":135,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":136,"author":{"gitId":"HugeNoob"},"content":"            case LIST_TASKS:","lastModifiedDate":"2023-08-21"},{"lineNumber":137,"author":{"gitId":"HugeNoob"},"content":"                Duke.list.listTasks();","lastModifiedDate":"2023-08-21"},{"lineNumber":138,"author":{"gitId":"HugeNoob"},"content":"                break;","lastModifiedDate":"2023-08-21"},{"lineNumber":139,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":140,"author":{"gitId":"HugeNoob"},"content":"            case MARK_TASK:","lastModifiedDate":"2023-08-21"},{"lineNumber":141,"author":{"gitId":"HugeNoob"},"content":"                try {","lastModifiedDate":"2023-08-21"},{"lineNumber":142,"author":{"gitId":"HugeNoob"},"content":"                    Duke.list.markTaskDone(Integer.parseInt(args));","lastModifiedDate":"2023-08-21"},{"lineNumber":143,"author":{"gitId":"HugeNoob"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-21"},{"lineNumber":144,"author":{"gitId":"HugeNoob"},"content":"                    throw new DukeInvalidArgumentException(\"Stop trolling me bro. Please enter a numeric index.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":145,"author":{"gitId":"HugeNoob"},"content":"                }","lastModifiedDate":"2023-08-21"},{"lineNumber":146,"author":{"gitId":"HugeNoob"},"content":"                break;","lastModifiedDate":"2023-08-21"},{"lineNumber":147,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":148,"author":{"gitId":"HugeNoob"},"content":"            case UNMARK_TASK:","lastModifiedDate":"2023-08-21"},{"lineNumber":149,"author":{"gitId":"HugeNoob"},"content":"                try {","lastModifiedDate":"2023-08-21"},{"lineNumber":150,"author":{"gitId":"HugeNoob"},"content":"                    Duke.list.unmarkTaskDone(Integer.parseInt(args));","lastModifiedDate":"2023-08-21"},{"lineNumber":151,"author":{"gitId":"HugeNoob"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-21"},{"lineNumber":152,"author":{"gitId":"HugeNoob"},"content":"                    throw new DukeInvalidArgumentException(\"Stop trolling me bro. Please enter a numeric index.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":153,"author":{"gitId":"HugeNoob"},"content":"                }","lastModifiedDate":"2023-08-21"},{"lineNumber":154,"author":{"gitId":"HugeNoob"},"content":"                break;","lastModifiedDate":"2023-08-21"},{"lineNumber":155,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":156,"author":{"gitId":"HugeNoob"},"content":"            case ADD_TODO:","lastModifiedDate":"2023-08-21"},{"lineNumber":157,"author":{"gitId":"HugeNoob"},"content":"                Duke.list.addTask(TaskType.TODO, args);","lastModifiedDate":"2023-08-21"},{"lineNumber":158,"author":{"gitId":"HugeNoob"},"content":"                break;","lastModifiedDate":"2023-08-21"},{"lineNumber":159,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":160,"author":{"gitId":"HugeNoob"},"content":"            case ADD_DEADLINE:","lastModifiedDate":"2023-08-21"},{"lineNumber":161,"author":{"gitId":"HugeNoob"},"content":"                Duke.list.addTask(TaskType.DEADLINE, args);","lastModifiedDate":"2023-08-21"},{"lineNumber":162,"author":{"gitId":"HugeNoob"},"content":"                break;","lastModifiedDate":"2023-08-21"},{"lineNumber":163,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":164,"author":{"gitId":"HugeNoob"},"content":"            case ADD_EVENT:","lastModifiedDate":"2023-08-21"},{"lineNumber":165,"author":{"gitId":"HugeNoob"},"content":"                Duke.list.addTask(TaskType.EVENT, args);","lastModifiedDate":"2023-08-21"},{"lineNumber":166,"author":{"gitId":"HugeNoob"},"content":"                break;","lastModifiedDate":"2023-08-21"},{"lineNumber":167,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":168,"author":{"gitId":"HugeNoob"},"content":"            case DELETE_TASK:","lastModifiedDate":"2023-08-21"},{"lineNumber":169,"author":{"gitId":"HugeNoob"},"content":"                try {","lastModifiedDate":"2023-08-21"},{"lineNumber":170,"author":{"gitId":"HugeNoob"},"content":"                    Duke.list.deleteTask(Integer.parseInt(args));","lastModifiedDate":"2023-08-21"},{"lineNumber":171,"author":{"gitId":"HugeNoob"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-21"},{"lineNumber":172,"author":{"gitId":"HugeNoob"},"content":"                    throw new DukeInvalidArgumentException(\"Stop trolling me bro. Please enter a numeric index.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":173,"author":{"gitId":"HugeNoob"},"content":"                }","lastModifiedDate":"2023-08-21"},{"lineNumber":174,"author":{"gitId":"HugeNoob"},"content":"                break;","lastModifiedDate":"2023-08-21"},{"lineNumber":175,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":176,"author":{"gitId":"HugeNoob"},"content":"            default:","lastModifiedDate":"2023-08-21"},{"lineNumber":177,"author":{"gitId":"HugeNoob"},"content":"                throw new DukeInvalidCommandException(\"I\u0027m gonna be honest, no idea what you\u0027re saying.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":178,"author":{"gitId":"HugeNoob"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":179,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":180,"author":{"gitId":"HugeNoob"},"content":"        return true;","lastModifiedDate":"2023-08-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"HugeNoob":177,"-":5}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HugeNoob"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"HugeNoob"},"content":" * A generic exception class for Duke-related exceptions.","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"HugeNoob"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"HugeNoob"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"HugeNoob"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"HugeNoob"},"content":"     * Creates a new DukeException object.","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"HugeNoob"},"content":"     * ","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"HugeNoob"},"content":"     * @param message The message of the exception. ","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"HugeNoob"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"HugeNoob"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"HugeNoob"},"content":"        super(message);","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"HugeNoob"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"HugeNoob":14}},{"path":"src/main/java/DukeInvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HugeNoob"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"HugeNoob"},"content":" * Exception thrown when the user inputs an invalid argument to any command.","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"HugeNoob"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"HugeNoob"},"content":"public class DukeInvalidArgumentException extends DukeException {","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"HugeNoob"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"HugeNoob"},"content":"     * Creates a new DukeInvalidArgumentException object.","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"HugeNoob"},"content":"     * ","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"HugeNoob"},"content":"     * @param message The message of the exception.","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"HugeNoob"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"HugeNoob"},"content":"    public DukeInvalidArgumentException(String message) {","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"HugeNoob"},"content":"        super(message);","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"HugeNoob"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"HugeNoob":14}},{"path":"src/main/java/DukeInvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HugeNoob"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"HugeNoob"},"content":" * Exception thrown when an invalid command is given.","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"HugeNoob"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"HugeNoob"},"content":"public class DukeInvalidCommandException extends DukeException {","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"HugeNoob"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"HugeNoob"},"content":"     * Creates a new DukeInvalidCommandException object.","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"HugeNoob"},"content":"     * ","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"HugeNoob"},"content":"     * @param message The message of the exception.","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"HugeNoob"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"HugeNoob"},"content":"    public DukeInvalidCommandException(String message) {","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"HugeNoob"},"content":"        super(message);","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"HugeNoob"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"HugeNoob":14}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HugeNoob"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"HugeNoob"},"content":" * A task that starts at a specific time and ends at a specific time.","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"HugeNoob"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"HugeNoob"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"HugeNoob"},"content":"    // The start time of the event.","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"HugeNoob"},"content":"    private String startTime;","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"HugeNoob"},"content":"    // The end time of the event.","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"HugeNoob"},"content":"    private String endTime;","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"HugeNoob"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"HugeNoob"},"content":"     * Creates a new Event object.","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"HugeNoob"},"content":"     * ","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"HugeNoob"},"content":"     * @param description The description of the event.","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"HugeNoob"},"content":"     * @param startTime The start time of the event.","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"HugeNoob"},"content":"     * @param endTime The end time of the event.","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"HugeNoob"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"HugeNoob"},"content":"    public Event(String description, String startTime, String endTime) {","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"HugeNoob"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"HugeNoob"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"HugeNoob"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"HugeNoob"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"HugeNoob"},"content":"     * Returns the string representation of the event.","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"HugeNoob"},"content":"     * ","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"HugeNoob"},"content":"     * @return The string representation of the event. ","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"HugeNoob"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"HugeNoob"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"HugeNoob"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"HugeNoob"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), startTime, endTime);","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"HugeNoob"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"HugeNoob":34}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HugeNoob"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"HugeNoob"},"content":" * An abstract class that represents a task.","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"HugeNoob"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"HugeNoob"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"HugeNoob"},"content":"    // The description of the task.","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"HugeNoob"},"content":"    private String description;","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"HugeNoob"},"content":"    // Whether the task is done.","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"HugeNoob"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"HugeNoob"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"HugeNoob"},"content":"     * Creates a new Task object.","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"HugeNoob"},"content":"     * ","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"HugeNoob"},"content":"     * @param input The description of the task.","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"HugeNoob"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"HugeNoob"},"content":"    public Task(String input) {","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"HugeNoob"},"content":"        this.description \u003d input;","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"HugeNoob"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"HugeNoob"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"HugeNoob"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"HugeNoob"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"HugeNoob"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"HugeNoob"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"HugeNoob"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"HugeNoob"},"content":"     * Unmarks the task as not done.","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"HugeNoob"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"HugeNoob"},"content":"    public void unmarkDone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"HugeNoob"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"HugeNoob"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"HugeNoob"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"HugeNoob"},"content":"     * ","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"HugeNoob"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"HugeNoob"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"HugeNoob"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"HugeNoob"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"HugeNoob"},"content":"        return (this.isDone ? \"[X]\" : \"[ ]\") + \" \" + this.description;","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"HugeNoob"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"HugeNoob":45}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HugeNoob"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"HugeNoob"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"HugeNoob"},"content":" * The task list is used to store the user\u0027s tasks.","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"HugeNoob"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"HugeNoob"},"content":"public class TaskList {","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"HugeNoob"},"content":"    // The divider is used to separate the user\u0027s input from LilBro\u0027s output.","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"HugeNoob"},"content":"    private static final String DIVIDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"HugeNoob"},"content":"    // The list is used to store the user\u0027s tasks.","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"HugeNoob"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"HugeNoob"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"HugeNoob"},"content":"     * Creates a new TaskList object.","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"HugeNoob"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"HugeNoob"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"HugeNoob"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"HugeNoob"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"HugeNoob"},"content":"     * Adds a new task to the list.","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"HugeNoob"},"content":"     * ","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"HugeNoob"},"content":"     * @param type       The type of task to be added.","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"HugeNoob"},"content":"     * @param taskString Information about the task to be added.","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"HugeNoob"},"content":"     * @throws DukeInvalidArgumentException If the given taskString is invalid.","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"HugeNoob"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"HugeNoob"},"content":"    public void addTask(TaskType type, String taskString) throws DukeInvalidArgumentException {","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"HugeNoob"},"content":"        switch (type) {","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"HugeNoob"},"content":"            case TODO:","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"HugeNoob"},"content":"                if (taskString.equals(\"\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"HugeNoob"},"content":"                    throw new DukeInvalidArgumentException(\"You didn\u0027t specify a task to do. \" +","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"HugeNoob"},"content":"                            \"Check that you\u0027re doing \\\"todo {description}\\\".\");","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"HugeNoob"},"content":"                }","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"HugeNoob"},"content":"                this.list.add(new ToDo(taskString));","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"HugeNoob"},"content":"                break;","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"HugeNoob"},"content":"            case DEADLINE:","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"HugeNoob"},"content":"                try {","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"HugeNoob"},"content":"                    String[] deadlineParts \u003d taskString.split(\" /by \", 2);","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"HugeNoob"},"content":"                    this.list.add(new Deadline(deadlineParts[0].trim(), deadlineParts[1].trim()));","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"HugeNoob"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"HugeNoob"},"content":"                    throw new DukeInvalidArgumentException(","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"HugeNoob"},"content":"                            \"Your deadline seems to be formatted wrongly. \" +","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"HugeNoob"},"content":"                                    \"Check that you\u0027re doing: \\\"deadline {description} \\\\by {date}\\\".\");","lastModifiedDate":"2023-08-21"},{"lineNumber":46,"author":{"gitId":"HugeNoob"},"content":"                }","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"HugeNoob"},"content":"                break;","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"HugeNoob"},"content":"            case EVENT:","lastModifiedDate":"2023-08-21"},{"lineNumber":50,"author":{"gitId":"HugeNoob"},"content":"                try {","lastModifiedDate":"2023-08-21"},{"lineNumber":51,"author":{"gitId":"HugeNoob"},"content":"                    String[] eventParts \u003d taskString.split(\" /from \", 2);","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"HugeNoob"},"content":"                    String description \u003d eventParts[0].trim();","lastModifiedDate":"2023-08-21"},{"lineNumber":53,"author":{"gitId":"HugeNoob"},"content":"                    String[] eventTimeParts \u003d eventParts[1].trim().split(\" /to \", 2);","lastModifiedDate":"2023-08-21"},{"lineNumber":54,"author":{"gitId":"HugeNoob"},"content":"                    this.list.add(new Event(description, eventTimeParts[0].trim(), eventTimeParts[1].trim()));","lastModifiedDate":"2023-08-21"},{"lineNumber":55,"author":{"gitId":"HugeNoob"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"HugeNoob"},"content":"                    throw new DukeInvalidArgumentException(","lastModifiedDate":"2023-08-21"},{"lineNumber":57,"author":{"gitId":"HugeNoob"},"content":"                            \"Your event seems to be formatted wrongly. \" +","lastModifiedDate":"2023-08-21"},{"lineNumber":58,"author":{"gitId":"HugeNoob"},"content":"                                    \"Check that you\u0027re doing: \\\"event {description} \\\\from {start} \\\\to {end}\\\".\");","lastModifiedDate":"2023-08-21"},{"lineNumber":59,"author":{"gitId":"HugeNoob"},"content":"                }","lastModifiedDate":"2023-08-21"},{"lineNumber":60,"author":{"gitId":"HugeNoob"},"content":"                break;","lastModifiedDate":"2023-08-21"},{"lineNumber":61,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":62,"author":{"gitId":"HugeNoob"},"content":"            default:","lastModifiedDate":"2023-08-21"},{"lineNumber":63,"author":{"gitId":"HugeNoob"},"content":"                throw new DukeInvalidArgumentException(\"I\u0027m gonna be honest, no idea what you\u0027re saying.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":64,"author":{"gitId":"HugeNoob"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":65,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":66,"author":{"gitId":"HugeNoob"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-08-21"},{"lineNumber":67,"author":{"gitId":"HugeNoob"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":68,"author":{"gitId":"HugeNoob"},"content":"        System.out.println(this.list.get(this.list.size() - 1));","lastModifiedDate":"2023-08-21"},{"lineNumber":69,"author":{"gitId":"HugeNoob"},"content":"        System.out.println(\"Now you have \" + this.list.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":70,"author":{"gitId":"HugeNoob"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-08-21"},{"lineNumber":71,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":72,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":73,"author":{"gitId":"HugeNoob"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":74,"author":{"gitId":"HugeNoob"},"content":"     * Marks specified task as done.","lastModifiedDate":"2023-08-21"},{"lineNumber":75,"author":{"gitId":"HugeNoob"},"content":"     * ","lastModifiedDate":"2023-08-21"},{"lineNumber":76,"author":{"gitId":"HugeNoob"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2023-08-21"},{"lineNumber":77,"author":{"gitId":"HugeNoob"},"content":"     * @throws DukeInvalidArgumentException If the index is invalid.","lastModifiedDate":"2023-08-21"},{"lineNumber":78,"author":{"gitId":"HugeNoob"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":79,"author":{"gitId":"HugeNoob"},"content":"    public void markTaskDone(int index) throws DukeInvalidArgumentException {","lastModifiedDate":"2023-08-21"},{"lineNumber":80,"author":{"gitId":"HugeNoob"},"content":"        if (index \u003c\u003d 0 || index \u003e this.list.size()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":81,"author":{"gitId":"HugeNoob"},"content":"            throw new DukeInvalidArgumentException(","lastModifiedDate":"2023-08-21"},{"lineNumber":82,"author":{"gitId":"HugeNoob"},"content":"                    \"You\u0027ve specified an invalid task number. Check your task list again with the \\\"list\\\" command.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":83,"author":{"gitId":"HugeNoob"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":84,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":85,"author":{"gitId":"HugeNoob"},"content":"        this.list.get(index - 1).markDone();","lastModifiedDate":"2023-08-21"},{"lineNumber":86,"author":{"gitId":"HugeNoob"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-08-21"},{"lineNumber":87,"author":{"gitId":"HugeNoob"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":88,"author":{"gitId":"HugeNoob"},"content":"        System.out.println(this.list.get(index - 1));","lastModifiedDate":"2023-08-21"},{"lineNumber":89,"author":{"gitId":"HugeNoob"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-08-21"},{"lineNumber":90,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":91,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":92,"author":{"gitId":"HugeNoob"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":93,"author":{"gitId":"HugeNoob"},"content":"     * Unmarks specified task as not done.","lastModifiedDate":"2023-08-21"},{"lineNumber":94,"author":{"gitId":"HugeNoob"},"content":"     * ","lastModifiedDate":"2023-08-21"},{"lineNumber":95,"author":{"gitId":"HugeNoob"},"content":"     * @param index The index of the task to be unmarked as not done.","lastModifiedDate":"2023-08-21"},{"lineNumber":96,"author":{"gitId":"HugeNoob"},"content":"     * @throws DukeInvalidArgumentException If the index is invalid.","lastModifiedDate":"2023-08-21"},{"lineNumber":97,"author":{"gitId":"HugeNoob"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":98,"author":{"gitId":"HugeNoob"},"content":"    public void unmarkTaskDone(int index) throws DukeInvalidArgumentException {","lastModifiedDate":"2023-08-21"},{"lineNumber":99,"author":{"gitId":"HugeNoob"},"content":"        if (index \u003c\u003d 0 || index \u003e this.list.size()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":100,"author":{"gitId":"HugeNoob"},"content":"            throw new DukeInvalidArgumentException(","lastModifiedDate":"2023-08-21"},{"lineNumber":101,"author":{"gitId":"HugeNoob"},"content":"                    \"You\u0027ve specified an invalid task number. Check your task list again with the \\\"list\\\" command.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":102,"author":{"gitId":"HugeNoob"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":103,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":104,"author":{"gitId":"HugeNoob"},"content":"        this.list.get(index - 1).unmarkDone();","lastModifiedDate":"2023-08-21"},{"lineNumber":105,"author":{"gitId":"HugeNoob"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-08-21"},{"lineNumber":106,"author":{"gitId":"HugeNoob"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":107,"author":{"gitId":"HugeNoob"},"content":"        System.out.println(this.list.get(index - 1));","lastModifiedDate":"2023-08-21"},{"lineNumber":108,"author":{"gitId":"HugeNoob"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-08-21"},{"lineNumber":109,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":110,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":111,"author":{"gitId":"HugeNoob"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":112,"author":{"gitId":"HugeNoob"},"content":"     * Deletes specified task.","lastModifiedDate":"2023-08-21"},{"lineNumber":113,"author":{"gitId":"HugeNoob"},"content":"     * ","lastModifiedDate":"2023-08-21"},{"lineNumber":114,"author":{"gitId":"HugeNoob"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2023-08-21"},{"lineNumber":115,"author":{"gitId":"HugeNoob"},"content":"     * @throws DukeInvalidArgumentException If the index is invalid.","lastModifiedDate":"2023-08-21"},{"lineNumber":116,"author":{"gitId":"HugeNoob"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":117,"author":{"gitId":"HugeNoob"},"content":"    public void deleteTask(int index) throws DukeInvalidArgumentException {","lastModifiedDate":"2023-08-21"},{"lineNumber":118,"author":{"gitId":"HugeNoob"},"content":"        if (index \u003c\u003d 0 || index \u003e this.list.size()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":119,"author":{"gitId":"HugeNoob"},"content":"            throw new DukeInvalidArgumentException(","lastModifiedDate":"2023-08-21"},{"lineNumber":120,"author":{"gitId":"HugeNoob"},"content":"                    \"You\u0027ve specified an invalid task number. Check your task list again with the \\\"list\\\" command.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":121,"author":{"gitId":"HugeNoob"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":122,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":123,"author":{"gitId":"HugeNoob"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-08-21"},{"lineNumber":124,"author":{"gitId":"HugeNoob"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":125,"author":{"gitId":"HugeNoob"},"content":"        System.out.println(this.list.get(index - 1));","lastModifiedDate":"2023-08-21"},{"lineNumber":126,"author":{"gitId":"HugeNoob"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-08-21"},{"lineNumber":127,"author":{"gitId":"HugeNoob"},"content":"        this.list.remove(index - 1);","lastModifiedDate":"2023-08-21"},{"lineNumber":128,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":129,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":130,"author":{"gitId":"HugeNoob"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":131,"author":{"gitId":"HugeNoob"},"content":"     * Lists all tasks.","lastModifiedDate":"2023-08-21"},{"lineNumber":132,"author":{"gitId":"HugeNoob"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":133,"author":{"gitId":"HugeNoob"},"content":"    public void listTasks() {","lastModifiedDate":"2023-08-21"},{"lineNumber":134,"author":{"gitId":"HugeNoob"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-08-21"},{"lineNumber":135,"author":{"gitId":"HugeNoob"},"content":"        if (this.list.isEmpty()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":136,"author":{"gitId":"HugeNoob"},"content":"            System.out.println(\"You have no tasks so far.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":137,"author":{"gitId":"HugeNoob"},"content":"        } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":138,"author":{"gitId":"HugeNoob"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":139,"author":{"gitId":"HugeNoob"},"content":"            for (int i \u003d 0; i \u003c this.list.size(); i++) {","lastModifiedDate":"2023-08-21"},{"lineNumber":140,"author":{"gitId":"HugeNoob"},"content":"                System.out.println((i + 1) + \". \" + this.list.get(i));","lastModifiedDate":"2023-08-21"},{"lineNumber":141,"author":{"gitId":"HugeNoob"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":142,"author":{"gitId":"HugeNoob"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":143,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":144,"author":{"gitId":"HugeNoob"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-08-21"},{"lineNumber":145,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":146,"author":{"gitId":"HugeNoob"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"HugeNoob":146}},{"path":"src/main/java/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HugeNoob"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"HugeNoob"},"content":" * Represents different types of tasks.","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"HugeNoob"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"HugeNoob"},"content":"public enum TaskType {","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"HugeNoob"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"HugeNoob"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"HugeNoob"},"content":"    EVENT(\"event\");","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"HugeNoob"},"content":"    // The string representation of the command.","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"HugeNoob"},"content":"    private final String type;","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"HugeNoob"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"HugeNoob"},"content":"     * The constructor is used to create a new command with the given value.","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"HugeNoob"},"content":"     *","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"HugeNoob"},"content":"     * @param value The string representation of the command.","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"HugeNoob"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"HugeNoob"},"content":"    private TaskType(String type) {","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"HugeNoob"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"HugeNoob"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"HugeNoob":20}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HugeNoob"},"content":"/*","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"HugeNoob"},"content":" * Represents tasks without any date/time attached to it.","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"HugeNoob"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"HugeNoob"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"HugeNoob"},"content":"    /*","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"HugeNoob"},"content":"     * Creates a new ToDo object.","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"HugeNoob"},"content":"     * ","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"HugeNoob"},"content":"     * @param description The description of the ToDo.","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"HugeNoob"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"HugeNoob"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"HugeNoob"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"HugeNoob"},"content":"    /*","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"HugeNoob"},"content":"     * Returns the string representation of the ToDo.","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"HugeNoob"},"content":"     * ","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"HugeNoob"},"content":"     * @return The string representation of the ToDo. ","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"HugeNoob"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"HugeNoob"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"HugeNoob"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"HugeNoob"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"HugeNoob"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"HugeNoob":24}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HugeNoob"},"content":"yo","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"HugeNoob"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"HugeNoob"},"content":"delete 1","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"HugeNoob"},"content":"todo","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"HugeNoob"},"content":"todo     ","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"HugeNoob"},"content":"todo   read book","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"HugeNoob"},"content":"deadline","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"HugeNoob"},"content":"deadline /by ","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"HugeNoob"},"content":"deadline   /by today","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"HugeNoob"},"content":"deadline return book /by      ","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"HugeNoob"},"content":"deadline          what        /by         yes         ","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"HugeNoob"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"HugeNoob"},"content":"event","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"HugeNoob"},"content":"event X /from Y","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"HugeNoob"},"content":"event X /to Y","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"HugeNoob"},"content":"event /from X /to Y","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"HugeNoob"},"content":"event    bruh   /from    today    /to   ytd","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"HugeNoob"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"HugeNoob"},"content":"todo join sports club","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"HugeNoob"},"content":"todo borrow book","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"HugeNoob"},"content":"mark 1","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"HugeNoob"},"content":"mark 4","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"HugeNoob"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"HugeNoob"},"content":"unmark 1","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"HugeNoob"},"content":"mark one","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"HugeNoob"},"content":"mark -1","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"HugeNoob"},"content":"mark 999","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"HugeNoob"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"HugeNoob"},"content":"delete 5","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"HugeNoob"},"content":"delete 5","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"HugeNoob"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"HugeNoob"},"content":"bye","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"HugeNoob":32}}]
