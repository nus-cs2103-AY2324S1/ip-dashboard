[{"path":"src/main/java/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"  private LocalDateTime deadline;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"  public DeadlineTask(String description, String deadline) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"    super(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"    try {","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"      this.deadline \u003d LocalDateTime.parse(deadline, DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"    } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"      throw new DukeException(\"Failed to parse datetime.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"  @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"  public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"    String deadlineString \u003d this.deadline.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"    return String.format(\"[D]%s (by: %s)\", super.toString(), deadlineString);","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"dishenggg":22}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"  private static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"  private static DukeIO storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"  private static final Pattern commandPattern \u003d Pattern.compile(\"^(\\\\S+)\\\\s*\");","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"  enum Command {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"    LIST,","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"    TODO,","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"    DEADLINE,","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"    EVENT,","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"    MARK,","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"    UNMARK,","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"    DELETE,","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"    BYE,","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"    INVALID","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"    Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"    init();","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"    while (true) {","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"      String input \u003d scanner.nextLine();","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"      Command cmd \u003d parseCommand(input);","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"      try {","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"dishenggg"},"content":"        switch (cmd) {","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"dishenggg"},"content":"          case BYE:","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"dishenggg"},"content":"            scanner.close();","lastModifiedDate":"2023-08-20"},{"lineNumber":35,"author":{"gitId":"dishenggg"},"content":"            exit();","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"dishenggg"},"content":"            return;","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"dishenggg"},"content":"          case LIST:","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"dishenggg"},"content":"            System.out.println(listString());","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"dishenggg"},"content":"            break;","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"dishenggg"},"content":"          case MARK:","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"dishenggg"},"content":"            handleMark(input);","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"dishenggg"},"content":"            break;","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"dishenggg"},"content":"          case UNMARK:","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"dishenggg"},"content":"            handleUnmark(input);","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"dishenggg"},"content":"            break;","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"dishenggg"},"content":"          case TODO:","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"dishenggg"},"content":"            handleTodo(input);","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"dishenggg"},"content":"            break;","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"dishenggg"},"content":"          case DEADLINE:","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"dishenggg"},"content":"            handleDeadline(input);","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"dishenggg"},"content":"            break;","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"dishenggg"},"content":"          case EVENT:","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"dishenggg"},"content":"            handleEvent(input);","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"dishenggg"},"content":"            break;","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"dishenggg"},"content":"          case DELETE:","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"dishenggg"},"content":"            handleDelete(input);","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"dishenggg"},"content":"            break;","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"dishenggg"},"content":"          default:","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"dishenggg"},"content":"            handleInvalidCommands();","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"dishenggg"},"content":"      } catch (IllegalArgumentException | DukeException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"dishenggg"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"dishenggg"},"content":"      }","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"dishenggg"},"content":"      System.out.println();","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"dishenggg"},"content":"  private static Command parseCommand(String input) {","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"dishenggg"},"content":"    Matcher m \u003d commandPattern.matcher(input);","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"dishenggg"},"content":"    String commandString \u003d \"\";","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"dishenggg"},"content":"    if (m.find()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"dishenggg"},"content":"      commandString \u003d m.group(1).toUpperCase();","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"dishenggg"},"content":"    try {","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"dishenggg"},"content":"      return Command.valueOf(commandString);","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"dishenggg"},"content":"    } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":78,"author":{"gitId":"dishenggg"},"content":"      return Command.INVALID;","lastModifiedDate":"2023-08-23"},{"lineNumber":79,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":80,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"dishenggg"},"content":"  private static void handleMark(String input) throws DukeIOBException {","lastModifiedDate":"2023-08-26"},{"lineNumber":83,"author":{"gitId":"dishenggg"},"content":"    Pattern validPattern \u003d Pattern.compile(\"^mark\\\\s+(\\\\d+)$\");","lastModifiedDate":"2023-08-23"},{"lineNumber":84,"author":{"gitId":"dishenggg"},"content":"    if (!validPattern.matcher(input).find()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":85,"author":{"gitId":"dishenggg"},"content":"      throw new IllegalArgumentException(","lastModifiedDate":"2023-08-23"},{"lineNumber":86,"author":{"gitId":"dishenggg"},"content":"          \"Invalid arguments for mark\\nPlease follow: mark \u003ctask_num\u003e\");","lastModifiedDate":"2023-08-23"},{"lineNumber":87,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":88,"author":{"gitId":"dishenggg"},"content":"    int idx \u003d parseIndex(input);","lastModifiedDate":"2023-08-23"},{"lineNumber":89,"author":{"gitId":"dishenggg"},"content":"    if (idx \u003c 0 || idx \u003e tasks.size()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":90,"author":{"gitId":"dishenggg"},"content":"      throw new DukeIOBException(idx);","lastModifiedDate":"2023-08-23"},{"lineNumber":91,"author":{"gitId":"dishenggg"},"content":"    } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":92,"author":{"gitId":"dishenggg"},"content":"      tasks.get(idx - 1).markAsDone();","lastModifiedDate":"2023-08-26"},{"lineNumber":93,"author":{"gitId":"dishenggg"},"content":"      System.out.printf(\"Nice! I\u0027ve marked this task as done:%n %s%n\", tasks.get(idx - 1));","lastModifiedDate":"2023-08-26"},{"lineNumber":94,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":95,"author":{"gitId":"dishenggg"},"content":"    storage.saveToFile(tasks);","lastModifiedDate":"2023-08-26"},{"lineNumber":96,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-23"},{"lineNumber":97,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":98,"author":{"gitId":"dishenggg"},"content":"  private static void handleUnmark(String input) throws DukeIOBException {","lastModifiedDate":"2023-08-26"},{"lineNumber":99,"author":{"gitId":"dishenggg"},"content":"    Pattern validPattern \u003d Pattern.compile(\"^unmark\\\\s+(\\\\d+)$\");","lastModifiedDate":"2023-08-23"},{"lineNumber":100,"author":{"gitId":"dishenggg"},"content":"    if (!validPattern.matcher(input).find()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":101,"author":{"gitId":"dishenggg"},"content":"      throw new IllegalArgumentException(","lastModifiedDate":"2023-08-23"},{"lineNumber":102,"author":{"gitId":"dishenggg"},"content":"          \"Invalid arguments for unmark\\nPlease follow: unmark \u003ctask_num\u003e\");","lastModifiedDate":"2023-08-23"},{"lineNumber":103,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":104,"author":{"gitId":"dishenggg"},"content":"    int idx \u003d parseIndex(input);","lastModifiedDate":"2023-08-23"},{"lineNumber":105,"author":{"gitId":"dishenggg"},"content":"    if (idx \u003c\u003d 0 || idx \u003e tasks.size()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":106,"author":{"gitId":"dishenggg"},"content":"      throw new DukeIOBException(idx);","lastModifiedDate":"2023-08-23"},{"lineNumber":107,"author":{"gitId":"dishenggg"},"content":"    } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":108,"author":{"gitId":"dishenggg"},"content":"      tasks.get(idx - 1).markAsNotDone();","lastModifiedDate":"2023-08-26"},{"lineNumber":109,"author":{"gitId":"dishenggg"},"content":"      System.out.printf(\"OK! I\u0027ve marked this task as not done:%n %s%n\", tasks.get(idx - 1));","lastModifiedDate":"2023-08-26"},{"lineNumber":110,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":111,"author":{"gitId":"dishenggg"},"content":"    storage.saveToFile(tasks);","lastModifiedDate":"2023-08-26"},{"lineNumber":112,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-23"},{"lineNumber":113,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":114,"author":{"gitId":"dishenggg"},"content":"  private static void handleDelete(String input) throws DukeIOBException {","lastModifiedDate":"2023-08-26"},{"lineNumber":115,"author":{"gitId":"dishenggg"},"content":"    Pattern validPattern \u003d Pattern.compile(\"^delete\\\\s+(\\\\d+)$\");","lastModifiedDate":"2023-08-23"},{"lineNumber":116,"author":{"gitId":"dishenggg"},"content":"    if (!validPattern.matcher(input).find()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":117,"author":{"gitId":"dishenggg"},"content":"      throw new IllegalArgumentException(","lastModifiedDate":"2023-08-23"},{"lineNumber":118,"author":{"gitId":"dishenggg"},"content":"          \"Invalid arguments for delete\\nPlease follow: delete \u003ctask_num\u003e\");","lastModifiedDate":"2023-08-23"},{"lineNumber":119,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":120,"author":{"gitId":"dishenggg"},"content":"    int idx \u003d parseIndex(input);","lastModifiedDate":"2023-08-23"},{"lineNumber":121,"author":{"gitId":"dishenggg"},"content":"    if (idx \u003c\u003d 0 || idx \u003e tasks.size()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":122,"author":{"gitId":"dishenggg"},"content":"      throw new DukeIOBException(idx);","lastModifiedDate":"2023-08-23"},{"lineNumber":123,"author":{"gitId":"dishenggg"},"content":"    } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":124,"author":{"gitId":"dishenggg"},"content":"      Task deletedTask \u003d tasks.get(idx - 1);","lastModifiedDate":"2023-08-26"},{"lineNumber":125,"author":{"gitId":"dishenggg"},"content":"      tasks.remove(idx - 1);","lastModifiedDate":"2023-08-26"},{"lineNumber":126,"author":{"gitId":"dishenggg"},"content":"      System.out.printf(","lastModifiedDate":"2023-08-23"},{"lineNumber":127,"author":{"gitId":"dishenggg"},"content":"          \"Noted. I\u0027ve removed this task:%n %s%nNow you have %d tasks in the list.%n\",","lastModifiedDate":"2023-08-23"},{"lineNumber":128,"author":{"gitId":"dishenggg"},"content":"          deletedTask, tasks.size());","lastModifiedDate":"2023-08-26"},{"lineNumber":129,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":130,"author":{"gitId":"dishenggg"},"content":"    storage.saveToFile(tasks);","lastModifiedDate":"2023-08-26"},{"lineNumber":131,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-23"},{"lineNumber":132,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":133,"author":{"gitId":"dishenggg"},"content":"  private static void handleTodo(String input) {","lastModifiedDate":"2023-08-23"},{"lineNumber":134,"author":{"gitId":"dishenggg"},"content":"    Pattern p \u003d Pattern.compile(\"^todo\\\\s+(\\\\S.+)\");","lastModifiedDate":"2023-08-26"},{"lineNumber":135,"author":{"gitId":"dishenggg"},"content":"    Matcher m \u003d p.matcher(input);","lastModifiedDate":"2023-08-23"},{"lineNumber":136,"author":{"gitId":"dishenggg"},"content":"    if (m.find()) {","lastModifiedDate":"2023-08-20"},{"lineNumber":137,"author":{"gitId":"dishenggg"},"content":"      TodoTask newTask \u003d new TodoTask(m.group(1));","lastModifiedDate":"2023-08-20"},{"lineNumber":138,"author":{"gitId":"dishenggg"},"content":"      addTask(newTask);","lastModifiedDate":"2023-08-20"},{"lineNumber":139,"author":{"gitId":"dishenggg"},"content":"    } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":140,"author":{"gitId":"dishenggg"},"content":"      throw new IllegalArgumentException(\"Invalid arguments for todo\\nPlease follow: todo \u003ctask\u003e\");","lastModifiedDate":"2023-08-23"},{"lineNumber":141,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":142,"author":{"gitId":"dishenggg"},"content":"    storage.saveToFile(tasks);","lastModifiedDate":"2023-08-26"},{"lineNumber":143,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-23"},{"lineNumber":144,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":145,"author":{"gitId":"dishenggg"},"content":"  private static void handleDeadline(String input) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":146,"author":{"gitId":"dishenggg"},"content":"    Pattern p \u003d Pattern.compile(\"^deadline\\\\s+(\\\\S.+)\\\\s+/by\\\\s+(\\\\d{1,2}/\\\\d{1,2}/\\\\d{4} \\\\d{4})\");","lastModifiedDate":"2023-08-27"},{"lineNumber":147,"author":{"gitId":"dishenggg"},"content":"    Matcher m \u003d p.matcher(input);","lastModifiedDate":"2023-08-23"},{"lineNumber":148,"author":{"gitId":"dishenggg"},"content":"    if (!m.find()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":149,"author":{"gitId":"dishenggg"},"content":"      throw new IllegalArgumentException(","lastModifiedDate":"2023-08-23"},{"lineNumber":150,"author":{"gitId":"dishenggg"},"content":"          \"Invalid arguments for deadline\\nPlease follow: deadline \u003ctask\u003e /by \u003cd/M/yyyy HHmm\u003e\");","lastModifiedDate":"2023-08-27"},{"lineNumber":151,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":152,"author":{"gitId":"dishenggg"},"content":"    DeadlineTask newTask \u003d new DeadlineTask(m.group(1), m.group(2));","lastModifiedDate":"2023-08-27"},{"lineNumber":153,"author":{"gitId":"dishenggg"},"content":"    addTask(newTask);","lastModifiedDate":"2023-08-27"},{"lineNumber":154,"author":{"gitId":"dishenggg"},"content":"    storage.saveToFile(tasks);","lastModifiedDate":"2023-08-26"},{"lineNumber":155,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":156,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":157,"author":{"gitId":"dishenggg"},"content":"  private static void handleEvent(String input) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":158,"author":{"gitId":"dishenggg"},"content":"    Pattern p \u003d","lastModifiedDate":"2023-08-27"},{"lineNumber":159,"author":{"gitId":"dishenggg"},"content":"        Pattern.compile(","lastModifiedDate":"2023-08-27"},{"lineNumber":160,"author":{"gitId":"dishenggg"},"content":"            \"^event\\\\s+(\\\\S.+)\\\\s+/from\\\\s+(\\\\d{1,2}/\\\\d{1,2}/\\\\d{4} \\\\d{4})\\\\s+/to\\\\s+(\\\\d{1,2}/\\\\d{1,2}/\\\\d{4} \\\\d{4})\");","lastModifiedDate":"2023-08-27"},{"lineNumber":161,"author":{"gitId":"dishenggg"},"content":"    Matcher m \u003d p.matcher(input);","lastModifiedDate":"2023-08-23"},{"lineNumber":162,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":163,"author":{"gitId":"dishenggg"},"content":"    if (!m.find()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":164,"author":{"gitId":"dishenggg"},"content":"      throw new IllegalArgumentException(","lastModifiedDate":"2023-08-23"},{"lineNumber":165,"author":{"gitId":"dishenggg"},"content":"          \"Invalid arguments for event\\nPlease follow: event \u003ctask\u003e /from \u003cd/M/yyyy HHmm\u003e /to \u003cd/M/yyyy HHmm\u003e\");","lastModifiedDate":"2023-08-27"},{"lineNumber":166,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":167,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":168,"author":{"gitId":"dishenggg"},"content":"    EventTask newTask \u003d new EventTask(m.group(1), m.group(2), m.group(3));","lastModifiedDate":"2023-08-27"},{"lineNumber":169,"author":{"gitId":"dishenggg"},"content":"    addTask(newTask);","lastModifiedDate":"2023-08-27"},{"lineNumber":170,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":171,"author":{"gitId":"dishenggg"},"content":"    storage.saveToFile(tasks);","lastModifiedDate":"2023-08-26"},{"lineNumber":172,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-26"},{"lineNumber":173,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":174,"author":{"gitId":"dishenggg"},"content":"  private static void init() {","lastModifiedDate":"2023-08-26"},{"lineNumber":175,"author":{"gitId":"dishenggg"},"content":"    storage \u003d new DukeIO(\"duke.txt\");","lastModifiedDate":"2023-08-26"},{"lineNumber":176,"author":{"gitId":"dishenggg"},"content":"    try {","lastModifiedDate":"2023-08-26"},{"lineNumber":177,"author":{"gitId":"dishenggg"},"content":"      tasks \u003d storage.readTasks();","lastModifiedDate":"2023-08-26"},{"lineNumber":178,"author":{"gitId":"dishenggg"},"content":"    } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":179,"author":{"gitId":"dishenggg"},"content":"      tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-26"},{"lineNumber":180,"author":{"gitId":"dishenggg"},"content":"    } catch (Exception e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":181,"author":{"gitId":"dishenggg"},"content":"      System.out.println(e);","lastModifiedDate":"2023-08-26"},{"lineNumber":182,"author":{"gitId":"dishenggg"},"content":"      tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-26"},{"lineNumber":183,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":184,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":185,"author":{"gitId":"dishenggg"},"content":"    System.out.println(\"Hello! I\u0027m Duke\\nWhat can i do for you?\\n\");","lastModifiedDate":"2023-08-20"},{"lineNumber":186,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":187,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":188,"author":{"gitId":"dishenggg"},"content":"  private static void exit() {","lastModifiedDate":"2023-08-20"},{"lineNumber":189,"author":{"gitId":"dishenggg"},"content":"    System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-20"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2019-07-29"},{"lineNumber":191,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":192,"author":{"gitId":"dishenggg"},"content":"  private static int parseIndex(String input) {","lastModifiedDate":"2023-08-23"},{"lineNumber":193,"author":{"gitId":"dishenggg"},"content":"    Pattern indexPattern \u003d Pattern.compile(\"(\\\\d+)$\");","lastModifiedDate":"2023-08-23"},{"lineNumber":194,"author":{"gitId":"dishenggg"},"content":"    Matcher m \u003d indexPattern.matcher(input);","lastModifiedDate":"2023-08-20"},{"lineNumber":195,"author":{"gitId":"dishenggg"},"content":"    int res \u003d -1;","lastModifiedDate":"2023-08-23"},{"lineNumber":196,"author":{"gitId":"dishenggg"},"content":"    if (m.find()) {","lastModifiedDate":"2023-08-20"},{"lineNumber":197,"author":{"gitId":"dishenggg"},"content":"      String idx \u003d m.group(1);","lastModifiedDate":"2023-08-20"},{"lineNumber":198,"author":{"gitId":"dishenggg"},"content":"      res \u003d Integer.parseInt(idx);","lastModifiedDate":"2023-08-20"},{"lineNumber":199,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":200,"author":{"gitId":"dishenggg"},"content":"    return res;","lastModifiedDate":"2023-08-20"},{"lineNumber":201,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":202,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":203,"author":{"gitId":"dishenggg"},"content":"  private static void addTask(Task newTask) {","lastModifiedDate":"2023-08-20"},{"lineNumber":204,"author":{"gitId":"dishenggg"},"content":"    tasks.add(newTask);","lastModifiedDate":"2023-08-26"},{"lineNumber":205,"author":{"gitId":"dishenggg"},"content":"    System.out.printf(","lastModifiedDate":"2023-08-20"},{"lineNumber":206,"author":{"gitId":"dishenggg"},"content":"        \"Got it, I\u0027ve added this task:%n %s%nNow you have %d tasks in the list.%n\",","lastModifiedDate":"2023-08-23"},{"lineNumber":207,"author":{"gitId":"dishenggg"},"content":"        newTask, tasks.size());","lastModifiedDate":"2023-08-26"},{"lineNumber":208,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":209,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":210,"author":{"gitId":"dishenggg"},"content":"  private static String listString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":211,"author":{"gitId":"dishenggg"},"content":"    StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-08-20"},{"lineNumber":212,"author":{"gitId":"dishenggg"},"content":"    sb.append(\"Here are your tasks:\\n\");","lastModifiedDate":"2023-08-20"},{"lineNumber":213,"author":{"gitId":"dishenggg"},"content":"    for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-26"},{"lineNumber":214,"author":{"gitId":"dishenggg"},"content":"      sb.append(i + 1);","lastModifiedDate":"2023-08-20"},{"lineNumber":215,"author":{"gitId":"dishenggg"},"content":"      sb.append(\".\");","lastModifiedDate":"2023-08-20"},{"lineNumber":216,"author":{"gitId":"dishenggg"},"content":"      sb.append(tasks.get(i).toString());","lastModifiedDate":"2023-08-26"},{"lineNumber":217,"author":{"gitId":"dishenggg"},"content":"      sb.append(\"\\n\");","lastModifiedDate":"2023-08-20"},{"lineNumber":218,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":219,"author":{"gitId":"dishenggg"},"content":"    sb.setLength(sb.length() - 1);","lastModifiedDate":"2023-08-23"},{"lineNumber":220,"author":{"gitId":"dishenggg"},"content":"    return sb.toString();","lastModifiedDate":"2023-08-20"},{"lineNumber":221,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":222,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":223,"author":{"gitId":"dishenggg"},"content":"  private static void handleInvalidCommands() {","lastModifiedDate":"2023-08-23"},{"lineNumber":224,"author":{"gitId":"dishenggg"},"content":"    StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-08-23"},{"lineNumber":225,"author":{"gitId":"dishenggg"},"content":"    for (Command cmd : Command.values()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":226,"author":{"gitId":"dishenggg"},"content":"      if (Command.INVALID.equals(cmd)) {","lastModifiedDate":"2023-08-23"},{"lineNumber":227,"author":{"gitId":"dishenggg"},"content":"        continue;","lastModifiedDate":"2023-08-23"},{"lineNumber":228,"author":{"gitId":"dishenggg"},"content":"      }","lastModifiedDate":"2023-08-23"},{"lineNumber":229,"author":{"gitId":"dishenggg"},"content":"      sb.append(cmd.toString().toLowerCase());","lastModifiedDate":"2023-08-23"},{"lineNumber":230,"author":{"gitId":"dishenggg"},"content":"      sb.append(\", \");","lastModifiedDate":"2023-08-23"},{"lineNumber":231,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":232,"author":{"gitId":"dishenggg"},"content":"    sb.setLength(sb.length() - 2);","lastModifiedDate":"2023-08-23"},{"lineNumber":233,"author":{"gitId":"dishenggg"},"content":"    System.out.printf(\"Invalid Input%nCommands: %s%n\", sb);","lastModifiedDate":"2023-08-23"},{"lineNumber":234,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"dishenggg":230,"-":5}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"  public DukeException(String error) {","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"    super(error);","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"dishenggg":5}},{"path":"src/main/java/DukeIO.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"import java.util.List;","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"public class DukeIO {","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"  private final Path taskFilePath;","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"  private final Path dukeDir;","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"  public DukeIO(String fileName) {","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"    String home \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"    this.dukeDir \u003d Paths.get(home, \"duke\");","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"    this.taskFilePath \u003d Paths.get(home, \"duke\", fileName);","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"    if (!Files.exists(dukeDir)) {","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"      try {","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"        Files.createDirectories(dukeDir);","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"      } catch (IOException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"        System.out.println(\"Failed to create duke directory\");","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"      }","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"  private static final Pattern taskPattern \u003d Pattern.compile(\"^\\\\[([TDE])\\\\]\\\\[[X\\\\s]\\\\]\\\\s(.+)\");","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"dishenggg"},"content":"  private static final Pattern todoPattern \u003d Pattern.compile(\"^\\\\[T\\\\]\\\\[[X\\\\s]\\\\]\\\\s+(.+)$\");","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"dishenggg"},"content":"  private static final Pattern deadlinePattern \u003d","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"dishenggg"},"content":"      Pattern.compile(\"^\\\\[D\\\\]\\\\[[X\\\\s]\\\\]\\\\s+(.+)\\\\s+\\\\(by:\\\\s+(.+)\\\\)$\");","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"dishenggg"},"content":"  private static final Pattern eventPattern \u003d","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"dishenggg"},"content":"      Pattern.compile(\"^\\\\[E\\\\]\\\\[[X\\\\s]\\\\]\\\\s+(.+)\\\\s+\\\\(from:\\\\s+(.+)\\\\s+to:\\\\s+(.+)\\\\)$\");","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"dishenggg"},"content":"  private void handleTodo(String input, ArrayList\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"dishenggg"},"content":"    Matcher m \u003d todoPattern.matcher(input);","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"dishenggg"},"content":"    if (m.find()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"dishenggg"},"content":"      TodoTask newTask \u003d new TodoTask(m.group(1));","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"dishenggg"},"content":"      tasks.add(newTask);","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"dishenggg"},"content":"    } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"dishenggg"},"content":"      throw new DukeException(\"Todo Task file is corrupt\");","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"dishenggg"},"content":"  private void handleDeadline(String input, ArrayList\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"dishenggg"},"content":"    Matcher m \u003d deadlinePattern.matcher(input);","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"dishenggg"},"content":"    if (m.find()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"dishenggg"},"content":"      TodoTask newTask \u003d new TodoTask(m.group(1));","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"dishenggg"},"content":"      tasks.add(newTask);","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"dishenggg"},"content":"    } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"dishenggg"},"content":"      throw new DukeException(\"Deadline Task file is corrupt\");","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"dishenggg"},"content":"  private void handleEvent(String input, ArrayList\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"dishenggg"},"content":"    Matcher m \u003d eventPattern.matcher(input);","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"dishenggg"},"content":"    if (m.find()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"dishenggg"},"content":"      TodoTask newTask \u003d new TodoTask(m.group(1));","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"dishenggg"},"content":"      tasks.add(newTask);","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"dishenggg"},"content":"    } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"dishenggg"},"content":"      throw new DukeException(\"Event Task file is corrupt\");","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"dishenggg"},"content":"  public ArrayList\u003cTask\u003e readTasks() throws DukeException, IOException {","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"dishenggg"},"content":"    ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"dishenggg"},"content":"    if (!Files.exists(taskFilePath)) {","lastModifiedDate":"2023-08-26"},{"lineNumber":71,"author":{"gitId":"dishenggg"},"content":"      throw new FileNotFoundException();","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":73,"author":{"gitId":"dishenggg"},"content":"    List\u003cString\u003e lines \u003d Files.readAllLines(taskFilePath);","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"dishenggg"},"content":"    for (String line : lines) {","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"dishenggg"},"content":"      Matcher m \u003d taskPattern.matcher(line);","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"dishenggg"},"content":"      if (!m.find()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":77,"author":{"gitId":"dishenggg"},"content":"        throw new DukeException(\"Task file is corrupt\");","lastModifiedDate":"2023-08-26"},{"lineNumber":78,"author":{"gitId":"dishenggg"},"content":"      }","lastModifiedDate":"2023-08-26"},{"lineNumber":79,"author":{"gitId":"dishenggg"},"content":"      String type \u003d m.group(1);","lastModifiedDate":"2023-08-26"},{"lineNumber":80,"author":{"gitId":"dishenggg"},"content":"      switch (type) {","lastModifiedDate":"2023-08-26"},{"lineNumber":81,"author":{"gitId":"dishenggg"},"content":"        case \"T\":","lastModifiedDate":"2023-08-26"},{"lineNumber":82,"author":{"gitId":"dishenggg"},"content":"          handleTodo(line, tasks);","lastModifiedDate":"2023-08-26"},{"lineNumber":83,"author":{"gitId":"dishenggg"},"content":"          break;","lastModifiedDate":"2023-08-26"},{"lineNumber":84,"author":{"gitId":"dishenggg"},"content":"        case \"D\":","lastModifiedDate":"2023-08-26"},{"lineNumber":85,"author":{"gitId":"dishenggg"},"content":"          handleDeadline(line, tasks);","lastModifiedDate":"2023-08-26"},{"lineNumber":86,"author":{"gitId":"dishenggg"},"content":"          break;","lastModifiedDate":"2023-08-26"},{"lineNumber":87,"author":{"gitId":"dishenggg"},"content":"        case \"E\":","lastModifiedDate":"2023-08-26"},{"lineNumber":88,"author":{"gitId":"dishenggg"},"content":"          handleEvent(line, tasks);","lastModifiedDate":"2023-08-26"},{"lineNumber":89,"author":{"gitId":"dishenggg"},"content":"          break;","lastModifiedDate":"2023-08-26"},{"lineNumber":90,"author":{"gitId":"dishenggg"},"content":"      }","lastModifiedDate":"2023-08-26"},{"lineNumber":91,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":92,"author":{"gitId":"dishenggg"},"content":"    return tasks;","lastModifiedDate":"2023-08-26"},{"lineNumber":93,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-26"},{"lineNumber":94,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":95,"author":{"gitId":"dishenggg"},"content":"  public void saveToFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-26"},{"lineNumber":96,"author":{"gitId":"dishenggg"},"content":"    try {","lastModifiedDate":"2023-08-26"},{"lineNumber":97,"author":{"gitId":"dishenggg"},"content":"      List\u003cString\u003e taskStrings \u003d tasks.stream().map(Task::toString).collect(Collectors.toList());","lastModifiedDate":"2023-08-26"},{"lineNumber":98,"author":{"gitId":"dishenggg"},"content":"      Files.write(","lastModifiedDate":"2023-08-26"},{"lineNumber":99,"author":{"gitId":"dishenggg"},"content":"          taskFilePath,","lastModifiedDate":"2023-08-26"},{"lineNumber":100,"author":{"gitId":"dishenggg"},"content":"          taskStrings,","lastModifiedDate":"2023-08-26"},{"lineNumber":101,"author":{"gitId":"dishenggg"},"content":"          StandardOpenOption.CREATE,","lastModifiedDate":"2023-08-26"},{"lineNumber":102,"author":{"gitId":"dishenggg"},"content":"          StandardOpenOption.TRUNCATE_EXISTING);","lastModifiedDate":"2023-08-26"},{"lineNumber":103,"author":{"gitId":"dishenggg"},"content":"    } catch (IOException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":104,"author":{"gitId":"dishenggg"},"content":"      System.out.println(\"Failed to save to file: \" + e);","lastModifiedDate":"2023-08-26"},{"lineNumber":105,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":106,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-26"},{"lineNumber":107,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"dishenggg":107}},{"path":"src/main/java/DukeIOBException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"public class DukeIOBException extends DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"  public DukeIOBException(int idx) {","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"    super(\"Task \" + idx + \" does not exist\");","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"dishenggg":5}},{"path":"src/main/java/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"public class EventTask extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"  private LocalDateTime from;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"  private LocalDateTime to;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"  public EventTask(String description, String from, String to) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"    super(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"    try {","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"      this.from \u003d LocalDateTime.parse(from, DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"      this.to \u003d LocalDateTime.parse(to, DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"    } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"      throw new DukeException(\"Failed to parse datetime.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"  @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"  public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"    String fromString \u003d this.from.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"    String toString \u003d this.to.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"    return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), fromString, toString);","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"dishenggg":25}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"public class Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"  protected String description;","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"  protected boolean isDone;","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"  public Task(String description) {","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"    this.description \u003d description;","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"    this.isDone \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"  public String getStatusIcon() {","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"    return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"  public String getDescription() {","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"    return description;","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"  public void markAsDone() {","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"    this.isDone \u003d true;","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"  public void markAsNotDone() {","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"    this.isDone \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"  @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"  public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"    return String.format(\"[%s] %s\", this.getStatusIcon(), this.getDescription());","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"dishenggg":30}},{"path":"src/main/java/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"  public TodoTask(String description) {","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"    super(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"  @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"  public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"    return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"dishenggg":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"todo borrow book","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"deadline return book /by 26/8/2023 1200","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"event project meeting /from 22/8/2023 2359 /to 31/12/2100 0000","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"mark 2","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"mark 4","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"unmark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"unmark 4","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"unmark 1","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"todo todo","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"mark 4","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"unmark 4","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"mark a","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"unmark a","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"mark 1 1","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"unmark 1 1","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"markk 1","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"unmarkk 1","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"mark","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"unmark","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"markk","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"unmarkk","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"mark   1","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"unmark        1","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"dishenggg"},"content":"deadline      space    test     /by      22/8/2100 1111","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"dishenggg"},"content":"event      many      spaces      /from     22/8/2500 1111 /to   22/8/2800 2222","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"dishenggg"},"content":"todo             spaces","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"dishenggg"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"dishenggg"},"content":"delete 1","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"dishenggg"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"dishenggg"},"content":"delete 4","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"dishenggg"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"dishenggg"},"content":"deletee 1","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"dishenggg"},"content":"delete 1 1","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"dishenggg"},"content":"todo","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"dishenggg"},"content":"deadline","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"dishenggg"},"content":"event","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"dishenggg"},"content":"mark","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"dishenggg"},"content":"unmark","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"dishenggg"},"content":"delete","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"dishenggg"},"content":"deadline test no deadline /by","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"dishenggg"},"content":"event test no from /from     /to   tomorrow","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"dishenggg"},"content":"event test no to /from today /to","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"dishenggg"},"content":"deadline test bad date /by 33/12/1000 2000","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"dishenggg"},"content":"deadline test bad time /by 31/12/1000 2401","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"dishenggg"},"content":"bye","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"dishenggg":53}}]
