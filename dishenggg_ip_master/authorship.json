[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"dishenggg"},"content":"    mainClass.set(\"joe.Joe\")","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"dishenggg"},"content":"    archiveFileName \u003d \"joe.jar\"","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"dishenggg"},"content":"    archiveBaseName \u003d \"joe\"","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"dishenggg"},"content":"checkstyle {","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"dishenggg"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"dishenggg":23,"-":40}},{"path":"src/main/java/joe/Joe.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package joe;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"import joe.commands.Command;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"import joe.exceptions.JoeException;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"import joe.ui.Ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":" * Represents the Joe chatbot.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"public class Joe {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"    private final Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"     * Constructs a Joe object with the specified file path for task storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"     * @param filePath The file path for storing tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"    public Joe(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"            tasks \u003d storage.readTasks();","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"        } catch (IOException | JoeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"dishenggg"},"content":"     * Constructs a Joe object with the default file path for task storage.","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"dishenggg"},"content":"    public Joe() {","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"dishenggg"},"content":"        storage \u003d new Storage(\"joe.txt\");","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"dishenggg"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"dishenggg"},"content":"            tasks \u003d storage.readTasks();","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"dishenggg"},"content":"        } catch (IOException | JoeException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"dishenggg"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"dishenggg"},"content":"     * Executes the users command and returns a String result.","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"dishenggg"},"content":"     * @param input The user\u0027s input into the dialogBox","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"dishenggg"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"dishenggg"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"dishenggg"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"dishenggg"},"content":"            return c.execute(tasks, storage);","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"dishenggg"},"content":"        } catch (JoeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"dishenggg"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":57,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":58,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"dishenggg"},"content":"     * The main entry point of the Joe application.","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"dishenggg"},"content":"     * @param args The command-line arguments.","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"dishenggg"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"dishenggg"},"content":"        Application.launch(Ui.class, args);","lastModifiedDate":"2023-09-08"},{"lineNumber":66,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"dishenggg":66,"-":1}},{"path":"src/main/java/joe/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package joe;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"import joe.commands.ByeCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"import joe.commands.Command;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"import joe.commands.DeadlineCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"import joe.commands.DeleteCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"import joe.commands.EventCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"import joe.commands.FindCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"import joe.commands.InvalidCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"import joe.commands.ListCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"import joe.commands.MarkCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"import joe.commands.TodoCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"import joe.commands.UnmarkCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"import joe.exceptions.JoeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":" * Parses user input and generates corresponding Command objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"public class Parser {","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"    private enum CommandType {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"        list, todo, deadline, event, mark, unmark, delete, bye, find, INVALID","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"    private static final Pattern COMMAND_PATTERN \u003d Pattern.compile(\"^(\\\\S+)\\\\s?(.*)$\");","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"    private static final String DATETIME_FORMAT \u003d \"d/M/yyyy HHmm\";","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"dishenggg"},"content":"    private static final String FAILED_TO_PARSE_DATE_MESSAGE \u003d \"Failed to parse the date.\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"dishenggg"},"content":"            + \"Please ensure it is a valid datetime following the format \u003cd/M/yyyy HHmm\u003e\";","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"dishenggg"},"content":"    private static final String FAILED_TO_PARSE_INDEX_MESSAGE \u003d \"Failed to parse index\";","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"dishenggg"},"content":"    private static final String INVALID_ARGS_MARK_MESSAGE \u003d \"Invalid arguments for mark\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"dishenggg"},"content":"            + \"Please follow: mark \u003ctask_num\u003e\";","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"dishenggg"},"content":"    private static final String INVALID_ARGS_UNMARK_MESSAGE \u003d \"Invalid arguments for unmark\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"dishenggg"},"content":"            + \"Please follow: unmark \u003ctask_num\u003e\";","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"dishenggg"},"content":"    private static final String INVALID_ARGS_DELETE_MESSAGE \u003d \"Invalid arguments for delete\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"dishenggg"},"content":"            + \"Please follow: delete \u003ctask_num\u003e\";","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"dishenggg"},"content":"    private static final String INVALID_ARGS_FIND_MESSAGE \u003d \"Invalid arguments for find\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"dishenggg"},"content":"            + \"Please follow: find \u003csearch_word\u003e\";","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"dishenggg"},"content":"    private static final String INVALID_ARGS_TODO_MESSAGE \u003d \"Invalid arguments for todo\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"dishenggg"},"content":"            + \"Please follow: todo \u003ctask\u003e\";","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"dishenggg"},"content":"    private static final String INVALID_ARGS_DEADLINE_MESSAGE \u003d \"Invalid arguments for deadline\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"dishenggg"},"content":"            + \"Please follow: deadline \u003ctask\u003e /by \u003cd/M/yyyy HHmm\u003e\";","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"dishenggg"},"content":"    private static final String INVALID_ARGS_EVENT_MESSAGE \u003d \"Invalid arguments for event\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"dishenggg"},"content":"            + \"Please follow: event \u003ctask\u003e /from \u003cd/M/yyyy HHmm\u003e /to \u003cd/M/yyyy HHmm\u003e\";","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"dishenggg"},"content":"    private static final String TOO_MANY_ARGS_MESSAGE \u003d \"Invalid Command! Too many arguments!\";","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"dishenggg"},"content":"     * Parses the user input and returns the corresponding Command object.","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"dishenggg"},"content":"     * @param input The user input string.","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"dishenggg"},"content":"     * @return The corresponding Command object.","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"dishenggg"},"content":"    public static Command parse(String input) {","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"dishenggg"},"content":"        //Validate input is in correct format","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"dishenggg"},"content":"        Matcher m \u003d COMMAND_PATTERN.matcher(input.trim());","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"dishenggg"},"content":"        if (!m.matches()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"dishenggg"},"content":"            return new InvalidCommand(\"Invalid Command Format\");","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"dishenggg"},"content":"        //Split input into type and args","lastModifiedDate":"2023-09-13"},{"lineNumber":67,"author":{"gitId":"dishenggg"},"content":"        CommandType type \u003d parseType(m.group(1));","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"dishenggg"},"content":"        String args \u003d m.group(2).trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"dishenggg"},"content":"        return parseToCommand(type, args);","lastModifiedDate":"2023-09-13"},{"lineNumber":71,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":72,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":73,"author":{"gitId":"dishenggg"},"content":"    private static Command parseToCommand(CommandType type, String args) {","lastModifiedDate":"2023-09-13"},{"lineNumber":74,"author":{"gitId":"dishenggg"},"content":"        switch (type) {","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"dishenggg"},"content":"        case bye:","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"dishenggg"},"content":"            return handleBye(args);","lastModifiedDate":"2023-09-13"},{"lineNumber":77,"author":{"gitId":"dishenggg"},"content":"        case list:","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"dishenggg"},"content":"            return handleList(args);","lastModifiedDate":"2023-09-13"},{"lineNumber":79,"author":{"gitId":"dishenggg"},"content":"        case mark:","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"dishenggg"},"content":"            return handleMark(args);","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"dishenggg"},"content":"        case unmark:","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"dishenggg"},"content":"            return handleUnmark(args);","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"dishenggg"},"content":"        case todo:","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"dishenggg"},"content":"            return handleTodo(args);","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"dishenggg"},"content":"        case deadline:","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"dishenggg"},"content":"            return handleDeadline(args);","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"dishenggg"},"content":"        case event:","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"dishenggg"},"content":"            return handleEvent(args);","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"dishenggg"},"content":"        case delete:","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"dishenggg"},"content":"            return handleDelete(args);","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"dishenggg"},"content":"        case find:","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"dishenggg"},"content":"            return handleFind(args);","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"dishenggg"},"content":"        default:","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"dishenggg"},"content":"            return handleInvalidKeyword();","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"dishenggg"},"content":"    private static CommandType parseType(String input) {","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"dishenggg"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"dishenggg"},"content":"            return CommandType.valueOf(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"dishenggg"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"dishenggg"},"content":"            return CommandType.INVALID;","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"dishenggg"},"content":"    private static Command handleBye(String args) {","lastModifiedDate":"2023-09-13"},{"lineNumber":107,"author":{"gitId":"dishenggg"},"content":"        if (!args.isEmpty()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":108,"author":{"gitId":"dishenggg"},"content":"            return new InvalidCommand(TOO_MANY_ARGS_MESSAGE);","lastModifiedDate":"2023-09-13"},{"lineNumber":109,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":110,"author":{"gitId":"dishenggg"},"content":"        return new ByeCommand();","lastModifiedDate":"2023-09-13"},{"lineNumber":111,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":112,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":113,"author":{"gitId":"dishenggg"},"content":"    private static Command handleList(String args) {","lastModifiedDate":"2023-09-13"},{"lineNumber":114,"author":{"gitId":"dishenggg"},"content":"        if (!args.isEmpty()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":115,"author":{"gitId":"dishenggg"},"content":"            return new InvalidCommand(TOO_MANY_ARGS_MESSAGE);","lastModifiedDate":"2023-09-13"},{"lineNumber":116,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":117,"author":{"gitId":"dishenggg"},"content":"        return new ListCommand();","lastModifiedDate":"2023-09-13"},{"lineNumber":118,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":119,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":120,"author":{"gitId":"dishenggg"},"content":"    private static Command handleMark(String args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"dishenggg"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"dishenggg"},"content":"            int idx \u003d parseArgsForIndex(args);","lastModifiedDate":"2023-09-13"},{"lineNumber":123,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":124,"author":{"gitId":"dishenggg"},"content":"            //Index should be at least 1","lastModifiedDate":"2023-09-13"},{"lineNumber":125,"author":{"gitId":"dishenggg"},"content":"            assert idx \u003e\u003d 1;","lastModifiedDate":"2023-09-13"},{"lineNumber":126,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":127,"author":{"gitId":"dishenggg"},"content":"            return new MarkCommand(idx);","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"dishenggg"},"content":"        } catch (JoeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"dishenggg"},"content":"            return new InvalidCommand(INVALID_ARGS_MARK_MESSAGE);","lastModifiedDate":"2023-09-05"},{"lineNumber":130,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"dishenggg"},"content":"    private static Command handleUnmark(String args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"dishenggg"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"dishenggg"},"content":"            int idx \u003d parseArgsForIndex(args);","lastModifiedDate":"2023-09-13"},{"lineNumber":136,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":137,"author":{"gitId":"dishenggg"},"content":"            //Index should be at least 1","lastModifiedDate":"2023-09-13"},{"lineNumber":138,"author":{"gitId":"dishenggg"},"content":"            assert idx \u003e\u003d 1;","lastModifiedDate":"2023-09-13"},{"lineNumber":139,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":140,"author":{"gitId":"dishenggg"},"content":"            return new UnmarkCommand(idx);","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"dishenggg"},"content":"        } catch (JoeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"dishenggg"},"content":"            return new InvalidCommand(INVALID_ARGS_UNMARK_MESSAGE);","lastModifiedDate":"2023-09-05"},{"lineNumber":143,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"dishenggg"},"content":"    private static Command handleTodo(String args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"dishenggg"},"content":"        Pattern p \u003d Pattern.compile(\"(\\\\S.*)\");","lastModifiedDate":"2023-09-02"},{"lineNumber":148,"author":{"gitId":"dishenggg"},"content":"        Matcher m \u003d p.matcher(args.trim());","lastModifiedDate":"2023-08-30"},{"lineNumber":149,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":150,"author":{"gitId":"dishenggg"},"content":"        if (!m.matches()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":151,"author":{"gitId":"dishenggg"},"content":"            return new InvalidCommand(INVALID_ARGS_TODO_MESSAGE);","lastModifiedDate":"2023-09-05"},{"lineNumber":152,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":153,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":154,"author":{"gitId":"dishenggg"},"content":"        return new TodoCommand(m.group(1));","lastModifiedDate":"2023-08-30"},{"lineNumber":155,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":157,"author":{"gitId":"dishenggg"},"content":"    private static Command handleDeadline(String args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"dishenggg"},"content":"        Pattern p \u003d Pattern.compile(\"(\\\\S.*)\\\\s+/by\\\\s+(\\\\d{1,2}/\\\\d{1,2}/\\\\d{4} \\\\d{4})\");","lastModifiedDate":"2023-09-02"},{"lineNumber":159,"author":{"gitId":"dishenggg"},"content":"        Matcher m \u003d p.matcher(args.trim());","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":161,"author":{"gitId":"dishenggg"},"content":"        if (!m.matches()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":162,"author":{"gitId":"dishenggg"},"content":"            return new InvalidCommand(INVALID_ARGS_DEADLINE_MESSAGE);","lastModifiedDate":"2023-09-05"},{"lineNumber":163,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":164,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":165,"author":{"gitId":"dishenggg"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":166,"author":{"gitId":"dishenggg"},"content":"            LocalDateTime by \u003d LocalDateTime.parse(m.group(2), DateTimeFormatter.ofPattern(DATETIME_FORMAT));","lastModifiedDate":"2023-09-02"},{"lineNumber":167,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":168,"author":{"gitId":"dishenggg"},"content":"            return new DeadlineCommand(m.group(1), by);","lastModifiedDate":"2023-08-30"},{"lineNumber":169,"author":{"gitId":"dishenggg"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":170,"author":{"gitId":"dishenggg"},"content":"            return new InvalidCommand(FAILED_TO_PARSE_DATE_MESSAGE);","lastModifiedDate":"2023-09-02"},{"lineNumber":171,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":172,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":173,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":174,"author":{"gitId":"dishenggg"},"content":"    private static Command handleEvent(String args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":175,"author":{"gitId":"dishenggg"},"content":"        Pattern p \u003d Pattern.compile(\"(\\\\S.*)\\\\s+/from\\\\s+(\\\\d{1,2}/\\\\d{1,2}/\\\\d{4} \\\\d{4})\\\\s+\"","lastModifiedDate":"2023-09-05"},{"lineNumber":176,"author":{"gitId":"dishenggg"},"content":"                + \"/to\\\\s+(\\\\d{1,2}/\\\\d{1,2}/\\\\d{4} \\\\d{4})\");","lastModifiedDate":"2023-09-05"},{"lineNumber":177,"author":{"gitId":"dishenggg"},"content":"        Matcher m \u003d p.matcher(args.trim());","lastModifiedDate":"2023-08-30"},{"lineNumber":178,"author":{"gitId":"dishenggg"},"content":"        if (!m.matches()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":179,"author":{"gitId":"dishenggg"},"content":"            return new InvalidCommand(INVALID_ARGS_EVENT_MESSAGE);","lastModifiedDate":"2023-09-05"},{"lineNumber":180,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":181,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":182,"author":{"gitId":"dishenggg"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":183,"author":{"gitId":"dishenggg"},"content":"            LocalDateTime from \u003d LocalDateTime.parse(m.group(2), DateTimeFormatter.ofPattern(DATETIME_FORMAT));","lastModifiedDate":"2023-09-02"},{"lineNumber":184,"author":{"gitId":"dishenggg"},"content":"            LocalDateTime to \u003d LocalDateTime.parse(m.group(3), DateTimeFormatter.ofPattern(DATETIME_FORMAT));","lastModifiedDate":"2023-09-02"},{"lineNumber":185,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":186,"author":{"gitId":"dishenggg"},"content":"            return new EventCommand(m.group(1), from, to);","lastModifiedDate":"2023-08-30"},{"lineNumber":187,"author":{"gitId":"dishenggg"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":188,"author":{"gitId":"dishenggg"},"content":"            return new InvalidCommand(FAILED_TO_PARSE_DATE_MESSAGE);","lastModifiedDate":"2023-09-02"},{"lineNumber":189,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":190,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":191,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":192,"author":{"gitId":"dishenggg"},"content":"    private static Command handleDelete(String args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":193,"author":{"gitId":"dishenggg"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":194,"author":{"gitId":"dishenggg"},"content":"            int idx \u003d parseArgsForIndex(args);","lastModifiedDate":"2023-09-13"},{"lineNumber":195,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":196,"author":{"gitId":"dishenggg"},"content":"            //Index should be at least 1","lastModifiedDate":"2023-09-13"},{"lineNumber":197,"author":{"gitId":"dishenggg"},"content":"            assert idx \u003e\u003d 1;","lastModifiedDate":"2023-09-13"},{"lineNumber":198,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":199,"author":{"gitId":"dishenggg"},"content":"            return new DeleteCommand(idx);","lastModifiedDate":"2023-08-30"},{"lineNumber":200,"author":{"gitId":"dishenggg"},"content":"        } catch (JoeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":201,"author":{"gitId":"dishenggg"},"content":"            return new InvalidCommand(INVALID_ARGS_DELETE_MESSAGE);","lastModifiedDate":"2023-09-05"},{"lineNumber":202,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":203,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":204,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":205,"author":{"gitId":"dishenggg"},"content":"    private static Command handleFind(String args) {","lastModifiedDate":"2023-09-02"},{"lineNumber":206,"author":{"gitId":"dishenggg"},"content":"        if (args.trim().isEmpty()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":207,"author":{"gitId":"dishenggg"},"content":"            return new InvalidCommand(INVALID_ARGS_FIND_MESSAGE);","lastModifiedDate":"2023-09-05"},{"lineNumber":208,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":209,"author":{"gitId":"dishenggg"},"content":"        return new FindCommand(args.trim());","lastModifiedDate":"2023-09-02"},{"lineNumber":210,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":211,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":212,"author":{"gitId":"dishenggg"},"content":"    private static Command handleInvalidKeyword() {","lastModifiedDate":"2023-08-30"},{"lineNumber":213,"author":{"gitId":"dishenggg"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-08-30"},{"lineNumber":214,"author":{"gitId":"dishenggg"},"content":"        for (CommandType cmd : CommandType.values()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":215,"author":{"gitId":"dishenggg"},"content":"            if (CommandType.INVALID.equals(cmd)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":216,"author":{"gitId":"dishenggg"},"content":"                //Skips INVALID when listing all the valid commands","lastModifiedDate":"2023-09-13"},{"lineNumber":217,"author":{"gitId":"dishenggg"},"content":"                continue;","lastModifiedDate":"2023-08-30"},{"lineNumber":218,"author":{"gitId":"dishenggg"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":219,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":220,"author":{"gitId":"dishenggg"},"content":"            sb.append(cmd.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":221,"author":{"gitId":"dishenggg"},"content":"            sb.append(\", \");","lastModifiedDate":"2023-08-30"},{"lineNumber":222,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":223,"author":{"gitId":"dishenggg"},"content":"        sb.setLength(sb.length() - 2); //Removes extra \", \" at the end","lastModifiedDate":"2023-09-13"},{"lineNumber":224,"author":{"gitId":"dishenggg"},"content":"        String msg \u003d String.format(\"Invalid Command Keyword!%nHere is a list of valid commands: %s\", sb);","lastModifiedDate":"2023-09-02"},{"lineNumber":225,"author":{"gitId":"dishenggg"},"content":"        return new InvalidCommand(msg);","lastModifiedDate":"2023-08-30"},{"lineNumber":226,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":227,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":228,"author":{"gitId":"dishenggg"},"content":"    private static int parseArgsForIndex(String args) throws JoeException {","lastModifiedDate":"2023-09-13"},{"lineNumber":229,"author":{"gitId":"dishenggg"},"content":"        Pattern indexPattern \u003d Pattern.compile(\"^(\\\\d+)$\");","lastModifiedDate":"2023-08-30"},{"lineNumber":230,"author":{"gitId":"dishenggg"},"content":"        Matcher m \u003d indexPattern.matcher(args.trim());","lastModifiedDate":"2023-08-30"},{"lineNumber":231,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":232,"author":{"gitId":"dishenggg"},"content":"        if (!m.matches()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":233,"author":{"gitId":"dishenggg"},"content":"            throw new JoeException(FAILED_TO_PARSE_INDEX_MESSAGE);","lastModifiedDate":"2023-09-02"},{"lineNumber":234,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":235,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":236,"author":{"gitId":"dishenggg"},"content":"        int idx \u003d Integer.parseInt(m.group(1));","lastModifiedDate":"2023-09-13"},{"lineNumber":237,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":238,"author":{"gitId":"dishenggg"},"content":"        if (idx \u003c 1) {","lastModifiedDate":"2023-09-13"},{"lineNumber":239,"author":{"gitId":"dishenggg"},"content":"            throw new JoeException(FAILED_TO_PARSE_INDEX_MESSAGE);","lastModifiedDate":"2023-09-13"},{"lineNumber":240,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":241,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":242,"author":{"gitId":"dishenggg"},"content":"        return idx;","lastModifiedDate":"2023-09-13"},{"lineNumber":243,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":244,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"dishenggg":244}},{"path":"src/main/java/joe/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package joe;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"import java.util.List;","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"import joe.exceptions.JoeException;","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"import joe.tasks.TodoTask;","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":" * Handles the storage of tasks to a file.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"    // Patterns for parsing task file entries","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"    private static final Pattern TASK_PATTERN \u003d Pattern.compile(\"^\\\\[([TDE])\\\\]\\\\[[X\\\\s]\\\\]\\\\s(.+)\");","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"    private static final Pattern TODO_PATTERN \u003d Pattern.compile(\"^\\\\[T\\\\]\\\\[[X\\\\s]\\\\]\\\\s+(.+)$\");","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"    private static final Pattern DEADLINE_PATTERN \u003d","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"            Pattern.compile(\"^\\\\[D\\\\]\\\\[[X\\\\s]\\\\]\\\\s+(.+)\\\\s+\\\\(by:\\\\s+(.+)\\\\)$\");","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"    private static final Pattern EVENT_PATTERN \u003d","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"            Pattern.compile(\"^\\\\[E\\\\]\\\\[[X\\\\s]\\\\]\\\\s+(.+)\\\\s+\\\\(from:\\\\s+(.+)\\\\s+to:\\\\s+(.+)\\\\)$\");","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"    private static final String CORRUPT_TASK_FILE_MSG \u003d \"Task file is corrupt\";","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"    private final Path taskFilePath;","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"dishenggg"},"content":"     * Constructs a Storage object with the specified file name.","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"dishenggg"},"content":"     * @param fileName The name of the file to store tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"dishenggg"},"content":"    public Storage(String fileName) {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"dishenggg"},"content":"        this.taskFilePath \u003d Paths.get(fileName);","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"dishenggg"},"content":"    // Handle different task types","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"dishenggg"},"content":"    private void handleTodo(String input, TaskList tasks) throws JoeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"dishenggg"},"content":"        Matcher m \u003d TODO_PATTERN.matcher(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"dishenggg"},"content":"        if (m.find()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"dishenggg"},"content":"            TodoTask newTask \u003d new TodoTask(m.group(1));","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"dishenggg"},"content":"            tasks.add(newTask);","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"dishenggg"},"content":"        } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"dishenggg"},"content":"            throw new JoeException(CORRUPT_TASK_FILE_MSG);","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"dishenggg"},"content":"    private void handleDeadline(String input, TaskList tasks) throws JoeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"dishenggg"},"content":"        Matcher m \u003d DEADLINE_PATTERN.matcher(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"dishenggg"},"content":"        if (m.find()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"dishenggg"},"content":"            TodoTask newTask \u003d new TodoTask(m.group(1));","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"dishenggg"},"content":"            tasks.add(newTask);","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"dishenggg"},"content":"        } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"dishenggg"},"content":"            throw new JoeException(CORRUPT_TASK_FILE_MSG);","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"dishenggg"},"content":"    private void handleEvent(String input, TaskList tasks) throws JoeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"dishenggg"},"content":"        Matcher m \u003d EVENT_PATTERN.matcher(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"dishenggg"},"content":"        if (m.find()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"dishenggg"},"content":"            TodoTask newTask \u003d new TodoTask(m.group(1));","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"dishenggg"},"content":"            tasks.add(newTask);","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"dishenggg"},"content":"        } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"dishenggg"},"content":"            throw new JoeException(CORRUPT_TASK_FILE_MSG);","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":73,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"dishenggg"},"content":"     * Reads tasks from the file and returns them as a TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"dishenggg"},"content":"     * @return A TaskList containing the tasks read from the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"dishenggg"},"content":"     * @throws JoeException If there is a problem parsing the task file.","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"dishenggg"},"content":"     * @throws IOException  If there is an I/O error while reading the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"dishenggg"},"content":"    public TaskList readTasks() throws JoeException, IOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"dishenggg"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"dishenggg"},"content":"        if (!Files.exists(taskFilePath)) {","lastModifiedDate":"2023-08-26"},{"lineNumber":85,"author":{"gitId":"dishenggg"},"content":"            throw new FileNotFoundException();","lastModifiedDate":"2023-08-26"},{"lineNumber":86,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":87,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"dishenggg"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(taskFilePath);","lastModifiedDate":"2023-08-26"},{"lineNumber":89,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"dishenggg"},"content":"        for (String line : lines) {","lastModifiedDate":"2023-08-26"},{"lineNumber":91,"author":{"gitId":"dishenggg"},"content":"            Matcher m \u003d TASK_PATTERN.matcher(line);","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"dishenggg"},"content":"            if (!m.matches()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":94,"author":{"gitId":"dishenggg"},"content":"                throw new JoeException(CORRUPT_TASK_FILE_MSG);","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"dishenggg"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":96,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"dishenggg"},"content":"            String type \u003d m.group(1);","lastModifiedDate":"2023-08-26"},{"lineNumber":98,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"dishenggg"},"content":"            switch (type) {","lastModifiedDate":"2023-08-26"},{"lineNumber":100,"author":{"gitId":"dishenggg"},"content":"            case \"T\":","lastModifiedDate":"2023-08-26"},{"lineNumber":101,"author":{"gitId":"dishenggg"},"content":"                handleTodo(line, tasks);","lastModifiedDate":"2023-08-26"},{"lineNumber":102,"author":{"gitId":"dishenggg"},"content":"                break;","lastModifiedDate":"2023-08-26"},{"lineNumber":103,"author":{"gitId":"dishenggg"},"content":"            case \"D\":","lastModifiedDate":"2023-08-26"},{"lineNumber":104,"author":{"gitId":"dishenggg"},"content":"                handleDeadline(line, tasks);","lastModifiedDate":"2023-08-26"},{"lineNumber":105,"author":{"gitId":"dishenggg"},"content":"                break;","lastModifiedDate":"2023-08-26"},{"lineNumber":106,"author":{"gitId":"dishenggg"},"content":"            case \"E\":","lastModifiedDate":"2023-08-26"},{"lineNumber":107,"author":{"gitId":"dishenggg"},"content":"                handleEvent(line, tasks);","lastModifiedDate":"2023-08-26"},{"lineNumber":108,"author":{"gitId":"dishenggg"},"content":"                break;","lastModifiedDate":"2023-08-26"},{"lineNumber":109,"author":{"gitId":"dishenggg"},"content":"            default:","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"dishenggg"},"content":"                throw new JoeException(CORRUPT_TASK_FILE_MSG);","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"dishenggg"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":112,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":113,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":114,"author":{"gitId":"dishenggg"},"content":"        //Every line is correct parsed into a task","lastModifiedDate":"2023-09-13"},{"lineNumber":115,"author":{"gitId":"dishenggg"},"content":"        assert lines.size() \u003d\u003d tasks.size();","lastModifiedDate":"2023-09-13"},{"lineNumber":116,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":117,"author":{"gitId":"dishenggg"},"content":"        return tasks;","lastModifiedDate":"2023-08-26"},{"lineNumber":118,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":119,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":120,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"dishenggg"},"content":"     * Saves tasks from a TaskList to the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"dishenggg"},"content":"     * @param tasks The TaskList containing tasks to be saved to the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"dishenggg"},"content":"    public void saveToFile(TaskList tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"dishenggg"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":127,"author":{"gitId":"dishenggg"},"content":"            List\u003cString\u003e taskStrings \u003d tasks.getStringList();","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"dishenggg"},"content":"            Files.write(","lastModifiedDate":"2023-08-26"},{"lineNumber":129,"author":{"gitId":"dishenggg"},"content":"                    taskFilePath,","lastModifiedDate":"2023-08-26"},{"lineNumber":130,"author":{"gitId":"dishenggg"},"content":"                    taskStrings,","lastModifiedDate":"2023-08-26"},{"lineNumber":131,"author":{"gitId":"dishenggg"},"content":"                    StandardOpenOption.CREATE,","lastModifiedDate":"2023-08-26"},{"lineNumber":132,"author":{"gitId":"dishenggg"},"content":"                    StandardOpenOption.TRUNCATE_EXISTING);","lastModifiedDate":"2023-08-26"},{"lineNumber":133,"author":{"gitId":"dishenggg"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":134,"author":{"gitId":"dishenggg"},"content":"            System.out.println(\"Failed to save to file: \" + e);","lastModifiedDate":"2023-08-26"},{"lineNumber":135,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":136,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":137,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"dishenggg":137}},{"path":"src/main/java/joe/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package joe;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"import java.util.List;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"import joe.tasks.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":" * Represents a list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"public class TaskList {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"     * Constructs a new TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"     * Adds a task to the list.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"     * @param task The task to add.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"        tasks.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"dishenggg"},"content":"     * Retrieves a task at the specified index.","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"dishenggg"},"content":"     * @param idx The index of the task to retrieve.","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"dishenggg"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"dishenggg"},"content":"    public Task get(int idx) {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"dishenggg"},"content":"        return tasks.get(idx);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"dishenggg"},"content":"     * Removes a task at the specified index.","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"dishenggg"},"content":"     * @param idx The index of the task to remove.","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"dishenggg"},"content":"    public void remove(int idx) {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"dishenggg"},"content":"        tasks.remove(idx);","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"dishenggg"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"dishenggg"},"content":"     * @return The number of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"dishenggg"},"content":"    public int size() {","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"dishenggg"},"content":"        return tasks.size();","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"dishenggg"},"content":"     * Returns a list of task as strings.","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"dishenggg"},"content":"     * @return A list of task as strings.","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"dishenggg"},"content":"    public List\u003cString\u003e getStringList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"dishenggg"},"content":"        return tasks.stream().map(Task::toString).collect(Collectors.toList());","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"dishenggg"},"content":"     * Returns a TaskList of tasks containing the search word.","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"dishenggg"},"content":"     * @param searchString The search word.","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"dishenggg"},"content":"     * @return A TaskList of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"dishenggg"},"content":"    public TaskList find(String searchString) {","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"dishenggg"},"content":"        TaskList res \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":77,"author":{"gitId":"dishenggg"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"dishenggg"},"content":"            if (task.getDescription().toLowerCase().contains(searchString.toLowerCase())) {","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"dishenggg"},"content":"                res.add(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"dishenggg"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":83,"author":{"gitId":"dishenggg"},"content":"        return res;","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"dishenggg"},"content":"     * Returns a formatted string representation of the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"dishenggg"},"content":"     * @return A string representation of the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"dishenggg"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"dishenggg"},"content":"    public String toString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"dishenggg"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"dishenggg"},"content":"        sb.append(\"Here are your tasks:\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"dishenggg"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"dishenggg"},"content":"            sb.append(i + 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"dishenggg"},"content":"            sb.append(\".\");","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"dishenggg"},"content":"            sb.append(tasks.get(i).toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"dishenggg"},"content":"            sb.append(\"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"dishenggg"},"content":"        sb.setLength(sb.length() - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"dishenggg"},"content":"        return sb.toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"dishenggg":104}},{"path":"src/main/java/joe/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package joe.commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import joe.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"import joe.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":" * Represents a command to exit the application.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"     * Constructs a ByeCommand that marks the exit flag as true.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"    private static final String BYE_MESSAGE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"    public ByeCommand() {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"        this.isExit \u003d true;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"     * Executes the command to exit the application.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"     * @param tasks   The TaskList on which the command should be executed.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"     * @param storage The storage for saving and loading tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"        storage.saveToFile(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"        return BYE_MESSAGE;","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"dishenggg":30}},{"path":"src/main/java/joe/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package joe.commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import joe.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"import joe.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"import joe.exceptions.JoeException;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"import joe.exceptions.JoeIndexOutOfBoundsException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":" * An abstract class representing a command that can be executed on the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"    protected boolean isExit \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"     * Executes the command.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"     * @param tasks   The TaskList on which the command should be executed.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"     * @param storage The storage for saving and loading tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"     * @throws JoeIndexOutOfBoundsException If there is an invalid index used in the command.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"    public abstract String execute(TaskList tasks, Storage storage)","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"            throws JoeException;","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"     * @return True if the command is an exit command; otherwise, false.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"        return isExit;","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"dishenggg":32}},{"path":"src/main/java/joe/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package joe.commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"import joe.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"import joe.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"import joe.tasks.DeadlineTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":" * Represents a command to add a deadline task to the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"    private final String taskDetails;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"    private final LocalDateTime by;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"     * Constructs a DeadlineCommand with task details and a deadline.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"     * @param taskDetails The description of the deadline task.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"     * @param by          The deadline date and time.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"    public DeadlineCommand(String taskDetails, LocalDateTime by) {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"        this.taskDetails \u003d taskDetails;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"     * Executes the command to add a deadline task to the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"     * @param tasks   The TaskList on which the command should be executed.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"     * @param storage The storage for saving and loading tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"dishenggg"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"dishenggg"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"dishenggg"},"content":"        int startSize \u003d tasks.size();","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"dishenggg"},"content":"        DeadlineTask newTask \u003d new DeadlineTask(taskDetails, by);","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"dishenggg"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"dishenggg"},"content":"        //Asserts that one task is added","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"dishenggg"},"content":"        int endSize \u003d tasks.size();","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"dishenggg"},"content":"        assert endSize - startSize \u003d\u003d 1;","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"dishenggg"},"content":"        storage.saveToFile(tasks);","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"dishenggg"},"content":"        return (","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"dishenggg"},"content":"                String.format(","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"dishenggg"},"content":"                        \"Got it, I\u0027ve added this task:%n %s%nNow you have %d tasks in the list.\",","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"dishenggg"},"content":"                        newTask, tasks.size()));","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"dishenggg":50}},{"path":"src/main/java/joe/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package joe.commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import joe.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"import joe.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"import joe.exceptions.JoeIndexOutOfBoundsException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"import joe.tasks.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"    private final int idx;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"     * Constructs a DeleteCommand with the index of the task to be deleted.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"     * @param idx The index of the task to be deleted.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"    public DeleteCommand(int idx) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"     * Executes the command to delete a task from the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"     * @param tasks   The TaskList on which the command should be executed.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"     * @param storage The storage for saving and loading tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"     * @throws JoeIndexOutOfBoundsException If the provided index is invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"    public String execute(TaskList tasks, Storage storage) throws JoeIndexOutOfBoundsException {","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"dishenggg"},"content":"        int startSize \u003d tasks.size();","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"dishenggg"},"content":"        if (idx \u003c 1 || idx \u003e tasks.size()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"dishenggg"},"content":"            throw new JoeIndexOutOfBoundsException(idx);","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"dishenggg"},"content":"        Task deletedTask \u003d tasks.get(idx - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"dishenggg"},"content":"        tasks.remove(idx - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"dishenggg"},"content":"        //Asserts that one task is removed","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"dishenggg"},"content":"        int endSize \u003d tasks.size();","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"dishenggg"},"content":"        assert endSize - startSize \u003d\u003d -1;","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"dishenggg"},"content":"        storage.saveToFile(tasks);","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"dishenggg"},"content":"        return (","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"dishenggg"},"content":"                String.format(","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"dishenggg"},"content":"                        \"Noted. I\u0027ve removed this task:%n %s%nNow you have %d tasks in the list.\",","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"dishenggg"},"content":"                        deletedTask, tasks.size()));","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"dishenggg":52}},{"path":"src/main/java/joe/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package joe.commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"import joe.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"import joe.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"import joe.exceptions.JoeException;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"import joe.tasks.EventTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":" * Represents a command to add an event task to the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"    private static final String START_IS_AFTER_END_ERR_MSG \u003d \"Please ensure that start datetime is after end datetime\";","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"    private final String taskDetails;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"    private final LocalDateTime from;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"    private final LocalDateTime to;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"     * Constructs an EventCommand with task details, start time, and end time.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"     * @param taskDetails The description of the event task.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"     * @param from        The start date and time of the event.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"     * @param to          The end date and time of the event.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"    public EventCommand(String taskDetails, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"        this.taskDetails \u003d taskDetails;","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"dishenggg"},"content":"     * Executes the command to add an event task to the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"dishenggg"},"content":"     * @param tasks   The TaskList on which the command should be executed.","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"dishenggg"},"content":"     * @param storage The storage for saving and loading tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"dishenggg"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"dishenggg"},"content":"    public String execute(TaskList tasks, Storage storage) throws JoeException {","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"dishenggg"},"content":"        int startSize \u003d tasks.size();","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"dishenggg"},"content":"        if (to.isBefore(from)) {","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"dishenggg"},"content":"            throw new JoeException(START_IS_AFTER_END_ERR_MSG);","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"dishenggg"},"content":"        //Ensures that end datetime is at least start datetime","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"dishenggg"},"content":"        assert to.isAfter(from) || to.isEqual(from);","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"dishenggg"},"content":"        EventTask newTask \u003d new EventTask(taskDetails, from, to);","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"dishenggg"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"dishenggg"},"content":"        //Asserts that one task is added","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"dishenggg"},"content":"        int endSize \u003d tasks.size();","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"dishenggg"},"content":"        assert endSize - startSize \u003d\u003d 1;","lastModifiedDate":"2023-09-13"},{"lineNumber":55,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"dishenggg"},"content":"        storage.saveToFile(tasks);","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"dishenggg"},"content":"        return (","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"dishenggg"},"content":"                String.format(","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"dishenggg"},"content":"                        \"Got it, I\u0027ve added this task:%n %s%nNow you have %d tasks in the list.\",","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"dishenggg"},"content":"                        newTask, tasks.size()));","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"dishenggg":63}},{"path":"src/main/java/joe/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package joe.commands;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import joe.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"import joe.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":" * Represents a command to find all tasks containing the search string.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"    private final String searchString;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"     * Constructs a FindCommand with the string to be searched for.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"     * @param searchString The string to be searched for.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"    public FindCommand(String searchString) {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"        this.searchString \u003d searchString;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"     * Executes the command to display the list of tasks containing the search string.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"     * @param tasks   The TaskList on which the command should be executed.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"     * @param storage The storage for saving and loading tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"        TaskList results \u003d tasks.find(searchString);","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"        return results.toString();","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"dishenggg":32}},{"path":"src/main/java/joe/commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package joe.commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import joe.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"import joe.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":" * Represents a command for handling invalid user inputs.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"    private final String msg;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"     * Constructs an InvalidCommand with an error message.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"     * @param msg The error message to be displayed.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"    public InvalidCommand(String msg) {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"        this.msg \u003d msg;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"     * Executes the command to display an error message.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"     * @param tasks   The TaskList on which the command should be executed.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"     * @param storage The storage for saving and loading tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"        return msg;","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"dishenggg":31}},{"path":"src/main/java/joe/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package joe.commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import joe.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"import joe.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"     * Executes the command to display the list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"     * @param tasks   The TaskList on which the command should be executed.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"     * @param storage The storage for saving and loading tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"        return tasks.toString();","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"dishenggg":21}},{"path":"src/main/java/joe/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package joe.commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import joe.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"import joe.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"import joe.exceptions.JoeIndexOutOfBoundsException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":" * Represents a command to mark a task as done in the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"    private final int idx;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"     * Constructs a MarkCommand with the index of the task to be marked as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"     * @param idx The index of the task to be marked as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"    public MarkCommand(int idx) {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"     * Executes the command to mark a task as done in the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"     * @param tasks   The TaskList on which the command should be executed.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"     * @param storage The storage for saving and loading tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"     * @throws JoeIndexOutOfBoundsException If the provided index is invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"    public String execute(TaskList tasks, Storage storage) throws JoeIndexOutOfBoundsException {","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"        if (idx \u003c 1 || idx \u003e tasks.size()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"dishenggg"},"content":"            throw new JoeIndexOutOfBoundsException(idx);","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"dishenggg"},"content":"        tasks.get(idx - 1).markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"dishenggg"},"content":"        storage.saveToFile(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"dishenggg"},"content":"        return (String.format(\"Nice! I\u0027ve marked this task as done:%n %s\", tasks.get(idx - 1)));","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"dishenggg":41}},{"path":"src/main/java/joe/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package joe.commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import joe.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"import joe.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"import joe.tasks.TodoTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":" * Represents a command to add a to-do task to the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"    private final String taskDetails;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"     * Constructs a TodoCommand with task details.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"     * @param taskDetails The description of the to-do task.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"    public TodoCommand(String taskDetails) {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"        this.taskDetails \u003d taskDetails;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"     * Executes the command to add a to-do task to the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"     * @param tasks   The TaskList on which the command should be executed.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"     * @param storage The storage for saving and loading tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"        int startSize \u003d tasks.size();","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"dishenggg"},"content":"        TodoTask newTask \u003d new TodoTask(taskDetails);","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"dishenggg"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"dishenggg"},"content":"        //Asserts that one task is added","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"dishenggg"},"content":"        int endSize \u003d tasks.size();","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"dishenggg"},"content":"        assert endSize - startSize \u003d\u003d 1;","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"dishenggg"},"content":"        storage.saveToFile(tasks);","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"dishenggg"},"content":"        return (","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"dishenggg"},"content":"                String.format(","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"dishenggg"},"content":"                        \"Got it, I\u0027ve added this task:%n %s%nNow you have %d tasks in the list.\",","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"dishenggg"},"content":"                        newTask, tasks.size()));","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"dishenggg":46}},{"path":"src/main/java/joe/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package joe.commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import joe.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"import joe.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"import joe.exceptions.JoeIndexOutOfBoundsException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":" * Represents a command to mark a task as not done in the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"    private final int idx;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"     * Constructs an UnmarkCommand with the index of the task to be marked as not done.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"     * @param idx The index of the task to be marked as not done.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"    public UnmarkCommand(int idx) {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"     * Executes the command to mark a task as not done in the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"     * @param tasks   The TaskList on which the command should be executed.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"     * @param storage The storage for saving and loading tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"     * @throws JoeIndexOutOfBoundsException If the provided index is invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"    public String execute(TaskList tasks, Storage storage) throws JoeIndexOutOfBoundsException {","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"        if (idx \u003c 1 || idx \u003e tasks.size()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"dishenggg"},"content":"            throw new JoeIndexOutOfBoundsException(idx);","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"dishenggg"},"content":"        tasks.get(idx - 1).markAsNotDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"dishenggg"},"content":"        storage.saveToFile(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"dishenggg"},"content":"        return (String.format(\"OK! I\u0027ve marked this task as not done:%n %s\", tasks.get(idx - 1)));","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"dishenggg":41}},{"path":"src/main/java/joe/exceptions/JoeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package joe.exceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":" * A custom exception class for handling errors in the Joe application.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"public class JoeException extends Exception {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"     * Constructs a JoeException with a custom error message.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"     * @param error The error message describing the exception.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"    public JoeException(String error) {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"        super(error);","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"dishenggg":15}},{"path":"src/main/java/joe/exceptions/JoeIndexOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package joe.exceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":" * A custom exception class for handling index out-of-bounds errors in the Joe application\u0027s task","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":" * list.","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"public class JoeIndexOutOfBoundsException extends JoeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"     * Constructs a JoeIndexOutOfBoundsException with an error message indicating that the specified","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"     * task index does not exist.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"     * @param idx The index of the task that is out of bounds.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"    public JoeIndexOutOfBoundsException(int idx) {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"        super(\"Task \" + idx + \" does not exist\");","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"dishenggg":17}},{"path":"src/main/java/joe/tasks/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package joe.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":" * Represents a task with a specific deadline.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"    private static final String DATETIME_FORMAT \u003d \"dd MMM yyyy HH:mm\";","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"     * Constructs a DeadlineTask with the given description and deadline.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"     * @param deadline    The deadline for the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"    public DeadlineTask(String description, LocalDateTime deadline) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"        super(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"     * Converts the DeadlineTask object to a formatted string.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"     * @return A string representation of the DeadlineTask, including its deadline.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"        String deadlineString \u003d this.deadline.format(DateTimeFormatter.ofPattern(DATETIME_FORMAT));","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"dishenggg"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), deadlineString);","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":34,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"dishenggg":34}},{"path":"src/main/java/joe/tasks/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package joe.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":" * Represents a task that has a specific start and end time.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"public class EventTask extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"    private static final String DATETIME_FORMAT \u003d \"dd MMM yyyy HH:mm\";","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"    private final LocalDateTime from;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"    private final LocalDateTime to;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"     * Constructs an EventTask with the given description, start time, and end time.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"     * @param from        The start time of the event.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"     * @param to          The end time of the event.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"    public EventTask(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"        super(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"     * Converts the EventTask object to a formatted string.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"     * @return A string representation of the EventTask, including its start and end times.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"dishenggg"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":33,"author":{"gitId":"dishenggg"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":34,"author":{"gitId":"dishenggg"},"content":"        String fromString \u003d this.from.format(DateTimeFormatter.ofPattern(DATETIME_FORMAT));","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"dishenggg"},"content":"        String toString \u003d this.to.format(DateTimeFormatter.ofPattern(DATETIME_FORMAT));","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"dishenggg"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), fromString, toString);","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":38,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"dishenggg":38}},{"path":"src/main/java/joe/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package joe.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":" * An abstract class representing a task with a description and completion status.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"public abstract class Task {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"    private static final String DONE_SYMBOL \u003d \"X\";","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"    private static final String NOT_DONE_SYMBOL \u003d \" \";","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"    protected String description;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"     * Constructs a Task object with the given description.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"    protected Task(String description) {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"     * Returns an icon representing the completion status of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"     * @return \"X\" if the task is done, \" \" (whitespace) if the task is not done.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"        return (isDone ? DONE_SYMBOL : NOT_DONE_SYMBOL);","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"dishenggg"},"content":"     * Gets the description of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"dishenggg"},"content":"     * @return The task description.","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"dishenggg"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"dishenggg"},"content":"        return description;","lastModifiedDate":"2023-08-20"},{"lineNumber":38,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"dishenggg"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"dishenggg"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"dishenggg"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-20"},{"lineNumber":45,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":46,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":47,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"dishenggg"},"content":"     * Marks the task as not done.","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"dishenggg"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-08-20"},{"lineNumber":51,"author":{"gitId":"dishenggg"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":52,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":53,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":54,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"dishenggg"},"content":"     * Converts the Task object to a formatted string.","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"dishenggg"},"content":"     * @return A string representation of the task, including its completion status and description.","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"dishenggg"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":60,"author":{"gitId":"dishenggg"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":61,"author":{"gitId":"dishenggg"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.getDescription());","lastModifiedDate":"2023-08-20"},{"lineNumber":62,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":63,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"dishenggg":63}},{"path":"src/main/java/joe/tasks/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package joe.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":" * Represents a to-do task with a description and completion status.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"     * Constructs a TodoTask object with the given description.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"    public TodoTask(String description) {","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"        super(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"     * Converts the TodoTask object to a formatted string.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"     * @return A string representation of the to-do task, with its completion status and description.","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"dishenggg":25}},{"path":"src/main/java/joe/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package joe.ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"import javafx.scene.shape.Rectangle;","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"import javafx.scene.text.TextAlignment;","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":" * Represents the dialog box in the Ui using FXML.","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"    private Text dialog;","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"dishenggg"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"dishenggg"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"dishenggg"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"dishenggg"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"dishenggg"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"dishenggg"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"dishenggg"},"content":"        //Round the displayPicture","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"dishenggg"},"content":"        Rectangle clip \u003d new Rectangle(","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"dishenggg"},"content":"                displayPicture.getFitWidth(), displayPicture.getFitHeight()","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"dishenggg"},"content":"        );","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"dishenggg"},"content":"        clip.setArcWidth(50);","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"dishenggg"},"content":"        clip.setArcHeight(50);","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"dishenggg"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"dishenggg"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"dishenggg"},"content":"    private void flip() {","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"dishenggg"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"dishenggg"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"dishenggg"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"dishenggg"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"dishenggg"},"content":"     * Creates the dialog box for the user.","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"dishenggg"},"content":"     * @param text The text in the dialog.","lastModifiedDate":"2023-09-08"},{"lineNumber":65,"author":{"gitId":"dishenggg"},"content":"     * @param img The image to be displayed for the user.","lastModifiedDate":"2023-09-08"},{"lineNumber":66,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":67,"author":{"gitId":"dishenggg"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"dishenggg"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"dishenggg"},"content":"        db.dialog.setTextAlignment(TextAlignment.RIGHT);","lastModifiedDate":"2023-09-08"},{"lineNumber":70,"author":{"gitId":"dishenggg"},"content":"        db.setBackgroundColor(\"#DDDDDD\");","lastModifiedDate":"2023-09-08"},{"lineNumber":71,"author":{"gitId":"dishenggg"},"content":"        return db;","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":75,"author":{"gitId":"dishenggg"},"content":"     * Creates the dialog box for joe.","lastModifiedDate":"2023-09-08"},{"lineNumber":76,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":77,"author":{"gitId":"dishenggg"},"content":"     * @param text The text in the dialog.","lastModifiedDate":"2023-09-08"},{"lineNumber":78,"author":{"gitId":"dishenggg"},"content":"     * @param img The image to be displayed for joe.","lastModifiedDate":"2023-09-08"},{"lineNumber":79,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":80,"author":{"gitId":"dishenggg"},"content":"    public static DialogBox getJoeDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"dishenggg"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"dishenggg"},"content":"        db.dialog.setTextAlignment(TextAlignment.LEFT);","lastModifiedDate":"2023-09-08"},{"lineNumber":83,"author":{"gitId":"dishenggg"},"content":"        db.flip();","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"dishenggg"},"content":"        db.setBackgroundColor(\"#CCCCCC\");","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"dishenggg"},"content":"        return db;","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":87,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":88,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":89,"author":{"gitId":"dishenggg"},"content":"     * Sets the background color of the dialog box.","lastModifiedDate":"2023-09-06"},{"lineNumber":90,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":91,"author":{"gitId":"dishenggg"},"content":"    private void setBackgroundColor(String color) {","lastModifiedDate":"2023-09-06"},{"lineNumber":92,"author":{"gitId":"dishenggg"},"content":"        this.setStyle(\"-fx-background-color: \" + color + \";\");","lastModifiedDate":"2023-09-06"},{"lineNumber":93,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":94,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":95,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"dishenggg":95}},{"path":"src/main/java/joe/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package joe.ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"import joe.Joe;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"    private Joe joe;","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"    private Image joeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/joever.jpg\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"     * Initializes the main window.","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"dishenggg"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"dishenggg"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"dishenggg"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"dishenggg"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"dishenggg"},"content":"                DialogBox.getJoeDialog(greet(), joeImage)","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"dishenggg"},"content":"        );","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"dishenggg"},"content":"     * Sets the joe chat-bot.","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"dishenggg"},"content":"     * @param j The Joe chat-bot","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"dishenggg"},"content":"    public void setJoe(Joe j) {","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"dishenggg"},"content":"        joe \u003d j;","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"dishenggg"},"content":"     * Displays a greeting message to the user.","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"dishenggg"},"content":"    public String greet() {","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"dishenggg"},"content":"        return (\"Hello! I\u0027m Joe\\nWhat can I do for you?\");","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"dishenggg"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Joe\u0027s reply and then appends them to","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"dishenggg"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"dishenggg"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"dishenggg"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"dishenggg"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":65,"author":{"gitId":"dishenggg"},"content":"        //Prevents error message when user input is empty","lastModifiedDate":"2023-09-13"},{"lineNumber":66,"author":{"gitId":"dishenggg"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":67,"author":{"gitId":"dishenggg"},"content":"            return;","lastModifiedDate":"2023-09-13"},{"lineNumber":68,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":69,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":70,"author":{"gitId":"dishenggg"},"content":"        String response \u003d joe.getResponse(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"dishenggg"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"dishenggg"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"dishenggg"},"content":"                DialogBox.getJoeDialog(response, joeImage)","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"dishenggg"},"content":"        );","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"dishenggg"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"dishenggg":77}},{"path":"src/main/java/joe/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package joe.ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"import joe.Joe;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":" * Represents the user interface for interacting with the program.","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"public class Ui extends Application {","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"    private Joe joe \u003d new Joe();","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"     * Constructs a new Ui object.","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"    public Ui() {","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Ui.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"dishenggg"},"content":"            if (Math.random() \u003c\u003d 0.1) {","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"dishenggg"},"content":"                stage.setTitle(\"Joe who?\");","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"dishenggg"},"content":"            } else {","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"dishenggg"},"content":"                stage.setTitle(\"It\u0027s Joever\");","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"dishenggg"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"dishenggg"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setJoe(joe);","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"dishenggg"},"content":"            stage.show();","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"dishenggg"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"dishenggg"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"dishenggg":44}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"        \u003cText fx:id\u003d\"dialog\" wrappingWidth\u003d\"300\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"                \u003cInsets top\u003d\"5.0\" right\u003d\"5.0\" bottom\u003d\"0.0\" left\u003d\"5.0\"/\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"        \u003c/Text\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"        \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"10.0\"/\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"dishenggg":21}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"            fx:controller\u003d\"joe.ui.MainWindow\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"395.0\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"                        \u003cInsets top\u003d\"5.0\" right\u003d\"5.0\" bottom\u003d\"5.0\" left\u003d\"5.0\"/\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"dishenggg":28}},{"path":"src/test/java/joe/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package joe;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"import joe.commands.ByeCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"import joe.commands.Command;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"import joe.commands.DeadlineCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"import joe.commands.DeleteCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"import joe.commands.EventCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"import joe.commands.InvalidCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"import joe.commands.ListCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"import joe.commands.MarkCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"import joe.commands.TodoCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"import joe.commands.UnmarkCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"    // Tests for empty commands","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"    public void parse_empty_invalidCommand() {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"        Command c \u003d Parser.parse(\"\");","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"        assertTrue(c instanceof InvalidCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"    public void parse_whitespace_invalidCommand() {","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"        Command c \u003d Parser.parse(\"    \");","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"        assertTrue(c instanceof InvalidCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"dishenggg"},"content":"    // Tests for invalid command words","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"dishenggg"},"content":"    public void parse_randomOneWordInput_invalidCommand() {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"dishenggg"},"content":"        Command c \u003d Parser.parse(\"sdfjhg\");","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"dishenggg"},"content":"        assertTrue(c instanceof InvalidCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"dishenggg"},"content":"    public void parse_randomManyWordInput_invalidCommand() {","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"dishenggg"},"content":"        Command c \u003d Parser.parse(\"sdfjhg aklg1h la1kg jhalk1 fhalk 12321\");","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"dishenggg"},"content":"        assertTrue(c instanceof InvalidCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"dishenggg"},"content":"    // Tests for extra whitespaces in args","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"dishenggg"},"content":"    public void parse_markWithExtraWhitespace_success() {","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"dishenggg"},"content":"        Command c \u003d Parser.parse(\"mark 1   \");","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"dishenggg"},"content":"        assertTrue(c instanceof MarkCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"dishenggg"},"content":"        Command c1 \u003d Parser.parse(\"mark     1\");","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"dishenggg"},"content":"        assertTrue(c1 instanceof MarkCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"dishenggg"},"content":"    public void parse_unmarkWithExtraWhitespace_success() {","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"dishenggg"},"content":"        Command c \u003d Parser.parse(\"unmark 1   \");","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"dishenggg"},"content":"        assertTrue(c instanceof UnmarkCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"dishenggg"},"content":"        Command c1 \u003d Parser.parse(\"unmark     1\");","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"dishenggg"},"content":"        assertTrue(c1 instanceof UnmarkCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"dishenggg"},"content":"    public void parse_todoWithExtraWhitespace_success() {","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"dishenggg"},"content":"        Command c \u003d Parser.parse(\"todo wow whitespaces   \");","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"dishenggg"},"content":"        assertTrue(c instanceof TodoCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"dishenggg"},"content":"        Command c1 \u003d Parser.parse(\"todo     wow whitespaces\");","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"dishenggg"},"content":"        assertTrue(c1 instanceof TodoCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"dishenggg"},"content":"    public void parse_deadlineWithExtraWhitespace_success() {","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"dishenggg"},"content":"        Command c \u003d Parser.parse(\"deadline wow whitespaces /by 31/08/2023 1350   \");","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"dishenggg"},"content":"        assertTrue(c instanceof DeadlineCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"dishenggg"},"content":"        Command c1 \u003d Parser.parse(\"deadline     wow whitespaces /by 31/08/2023 1350\");","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"dishenggg"},"content":"        assertTrue(c1 instanceof DeadlineCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"dishenggg"},"content":"    public void parse_eventWithExtraWhitespace_success() {","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"dishenggg"},"content":"        Command c \u003d Parser.parse(\"event wow whitespaces /from 31/08/2023 1350 /to 31/08/2023 1351   \");","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"dishenggg"},"content":"        assertTrue(c instanceof EventCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"dishenggg"},"content":"        Command c1 \u003d","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"dishenggg"},"content":"                Parser.parse(\"event     wow whitespaces /from 31/08/2023 1350 /to 31/08/2023 1351\");","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"dishenggg"},"content":"        assertTrue(c1 instanceof EventCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"dishenggg"},"content":"    // Tests for one word commands","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"dishenggg"},"content":"    public void parse_expectedBye_success() {","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"dishenggg"},"content":"        Command c \u003d Parser.parse(\"bye\");","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"dishenggg"},"content":"        assertTrue(c instanceof ByeCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"dishenggg"},"content":"    public void parse_expectedList_success() {","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"dishenggg"},"content":"        Command c \u003d Parser.parse(\"list\");","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"dishenggg"},"content":"        assertTrue(c instanceof ListCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"dishenggg"},"content":"    public void parse_uppercaseValidCommand_invalidCommand() {","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"dishenggg"},"content":"        Command c \u003d Parser.parse(\"LIST\");","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"dishenggg"},"content":"        assertTrue(c instanceof InvalidCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"dishenggg"},"content":"    public void parse_listWithArgs_invalidCommand() {","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"dishenggg"},"content":"        Command c \u003d Parser.parse(\"list 1\");","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"dishenggg"},"content":"        assertTrue(c instanceof InvalidCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"dishenggg"},"content":"    public void parse_byeWithArgs_invalidCommand() {","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"dishenggg"},"content":"        Command c \u003d Parser.parse(\"bye 1\");","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"dishenggg"},"content":"        assertTrue(c instanceof InvalidCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"dishenggg"},"content":"    // Tests for mark","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"dishenggg"},"content":"    public void parse_markNoArgs_invalidCommand() {","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"dishenggg"},"content":"        Command c \u003d Parser.parse(\"mark\");","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"dishenggg"},"content":"        assertTrue(c instanceof InvalidCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"dishenggg"},"content":"    public void parse_markManyArgs_invalidCommand() {","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"dishenggg"},"content":"        Command c \u003d Parser.parse(\"mark 1 1\");","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"dishenggg"},"content":"        assertTrue(c instanceof InvalidCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"dishenggg"},"content":"    public void parse_markNonNumericalArgs_invalidCommand() {","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"dishenggg"},"content":"        Command c \u003d Parser.parse(\"mark a\");","lastModifiedDate":"2023-09-02"},{"lineNumber":135,"author":{"gitId":"dishenggg"},"content":"        assertTrue(c instanceof InvalidCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"dishenggg"},"content":"    public void parse_markExpected_success() {","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"dishenggg"},"content":"        Command c \u003d Parser.parse(\"mark 1\");","lastModifiedDate":"2023-09-02"},{"lineNumber":141,"author":{"gitId":"dishenggg"},"content":"        assertTrue(c instanceof MarkCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"dishenggg"},"content":"    // Tests for unmark","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":146,"author":{"gitId":"dishenggg"},"content":"    public void parse_unmarkNoArgs_invalidCommand() {","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"dishenggg"},"content":"        Command c \u003d Parser.parse(\"unmark\");","lastModifiedDate":"2023-09-02"},{"lineNumber":148,"author":{"gitId":"dishenggg"},"content":"        assertTrue(c instanceof InvalidCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":149,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":150,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":151,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":152,"author":{"gitId":"dishenggg"},"content":"    public void parse_unmarkManyArgs_invalidCommand() {","lastModifiedDate":"2023-09-02"},{"lineNumber":153,"author":{"gitId":"dishenggg"},"content":"        Command c \u003d Parser.parse(\"unmark 1 1\");","lastModifiedDate":"2023-09-02"},{"lineNumber":154,"author":{"gitId":"dishenggg"},"content":"        assertTrue(c instanceof InvalidCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":155,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":156,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":157,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":158,"author":{"gitId":"dishenggg"},"content":"    public void parse_unmarkNonNumericalArgs_invalidCommand() {","lastModifiedDate":"2023-09-02"},{"lineNumber":159,"author":{"gitId":"dishenggg"},"content":"        Command c \u003d Parser.parse(\"unmark a\");","lastModifiedDate":"2023-09-02"},{"lineNumber":160,"author":{"gitId":"dishenggg"},"content":"        assertTrue(c instanceof InvalidCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":161,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":162,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":163,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":164,"author":{"gitId":"dishenggg"},"content":"    public void parse_unmarkExpected_success() {","lastModifiedDate":"2023-09-02"},{"lineNumber":165,"author":{"gitId":"dishenggg"},"content":"        Command c \u003d Parser.parse(\"unmark 1\");","lastModifiedDate":"2023-09-02"},{"lineNumber":166,"author":{"gitId":"dishenggg"},"content":"        assertTrue(c instanceof UnmarkCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":167,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":168,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":169,"author":{"gitId":"dishenggg"},"content":"    // Tests for delete","lastModifiedDate":"2023-09-02"},{"lineNumber":170,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":171,"author":{"gitId":"dishenggg"},"content":"    public void parse_deleteNoArgs_invalidCommand() {","lastModifiedDate":"2023-09-02"},{"lineNumber":172,"author":{"gitId":"dishenggg"},"content":"        Command c \u003d Parser.parse(\"delete\");","lastModifiedDate":"2023-09-02"},{"lineNumber":173,"author":{"gitId":"dishenggg"},"content":"        assertTrue(c instanceof InvalidCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":174,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":175,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":176,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":177,"author":{"gitId":"dishenggg"},"content":"    public void parse_deleteManyArgs_invalidCommand() {","lastModifiedDate":"2023-09-02"},{"lineNumber":178,"author":{"gitId":"dishenggg"},"content":"        Command c \u003d Parser.parse(\"delete 1 1\");","lastModifiedDate":"2023-09-02"},{"lineNumber":179,"author":{"gitId":"dishenggg"},"content":"        assertTrue(c instanceof InvalidCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":180,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":181,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":182,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":183,"author":{"gitId":"dishenggg"},"content":"    public void parse_deleteNonNumericalArgs_invalidCommand() {","lastModifiedDate":"2023-09-02"},{"lineNumber":184,"author":{"gitId":"dishenggg"},"content":"        Command c \u003d Parser.parse(\"delete a\");","lastModifiedDate":"2023-09-02"},{"lineNumber":185,"author":{"gitId":"dishenggg"},"content":"        assertTrue(c instanceof InvalidCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":186,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":187,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":188,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":189,"author":{"gitId":"dishenggg"},"content":"    public void parse_deleteExpected_success() {","lastModifiedDate":"2023-09-02"},{"lineNumber":190,"author":{"gitId":"dishenggg"},"content":"        Command c \u003d Parser.parse(\"delete 1\");","lastModifiedDate":"2023-09-02"},{"lineNumber":191,"author":{"gitId":"dishenggg"},"content":"        assertTrue(c instanceof DeleteCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":192,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":193,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":194,"author":{"gitId":"dishenggg"},"content":"    // Tests for todo","lastModifiedDate":"2023-09-02"},{"lineNumber":195,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":196,"author":{"gitId":"dishenggg"},"content":"    public void parse_todoNoArgs_invalidCommand() {","lastModifiedDate":"2023-09-02"},{"lineNumber":197,"author":{"gitId":"dishenggg"},"content":"        Command c \u003d Parser.parse(\"todo\");","lastModifiedDate":"2023-09-02"},{"lineNumber":198,"author":{"gitId":"dishenggg"},"content":"        assertTrue(c instanceof InvalidCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":199,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":200,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":201,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":202,"author":{"gitId":"dishenggg"},"content":"    public void parse_todoWhitespaceArgs_invalidCommand() {","lastModifiedDate":"2023-09-02"},{"lineNumber":203,"author":{"gitId":"dishenggg"},"content":"        Command c \u003d Parser.parse(\"todo       \");","lastModifiedDate":"2023-09-02"},{"lineNumber":204,"author":{"gitId":"dishenggg"},"content":"        assertTrue(c instanceof InvalidCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":205,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":206,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":207,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":208,"author":{"gitId":"dishenggg"},"content":"    public void parse_todoExpected_success() {","lastModifiedDate":"2023-09-02"},{"lineNumber":209,"author":{"gitId":"dishenggg"},"content":"        Command c \u003d Parser.parse(\"todo task\");","lastModifiedDate":"2023-09-02"},{"lineNumber":210,"author":{"gitId":"dishenggg"},"content":"        assertTrue(c instanceof TodoCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":211,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":212,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":213,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":214,"author":{"gitId":"dishenggg"},"content":"    public void parse_todoExpected1_success() {","lastModifiedDate":"2023-09-02"},{"lineNumber":215,"author":{"gitId":"dishenggg"},"content":"        Command c \u003d Parser.parse(\"todo 1 egg\");","lastModifiedDate":"2023-09-02"},{"lineNumber":216,"author":{"gitId":"dishenggg"},"content":"        assertTrue(c instanceof TodoCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":217,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":218,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":219,"author":{"gitId":"dishenggg"},"content":"    // Tests for Deadline","lastModifiedDate":"2023-09-02"},{"lineNumber":220,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":221,"author":{"gitId":"dishenggg"},"content":"    public void parse_deadlineNoArgs_invalidCommand() {","lastModifiedDate":"2023-09-02"},{"lineNumber":222,"author":{"gitId":"dishenggg"},"content":"        Command c \u003d Parser.parse(\"deadline\");","lastModifiedDate":"2023-09-02"},{"lineNumber":223,"author":{"gitId":"dishenggg"},"content":"        assertTrue(c instanceof InvalidCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":224,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":225,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":226,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":227,"author":{"gitId":"dishenggg"},"content":"    public void parse_deadlineWhitespaceArgs_invalidCommand() {","lastModifiedDate":"2023-09-02"},{"lineNumber":228,"author":{"gitId":"dishenggg"},"content":"        Command c \u003d Parser.parse(\"deadline       \");","lastModifiedDate":"2023-09-02"},{"lineNumber":229,"author":{"gitId":"dishenggg"},"content":"        assertTrue(c instanceof InvalidCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":230,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":231,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":232,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":233,"author":{"gitId":"dishenggg"},"content":"    public void parse_deadlineBadDate_invalidCommand() {","lastModifiedDate":"2023-09-02"},{"lineNumber":234,"author":{"gitId":"dishenggg"},"content":"        Command c \u003d Parser.parse(\"deadline task /by 32/01/1950 0000\");","lastModifiedDate":"2023-09-02"},{"lineNumber":235,"author":{"gitId":"dishenggg"},"content":"        assertTrue(c instanceof InvalidCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":236,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":237,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":238,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":239,"author":{"gitId":"dishenggg"},"content":"    public void parse_deadlineBadTime_invalidCommand() {","lastModifiedDate":"2023-09-02"},{"lineNumber":240,"author":{"gitId":"dishenggg"},"content":"        Command c \u003d Parser.parse(\"deadline task /by 01/01/1950 2401\");","lastModifiedDate":"2023-09-02"},{"lineNumber":241,"author":{"gitId":"dishenggg"},"content":"        assertTrue(c instanceof InvalidCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":242,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":243,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":244,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":245,"author":{"gitId":"dishenggg"},"content":"    public void parse_deadlineFormat_invalidCommand() {","lastModifiedDate":"2023-09-02"},{"lineNumber":246,"author":{"gitId":"dishenggg"},"content":"        Command c \u003d Parser.parse(\"deadline task /by 01 01 1950 00:00\");","lastModifiedDate":"2023-09-02"},{"lineNumber":247,"author":{"gitId":"dishenggg"},"content":"        assertTrue(c instanceof InvalidCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":248,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":249,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":250,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":251,"author":{"gitId":"dishenggg"},"content":"    public void parse_deadlineExpected_success() {","lastModifiedDate":"2023-09-02"},{"lineNumber":252,"author":{"gitId":"dishenggg"},"content":"        Command c \u003d Parser.parse(\"deadline task /by 01/01/1950 0000\");","lastModifiedDate":"2023-09-02"},{"lineNumber":253,"author":{"gitId":"dishenggg"},"content":"        assertTrue(c instanceof DeadlineCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":254,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":255,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":256,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":257,"author":{"gitId":"dishenggg"},"content":"    public void parse_deadlineExpected1_success() {","lastModifiedDate":"2023-09-02"},{"lineNumber":258,"author":{"gitId":"dishenggg"},"content":"        Command c \u003d Parser.parse(\"deadline 1 egg /by 01/01/2090 0000\");","lastModifiedDate":"2023-09-02"},{"lineNumber":259,"author":{"gitId":"dishenggg"},"content":"        assertTrue(c instanceof DeadlineCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":260,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":261,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":262,"author":{"gitId":"dishenggg"},"content":"    // Tests for Event","lastModifiedDate":"2023-09-02"},{"lineNumber":263,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":264,"author":{"gitId":"dishenggg"},"content":"    public void parse_eventNoArgs_invalidCommand() {","lastModifiedDate":"2023-09-02"},{"lineNumber":265,"author":{"gitId":"dishenggg"},"content":"        Command c \u003d Parser.parse(\"event\");","lastModifiedDate":"2023-09-02"},{"lineNumber":266,"author":{"gitId":"dishenggg"},"content":"        assertTrue(c instanceof InvalidCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":267,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":268,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":269,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":270,"author":{"gitId":"dishenggg"},"content":"    public void parse_eventWhitespaceArgs_invalidCommand() {","lastModifiedDate":"2023-09-02"},{"lineNumber":271,"author":{"gitId":"dishenggg"},"content":"        Command c \u003d Parser.parse(\"event       \");","lastModifiedDate":"2023-09-02"},{"lineNumber":272,"author":{"gitId":"dishenggg"},"content":"        assertTrue(c instanceof InvalidCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":273,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":274,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":275,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":276,"author":{"gitId":"dishenggg"},"content":"    public void parse_eventBadDate_invalidCommand() {","lastModifiedDate":"2023-09-02"},{"lineNumber":277,"author":{"gitId":"dishenggg"},"content":"        Command c \u003d Parser.parse(\"event task /from 01/13/1950 0000 /to 01/01/2000 0000\");","lastModifiedDate":"2023-09-02"},{"lineNumber":278,"author":{"gitId":"dishenggg"},"content":"        assertTrue(c instanceof InvalidCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":279,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":280,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":281,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":282,"author":{"gitId":"dishenggg"},"content":"    public void parse_eventBadTime_invalidCommand() {","lastModifiedDate":"2023-09-02"},{"lineNumber":283,"author":{"gitId":"dishenggg"},"content":"        Command c \u003d Parser.parse(\"event task /from 01/01/1950 0000 /to 01/01/2000 9999\");","lastModifiedDate":"2023-09-02"},{"lineNumber":284,"author":{"gitId":"dishenggg"},"content":"        assertTrue(c instanceof InvalidCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":285,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":286,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":287,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":288,"author":{"gitId":"dishenggg"},"content":"    public void parse_eventBadFormat_invalidCommand() {","lastModifiedDate":"2023-09-02"},{"lineNumber":289,"author":{"gitId":"dishenggg"},"content":"        Command c \u003d Parser.parse(\"event task /from 01-01-1950 0000 /to 01/01/2000 0000\");","lastModifiedDate":"2023-09-02"},{"lineNumber":290,"author":{"gitId":"dishenggg"},"content":"        assertTrue(c instanceof InvalidCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":291,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":292,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":293,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":294,"author":{"gitId":"dishenggg"},"content":"    public void parse_eventExpected_success() {","lastModifiedDate":"2023-09-02"},{"lineNumber":295,"author":{"gitId":"dishenggg"},"content":"        Command c \u003d Parser.parse(\"event task /from 01/01/1950 0000 /to 01/01/2000 0000\");","lastModifiedDate":"2023-09-02"},{"lineNumber":296,"author":{"gitId":"dishenggg"},"content":"        assertTrue(c instanceof EventCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":297,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":298,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":299,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":300,"author":{"gitId":"dishenggg"},"content":"    public void parse_eventExpected1_success() {","lastModifiedDate":"2023-09-02"},{"lineNumber":301,"author":{"gitId":"dishenggg"},"content":"        Command c \u003d Parser.parse(\"event 1 egg /from 01/01/2090 0000 /to 01/01/2090 0001\");","lastModifiedDate":"2023-09-02"},{"lineNumber":302,"author":{"gitId":"dishenggg"},"content":"        assertTrue(c instanceof EventCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":303,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":304,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"dishenggg":304}},{"path":"src/test/java/joe/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package joe;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"import joe.tasks.DeadlineTask;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"import joe.tasks.EventTask;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"import joe.tasks.TodoTask;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"    public void testEmptyString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"        assertEquals(\"Here are your tasks:\", new TaskList().toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"    public void testUnmarkedString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"        LocalDateTime dt \u003d","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"                LocalDateTime.parse(\"01/01/2000 0000\", DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"        tasks.add(new TodoTask(\"Todo\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"        tasks.add(new DeadlineTask(\"Deadline\", dt));","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"        tasks.add(new EventTask(\"Event\", dt, dt));","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"        assertEquals(","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"                \"Here are your tasks:\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"                        + \"1.[T][ ] Todo\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"                        + \"2.[D][ ] Deadline (by: 01 Jan 2000 00:00)\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"dishenggg"},"content":"                        + \"3.[E][ ] Event (from: 01 Jan 2000 00:00 to: 01 Jan 2000 00:00)\",","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"dishenggg"},"content":"                tasks.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"dishenggg"},"content":"    public void testMarkedString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"dishenggg"},"content":"        LocalDateTime dt \u003d","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"dishenggg"},"content":"                LocalDateTime.parse(\"01/01/2000 0000\", DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"dishenggg"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"dishenggg"},"content":"        TodoTask newTodo \u003d new TodoTask(\"Todo\");","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"dishenggg"},"content":"        DeadlineTask newDeadline \u003d (new DeadlineTask(\"Deadline\", dt));","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"dishenggg"},"content":"        EventTask newEvent \u003d (new EventTask(\"Event\", dt, dt));","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"dishenggg"},"content":"        tasks.add(newTodo);","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"dishenggg"},"content":"        tasks.add(newDeadline);","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"dishenggg"},"content":"        tasks.add(newEvent);","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"dishenggg"},"content":"        newTodo.markAsDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"dishenggg"},"content":"        newDeadline.markAsDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"dishenggg"},"content":"        newEvent.markAsDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"dishenggg"},"content":"        assertEquals(","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"dishenggg"},"content":"                \"Here are your tasks:\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"dishenggg"},"content":"                        + \"1.[T][X] Todo\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"dishenggg"},"content":"                        + \"2.[D][X] Deadline (by: 01 Jan 2000 00:00)\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"dishenggg"},"content":"                        + \"3.[E][X] Event (from: 01 Jan 2000 00:00 to: 01 Jan 2000 00:00)\",","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"dishenggg"},"content":"                tasks.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"dishenggg"},"content":"    public void find_wordExists_success() {","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"dishenggg"},"content":"        LocalDateTime dt \u003d","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"dishenggg"},"content":"                LocalDateTime.parse(\"01/01/2000 0000\", DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"dishenggg"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"dishenggg"},"content":"        TodoTask newTodo \u003d new TodoTask(\"Todo\");","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"dishenggg"},"content":"        DeadlineTask newDeadline \u003d (new DeadlineTask(\"Deadline\", dt));","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"dishenggg"},"content":"        EventTask newEvent \u003d (new EventTask(\"Event\", dt, dt));","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"dishenggg"},"content":"        tasks.add(newTodo);","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"dishenggg"},"content":"        tasks.add(newDeadline);","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"dishenggg"},"content":"        tasks.add(newEvent);","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"dishenggg"},"content":"        TaskList res \u003d tasks.find(\"Deadline\");","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"dishenggg"},"content":"        assertEquals(\"Here are your tasks:\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"dishenggg"},"content":"                + \"1.[D][ ] Deadline (by: 01 Jan 2000 00:00)\", res.toString());","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"dishenggg"},"content":"    public void find_wordDoesNotExist_noResult() {","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"dishenggg"},"content":"        LocalDateTime dt \u003d","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"dishenggg"},"content":"                LocalDateTime.parse(\"01/01/2000 0000\", DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"dishenggg"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"dishenggg"},"content":"        TodoTask newTodo \u003d new TodoTask(\"Todo\");","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"dishenggg"},"content":"        DeadlineTask newDeadline \u003d (new DeadlineTask(\"Deadline\", dt));","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"dishenggg"},"content":"        EventTask newEvent \u003d (new EventTask(\"Event\", dt, dt));","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"dishenggg"},"content":"        tasks.add(newTodo);","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"dishenggg"},"content":"        tasks.add(newDeadline);","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"dishenggg"},"content":"        tasks.add(newEvent);","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"dishenggg"},"content":"        TaskList res \u003d tasks.find(\"adlfhasdlkfh\");","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"dishenggg"},"content":"        assertEquals(\"Here are your tasks:\", res.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"dishenggg"},"content":"    public void find_emptySearchString_allTasks() {","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"dishenggg"},"content":"        LocalDateTime dt \u003d","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"dishenggg"},"content":"                LocalDateTime.parse(\"01/01/2000 0000\", DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"dishenggg"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"dishenggg"},"content":"        TodoTask newTodo \u003d new TodoTask(\"Todo\");","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"dishenggg"},"content":"        DeadlineTask newDeadline \u003d (new DeadlineTask(\"Deadline\", dt));","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"dishenggg"},"content":"        EventTask newEvent \u003d (new EventTask(\"Event\", dt, dt));","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"dishenggg"},"content":"        tasks.add(newTodo);","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"dishenggg"},"content":"        tasks.add(newDeadline);","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"dishenggg"},"content":"        tasks.add(newEvent);","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"dishenggg"},"content":"        TaskList res \u003d tasks.find(\"\");","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"dishenggg"},"content":"        assertEquals(\"Here are your tasks:\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":102,"author":{"gitId":"dishenggg"},"content":"                + \"1.[T][ ] Todo\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":103,"author":{"gitId":"dishenggg"},"content":"                + \"2.[D][ ] Deadline (by: 01 Jan 2000 00:00)\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":104,"author":{"gitId":"dishenggg"},"content":"                + \"3.[E][ ] Event (from: 01 Jan 2000 00:00 to: 01 Jan 2000 00:00)\", res.toString());","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"dishenggg"},"content":"    public void find_randomCase_success() {","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"dishenggg"},"content":"        LocalDateTime dt \u003d","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"dishenggg"},"content":"                LocalDateTime.parse(\"01/01/2000 0000\", DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"dishenggg"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"dishenggg"},"content":"        TodoTask newTodo \u003d new TodoTask(\"all lower case\");","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"dishenggg"},"content":"        DeadlineTask newDeadline \u003d (new DeadlineTask(\"ALL UPPER CASE\", dt));","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"dishenggg"},"content":"        EventTask newEvent \u003d (new EventTask(\"rAnDoM CaSe\", dt, dt));","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"dishenggg"},"content":"        tasks.add(newTodo);","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"dishenggg"},"content":"        tasks.add(newDeadline);","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"dishenggg"},"content":"        tasks.add(newEvent);","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"dishenggg"},"content":"        TaskList res \u003d tasks.find(\"cAsE\");","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"dishenggg"},"content":"        assertEquals(\"Here are your tasks:\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":120,"author":{"gitId":"dishenggg"},"content":"                + \"1.[T][ ] all lower case\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":121,"author":{"gitId":"dishenggg"},"content":"                + \"2.[D][ ] ALL UPPER CASE (by: 01 Jan 2000 00:00)\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":122,"author":{"gitId":"dishenggg"},"content":"                + \"3.[E][ ] rAnDoM CaSe (from: 01 Jan 2000 00:00 to: 01 Jan 2000 00:00)\", res.toString());","lastModifiedDate":"2023-09-05"},{"lineNumber":123,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"dishenggg":124}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"todo borrow book","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"deadline return book /by 26/8/2023 1200","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"event project meeting /from 22/8/2023 2359 /to 31/12/2100 0000","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"mark 2","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"mark 4","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"unmark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"unmark 4","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"unmark 1","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"todo todo","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"mark 4","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"unmark 4","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"mark a","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"unmark a","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"mark 1 1","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"unmark 1 1","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"markk 1","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"unmarkk 1","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"mark","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"unmark","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"markk","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"unmarkk","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"mark   1","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"unmark        1","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"dishenggg"},"content":"deadline      space    test     /by      22/8/2100 1111","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"dishenggg"},"content":"event      many      spaces      /from     22/8/2500 1111 /to   22/8/2800 2222","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"dishenggg"},"content":"todo             spaces","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"dishenggg"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"dishenggg"},"content":"delete 1","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"dishenggg"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"dishenggg"},"content":"delete 4","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"dishenggg"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"dishenggg"},"content":"deletee 1","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"dishenggg"},"content":"delete 1 1","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"dishenggg"},"content":"todo","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"dishenggg"},"content":"deadline","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"dishenggg"},"content":"event","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"dishenggg"},"content":"mark","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"dishenggg"},"content":"unmark","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"dishenggg"},"content":"delete","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"dishenggg"},"content":"deadline test no deadline /by","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"dishenggg"},"content":"event test no from /from     /to   tomorrow","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"dishenggg"},"content":"event test no to /from today /to","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"dishenggg"},"content":"deadline test bad date /by 33/12/1000 2000","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"dishenggg"},"content":"deadline test bad time /by 31/12/1000 2401","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"dishenggg"},"content":"bye","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"dishenggg":53}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"REM delete saved task list from previous run","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"if exist joe.TXT del joe.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"javac  -cp ..\\src\\main\\java\\ -Xlint:none -d ..\\bin ..\\src\\main\\java\\joe\\*.java ..\\src\\main\\java\\joe\\commands\\*.java ..\\src\\main\\java\\joe\\exceptions\\*.java ..\\src\\main\\java\\joe\\tasks\\*.java","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"java -classpath ..\\bin Joe \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"dishenggg":5,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"# delete saved task list from previous run","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"if [ -e \"./joe.TXT\" ]","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"then","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"    rm joe.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"fi","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"java -classpath ../bin Joe \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"dishenggg":7,"-":37}}]
