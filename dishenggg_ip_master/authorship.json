[{"path":"src/main/java/joe/Joe.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package joe;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"import joe.commands.Command;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"import joe.exceptions.JoeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"public class Joe {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"  private TaskList tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"  private final Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"  private final Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"  public Joe(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"    ui \u003d new Ui();","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"    storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"    try {","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"      tasks \u003d storage.readTasks();","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"    } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"      ui.print(\"No saved task list was found.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"      tasks \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"    } catch (IOException | JoeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"      ui.print(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"      tasks \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"  public void run() {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"    ui.newLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"    ui.greet();","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"    ui.newLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"    boolean isExit \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"dishenggg"},"content":"    while (!isExit) {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"dishenggg"},"content":"      try {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"dishenggg"},"content":"        String input \u003d ui.readCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"dishenggg"},"content":"        Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"dishenggg"},"content":"        c.execute(tasks, ui, storage);","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"dishenggg"},"content":"        isExit \u003d c.isExit();","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"dishenggg"},"content":"      } catch (JoeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"dishenggg"},"content":"        ui.print(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"dishenggg"},"content":"      } finally {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"dishenggg"},"content":"        ui.newLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"dishenggg"},"content":"      }","lastModifiedDate":"2023-08-20"},{"lineNumber":43,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":45,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"dishenggg"},"content":"  public static void main(String[] args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"dishenggg"},"content":"    new Joe(\"joe.txt\").run();","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"dishenggg":48,"-":1}},{"path":"src/main/java/joe/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package joe;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"import joe.commands.*;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"import joe.exceptions.JoeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"public class Parser {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"  private enum CommandType {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"    LIST,","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"    TODO,","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"    DEADLINE,","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"    EVENT,","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"    MARK,","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"    UNMARK,","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"    DELETE,","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"    BYE,","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"    INVALID","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"  private static final Pattern commandPattern \u003d Pattern.compile(\"^(\\\\S+)\\\\s?(.*)$\");","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"  private static final String DATETIME_FORMAT \u003d \"d/M/yyyy HHmm\";","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"  public static Command parse(String input) {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"    Matcher m \u003d commandPattern.matcher(input.trim());","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"    if (!m.matches()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"      return new InvalidCommand(\"Invalid Command Format\");","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"dishenggg"},"content":"    CommandType type \u003d parseType(m.group(1));","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"dishenggg"},"content":"    String args \u003d m.group(2);","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"dishenggg"},"content":"    switch (type) {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"dishenggg"},"content":"      case BYE:","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"dishenggg"},"content":"        return new ByeCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"dishenggg"},"content":"      case LIST:","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"dishenggg"},"content":"        return new ListCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"dishenggg"},"content":"      case MARK:","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"dishenggg"},"content":"        return handleMark(args);","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"dishenggg"},"content":"      case UNMARK:","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"dishenggg"},"content":"        return handleUnmark(args);","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"dishenggg"},"content":"      case TODO:","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"dishenggg"},"content":"        return handleTodo(args);","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"dishenggg"},"content":"      case DEADLINE:","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"dishenggg"},"content":"        return handleDeadline(args);","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"dishenggg"},"content":"      case EVENT:","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"dishenggg"},"content":"        return handleEvent(args);","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"dishenggg"},"content":"      case DELETE:","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"dishenggg"},"content":"        return handleDelete(args);","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"dishenggg"},"content":"      default:","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"dishenggg"},"content":"        return handleInvalidKeyword();","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"dishenggg"},"content":"  private static CommandType parseType(String input) {","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"dishenggg"},"content":"    try {","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"dishenggg"},"content":"      return CommandType.valueOf(input.toUpperCase());","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"dishenggg"},"content":"    } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"dishenggg"},"content":"      return CommandType.INVALID;","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"dishenggg"},"content":"  private static Command handleMark(String args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"dishenggg"},"content":"    try {","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"dishenggg"},"content":"      int idx \u003d parseIndexArgs(args);","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"dishenggg"},"content":"      return new MarkCommand(idx);","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"dishenggg"},"content":"    } catch (JoeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"dishenggg"},"content":"      return new InvalidCommand(\"Invalid arguments for mark\\nPlease follow: mark \u003ctask_num\u003e\");","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"dishenggg"},"content":"  private static Command handleUnmark(String args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"dishenggg"},"content":"    try {","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"dishenggg"},"content":"      int idx \u003d parseIndexArgs(args);","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"dishenggg"},"content":"      return new UnmarkCommand(idx);","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"dishenggg"},"content":"    } catch (JoeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"dishenggg"},"content":"      return new InvalidCommand(\"Invalid arguments for unmark\\nPlease follow: unmark \u003ctask_num\u003e\");","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"dishenggg"},"content":"  private static Command handleTodo(String args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"dishenggg"},"content":"    Pattern p \u003d Pattern.compile(\"(\\\\S.+)\");","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"dishenggg"},"content":"    Matcher m \u003d p.matcher(args.trim());","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"dishenggg"},"content":"    if (!m.matches()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"dishenggg"},"content":"      return new InvalidCommand(\"Invalid arguments for todo\\nPlease follow: todo \u003ctask\u003e\");","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"dishenggg"},"content":"    return new TodoCommand(m.group(1));","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"dishenggg"},"content":"  private static Command handleDeadline(String args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"dishenggg"},"content":"    Pattern p \u003d Pattern.compile(\"(\\\\S.+)\\\\s+/by\\\\s+(\\\\d{1,2}/\\\\d{1,2}/\\\\d{4} \\\\d{4})\");","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"dishenggg"},"content":"    Matcher m \u003d p.matcher(args.trim());","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"dishenggg"},"content":"    if (!m.matches()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"dishenggg"},"content":"      return new InvalidCommand(","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"dishenggg"},"content":"          \"Invalid arguments for deadline\\nPlease follow: deadline \u003ctask\u003e /by \u003cd/M/yyyy HHmm\u003e\");","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"dishenggg"},"content":"    try {","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"dishenggg"},"content":"      LocalDateTime by \u003d","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"dishenggg"},"content":"          LocalDateTime.parse(m.group(2), DateTimeFormatter.ofPattern(DATETIME_FORMAT));","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"dishenggg"},"content":"      return new DeadlineCommand(m.group(1), by);","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"dishenggg"},"content":"    } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"dishenggg"},"content":"      return new InvalidCommand(","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"dishenggg"},"content":"          \"Failed to parse the date.\\nPlease ensure it is a valid datetime following the format \u003cd/M/yyyy HHmm\u003e\");","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"dishenggg"},"content":"  private static Command handleEvent(String args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"dishenggg"},"content":"    Pattern p \u003d","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"dishenggg"},"content":"        Pattern.compile(","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"dishenggg"},"content":"            \"(\\\\S.+)\\\\s+/from\\\\s+(\\\\d{1,2}/\\\\d{1,2}/\\\\d{4} \\\\d{4})\\\\s+/to\\\\s+(\\\\d{1,2}/\\\\d{1,2}/\\\\d{4} \\\\d{4})\");","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"dishenggg"},"content":"    Matcher m \u003d p.matcher(args.trim());","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"dishenggg"},"content":"    if (!m.matches()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"dishenggg"},"content":"      return new InvalidCommand(","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"dishenggg"},"content":"          \"Invalid arguments for event\\nPlease follow: event \u003ctask\u003e /from \u003cd/M/yyyy HHmm\u003e /to \u003cd/M/yyyy HHmm\u003e\");","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"dishenggg"},"content":"    try {","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"dishenggg"},"content":"      LocalDateTime from \u003d","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"dishenggg"},"content":"          LocalDateTime.parse(m.group(2), DateTimeFormatter.ofPattern(DATETIME_FORMAT));","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"dishenggg"},"content":"      LocalDateTime to \u003d","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"dishenggg"},"content":"          LocalDateTime.parse(m.group(3), DateTimeFormatter.ofPattern(DATETIME_FORMAT));","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"dishenggg"},"content":"      return new EventCommand(m.group(1), from, to);","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"dishenggg"},"content":"    } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"dishenggg"},"content":"      return new InvalidCommand(","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"dishenggg"},"content":"          \"Failed to parse the date.\\nPlease ensure it is a valid datetime following the format \u003cd/M/yyyy HHmm\u003e\");","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"dishenggg"},"content":"  private static Command handleDelete(String args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"dishenggg"},"content":"    try {","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"dishenggg"},"content":"      int idx \u003d parseIndexArgs(args);","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"dishenggg"},"content":"      return new DeleteCommand(idx);","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"dishenggg"},"content":"    } catch (JoeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"dishenggg"},"content":"      return new InvalidCommand(\"Invalid arguments for delete\\nPlease follow: delete \u003ctask_num\u003e\");","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"dishenggg"},"content":"  private static Command handleInvalidKeyword() {","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"dishenggg"},"content":"    StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"dishenggg"},"content":"    for (CommandType cmd : CommandType.values()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"dishenggg"},"content":"      if (CommandType.INVALID.equals(cmd)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"dishenggg"},"content":"        continue;","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"dishenggg"},"content":"      }","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"dishenggg"},"content":"      sb.append(cmd.toString().toLowerCase());","lastModifiedDate":"2023-08-30"},{"lineNumber":148,"author":{"gitId":"dishenggg"},"content":"      sb.append(\", \");","lastModifiedDate":"2023-08-30"},{"lineNumber":149,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"dishenggg"},"content":"    sb.setLength(sb.length() - 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":151,"author":{"gitId":"dishenggg"},"content":"    String msg \u003d","lastModifiedDate":"2023-08-30"},{"lineNumber":152,"author":{"gitId":"dishenggg"},"content":"        String.format(","lastModifiedDate":"2023-08-30"},{"lineNumber":153,"author":{"gitId":"dishenggg"},"content":"            \"Invalid Command Keyword!%nHere is a list of valid commands: %s\", sb);","lastModifiedDate":"2023-08-30"},{"lineNumber":154,"author":{"gitId":"dishenggg"},"content":"    return new InvalidCommand(msg);","lastModifiedDate":"2023-08-30"},{"lineNumber":155,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":157,"author":{"gitId":"dishenggg"},"content":"  private static int parseIndexArgs(String args) throws JoeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"dishenggg"},"content":"    Pattern indexPattern \u003d Pattern.compile(\"^(\\\\d+)$\");","lastModifiedDate":"2023-08-30"},{"lineNumber":159,"author":{"gitId":"dishenggg"},"content":"    Matcher m \u003d indexPattern.matcher(args.trim());","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"dishenggg"},"content":"    if (!m.matches()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":161,"author":{"gitId":"dishenggg"},"content":"      throw new JoeException(\"Failed to parse index\");","lastModifiedDate":"2023-08-30"},{"lineNumber":162,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":163,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":164,"author":{"gitId":"dishenggg"},"content":"    String idx \u003d m.group(1);","lastModifiedDate":"2023-08-30"},{"lineNumber":165,"author":{"gitId":"dishenggg"},"content":"    return Integer.parseInt(idx);","lastModifiedDate":"2023-08-30"},{"lineNumber":166,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":167,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"dishenggg":167}},{"path":"src/main/java/joe/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package joe;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"import java.util.List;","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"import joe.exceptions.JoeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"import joe.tasks.TodoTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"  private final Path taskFilePath;","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"  public Storage(String fileName) {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"    this.taskFilePath \u003d Paths.get(fileName);","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"  private static final Pattern taskPattern \u003d Pattern.compile(\"^\\\\[([TDE])\\\\]\\\\[[X\\\\s]\\\\]\\\\s(.+)\");","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"  private static final Pattern todoPattern \u003d Pattern.compile(\"^\\\\[T\\\\]\\\\[[X\\\\s]\\\\]\\\\s+(.+)$\");","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"  private static final Pattern deadlinePattern \u003d","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"      Pattern.compile(\"^\\\\[D\\\\]\\\\[[X\\\\s]\\\\]\\\\s+(.+)\\\\s+\\\\(by:\\\\s+(.+)\\\\)$\");","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"  private static final Pattern eventPattern \u003d","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"      Pattern.compile(\"^\\\\[E\\\\]\\\\[[X\\\\s]\\\\]\\\\s+(.+)\\\\s+\\\\(from:\\\\s+(.+)\\\\s+to:\\\\s+(.+)\\\\)$\");","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"  private void handleTodo(String input, TaskList tasks) throws JoeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"    Matcher m \u003d todoPattern.matcher(input);","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"    if (m.find()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"dishenggg"},"content":"      TodoTask newTask \u003d new TodoTask(m.group(1));","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"dishenggg"},"content":"      tasks.add(newTask);","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"dishenggg"},"content":"    } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"dishenggg"},"content":"      throw new JoeException(\"Todo in task file is corrupt\");","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"dishenggg"},"content":"  private void handleDeadline(String input, TaskList tasks) throws JoeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"dishenggg"},"content":"    Matcher m \u003d deadlinePattern.matcher(input);","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"dishenggg"},"content":"    if (m.find()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"dishenggg"},"content":"      TodoTask newTask \u003d new TodoTask(m.group(1));","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"dishenggg"},"content":"      tasks.add(newTask);","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"dishenggg"},"content":"    } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"dishenggg"},"content":"      throw new JoeException(\"Deadline in task file is corrupt\");","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"dishenggg"},"content":"  private void handleEvent(String input, TaskList tasks) throws JoeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"dishenggg"},"content":"    Matcher m \u003d eventPattern.matcher(input);","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"dishenggg"},"content":"    if (m.find()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"dishenggg"},"content":"      TodoTask newTask \u003d new TodoTask(m.group(1));","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"dishenggg"},"content":"      tasks.add(newTask);","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"dishenggg"},"content":"    } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"dishenggg"},"content":"      throw new JoeException(\"Event in task file is corrupt\");","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"dishenggg"},"content":"  public TaskList readTasks() throws JoeException, IOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"dishenggg"},"content":"    TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"dishenggg"},"content":"    if (!Files.exists(taskFilePath)) {","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"dishenggg"},"content":"      throw new FileNotFoundException();","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"dishenggg"},"content":"    List\u003cString\u003e lines \u003d Files.readAllLines(taskFilePath);","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"dishenggg"},"content":"    for (String line : lines) {","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"dishenggg"},"content":"      Matcher m \u003d taskPattern.matcher(line);","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"dishenggg"},"content":"      if (!m.find()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"dishenggg"},"content":"        throw new JoeException(\"Task file is corrupt\");","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"dishenggg"},"content":"      }","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"dishenggg"},"content":"      String type \u003d m.group(1);","lastModifiedDate":"2023-08-26"},{"lineNumber":71,"author":{"gitId":"dishenggg"},"content":"      switch (type) {","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"dishenggg"},"content":"        case \"T\":","lastModifiedDate":"2023-08-26"},{"lineNumber":73,"author":{"gitId":"dishenggg"},"content":"          handleTodo(line, tasks);","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"dishenggg"},"content":"          break;","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"dishenggg"},"content":"        case \"D\":","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"dishenggg"},"content":"          handleDeadline(line, tasks);","lastModifiedDate":"2023-08-26"},{"lineNumber":77,"author":{"gitId":"dishenggg"},"content":"          break;","lastModifiedDate":"2023-08-26"},{"lineNumber":78,"author":{"gitId":"dishenggg"},"content":"        case \"E\":","lastModifiedDate":"2023-08-26"},{"lineNumber":79,"author":{"gitId":"dishenggg"},"content":"          handleEvent(line, tasks);","lastModifiedDate":"2023-08-26"},{"lineNumber":80,"author":{"gitId":"dishenggg"},"content":"          break;","lastModifiedDate":"2023-08-26"},{"lineNumber":81,"author":{"gitId":"dishenggg"},"content":"        default:","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"dishenggg"},"content":"          throw new JoeException(\"Task file is corrupt\");","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"dishenggg"},"content":"      }","lastModifiedDate":"2023-08-26"},{"lineNumber":84,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":85,"author":{"gitId":"dishenggg"},"content":"    return tasks;","lastModifiedDate":"2023-08-26"},{"lineNumber":86,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-26"},{"lineNumber":87,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":88,"author":{"gitId":"dishenggg"},"content":"  public void saveToFile(TaskList tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"dishenggg"},"content":"    try {","lastModifiedDate":"2023-08-26"},{"lineNumber":90,"author":{"gitId":"dishenggg"},"content":"      List\u003cString\u003e taskStrings \u003d tasks.getStringList();","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"dishenggg"},"content":"      Files.write(","lastModifiedDate":"2023-08-26"},{"lineNumber":92,"author":{"gitId":"dishenggg"},"content":"          taskFilePath,","lastModifiedDate":"2023-08-26"},{"lineNumber":93,"author":{"gitId":"dishenggg"},"content":"          taskStrings,","lastModifiedDate":"2023-08-26"},{"lineNumber":94,"author":{"gitId":"dishenggg"},"content":"          StandardOpenOption.CREATE,","lastModifiedDate":"2023-08-26"},{"lineNumber":95,"author":{"gitId":"dishenggg"},"content":"          StandardOpenOption.TRUNCATE_EXISTING);","lastModifiedDate":"2023-08-26"},{"lineNumber":96,"author":{"gitId":"dishenggg"},"content":"    } catch (IOException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":97,"author":{"gitId":"dishenggg"},"content":"      System.out.println(\"Failed to save to file: \" + e);","lastModifiedDate":"2023-08-26"},{"lineNumber":98,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":99,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-26"},{"lineNumber":100,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"dishenggg":100}},{"path":"src/main/java/joe/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package joe;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"import java.util.List;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"import joe.tasks.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"public class TaskList {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"  private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"  public TaskList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"    this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"  public void add(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"    tasks.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"  public Task get(int idx) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"    return tasks.get(idx);","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"  public void remove(int idx) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"    tasks.remove(idx);","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"  public int size() {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"    return tasks.size();","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"  public List\u003cString\u003e getStringList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"dishenggg"},"content":"    return tasks.stream().map(Task::toString).collect(Collectors.toList());","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"dishenggg"},"content":"  @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"dishenggg"},"content":"  public String toString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"dishenggg"},"content":"    StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"dishenggg"},"content":"    sb.append(\"Here are your tasks:\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"dishenggg"},"content":"    for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"dishenggg"},"content":"      sb.append(i + 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"dishenggg"},"content":"      sb.append(\".\");","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"dishenggg"},"content":"      sb.append(tasks.get(i).toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"dishenggg"},"content":"      sb.append(\"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"dishenggg"},"content":"    sb.setLength(sb.length() - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"dishenggg"},"content":"    return sb.toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"dishenggg":47}},{"path":"src/main/java/joe/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package joe;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"public class Ui {","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"  private Scanner scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"  public Ui() {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"    this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"  public void greet() {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"    System.out.println(\"Hello! I\u0027m Joe\\nWhat can i do for you?\");","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"  public String readCommand() {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"    return scanner.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"  public void newLine() {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"    System.out.println();","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"  public void exit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"    scanner.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"  public void print(String msg) {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"    System.out.println(msg);","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"dishenggg":31}},{"path":"src/main/java/joe/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package joe.commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import joe.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"import joe.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"import joe.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"  public ByeCommand() {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"    this.isExit \u003d true;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"  @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"  public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"    ui.print(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"    ui.exit();","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"    storage.saveToFile(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"dishenggg":18}},{"path":"src/main/java/joe/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package joe.commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import joe.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"import joe.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"import joe.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"import joe.exceptions.JoeIndexOutOfBoundsException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"  protected boolean isExit \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"  public abstract void execute(TaskList tasks, Ui ui, Storage storage)","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"      throws JoeIndexOutOfBoundsException;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"  public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"    return isExit;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"dishenggg":17}},{"path":"src/main/java/joe/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package joe.commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"import joe.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"import joe.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"import joe.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"import joe.tasks.DeadlineTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"  private final String taskDetails;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"  private final LocalDateTime by;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"  public DeadlineCommand(String taskDetails, LocalDateTime by) {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"    this.taskDetails \u003d taskDetails;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"    this.by \u003d by;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"  @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"  public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"    DeadlineTask newTask \u003d new DeadlineTask(taskDetails, by);","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"    tasks.add(newTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"    ui.print(","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"        String.format(","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"            \"Got it, I\u0027ve added this task:%n %s%nNow you have %d tasks in the list.\",","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"            newTask, tasks.size()));","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"    storage.saveToFile(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"dishenggg":29}},{"path":"src/main/java/joe/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package joe.commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import joe.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"import joe.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"import joe.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"import joe.exceptions.JoeIndexOutOfBoundsException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"import joe.tasks.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"  private final int idx;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"  public DeleteCommand(int idx) {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"    this.idx \u003d idx;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"  @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"  public void execute(TaskList tasks, Ui ui, Storage storage) throws JoeIndexOutOfBoundsException {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"    if (idx \u003c 0 || idx \u003e tasks.size()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"      throw new JoeIndexOutOfBoundsException(idx);","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"    Task deletedTask \u003d tasks.get(idx - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"    tasks.remove(idx - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"    ui.print(","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"        String.format(","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"            \"Noted. I\u0027ve removed this task:%n %s%nNow you have %d tasks in the list.\",","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"            deletedTask, tasks.size()));","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"    storage.saveToFile(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"dishenggg":30}},{"path":"src/main/java/joe/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package joe.commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"import joe.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"import joe.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"import joe.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"import joe.tasks.EventTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"  private final String taskDetails;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"  private final LocalDateTime from;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"  private final LocalDateTime to;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"  public EventCommand(String taskDetails, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"    this.taskDetails \u003d taskDetails;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"    this.from \u003d from;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"    this.to \u003d to;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"  @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"  public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"    EventTask newTask \u003d new EventTask(taskDetails, from, to);","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"    tasks.add(newTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"    ui.print(","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"        String.format(","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"            \"Got it, I\u0027ve added this task:%n %s%nNow you have %d tasks in the list.\",","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"            newTask, tasks.size()));","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"    storage.saveToFile(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"dishenggg":31}},{"path":"src/main/java/joe/commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package joe.commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import joe.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"import joe.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"import joe.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"  private final String msg;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"  public InvalidCommand(String msg) {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"    this.msg \u003d msg;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"  @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"  public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"    ui.print(msg);","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"dishenggg":18}},{"path":"src/main/java/joe/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package joe.commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import joe.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"import joe.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"import joe.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"  @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"  public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"    ui.print(tasks.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"dishenggg":13}},{"path":"src/main/java/joe/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package joe.commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import joe.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"import joe.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"import joe.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"import joe.exceptions.JoeIndexOutOfBoundsException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"  private int idx;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"  public MarkCommand(int idx) {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"    this.idx \u003d idx;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"  @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"  public void execute(TaskList tasks, Ui ui, Storage storage) throws JoeIndexOutOfBoundsException {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"    if (idx \u003c 0 || idx \u003e tasks.size()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"      throw new JoeIndexOutOfBoundsException(idx);","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"    tasks.get(idx - 1).markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"    ui.print(String.format(\"Nice! I\u0027ve marked this task as done:%n %s\", tasks.get(idx - 1)));","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"    storage.saveToFile(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"dishenggg":26}},{"path":"src/main/java/joe/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package joe.commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import joe.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"import joe.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"import joe.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"import joe.tasks.TodoTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"  private final String taskDetails;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"  public TodoCommand(String taskDetails) {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"    this.taskDetails \u003d taskDetails;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"  @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"  public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"    TodoTask newTask \u003d new TodoTask(taskDetails);","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"    tasks.add(newTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"    ui.print(","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"        String.format(","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"            \"Got it, I\u0027ve added this task:%n %s%nNow you have %d tasks in the list.\",","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"            newTask, tasks.size()));","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"    storage.saveToFile(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"dishenggg":25}},{"path":"src/main/java/joe/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package joe.commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import joe.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"import joe.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"import joe.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"import joe.exceptions.JoeIndexOutOfBoundsException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"  private int idx;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"  public UnmarkCommand(int idx) {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"    this.idx \u003d idx;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"  @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"  public void execute(TaskList tasks, Ui ui, Storage storage) throws JoeIndexOutOfBoundsException {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"    if (idx \u003c 0 || idx \u003e tasks.size()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"      throw new JoeIndexOutOfBoundsException(idx);","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"    tasks.get(idx - 1).markAsNotDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"    ui.print(String.format(\"OK! I\u0027ve marked this task as not done:%n %s\", tasks.get(idx - 1)));","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"    storage.saveToFile(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"dishenggg":26}},{"path":"src/main/java/joe/exceptions/JoeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package joe.exceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"public class JoeException extends Exception {","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"  public JoeException(String error) {","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"    super(error);","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"dishenggg":7}},{"path":"src/main/java/joe/exceptions/JoeIndexOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package joe.exceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"public class JoeIndexOutOfBoundsException extends JoeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"  public JoeIndexOutOfBoundsException(int idx) {","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"    super(\"Task \" + idx + \" does not exist\");","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"dishenggg":7}},{"path":"src/main/java/joe/tasks/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package joe.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"  private final LocalDateTime deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"  public DeadlineTask(String description, LocalDateTime deadline) {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"    super(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"    this.deadline \u003d deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"  @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"  public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"    String deadlineString \u003d this.deadline.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"    return String.format(\"[D]%s (by: %s)\", super.toString(), deadlineString);","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"dishenggg":19}},{"path":"src/main/java/joe/tasks/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package joe.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"public class EventTask extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"  private final LocalDateTime from;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"  private final LocalDateTime to;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"  public EventTask(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"    super(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"    this.from \u003d from;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"    this.to \u003d to;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"  @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"  public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"    String fromString \u003d this.from.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"    String toString \u003d this.to.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"    return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), fromString, toString);","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"dishenggg":22}},{"path":"src/main/java/joe/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package joe.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"public class Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"  protected String description;","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"  protected boolean isDone;","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"  public Task(String description) {","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"    this.description \u003d description;","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"    this.isDone \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"  public String getStatusIcon() {","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"    return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"  public String getDescription() {","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"    return description;","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"  public void markAsDone() {","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"    this.isDone \u003d true;","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"  public void markAsNotDone() {","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"    this.isDone \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"  @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"  public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"    return String.format(\"[%s] %s\", this.getStatusIcon(), this.getDescription());","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"dishenggg":32}},{"path":"src/main/java/joe/tasks/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package joe.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"  public TodoTask(String description) {","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"    super(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"  @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"  public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"    return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"dishenggg":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"todo borrow book","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"deadline return book /by 26/8/2023 1200","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"event project meeting /from 22/8/2023 2359 /to 31/12/2100 0000","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"mark 2","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"mark 4","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"unmark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"unmark 4","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"unmark 1","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"todo todo","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"mark 4","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"unmark 4","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"mark a","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"unmark a","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"mark 1 1","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"unmark 1 1","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"markk 1","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"unmarkk 1","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"mark","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"unmark","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"markk","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"unmarkk","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"mark   1","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"unmark        1","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"dishenggg"},"content":"deadline      space    test     /by      22/8/2100 1111","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"dishenggg"},"content":"event      many      spaces      /from     22/8/2500 1111 /to   22/8/2800 2222","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"dishenggg"},"content":"todo             spaces","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"dishenggg"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"dishenggg"},"content":"delete 1","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"dishenggg"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"dishenggg"},"content":"delete 4","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"dishenggg"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"dishenggg"},"content":"deletee 1","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"dishenggg"},"content":"delete 1 1","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"dishenggg"},"content":"todo","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"dishenggg"},"content":"deadline","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"dishenggg"},"content":"event","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"dishenggg"},"content":"mark","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"dishenggg"},"content":"unmark","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"dishenggg"},"content":"delete","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"dishenggg"},"content":"deadline test no deadline /by","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"dishenggg"},"content":"event test no from /from     /to   tomorrow","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"dishenggg"},"content":"event test no to /from today /to","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"dishenggg"},"content":"deadline test bad date /by 33/12/1000 2000","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"dishenggg"},"content":"deadline test bad time /by 31/12/1000 2401","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"dishenggg"},"content":"bye","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"dishenggg":53}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"REM delete saved task list from previous run","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"if exist joe.TXT del joe.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"javac  -cp ..\\src\\main\\java\\ -Xlint:none -d ..\\bin ..\\src\\main\\java\\joe\\*.java ..\\src\\main\\java\\joe\\commands\\*.java ..\\src\\main\\java\\joe\\exceptions\\*.java ..\\src\\main\\java\\joe\\tasks\\*.java","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"java -classpath ..\\bin Joe \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"dishenggg":5,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"# delete saved task list from previous run","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"if [ -e \"./joe.TXT\" ]","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"then","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"    rm joe.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"fi","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"java -classpath ../bin Joe \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"dishenggg":7,"-":37}}]
