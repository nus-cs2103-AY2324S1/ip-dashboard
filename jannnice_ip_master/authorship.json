[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jannnice"},"content":"# duke.Duke project template","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"jannnice"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jannnice":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"jannnice"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jannnice":1,"-":41}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jannnice"},"content":"T~notDone~work agn","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"jannnice"},"content":"D~done~hw ~2023-12-02T23:59","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"jannnice"},"content":"E~done~wedding~2023-09-09T09:00 - 2023-09-09T09:30","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"jannnice":3}},{"path":"src/main/java/Exceptions/DukeArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jannnice"},"content":"package Exceptions;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"jannnice"},"content":"public class DukeArgumentException extends Exception{","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"jannnice"},"content":"    public DukeArgumentException (String message) {","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"jannnice"},"content":"        super(message);","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"jannnice"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"jannnice":7}},{"path":"src/main/java/Exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jannnice"},"content":"package  Exceptions;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"jannnice"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"jannnice"},"content":"    public DukeException (String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"jannnice"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"jannnice"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jannnice":6}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jannnice"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"jannnice"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"jannnice"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"jannnice"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"jannnice"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"jannnice"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"jannnice"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"jannnice"},"content":"        this.by \u003d LocalDateTime.parse(by);","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"jannnice"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"jannnice"},"content":"    public String printDesc() {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"jannnice"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"jannnice"},"content":"            String byString \u003d this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy H:mm\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"jannnice"},"content":"            return \"[D]\" + super.printDesc() + \" (by: \" + byString + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"jannnice"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"jannnice"},"content":"            return \"     Please key in the dates in the format of YYYY-MM-ddThh:mm:ss\";","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"jannnice"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"jannnice"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"jannnice"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"jannnice"},"content":"        return \"D~\" + super.getDescription() + \"~\" + this.by;","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"jannnice"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jannnice":28}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jannnice"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"jannnice"},"content":"import Exceptions.DukeArgumentException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"jannnice"},"content":"import Exceptions.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"jannnice"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jannnice"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"jannnice"},"content":"public class Duke {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"jannnice"},"content":"    private static Storage storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"jannnice"},"content":"    private static Ui ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"jannnice"},"content":"    private static Parser parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"jannnice"},"content":"    private static TaskList tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"jannnice"},"content":"    private static String directoryPath;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"jannnice"},"content":"    private static String filePath;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"jannnice"},"content":"    protected static final String horizontalLine \u003d \"    ____________________________________________________________\";","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"jannnice"},"content":"    enum TASK { MARK, UNMARK, DELETE, TODO, EVENT, DEADLINE, BYE, LIST, INVALID}","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"jannnice"},"content":"//    public static void greet() {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"jannnice"},"content":"//        System.out.println(horizontalLine + \"\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"jannnice"},"content":"//                + \"     Hello! I\u0027m POPOOH\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"jannnice"},"content":"//                + \"     What can I do for you?\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"jannnice"},"content":"//                + horizontalLine);","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"jannnice"},"content":"//    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"jannnice"},"content":"//    public static void exit() {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"jannnice"},"content":"//        System.out.println(horizontalLine + \"\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"jannnice"},"content":"//                           + \"     Bye. Hope to see you again soon!\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"jannnice"},"content":"//                           + horizontalLine);","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"jannnice"},"content":"//    }","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"jannnice"},"content":"//    public static void unmark(String i) {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"jannnice"},"content":"//        int taskId \u003d Integer.parseInt(i.substring(7)) - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"jannnice"},"content":"//        taskArray.get(taskId).markAsUndone();","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"jannnice"},"content":"//        // update the duke.txt","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"jannnice"},"content":"//        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"jannnice"},"content":"//            saveTask();","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"jannnice"},"content":"//        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"jannnice"},"content":"//            System.out.println(\"      Uhm.. something is not working right..\");","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"jannnice"},"content":"//        }","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"jannnice"},"content":"//    }","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"jannnice"},"content":"//    public static void mark(String i) {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"jannnice"},"content":"//        int taskId \u003d Integer.parseInt(i.substring(5)) - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"jannnice"},"content":"//        taskArray.get(taskId).markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"jannnice"},"content":"//        // update the duke.txt","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"jannnice"},"content":"//        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"jannnice"},"content":"//            saveTask();","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"jannnice"},"content":"//        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"jannnice"},"content":"//            System.out.println(\"      Uhm.. something is not working right..\");","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"jannnice"},"content":"//        }","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"jannnice"},"content":"//    }","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"jannnice"},"content":"//    public static void deleteTask(String i) {","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"jannnice"},"content":"//        int deleteTask \u003d Integer.parseInt(i.substring(7)) - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"jannnice"},"content":"//        Task removed \u003d taskArray.get(deleteTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"jannnice"},"content":"//        taskArray.remove(deleteTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"jannnice"},"content":"//        numTask--;","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"jannnice"},"content":"//        System.out.println(\"     Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"jannnice"},"content":"//                           + \"     \" + removed.printDesc() + \"\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"jannnice"},"content":"//                           + \"     Now you have \" + numTask +\" tasks in the list.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"jannnice"},"content":"//    }","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"jannnice"},"content":"//    public static void listTask(String i) {","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"jannnice"},"content":"//        System.out.println(\"     Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"jannnice"},"content":"//        for (int a \u003d 0; a \u003c numTask; a++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"jannnice"},"content":"//            System.out.println(\"     \" + (a + 1) + \". \" + taskArray.get(a).printDesc());","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"jannnice"},"content":"//        }","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"jannnice"},"content":"//    }","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"jannnice"},"content":"//    public static void todoTask(String i) {","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"jannnice"},"content":"//        String[] taskDetails \u003d i.split(\" \", 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"jannnice"},"content":"//        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"jannnice"},"content":"//            taskArray.add(new duke.Todo(taskDetails[1]));","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"jannnice"},"content":"//            taskArray.get(numTask).printMessage(numTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"jannnice"},"content":"//        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"jannnice"},"content":"//            System.out.println(horizontalLine + \"\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"jannnice"},"content":"//                               + \"     OOPS!!! The description of todo cannot be empty :(.\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"jannnice"},"content":"//                               + horizontalLine);","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"jannnice"},"content":"//            numTask--;","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"jannnice"},"content":"//        }","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"jannnice"},"content":"//        numTask++;","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"jannnice"},"content":"//    }","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"jannnice"},"content":"//    public static void deadlineTask(String i) {","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"jannnice"},"content":"//        String[] taskDetails \u003d i.split(\" \", 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"jannnice"},"content":"//        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"jannnice"},"content":"//            String[] deadlineDetails \u003d taskDetails[1].split(\" /by \", 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"jannnice"},"content":"//            taskArray.add(new duke.Deadline(deadlineDetails[0], deadlineDetails[1]));","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"jannnice"},"content":"//            taskArray.get(numTask).printMessage(numTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"jannnice"},"content":"//        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"jannnice"},"content":"//            System.out.println(horizontalLine + \"\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"jannnice"},"content":"//                               + \"     OOPS!!! The description of deadline is incomplete.\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"jannnice"},"content":"//                               + horizontalLine);","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"jannnice"},"content":"//            numTask--;","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"jannnice"},"content":"//        }","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"jannnice"},"content":"//        numTask++;","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"jannnice"},"content":"//    }","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"jannnice"},"content":"//    public static void eventTask(String i) {","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"jannnice"},"content":"//        String[] taskDetails \u003d i.split(\" \", 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"jannnice"},"content":"//        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"jannnice"},"content":"//            String[] eventDetails \u003d taskDetails[1].split(\" /\", 3);","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"jannnice"},"content":"//            taskArray.add(new duke.Event(eventDetails[0], eventDetails[1].substring(5),","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"jannnice"},"content":"//                    eventDetails[2].substring(3)));","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"jannnice"},"content":"//            taskArray.get(numTask).printMessage(numTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"jannnice"},"content":"//        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"jannnice"},"content":"//            System.out.println(horizontalLine + \"\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"jannnice"},"content":"//                               + \"     OOPS!!! The description of event is incomplete :(.\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"jannnice"},"content":"//                               + horizontalLine);","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"jannnice"},"content":"//            numTask--;","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"jannnice"},"content":"//        }","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"jannnice"},"content":"//        numTask++;","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"jannnice"},"content":"//    }","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"jannnice"},"content":"    public static TASK commandCheck(String command) {","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"jannnice"},"content":"        switch(command) {","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"jannnice"},"content":"            case \"bye\":","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"jannnice"},"content":"                return TASK.BYE;","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"jannnice"},"content":"            case \"unmark\":","lastModifiedDate":"2023-08-24"},{"lineNumber":112,"author":{"gitId":"jannnice"},"content":"                return TASK.UNMARK;","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"jannnice"},"content":"            case \"mark\":","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"jannnice"},"content":"                return TASK.MARK;","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"jannnice"},"content":"            case \"delete\":","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"jannnice"},"content":"                return TASK.DELETE;","lastModifiedDate":"2023-08-24"},{"lineNumber":117,"author":{"gitId":"jannnice"},"content":"            case \"list\":","lastModifiedDate":"2023-08-24"},{"lineNumber":118,"author":{"gitId":"jannnice"},"content":"                return TASK.LIST;","lastModifiedDate":"2023-08-24"},{"lineNumber":119,"author":{"gitId":"jannnice"},"content":"            case \"todo\":","lastModifiedDate":"2023-08-24"},{"lineNumber":120,"author":{"gitId":"jannnice"},"content":"                return TASK.TODO;","lastModifiedDate":"2023-08-24"},{"lineNumber":121,"author":{"gitId":"jannnice"},"content":"            case \"deadline\":","lastModifiedDate":"2023-08-24"},{"lineNumber":122,"author":{"gitId":"jannnice"},"content":"                return TASK.DEADLINE;","lastModifiedDate":"2023-08-24"},{"lineNumber":123,"author":{"gitId":"jannnice"},"content":"            case \"event\":","lastModifiedDate":"2023-08-24"},{"lineNumber":124,"author":{"gitId":"jannnice"},"content":"                return TASK.EVENT;","lastModifiedDate":"2023-08-24"},{"lineNumber":125,"author":{"gitId":"jannnice"},"content":"            default:","lastModifiedDate":"2023-08-24"},{"lineNumber":126,"author":{"gitId":"jannnice"},"content":"                return TASK.INVALID;","lastModifiedDate":"2023-08-24"},{"lineNumber":127,"author":{"gitId":"jannnice"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":128,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":129,"author":{"gitId":"jannnice"},"content":"    public static void printCommand(TASK command, String info) throws DukeException, IOException, DukeArgumentException {","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"jannnice"},"content":"        switch(command) {","lastModifiedDate":"2023-08-24"},{"lineNumber":131,"author":{"gitId":"jannnice"},"content":"            case BYE:","lastModifiedDate":"2023-08-24"},{"lineNumber":132,"author":{"gitId":"jannnice"},"content":"                ui.exit();","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"jannnice"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":134,"author":{"gitId":"jannnice"},"content":"            case UNMARK:","lastModifiedDate":"2023-08-24"},{"lineNumber":135,"author":{"gitId":"jannnice"},"content":"                System.out.println(horizontalLine);","lastModifiedDate":"2023-08-24"},{"lineNumber":136,"author":{"gitId":"jannnice"},"content":"                tasks.unmark(info);","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"jannnice"},"content":"                System.out.println(horizontalLine);","lastModifiedDate":"2023-08-24"},{"lineNumber":138,"author":{"gitId":"jannnice"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":139,"author":{"gitId":"jannnice"},"content":"            case MARK:","lastModifiedDate":"2023-08-24"},{"lineNumber":140,"author":{"gitId":"jannnice"},"content":"                System.out.println(horizontalLine);","lastModifiedDate":"2023-08-24"},{"lineNumber":141,"author":{"gitId":"jannnice"},"content":"                tasks.mark(info);","lastModifiedDate":"2023-09-01"},{"lineNumber":142,"author":{"gitId":"jannnice"},"content":"                System.out.println(horizontalLine);","lastModifiedDate":"2023-08-24"},{"lineNumber":143,"author":{"gitId":"jannnice"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":144,"author":{"gitId":"jannnice"},"content":"            case DELETE:","lastModifiedDate":"2023-08-24"},{"lineNumber":145,"author":{"gitId":"jannnice"},"content":"                System.out.println(horizontalLine);","lastModifiedDate":"2023-08-24"},{"lineNumber":146,"author":{"gitId":"jannnice"},"content":"                tasks.deleteTask(info);","lastModifiedDate":"2023-09-01"},{"lineNumber":147,"author":{"gitId":"jannnice"},"content":"                System.out.println(horizontalLine);","lastModifiedDate":"2023-08-24"},{"lineNumber":148,"author":{"gitId":"jannnice"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":149,"author":{"gitId":"jannnice"},"content":"            case LIST:","lastModifiedDate":"2023-08-24"},{"lineNumber":150,"author":{"gitId":"jannnice"},"content":"                System.out.println(horizontalLine);","lastModifiedDate":"2023-08-24"},{"lineNumber":151,"author":{"gitId":"jannnice"},"content":"                tasks.listTask(info);","lastModifiedDate":"2023-09-01"},{"lineNumber":152,"author":{"gitId":"jannnice"},"content":"                System.out.println(horizontalLine);","lastModifiedDate":"2023-08-24"},{"lineNumber":153,"author":{"gitId":"jannnice"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":154,"author":{"gitId":"jannnice"},"content":"            case TODO:","lastModifiedDate":"2023-08-24"},{"lineNumber":155,"author":{"gitId":"jannnice"},"content":"                tasks.todoTask(info);","lastModifiedDate":"2023-09-01"},{"lineNumber":156,"author":{"gitId":"jannnice"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":157,"author":{"gitId":"jannnice"},"content":"            case EVENT:","lastModifiedDate":"2023-08-24"},{"lineNumber":158,"author":{"gitId":"jannnice"},"content":"                tasks.eventTask(info);","lastModifiedDate":"2023-09-01"},{"lineNumber":159,"author":{"gitId":"jannnice"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":160,"author":{"gitId":"jannnice"},"content":"            case DEADLINE:","lastModifiedDate":"2023-08-24"},{"lineNumber":161,"author":{"gitId":"jannnice"},"content":"                tasks.deadlineTask(info);","lastModifiedDate":"2023-09-01"},{"lineNumber":162,"author":{"gitId":"jannnice"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":163,"author":{"gitId":"jannnice"},"content":"            default:","lastModifiedDate":"2023-08-24"},{"lineNumber":164,"author":{"gitId":"jannnice"},"content":"                throw new DukeException(\"     OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-24"},{"lineNumber":165,"author":{"gitId":"jannnice"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":166,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":167,"author":{"gitId":"jannnice"},"content":"//    private static void checkHardDisk() {","lastModifiedDate":"2023-09-01"},{"lineNumber":168,"author":{"gitId":"jannnice"},"content":"//        File dataDirectory \u003d new File(\"./data\");","lastModifiedDate":"2023-09-01"},{"lineNumber":169,"author":{"gitId":"jannnice"},"content":"//        if (!dataDirectory.exists()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":170,"author":{"gitId":"jannnice"},"content":"//            System.out.println(\"     OOPS! The data directory doesn\u0027t exist. I\u0027ll create one for you!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":171,"author":{"gitId":"jannnice"},"content":"//            dataDirectory.mkdir();","lastModifiedDate":"2023-09-01"},{"lineNumber":172,"author":{"gitId":"jannnice"},"content":"//        }","lastModifiedDate":"2023-09-01"},{"lineNumber":173,"author":{"gitId":"jannnice"},"content":"//        hardDisk \u003d new File(hardDiskPath);","lastModifiedDate":"2023-09-01"},{"lineNumber":174,"author":{"gitId":"jannnice"},"content":"//        if (!hardDisk.exists()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":175,"author":{"gitId":"jannnice"},"content":"//            System.out.println(\"     OOPS! The hard disk doesn\u0027t exist. I\u0027ll create one for you!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":176,"author":{"gitId":"jannnice"},"content":"//            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":177,"author":{"gitId":"jannnice"},"content":"//                hardDisk.createNewFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":178,"author":{"gitId":"jannnice"},"content":"//                hardDisk.setReadable(true);","lastModifiedDate":"2023-09-01"},{"lineNumber":179,"author":{"gitId":"jannnice"},"content":"//                hardDisk.setWritable(true);","lastModifiedDate":"2023-09-01"},{"lineNumber":180,"author":{"gitId":"jannnice"},"content":"//            } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":181,"author":{"gitId":"jannnice"},"content":"//                System.out.println(\"     Something went wrong, we couldn\u0027t create duke.txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":182,"author":{"gitId":"jannnice"},"content":"//            }","lastModifiedDate":"2023-09-01"},{"lineNumber":183,"author":{"gitId":"jannnice"},"content":"//        }","lastModifiedDate":"2023-09-01"},{"lineNumber":184,"author":{"gitId":"jannnice"},"content":"//    }","lastModifiedDate":"2023-09-01"},{"lineNumber":185,"author":{"gitId":"jannnice"},"content":"//    // retrieves past tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":186,"author":{"gitId":"jannnice"},"content":"//    private static void loadTask() {","lastModifiedDate":"2023-09-01"},{"lineNumber":187,"author":{"gitId":"jannnice"},"content":"//        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":188,"author":{"gitId":"jannnice"},"content":"//            Scanner fileScanner \u003d new Scanner(hardDisk);","lastModifiedDate":"2023-09-01"},{"lineNumber":189,"author":{"gitId":"jannnice"},"content":"//            while (fileScanner.hasNext()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":190,"author":{"gitId":"jannnice"},"content":"//                String task \u003d fileScanner.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":191,"author":{"gitId":"jannnice"},"content":"//                String[] taskDetails \u003d task.split(\"~\",5);","lastModifiedDate":"2023-09-01"},{"lineNumber":192,"author":{"gitId":"jannnice"},"content":"//                String taskType \u003d taskDetails[0];","lastModifiedDate":"2023-09-01"},{"lineNumber":193,"author":{"gitId":"jannnice"},"content":"//                String taskStatus \u003d taskDetails[1];","lastModifiedDate":"2023-09-01"},{"lineNumber":194,"author":{"gitId":"jannnice"},"content":"//                String taskDescription \u003d taskDetails[2];","lastModifiedDate":"2023-09-01"},{"lineNumber":195,"author":{"gitId":"jannnice"},"content":"//                switch (taskType) {","lastModifiedDate":"2023-09-01"},{"lineNumber":196,"author":{"gitId":"jannnice"},"content":"//                    case \"T\":","lastModifiedDate":"2023-09-01"},{"lineNumber":197,"author":{"gitId":"jannnice"},"content":"//                        duke.Todo addTodo \u003d new duke.Todo(taskDescription);","lastModifiedDate":"2023-09-01"},{"lineNumber":198,"author":{"gitId":"jannnice"},"content":"//                        if (Objects.equals(taskStatus, \"done\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":199,"author":{"gitId":"jannnice"},"content":"//                            addTodo.updateAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":200,"author":{"gitId":"jannnice"},"content":"//                        }","lastModifiedDate":"2023-09-01"},{"lineNumber":201,"author":{"gitId":"jannnice"},"content":"//                        taskArray.add(addTodo);","lastModifiedDate":"2023-09-01"},{"lineNumber":202,"author":{"gitId":"jannnice"},"content":"//                        numTask++;","lastModifiedDate":"2023-09-01"},{"lineNumber":203,"author":{"gitId":"jannnice"},"content":"//                        break;","lastModifiedDate":"2023-09-01"},{"lineNumber":204,"author":{"gitId":"jannnice"},"content":"//                    case \"D\":","lastModifiedDate":"2023-09-01"},{"lineNumber":205,"author":{"gitId":"jannnice"},"content":"//                        duke.Deadline addDeadline \u003d new duke.Deadline(taskDescription, taskDetails[3]);","lastModifiedDate":"2023-09-01"},{"lineNumber":206,"author":{"gitId":"jannnice"},"content":"//                        if (Objects.equals(taskStatus, \"Y\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":207,"author":{"gitId":"jannnice"},"content":"//                            addDeadline.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":208,"author":{"gitId":"jannnice"},"content":"//                        }","lastModifiedDate":"2023-09-01"},{"lineNumber":209,"author":{"gitId":"jannnice"},"content":"//                        taskArray.add(addDeadline);","lastModifiedDate":"2023-09-01"},{"lineNumber":210,"author":{"gitId":"jannnice"},"content":"//                        numTask++;","lastModifiedDate":"2023-09-01"},{"lineNumber":211,"author":{"gitId":"jannnice"},"content":"//                        break;","lastModifiedDate":"2023-09-01"},{"lineNumber":212,"author":{"gitId":"jannnice"},"content":"//                    case \"E\":","lastModifiedDate":"2023-09-01"},{"lineNumber":213,"author":{"gitId":"jannnice"},"content":"//                        String[] timeDetails \u003d taskDetails[3].split(\" - \", 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":214,"author":{"gitId":"jannnice"},"content":"//                        duke.Event addEvent \u003d new duke.Event(taskDescription, timeDetails[0], timeDetails[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":215,"author":{"gitId":"jannnice"},"content":"//                        if (Objects.equals(taskStatus, \"Y\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":216,"author":{"gitId":"jannnice"},"content":"//                            addEvent.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":217,"author":{"gitId":"jannnice"},"content":"//                        }","lastModifiedDate":"2023-09-01"},{"lineNumber":218,"author":{"gitId":"jannnice"},"content":"//                        taskArray.add(addEvent);","lastModifiedDate":"2023-09-01"},{"lineNumber":219,"author":{"gitId":"jannnice"},"content":"//                        numTask++;","lastModifiedDate":"2023-09-01"},{"lineNumber":220,"author":{"gitId":"jannnice"},"content":"//                        break;","lastModifiedDate":"2023-09-01"},{"lineNumber":221,"author":{"gitId":"jannnice"},"content":"//                    default:","lastModifiedDate":"2023-09-01"},{"lineNumber":222,"author":{"gitId":"jannnice"},"content":"//                        throw new DukeException(\"     invalid task in the hard disk\");","lastModifiedDate":"2023-09-01"},{"lineNumber":223,"author":{"gitId":"jannnice"},"content":"//                }","lastModifiedDate":"2023-09-01"},{"lineNumber":224,"author":{"gitId":"jannnice"},"content":"//","lastModifiedDate":"2023-09-01"},{"lineNumber":225,"author":{"gitId":"jannnice"},"content":"//            }","lastModifiedDate":"2023-09-01"},{"lineNumber":226,"author":{"gitId":"jannnice"},"content":"//        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":227,"author":{"gitId":"jannnice"},"content":"//            System.out.println(\"     There is no saved duke.txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":228,"author":{"gitId":"jannnice"},"content":"//        } catch (DukeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":229,"author":{"gitId":"jannnice"},"content":"//            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":230,"author":{"gitId":"jannnice"},"content":"//        }","lastModifiedDate":"2023-09-01"},{"lineNumber":231,"author":{"gitId":"jannnice"},"content":"//    }","lastModifiedDate":"2023-09-01"},{"lineNumber":232,"author":{"gitId":"jannnice"},"content":"    // saves new tasks","lastModifiedDate":"2023-08-30"},{"lineNumber":233,"author":{"gitId":"jannnice"},"content":"//    private static void saveTask() throws IOException {","lastModifiedDate":"2023-09-01"},{"lineNumber":234,"author":{"gitId":"jannnice"},"content":"//        FileWriter fw \u003d new FileWriter(hardDiskPath);","lastModifiedDate":"2023-09-01"},{"lineNumber":235,"author":{"gitId":"jannnice"},"content":"//        for (Task task : taskArray) {","lastModifiedDate":"2023-09-01"},{"lineNumber":236,"author":{"gitId":"jannnice"},"content":"//            String writeTask \u003d task.getDescription() + \"\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":237,"author":{"gitId":"jannnice"},"content":"//            fw.write(writeTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":238,"author":{"gitId":"jannnice"},"content":"//        }","lastModifiedDate":"2023-09-01"},{"lineNumber":239,"author":{"gitId":"jannnice"},"content":"//        fw.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":240,"author":{"gitId":"jannnice"},"content":"//    }","lastModifiedDate":"2023-09-01"},{"lineNumber":241,"author":{"gitId":"jannnice"},"content":"    public Duke(String directoryPath, String filePath) {","lastModifiedDate":"2023-09-01"},{"lineNumber":242,"author":{"gitId":"jannnice"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-01"},{"lineNumber":243,"author":{"gitId":"jannnice"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-09-01"},{"lineNumber":244,"author":{"gitId":"jannnice"},"content":"        this.directoryPath \u003d directoryPath;","lastModifiedDate":"2023-09-01"},{"lineNumber":245,"author":{"gitId":"jannnice"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-01"},{"lineNumber":246,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":247,"author":{"gitId":"jannnice"},"content":"    public void run() {","lastModifiedDate":"2023-09-01"},{"lineNumber":248,"author":{"gitId":"jannnice"},"content":"        ui.greet();","lastModifiedDate":"2023-09-01"},{"lineNumber":249,"author":{"gitId":"jannnice"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-23"},{"lineNumber":250,"author":{"gitId":"jannnice"},"content":"        storage \u003d new Storage(directoryPath, filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":251,"author":{"gitId":"jannnice"},"content":"        tasks \u003d new TaskList(storage.loadTask(), storage);","lastModifiedDate":"2023-09-01"},{"lineNumber":252,"author":{"gitId":"jannnice"},"content":"        while (input.hasNext()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":253,"author":{"gitId":"jannnice"},"content":"            String command \u003d input.nextLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":254,"author":{"gitId":"jannnice"},"content":"            String[] findCommand \u003d parser.commandSplit(command);","lastModifiedDate":"2023-09-01"},{"lineNumber":255,"author":{"gitId":"jannnice"},"content":"            TASK order \u003d commandCheck(findCommand[0]);","lastModifiedDate":"2023-08-24"},{"lineNumber":256,"author":{"gitId":"jannnice"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":257,"author":{"gitId":"jannnice"},"content":"                printCommand(order, command);","lastModifiedDate":"2023-08-24"},{"lineNumber":258,"author":{"gitId":"jannnice"},"content":"                storage.saveTask(tasks.getTaskArray());","lastModifiedDate":"2023-09-01"},{"lineNumber":259,"author":{"gitId":"jannnice"},"content":"            } catch (DukeException | DukeArgumentException message) {","lastModifiedDate":"2023-09-01"},{"lineNumber":260,"author":{"gitId":"jannnice"},"content":"                System.out.println(horizontalLine + \"\\n\" + message.getMessage() + \"\\n\" + horizontalLine);","lastModifiedDate":"2023-08-24"},{"lineNumber":261,"author":{"gitId":"jannnice"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":262,"author":{"gitId":"jannnice"},"content":"                System.out.println(\"     Oh no, seems like something is not working.. We can\u0027t save your data.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":263,"author":{"gitId":"jannnice"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":264,"author":{"gitId":"jannnice"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":265,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":266,"author":{"gitId":"jannnice"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-01"},{"lineNumber":267,"author":{"gitId":"jannnice"},"content":"        new Duke(\"./data\", \"./data/duke.txt\").run();","lastModifiedDate":"2023-09-01"},{"lineNumber":268,"author":{"gitId":"jannnice"},"content":"//        storage \u003d new Storage(\"./data\", \"/Desktop/CS2103T/ip/hardDrive.txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":269,"author":{"gitId":"jannnice"},"content":"//        storage.checkHardDisk();","lastModifiedDate":"2023-09-01"},{"lineNumber":270,"author":{"gitId":"jannnice"},"content":"//        taskArray \u003d storage.loadTask();","lastModifiedDate":"2023-09-01"},{"lineNumber":271,"author":{"gitId":"jannnice"},"content":"//        ui.greet();","lastModifiedDate":"2023-09-01"},{"lineNumber":272,"author":{"gitId":"jannnice"},"content":"//        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-01"},{"lineNumber":273,"author":{"gitId":"jannnice"},"content":"//","lastModifiedDate":"2023-09-01"},{"lineNumber":274,"author":{"gitId":"jannnice"},"content":"//        while (input.hasNext()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":275,"author":{"gitId":"jannnice"},"content":"//            String command \u003d input.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":276,"author":{"gitId":"jannnice"},"content":"//            String[] findCommand \u003d parser.commandSplit(command);","lastModifiedDate":"2023-09-01"},{"lineNumber":277,"author":{"gitId":"jannnice"},"content":"//            TASK order \u003d commandCheck(findCommand[0]);","lastModifiedDate":"2023-09-01"},{"lineNumber":278,"author":{"gitId":"jannnice"},"content":"//            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":279,"author":{"gitId":"jannnice"},"content":"//                printCommand(order, command);","lastModifiedDate":"2023-09-01"},{"lineNumber":280,"author":{"gitId":"jannnice"},"content":"//                saveTask();","lastModifiedDate":"2023-09-01"},{"lineNumber":281,"author":{"gitId":"jannnice"},"content":"//            } catch (DukeException message) {","lastModifiedDate":"2023-09-01"},{"lineNumber":282,"author":{"gitId":"jannnice"},"content":"//                System.out.println(horizontalLine + \"\\n\" + message.getMessage() + \"\\n\" + horizontalLine);","lastModifiedDate":"2023-09-01"},{"lineNumber":283,"author":{"gitId":"jannnice"},"content":"//            } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":284,"author":{"gitId":"jannnice"},"content":"//                System.out.println(\"     Oh no, seems like something is not working.. We can\u0027t save your data.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":285,"author":{"gitId":"jannnice"},"content":"//            }","lastModifiedDate":"2023-09-01"},{"lineNumber":286,"author":{"gitId":"jannnice"},"content":"//        }","lastModifiedDate":"2023-09-01"},{"lineNumber":287,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":288,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jannnice":287,"-":1}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jannnice"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"jannnice"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"jannnice"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"jannnice"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"jannnice"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"jannnice"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"jannnice"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"jannnice"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"jannnice"},"content":"        this.from \u003d LocalDateTime.parse(from);","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"jannnice"},"content":"        this.to \u003d LocalDateTime.parse(to);","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"jannnice"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"jannnice"},"content":"    public String printDesc() {","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"jannnice"},"content":"        String fromMessage \u003d  this.from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy H:mm\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"jannnice"},"content":"        String toMessage \u003d  this.to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy H:mm\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"jannnice"},"content":"        return \"[E]\" + super.printDesc() + \" (from: \" + fromMessage + \" to: \" + toMessage + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"jannnice"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"jannnice"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"jannnice"},"content":"        return \"E~\" + super.getDescription() + \"~\" + this.from + \" - \" + this.to;","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"jannnice"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jannnice":26}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jannnice"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"jannnice"},"content":"public class Parser {","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"jannnice"},"content":"    public String[] commandSplit(String command) {","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"jannnice"},"content":"        return command.split(\" \", 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"jannnice"},"content":"    public String[] deadlineDetails(String task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"jannnice"},"content":"        return task.split(\"/by \", 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"jannnice"},"content":"    public String[] eventDetails(String task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"jannnice"},"content":"        return task.split(\" /\", 3);","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"jannnice"},"content":"    public String[] storageSplit(String task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"jannnice"},"content":"        return task.split(\"~\", 5);","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"jannnice"},"content":"    public String[] storageTimeSplit(String time) {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"jannnice"},"content":"        return time.split(\" - \", 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"jannnice"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"jannnice":20}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jannnice"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"jannnice"},"content":"import Exceptions.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"jannnice"},"content":"import java.io.File;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"jannnice"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"jannnice"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"jannnice"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"jannnice"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"jannnice"},"content":"import java.util.Objects;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"jannnice"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"jannnice"},"content":"public class Storage {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"jannnice"},"content":"    protected String directoryPath;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"jannnice"},"content":"    protected String filePath;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"jannnice"},"content":"    private static File hardDisk;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"jannnice"},"content":"//    private static ArrayList\u003cTask\u003e taskArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"jannnice"},"content":"    private static Parser parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"jannnice"},"content":"    public Storage (String dirPath, String filePath) {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"jannnice"},"content":"        this.directoryPath \u003d dirPath;","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"jannnice"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"jannnice"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"jannnice"},"content":"        hardDisk \u003d new File(this.filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"jannnice"},"content":"    protected void checkHardDisk() {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"jannnice"},"content":"        File dataDirectory \u003d new File(this.directoryPath);","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"jannnice"},"content":"        if (!dataDirectory.exists()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"jannnice"},"content":"            System.out.println(\"     OOPS! The data directory doesn\u0027t exist. I\u0027ll create one for you!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"jannnice"},"content":"            dataDirectory.mkdir();","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"jannnice"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"jannnice"},"content":"        if (!hardDisk.exists()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"jannnice"},"content":"            System.out.println(\"     OOPS! The hard disk doesn\u0027t exist. I\u0027ll create one for you!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"jannnice"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"jannnice"},"content":"                hardDisk.createNewFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"jannnice"},"content":"                hardDisk.setReadable(true);","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"jannnice"},"content":"                hardDisk.setWritable(true);","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"jannnice"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"jannnice"},"content":"                System.out.println(\"     Something went wrong, we couldn\u0027t create duke.txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"jannnice"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"jannnice"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"jannnice"},"content":"    // retrieves past tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"jannnice"},"content":"    protected ArrayList\u003cTask\u003e loadTask() {","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"jannnice"},"content":"        ArrayList\u003cTask\u003e taskArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"jannnice"},"content":"        checkHardDisk();","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"jannnice"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"jannnice"},"content":"            Scanner fileScanner \u003d new Scanner(hardDisk);","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"jannnice"},"content":"            while (fileScanner.hasNext()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"jannnice"},"content":"                String task \u003d fileScanner.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"jannnice"},"content":"                String[] taskDetails \u003d parser.storageSplit(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"jannnice"},"content":"                String taskType \u003d taskDetails[0];","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"jannnice"},"content":"                String taskStatus \u003d taskDetails[1];","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"jannnice"},"content":"                String taskDescription \u003d taskDetails[2];","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"jannnice"},"content":"                switch (taskType) {","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"jannnice"},"content":"                    case \"T\":","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"jannnice"},"content":"                        Todo addTodo \u003d new Todo(taskDescription);","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"jannnice"},"content":"                        if (Objects.equals(taskStatus, \"done\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"jannnice"},"content":"                            addTodo.updateAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"jannnice"},"content":"                        }","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"jannnice"},"content":"                        taskArray.add(addTodo);","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"jannnice"},"content":"                        break;","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"jannnice"},"content":"                    case \"D\":","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"jannnice"},"content":"                        Deadline addDeadline \u003d new Deadline(taskDescription, taskDetails[3]);","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"jannnice"},"content":"                        if (Objects.equals(taskStatus, \"Y\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"jannnice"},"content":"                            addDeadline.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"jannnice"},"content":"                        }","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"jannnice"},"content":"                        taskArray.add(addDeadline);","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"jannnice"},"content":"                        break;","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"jannnice"},"content":"                    case \"E\":","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"jannnice"},"content":"                        String[] timeDetails \u003d parser.storageTimeSplit(taskDetails[3]);","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"jannnice"},"content":"                        Event addEvent \u003d new Event(taskDescription, timeDetails[0], timeDetails[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"jannnice"},"content":"                        if (Objects.equals(taskStatus, \"Y\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"jannnice"},"content":"                            addEvent.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"jannnice"},"content":"                        }","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"jannnice"},"content":"                        taskArray.add(addEvent);","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"jannnice"},"content":"                        break;","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"jannnice"},"content":"                    default:","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"jannnice"},"content":"                        throw new DukeException(\"     invalid task in the hard disk\");","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"jannnice"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"jannnice"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"jannnice"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"jannnice"},"content":"            System.out.println(\"     There is no saved duke.txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"jannnice"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"jannnice"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"jannnice"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"jannnice"},"content":"        return taskArray;","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"jannnice"},"content":"    // saves new tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"jannnice"},"content":"    protected void saveTask(ArrayList\u003cTask\u003e taskList) throws IOException {","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"jannnice"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"jannnice"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"jannnice"},"content":"            String writeTask \u003d task.getDescription() + \"\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"jannnice"},"content":"            fw.write(writeTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"jannnice"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"jannnice"},"content":"        fw.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"jannnice"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"jannnice":97}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jannnice"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"jannnice"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"jannnice"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"jannnice"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"jannnice"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"jannnice"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"jannnice"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"jannnice"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"jannnice"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"jannnice"},"content":"    public void updateAsDone() {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"jannnice"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"jannnice"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"jannnice"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"jannnice"},"content":"        System.out.println(\"     Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"jannnice"},"content":"                           + \"       \" + this.printDesc());","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"jannnice"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"jannnice"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"jannnice"},"content":"        System.out.println(\"     OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"jannnice"},"content":"                           + \"       \" + this.printDesc());","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"jannnice"},"content":"    public String printDesc() {","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"jannnice"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"jannnice"},"content":"    public void printMessage(int numTask) {","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"jannnice"},"content":"        System.out.println(Duke.horizontalLine + \"\\n\"","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"jannnice"},"content":"                + \"     Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"jannnice"},"content":"                + \"       \" + this.printDesc() + \"\\n\"","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"jannnice"},"content":"                + \"     Now you have \" + (numTask + 1) + \" tasks in the list.\\n\"","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"jannnice"},"content":"                + Duke.horizontalLine);","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"jannnice"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"jannnice"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"jannnice"},"content":"            return \"done~\" + this.description;","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"jannnice"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"jannnice"},"content":"            return \"notDone~\" + this.description;","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"jannnice"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"jannnice"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"jannnice":45}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jannnice"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"jannnice"},"content":"import Exceptions.DukeArgumentException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"jannnice"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"jannnice"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"jannnice"},"content":"public class TaskList {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"jannnice"},"content":"    protected static final String horizontalLine \u003d \"    ____________________________________________________________\";","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"jannnice"},"content":"    protected static ArrayList\u003cTask\u003e taskArray;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"jannnice"},"content":"    protected static Storage storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"jannnice"},"content":"    protected static int numTask;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"jannnice"},"content":"    protected static Parser parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"jannnice"},"content":"    public TaskList(ArrayList\u003cTask\u003e loadTask, Storage store) {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"jannnice"},"content":"        taskArray \u003d loadTask;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"jannnice"},"content":"        numTask \u003d taskArray.size();","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"jannnice"},"content":"        storage \u003d store;","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"jannnice"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"jannnice"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"jannnice"},"content":"        taskArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"jannnice"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"jannnice"},"content":"    public void unmark(String i) throws DukeArgumentException {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"jannnice"},"content":"        int taskId \u003d Integer.parseInt(i.substring(7)) - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"jannnice"},"content":"        if (taskId \u003c 0 || taskId \u003e\u003d numTask) {","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"jannnice"},"content":"            throw new DukeArgumentException(\"      I think you keyed in the wrong task number..\");","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"jannnice"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"jannnice"},"content":"        taskArray.get(taskId).markAsUndone();","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"jannnice"},"content":"        // update the duke.txt","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"jannnice"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"jannnice"},"content":"            storage.saveTask(taskArray);","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"jannnice"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"jannnice"},"content":"            System.out.println(\"      Uhm.. something is not working right..\");","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"jannnice"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"jannnice"},"content":"    public void mark(String i) throws DukeArgumentException {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"jannnice"},"content":"        int taskId \u003d Integer.parseInt(i.substring(5)) - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"jannnice"},"content":"        if (taskId \u003c 0 || taskId \u003e\u003d numTask) {","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"jannnice"},"content":"            throw new DukeArgumentException(\"      I think you keyed in the wrong task number..\");","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"jannnice"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"jannnice"},"content":"        taskArray.get(taskId).markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"jannnice"},"content":"        // update the duke.txt","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"jannnice"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"jannnice"},"content":"            storage.saveTask(taskArray);","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"jannnice"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"jannnice"},"content":"            System.out.println(\"      Uhm.. something is not working right..\");","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"jannnice"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"jannnice"},"content":"    public static void deleteTask(String i) throws DukeArgumentException {","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"jannnice"},"content":"        int deleteTask \u003d Integer.parseInt(i.substring(7)) - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"jannnice"},"content":"        if (deleteTask \u003c 0 || deleteTask \u003e\u003d numTask) {","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"jannnice"},"content":"            throw new DukeArgumentException(\"      I think you keyed in the wrong task number..\");","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"jannnice"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"jannnice"},"content":"        Task removed \u003d taskArray.get(deleteTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"jannnice"},"content":"        taskArray.remove(deleteTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"jannnice"},"content":"        numTask--;","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"jannnice"},"content":"        System.out.println(\"     Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"jannnice"},"content":"                + \"     \" + removed.printDesc() + \"\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"jannnice"},"content":"                + \"     Now you have \" + numTask +\" tasks in the list.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"jannnice"},"content":"    public static void listTask(String i) {","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"jannnice"},"content":"        System.out.println(\"     Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"jannnice"},"content":"        for (int a \u003d 0; a \u003c numTask; a++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"jannnice"},"content":"            System.out.println(\"     \" + (a + 1) + \". \" + taskArray.get(a).printDesc());","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"jannnice"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"jannnice"},"content":"    public static void todoTask(String i) throws DukeArgumentException {","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"jannnice"},"content":"        String[] taskDetails \u003d parser.commandSplit(i);","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"jannnice"},"content":"        if (taskDetails.length !\u003d 2) {","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"jannnice"},"content":"            throw new DukeArgumentException(\"     OOPS!!! The description of todo cannot be empty :(\");","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"jannnice"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"jannnice"},"content":"        taskArray.add(new Todo(taskDetails[1]));","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"jannnice"},"content":"        taskArray.get(numTask).printMessage(numTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"jannnice"},"content":"        numTask++;","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"jannnice"},"content":"    public static void deadlineTask(String i) throws DukeArgumentException {","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"jannnice"},"content":"        String[] taskDetails \u003d parser.commandSplit(i);","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"jannnice"},"content":"        if (taskDetails.length !\u003d 2) {","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"jannnice"},"content":"            throw new DukeArgumentException(\"     OOPS!!! The description of deadline cannot be empty :(\");","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"jannnice"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"jannnice"},"content":"        String[] deadlineDetails \u003d parser.deadlineDetails(taskDetails[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"jannnice"},"content":"        if (deadlineDetails.length !\u003d 2) {","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"jannnice"},"content":"            throw new DukeArgumentException(\"     OOPS!!! Where is the deadline time?\");","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"jannnice"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"jannnice"},"content":"        taskArray.add(new Deadline(deadlineDetails[0], deadlineDetails[1]));","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"jannnice"},"content":"        taskArray.get(numTask).printMessage(numTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"jannnice"},"content":"        numTask++;","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"jannnice"},"content":"    public static void eventTask(String i) throws DukeArgumentException {","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"jannnice"},"content":"        String[] taskDetails \u003d parser.commandSplit(i);","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"jannnice"},"content":"        if (taskDetails.length !\u003d 2) {","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"jannnice"},"content":"            throw new DukeArgumentException(\"     OOPS!!! The description of event cannot be empty :(\");","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"jannnice"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"jannnice"},"content":"        String[] eventDetails \u003d parser.eventDetails(taskDetails[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"jannnice"},"content":"        if (eventDetails.length !\u003d 3) {","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"jannnice"},"content":"            throw new DukeArgumentException(\"     OOPS!!! The details for the event is missing!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"jannnice"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"jannnice"},"content":"        taskArray.add(new Event(eventDetails[0], eventDetails[1].substring(5),","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"jannnice"},"content":"                eventDetails[2].substring(3)));","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"jannnice"},"content":"        taskArray.get(numTask).printMessage(numTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"jannnice"},"content":"        numTask++;","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"jannnice"},"content":"    protected ArrayList\u003cTask\u003e getTaskArray() {","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"jannnice"},"content":"        return taskArray;","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"jannnice"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"jannnice":110}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jannnice"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"jannnice"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"jannnice"},"content":"    protected char type;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"jannnice"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"jannnice"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"jannnice"},"content":"        this.type \u003d \u0027T\u0027;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"jannnice"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"jannnice"},"content":"    public String printDesc() {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"jannnice"},"content":"        return \"[T]\" + super.printDesc();","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"jannnice"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"jannnice"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"jannnice"},"content":"        return \"T~\" + super.getDescription();","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"jannnice"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jannnice":18}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jannnice"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"jannnice"},"content":"public class Ui {","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"jannnice"},"content":"    protected static final String horizontalLine \u003d \"    ____________________________________________________________\";","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"jannnice"},"content":"    public static void greet() {","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"jannnice"},"content":"        System.out.println(horizontalLine + \"\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"jannnice"},"content":"                + \"     Hello! I\u0027m POPOOH\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"jannnice"},"content":"                + \"     What can I do for you?\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"jannnice"},"content":"                + horizontalLine);","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"jannnice"},"content":"    public static void exit() {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"jannnice"},"content":"        System.out.println(horizontalLine + \"\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"jannnice"},"content":"                + \"     Bye. Hope to see you again soon!\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"jannnice"},"content":"                + horizontalLine);","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"jannnice"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"jannnice":16}},{"path":"src/test/java/duke/ParseTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jannnice"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"jannnice"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"jannnice"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"jannnice"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"jannnice"},"content":"public class ParseTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"jannnice"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"jannnice"},"content":"    public void deadlineDetails_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"jannnice"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"jannnice"},"content":"        String deadline \u003d \"homework /by: 2023-12-01T12:20:00\";","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"jannnice"},"content":"        String[] output \u003d parser.deadlineDetails(deadline);","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"jannnice"},"content":"        assertEquals(output.length, 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"jannnice"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"jannnice":15}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jannnice"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"jannnice"},"content":"import Exceptions.DukeArgumentException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"jannnice"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"jannnice"},"content":"import static duke.Ui.horizontalLine;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"jannnice"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"jannnice"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"jannnice"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"jannnice"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"jannnice"},"content":"    public void markTask_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"jannnice"},"content":"        Task exampleTask \u003d new Todo(\"testing for marking\");","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"jannnice"},"content":"        exampleTask.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"jannnice"},"content":"        assertTrue(exampleTask.isDone);","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"jannnice"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"jannnice"},"content":"    public void addEvent_invalidDescription_exceptionThrown() {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"jannnice"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"jannnice"},"content":"            TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"jannnice"},"content":"            tasks.eventTask(\"wedding /from 2023-09-09T09:00:00 /to\");","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"jannnice"},"content":"        } catch (DukeArgumentException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"jannnice"},"content":"            String message \u003d \"     OOPS!!! The details for the event is missing!\";","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"jannnice"},"content":"            assertEquals(e.getMessage(), message);","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"jannnice"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"jannnice"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"jannnice":28}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"jannnice"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jannnice":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"jannnice"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jannnice":1,"-":33}}]
