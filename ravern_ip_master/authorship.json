[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ravern"},"content":"# Ekud ðŸ¤–","lastModifiedDate":"2023-09-24"},{"lineNumber":2,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":3,"author":{"gitId":"ravern"},"content":"Ekud is a simple chatbot that helps you remember your to-dos, deadlines and events. The name Ekud comes from spelling Duke â€” the name of the project this chatbot is based upon â€”Â backwards. It is an attempt at humour.","lastModifiedDate":"2023-09-24"},{"lineNumber":4,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":5,"author":{"gitId":"ravern"},"content":"## Features","lastModifiedDate":"2023-09-24"},{"lineNumber":6,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":7,"author":{"gitId":"ravern"},"content":"* Create and delete tasks with _optional_ deadlines or start/end dates","lastModifiedDate":"2023-09-24"},{"lineNumber":8,"author":{"gitId":"ravern"},"content":"* List all the tasks you currently have","lastModifiedDate":"2023-09-24"},{"lineNumber":9,"author":{"gitId":"ravern"},"content":"* Mark tasks as done and unmark them as well","lastModifiedDate":"2023-09-24"},{"lineNumber":10,"author":{"gitId":"ravern"},"content":"* Find tasks by searching their titles","lastModifiedDate":"2023-09-24"},{"lineNumber":11,"author":{"gitId":"ravern"},"content":"* Remove any duplicate tasks","lastModifiedDate":"2023-09-24"},{"lineNumber":12,"author":{"gitId":"ravern"},"content":"* Automatically saves tasks to a file and loads when the chatbot is opened","lastModifiedDate":"2023-09-24"},{"lineNumber":13,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":14,"author":{"gitId":"ravern"},"content":"## Installation","lastModifiedDate":"2023-09-24"},{"lineNumber":15,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":16,"author":{"gitId":"ravern"},"content":"1. Ensure a _recent_ version of Java is installed on your system","lastModifiedDate":"2023-09-24"},{"lineNumber":17,"author":{"gitId":"ravern"},"content":"2. Download the [latest release](https://github.com/ravern/ip/releases) of Ekud from GitHub","lastModifiedDate":"2023-09-24"},{"lineNumber":18,"author":{"gitId":"ravern"},"content":"3. Run the JAR file using the command `java -jar ekud.jar`","lastModifiedDate":"2023-09-24"},{"lineNumber":19,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":20,"author":{"gitId":"ravern"},"content":"## Usage","lastModifiedDate":"2023-09-24"},{"lineNumber":21,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":22,"author":{"gitId":"ravern"},"content":"Here\u0027s how to use Ekud.","lastModifiedDate":"2023-09-24"},{"lineNumber":23,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":24,"author":{"gitId":"ravern"},"content":"### `list`","lastModifiedDate":"2023-09-24"},{"lineNumber":25,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":26,"author":{"gitId":"ravern"},"content":"The `list` command lists all the tasks that are stored in Ekud at that moment. It will provide an index for each task e.g. 1, 2, 3 which is important for task manipulation with the other commands.","lastModifiedDate":"2023-09-24"},{"lineNumber":27,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":28,"author":{"gitId":"ravern"},"content":"![Demo of `list` command](images/list.png)","lastModifiedDate":"2023-09-24"},{"lineNumber":29,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":30,"author":{"gitId":"ravern"},"content":"### `todo`, `deadline`, `event`","lastModifiedDate":"2023-09-24"},{"lineNumber":31,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":32,"author":{"gitId":"ravern"},"content":"Each of these commands creates a new task within the list. `todo` creates a new basic task, which only contains a title with no notion of date/time attached. `event` creates a task which has a start date/time and an end date/time. `deadline` creates a task which has a deadline date/time attached to it.","lastModifiedDate":"2023-09-24"},{"lineNumber":33,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":34,"author":{"gitId":"ravern"},"content":"The date provided should be in the format `DD-MM-YYYY` e.g. `03-04-2023`, while the time should be provided in the format `HH:mm` e.g. `17:00`.","lastModifiedDate":"2023-09-24"},{"lineNumber":35,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":36,"author":{"gitId":"ravern"},"content":"![Demo of `todo`, `event` and `deadline` commands](images/todo-event-deadline.png)","lastModifiedDate":"2023-09-24"},{"lineNumber":37,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":38,"author":{"gitId":"ravern"},"content":"### `mark`, `unmark`","lastModifiedDate":"2023-09-24"},{"lineNumber":39,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":40,"author":{"gitId":"ravern"},"content":"These commands `mark` or `unmark` a task as completed or not completed, respectively. They take in a single argument â€” task index â€”Â that must be an integer containing a valid index into the list of tasks shown by the `list` command.","lastModifiedDate":"2023-09-24"},{"lineNumber":41,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":42,"author":{"gitId":"ravern"},"content":"![Demo of `mark` and `unmark` commands](images/mark-unmark.png)","lastModifiedDate":"2023-09-24"},{"lineNumber":43,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":44,"author":{"gitId":"ravern"},"content":"### `find`","lastModifiedDate":"2023-09-24"},{"lineNumber":45,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":46,"author":{"gitId":"ravern"},"content":"The `find` command searches and prints all tasks with titles that contain the given string. **Take note, the indices returned from this command aren\u0027t the same as in the `list` command. Do not use these indices to manipulate the tasks i.e. `mark`, `delete`, etc.**","lastModifiedDate":"2023-09-24"},{"lineNumber":47,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":48,"author":{"gitId":"ravern"},"content":"![Demo of `find` command](images/find.png)","lastModifiedDate":"2023-09-24"},{"lineNumber":49,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":50,"author":{"gitId":"ravern"},"content":"### `delete`","lastModifiedDate":"2023-09-24"},{"lineNumber":51,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":52,"author":{"gitId":"ravern"},"content":"The `delete` command deletes the task with the given index from the list of tasks.","lastModifiedDate":"2023-09-24"},{"lineNumber":53,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":54,"author":{"gitId":"ravern"},"content":"![Demo of `delete` command](images/delete.png)","lastModifiedDate":"2023-09-24"},{"lineNumber":55,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":56,"author":{"gitId":"ravern"},"content":"### `clean`","lastModifiedDate":"2023-09-24"},{"lineNumber":57,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":58,"author":{"gitId":"ravern"},"content":"The `clean` command removes any duplicate tasks that might have been added by accident into the task list. Two tasks are considered equal if their types i.e to-do, event, deadline, titles and any date/times attached are exactly the same.","lastModifiedDate":"2023-09-24"},{"lineNumber":59,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":60,"author":{"gitId":"ravern"},"content":"![Demo of `clean` command](images/clean.png)","lastModifiedDate":"2023-09-24"}],"authorContributionMap":{"ravern":60}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"ravern"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"ravern"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"ravern"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"ravern"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"ravern"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"ravern"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"ravern"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"ravern"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"ravern"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"ravern"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"ravern"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"ravern"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"ravern"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"ravern"},"content":"    mainClass.set(\"ekud.Launcher\")","lastModifiedDate":"2023-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"ravern"},"content":"    archiveBaseName \u003d \"ekud\"","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"ravern"},"content":"test {","lastModifiedDate":"2023-09-22"},{"lineNumber":56,"author":{"gitId":"ravern"},"content":"    useJUnitPlatform()","lastModifiedDate":"2023-09-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-22"},{"lineNumber":58,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"ravern"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ravern":20,"-":42}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ravern"},"content":"# Ekud ðŸ¤–","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"ravern"},"content":"Ekud is a simple chatbot that helps you remember your to-dos, deadlines and events. The name Ekud comes from spelling Duke â€” the name of the project this chatbot is based upon â€”Â backwards. It is an attempt at humour.","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":5,"author":{"gitId":"ravern"},"content":"## Features","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"ravern"},"content":"* Create and delete tasks with _optional_ deadlines or start/end dates","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"ravern"},"content":"* List all the tasks you currently have","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"ravern"},"content":"* Mark tasks as done and unmark them as well","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"ravern"},"content":"* Find tasks by searching their titles","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"ravern"},"content":"* Remove any duplicate tasks","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"ravern"},"content":"* Automatically saves tasks to a file and loads when the chatbot is opened","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"ravern"},"content":"## Installation","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"ravern"},"content":"1. Ensure a _recent_ version of Java is installed on your system","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"ravern"},"content":"2. Download the [latest release](https://github.com/ravern/ip/releases) of Ekud from GitHub","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"ravern"},"content":"3. Run the JAR file using the command `java -jar ekud.jar`","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"ravern"},"content":"Here\u0027s how to use Ekud.","lastModifiedDate":"2023-09-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":24,"author":{"gitId":"ravern"},"content":"### `list`","lastModifiedDate":"2023-09-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":26,"author":{"gitId":"ravern"},"content":"The `list` command lists all the tasks that are stored in Ekud at that moment. It will provide an index for each task e.g. 1, 2, 3 which is important for task manipulation with the other commands.","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":28,"author":{"gitId":"ravern"},"content":"![Demo of `list` command](images/list.png)","lastModifiedDate":"2023-09-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"ravern"},"content":"### `todo`, `deadline`, `event`","lastModifiedDate":"2023-09-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":32,"author":{"gitId":"ravern"},"content":"Each of these commands creates a new task within the list. `todo` creates a new basic task, which only contains a title with no notion of date/time attached. `event` creates a task which has a start date/time and an end date/time. `deadline` creates a task which has a deadline date/time attached to it.","lastModifiedDate":"2023-09-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"ravern"},"content":"The date provided should be in the format `DD-MM-YYYY` e.g. `03-04-2023`, while the time should be provided in the format `HH:mm` e.g. `17:00`.","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"ravern"},"content":"![Demo of `todo`, `event` and `deadline` commands](images/todo-event-deadline.png)","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":38,"author":{"gitId":"ravern"},"content":"### `mark`, `unmark`","lastModifiedDate":"2023-09-19"},{"lineNumber":39,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":40,"author":{"gitId":"ravern"},"content":"These commands `mark` or `unmark` a task as completed or not completed, respectively. They take in a single argument â€” task index â€”Â that must be an integer containing a valid index into the list of tasks shown by the `list` command.","lastModifiedDate":"2023-09-19"},{"lineNumber":41,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":42,"author":{"gitId":"ravern"},"content":"![Demo of `mark` and `unmark` commands](images/mark-unmark.png)","lastModifiedDate":"2023-09-19"},{"lineNumber":43,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":44,"author":{"gitId":"ravern"},"content":"### `find`","lastModifiedDate":"2023-09-19"},{"lineNumber":45,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"ravern"},"content":"The `find` command searches and prints all tasks with titles that contain the given string. **Take note, the indices returned from this command aren\u0027t the same as in the `list` command. Do not use these indices to manipulate the tasks i.e. `mark`, `delete`, etc.**","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"ravern"},"content":"![Demo of `find` command](images/find.png)","lastModifiedDate":"2023-09-19"},{"lineNumber":49,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":50,"author":{"gitId":"ravern"},"content":"### `delete`","lastModifiedDate":"2023-09-19"},{"lineNumber":51,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"ravern"},"content":"The `delete` command deletes the task with the given index from the list of tasks.","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"ravern"},"content":"![Demo of `delete` command](images/delete.png)","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"ravern"},"content":"### `clean`","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"ravern"},"content":"The `clean` command removes any duplicate tasks that might have been added by accident into the task list. Two tasks are considered equal if their types i.e to-do, event, deadline, titles and any date/times attached are exactly the same.","lastModifiedDate":"2023-09-19"},{"lineNumber":59,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":60,"author":{"gitId":"ravern"},"content":"![Demo of `clean` command](images/clean.png)","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"ravern":46,"-":14}},{"path":"src/main/java/ekud/Ekud.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ravern"},"content":"package ekud;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ravern"},"content":"import java.io.OutputStream;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"ravern"},"content":"import ekud.state.State;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"ravern"},"content":"import ekud.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"ravern"},"content":"import ekud.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"ravern"},"content":"import ekud.ui.cli.Cli;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"ravern"},"content":"import ekud.ui.gui.Gui;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"ravern"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"ravern"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"ravern"},"content":"public class Ekud extends Application {","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"ravern"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"ravern"},"content":"        launch(args);","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"ravern"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"ravern"},"content":"    public void start(Stage stage) throws Exception {","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"ravern"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"ravern"},"content":"        // Load previous commands by using an isolated Program instance.","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"ravern"},"content":"        State state \u003d null;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"ravern"},"content":"        {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"ravern"},"content":"            Ui ui \u003d new Cli(storage.createInputStream(), OutputStream.nullOutputStream(),","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"ravern"},"content":"                    OutputStream.nullOutputStream());","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"ravern"},"content":"            Program program \u003d new Program(ui, null);","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"ravern"},"content":"            program.run();","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"ravern"},"content":"            state \u003d program.getState();","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"ravern"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"ravern"},"content":"        Ui ui \u003d new Gui(stage);","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"ravern"},"content":"        Program program \u003d new Program(ui, storage, state);","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"ravern"},"content":"        program.run();","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"ravern"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"ravern":36}},{"path":"src/main/java/ekud/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ravern"},"content":"package ekud;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"ravern"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"ravern"},"content":"/**","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"ravern"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"ravern"},"content":" */","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"ravern"},"content":"public class Launcher {","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"ravern"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"ravern"},"content":"        Application.launch(Ekud.class, args);","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"ravern"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"ravern":12}},{"path":"src/main/java/ekud/Program.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ravern"},"content":"package ekud;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ravern"},"content":"import ekud.command.Command;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"ravern"},"content":"import ekud.error.EkudException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"ravern"},"content":"import ekud.handler.Handler;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"ravern"},"content":"import ekud.state.State;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"ravern"},"content":"import ekud.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"ravern"},"content":"import ekud.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"ravern"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ravern"},"content":" * Represents the abstract ekud program, decoupled from input and output","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ravern"},"content":" * implementations.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ravern"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ravern"},"content":"public final class Program {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"ravern"},"content":"    private final Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"ravern"},"content":"    private final Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"ravern"},"content":"    private final State state;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"ravern"},"content":"    private final Handler handler;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"ravern"},"content":"     * Creates a new program that doesn\u0027t store data and with an empty state.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"ravern"},"content":"     * @param ui The user interface implementation.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"ravern"},"content":"    public Program(Ui ui) {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"ravern"},"content":"        this(ui, null);","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"ravern"},"content":"     * Creates a new program that with an empty state.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"ravern"},"content":"     * @param ui      The user interface implementation.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"ravern"},"content":"     * @param storage The storage implementation.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"ravern"},"content":"    public Program(Ui ui, Storage storage) {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"ravern"},"content":"        this(ui, storage, new State());","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"ravern"},"content":"     * Creates a new program starting with the given state.","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"ravern"},"content":"     * @param ui      The user interface implementation.","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"ravern"},"content":"     * @param storage The storage implementation.","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"ravern"},"content":"     * @param state   The current state of the program.","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"ravern"},"content":"    public Program(Ui ui, Storage storage, State state) {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"ravern"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"ravern"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"ravern"},"content":"        this.state \u003d state;","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"ravern"},"content":"        handler \u003d new Handler();","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"ravern"},"content":"     * Returns the current state of the program.","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"ravern"},"content":"     * @return The current state.","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"ravern"},"content":"    public State getState() {","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"ravern"},"content":"        return state;","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"ravern"},"content":"     * Steps the program forward by one command, reading the command from the user","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"ravern"},"content":"     * interface and handling it.","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"ravern"},"content":"     * @return Whether the program should continue or end execution.","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"ravern"},"content":"    public boolean step(Command command) {","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"ravern"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"ravern"},"content":"            if (!handler.handle(state, command, ui)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"ravern"},"content":"                return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"ravern"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"ravern"},"content":"            if (storage !\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"ravern"},"content":"                storage.write(command);","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"ravern"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"ravern"},"content":"        } catch (EkudException error) {","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"ravern"},"content":"            ui.showError(error);","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"ravern"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"ravern"},"content":"        return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"ravern"},"content":"     * Runs the program by stepping until execution is ended.","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"ravern"},"content":"    public void run() {","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"ravern"},"content":"        ui.setOnCommand(this::step);","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"ravern"},"content":"        ui.run();","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"ravern"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"ravern":89}},{"path":"src/main/java/ekud/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ravern"},"content":"package ekud.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ravern"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"ravern"},"content":" * Represents the bye command used to exit the program.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"ravern"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ravern"},"content":"public final class ByeCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"ravern"},"content":"     * Creates a new bye command.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ravern"},"content":"    public ByeCommand() {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ravern"},"content":"     * Returns the string representation of the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ravern"},"content":"     * This is identical (excluding whitespace) to how the user would type it into","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"ravern"},"content":"     * the CLI.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ravern"},"content":"     * @return String representation.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ravern"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"ravern"},"content":"    public String toString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"ravern"},"content":"        return \"bye\";","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"ravern"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"ravern":24}},{"path":"src/main/java/ekud/command/CleanCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ravern"},"content":"package ekud.command;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"ravern"},"content":"/**","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"ravern"},"content":" * Represents the clean command used to deduplicate tasks,","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"ravern"},"content":" */","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"ravern"},"content":"public final class CleanCommand extends Command {","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"ravern"},"content":"     * Creates a new clean command.","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"ravern"},"content":"    public CleanCommand() {","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"ravern"},"content":"     * Returns the string representation of the command.","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"ravern"},"content":"     * This is identical (excluding whitespace) to how the user would type it into","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"ravern"},"content":"     * the CLI.","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"ravern"},"content":"     * @return String representation.","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"ravern"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"ravern"},"content":"    public String toString() {","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"ravern"},"content":"        return \"clean\";","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"ravern"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"ravern":24}},{"path":"src/main/java/ekud/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ravern"},"content":"package ekud.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ravern"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"ravern"},"content":" * Represents a command sent by the user to perform actions on the program.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"ravern"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ravern"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"ravern"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"ravern":7}},{"path":"src/main/java/ekud/command/CreateDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ravern"},"content":"package ekud.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"ravern"},"content":"import ekud.util.DateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"ravern"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ravern"},"content":" * Represents the deadline command used to create a new task with a deadline.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"ravern"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"ravern"},"content":"public final class CreateDeadlineCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"ravern"},"content":"    private final String title;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"ravern"},"content":"    private final DateTime by;","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ravern"},"content":"     * Creates a new deadline command.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ravern"},"content":"     * @param title The title of the task to create.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"ravern"},"content":"     * @param by    The deadline of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ravern"},"content":"    public CreateDeadlineCommand(String title, DateTime by) {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"ravern"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"ravern"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ravern"},"content":"     * Returns the title of the task to create.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"ravern"},"content":"     * @return The title.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"ravern"},"content":"    public String getTitle() {","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"ravern"},"content":"        return title;","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"ravern"},"content":"     * Returns the deadline of the task to create.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"ravern"},"content":"     * @return The deadline.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"ravern"},"content":"    public DateTime getBy() {","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"ravern"},"content":"        return by;","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"ravern"},"content":"     * Returns the string representation of the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"ravern"},"content":"     * This is identical (excluding whitespace) to how the user would type it into","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"ravern"},"content":"     * the CLI.","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"ravern"},"content":"     * @return String representation.","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"ravern"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"ravern"},"content":"    public String toString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"ravern"},"content":"        return String.format(\"deadline %s /by %s\", title, by);","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"ravern"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"ravern":52}},{"path":"src/main/java/ekud/command/CreateEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ravern"},"content":"package ekud.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"ravern"},"content":"import ekud.util.DateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"ravern"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ravern"},"content":" * Represents the event command used to create a new task with a start and end","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"ravern"},"content":" * date/time.","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"ravern"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"ravern"},"content":"public final class CreateEventCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"ravern"},"content":"    private final String title;","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"ravern"},"content":"    private final DateTime from;","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"ravern"},"content":"    private final DateTime to;","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ravern"},"content":"     * Creates a new event command.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ravern"},"content":"     * @param title The title of the task to create.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ravern"},"content":"     * @param from  The start date/time of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ravern"},"content":"     * @param to    The end date/time of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"ravern"},"content":"    public CreateEventCommand(String title, DateTime from, DateTime to) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"ravern"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"ravern"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"ravern"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"ravern"},"content":"     * Returns the title of the task to create.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"ravern"},"content":"     * @return The title.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"ravern"},"content":"    public String getTitle() {","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"ravern"},"content":"        return title;","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"ravern"},"content":"     * Returns the start date/time of the task to create.","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"ravern"},"content":"     * @return The start date/time.","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"ravern"},"content":"    public DateTime getFrom() {","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"ravern"},"content":"        return from;","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"ravern"},"content":"     * Returns the end date/time of the task to create.","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"ravern"},"content":"     * @return The end date/time.","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"ravern"},"content":"    public DateTime getTo() {","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"ravern"},"content":"        return to;","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"ravern"},"content":"     * Returns the string representation of the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"ravern"},"content":"     * This is identical (excluding whitespace) to how the user would type it into","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"ravern"},"content":"     * the CLI.","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"ravern"},"content":"     * @return String representation.","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"ravern"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"ravern"},"content":"    public String toString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"ravern"},"content":"        return String.format(\"event %s /from %s /to %s\", title, from, to);","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"ravern"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"ravern":65}},{"path":"src/main/java/ekud/command/CreateTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ravern"},"content":"package ekud.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"ravern"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"ravern"},"content":" * Represents the todo command used to create a new simple task.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"ravern"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ravern"},"content":"public final class CreateTodoCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"ravern"},"content":"    private final String title;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ravern"},"content":"     * Creates a new todo command.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ravern"},"content":"     * @param title The title of the task to create.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ravern"},"content":"    public CreateTodoCommand(String title) {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"ravern"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ravern"},"content":"     * Returns the title of the task to create.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"ravern"},"content":"     * @return The title.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"ravern"},"content":"    public String getTitle() {","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"ravern"},"content":"        return title;","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"ravern"},"content":"     * Returns the string representation of the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"ravern"},"content":"     * This is identical (excluding whitespace) to how the user would type it into","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"ravern"},"content":"     * the CLI.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"ravern"},"content":"     * @return String representation.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ravern"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"ravern"},"content":"    public String toString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"ravern"},"content":"        return String.format(\"todo %s\", title);","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"ravern"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"ravern":38}},{"path":"src/main/java/ekud/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ravern"},"content":"package ekud.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"ravern"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"ravern"},"content":" * Represents the delete command used to delete a task.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"ravern"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ravern"},"content":"public final class DeleteCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"ravern"},"content":"    private final int taskId;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ravern"},"content":"     * Creates a new delete command.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ravern"},"content":"     * @param taskId The identifier of the task to delete.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ravern"},"content":"    public DeleteCommand(int taskId) {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"ravern"},"content":"        this.taskId \u003d taskId;","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ravern"},"content":"     * Returns the identifier of the task to delete.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"ravern"},"content":"     * @return The task identifier.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"ravern"},"content":"    public int getTaskId() {","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"ravern"},"content":"        return taskId;","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"ravern"},"content":"     * Returns the string representation of the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"ravern"},"content":"     * This is identical (excluding whitespace) to how the user would type it into","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"ravern"},"content":"     * the CLI.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"ravern"},"content":"     * @return String representation.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ravern"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"ravern"},"content":"    public String toString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"ravern"},"content":"        return String.format(\"delete %d\", taskId);","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"ravern"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"ravern":38}},{"path":"src/main/java/ekud/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ravern"},"content":"package ekud.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ravern"},"content":"public final class FindCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"ravern"},"content":"    private final String query;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ravern"},"content":"    public FindCommand(String query) {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"ravern"},"content":"        this.query \u003d query;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ravern"},"content":"    public String getQuery() {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ravern"},"content":"        return query;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ravern"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ravern"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"ravern"},"content":"        return String.format(\"find %s\", query);","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ravern"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"ravern":18}},{"path":"src/main/java/ekud/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ravern"},"content":"package ekud.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ravern"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"ravern"},"content":" * Represents the list command used to list all the tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"ravern"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ravern"},"content":"public final class ListCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"ravern"},"content":"     * Creates a new list command.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ravern"},"content":"    public ListCommand() {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ravern"},"content":"     * Returns the string representation of the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ravern"},"content":"     * This is identical (excluding whitespace) to how the user would type it into","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"ravern"},"content":"     * the CLI.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ravern"},"content":"     * @return String representation.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ravern"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"ravern"},"content":"    public String toString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"ravern"},"content":"        return \"list\";","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"ravern"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"ravern":24}},{"path":"src/main/java/ekud/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ravern"},"content":"package ekud.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"ravern"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"ravern"},"content":" * Represents the mark command used to mark a task as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"ravern"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ravern"},"content":"public final class MarkCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"ravern"},"content":"    private final int taskId;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ravern"},"content":"     * Creates a new mark command.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ravern"},"content":"     * @param taskId The identifier of the task to mark.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ravern"},"content":"    public MarkCommand(int taskId) {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"ravern"},"content":"        this.taskId \u003d taskId;","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ravern"},"content":"     * Returns the identifier of the task to mark.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"ravern"},"content":"     * @return The task identifier.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"ravern"},"content":"    public int getTaskId() {","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"ravern"},"content":"        return taskId;","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"ravern"},"content":"     * Returns the string representation of the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"ravern"},"content":"     * This is identical (excluding whitespace) to how the user would type it into","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"ravern"},"content":"     * the CLI.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"ravern"},"content":"     * @return String representation.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ravern"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"ravern"},"content":"    public String toString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"ravern"},"content":"        return String.format(\"mark %d\", taskId);","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"ravern"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"ravern":38}},{"path":"src/main/java/ekud/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ravern"},"content":"package ekud.command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"ravern"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"ravern"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"ravern"},"content":"import ekud.error.ParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"ravern"},"content":"import ekud.util.DateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"ravern"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ravern"},"content":" * Parses a single line of text into a user command to ekud.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ravern"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ravern"},"content":"public final class Parser {","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ravern"},"content":"     * Parses the given non-empty line of text into a user command.","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"ravern"},"content":"     * @param line The non-empty line to parse.","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"ravern"},"content":"     * @return The command that was parsed.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ravern"},"content":"     * @throws ParseException           If the command cannot be parsed.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ravern"},"content":"     * @throws IllegalArugmentException If the line is empty.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"ravern"},"content":"    public static Command parseCommand(String line) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"ravern"},"content":"        assert !line.isEmpty() : \"Empty line passed\";","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"ravern"},"content":"        String[] componentStrings \u003d line.split(\"\\\\/\");","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"ravern"},"content":"        Component[] components \u003d new Component[componentStrings.length];","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"ravern"},"content":"        components[0] \u003d parseComponent(componentStrings[0]);","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"ravern"},"content":"        String name \u003d components[0].getName();","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"ravern"},"content":"        String argument \u003d components[0].getArgument();","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"ravern"},"content":"        HashMap\u003cString, String\u003e flags \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"ravern"},"content":"        for (int index \u003d 1; index \u003c componentStrings.length; index++) {","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"ravern"},"content":"            Component component \u003d parseComponent(componentStrings[index]);","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"ravern"},"content":"            flags.put(component.getName(), component.getArgument());","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"ravern"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"ravern"},"content":"        switch (name) {","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"ravern"},"content":"            case \"list\": {","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"ravern"},"content":"                return new ListCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"ravern"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"ravern"},"content":"            case \"clean\": {","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"ravern"},"content":"                return new CleanCommand();","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"ravern"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"ravern"},"content":"            case \"todo\": {","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"ravern"},"content":"                if (argument.isEmpty()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"ravern"},"content":"                    throw new ParseException(line, \"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"ravern"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"ravern"},"content":"                return new CreateTodoCommand(argument);","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"ravern"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"ravern"},"content":"            case \"deadline\": {","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"ravern"},"content":"                if (argument.isEmpty()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"ravern"},"content":"                    throw new ParseException(line, \"The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"ravern"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"ravern"},"content":"                DateTime by \u003d parseDateTimeArgument(getFlagValue(line, flags, \"by\"));","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"ravern"},"content":"                return new CreateDeadlineCommand(argument, by);","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"ravern"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"ravern"},"content":"            case \"event\": {","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"ravern"},"content":"                if (argument.isEmpty()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"ravern"},"content":"                    throw new ParseException(line, \"The description of an event cannot be empty.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"ravern"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"ravern"},"content":"                DateTime from \u003d parseDateTimeArgument(getFlagValue(line, flags, \"from\"));","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"ravern"},"content":"                DateTime to \u003d parseDateTimeArgument(getFlagValue(line, flags, \"to\"));","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"ravern"},"content":"                return new CreateEventCommand(argument, from, to);","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"ravern"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":65,"author":{"gitId":"ravern"},"content":"            case \"mark\": {","lastModifiedDate":"2023-08-22"},{"lineNumber":66,"author":{"gitId":"ravern"},"content":"                if (argument.isEmpty()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"ravern"},"content":"                    throw new ParseException(line, \"A task identifier must be provided.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"ravern"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"ravern"},"content":"                int taskId \u003d parseIntArgument(argument);","lastModifiedDate":"2023-08-22"},{"lineNumber":70,"author":{"gitId":"ravern"},"content":"                return new MarkCommand(taskId);","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"ravern"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":72,"author":{"gitId":"ravern"},"content":"            case \"unmark\": {","lastModifiedDate":"2023-08-22"},{"lineNumber":73,"author":{"gitId":"ravern"},"content":"                if (argument.isEmpty()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"ravern"},"content":"                    throw new ParseException(line, \"A task identifier must be provided.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"ravern"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"ravern"},"content":"                int taskId \u003d parseIntArgument(argument);","lastModifiedDate":"2023-08-22"},{"lineNumber":77,"author":{"gitId":"ravern"},"content":"                return new UnmarkCommand(taskId);","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"ravern"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":79,"author":{"gitId":"ravern"},"content":"            case \"delete\": {","lastModifiedDate":"2023-08-23"},{"lineNumber":80,"author":{"gitId":"ravern"},"content":"                if (argument.isEmpty()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"ravern"},"content":"                    throw new ParseException(line, \"A task identifier must be provided.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"ravern"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":83,"author":{"gitId":"ravern"},"content":"                int taskId \u003d parseIntArgument(argument);","lastModifiedDate":"2023-08-23"},{"lineNumber":84,"author":{"gitId":"ravern"},"content":"                return new DeleteCommand(taskId);","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"ravern"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":86,"author":{"gitId":"ravern"},"content":"            case \"find\": {","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"ravern"},"content":"                if (argument.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"ravern"},"content":"                    throw new ParseException(line, \"A search query must be provided.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"ravern"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"ravern"},"content":"                return new FindCommand(argument);","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"ravern"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"ravern"},"content":"            case \"bye\": {","lastModifiedDate":"2023-08-22"},{"lineNumber":93,"author":{"gitId":"ravern"},"content":"                return new ByeCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"ravern"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":95,"author":{"gitId":"ravern"},"content":"            default:","lastModifiedDate":"2023-08-22"},{"lineNumber":96,"author":{"gitId":"ravern"},"content":"                throw new ParseException(line, \"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-28"},{"lineNumber":97,"author":{"gitId":"ravern"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":98,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":99,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":100,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":101,"author":{"gitId":"ravern"},"content":"    private static class Component {","lastModifiedDate":"2023-08-22"},{"lineNumber":102,"author":{"gitId":"ravern"},"content":"        private String name;","lastModifiedDate":"2023-08-22"},{"lineNumber":103,"author":{"gitId":"ravern"},"content":"        private String argument;","lastModifiedDate":"2023-08-22"},{"lineNumber":104,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":105,"author":{"gitId":"ravern"},"content":"        public Component(String name, String argument) {","lastModifiedDate":"2023-08-22"},{"lineNumber":106,"author":{"gitId":"ravern"},"content":"            this.name \u003d name;","lastModifiedDate":"2023-08-22"},{"lineNumber":107,"author":{"gitId":"ravern"},"content":"            this.argument \u003d argument;","lastModifiedDate":"2023-08-22"},{"lineNumber":108,"author":{"gitId":"ravern"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":109,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":110,"author":{"gitId":"ravern"},"content":"        public String getName() {","lastModifiedDate":"2023-08-22"},{"lineNumber":111,"author":{"gitId":"ravern"},"content":"            return name;","lastModifiedDate":"2023-08-22"},{"lineNumber":112,"author":{"gitId":"ravern"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":113,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":114,"author":{"gitId":"ravern"},"content":"        public String getArgument() {","lastModifiedDate":"2023-08-22"},{"lineNumber":115,"author":{"gitId":"ravern"},"content":"            return argument;","lastModifiedDate":"2023-08-22"},{"lineNumber":116,"author":{"gitId":"ravern"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":117,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":119,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":120,"author":{"gitId":"ravern"},"content":"    private static Component parseComponent(String component) {","lastModifiedDate":"2023-08-22"},{"lineNumber":121,"author":{"gitId":"ravern"},"content":"        assert !component.isEmpty() : \"Empty string passed\";","lastModifiedDate":"2023-09-18"},{"lineNumber":122,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":123,"author":{"gitId":"ravern"},"content":"        String trimmedComponent \u003d component.trim();","lastModifiedDate":"2023-08-22"},{"lineNumber":124,"author":{"gitId":"ravern"},"content":"        String[] components \u003d trimmedComponent.split(\"\\\\s+\");","lastModifiedDate":"2023-08-22"},{"lineNumber":125,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":126,"author":{"gitId":"ravern"},"content":"        int nameLength \u003d components[0].length();","lastModifiedDate":"2023-08-22"},{"lineNumber":127,"author":{"gitId":"ravern"},"content":"        String name \u003d trimmedComponent.substring(0, nameLength).trim();","lastModifiedDate":"2023-08-22"},{"lineNumber":128,"author":{"gitId":"ravern"},"content":"        String argument \u003d trimmedComponent.substring(nameLength).trim();","lastModifiedDate":"2023-08-22"},{"lineNumber":129,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":130,"author":{"gitId":"ravern"},"content":"        return new Component(name, argument);","lastModifiedDate":"2023-08-22"},{"lineNumber":131,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":132,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":133,"author":{"gitId":"ravern"},"content":"    private static int parseIntArgument(String argument) {","lastModifiedDate":"2023-08-22"},{"lineNumber":134,"author":{"gitId":"ravern"},"content":"        try {","lastModifiedDate":"2023-08-22"},{"lineNumber":135,"author":{"gitId":"ravern"},"content":"            return Integer.parseInt(argument);","lastModifiedDate":"2023-08-22"},{"lineNumber":136,"author":{"gitId":"ravern"},"content":"        } catch (NumberFormatException error) {","lastModifiedDate":"2023-08-22"},{"lineNumber":137,"author":{"gitId":"ravern"},"content":"            throw new ParseException(argument, \"Expected an integer.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":138,"author":{"gitId":"ravern"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":139,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":140,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":141,"author":{"gitId":"ravern"},"content":"    private static DateTime parseDateTimeArgument(String argument) {","lastModifiedDate":"2023-08-28"},{"lineNumber":142,"author":{"gitId":"ravern"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":143,"author":{"gitId":"ravern"},"content":"            return DateTime.parse(argument);","lastModifiedDate":"2023-08-28"},{"lineNumber":144,"author":{"gitId":"ravern"},"content":"        } catch (DateTimeParseException error) {","lastModifiedDate":"2023-08-28"},{"lineNumber":145,"author":{"gitId":"ravern"},"content":"            throw new ParseException(argument, \"Expected a date, time or both.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":146,"author":{"gitId":"ravern"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":147,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":148,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":149,"author":{"gitId":"ravern"},"content":"    private static String getFlagValue(String line, HashMap\u003cString, String\u003e flags, String name) {","lastModifiedDate":"2023-08-28"},{"lineNumber":150,"author":{"gitId":"ravern"},"content":"        String value \u003d flags.get(name);","lastModifiedDate":"2023-08-22"},{"lineNumber":151,"author":{"gitId":"ravern"},"content":"        if (value \u003d\u003d null) {","lastModifiedDate":"2023-08-22"},{"lineNumber":152,"author":{"gitId":"ravern"},"content":"            throw new ParseException(line, \"Missing an option: /\" + name);","lastModifiedDate":"2023-08-28"},{"lineNumber":153,"author":{"gitId":"ravern"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":154,"author":{"gitId":"ravern"},"content":"        return value;","lastModifiedDate":"2023-08-22"},{"lineNumber":155,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":156,"author":{"gitId":"ravern"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"ravern":156}},{"path":"src/main/java/ekud/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ravern"},"content":"package ekud.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"ravern"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"ravern"},"content":" * Represents the unmark command used to mark a task as not done.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"ravern"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ravern"},"content":"public final class UnmarkCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"ravern"},"content":"    private final int taskId;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ravern"},"content":"     * Creates a new unmark command.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ravern"},"content":"     * @param taskId The identifier of the task to unmark.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ravern"},"content":"    public UnmarkCommand(int taskId) {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"ravern"},"content":"        this.taskId \u003d taskId;","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ravern"},"content":"     * Returns the identifier of the task to unmark.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"ravern"},"content":"     * @return The task identifier.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"ravern"},"content":"    public int getTaskId() {","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"ravern"},"content":"        return taskId;","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"ravern"},"content":"     * Returns the string representation of the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"ravern"},"content":"     * This is identical (excluding whitespace) to how the user would type it into","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"ravern"},"content":"     * the CLI.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"ravern"},"content":"     * @return String representation.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ravern"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"ravern"},"content":"    public String toString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"ravern"},"content":"        return String.format(\"unmark %d\", taskId);","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"ravern"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"ravern":38}},{"path":"src/main/java/ekud/error/ArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ravern"},"content":"package ekud.error;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ravern"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"ravern"},"content":" * Represents an error with the arguments passed in a command.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"ravern"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ravern"},"content":"public final class ArgumentException extends EkudException {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"ravern"},"content":"     * Creates a new argument exception.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ravern"},"content":"     * @param message The message to display to the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ravern"},"content":"    public ArgumentException(String message) {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"ravern"},"content":"        super(message);","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"ravern"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"ravern":15}},{"path":"src/main/java/ekud/error/EkudException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ravern"},"content":"package ekud.error;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ravern"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"ravern"},"content":" * Represents a general exception that is thrown by code from the ekud packages.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"ravern"},"content":" * Adding a catch for this enables recovering from all expected errors e.g.","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ravern"},"content":" * parsing, invalid arguments, file storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"ravern"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"ravern"},"content":"public class EkudException extends RuntimeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"ravern"},"content":"    public EkudException(String message) {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"ravern"},"content":"        super(message);","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"ravern"},"content":"     * Creates a new storage exception.","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"ravern"},"content":"     * @param message The message to display to the user.","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"ravern"},"content":"     * @param cause   The throwable that caused this error.","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"ravern"},"content":"    public EkudException(String message, Throwable cause) {","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"ravern"},"content":"        super(message, cause);","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"ravern"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"ravern":22}},{"path":"src/main/java/ekud/error/ParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ravern"},"content":"package ekud.error;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"ravern"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"ravern"},"content":" * Represents an error with parsing a command.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"ravern"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ravern"},"content":"public final class ParseException extends EkudException {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"ravern"},"content":"    private final String line;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ravern"},"content":"     * Creates a new parse exception.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ravern"},"content":"     * @param line    The text that caused the parsing error.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ravern"},"content":"     * @param message The message to display to the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ravern"},"content":"    public ParseException(String line, String message) {","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"ravern"},"content":"        super(message);","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"ravern"},"content":"        this.line \u003d line;","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"ravern"},"content":"     * Returns the text that caused the parsing error.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"ravern"},"content":"     * @return The text.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"ravern"},"content":"    public String getLine() {","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"ravern"},"content":"        return line;","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"ravern"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"ravern":28}},{"path":"src/main/java/ekud/error/StorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ravern"},"content":"package ekud.error;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ravern"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"ravern"},"content":" * Represents an error with interacting with the file that saves the data from","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"ravern"},"content":" * this program.","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ravern"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"ravern"},"content":"public final class StorageException extends EkudException {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"ravern"},"content":"     * Creates a new storage exception.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ravern"},"content":"     * @param message The message to display to the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ravern"},"content":"    public StorageException(String message) {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"ravern"},"content":"        super(message);","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"ravern"},"content":"     * Creates a new storage exception.","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"ravern"},"content":"     * @param message The message to display to the user.","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"ravern"},"content":"     * @param cause   The throwable that caused this error.","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"ravern"},"content":"    public StorageException(String message, Throwable cause) {","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"ravern"},"content":"        super(message, cause);","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"ravern"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"ravern":26}},{"path":"src/main/java/ekud/handler/Handler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ravern"},"content":"package ekud.handler;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ravern"},"content":"import ekud.command.Command;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"ravern"},"content":"import java.util.List;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"ravern"},"content":"import ekud.command.ByeCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"ravern"},"content":"import ekud.command.CleanCommand;","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"ravern"},"content":"import ekud.command.CreateDeadlineCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"ravern"},"content":"import ekud.command.CreateEventCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"ravern"},"content":"import ekud.command.CreateTodoCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"ravern"},"content":"import ekud.command.DeleteCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"ravern"},"content":"import ekud.command.FindCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ravern"},"content":"import ekud.command.ListCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"ravern"},"content":"import ekud.command.MarkCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"ravern"},"content":"import ekud.command.UnmarkCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"ravern"},"content":"import ekud.error.ArgumentException;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"ravern"},"content":"import ekud.state.DeadlineTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"ravern"},"content":"import ekud.state.EventTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"ravern"},"content":"import ekud.state.State;","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"ravern"},"content":"import ekud.state.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"ravern"},"content":"import ekud.state.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"ravern"},"content":"import ekud.state.TodoTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"ravern"},"content":"import ekud.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"ravern"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"ravern"},"content":" * Handles modifying the current state of the program based on the command","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"ravern"},"content":" * given, passing side effects the user interface.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"ravern"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"ravern"},"content":"public final class Handler {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"ravern"},"content":"     * Handles the command given by getting user input from the user interface,","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"ravern"},"content":"     * modifying the current state of the program and passing side effects back to","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ravern"},"content":"     * the user interface.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"ravern"},"content":"     * @param state   The current state of the program.","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"ravern"},"content":"     * @param command The command to handle.","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"ravern"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"ravern"},"content":"     * @return Whether to continue execution of the program main loop.","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"ravern"},"content":"    public boolean handle(State state, Command command, Ui ui) {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"ravern"},"content":"        if (command instanceof ByeCommand) {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"ravern"},"content":"            return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"ravern"},"content":"        } else if (command instanceof ListCommand) {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"ravern"},"content":"            ui.showTaskList(state.getTaskList());","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"ravern"},"content":"        } else if (command instanceof CleanCommand) {","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"ravern"},"content":"            handleClean(state, command, ui);","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"ravern"},"content":"        } else if (command instanceof CreateTodoCommand) {","lastModifiedDate":"2023-09-18"},{"lineNumber":49,"author":{"gitId":"ravern"},"content":"            handleCreateTodo(state, command, ui);","lastModifiedDate":"2023-09-18"},{"lineNumber":50,"author":{"gitId":"ravern"},"content":"        } else if (command instanceof CreateDeadlineCommand) {","lastModifiedDate":"2023-09-18"},{"lineNumber":51,"author":{"gitId":"ravern"},"content":"            handleCreateDeadline(state, command, ui);","lastModifiedDate":"2023-09-18"},{"lineNumber":52,"author":{"gitId":"ravern"},"content":"        } else if (command instanceof CreateEventCommand) {","lastModifiedDate":"2023-09-18"},{"lineNumber":53,"author":{"gitId":"ravern"},"content":"            handleCreateEvent(state, command, ui);","lastModifiedDate":"2023-09-18"},{"lineNumber":54,"author":{"gitId":"ravern"},"content":"        } else if (command instanceof MarkCommand) {","lastModifiedDate":"2023-09-18"},{"lineNumber":55,"author":{"gitId":"ravern"},"content":"            handleMark(state, command, ui);","lastModifiedDate":"2023-09-18"},{"lineNumber":56,"author":{"gitId":"ravern"},"content":"        } else if (command instanceof UnmarkCommand) {","lastModifiedDate":"2023-09-18"},{"lineNumber":57,"author":{"gitId":"ravern"},"content":"            handleUnmark(state, command, ui);","lastModifiedDate":"2023-09-18"},{"lineNumber":58,"author":{"gitId":"ravern"},"content":"        } else if (command instanceof DeleteCommand) {","lastModifiedDate":"2023-09-18"},{"lineNumber":59,"author":{"gitId":"ravern"},"content":"            handleDelete(state, command, ui);","lastModifiedDate":"2023-09-18"},{"lineNumber":60,"author":{"gitId":"ravern"},"content":"        } else if (command instanceof FindCommand) {","lastModifiedDate":"2023-09-18"},{"lineNumber":61,"author":{"gitId":"ravern"},"content":"            handleFind(state, command, ui);","lastModifiedDate":"2023-09-18"},{"lineNumber":62,"author":{"gitId":"ravern"},"content":"        } else {","lastModifiedDate":"2023-09-18"},{"lineNumber":63,"author":{"gitId":"ravern"},"content":"            throw new UnsupportedOperationException(\"Invalid command!\");","lastModifiedDate":"2023-09-18"},{"lineNumber":64,"author":{"gitId":"ravern"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":65,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":66,"author":{"gitId":"ravern"},"content":"        return true;","lastModifiedDate":"2023-09-18"},{"lineNumber":67,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":68,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":69,"author":{"gitId":"ravern"},"content":"    private void handleClean(State state, Command command, Ui ui) {","lastModifiedDate":"2023-09-18"},{"lineNumber":70,"author":{"gitId":"ravern"},"content":"        state.getTaskList().deduplicate();","lastModifiedDate":"2023-09-12"},{"lineNumber":71,"author":{"gitId":"ravern"},"content":"        TaskList taskList \u003d state.getTaskList();","lastModifiedDate":"2023-09-12"},{"lineNumber":72,"author":{"gitId":"ravern"},"content":"        ui.showTasksCleaned();","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"ravern"},"content":"        ui.showTaskCount(taskList);","lastModifiedDate":"2023-09-12"},{"lineNumber":74,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":75,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":76,"author":{"gitId":"ravern"},"content":"    private void handleCreateTodo(State state, Command command, Ui ui) {","lastModifiedDate":"2023-09-18"},{"lineNumber":77,"author":{"gitId":"ravern"},"content":"        CreateTodoCommand createTodoCommand \u003d (CreateTodoCommand) command;","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"ravern"},"content":"        TaskList taskList \u003d state.getTaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"ravern"},"content":"        Task task \u003d new TodoTask(createTodoCommand.getTitle(), false);","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"ravern"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"ravern"},"content":"        ui.showTaskAdded(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"ravern"},"content":"        ui.showTaskCount(taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":84,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":85,"author":{"gitId":"ravern"},"content":"    private void handleCreateDeadline(State state, Command command, Ui ui) {","lastModifiedDate":"2023-09-18"},{"lineNumber":86,"author":{"gitId":"ravern"},"content":"        CreateDeadlineCommand createDeadlineCommand \u003d (CreateDeadlineCommand) command;","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"ravern"},"content":"        TaskList taskList \u003d state.getTaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"ravern"},"content":"        Task task \u003d new DeadlineTask(createDeadlineCommand.getTitle(), false, createDeadlineCommand.getBy());","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"ravern"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"ravern"},"content":"        ui.showTaskAdded(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"ravern"},"content":"        ui.showTaskCount(taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":93,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":94,"author":{"gitId":"ravern"},"content":"    private void handleCreateEvent(State state, Command command, Ui ui) {","lastModifiedDate":"2023-09-18"},{"lineNumber":95,"author":{"gitId":"ravern"},"content":"        CreateEventCommand createEventCommand \u003d (CreateEventCommand) command;","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"ravern"},"content":"        TaskList taskList \u003d state.getTaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"ravern"},"content":"        Task task \u003d new EventTask(createEventCommand.getTitle(), false, createEventCommand.getFrom(),","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"ravern"},"content":"                createEventCommand.getTo());","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"ravern"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"ravern"},"content":"        ui.showTaskAdded(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"ravern"},"content":"        ui.showTaskCount(taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":103,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":104,"author":{"gitId":"ravern"},"content":"    private void handleMark(State state, Command command, Ui ui) {","lastModifiedDate":"2023-09-18"},{"lineNumber":105,"author":{"gitId":"ravern"},"content":"        MarkCommand markCommand \u003d (MarkCommand) command;","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"ravern"},"content":"        TaskList taskList \u003d state.getTaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"ravern"},"content":"        Task task \u003d taskList.getTask(markCommand.getTaskId());","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"ravern"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"ravern"},"content":"            throw new ArgumentException(\"Invalid task identifier.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"ravern"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"ravern"},"content":"        task.markAsDone();","lastModifiedDate":"2023-09-12"},{"lineNumber":112,"author":{"gitId":"ravern"},"content":"        ui.showTaskMarked(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":114,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":115,"author":{"gitId":"ravern"},"content":"    private void handleUnmark(State state, Command command, Ui ui) {","lastModifiedDate":"2023-09-18"},{"lineNumber":116,"author":{"gitId":"ravern"},"content":"        UnmarkCommand unmarkCommand \u003d (UnmarkCommand) command;","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"ravern"},"content":"        TaskList taskList \u003d state.getTaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"ravern"},"content":"        Task task \u003d taskList.getTask(unmarkCommand.getTaskId());","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"ravern"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"ravern"},"content":"            throw new ArgumentException(\"Invalid task identifier.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"ravern"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"ravern"},"content":"        task.markAsNotDone();","lastModifiedDate":"2023-09-12"},{"lineNumber":123,"author":{"gitId":"ravern"},"content":"        ui.showTaskUnmarked(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":125,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":126,"author":{"gitId":"ravern"},"content":"    private void handleDelete(State state, Command command, Ui ui) {","lastModifiedDate":"2023-09-18"},{"lineNumber":127,"author":{"gitId":"ravern"},"content":"        DeleteCommand deleteCommand \u003d (DeleteCommand) command;","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"ravern"},"content":"        TaskList taskList \u003d state.getTaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"ravern"},"content":"        Task task \u003d taskList.deleteTask(deleteCommand.getTaskId());","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"ravern"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"ravern"},"content":"            throw new ArgumentException(\"Invalid task identifier.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"ravern"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"ravern"},"content":"        ui.showTaskRemoved(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"ravern"},"content":"        ui.showTaskCount(taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":136,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":137,"author":{"gitId":"ravern"},"content":"    private void handleFind(State state, Command command, Ui ui) {","lastModifiedDate":"2023-09-18"},{"lineNumber":138,"author":{"gitId":"ravern"},"content":"        FindCommand findCommand \u003d (FindCommand) command;","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"ravern"},"content":"        TaskList taskList \u003d state.getTaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"ravern"},"content":"        List\u003cTask\u003e foundTasks \u003d taskList.findTasks(findCommand.getQuery().trim());","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"ravern"},"content":"        ui.showFoundTasks(foundTasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"ravern"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"ravern":143}},{"path":"src/main/java/ekud/state/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ravern"},"content":"package ekud.state;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"ravern"},"content":"import ekud.util.DateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"ravern"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ravern"},"content":" * Represents a task to be completed within a deadline.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"ravern"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"ravern"},"content":"public final class DeadlineTask extends Task {","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"ravern"},"content":"    private final DateTime by;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ravern"},"content":"     * Creates a new task with a deadline.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ravern"},"content":"     * @param title  The title of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ravern"},"content":"     * @param isDone Whether the task is already completed.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"ravern"},"content":"     * @param by     The deadline of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ravern"},"content":"    public DeadlineTask(String title, boolean isDone, DateTime by) {","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"ravern"},"content":"        super(title, isDone);","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"ravern"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ravern"},"content":"     * Returns the deadline of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"ravern"},"content":"     * @return The deadline.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"ravern"},"content":"    public DateTime getBy() {","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"ravern"},"content":"        return by;","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"ravern"},"content":"     * Returns the string representation of this task, to be displayed to the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"ravern"},"content":"     * @return The string representation.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"ravern"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"ravern"},"content":"    public String toString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"ravern"},"content":"        return \"[D] \" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"ravern"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"ravern"},"content":"    public int hashCode() {","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"ravern"},"content":"        return super.hashCode() + by.hashCode();","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"ravern"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"ravern"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"ravern"},"content":"        if (!super.equals(other)) {","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"ravern"},"content":"            return false;","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"ravern"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"ravern"},"content":"        if (!(other instanceof DeadlineTask)) {","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"ravern"},"content":"            return false;","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"ravern"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"ravern"},"content":"        DeadlineTask otherTask \u003d (DeadlineTask) other;","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"ravern"},"content":"        return by.equals(otherTask.by);","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"ravern"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"ravern":58}},{"path":"src/main/java/ekud/state/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ravern"},"content":"package ekud.state;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"ravern"},"content":"import ekud.util.DateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"ravern"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ravern"},"content":" * Represents a task that starts and ends at a certain date/time.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"ravern"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"ravern"},"content":"public final class EventTask extends Task {","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"ravern"},"content":"    private final DateTime from;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"ravern"},"content":"    private final DateTime to;","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ravern"},"content":"     * Creates a new task that starts and ends at a certain date/time.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ravern"},"content":"     * @param title  The title of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"ravern"},"content":"     * @param isDone Whether the task is completed.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ravern"},"content":"     * @param from   The start date/time.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ravern"},"content":"     * @param to     The end date/time.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ravern"},"content":"    public EventTask(String title, boolean isDone, DateTime from, DateTime to) {","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"ravern"},"content":"        super(title, isDone);","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"ravern"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"ravern"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"ravern"},"content":"     * Returns when this task starts.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"ravern"},"content":"     * @return The start date/time.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"ravern"},"content":"    public DateTime getFrom() {","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"ravern"},"content":"        return from;","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"ravern"},"content":"     * Returns when this task ends.","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"ravern"},"content":"     * @return The end date/time.","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"ravern"},"content":"    public DateTime getTo() {","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"ravern"},"content":"        return to;","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"ravern"},"content":"     * Returns the string representation of this task, to be displayed to the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"ravern"},"content":"     * @return The string representation.","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"ravern"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"ravern"},"content":"    public String toString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"ravern"},"content":"        return \"[E] \" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"ravern"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"ravern"},"content":"    public int hashCode() {","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"ravern"},"content":"        return super.hashCode() + from.hashCode() + to.hashCode();","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"ravern"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"ravern"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"ravern"},"content":"        if (!super.equals(other)) {","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"ravern"},"content":"            return false;","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"ravern"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"ravern"},"content":"        if (!(other instanceof EventTask)) {","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"ravern"},"content":"            return false;","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"ravern"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"ravern"},"content":"        EventTask otherTask \u003d (EventTask) other;","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"ravern"},"content":"        return from.equals(otherTask.from) \u0026\u0026 to.equals(otherTask.to);","lastModifiedDate":"2023-09-12"},{"lineNumber":69,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":70,"author":{"gitId":"ravern"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"ravern":70}},{"path":"src/main/java/ekud/state/State.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ravern"},"content":"package ekud.state;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ravern"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"ravern"},"content":" * Represents all the state contained in the ekud program.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"ravern"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ravern"},"content":"public final class State {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"ravern"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ravern"},"content":"     * Creates an empty state.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ravern"},"content":"    public State() {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"ravern"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ravern"},"content":"     * Returns the current list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ravern"},"content":"     * @return The task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"ravern"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"ravern"},"content":"        return taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"ravern"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"ravern":24}},{"path":"src/main/java/ekud/state/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ravern"},"content":"package ekud.state;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"ravern"},"content":"import ekud.util.DateTime;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"ravern"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ravern"},"content":" * Represents a task to be completed.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"ravern"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"ravern"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"ravern"},"content":"    private final String title;","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"ravern"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"ravern"},"content":"     * Creates a new task with the given title and completion status.","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"ravern"},"content":"     * @param title  The title of the task.","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"ravern"},"content":"     * @param isDone Whether the task is completed.","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"ravern"},"content":"    protected Task(String title, boolean isDone) {","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"ravern"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"ravern"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ravern"},"content":"     * Returns the title of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"ravern"},"content":"     * @return The title.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"ravern"},"content":"    public String getTitle() {","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"ravern"},"content":"        return title;","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"ravern"},"content":"     * Returns whether the task has been completed.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"ravern"},"content":"     * @return Whether the task is complete.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"ravern"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"ravern"},"content":"        return isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"ravern"},"content":"     * Marks the task as completed.","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"ravern"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"ravern"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"ravern"},"content":"     * Marks the task as not completed.","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"ravern"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"ravern"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"ravern"},"content":"     * Returns the string representation of this task, to be displayed to the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"ravern"},"content":"     * @return The string representation.","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"ravern"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"ravern"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":62,"author":{"gitId":"ravern"},"content":"        String mark \u003d isDone ? \"X\" : \" \";","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"ravern"},"content":"        return \"[\" + mark + \"] \" + title;","lastModifiedDate":"2023-08-22"},{"lineNumber":64,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":65,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"ravern"},"content":"     * Returns the hash code of this task to be used in a set.","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"ravern"},"content":"     * The hash code ignores whether the task is done, because when looking for","lastModifiedDate":"2023-09-12"},{"lineNumber":69,"author":{"gitId":"ravern"},"content":"     * duplicate tasks we don\u0027t care if either task has been done or not done.","lastModifiedDate":"2023-09-12"},{"lineNumber":70,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-09-12"},{"lineNumber":71,"author":{"gitId":"ravern"},"content":"     * @return The hash code.","lastModifiedDate":"2023-09-12"},{"lineNumber":72,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"ravern"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":74,"author":{"gitId":"ravern"},"content":"    public int hashCode() {","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"ravern"},"content":"        return title.hashCode();","lastModifiedDate":"2023-09-12"},{"lineNumber":76,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":77,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":78,"author":{"gitId":"ravern"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"ravern"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-09-12"},{"lineNumber":80,"author":{"gitId":"ravern"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-09-12"},{"lineNumber":81,"author":{"gitId":"ravern"},"content":"            return true;","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"ravern"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":83,"author":{"gitId":"ravern"},"content":"        if (other \u003d\u003d null) {","lastModifiedDate":"2023-09-12"},{"lineNumber":84,"author":{"gitId":"ravern"},"content":"            return false;","lastModifiedDate":"2023-09-12"},{"lineNumber":85,"author":{"gitId":"ravern"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":86,"author":{"gitId":"ravern"},"content":"        if (!(other instanceof Task)) {","lastModifiedDate":"2023-09-12"},{"lineNumber":87,"author":{"gitId":"ravern"},"content":"            return false;","lastModifiedDate":"2023-09-12"},{"lineNumber":88,"author":{"gitId":"ravern"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":89,"author":{"gitId":"ravern"},"content":"        return title.equals(((Task) other).title);","lastModifiedDate":"2023-09-12"},{"lineNumber":90,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":91,"author":{"gitId":"ravern"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"ravern":91}},{"path":"src/main/java/ekud/state/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ravern"},"content":"package ekud.state;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ravern"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"ravern"},"content":"import java.util.List;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"ravern"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"ravern"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"ravern"},"content":" * Represents a list of tasks and implements the actions that can be performed","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"ravern"},"content":" * on the list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ravern"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ravern"},"content":"public final class TaskList {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"ravern"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ravern"},"content":"     * Creates an empty list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ravern"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"ravern"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"ravern"},"content":"     * Returns whether the list is currently not empty.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ravern"},"content":"     * @return Whether the list is not empty.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"ravern"},"content":"    public boolean hasTasks() {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"ravern"},"content":"        return !tasks.isEmpty();","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"ravern"},"content":"     * Returns the task list as a {@link java.util.List}.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"ravern"},"content":"     * @return The task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"ravern"},"content":"    public List\u003cTask\u003e asList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"ravern"},"content":"        return tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"ravern"},"content":"     * Returns the task with the given identifier, or null if it doesn\u0027t exist.","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"ravern"},"content":"     * @param taskId The task identifier.","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"ravern"},"content":"     * @return The identified task, or null if it doesn\u0027t exist.","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"ravern"},"content":"    public Task getTask(int taskId) {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"ravern"},"content":"        if (taskId \u003c 1 || taskId \u003e tasks.size()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"ravern"},"content":"            return null;","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"ravern"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"ravern"},"content":"        return tasks.get(taskId - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"ravern"},"content":"     * Adds a new task to the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"ravern"},"content":"     * @param task The task to add.","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"ravern"},"content":"     * @return The task that was added.","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"ravern"},"content":"    public Task addTask(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"ravern"},"content":"        tasks.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"ravern"},"content":"        return task;","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"ravern"},"content":"     * Deletes a task from the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"ravern"},"content":"     * @param taskId The identifier of the task to delete.","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"ravern"},"content":"     * @return The task that was deleted, or null if it doesn\u0027t exist.","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"ravern"},"content":"    public Task deleteTask(int taskId) {","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"ravern"},"content":"        Task task \u003d getTask(taskId);","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"ravern"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"ravern"},"content":"            return null;","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"ravern"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"ravern"},"content":"        return tasks.remove(taskId - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"ravern"},"content":"     * Finds tasks that match the given query within the task list, returning them","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"ravern"},"content":"     * as a list.","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"ravern"},"content":"     * Simply checks if the query is contained within the title of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"ravern"},"content":"     * @param query The search query.","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"ravern"},"content":"     * @return The list of tasks that match the query.","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"ravern"},"content":"    public List\u003cTask\u003e findTasks(String query) {","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"ravern"},"content":"        return asList()","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"ravern"},"content":"                .stream()","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"ravern"},"content":"                .filter(task -\u003e task.getTitle().contains(query))","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"ravern"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"ravern"},"content":"    public void deduplicate() {","lastModifiedDate":"2023-09-12"},{"lineNumber":93,"author":{"gitId":"ravern"},"content":"        tasks \u003d new ArrayList\u003c\u003e(asList().stream().distinct().collect(Collectors.toList()));","lastModifiedDate":"2023-09-12"},{"lineNumber":94,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":95,"author":{"gitId":"ravern"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"ravern":95}},{"path":"src/main/java/ekud/state/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ravern"},"content":"package ekud.state;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"ravern"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"ravern"},"content":" * Represents a simple task to be completed.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"ravern"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ravern"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"ravern"},"content":"     * Creates a new simple task.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ravern"},"content":"     * @param title  The title of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ravern"},"content":"     * @param isDone Whether the task has been completed.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ravern"},"content":"    public TodoTask(String title, boolean isDone) {","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"ravern"},"content":"        super(title, isDone);","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ravern"},"content":"     * Returns the string representation of this task, to be displayed to the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ravern"},"content":"     * @return The string representation.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"ravern"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"ravern"},"content":"    public String toString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"ravern"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"ravern"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"ravern"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"ravern"},"content":"        if (!(other instanceof TodoTask)) {","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"ravern"},"content":"            return false;","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"ravern"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"ravern"},"content":"        return super.equals(other);","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"ravern"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"ravern":34}},{"path":"src/main/java/ekud/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ravern"},"content":"package ekud.storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ravern"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"ravern"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"ravern"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"ravern"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"ravern"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"ravern"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"ravern"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"ravern"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"ravern"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"ravern"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"ravern"},"content":"import ekud.command.ByeCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"ravern"},"content":"import ekud.command.Command;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"ravern"},"content":"import ekud.command.ListCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"ravern"},"content":"import ekud.error.StorageException;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"ravern"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ravern"},"content":" * Facilitates interacting with the file that persists program data.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"ravern"},"content":" * Ekud saves program data by writing the commands run by the user directly to","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"ravern"},"content":" * the file, similar to logging the commands. These commands are then replayed","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"ravern"},"content":" * when the Ekud program starts up. Eventually, a flattening algorithm will be","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ravern"},"content":" * developed to save the extra space that unnecessary commands take up.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"ravern"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"ravern"},"content":"public final class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"ravern"},"content":"    private final File dataFile;","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"ravern"},"content":"    private final PrintStream out;","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"ravern"},"content":"     * Creates the save file if it doesn\u0027t exist.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"ravern"},"content":"    public Storage() {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"ravern"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"ravern"},"content":"            File dataDir \u003d Paths.get(\"data\").toFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"ravern"},"content":"            dataDir.mkdir();","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"ravern"},"content":"            dataFile \u003d Paths.get(\"data\", \"ekud.txt\").toFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"ravern"},"content":"            dataFile.createNewFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"ravern"},"content":"            out \u003d new PrintStream(new FileOutputStream(dataFile, true));","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"ravern"},"content":"        } catch (IOException error) {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"ravern"},"content":"            throw new StorageException(\"Failed to create save file.\", error);","lastModifiedDate":"2023-09-22"},{"lineNumber":42,"author":{"gitId":"ravern"},"content":"        } catch (SecurityException error) {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"ravern"},"content":"            throw new StorageException(\"Failed to create save file.\", error);","lastModifiedDate":"2023-09-22"},{"lineNumber":44,"author":{"gitId":"ravern"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"ravern"},"content":"     * Creates an input stream from the save file to read data.","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"ravern"},"content":"     * @return The create input stream.","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"ravern"},"content":"    public InputStream createInputStream() {","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"ravern"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"ravern"},"content":"            return new FileInputStream(dataFile);","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"ravern"},"content":"        } catch (FileNotFoundException error) {","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"ravern"},"content":"            throw new StorageException(\"Failed to read save file.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"ravern"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"ravern"},"content":"     * Writes a new command to the save file.","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"ravern"},"content":"     * @param command The command to write to the save file.","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"ravern"},"content":"    public void write(Command command) {","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"ravern"},"content":"        if (command instanceof ByeCommand || command instanceof ListCommand) {","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"ravern"},"content":"            return;","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"ravern"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"ravern"},"content":"        out.println(command);","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"ravern"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"ravern":71}},{"path":"src/main/java/ekud/ui/CommandHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ravern"},"content":"package ekud.ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"ravern"},"content":"import ekud.command.Command;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"ravern"},"content":"@FunctionalInterface","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"ravern"},"content":"public interface CommandHandler {","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"ravern"},"content":"    public boolean handle(Command command);","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"ravern"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"ravern":8}},{"path":"src/main/java/ekud/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ravern"},"content":"package ekud.ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ravern"},"content":"import java.util.List;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"ravern"},"content":"import ekud.command.Command;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"ravern"},"content":"import ekud.error.EkudException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"ravern"},"content":"import ekud.state.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"ravern"},"content":"import ekud.state.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"ravern"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ravern"},"content":" * Represents any user interface to ekud.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ravern"},"content":" * This could be in the form of a command-line interface or a graphical user","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ravern"},"content":" * interface.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ravern"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ravern"},"content":"public abstract class Ui {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"ravern"},"content":"    private CommandHandler handler;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"ravern"},"content":"    public void setOnCommand(CommandHandler handler) {","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"ravern"},"content":"        this.handler \u003d handler;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"ravern"},"content":"    protected boolean handle(Command command) {","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"ravern"},"content":"        if (handler \u003d\u003d null) {","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"ravern"},"content":"            return true;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"ravern"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"ravern"},"content":"        return handler.handle(command);","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"ravern"},"content":"    public abstract void run();","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"ravern"},"content":"     * Displays the given task list to the user.","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ravern"},"content":"     * @param taskList The task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"ravern"},"content":"    public abstract void showTaskList(TaskList taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"ravern"},"content":"     * Displays the number of tasks in the given task list to the user.","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"ravern"},"content":"     * @param taskList The task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"ravern"},"content":"    public abstract void showTaskCount(TaskList taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"ravern"},"content":"     * Displays the results of adding the given task to the user.","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"ravern"},"content":"     * @param task The added task.","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"ravern"},"content":"    public abstract void showTaskAdded(Task task);","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"ravern"},"content":"     * Displays the results of removing the given task to the user.","lastModifiedDate":"2023-09-18"},{"lineNumber":54,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"ravern"},"content":"     * @param task The deleted task.","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"ravern"},"content":"    public abstract void showTaskRemoved(Task task);","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"ravern"},"content":"     * Displays the results of marking the given task to the user.","lastModifiedDate":"2023-09-18"},{"lineNumber":61,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"ravern"},"content":"     * @param task The marked task.","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"ravern"},"content":"    public abstract void showTaskMarked(Task task);","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"ravern"},"content":"     * Displays the results of unmarking the given task to the user.","lastModifiedDate":"2023-09-18"},{"lineNumber":68,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"ravern"},"content":"     * @param task The unmarked task.","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"ravern"},"content":"    public abstract void showTaskUnmarked(Task task);","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"ravern"},"content":"     * Displays a list of tasks that matched the find query.","lastModifiedDate":"2023-09-18"},{"lineNumber":75,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"ravern"},"content":"     * @param foundTasks The tasks that matched the find query.","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"ravern"},"content":"    public abstract void showFoundTasks(List\u003cTask\u003e foundTasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":81,"author":{"gitId":"ravern"},"content":"     * Informsf the user that their task list has been cleaned.","lastModifiedDate":"2023-09-18"},{"lineNumber":82,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":83,"author":{"gitId":"ravern"},"content":"    public abstract void showTasksCleaned();","lastModifiedDate":"2023-09-12"},{"lineNumber":84,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":85,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"ravern"},"content":"     * Displays an error that occured to the user.","lastModifiedDate":"2023-09-18"},{"lineNumber":87,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"ravern"},"content":"     * @param error The error that occured.","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"ravern"},"content":"    public abstract void showError(EkudException error);","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"ravern"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"ravern":91}},{"path":"src/main/java/ekud/ui/cli/Cli.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ravern"},"content":"package ekud.ui.cli;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ravern"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"ravern"},"content":"import java.io.OutputStream;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"ravern"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"ravern"},"content":"import java.util.List;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"ravern"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"ravern"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"ravern"},"content":"import ekud.command.Command;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"ravern"},"content":"import ekud.command.Parser;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"ravern"},"content":"import ekud.error.EkudException;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"ravern"},"content":"import ekud.state.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"ravern"},"content":"import ekud.state.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"ravern"},"content":"import ekud.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"ravern"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ravern"},"content":" * Represents a command-line user interface to the ekud program.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ravern"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ravern"},"content":"public final class Cli extends Ui {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"ravern"},"content":"    private final Scanner in;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"ravern"},"content":"    private final PrintStream out;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"ravern"},"content":"    private final PrintStream err;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"ravern"},"content":"     * Creates a new command-line user interface with the given input, output and","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"ravern"},"content":"     * error streams.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"ravern"},"content":"     * @param in  The input stream to read user commands from.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"ravern"},"content":"     * @param out The output stream to print successful results.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"ravern"},"content":"     * @param err The error stream to print any error messages.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"ravern"},"content":"    public Cli(InputStream in, OutputStream out, OutputStream err) {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"ravern"},"content":"        this.in \u003d new Scanner(in);","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"ravern"},"content":"        this.out \u003d new PrintStream(out);","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"ravern"},"content":"        this.err \u003d new PrintStream(err);","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"ravern"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"ravern"},"content":"    public void run() {","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"ravern"},"content":"        out.println(\"Hello! I\u0027m Ekud!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"ravern"},"content":"        out.println(\"What can I do for you?\");","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"ravern"},"content":"        while (true) {","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"ravern"},"content":"            out.print(\"\u003e \");","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"ravern"},"content":"            String line;","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"ravern"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"ravern"},"content":"                line \u003d in.nextLine().trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"ravern"},"content":"            } catch (NoSuchElementException error) {","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"ravern"},"content":"                out.println();","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"ravern"},"content":"                break;","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"ravern"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"ravern"},"content":"            if (line.isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"ravern"},"content":"                continue;","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"ravern"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"ravern"},"content":"            try {","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"ravern"},"content":"                Command command \u003d Parser.parseCommand(line);","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"ravern"},"content":"                if (!handle(command)) {","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"ravern"},"content":"                    break;","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"ravern"},"content":"                }","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"ravern"},"content":"            } catch (EkudException error) {","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"ravern"},"content":"                showError(error);","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"ravern"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"ravern"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"ravern"},"content":"        out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"ravern"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"ravern"},"content":"    public void showTaskList(TaskList taskList) {","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"ravern"},"content":"        if (!taskList.hasTasks()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"ravern"},"content":"            out.println(\"No tasks yet. Add one!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"ravern"},"content":"            return;","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"ravern"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"ravern"},"content":"        out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"ravern"},"content":"        List\u003cTask\u003e tasks \u003d taskList.asList();","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"ravern"},"content":"        for (int taskId \u003d 1; taskId \u003c\u003d tasks.size(); taskId++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"ravern"},"content":"            // Add padding to align single-digit numbers if we\u0027ll render two-digit numbers","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"ravern"},"content":"            // later on.","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"ravern"},"content":"            if (tasks.size() \u003e 9 \u0026\u0026 taskId \u003c 10) {","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"ravern"},"content":"                out.print(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"ravern"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"ravern"},"content":"            out.print(taskId);","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"ravern"},"content":"            Task task \u003d taskList.getTask(taskId);","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"ravern"},"content":"            out.println(\". \" + task.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"ravern"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"ravern"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"ravern"},"content":"    public void showTaskCount(TaskList taskList) {","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"ravern"},"content":"        out.println(\"Now you have \" + taskList.asList().size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"ravern"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":99,"author":{"gitId":"ravern"},"content":"    public void showTaskAdded(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"ravern"},"content":"        out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"ravern"},"content":"        out.println(\"   \" + task);","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"ravern"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":105,"author":{"gitId":"ravern"},"content":"    public void showTaskMarked(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"ravern"},"content":"        out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"ravern"},"content":"        out.println(\"   \" + task);","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"ravern"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":111,"author":{"gitId":"ravern"},"content":"    public void showTaskUnmarked(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"ravern"},"content":"        out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"ravern"},"content":"        out.println(\"   \" + task);","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"ravern"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":117,"author":{"gitId":"ravern"},"content":"    public void showTaskRemoved(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"ravern"},"content":"        out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"ravern"},"content":"        out.println(\"   \" + task);","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"ravern"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":123,"author":{"gitId":"ravern"},"content":"    public void showFoundTasks(List\u003cTask\u003e foundTasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"ravern"},"content":"        if (foundTasks.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"ravern"},"content":"            out.println(\"No tasks found.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"ravern"},"content":"            return;","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"ravern"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"ravern"},"content":"        out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"ravern"},"content":"        for (int taskId \u003d 1; taskId \u003c\u003d foundTasks.size(); taskId++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"ravern"},"content":"            // Add padding to align single-digit numbers if we\u0027ll render two-digit numbers","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"ravern"},"content":"            // later on.","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"ravern"},"content":"            if (foundTasks.size() \u003e 9 \u0026\u0026 taskId \u003c 10) {","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"ravern"},"content":"                out.print(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"ravern"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"ravern"},"content":"            out.print(taskId);","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"ravern"},"content":"            Task task \u003d foundTasks.get(taskId - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"ravern"},"content":"            out.println(\". \" + task.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"ravern"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"ravern"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":143,"author":{"gitId":"ravern"},"content":"    public void showTasksCleaned() {","lastModifiedDate":"2023-09-12"},{"lineNumber":144,"author":{"gitId":"ravern"},"content":"        out.println(\"Your tasks have been cleaned of any duplicates.\");","lastModifiedDate":"2023-09-12"},{"lineNumber":145,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":146,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":147,"author":{"gitId":"ravern"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":148,"author":{"gitId":"ravern"},"content":"    public void showError(EkudException error) {","lastModifiedDate":"2023-08-30"},{"lineNumber":149,"author":{"gitId":"ravern"},"content":"        err.println(\"â˜¹ OOPS!!! \" + error.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":151,"author":{"gitId":"ravern"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"ravern":151}},{"path":"src/main/java/ekud/ui/gui/Gui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ravern"},"content":"package ekud.ui.gui;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"ravern"},"content":"import java.util.List;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"ravern"},"content":"import ekud.command.ByeCommand;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"ravern"},"content":"import ekud.command.Command;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"ravern"},"content":"import ekud.command.Parser;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"ravern"},"content":"import ekud.error.EkudException;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"ravern"},"content":"import ekud.state.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"ravern"},"content":"import ekud.state.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"ravern"},"content":"import ekud.ui.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"ravern"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"ravern"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"ravern"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"ravern"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"ravern"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"ravern"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"ravern"},"content":"import javafx.scene.control.ScrollPane.ScrollBarPolicy;","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"ravern"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"ravern"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"ravern"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"ravern"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"ravern"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"ravern"},"content":"import javafx.scene.layout.Priority;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"ravern"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"ravern"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"ravern"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"ravern"},"content":"public class Gui extends Ui {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"ravern"},"content":"    private static Image BOT_IMAGE \u003d new Image(Gui.class.getResourceAsStream(\"/images/bot.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"ravern"},"content":"    private static Image USER_IMAGE \u003d new Image(Gui.class.getResourceAsStream(\"/images/human.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"ravern"},"content":"    private Stage stage;","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"ravern"},"content":"    private Scene scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"ravern"},"content":"    private VBox mainContainer;","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"ravern"},"content":"    private ScrollPane historyScrollContainer;","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"ravern"},"content":"    private VBox historyContainer;","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"ravern"},"content":"    private HBox inputContainer;","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"ravern"},"content":"    private TextField inputTextField;","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"ravern"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"ravern"},"content":"    public Gui(Stage stage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"ravern"},"content":"        this.stage \u003d stage;","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"ravern"},"content":"    public void run() {","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"ravern"},"content":"        buildHistoryContainer();","lastModifiedDate":"2023-09-18"},{"lineNumber":51,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"ravern"},"content":"        inputTextField \u003d new TextField();","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"ravern"},"content":"        inputTextField.setOnKeyPressed((event) -\u003e {","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"ravern"},"content":"            if (event.getCode() \u003d\u003d KeyCode.ENTER) {","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"ravern"},"content":"                onSendMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"ravern"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"ravern"},"content":"        });","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"ravern"},"content":"        HBox.setHgrow(inputTextField, Priority.ALWAYS);","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"ravern"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"ravern"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"ravern"},"content":"            onSendMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"ravern"},"content":"        });","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"ravern"},"content":"        inputContainer \u003d new HBox(inputTextField, sendButton);","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"ravern"},"content":"        mainContainer \u003d new VBox(historyScrollContainer, inputContainer);","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"ravern"},"content":"        mainContainer.setFillWidth(true);","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"ravern"},"content":"        scene \u003d new Scene(mainContainer);","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"ravern"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"ravern"},"content":"        stage.setTitle(\"Ekud\");","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"ravern"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"ravern"},"content":"        stage.setMinWidth(400);","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"ravern"},"content":"        stage.setMinHeight(600);","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"ravern"},"content":"        stage.show();","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"ravern"},"content":"    private void buildHistoryContainer() {","lastModifiedDate":"2023-09-18"},{"lineNumber":81,"author":{"gitId":"ravern"},"content":"        historyContainer \u003d new VBox();","lastModifiedDate":"2023-09-18"},{"lineNumber":82,"author":{"gitId":"ravern"},"content":"        historyContainer.setFillWidth(true);","lastModifiedDate":"2023-09-18"},{"lineNumber":83,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":84,"author":{"gitId":"ravern"},"content":"        historyScrollContainer \u003d new ScrollPane();","lastModifiedDate":"2023-09-18"},{"lineNumber":85,"author":{"gitId":"ravern"},"content":"        historyScrollContainer.setContent(historyContainer);","lastModifiedDate":"2023-09-18"},{"lineNumber":86,"author":{"gitId":"ravern"},"content":"        historyScrollContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-09-18"},{"lineNumber":87,"author":{"gitId":"ravern"},"content":"        historyScrollContainer.setVbarPolicy(ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-09-18"},{"lineNumber":88,"author":{"gitId":"ravern"},"content":"        historyScrollContainer.setHbarPolicy(ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-09-18"},{"lineNumber":89,"author":{"gitId":"ravern"},"content":"        historyScrollContainer.setFitToWidth(true);","lastModifiedDate":"2023-09-18"},{"lineNumber":90,"author":{"gitId":"ravern"},"content":"        historyScrollContainer.vvalueProperty().bind(historyContainer.heightProperty());","lastModifiedDate":"2023-09-18"},{"lineNumber":91,"author":{"gitId":"ravern"},"content":"        VBox.setVgrow(historyScrollContainer, Priority.ALWAYS);","lastModifiedDate":"2023-09-18"},{"lineNumber":92,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":93,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":94,"author":{"gitId":"ravern"},"content":"    private void onSendMessage() {","lastModifiedDate":"2023-09-07"},{"lineNumber":95,"author":{"gitId":"ravern"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":96,"author":{"gitId":"ravern"},"content":"            String line \u003d inputTextField.getText().trim();","lastModifiedDate":"2023-09-07"},{"lineNumber":97,"author":{"gitId":"ravern"},"content":"            if (line.isEmpty()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":98,"author":{"gitId":"ravern"},"content":"                return;","lastModifiedDate":"2023-09-07"},{"lineNumber":99,"author":{"gitId":"ravern"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":100,"author":{"gitId":"ravern"},"content":"            addUserMessage(line);","lastModifiedDate":"2023-09-07"},{"lineNumber":101,"author":{"gitId":"ravern"},"content":"            Command command \u003d Parser.parseCommand(line);","lastModifiedDate":"2023-09-07"},{"lineNumber":102,"author":{"gitId":"ravern"},"content":"            if (command instanceof ByeCommand) {","lastModifiedDate":"2023-09-07"},{"lineNumber":103,"author":{"gitId":"ravern"},"content":"                System.exit(0);","lastModifiedDate":"2023-09-07"},{"lineNumber":104,"author":{"gitId":"ravern"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":105,"author":{"gitId":"ravern"},"content":"            handle(command);","lastModifiedDate":"2023-09-07"},{"lineNumber":106,"author":{"gitId":"ravern"},"content":"        } catch (EkudException error) {","lastModifiedDate":"2023-09-07"},{"lineNumber":107,"author":{"gitId":"ravern"},"content":"            showError(error);","lastModifiedDate":"2023-09-07"},{"lineNumber":108,"author":{"gitId":"ravern"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":109,"author":{"gitId":"ravern"},"content":"        inputTextField.setText(\"\");","lastModifiedDate":"2023-09-07"},{"lineNumber":110,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":111,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":112,"author":{"gitId":"ravern"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":113,"author":{"gitId":"ravern"},"content":"    public void showTaskList(TaskList taskList) {","lastModifiedDate":"2023-09-07"},{"lineNumber":114,"author":{"gitId":"ravern"},"content":"        if (!taskList.hasTasks()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":115,"author":{"gitId":"ravern"},"content":"            addBotMessage(\"No tasks yet. Add one!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":116,"author":{"gitId":"ravern"},"content":"            return;","lastModifiedDate":"2023-09-07"},{"lineNumber":117,"author":{"gitId":"ravern"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":118,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":119,"author":{"gitId":"ravern"},"content":"        String message \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":120,"author":{"gitId":"ravern"},"content":"        List\u003cTask\u003e tasks \u003d taskList.asList();","lastModifiedDate":"2023-09-07"},{"lineNumber":121,"author":{"gitId":"ravern"},"content":"        for (int taskId \u003d 1; taskId \u003c\u003d tasks.size(); taskId++) {","lastModifiedDate":"2023-09-07"},{"lineNumber":122,"author":{"gitId":"ravern"},"content":"            // Add padding to align single-digit numbers if we\u0027ll render two-digit numbers","lastModifiedDate":"2023-09-07"},{"lineNumber":123,"author":{"gitId":"ravern"},"content":"            // later on.","lastModifiedDate":"2023-09-07"},{"lineNumber":124,"author":{"gitId":"ravern"},"content":"            if (tasks.size() \u003e 9 \u0026\u0026 taskId \u003c 10) {","lastModifiedDate":"2023-09-07"},{"lineNumber":125,"author":{"gitId":"ravern"},"content":"                message +\u003d \" \";","lastModifiedDate":"2023-09-07"},{"lineNumber":126,"author":{"gitId":"ravern"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":127,"author":{"gitId":"ravern"},"content":"            message +\u003d taskId;","lastModifiedDate":"2023-09-07"},{"lineNumber":128,"author":{"gitId":"ravern"},"content":"            Task task \u003d taskList.getTask(taskId);","lastModifiedDate":"2023-09-07"},{"lineNumber":129,"author":{"gitId":"ravern"},"content":"            message +\u003d \". \" + task.toString() + \"\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":130,"author":{"gitId":"ravern"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":131,"author":{"gitId":"ravern"},"content":"        addBotMessage(message);","lastModifiedDate":"2023-09-07"},{"lineNumber":132,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":133,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":134,"author":{"gitId":"ravern"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":135,"author":{"gitId":"ravern"},"content":"    public void showTaskCount(TaskList taskList) {","lastModifiedDate":"2023-09-07"},{"lineNumber":136,"author":{"gitId":"ravern"},"content":"        addBotMessage(\"Now you have \" + taskList.asList().size() + \" tasks in the list.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":137,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":138,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":139,"author":{"gitId":"ravern"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":140,"author":{"gitId":"ravern"},"content":"    public void showTaskAdded(Task task) {","lastModifiedDate":"2023-09-07"},{"lineNumber":141,"author":{"gitId":"ravern"},"content":"        addBotMessage(\"Got it. I\u0027ve added this task:\\n   \" + task);","lastModifiedDate":"2023-09-07"},{"lineNumber":142,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":143,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":144,"author":{"gitId":"ravern"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":145,"author":{"gitId":"ravern"},"content":"    public void showTaskMarked(Task task) {","lastModifiedDate":"2023-09-07"},{"lineNumber":146,"author":{"gitId":"ravern"},"content":"        addBotMessage(\"Nice! I\u0027ve marked this task as done:\\n   \" + task);","lastModifiedDate":"2023-09-07"},{"lineNumber":147,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":148,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":149,"author":{"gitId":"ravern"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":150,"author":{"gitId":"ravern"},"content":"    public void showTaskUnmarked(Task task) {","lastModifiedDate":"2023-09-07"},{"lineNumber":151,"author":{"gitId":"ravern"},"content":"        addBotMessage(\"OK, I\u0027ve marked this task as not done yet:\\n   \" + task);","lastModifiedDate":"2023-09-07"},{"lineNumber":152,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":153,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":154,"author":{"gitId":"ravern"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":155,"author":{"gitId":"ravern"},"content":"    public void showTaskRemoved(Task task) {","lastModifiedDate":"2023-09-07"},{"lineNumber":156,"author":{"gitId":"ravern"},"content":"        addBotMessage(\"Noted. I\u0027ve removed this task:\\n   \" + task);","lastModifiedDate":"2023-09-07"},{"lineNumber":157,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":158,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":159,"author":{"gitId":"ravern"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":160,"author":{"gitId":"ravern"},"content":"    public void showFoundTasks(List\u003cTask\u003e foundTasks) {","lastModifiedDate":"2023-09-07"},{"lineNumber":161,"author":{"gitId":"ravern"},"content":"        if (foundTasks.isEmpty()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":162,"author":{"gitId":"ravern"},"content":"            addBotMessage(\"No tasks found.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":163,"author":{"gitId":"ravern"},"content":"            return;","lastModifiedDate":"2023-09-07"},{"lineNumber":164,"author":{"gitId":"ravern"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":165,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":166,"author":{"gitId":"ravern"},"content":"        String message \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":167,"author":{"gitId":"ravern"},"content":"        for (int taskId \u003d 1; taskId \u003c\u003d foundTasks.size(); taskId++) {","lastModifiedDate":"2023-09-07"},{"lineNumber":168,"author":{"gitId":"ravern"},"content":"            // Add padding to align single-digit numbers if we\u0027ll render two-digit numbers","lastModifiedDate":"2023-09-07"},{"lineNumber":169,"author":{"gitId":"ravern"},"content":"            // later on.","lastModifiedDate":"2023-09-07"},{"lineNumber":170,"author":{"gitId":"ravern"},"content":"            if (foundTasks.size() \u003e 9 \u0026\u0026 taskId \u003c 10) {","lastModifiedDate":"2023-09-07"},{"lineNumber":171,"author":{"gitId":"ravern"},"content":"                message +\u003d \" \";","lastModifiedDate":"2023-09-07"},{"lineNumber":172,"author":{"gitId":"ravern"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":173,"author":{"gitId":"ravern"},"content":"            message +\u003d taskId;","lastModifiedDate":"2023-09-07"},{"lineNumber":174,"author":{"gitId":"ravern"},"content":"            Task task \u003d foundTasks.get(taskId - 1);","lastModifiedDate":"2023-09-07"},{"lineNumber":175,"author":{"gitId":"ravern"},"content":"            message +\u003d \". \" + task.toString() + \"\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":176,"author":{"gitId":"ravern"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":177,"author":{"gitId":"ravern"},"content":"        addBotMessage(message);","lastModifiedDate":"2023-09-07"},{"lineNumber":178,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":179,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":180,"author":{"gitId":"ravern"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":181,"author":{"gitId":"ravern"},"content":"    public void showTasksCleaned() {","lastModifiedDate":"2023-09-12"},{"lineNumber":182,"author":{"gitId":"ravern"},"content":"        addBotMessage(\"Your tasks have been cleaned of any duplicates.\");","lastModifiedDate":"2023-09-12"},{"lineNumber":183,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":184,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":185,"author":{"gitId":"ravern"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":186,"author":{"gitId":"ravern"},"content":"    public void showError(EkudException error) {","lastModifiedDate":"2023-09-07"},{"lineNumber":187,"author":{"gitId":"ravern"},"content":"        addBotMessage(\"â˜¹ OOPS!!! \" + error.getMessage());","lastModifiedDate":"2023-09-07"},{"lineNumber":188,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":189,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":190,"author":{"gitId":"ravern"},"content":"    private void addBotMessage(String message) {","lastModifiedDate":"2023-09-07"},{"lineNumber":191,"author":{"gitId":"ravern"},"content":"        addMessage(BOT_IMAGE, message);","lastModifiedDate":"2023-09-07"},{"lineNumber":192,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":193,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":194,"author":{"gitId":"ravern"},"content":"    private void addUserMessage(String message) {","lastModifiedDate":"2023-09-07"},{"lineNumber":195,"author":{"gitId":"ravern"},"content":"        addMessage(USER_IMAGE, message);","lastModifiedDate":"2023-09-07"},{"lineNumber":196,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":197,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":198,"author":{"gitId":"ravern"},"content":"    private void addMessage(Image profileImage, String message) {","lastModifiedDate":"2023-09-07"},{"lineNumber":199,"author":{"gitId":"ravern"},"content":"        ImageView userImageView \u003d new ImageView(profileImage);","lastModifiedDate":"2023-09-07"},{"lineNumber":200,"author":{"gitId":"ravern"},"content":"        userImageView.setFitWidth(30);","lastModifiedDate":"2023-09-07"},{"lineNumber":201,"author":{"gitId":"ravern"},"content":"        userImageView.setFitHeight(30);","lastModifiedDate":"2023-09-07"},{"lineNumber":202,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":203,"author":{"gitId":"ravern"},"content":"        Label messageLabel \u003d new Label(message);","lastModifiedDate":"2023-09-07"},{"lineNumber":204,"author":{"gitId":"ravern"},"content":"        messageLabel.setWrapText(true);","lastModifiedDate":"2023-09-07"},{"lineNumber":205,"author":{"gitId":"ravern"},"content":"        HBox.setHgrow(messageLabel, Priority.ALWAYS);","lastModifiedDate":"2023-09-07"},{"lineNumber":206,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":207,"author":{"gitId":"ravern"},"content":"        HBox container \u003d new HBox(userImageView, messageLabel);","lastModifiedDate":"2023-09-07"},{"lineNumber":208,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":209,"author":{"gitId":"ravern"},"content":"        historyContainer.getChildren().add(container);","lastModifiedDate":"2023-09-07"},{"lineNumber":210,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":211,"author":{"gitId":"ravern"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"ravern":211}},{"path":"src/main/java/ekud/util/DateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ravern"},"content":"package ekud.util;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"ravern"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"ravern"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"ravern"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"ravern"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"ravern"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"ravern"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ravern"},"content":" * Represents either a date, time or both.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ravern"},"content":" * Wraps the {@link java.time.LocalDate}, {@link java.time.LocalTime} and","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ravern"},"content":" * {@link java.time.LocalDateTime} classes available in the standard library and","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ravern"},"content":" * represents only one of them at a given time.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ravern"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ravern"},"content":"public final class DateTime {","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"ravern"},"content":"    private static DateTimeFormatter PARSE_DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"ravern"},"content":"    private static DateTimeFormatter PARSE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"ravern"},"content":"    private static DateTimeFormatter PARSE_DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"ravern"},"content":"    private static DateTimeFormatter DISPLAY_DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy\");","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"ravern"},"content":"    private static DateTimeFormatter DISPLAY_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"ravern"},"content":"    private static DateTimeFormatter DISPLAY_DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy HH:mm\");","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"ravern"},"content":"    private final LocalDate date;","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"ravern"},"content":"    private final LocalTime time;","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"ravern"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"ravern"},"content":"    private DateTime(LocalDate date) {","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"ravern"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"ravern"},"content":"        time \u003d null;","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"ravern"},"content":"        dateTime \u003d null;","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"ravern"},"content":"    private DateTime(LocalTime time) {","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"ravern"},"content":"        date \u003d null;","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"ravern"},"content":"        this.time \u003d time;","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"ravern"},"content":"        dateTime \u003d null;","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"ravern"},"content":"    private DateTime(LocalDateTime dateTime) {","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"ravern"},"content":"        date \u003d null;","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"ravern"},"content":"        time \u003d null;","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"ravern"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"ravern"},"content":"     * Parses the given string to return a date, time or both.","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"ravern"},"content":"     * @param data The raw string to parse as a date, time or both.","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"ravern"},"content":"    public static DateTime parse(String data) {","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"ravern"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"ravern"},"content":"            return new DateTime(LocalDate.parse(data, PARSE_DATE_FORMATTER));","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"ravern"},"content":"        } catch (DateTimeParseException dateError) {","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"ravern"},"content":"            try {","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"ravern"},"content":"                return new DateTime(LocalTime.parse(data, PARSE_TIME_FORMATTER));","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"ravern"},"content":"            } catch (DateTimeParseException timeError) {","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"ravern"},"content":"                return new DateTime(LocalDateTime.parse(data, PARSE_DATE_TIME_FORMATTER));","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"ravern"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"ravern"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"ravern"},"content":"     * Returns the time stored, or null if only a date is stored.","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"ravern"},"content":"     * @return The time.","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"ravern"},"content":"    public LocalTime getTime() {","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"ravern"},"content":"        if (time !\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"ravern"},"content":"            return time;","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"ravern"},"content":"        } else if (dateTime !\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"ravern"},"content":"            return dateTime.toLocalTime();","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"ravern"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"ravern"},"content":"            return null;","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"ravern"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"ravern"},"content":"     * Returns the date stored, or null if only a time is stored.","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"ravern"},"content":"     * @return The date.","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"ravern"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"ravern"},"content":"        if (date !\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"ravern"},"content":"            return date;","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"ravern"},"content":"        } else if (dateTime !\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"ravern"},"content":"            return dateTime.toLocalDate();","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"ravern"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"ravern"},"content":"            return null;","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"ravern"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"ravern"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"ravern"},"content":"     * Returns the date and time stored, the date stored combined with the current","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"ravern"},"content":"     * time, or the time stored combined with the current date.","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"ravern"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"ravern"},"content":"     * @return The date and time.","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"ravern"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"ravern"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"ravern"},"content":"        if (dateTime !\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"ravern"},"content":"            return dateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"ravern"},"content":"        } else if (date !\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"ravern"},"content":"            return date.atStartOfDay();","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"ravern"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"ravern"},"content":"            return time.atDate(LocalDate.now());","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"ravern"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"ravern"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":109,"author":{"gitId":"ravern"},"content":"    public String toString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":110,"author":{"gitId":"ravern"},"content":"        if (date !\u003d null) {","lastModifiedDate":"2023-08-28"},{"lineNumber":111,"author":{"gitId":"ravern"},"content":"            return DISPLAY_DATE_FORMATTER.format(date);","lastModifiedDate":"2023-08-28"},{"lineNumber":112,"author":{"gitId":"ravern"},"content":"        } else if (time !\u003d null) {","lastModifiedDate":"2023-08-28"},{"lineNumber":113,"author":{"gitId":"ravern"},"content":"            return DISPLAY_TIME_FORMATTER.format(time);","lastModifiedDate":"2023-08-28"},{"lineNumber":114,"author":{"gitId":"ravern"},"content":"        } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":115,"author":{"gitId":"ravern"},"content":"            return DISPLAY_DATE_TIME_FORMATTER.format(dateTime);","lastModifiedDate":"2023-08-28"},{"lineNumber":116,"author":{"gitId":"ravern"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":117,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":118,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":119,"author":{"gitId":"ravern"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":120,"author":{"gitId":"ravern"},"content":"    public int hashCode() {","lastModifiedDate":"2023-09-12"},{"lineNumber":121,"author":{"gitId":"ravern"},"content":"        if (date !\u003d null) {","lastModifiedDate":"2023-09-12"},{"lineNumber":122,"author":{"gitId":"ravern"},"content":"            return date.hashCode();","lastModifiedDate":"2023-09-12"},{"lineNumber":123,"author":{"gitId":"ravern"},"content":"        } else if (time !\u003d null) {","lastModifiedDate":"2023-09-12"},{"lineNumber":124,"author":{"gitId":"ravern"},"content":"            return time.hashCode();","lastModifiedDate":"2023-09-12"},{"lineNumber":125,"author":{"gitId":"ravern"},"content":"        } else {","lastModifiedDate":"2023-09-12"},{"lineNumber":126,"author":{"gitId":"ravern"},"content":"            return dateTime.hashCode();","lastModifiedDate":"2023-09-12"},{"lineNumber":127,"author":{"gitId":"ravern"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":128,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":129,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":130,"author":{"gitId":"ravern"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":131,"author":{"gitId":"ravern"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-09-12"},{"lineNumber":132,"author":{"gitId":"ravern"},"content":"        if (super.equals(other)) {","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"ravern"},"content":"            return true;","lastModifiedDate":"2023-09-12"},{"lineNumber":134,"author":{"gitId":"ravern"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":135,"author":{"gitId":"ravern"},"content":"        if (other \u003d\u003d null) {","lastModifiedDate":"2023-09-12"},{"lineNumber":136,"author":{"gitId":"ravern"},"content":"            return false;","lastModifiedDate":"2023-09-12"},{"lineNumber":137,"author":{"gitId":"ravern"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":138,"author":{"gitId":"ravern"},"content":"        if (!(other instanceof DateTime)) {","lastModifiedDate":"2023-09-12"},{"lineNumber":139,"author":{"gitId":"ravern"},"content":"            return false;","lastModifiedDate":"2023-09-12"},{"lineNumber":140,"author":{"gitId":"ravern"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":141,"author":{"gitId":"ravern"},"content":"        DateTime otherDateTime \u003d (DateTime) other;","lastModifiedDate":"2023-09-12"},{"lineNumber":142,"author":{"gitId":"ravern"},"content":"        if (date !\u003d null \u0026\u0026 otherDateTime.date !\u003d null) {","lastModifiedDate":"2023-09-12"},{"lineNumber":143,"author":{"gitId":"ravern"},"content":"            return date.equals(otherDateTime.date);","lastModifiedDate":"2023-09-12"},{"lineNumber":144,"author":{"gitId":"ravern"},"content":"        } else if (time !\u003d null \u0026\u0026 otherDateTime.time !\u003d null) {","lastModifiedDate":"2023-09-12"},{"lineNumber":145,"author":{"gitId":"ravern"},"content":"            return time.equals(otherDateTime.time);","lastModifiedDate":"2023-09-12"},{"lineNumber":146,"author":{"gitId":"ravern"},"content":"        } else if (dateTime !\u003d null \u0026\u0026 otherDateTime.dateTime !\u003d null) {","lastModifiedDate":"2023-09-12"},{"lineNumber":147,"author":{"gitId":"ravern"},"content":"            return dateTime.equals(otherDateTime.dateTime);","lastModifiedDate":"2023-09-12"},{"lineNumber":148,"author":{"gitId":"ravern"},"content":"        } else {","lastModifiedDate":"2023-09-12"},{"lineNumber":149,"author":{"gitId":"ravern"},"content":"            return false;","lastModifiedDate":"2023-09-12"},{"lineNumber":150,"author":{"gitId":"ravern"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":151,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":152,"author":{"gitId":"ravern"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"ravern":152}},{"path":"src/main/java/ekud/util/Pair.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ravern"},"content":"package ekud.util;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"ravern"},"content":"public final class Pair\u003cT, U\u003e {","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"ravern"},"content":"    private final T first;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"ravern"},"content":"    private final U second;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"ravern"},"content":"    public Pair(T first, U second) {","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"ravern"},"content":"        this.first \u003d first;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"ravern"},"content":"        this.second \u003d second;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"ravern"},"content":"    public T getFirst() {","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"ravern"},"content":"        return first;","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"ravern"},"content":"    public U getSecond() {","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"ravern"},"content":"        return second;","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"ravern"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"ravern":19}},{"path":"src/test/java/ekud/command/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ravern"},"content":"package ekud.command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ravern"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"ravern"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"ravern"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"ravern"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"ravern"},"content":"import ekud.error.ParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"ravern"},"content":"public final class ParserTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"ravern"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"ravern"},"content":"    public void parse_listCommand() {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"ravern"},"content":"        Command command \u003d Parser.parseCommand(\"list\");","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"ravern"},"content":"        assertEquals(command instanceof ListCommand, true);","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"ravern"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"ravern"},"content":"    public void parse_markCommand() {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"ravern"},"content":"        Command command \u003d Parser.parseCommand(\"mark 23\");","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"ravern"},"content":"        assertEquals(command instanceof MarkCommand, true);","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"ravern"},"content":"        MarkCommand markCommand \u003d (MarkCommand) command;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"ravern"},"content":"        assertEquals(markCommand.getTaskId(), 23);","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"ravern"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"ravern"},"content":"    public void parse_unmarkCommand() {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"ravern"},"content":"        Command command \u003d Parser.parseCommand(\"unmark 23\");","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"ravern"},"content":"        assertEquals(command instanceof UnmarkCommand, true);","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"ravern"},"content":"        UnmarkCommand markCommand \u003d (UnmarkCommand) command;","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"ravern"},"content":"        assertEquals(markCommand.getTaskId(), 23);","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"ravern"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"ravern"},"content":"    public void parse_deleteCommand() {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"ravern"},"content":"        Command command \u003d Parser.parseCommand(\"delete 23\");","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"ravern"},"content":"        assertEquals(command instanceof DeleteCommand, true);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"ravern"},"content":"        DeleteCommand markCommand \u003d (DeleteCommand) command;","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"ravern"},"content":"        assertEquals(markCommand.getTaskId(), 23);","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"ravern"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"ravern"},"content":"    public void parse_createTodoCommand() {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"ravern"},"content":"        Command command \u003d Parser.parseCommand(\"todo this is a test\");","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"ravern"},"content":"        assertEquals(command instanceof CreateTodoCommand, true);","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"ravern"},"content":"        CreateTodoCommand createTodoCommand \u003d (CreateTodoCommand) command;","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"ravern"},"content":"        assertEquals(createTodoCommand.getTitle(), \"this is a test\");","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"ravern"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"ravern"},"content":"    public void parse_createDeadlineCommand() {","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"ravern"},"content":"        Command command \u003d Parser.parseCommand(\"deadline this is a test /by 18:32\");","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"ravern"},"content":"        assertEquals(command instanceof CreateDeadlineCommand, true);","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"ravern"},"content":"        CreateDeadlineCommand createDeadlineCommand \u003d (CreateDeadlineCommand) command;","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"ravern"},"content":"        assertEquals(createDeadlineCommand.getTitle(), \"this is a test\");","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"ravern"},"content":"        assertEquals(createDeadlineCommand.getBy().getTime().format(DateTimeFormatter.ofPattern(\"HH:mm\")), \"18:32\");","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"ravern"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"ravern"},"content":"    public void parse_createEventCommand() {","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"ravern"},"content":"        Command command \u003d Parser.parseCommand(\"event this is a test /from 03-04-2023 /to 04-04-2023\");","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"ravern"},"content":"        assertEquals(command instanceof CreateEventCommand, true);","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"ravern"},"content":"        CreateEventCommand createEventCommand \u003d (CreateEventCommand) command;","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"ravern"},"content":"        assertEquals(createEventCommand.getTitle(), \"this is a test\");","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"ravern"},"content":"        assertEquals(createEventCommand.getFrom().getDate().format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")),","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"ravern"},"content":"                \"3 Apr 2023\");","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"ravern"},"content":"        assertEquals(createEventCommand.getTo().getDate().format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")),","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"ravern"},"content":"                \"4 Apr 2023\");","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"ravern"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"ravern"},"content":"    public void parse_invalidCommand() {","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"ravern"},"content":"        assertThrows(ParseException.class, () -\u003e Parser.parseCommand(\"ls\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"ravern"},"content":"        assertThrows(ParseException.class, () -\u003e Parser.parseCommand(\"harblah\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"ravern"},"content":"        assertThrows(ParseException.class, () -\u003e Parser.parseCommand(\"todo\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"ravern"},"content":"        assertThrows(ParseException.class, () -\u003e Parser.parseCommand(\"deadline this is a test\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"ravern"},"content":"        assertThrows(ParseException.class, () -\u003e Parser.parseCommand(\"mark wrong\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"ravern"},"content":"        assertThrows(ParseException.class, () -\u003e Parser.parseCommand(\"unmark wrong\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"ravern"},"content":"        assertThrows(ParseException.class, () -\u003e Parser.parseCommand(\"delete wrong\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"ravern"},"content":"        assertThrows(ParseException.class, () -\u003e Parser.parseCommand(\"deadlin this is a test /by 07-03-2023\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"ravern"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"ravern"},"content":"                () -\u003e Parser.parseCommand(\"evnt this is a test /from 07-03-2023 /to 08-03-2023\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"ravern"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"ravern":85}},{"path":"src/test/java/ekud/state/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ravern"},"content":"package ekud.state;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ravern"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"ravern"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"ravern"},"content":"public final class TaskTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"ravern"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"ravern"},"content":"    public void markTask_taskUnmarked_taskBecomesMarked() {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"ravern"},"content":"        Task task \u003d new Task(\"Test task\", false) {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"ravern"},"content":"        };","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"ravern"},"content":"        assertEquals(task.isDone(), false);","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"ravern"},"content":"        task.markAsDone();","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"ravern"},"content":"        assertEquals(task.isDone(), true);","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"ravern"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"ravern"},"content":"    public void markTask_taskMarked_taskStillMarked() {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"ravern"},"content":"        Task task \u003d new Task(\"Test task\", true) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"ravern"},"content":"        };","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"ravern"},"content":"        assertEquals(task.isDone(), true);","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"ravern"},"content":"        task.markAsDone();","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"ravern"},"content":"        assertEquals(task.isDone(), true);","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"ravern"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"ravern"},"content":"    public void unmarkTask_taskUnmarked_taskStillUnmarked() {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"ravern"},"content":"        Task task \u003d new Task(\"Test task\", false) {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"ravern"},"content":"        };","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"ravern"},"content":"        assertEquals(task.isDone(), false);","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"ravern"},"content":"        task.markAsNotDone();","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"ravern"},"content":"        assertEquals(task.isDone(), false);","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"ravern"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"ravern"},"content":"    public void unmarkTask_taskUnmarked_taskBecomesMarked() {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"ravern"},"content":"        Task task \u003d new Task(\"Test task\", true) {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"ravern"},"content":"        };","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"ravern"},"content":"        assertEquals(task.isDone(), true);","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"ravern"},"content":"        task.markAsNotDone();","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"ravern"},"content":"        assertEquals(task.isDone(), false);","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"ravern"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"ravern":43}},{"path":"src/test/java/ekud/util/DateTimeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ravern"},"content":"package ekud.util;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ravern"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"ravern"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"ravern"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"ravern"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"ravern"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"ravern"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"ravern"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"ravern"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"ravern"},"content":"public final class DateTimeTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"ravern"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"ravern"},"content":"    public void parse_validDateTime() {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"ravern"},"content":"        DateTime dateTime \u003d DateTime.parse(\"03-04-2023 17:53\");","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"ravern"},"content":"        LocalDate localDate \u003d dateTime.getDate();","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"ravern"},"content":"        LocalTime localTime \u003d dateTime.getTime();","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"ravern"},"content":"        LocalDateTime localDateTime \u003d dateTime.getDateTime();","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"ravern"},"content":"        assertEquals(localDate.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")), \"3 Apr 2023\");","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"ravern"},"content":"        assertEquals(localTime.format(DateTimeFormatter.ofPattern(\"HH:mm\")), \"17:53\");","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"ravern"},"content":"        assertEquals(localDateTime.format(DateTimeFormatter.ofPattern(\"d MMM yyyy HH:mm\")), \"3 Apr 2023 17:53\");","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"ravern"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"ravern"},"content":"    public void parse_validDate() {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"ravern"},"content":"        DateTime dateTime \u003d DateTime.parse(\"03-04-2023\");","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"ravern"},"content":"        LocalDate localDate \u003d dateTime.getDate();","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"ravern"},"content":"        LocalTime localTime \u003d dateTime.getTime();","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"ravern"},"content":"        LocalDateTime localDateTime \u003d dateTime.getDateTime();","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"ravern"},"content":"        assertEquals(localDate.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")), \"3 Apr 2023\");","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"ravern"},"content":"        assertEquals(localTime, null);","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"ravern"},"content":"        assertEquals(localDateTime.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")), \"3 Apr 2023\");","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"ravern"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"ravern"},"content":"    public void parse_validTime() {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"ravern"},"content":"        DateTime dateTime \u003d DateTime.parse(\"17:53\");","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"ravern"},"content":"        LocalDate localDate \u003d dateTime.getDate();","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"ravern"},"content":"        LocalTime localTime \u003d dateTime.getTime();","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"ravern"},"content":"        LocalDateTime localDateTime \u003d dateTime.getDateTime();","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"ravern"},"content":"        assertEquals(localDate, null);","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"ravern"},"content":"        assertEquals(localTime.format(DateTimeFormatter.ofPattern(\"HH:mm\")), \"17:53\");","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"ravern"},"content":"        assertEquals(localDateTime.format(DateTimeFormatter.ofPattern(\"HH:mm\")), \"17:53\");","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"ravern"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"ravern"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"ravern"},"content":"    public void parse_invalidDateTime() {","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"ravern"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e DateTime.parse(\"invalid date 17:42\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"ravern"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e DateTime.parse(\"03-04-2023 invalid time\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"ravern"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"ravern"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"ravern":53}}]
