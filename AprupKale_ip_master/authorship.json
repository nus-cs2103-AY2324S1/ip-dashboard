[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"AprupKale"},"content":"# duke.Duke project template","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"AprupKale"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"AprupKale":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"AprupKale"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"AprupKale"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"AprupKale"},"content":"mainClassName \u003d \u0027duke.Duke\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"AprupKale"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"AprupKale"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"AprupKale"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"AprupKale"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"AprupKale"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"AprupKale"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"AprupKale"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"AprupKale"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"AprupKale"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"AprupKale"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"AprupKale"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"AprupKale"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"AprupKale"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"AprupKale"},"content":"checkstyle {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"AprupKale"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"AprupKale"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"AprupKale"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"AprupKale"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"AprupKale":25,"-":41}},{"path":"src/main/java/duke/Action.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AprupKale"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"AprupKale"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"AprupKale"},"content":" * Enum for all the actions user can take.","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"AprupKale"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"AprupKale"},"content":"public enum Action {","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"AprupKale"},"content":"    BYE, LIST, MARK, UNMARK, DELETE, FIND, TODO, DEADLINE, EVENT","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"AprupKale"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"AprupKale":8}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AprupKale"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AprupKale"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"AprupKale"},"content":"import duke.exceptions.DukeIndexOutOfBoundsException;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"AprupKale"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"AprupKale"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"AprupKale"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"AprupKale"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"AprupKale"},"content":" * The Max bot.","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"AprupKale"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"AprupKale"},"content":"    /** Time format for the Max bot */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"AprupKale"},"content":"    public static final DateTimeFormatter TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy - HH:mm\");","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"AprupKale"},"content":"    /** TaskList object to store tasks */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"AprupKale"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"AprupKale"},"content":"    /** Storage object to interact with data file(s) */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"AprupKale"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"AprupKale"},"content":"    /** Parser object to parse user input */","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"AprupKale"},"content":"    private Parser parser;","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"AprupKale"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"AprupKale"},"content":"     * Constructs a bot.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"AprupKale"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"AprupKale"},"content":"     * @param filePath Path of data file from root.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"AprupKale"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"AprupKale"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"AprupKale"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"AprupKale"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"AprupKale"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"AprupKale"},"content":"     * Gets response from the bot.","lastModifiedDate":"2023-09-11"},{"lineNumber":36,"author":{"gitId":"AprupKale"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"AprupKale"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-11"},{"lineNumber":38,"author":{"gitId":"AprupKale"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-09-11"},{"lineNumber":39,"author":{"gitId":"AprupKale"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"AprupKale"},"content":"            taskList \u003d storage.readFromFile();","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":42,"author":{"gitId":"AprupKale"},"content":"            String userInput \u003d input;","lastModifiedDate":"2023-09-11"},{"lineNumber":43,"author":{"gitId":"AprupKale"},"content":"            Action action \u003d Action.valueOf(userInput.split(\" \")[0].toUpperCase());","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"AprupKale"},"content":"            switch (action) {","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"AprupKale"},"content":"            case BYE:","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"AprupKale"},"content":"                response \u003d Ui.exit();","lastModifiedDate":"2023-09-11"},{"lineNumber":48,"author":{"gitId":"AprupKale"},"content":"                break;","lastModifiedDate":"2023-09-11"},{"lineNumber":49,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"AprupKale"},"content":"            case LIST:","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"AprupKale"},"content":"                response \u003d \"Here are the tasks in your list:\\n\" + taskList.toString();","lastModifiedDate":"2023-09-11"},{"lineNumber":52,"author":{"gitId":"AprupKale"},"content":"                break;","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"AprupKale"},"content":"            case MARK:","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"AprupKale"},"content":"                // get index by splitting user input and get task at that index from list","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"AprupKale"},"content":"                int markIndex \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"AprupKale"},"content":"                if (markIndex \u003c 1 || markIndex \u003e taskList.getNumberOfTasks()) {","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"AprupKale"},"content":"                    throw new DukeIndexOutOfBoundsException(\"marked\");","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"AprupKale"},"content":"                }","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"AprupKale"},"content":"                Task toBeMarked \u003d taskList.getTaskAt(markIndex - 1);","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"AprupKale"},"content":"                toBeMarked.mark();","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"AprupKale"},"content":"                response \u003d \"Nice! I\u0027ve marked this task as done:\\n\" + toBeMarked.toString();","lastModifiedDate":"2023-09-11"},{"lineNumber":65,"author":{"gitId":"AprupKale"},"content":"                break;","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"AprupKale"},"content":"            case UNMARK:","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"AprupKale"},"content":"                // get index by splitting user input and get task at that index from list","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"AprupKale"},"content":"                int unmarkIndex \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"AprupKale"},"content":"                if (unmarkIndex \u003c 1 || unmarkIndex \u003e taskList.getNumberOfTasks()) {","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"AprupKale"},"content":"                    throw new DukeIndexOutOfBoundsException(\"unmarked\");","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"AprupKale"},"content":"                }","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"AprupKale"},"content":"                Task toBeUnmarked \u003d taskList.getTaskAt(unmarkIndex - 1);","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"AprupKale"},"content":"                toBeUnmarked.unmark();","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"AprupKale"},"content":"                response \u003d \"OK, I\u0027ve marked this task as not done yet:\\n\" + toBeUnmarked.toString();","lastModifiedDate":"2023-09-11"},{"lineNumber":78,"author":{"gitId":"AprupKale"},"content":"                break;","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"AprupKale"},"content":"            case DELETE:","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"AprupKale"},"content":"                int deleteIndex \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"AprupKale"},"content":"                if (deleteIndex \u003c 1 || deleteIndex \u003e taskList.getNumberOfTasks()) {","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"AprupKale"},"content":"                    throw new DukeIndexOutOfBoundsException(\"deleted\");","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"AprupKale"},"content":"                }","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":87,"author":{"gitId":"AprupKale"},"content":"                Task toBeDeleted \u003d taskList.getTaskAt(deleteIndex - 1);","lastModifiedDate":"2023-09-06"},{"lineNumber":88,"author":{"gitId":"AprupKale"},"content":"                taskList.deleteTaskAt(deleteIndex - 1);","lastModifiedDate":"2023-09-06"},{"lineNumber":89,"author":{"gitId":"AprupKale"},"content":"                response \u003d \"Noted. I\u0027ve removed this task:\\n\" + toBeDeleted.toString()","lastModifiedDate":"2023-09-11"},{"lineNumber":90,"author":{"gitId":"AprupKale"},"content":"                        + \"\\nNow you have \" + taskList.getNumberOfTasks() + \" tasks in the list.\";","lastModifiedDate":"2023-09-11"},{"lineNumber":91,"author":{"gitId":"AprupKale"},"content":"                break;","lastModifiedDate":"2023-09-06"},{"lineNumber":92,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":93,"author":{"gitId":"AprupKale"},"content":"            case FIND:","lastModifiedDate":"2023-09-06"},{"lineNumber":94,"author":{"gitId":"AprupKale"},"content":"                TaskList filtered \u003d parser.getTaskList(userInput, taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":95,"author":{"gitId":"AprupKale"},"content":"                response \u003d \"Here are the matching tasks in your list:\\n\" + filtered.toString();","lastModifiedDate":"2023-09-11"},{"lineNumber":96,"author":{"gitId":"AprupKale"},"content":"                break;","lastModifiedDate":"2023-09-06"},{"lineNumber":97,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":98,"author":{"gitId":"AprupKale"},"content":"            case TODO:","lastModifiedDate":"2023-09-06"},{"lineNumber":99,"author":{"gitId":"AprupKale"},"content":"            case DEADLINE:","lastModifiedDate":"2023-09-06"},{"lineNumber":100,"author":{"gitId":"AprupKale"},"content":"            case EVENT:","lastModifiedDate":"2023-09-06"},{"lineNumber":101,"author":{"gitId":"AprupKale"},"content":"            default:","lastModifiedDate":"2023-09-06"},{"lineNumber":102,"author":{"gitId":"AprupKale"},"content":"                Task add \u003d parser.getTask(userInput);","lastModifiedDate":"2023-09-06"},{"lineNumber":103,"author":{"gitId":"AprupKale"},"content":"                try {","lastModifiedDate":"2023-09-06"},{"lineNumber":104,"author":{"gitId":"AprupKale"},"content":"                    taskList.addToList(add);","lastModifiedDate":"2023-09-06"},{"lineNumber":105,"author":{"gitId":"AprupKale"},"content":"                    response \u003d \"Got it. I\u0027ve added this task:\\n\" + add.toString()","lastModifiedDate":"2023-09-11"},{"lineNumber":106,"author":{"gitId":"AprupKale"},"content":"                            + \"\\nNow you have \" + taskList.getNumberOfTasks() + \" tasks in the list.\";","lastModifiedDate":"2023-09-11"},{"lineNumber":107,"author":{"gitId":"AprupKale"},"content":"                } catch (NullPointerException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":108,"author":{"gitId":"AprupKale"},"content":"                    throw new DukeException(\"OOPS!!! Could not add task to the list\");","lastModifiedDate":"2023-09-06"},{"lineNumber":109,"author":{"gitId":"AprupKale"},"content":"                }","lastModifiedDate":"2023-09-06"},{"lineNumber":110,"author":{"gitId":"AprupKale"},"content":"                break;","lastModifiedDate":"2023-09-06"},{"lineNumber":111,"author":{"gitId":"AprupKale"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":112,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":113,"author":{"gitId":"AprupKale"},"content":"            storage.writeToFile(taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":114,"author":{"gitId":"AprupKale"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"AprupKale"},"content":"            response \u003d e.getMessage();","lastModifiedDate":"2023-09-11"},{"lineNumber":116,"author":{"gitId":"AprupKale"},"content":"        } finally {","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"AprupKale"},"content":"            return response;","lastModifiedDate":"2023-09-11"},{"lineNumber":118,"author":{"gitId":"AprupKale"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"AprupKale":117,"-":3}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AprupKale"},"content":"package duke;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"AprupKale"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"AprupKale"},"content":"/**","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"AprupKale"},"content":" * A launcher class for Max bot.","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"AprupKale"},"content":" */","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"AprupKale"},"content":"public class Launcher {","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"AprupKale"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"AprupKale"},"content":"        Application.launch(duke.Main.class, args);","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"AprupKale"},"content":"}","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"AprupKale":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AprupKale"},"content":"package duke;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"AprupKale"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"AprupKale"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"AprupKale"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"AprupKale"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"AprupKale"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"AprupKale"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"AprupKale"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"AprupKale"},"content":"/**","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"AprupKale"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"AprupKale"},"content":" */","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"AprupKale"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"AprupKale"},"content":"    private Duke duke \u003d new Duke(\"data/duke.txt\");","lastModifiedDate":"2023-09-11"},{"lineNumber":19,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"AprupKale"},"content":"    @Override","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"AprupKale"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"AprupKale"},"content":"        try {","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"AprupKale"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"AprupKale"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"AprupKale"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"AprupKale"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"AprupKale"},"content":"            stage.setTitle(\"Max - The Goated Bot\");","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"AprupKale"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"AprupKale"},"content":"            stage.show();","lastModifiedDate":"2023-09-11"},{"lineNumber":30,"author":{"gitId":"AprupKale"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-11"},{"lineNumber":31,"author":{"gitId":"AprupKale"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-11"},{"lineNumber":32,"author":{"gitId":"AprupKale"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":33,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":34,"author":{"gitId":"AprupKale"},"content":"}","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"AprupKale":34}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AprupKale"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AprupKale"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"AprupKale"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"AprupKale"},"content":"import duke.exceptions.DukeDateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"AprupKale"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"AprupKale"},"content":"import duke.exceptions.DukeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"AprupKale"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"AprupKale"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"AprupKale"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"AprupKale"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"AprupKale"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"AprupKale"},"content":" * Implementation for the parser.","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"AprupKale"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"AprupKale"},"content":"public class Parser {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"AprupKale"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"AprupKale"},"content":"     * Converts String input to Task object.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"AprupKale"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"AprupKale"},"content":"     * @param userInput User input in String format.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"AprupKale"},"content":"     * @return Task object.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"AprupKale"},"content":"     * @throws DukeException If error is encountered while parsing.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"AprupKale"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"AprupKale"},"content":"    public Task getTask(String userInput) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"AprupKale"},"content":"        Task add;","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"AprupKale"},"content":"        if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"AprupKale"},"content":"            add \u003d parseTodo(userInput);","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"AprupKale"},"content":"        } else if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"AprupKale"},"content":"            add \u003d parseDeadline(userInput);","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"AprupKale"},"content":"        } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"AprupKale"},"content":"            add \u003d parseEvent(userInput);","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"AprupKale"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"AprupKale"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"AprupKale"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"AprupKale"},"content":"        return add;","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"AprupKale"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"AprupKale"},"content":"     * Converts String input to Todo object.","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"AprupKale"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"AprupKale"},"content":"     * @param userInput User input in String format.","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"AprupKale"},"content":"     * @return Todo object.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"AprupKale"},"content":"     * @throws DukeParseException If error is encountered while parsing.","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"AprupKale"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"AprupKale"},"content":"    public Todo parseTodo(String userInput) throws DukeParseException {","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"AprupKale"},"content":"        String description \u003d userInput.substring(userInput.indexOf(\u0027 \u0027) + 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"AprupKale"},"content":"        if (description.isEmpty() || description.equals(\"todo\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"AprupKale"},"content":"            throw new DukeParseException(\"todo\");","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"AprupKale"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"AprupKale"},"content":"        return new Todo(description);","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"AprupKale"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"AprupKale"},"content":"     * Converts String input to Deadline object.","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"AprupKale"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"AprupKale"},"content":"     * @param userInput User input in String format.","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"AprupKale"},"content":"     * @return Deadline object.","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"AprupKale"},"content":"     * @throws DukeParseException If error is encountered while parsing.","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"AprupKale"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"AprupKale"},"content":"    public Deadline parseDeadline(String userInput) throws DukeParseException {","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"AprupKale"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"AprupKale"},"content":"            String description \u003d userInput.substring(userInput.indexOf(\u0027 \u0027) + 1, userInput.indexOf(\u0027/\u0027) - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"AprupKale"},"content":"            String by \u003d userInput.substring(userInput.indexOf(\"/by\") + 4);","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"AprupKale"},"content":"            return new Deadline(description, LocalDateTime.parse(by, Duke.TIME_FORMAT));","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"AprupKale"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"AprupKale"},"content":"            throw new DukeParseException(\"deadline\");","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"AprupKale"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"AprupKale"},"content":"            throw new DukeDateTimeParseException();","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"AprupKale"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"AprupKale"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"AprupKale"},"content":"     * Converts String input to Event object.","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"AprupKale"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"AprupKale"},"content":"     * @param userInput User input in String format.","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"AprupKale"},"content":"     * @return Event object.","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"AprupKale"},"content":"     * @throws DukeParseException If error is encountered while parsing.","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"AprupKale"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"AprupKale"},"content":"    public Event parseEvent(String userInput) throws DukeParseException {","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"AprupKale"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"AprupKale"},"content":"            String description \u003d userInput.substring(userInput.indexOf(\u0027 \u0027) + 1, userInput.indexOf(\u0027/\u0027) - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"AprupKale"},"content":"            String from \u003d userInput.substring(userInput.indexOf(\"/from\") + 6, userInput.indexOf(\"/to\") - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"AprupKale"},"content":"            String to \u003d userInput.substring(userInput.indexOf(\"/to\") + 4);","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"AprupKale"},"content":"            return new Event(description, LocalDateTime.parse(from, Duke.TIME_FORMAT),","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"AprupKale"},"content":"                    LocalDateTime.parse(to, Duke.TIME_FORMAT));","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"AprupKale"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"AprupKale"},"content":"            throw new DukeParseException(\"event\");","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"AprupKale"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"AprupKale"},"content":"            throw new DukeDateTimeParseException();","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"AprupKale"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"AprupKale"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"AprupKale"},"content":"     * Returns task list filtered using the keyword.","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"AprupKale"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"AprupKale"},"content":"     * @param userInput User input in String format.","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"AprupKale"},"content":"     * @param taskList TaskList to filter.","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"AprupKale"},"content":"     * @return Filtered TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"AprupKale"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"AprupKale"},"content":"    public TaskList getTaskList(String userInput, TaskList taskList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"AprupKale"},"content":"        TaskList filtered \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"AprupKale"},"content":"        String keyword \u003d userInput.substring(5);","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"AprupKale"},"content":"        for (int i \u003d 0; i \u003c taskList.getNumberOfTasks(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"AprupKale"},"content":"            if (taskList.getTaskAt(i).containsKeyword(keyword)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"AprupKale"},"content":"                filtered.addToList(taskList.getTaskAt(i));","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"AprupKale"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"AprupKale"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"AprupKale"},"content":"        return filtered;","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"AprupKale"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AprupKale":116}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AprupKale"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AprupKale"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"AprupKale"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"AprupKale"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"AprupKale"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"AprupKale"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"AprupKale"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"AprupKale"},"content":"import duke.exceptions.DukeFileNotFoundException;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"AprupKale"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"AprupKale"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"AprupKale"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"AprupKale"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"AprupKale"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"AprupKale"},"content":" * Implementation for the storage.","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"AprupKale"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"AprupKale"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"AprupKale"},"content":"    /** File path of data file */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"AprupKale"},"content":"    private String filePath;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"AprupKale"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"AprupKale"},"content":"     * Constructs a Storage object.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"AprupKale"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"AprupKale"},"content":"     * @param filePath path of data file from root.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"AprupKale"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"AprupKale"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"AprupKale"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"AprupKale"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"AprupKale"},"content":"     * Reads list of tasks from file.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"AprupKale"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"AprupKale"},"content":"     * @return TaskList object.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"AprupKale"},"content":"     * @throws DukeFileNotFoundException If file is not found at filePath.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"AprupKale"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"AprupKale"},"content":"    public TaskList readFromFile() throws DukeFileNotFoundException {","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"AprupKale"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"AprupKale"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"AprupKale"},"content":"            File f \u003d new File(this.filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"AprupKale"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"AprupKale"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"AprupKale"},"content":"                String line \u003d s.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"AprupKale"},"content":"                if (line \u003d\u003d null || line.equals(\"\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"AprupKale"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"AprupKale"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"AprupKale"},"content":"                String[] params \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"AprupKale"},"content":"                boolean isDone \u003d params[1].equals(\"1\");","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"AprupKale"},"content":"                switch (params[0]) {","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"AprupKale"},"content":"                case \"T\":","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"AprupKale"},"content":"                    list.addToList(new Todo(params[2], isDone));","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"AprupKale"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"AprupKale"},"content":"                case \"D\":","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"AprupKale"},"content":"                    list.addToList(new Deadline(params[2], isDone, LocalDateTime.parse(params[3], Duke.TIME_FORMAT)));","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"AprupKale"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"AprupKale"},"content":"                case \"E\":","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"AprupKale"},"content":"                    list.addToList(new Event(params[2], isDone, LocalDateTime.parse(params[3], Duke.TIME_FORMAT),","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"AprupKale"},"content":"                            LocalDateTime.parse(params[4], Duke.TIME_FORMAT)));","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"AprupKale"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"AprupKale"},"content":"                default:","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"AprupKale"},"content":"                    isDone \u003d params[0].equals(\"1\");","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"AprupKale"},"content":"                    list.addToList(new Task(params[1].trim(), isDone));","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"AprupKale"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"AprupKale"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"AprupKale"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"AprupKale"},"content":"            s.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"AprupKale"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"AprupKale"},"content":"            throw new DukeFileNotFoundException(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"AprupKale"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"AprupKale"},"content":"        return list;","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"AprupKale"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"AprupKale"},"content":"     * Writes list of tasks to file.","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"AprupKale"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"AprupKale"},"content":"     * @param list TaskList object having a list of Tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"AprupKale"},"content":"     * @throws DukeFileNotFoundException If file is not found at filePath.","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"AprupKale"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"AprupKale"},"content":"    public void writeToFile(TaskList list) throws DukeFileNotFoundException {","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"AprupKale"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"AprupKale"},"content":"            FileWriter fw \u003d new FileWriter(\"data/duke.txt\");","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"AprupKale"},"content":"            StringBuffer write \u003d new StringBuffer(\"\");","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"AprupKale"},"content":"            for (int i \u003d 0; i \u003c list.getNumberOfTasks(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"AprupKale"},"content":"                write.append(list.getTaskAt(i).getTextRepresentation() + \"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"AprupKale"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"AprupKale"},"content":"            fw.write(write.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"AprupKale"},"content":"            fw.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"AprupKale"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"AprupKale"},"content":"            throw new DukeFileNotFoundException(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"AprupKale"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"AprupKale"},"content":"            System.out.println(\"\\n\" + \"OOPS!!! \" + e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"AprupKale"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"AprupKale"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AprupKale":103}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AprupKale"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AprupKale"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"AprupKale"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"AprupKale"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"AprupKale"},"content":" * Implementation for the task list","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"AprupKale"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"AprupKale"},"content":"public class TaskList {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"AprupKale"},"content":"    /** List of tasks */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"AprupKale"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"AprupKale"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"AprupKale"},"content":"     * Constructs a TaskList object.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"AprupKale"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"AprupKale"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"AprupKale"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"AprupKale"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"AprupKale"},"content":"     * Returns a list of tasks with tasks passed as arguments.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"AprupKale"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"AprupKale"},"content":"     * @param args Tasks to be added to the TaskList object.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"AprupKale"},"content":"     * @return TaskList object.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"AprupKale"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"AprupKale"},"content":"    public static TaskList of(Task ... args) {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"AprupKale"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"AprupKale"},"content":"        for (Task task: args) {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"AprupKale"},"content":"            taskList.addToList(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"AprupKale"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"AprupKale"},"content":"        return taskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"AprupKale"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"AprupKale"},"content":"     * Adds task to list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"AprupKale"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"AprupKale"},"content":"     * @param s Task to add to the TaskList object.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"AprupKale"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"AprupKale"},"content":"    public void addToList(Task s) {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"AprupKale"},"content":"        this.list.add(s);","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"AprupKale"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"AprupKale"},"content":"     * Returns task at specific index.","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"AprupKale"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"AprupKale"},"content":"     * @param index Index from which Task is to be obtained.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"AprupKale"},"content":"     * @return Task object at index in the TaskList object.","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"AprupKale"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"AprupKale"},"content":"    public Task getTaskAt(int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"AprupKale"},"content":"        return this.list.get(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"AprupKale"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"AprupKale"},"content":"     * Returns number of tasks in the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"AprupKale"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"AprupKale"},"content":"     * @return Number of tasks in the TaskList object.","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"AprupKale"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"AprupKale"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"AprupKale"},"content":"        return this.list.size();","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"AprupKale"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"AprupKale"},"content":"     * Deletes task at specific index.","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"AprupKale"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"AprupKale"},"content":"     * @param index Index from which Task is to be deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"AprupKale"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"AprupKale"},"content":"    public void deleteTaskAt(int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"AprupKale"},"content":"        this.list.remove(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"AprupKale"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"AprupKale"},"content":"    public String toString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"AprupKale"},"content":"        StringBuilder s \u003d new StringBuilder();","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"AprupKale"},"content":"        for (int i \u003d 0; i \u003c this.list.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"AprupKale"},"content":"            s.append((i + 1) + \".\" + this.list.get(i));","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"AprupKale"},"content":"            if (i \u003c this.list.size() - 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"AprupKale"},"content":"                s.append(\"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"AprupKale"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"AprupKale"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"AprupKale"},"content":"        return s.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"AprupKale"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"AprupKale"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"AprupKale"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"AprupKale"},"content":"            return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"AprupKale"},"content":"        } else if (!(o instanceof TaskList)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"AprupKale"},"content":"            return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"AprupKale"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"AprupKale"},"content":"            TaskList taskList \u003d (TaskList) o;","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"AprupKale"},"content":"            if (taskList.getNumberOfTasks() !\u003d this.getNumberOfTasks()) {","lastModifiedDate":"2023-09-06"},{"lineNumber":94,"author":{"gitId":"AprupKale"},"content":"                return false;","lastModifiedDate":"2023-09-06"},{"lineNumber":95,"author":{"gitId":"AprupKale"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":96,"author":{"gitId":"AprupKale"},"content":"            for (int i \u003d 0; i \u003c this.getNumberOfTasks(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"AprupKale"},"content":"                if (!(taskList.getTaskAt(i).equals(this.getTaskAt(i)))) {","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"AprupKale"},"content":"                    return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"AprupKale"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"AprupKale"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"AprupKale"},"content":"            return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"AprupKale"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"AprupKale"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AprupKale":104}},{"path":"src/main/java/duke/exceptions/DukeDateTimeParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AprupKale"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AprupKale"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"AprupKale"},"content":" * Date and time parse exception for Duke.","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"AprupKale"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"AprupKale"},"content":"public class DukeDateTimeParseException extends DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"AprupKale"},"content":"    public DukeDateTimeParseException() {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"AprupKale"},"content":"        super(\"OOPS!!! Date and Time format does not match dd mmm yyyy - hh:mm\");","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"AprupKale"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AprupKale":10}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AprupKale"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AprupKale"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"AprupKale"},"content":" * Exception for Duke.","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"AprupKale"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"AprupKale"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"AprupKale"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"AprupKale"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"AprupKale"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"AprupKale":10}},{"path":"src/main/java/duke/exceptions/DukeFileNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AprupKale"},"content":"package duke.exceptions;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"AprupKale"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"AprupKale"},"content":" * FileNotFoundException for Duke.","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"AprupKale"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"AprupKale"},"content":"public class DukeFileNotFoundException extends DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"AprupKale"},"content":"    public DukeFileNotFoundException(String file) {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"AprupKale"},"content":"        super(\"\\nOOPS!!! Could not find the file \" + file);","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"AprupKale"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"AprupKale":10}},{"path":"src/main/java/duke/exceptions/DukeIndexOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AprupKale"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AprupKale"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"AprupKale"},"content":" * IndexOutOfBoundsException for Duke.","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"AprupKale"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"AprupKale"},"content":"public class DukeIndexOutOfBoundsException extends DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"AprupKale"},"content":"    public DukeIndexOutOfBoundsException(String action) {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"AprupKale"},"content":"        super(\"OOPS!!! Index of task to be \" + action + \" is out of bounds\");","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"AprupKale"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AprupKale":10}},{"path":"src/main/java/duke/exceptions/DukeParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AprupKale"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AprupKale"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"AprupKale"},"content":" * Parse exception for Duke.","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"AprupKale"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"AprupKale"},"content":"public class DukeParseException extends DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"AprupKale"},"content":"    public DukeParseException(String task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"AprupKale"},"content":"        super(\"OOPS!!! Missing parameters in \" + task);","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"AprupKale"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AprupKale":10}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AprupKale"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AprupKale"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"AprupKale"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"AprupKale"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"AprupKale"},"content":" * Encapsulation for Deadline properties.","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"AprupKale"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"AprupKale"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"AprupKale"},"content":"    /** Finish by time for the deadline */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"AprupKale"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"AprupKale"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"AprupKale"},"content":"     * Constructs a Deadline object.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"AprupKale"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"AprupKale"},"content":"     * @param description Description of the Deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"AprupKale"},"content":"     * @param by Finish by time of the Deadline","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"AprupKale"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"AprupKale"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"AprupKale"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"AprupKale"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"AprupKale"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"AprupKale"},"content":"     * Constructs a Deadline object.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"AprupKale"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"AprupKale"},"content":"     * @param description Description of the Deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"AprupKale"},"content":"     * @param isDone Status of the Deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"AprupKale"},"content":"     * @param by Finish by time of the Deadline","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"AprupKale"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"AprupKale"},"content":"    public Deadline(String description, boolean isDone, LocalDateTime by) {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"AprupKale"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"AprupKale"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"AprupKale"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"AprupKale"},"content":"     * Returns text representation of deadline for data file.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"AprupKale"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"AprupKale"},"content":"     * @return Text representation of Deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"AprupKale"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"AprupKale"},"content":"    public String getTextRepresentation() {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"AprupKale"},"content":"        return \"D | \" + super.getTextRepresentation() + \" | \" + this.by.format(Duke.TIME_FORMAT);","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"AprupKale"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"AprupKale"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"AprupKale"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by.format(Duke.TIME_FORMAT) + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"AprupKale"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"AprupKale"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"AprupKale"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"AprupKale"},"content":"            return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"AprupKale"},"content":"        } else if (!(o instanceof Deadline)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"AprupKale"},"content":"            return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"AprupKale"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"AprupKale"},"content":"            Deadline deadline \u003d (Deadline) o;","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"AprupKale"},"content":"            return deadline.by.equals(this.by)","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"AprupKale"},"content":"                    \u0026\u0026 deadline.description.equals(this.description)","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"AprupKale"},"content":"                    \u0026\u0026 deadline.isDone \u003d\u003d this.isDone;","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"AprupKale"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"AprupKale"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"AprupKale":65}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AprupKale"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AprupKale"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"AprupKale"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"AprupKale"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"AprupKale"},"content":" * Encapsulation for Event properties.","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"AprupKale"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"AprupKale"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"AprupKale"},"content":"    /** Start time for the event */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"AprupKale"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"AprupKale"},"content":"    /** End time for the event */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"AprupKale"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"AprupKale"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"AprupKale"},"content":"     * Constructs an Event object.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"AprupKale"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"AprupKale"},"content":"     * @param description Description of the Event.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"AprupKale"},"content":"     * @param from Start time of the Event.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"AprupKale"},"content":"     * @param to End time of the Event.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"AprupKale"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"AprupKale"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"AprupKale"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"AprupKale"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"AprupKale"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"AprupKale"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"AprupKale"},"content":"     * Constructs an Event object.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"AprupKale"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"AprupKale"},"content":"     * @param description Description of the Event.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"AprupKale"},"content":"     * @param isDone Status of the Event.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"AprupKale"},"content":"     * @param from Start time of the Event.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"AprupKale"},"content":"     * @param to End time of the Event.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"AprupKale"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"AprupKale"},"content":"    public Event(String description, boolean isDone, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"AprupKale"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"AprupKale"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"AprupKale"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"AprupKale"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"AprupKale"},"content":"     * Returns text representation of deadline for data file.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"AprupKale"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"AprupKale"},"content":"     * @return Text representation of Event.","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"AprupKale"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"AprupKale"},"content":"    public String getTextRepresentation() {","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"AprupKale"},"content":"        return \"E | \" + super.getTextRepresentation() + \" | \" + this.from.format(Duke.TIME_FORMAT) + \" | \"","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"AprupKale"},"content":"                + this.to.format(Duke.TIME_FORMAT);","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"AprupKale"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"AprupKale"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"AprupKale"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from.format(Duke.TIME_FORMAT)","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"AprupKale"},"content":"                + \" to: \" + this.to.format(Duke.TIME_FORMAT) + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"AprupKale"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"AprupKale"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"AprupKale"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"AprupKale"},"content":"            return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"AprupKale"},"content":"        } else if (!(o instanceof Event)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"AprupKale"},"content":"            return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"AprupKale"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"AprupKale"},"content":"            Event event \u003d (Event) o;","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"AprupKale"},"content":"            return event.from.equals(this.from)","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"AprupKale"},"content":"                    \u0026\u0026 event.to.equals(this.to)","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"AprupKale"},"content":"                    \u0026\u0026 event.description.equals(this.description)","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"AprupKale"},"content":"                    \u0026\u0026 event.isDone \u003d\u003d this.isDone;","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"AprupKale"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"AprupKale"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"AprupKale":74}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AprupKale"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AprupKale"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"AprupKale"},"content":" * Encapsulation for Task properties.","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"AprupKale"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"AprupKale"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"AprupKale"},"content":"    /** Description of task */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"AprupKale"},"content":"    protected String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"AprupKale"},"content":"    /** Status of task */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"AprupKale"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"AprupKale"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"AprupKale"},"content":"     * Constructs a Task object.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"AprupKale"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"AprupKale"},"content":"     * @param description Description of the Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"AprupKale"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"AprupKale"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"AprupKale"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"AprupKale"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"AprupKale"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"AprupKale"},"content":"     * Constructs a Task object.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"AprupKale"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"AprupKale"},"content":"     * @param description Description of the Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"AprupKale"},"content":"     * @param isDone Status of the Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"AprupKale"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"AprupKale"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"AprupKale"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"AprupKale"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"AprupKale"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"AprupKale"},"content":"     * Returns status of task as String.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"AprupKale"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"AprupKale"},"content":"     * @return Status of the Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"AprupKale"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"AprupKale"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"AprupKale"},"content":"        return (this.isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"AprupKale"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"AprupKale"},"content":"     * Returns status of task as Integer.","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"AprupKale"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"AprupKale"},"content":"     * @return Status of the Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"AprupKale"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"AprupKale"},"content":"    public int getStatusNumerical() {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"AprupKale"},"content":"        return (this.isDone ? 1 : 0);","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"AprupKale"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"AprupKale"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"AprupKale"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"AprupKale"},"content":"    public void mark() {","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"AprupKale"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"AprupKale"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"AprupKale"},"content":"     * Unmarks the task as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"AprupKale"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"AprupKale"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"AprupKale"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"AprupKale"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"AprupKale"},"content":"     * Returns text representation of task for data file.","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"AprupKale"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"AprupKale"},"content":"     * @return Text representation of Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"AprupKale"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"AprupKale"},"content":"    public String getTextRepresentation() {","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"AprupKale"},"content":"        return this.getStatusNumerical() + \" | \" + this.description;","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"AprupKale"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"AprupKale"},"content":"     * Checks if task contains keyword.","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"AprupKale"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"AprupKale"},"content":"     * @param keyword Keyword to be checked.","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"AprupKale"},"content":"     * @return If task contains keyword or not.","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"AprupKale"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"AprupKale"},"content":"    public boolean containsKeyword(String keyword) {","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"AprupKale"},"content":"        return this.description.contains(keyword);","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"AprupKale"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"AprupKale"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"AprupKale"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"AprupKale"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"AprupKale"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"AprupKale"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"AprupKale"},"content":"            return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"AprupKale"},"content":"        } else if (!(o instanceof Task)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"AprupKale"},"content":"            return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"AprupKale"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"AprupKale"},"content":"            Task task \u003d (Task) o;","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"AprupKale"},"content":"            return task.description.equals(this.description)","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"AprupKale"},"content":"                    \u0026\u0026 task.isDone \u003d\u003d this.isDone;","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"AprupKale"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"AprupKale"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"AprupKale":102}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AprupKale"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AprupKale"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"AprupKale"},"content":" * Encapsulation for Todo properties.","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"AprupKale"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"AprupKale"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"AprupKale"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"AprupKale"},"content":"     * Constructs a Todo object.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"AprupKale"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"AprupKale"},"content":"     * @param description Description of the Todo.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"AprupKale"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"AprupKale"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"AprupKale"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"AprupKale"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"AprupKale"},"content":"     * Constructs a Todo object.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"AprupKale"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"AprupKale"},"content":"     * @param description Description of the Todo.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"AprupKale"},"content":"     * @param isDone Status of the Todo.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"AprupKale"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"AprupKale"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"AprupKale"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"AprupKale"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"AprupKale"},"content":"     * Returns text representation of todo for data file.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"AprupKale"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"AprupKale"},"content":"     * @return Text representation of Todo.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"AprupKale"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"AprupKale"},"content":"    public String getTextRepresentation() {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"AprupKale"},"content":"        return \"T | \" + super.getTextRepresentation();","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"AprupKale"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"AprupKale"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"AprupKale"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"AprupKale"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"AprupKale"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"AprupKale"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"AprupKale"},"content":"            return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"AprupKale"},"content":"        } else if (!(o instanceof Todo)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"AprupKale"},"content":"            return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"AprupKale"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"AprupKale"},"content":"            Todo todo \u003d (Todo) o;","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"AprupKale"},"content":"            return todo.description.equals(this.description)","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"AprupKale"},"content":"                    \u0026\u0026 todo.isDone \u003d\u003d this.isDone;","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"AprupKale"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"AprupKale"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"AprupKale":53}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AprupKale"},"content":"package duke.ui;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"AprupKale"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"AprupKale"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"AprupKale"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"AprupKale"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"AprupKale"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"AprupKale"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"AprupKale"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"AprupKale"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"AprupKale"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"AprupKale"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"AprupKale"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"AprupKale"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"AprupKale"},"content":"/**","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"AprupKale"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-11"},{"lineNumber":19,"author":{"gitId":"AprupKale"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"AprupKale"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"AprupKale"},"content":" */","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"AprupKale"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"AprupKale"},"content":"    @FXML","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"AprupKale"},"content":"    private Text dialog;","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"AprupKale"},"content":"    @FXML","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"AprupKale"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"AprupKale"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"AprupKale"},"content":"        try {","lastModifiedDate":"2023-09-11"},{"lineNumber":30,"author":{"gitId":"AprupKale"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-11"},{"lineNumber":31,"author":{"gitId":"AprupKale"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-11"},{"lineNumber":32,"author":{"gitId":"AprupKale"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-11"},{"lineNumber":33,"author":{"gitId":"AprupKale"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-11"},{"lineNumber":34,"author":{"gitId":"AprupKale"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-11"},{"lineNumber":35,"author":{"gitId":"AprupKale"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-11"},{"lineNumber":36,"author":{"gitId":"AprupKale"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":37,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":38,"author":{"gitId":"AprupKale"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-11"},{"lineNumber":39,"author":{"gitId":"AprupKale"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-11"},{"lineNumber":40,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":41,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":42,"author":{"gitId":"AprupKale"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":43,"author":{"gitId":"AprupKale"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-11"},{"lineNumber":44,"author":{"gitId":"AprupKale"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":45,"author":{"gitId":"AprupKale"},"content":"    private void flip() {","lastModifiedDate":"2023-09-11"},{"lineNumber":46,"author":{"gitId":"AprupKale"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-11"},{"lineNumber":47,"author":{"gitId":"AprupKale"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-11"},{"lineNumber":48,"author":{"gitId":"AprupKale"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-11"},{"lineNumber":49,"author":{"gitId":"AprupKale"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-11"},{"lineNumber":50,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":51,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":52,"author":{"gitId":"AprupKale"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-11"},{"lineNumber":53,"author":{"gitId":"AprupKale"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-11"},{"lineNumber":54,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":55,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":56,"author":{"gitId":"AprupKale"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-11"},{"lineNumber":57,"author":{"gitId":"AprupKale"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-11"},{"lineNumber":58,"author":{"gitId":"AprupKale"},"content":"        db.flip();","lastModifiedDate":"2023-09-11"},{"lineNumber":59,"author":{"gitId":"AprupKale"},"content":"        return db;","lastModifiedDate":"2023-09-11"},{"lineNumber":60,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":61,"author":{"gitId":"AprupKale"},"content":"}","lastModifiedDate":"2023-09-11"},{"lineNumber":62,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"AprupKale":62}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AprupKale"},"content":"package duke.ui;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"AprupKale"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"AprupKale"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"AprupKale"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"AprupKale"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"AprupKale"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"AprupKale"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"AprupKale"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"AprupKale"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"AprupKale"},"content":"/**","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"AprupKale"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"AprupKale"},"content":" */","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"AprupKale"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"AprupKale"},"content":"    @FXML","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"AprupKale"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-11"},{"lineNumber":19,"author":{"gitId":"AprupKale"},"content":"    @FXML","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"AprupKale"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"AprupKale"},"content":"    @FXML","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"AprupKale"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"AprupKale"},"content":"    @FXML","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"AprupKale"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"AprupKale"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"AprupKale"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"AprupKale"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaMax.jpeg\"));","lastModifiedDate":"2023-09-11"},{"lineNumber":30,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":31,"author":{"gitId":"AprupKale"},"content":"    @FXML","lastModifiedDate":"2023-09-11"},{"lineNumber":32,"author":{"gitId":"AprupKale"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-11"},{"lineNumber":33,"author":{"gitId":"AprupKale"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-11"},{"lineNumber":34,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":35,"author":{"gitId":"AprupKale"},"content":"        dialogContainer.getChildren().clear();","lastModifiedDate":"2023-09-11"},{"lineNumber":36,"author":{"gitId":"AprupKale"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-11"},{"lineNumber":37,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":38,"author":{"gitId":"AprupKale"},"content":"        String greeting \u003d Ui.greet();","lastModifiedDate":"2023-09-11"},{"lineNumber":39,"author":{"gitId":"AprupKale"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-11"},{"lineNumber":40,"author":{"gitId":"AprupKale"},"content":"                DialogBox.getDukeDialog(greeting, dukeImage)","lastModifiedDate":"2023-09-11"},{"lineNumber":41,"author":{"gitId":"AprupKale"},"content":"        );","lastModifiedDate":"2023-09-11"},{"lineNumber":42,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":43,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":44,"author":{"gitId":"AprupKale"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-11"},{"lineNumber":45,"author":{"gitId":"AprupKale"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-11"},{"lineNumber":46,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":47,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":48,"author":{"gitId":"AprupKale"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":49,"author":{"gitId":"AprupKale"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-11"},{"lineNumber":50,"author":{"gitId":"AprupKale"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-11"},{"lineNumber":51,"author":{"gitId":"AprupKale"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":52,"author":{"gitId":"AprupKale"},"content":"    @FXML","lastModifiedDate":"2023-09-11"},{"lineNumber":53,"author":{"gitId":"AprupKale"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-11"},{"lineNumber":54,"author":{"gitId":"AprupKale"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-11"},{"lineNumber":55,"author":{"gitId":"AprupKale"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-11"},{"lineNumber":56,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":57,"author":{"gitId":"AprupKale"},"content":"        if (response.equals(\"\")) {","lastModifiedDate":"2023-09-11"},{"lineNumber":58,"author":{"gitId":"AprupKale"},"content":"            response \u003d \"OOPS!!! Could not understand what you are saying\";","lastModifiedDate":"2023-09-11"},{"lineNumber":59,"author":{"gitId":"AprupKale"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":60,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":61,"author":{"gitId":"AprupKale"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-11"},{"lineNumber":62,"author":{"gitId":"AprupKale"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-11"},{"lineNumber":63,"author":{"gitId":"AprupKale"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-11"},{"lineNumber":64,"author":{"gitId":"AprupKale"},"content":"        );","lastModifiedDate":"2023-09-11"},{"lineNumber":65,"author":{"gitId":"AprupKale"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-11"},{"lineNumber":66,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":67,"author":{"gitId":"AprupKale"},"content":"        if (response.equals(Ui.exit())) {","lastModifiedDate":"2023-09-11"},{"lineNumber":68,"author":{"gitId":"AprupKale"},"content":"            Thread delayThread \u003d new Thread(() -\u003e {","lastModifiedDate":"2023-09-11"},{"lineNumber":69,"author":{"gitId":"AprupKale"},"content":"                try {","lastModifiedDate":"2023-09-11"},{"lineNumber":70,"author":{"gitId":"AprupKale"},"content":"                    Thread.sleep(1000);","lastModifiedDate":"2023-09-11"},{"lineNumber":71,"author":{"gitId":"AprupKale"},"content":"                } catch (InterruptedException e) {","lastModifiedDate":"2023-09-11"},{"lineNumber":72,"author":{"gitId":"AprupKale"},"content":"                    e.printStackTrace();","lastModifiedDate":"2023-09-11"},{"lineNumber":73,"author":{"gitId":"AprupKale"},"content":"                }","lastModifiedDate":"2023-09-11"},{"lineNumber":74,"author":{"gitId":"AprupKale"},"content":"                System.exit(0);","lastModifiedDate":"2023-09-11"},{"lineNumber":75,"author":{"gitId":"AprupKale"},"content":"            });","lastModifiedDate":"2023-09-11"},{"lineNumber":76,"author":{"gitId":"AprupKale"},"content":"            delayThread.start();","lastModifiedDate":"2023-09-11"},{"lineNumber":77,"author":{"gitId":"AprupKale"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":78,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":79,"author":{"gitId":"AprupKale"},"content":"}","lastModifiedDate":"2023-09-11"},{"lineNumber":80,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"AprupKale":80}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AprupKale"},"content":"package duke.ui;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AprupKale"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"AprupKale"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"AprupKale"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"AprupKale"},"content":" * Implementation for User Interface.","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"AprupKale"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"AprupKale"},"content":"public class Ui {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"AprupKale"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"AprupKale"},"content":"     * Returns greeting message.","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"AprupKale"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"AprupKale"},"content":"     * @return Greeting message.","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"AprupKale"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"AprupKale"},"content":"    public static String greet() {","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"AprupKale"},"content":"        return \"Hello! I\u0027m Max\\n\" + \"What can I do for you?\";","lastModifiedDate":"2023-09-11"},{"lineNumber":19,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"AprupKale"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"AprupKale"},"content":"     * Returns exit message.","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"AprupKale"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"AprupKale"},"content":"     * @return Exit message.","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"AprupKale"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"AprupKale"},"content":"    public static String exit() {","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"AprupKale"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"AprupKale"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"AprupKale"},"content":"     * Gets user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"AprupKale"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"AprupKale"},"content":"     * @return User input in String format.","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"AprupKale"},"content":"     * @throws DukeException If any exception is encountered.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"AprupKale"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"AprupKale"},"content":"    public static String getUserInput() throws DukeException {","lastModifiedDate":"2023-09-11"},{"lineNumber":37,"author":{"gitId":"AprupKale"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"AprupKale"},"content":"        String userInput \u003d sc.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"AprupKale"},"content":"        return userInput;","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"AprupKale"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"AprupKale"},"content":"     * Displays message to user.","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"AprupKale"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"AprupKale"},"content":"     * @param message Message to be displayed.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"AprupKale"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"AprupKale"},"content":"    public static void display(String message) {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"AprupKale"},"content":"        lines();","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"AprupKale"},"content":"        System.out.println(message);","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"AprupKale"},"content":"        lines();","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"AprupKale"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"AprupKale"},"content":"     * Draws horizontal lines.","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"AprupKale"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"AprupKale"},"content":"    public static void lines() {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"AprupKale"},"content":"        System.out.println(\"\");","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"AprupKale"},"content":"        for (int i \u003d 0; i \u003c 50; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"AprupKale"},"content":"            System.out.print(\"-\");","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"AprupKale"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"AprupKale"},"content":"        System.out.println(\"\");","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"AprupKale"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AprupKale":63}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"AprupKale"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"AprupKale"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"AprupKale"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"AprupKale"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"AprupKale"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"AprupKale"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"AprupKale"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"AprupKale"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"AprupKale"},"content":"        \u003cText fx:id\u003d\"dialog\" text\u003d\"Label\" wrappingWidth\u003d\"250\"/\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"AprupKale"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"AprupKale"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"AprupKale"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"AprupKale"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"AprupKale"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"AprupKale"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"AprupKale":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"AprupKale"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"AprupKale"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"AprupKale"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"AprupKale"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"AprupKale"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"AprupKale"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"AprupKale"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"AprupKale"},"content":"            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"AprupKale"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"AprupKale"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"AprupKale"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"AprupKale"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"AprupKale"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"AprupKale"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"AprupKale"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\"","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"AprupKale"},"content":"                    prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":19,"author":{"gitId":"AprupKale"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"AprupKale"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"AprupKale"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"AprupKale"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"AprupKale"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"AprupKale"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"AprupKale":24}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AprupKale"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"AprupKale"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"AprupKale"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"AprupKale"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"AprupKale"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"AprupKale"},"content":"import duke.exceptions.DukeParseException;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"AprupKale"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"AprupKale"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"AprupKale"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"AprupKale"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"AprupKale"},"content":"    private static final Parser PARSER \u003d new Parser();","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"AprupKale"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"AprupKale"},"content":"    public void parseTodo_validInput_expectedOutcome() {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"AprupKale"},"content":"        assertEquals(new Todo(\"read book\"), PARSER.parseTodo(\"todo read book\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"AprupKale"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"AprupKale"},"content":"    public void parseTodo_missingParameters_throwException() {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"AprupKale"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"AprupKale"},"content":"            assertEquals(new Todo(\"read book\"), PARSER.parseTodo(\"todo\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"AprupKale"},"content":"            fail();","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"AprupKale"},"content":"        } catch (DukeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"AprupKale"},"content":"            assertEquals(\"OOPS!!! Missing parameters in todo\", e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"AprupKale"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"AprupKale"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"AprupKale"},"content":"    public void parseDeadline_validInput_expectedOutcome() {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"AprupKale"},"content":"        assertEquals(new Deadline(\"return book\",","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"AprupKale"},"content":"                LocalDateTime.parse(\"01 Sep 2023 - 16:00\", Duke.TIME_FORMAT)),","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"AprupKale"},"content":"                PARSER.parseDeadline(\"deadline return book /by 01 Sep 2023 - 16:00\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"AprupKale"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"AprupKale"},"content":"    public void parseDeadline_missingParameters_throwException() {","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"AprupKale"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"AprupKale"},"content":"            assertEquals(new Deadline(\"return book\",","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"AprupKale"},"content":"                    LocalDateTime.parse(\"01 Sep 2023 - 16:00\", Duke.TIME_FORMAT)),","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"AprupKale"},"content":"                    PARSER.parseDeadline(\"deadline return book\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"AprupKale"},"content":"            fail();","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"AprupKale"},"content":"        } catch (DukeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"AprupKale"},"content":"            assertEquals(\"OOPS!!! Missing parameters in deadline\", e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"AprupKale"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"AprupKale"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"AprupKale"},"content":"    public void parseEvent_validInput_expectedOutcome() {","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"AprupKale"},"content":"        assertEquals(new Event(\"project meeting\",","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"AprupKale"},"content":"                LocalDateTime.parse(\"06 Aug 2023 - 14:00\", Duke.TIME_FORMAT),","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"AprupKale"},"content":"                LocalDateTime.parse(\"06 Aug 2023 - 16:00\", Duke.TIME_FORMAT)),","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"AprupKale"},"content":"                PARSER.parseEvent(\"event project meeting /from 06 Aug 2023 - 14:00 /to 06 Aug 2023 - 16:00\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"AprupKale"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"AprupKale"},"content":"    public void parseEvent_missingParameters_throwException() {","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"AprupKale"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"AprupKale"},"content":"            assertEquals(new Event(\"project meeting\",","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"AprupKale"},"content":"                    LocalDateTime.parse(\"06 Aug 2023 - 14:00\", Duke.TIME_FORMAT),","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"AprupKale"},"content":"                    LocalDateTime.parse(\"06 Aug 2023 - 16:00\", Duke.TIME_FORMAT)),","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"AprupKale"},"content":"                    PARSER.parseEvent(\"event project meeting /from 06 Aug 2023 - 14:00\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"AprupKale"},"content":"            fail();","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"AprupKale"},"content":"        } catch (DukeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"AprupKale"},"content":"            assertEquals(\"OOPS!!! Missing parameters in event\", e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"AprupKale"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"AprupKale"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"AprupKale":72}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AprupKale"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"AprupKale"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"AprupKale"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"AprupKale"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"AprupKale"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"AprupKale"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"AprupKale"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"AprupKale"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"AprupKale"},"content":"    private static final Todo TODO \u003d new Todo(\"read book\");","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"AprupKale"},"content":"    private static final Deadline DEADLINE \u003d new Deadline(\"return book\",","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"AprupKale"},"content":"            LocalDateTime.parse(\"01 Sep 2023 - 16:00\", Duke.TIME_FORMAT));","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"AprupKale"},"content":"    private static final Event EVENT \u003d new Event(\"project meeting\",","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"AprupKale"},"content":"            LocalDateTime.parse(\"06 Aug 2023 - 14:00\", Duke.TIME_FORMAT),","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"AprupKale"},"content":"            LocalDateTime.parse(\"06 Aug 2023 - 16:00\", Duke.TIME_FORMAT));","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"AprupKale"},"content":"    private static final TaskList TASK_LIST \u003d TaskList.of(TODO, DEADLINE, EVENT);","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"AprupKale"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"AprupKale"},"content":"    public void addToList_addTask_addSuccessfully() {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"AprupKale"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"AprupKale"},"content":"        taskList.addToList(TODO);","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"AprupKale"},"content":"        taskList.addToList(DEADLINE);","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"AprupKale"},"content":"        taskList.addToList(EVENT);","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"AprupKale"},"content":"        assertEquals(TASK_LIST, taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"AprupKale"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"AprupKale"},"content":"    public void getTaskAt_correctIndex_getSuccessfully() {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"AprupKale"},"content":"        assertEquals(TODO, TASK_LIST.getTaskAt(0));","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"AprupKale"},"content":"        assertEquals(DEADLINE, TASK_LIST.getTaskAt(1));","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"AprupKale"},"content":"        assertEquals(EVENT, TASK_LIST.getTaskAt(2));","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"AprupKale"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"AprupKale"},"content":"    public void deleteTaskAt_correctIndex_deleteSuccessfully() {","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"AprupKale"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"AprupKale"},"content":"        taskList.addToList(TODO);","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"AprupKale"},"content":"        taskList.addToList(DEADLINE);","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"AprupKale"},"content":"        taskList.addToList(EVENT);","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"AprupKale"},"content":"        taskList.addToList(new Todo(\"play tennis\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"AprupKale"},"content":"        taskList.deleteTaskAt(3);","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"AprupKale"},"content":"        assertEquals(TASK_LIST, taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"AprupKale"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"AprupKale"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"AprupKale"},"content":"    public void getNumberOfTasks() {","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"AprupKale"},"content":"        assertEquals(3, TASK_LIST.getNumberOfTasks());","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"AprupKale"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"AprupKale"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"AprupKale":53}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AprupKale"},"content":"todo read book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"AprupKale"},"content":"deadline return book /by 06 Jun 2023 - 1600","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AprupKale"},"content":"event project meeting /from 06 Aug 2023 - 1400 /to 06 Aug 2023 - 1600","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"AprupKale"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"AprupKale"},"content":"todo join sports club","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"AprupKale"},"content":"mark 4","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"AprupKale"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"AprupKale"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"AprupKale"},"content":"deadline return another book /by 02 Sep 2023 - 1600","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"AprupKale"},"content":"event another project meeting /from 30 Aug 2023 - 2100 /to 30 Aug 2023 - 2200","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"AprupKale"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"AprupKale":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"AprupKale"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"AprupKale":1,"-":20}}]
