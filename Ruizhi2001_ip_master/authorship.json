[{"path":"src/main/java/BotException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruizhi2001"},"content":"public class BotException extends Exception {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Ruizhi2001"},"content":"    public BotException(String errorMessage) {","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Ruizhi2001"},"content":"        super(errorMessage);","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Ruizhi2001"},"content":"     * This method coverts the value of the BotException into a String type.","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Ruizhi2001"},"content":"     * @return a String representation of the Exception with its error message.","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Ruizhi2001"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Ruizhi2001"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Ruizhi2001"},"content":"        return \"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"Ruizhi2001"},"content":"                super.getMessage() +","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"Ruizhi2001"},"content":"                \"\\n____________________________________________________________\\n\";","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"Ruizhi2001"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Ruizhi2001":16}},{"path":"src/main/java/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruizhi2001"},"content":"public class Deadlines  extends Task{","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Ruizhi2001"},"content":"    protected String by;","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Ruizhi2001"},"content":"     * A constructor for the public class Deadlines.","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Ruizhi2001"},"content":"     * @param description contains the description of the deadline.","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Ruizhi2001"},"content":"     * @param by contains the time which the deadline must be completed by.","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Ruizhi2001"},"content":"    public Deadlines(String description, String by) {","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Ruizhi2001"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Ruizhi2001"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Ruizhi2001"},"content":"     * This method converts the value of the deadline into a String type.","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Ruizhi2001"},"content":"     * @return the String representation of the deadline with its type, completion status and completion time.","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Ruizhi2001"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"Ruizhi2001"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"Ruizhi2001"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"Ruizhi2001"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Ruizhi2001":22}},{"path":"src/main/java/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruizhi2001"},"content":"public class Events extends Task{","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Ruizhi2001"},"content":"    protected String from;","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Ruizhi2001"},"content":"    protected String to;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Ruizhi2001"},"content":"     * A constructor the public Events class","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Ruizhi2001"},"content":"     * @param description the description of the event.","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Ruizhi2001"},"content":"     * @param from the beginning time of the event.","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Ruizhi2001"},"content":"     * @param to the ending time of the event.","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Ruizhi2001"},"content":"    public Events(String description, String from, String to) {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Ruizhi2001"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"Ruizhi2001"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"Ruizhi2001"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Ruizhi2001"},"content":"     * This method converts the value of an Event into a String type.","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"Ruizhi2001"},"content":"     * @return the String representation of the event with its type, completion status,","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"Ruizhi2001"},"content":"     * beginning time and ending time.","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"Ruizhi2001"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"Ruizhi2001"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"Ruizhi2001"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"Ruizhi2001"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Ruizhi2001":26}},{"path":"src/main/java/Ruiz.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruizhi2001"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Ruizhi2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Ruizhi2001"},"content":"public class Ruiz {","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Ruizhi2001"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Ruizhi2001"},"content":"     * This method prints out the list of tasks currently","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Ruizhi2001"},"content":"    public void getTasks() {","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Ruizhi2001"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Ruizhi2001"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"Ruizhi2001"},"content":"            System.out.println((i + 1) + \". \" + this.tasks.get(i).toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"Ruizhi2001"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"Ruizhi2001"},"content":"     * This method marks the given task in the input.","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"Ruizhi2001"},"content":"     * @param input The string that consists of the keyWord \"mark\" and task index being input by the user.","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"Ruizhi2001"},"content":"     * @throws BotException if the input is not a valid one.","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"Ruizhi2001"},"content":"    public void markTask(String input) throws BotException {","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"Ruizhi2001"},"content":"        if (input.split(\" \").length \u003c 2) {","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"Ruizhi2001"},"content":"            throw new BotException(\"OOPS!!! The index of a task cannot be empty.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"Ruizhi2001"},"content":"        try {","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"Ruizhi2001"},"content":"            int taskIndex \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"Ruizhi2001"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"Ruizhi2001"},"content":"            throw new BotException(\"OOPS!!! The index of a task has to be an integer.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"Ruizhi2001"},"content":"        int taskIndex \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"Ruizhi2001"},"content":"        if (taskIndex \u003e\u003d 0 \u0026\u0026 this.tasks.size() \u003e taskIndex) {","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"Ruizhi2001"},"content":"            Task task \u003d this.tasks.get(taskIndex);","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"Ruizhi2001"},"content":"            task.mark();","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"Ruizhi2001"},"content":"            System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"Ruizhi2001"},"content":"                    \"Nice! I\u0027ve marked this task as done\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"Ruizhi2001"},"content":"                    task +","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"Ruizhi2001"},"content":"                    \"\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"Ruizhi2001"},"content":"                    \"____________________________________________________________\");","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"Ruizhi2001"},"content":"        } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"Ruizhi2001"},"content":"            throw new BotException(\"This task does not exist!\");","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"Ruizhi2001"},"content":"     * This method unmarks the specified task in the string input.","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"Ruizhi2001"},"content":"     * @param input The string that consists of the keyWord \"unmark\" and task index being input by the user.","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"Ruizhi2001"},"content":"     * @throws BotException if the input is not a valid one.","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"Ruizhi2001"},"content":"    public void unmarkTask(String input) throws BotException {","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"Ruizhi2001"},"content":"        if (input.split(\" \").length \u003c 2) {","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"Ruizhi2001"},"content":"            throw new BotException(\"OOPS!!! The index of a task cannot be empty.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"Ruizhi2001"},"content":"        try {","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"Ruizhi2001"},"content":"            int taskIndex \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"Ruizhi2001"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"Ruizhi2001"},"content":"            throw new BotException(\"OOPS!!! The index of a task has to be an integer.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"Ruizhi2001"},"content":"        int taskIndex \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"Ruizhi2001"},"content":"        if (taskIndex \u003e\u003d 0 \u0026\u0026 this.tasks.size() \u003e taskIndex) {","lastModifiedDate":"2023-08-22"},{"lineNumber":62,"author":{"gitId":"Ruizhi2001"},"content":"            Task task \u003d this.tasks.get(taskIndex);","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"Ruizhi2001"},"content":"            task.unmark();","lastModifiedDate":"2023-08-22"},{"lineNumber":64,"author":{"gitId":"Ruizhi2001"},"content":"            System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":65,"author":{"gitId":"Ruizhi2001"},"content":"                    \"OK, I\u0027ve marked this task as not done yet\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":66,"author":{"gitId":"Ruizhi2001"},"content":"                    task +","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"Ruizhi2001"},"content":"                    \"\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":68,"author":{"gitId":"Ruizhi2001"},"content":"                    \"____________________________________________________________\\n\");","lastModifiedDate":"2023-08-22"},{"lineNumber":69,"author":{"gitId":"Ruizhi2001"},"content":"        } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":70,"author":{"gitId":"Ruizhi2001"},"content":"            throw new BotException(\"This task does not exist!\");","lastModifiedDate":"2023-08-22"},{"lineNumber":71,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":72,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":73,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"Ruizhi2001"},"content":"     * This method deletes the specified task from its index from the list of tasks.","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"Ruizhi2001"},"content":"     * @param input The string that contains the keyWord \"delete\" and the index of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"Ruizhi2001"},"content":"     * @throws BotException if the input of the user is not a valid one.","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"Ruizhi2001"},"content":"    public void deleteTask(String input) throws BotException {","lastModifiedDate":"2023-08-22"},{"lineNumber":80,"author":{"gitId":"Ruizhi2001"},"content":"        if (input.split(\" \").length \u003c 2) {","lastModifiedDate":"2023-08-22"},{"lineNumber":81,"author":{"gitId":"Ruizhi2001"},"content":"            throw new BotException(\"OOPS!!! The index of a task cannot be empty.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":82,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":83,"author":{"gitId":"Ruizhi2001"},"content":"        try {","lastModifiedDate":"2023-08-22"},{"lineNumber":84,"author":{"gitId":"Ruizhi2001"},"content":"            int taskIndex \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2023-08-22"},{"lineNumber":85,"author":{"gitId":"Ruizhi2001"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":86,"author":{"gitId":"Ruizhi2001"},"content":"            throw new BotException(\"OOPS!!! The index of a task has to be an integer.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":87,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":88,"author":{"gitId":"Ruizhi2001"},"content":"        int taskIndex \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2023-08-22"},{"lineNumber":89,"author":{"gitId":"Ruizhi2001"},"content":"        if (taskIndex \u003e\u003d 0 \u0026\u0026 this.tasks.size() \u003e taskIndex) {","lastModifiedDate":"2023-08-22"},{"lineNumber":90,"author":{"gitId":"Ruizhi2001"},"content":"            Task task \u003d this.tasks.get(taskIndex);","lastModifiedDate":"2023-08-22"},{"lineNumber":91,"author":{"gitId":"Ruizhi2001"},"content":"            System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"Ruizhi2001"},"content":"                    \"Noted. I\u0027ve removed this task:\\n\" + task);","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"Ruizhi2001"},"content":"            tasks.remove(taskIndex);","lastModifiedDate":"2023-08-22"},{"lineNumber":94,"author":{"gitId":"Ruizhi2001"},"content":"            System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"Ruizhi2001"},"content":"                    \"____________________________________________________________\");","lastModifiedDate":"2023-08-22"},{"lineNumber":96,"author":{"gitId":"Ruizhi2001"},"content":"        } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":97,"author":{"gitId":"Ruizhi2001"},"content":"            throw new BotException(\"This task does not exist!\");","lastModifiedDate":"2023-08-22"},{"lineNumber":98,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":99,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":100,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":101,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"Ruizhi2001"},"content":"     * This method creates a todo and adds it to the list of tasks.","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"Ruizhi2001"},"content":"     * @param input contains the keyWord \"todo\" and the description of the todo.","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"Ruizhi2001"},"content":"     * @throws BotException if the input is not in the format of a valid todo.","lastModifiedDate":"2023-08-24"},{"lineNumber":105,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":106,"author":{"gitId":"Ruizhi2001"},"content":"    public void addTodo(String input) throws BotException {","lastModifiedDate":"2023-08-22"},{"lineNumber":107,"author":{"gitId":"Ruizhi2001"},"content":"        if (input.split(\" \", 2).length \u003c\u003d 1) {","lastModifiedDate":"2023-08-22"},{"lineNumber":108,"author":{"gitId":"Ruizhi2001"},"content":"            throw new BotException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":109,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":110,"author":{"gitId":"Ruizhi2001"},"content":"        String content \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-08-22"},{"lineNumber":111,"author":{"gitId":"Ruizhi2001"},"content":"        Task temp \u003d new ToDos(content);","lastModifiedDate":"2023-08-22"},{"lineNumber":112,"author":{"gitId":"Ruizhi2001"},"content":"        this.tasks.add(temp);","lastModifiedDate":"2023-08-22"},{"lineNumber":113,"author":{"gitId":"Ruizhi2001"},"content":"        System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":114,"author":{"gitId":"Ruizhi2001"},"content":"                \"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":115,"author":{"gitId":"Ruizhi2001"},"content":"                temp +","lastModifiedDate":"2023-08-22"},{"lineNumber":116,"author":{"gitId":"Ruizhi2001"},"content":"                \"\\nNow you have \" + tasks.size() + \" tasks in the list.\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":117,"author":{"gitId":"Ruizhi2001"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2023-08-22"},{"lineNumber":118,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":119,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":120,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":121,"author":{"gitId":"Ruizhi2001"},"content":"     * This method creates a deadline and adds it to the list of tasks.","lastModifiedDate":"2023-08-24"},{"lineNumber":122,"author":{"gitId":"Ruizhi2001"},"content":"     * @param input contains the keyWord \"deadline\" and the description of the deadline","lastModifiedDate":"2023-08-24"},{"lineNumber":123,"author":{"gitId":"Ruizhi2001"},"content":"     *              with the time it needs to be completed by.","lastModifiedDate":"2023-08-24"},{"lineNumber":124,"author":{"gitId":"Ruizhi2001"},"content":"     * @throws BotException if the input is not in the valid format of a deadline.","lastModifiedDate":"2023-08-24"},{"lineNumber":125,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":126,"author":{"gitId":"Ruizhi2001"},"content":"    public void addDeadline(String input) throws BotException {","lastModifiedDate":"2023-08-22"},{"lineNumber":127,"author":{"gitId":"Ruizhi2001"},"content":"        if (input.split(\"/by\", 2).length \u003c\u003d 1) {","lastModifiedDate":"2023-08-22"},{"lineNumber":128,"author":{"gitId":"Ruizhi2001"},"content":"            throw new BotException(\"OOPS!!! The description the deadline is incomplete\");","lastModifiedDate":"2023-08-22"},{"lineNumber":129,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":130,"author":{"gitId":"Ruizhi2001"},"content":"        String content \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-08-22"},{"lineNumber":131,"author":{"gitId":"Ruizhi2001"},"content":"        String description \u003d content.split(\" /by \")[0];","lastModifiedDate":"2023-08-22"},{"lineNumber":132,"author":{"gitId":"Ruizhi2001"},"content":"        String by \u003d content.split(\"/by \")[1];","lastModifiedDate":"2023-08-22"},{"lineNumber":133,"author":{"gitId":"Ruizhi2001"},"content":"        Task temp \u003d new Deadlines(description, by);","lastModifiedDate":"2023-08-22"},{"lineNumber":134,"author":{"gitId":"Ruizhi2001"},"content":"        this.tasks.add(temp);","lastModifiedDate":"2023-08-22"},{"lineNumber":135,"author":{"gitId":"Ruizhi2001"},"content":"        System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":136,"author":{"gitId":"Ruizhi2001"},"content":"                \"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":137,"author":{"gitId":"Ruizhi2001"},"content":"                temp +","lastModifiedDate":"2023-08-22"},{"lineNumber":138,"author":{"gitId":"Ruizhi2001"},"content":"                \"\\nNow you have \" + tasks.size() + \" tasks in the list.\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":139,"author":{"gitId":"Ruizhi2001"},"content":"                \"____________________________________________________________\"","lastModifiedDate":"2023-08-22"},{"lineNumber":140,"author":{"gitId":"Ruizhi2001"},"content":"        );","lastModifiedDate":"2023-08-22"},{"lineNumber":141,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":142,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":143,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":144,"author":{"gitId":"Ruizhi2001"},"content":"     * This method creates an event and adds it to the list of tasks.","lastModifiedDate":"2023-08-24"},{"lineNumber":145,"author":{"gitId":"Ruizhi2001"},"content":"     * @param input contains the keyWord \"event\" and the description of the event","lastModifiedDate":"2023-08-24"},{"lineNumber":146,"author":{"gitId":"Ruizhi2001"},"content":"     *              with the time it takes place from and ends by.","lastModifiedDate":"2023-08-24"},{"lineNumber":147,"author":{"gitId":"Ruizhi2001"},"content":"     * @throws BotException if the input is not in the form a valid event.","lastModifiedDate":"2023-08-24"},{"lineNumber":148,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":149,"author":{"gitId":"Ruizhi2001"},"content":"    public void addEvent(String input) throws BotException {","lastModifiedDate":"2023-08-22"},{"lineNumber":150,"author":{"gitId":"Ruizhi2001"},"content":"        if (input.split(\"/\").length \u003c\u003d 2) {","lastModifiedDate":"2023-08-24"},{"lineNumber":151,"author":{"gitId":"Ruizhi2001"},"content":"            throw new BotException(\"OOPS!!! The description the event is incomplete.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":152,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":153,"author":{"gitId":"Ruizhi2001"},"content":"        String content \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-08-22"},{"lineNumber":154,"author":{"gitId":"Ruizhi2001"},"content":"        String description \u003d content.split(\" /from\")[0];","lastModifiedDate":"2023-08-22"},{"lineNumber":155,"author":{"gitId":"Ruizhi2001"},"content":"        String from \u003d content.split(\" /from \")[1].split(\" /\")[0];","lastModifiedDate":"2023-08-22"},{"lineNumber":156,"author":{"gitId":"Ruizhi2001"},"content":"        String to \u003d content.split(\" /from \")[1].split(\"/to \")[1];","lastModifiedDate":"2023-08-22"},{"lineNumber":157,"author":{"gitId":"Ruizhi2001"},"content":"        Task temp \u003d new Events(description, from, to);","lastModifiedDate":"2023-08-22"},{"lineNumber":158,"author":{"gitId":"Ruizhi2001"},"content":"        this.tasks.add(temp);","lastModifiedDate":"2023-08-22"},{"lineNumber":159,"author":{"gitId":"Ruizhi2001"},"content":"        System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":160,"author":{"gitId":"Ruizhi2001"},"content":"                \"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":161,"author":{"gitId":"Ruizhi2001"},"content":"                temp +","lastModifiedDate":"2023-08-22"},{"lineNumber":162,"author":{"gitId":"Ruizhi2001"},"content":"                \"\\nNow you have \" + tasks.size() + \" tasks in the list.\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":163,"author":{"gitId":"Ruizhi2001"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2023-08-22"},{"lineNumber":164,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":165,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":166,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":167,"author":{"gitId":"Ruizhi2001"},"content":"     * This method prints the greeting message of the bot.","lastModifiedDate":"2023-08-24"},{"lineNumber":168,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":169,"author":{"gitId":"Ruizhi2001"},"content":"    public void greet() {","lastModifiedDate":"2023-08-22"},{"lineNumber":170,"author":{"gitId":"Ruizhi2001"},"content":"        String greet \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":171,"author":{"gitId":"Ruizhi2001"},"content":"                \" Hello! I\u0027m Ruiz\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":172,"author":{"gitId":"Ruizhi2001"},"content":"                \" What can I do for you?\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":173,"author":{"gitId":"Ruizhi2001"},"content":"                \"____________________________________________________________\";","lastModifiedDate":"2023-08-22"},{"lineNumber":174,"author":{"gitId":"Ruizhi2001"},"content":"        System.out.println(greet);","lastModifiedDate":"2023-08-22"},{"lineNumber":175,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":176,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":177,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":178,"author":{"gitId":"Ruizhi2001"},"content":"     * This method prints the goodbye message of the bot.","lastModifiedDate":"2023-08-24"},{"lineNumber":179,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":180,"author":{"gitId":"Ruizhi2001"},"content":"    public void bye() {","lastModifiedDate":"2023-08-22"},{"lineNumber":181,"author":{"gitId":"Ruizhi2001"},"content":"        String bye \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":182,"author":{"gitId":"Ruizhi2001"},"content":"                \"Bye! Comeback soon!\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":183,"author":{"gitId":"Ruizhi2001"},"content":"                \"____________________________________________________________\";","lastModifiedDate":"2023-08-22"},{"lineNumber":184,"author":{"gitId":"Ruizhi2001"},"content":"        System.out.println(bye);","lastModifiedDate":"2023-08-22"},{"lineNumber":185,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":186,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":187,"author":{"gitId":"Ruizhi2001"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-22"},{"lineNumber":188,"author":{"gitId":"Ruizhi2001"},"content":"        Scanner inputObj \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-22"},{"lineNumber":189,"author":{"gitId":"Ruizhi2001"},"content":"        Ruiz bot \u003d new Ruiz();","lastModifiedDate":"2023-08-22"},{"lineNumber":190,"author":{"gitId":"Ruizhi2001"},"content":"        bot.greet();","lastModifiedDate":"2023-08-22"},{"lineNumber":191,"author":{"gitId":"Ruizhi2001"},"content":"        while (true) {","lastModifiedDate":"2023-08-22"},{"lineNumber":192,"author":{"gitId":"Ruizhi2001"},"content":"            try {","lastModifiedDate":"2023-08-22"},{"lineNumber":193,"author":{"gitId":"Ruizhi2001"},"content":"                String input \u003d inputObj.nextLine();","lastModifiedDate":"2023-08-22"},{"lineNumber":194,"author":{"gitId":"Ruizhi2001"},"content":"                String keyWord \u003d input.split(\" \")[0];","lastModifiedDate":"2023-08-22"},{"lineNumber":195,"author":{"gitId":"Ruizhi2001"},"content":"                switch (keyWord) {","lastModifiedDate":"2023-08-22"},{"lineNumber":196,"author":{"gitId":"Ruizhi2001"},"content":"                    case \"bye\":","lastModifiedDate":"2023-08-22"},{"lineNumber":197,"author":{"gitId":"Ruizhi2001"},"content":"                        bot.bye();","lastModifiedDate":"2023-08-22"},{"lineNumber":198,"author":{"gitId":"Ruizhi2001"},"content":"                        return;","lastModifiedDate":"2023-08-22"},{"lineNumber":199,"author":{"gitId":"Ruizhi2001"},"content":"                    case \"list\":","lastModifiedDate":"2023-08-22"},{"lineNumber":200,"author":{"gitId":"Ruizhi2001"},"content":"                        bot.getTasks();","lastModifiedDate":"2023-08-22"},{"lineNumber":201,"author":{"gitId":"Ruizhi2001"},"content":"                        break;","lastModifiedDate":"2023-08-22"},{"lineNumber":202,"author":{"gitId":"Ruizhi2001"},"content":"                    case \"mark\":","lastModifiedDate":"2023-08-22"},{"lineNumber":203,"author":{"gitId":"Ruizhi2001"},"content":"                        bot.markTask(input);","lastModifiedDate":"2023-08-22"},{"lineNumber":204,"author":{"gitId":"Ruizhi2001"},"content":"                        break;","lastModifiedDate":"2023-08-22"},{"lineNumber":205,"author":{"gitId":"Ruizhi2001"},"content":"                    case \"unmark\":","lastModifiedDate":"2023-08-22"},{"lineNumber":206,"author":{"gitId":"Ruizhi2001"},"content":"                        bot.unmarkTask(input);","lastModifiedDate":"2023-08-22"},{"lineNumber":207,"author":{"gitId":"Ruizhi2001"},"content":"                        break;","lastModifiedDate":"2023-08-22"},{"lineNumber":208,"author":{"gitId":"Ruizhi2001"},"content":"                    case \"delete\":","lastModifiedDate":"2023-08-22"},{"lineNumber":209,"author":{"gitId":"Ruizhi2001"},"content":"                        bot.deleteTask(input);","lastModifiedDate":"2023-08-22"},{"lineNumber":210,"author":{"gitId":"Ruizhi2001"},"content":"                        break;","lastModifiedDate":"2023-08-22"},{"lineNumber":211,"author":{"gitId":"Ruizhi2001"},"content":"                    case \"deadline\":","lastModifiedDate":"2023-08-22"},{"lineNumber":212,"author":{"gitId":"Ruizhi2001"},"content":"                        bot.addDeadline(input);","lastModifiedDate":"2023-08-22"},{"lineNumber":213,"author":{"gitId":"Ruizhi2001"},"content":"                        break;","lastModifiedDate":"2023-08-22"},{"lineNumber":214,"author":{"gitId":"Ruizhi2001"},"content":"                    case \"todo\":","lastModifiedDate":"2023-08-22"},{"lineNumber":215,"author":{"gitId":"Ruizhi2001"},"content":"                        bot.addTodo(input);","lastModifiedDate":"2023-08-22"},{"lineNumber":216,"author":{"gitId":"Ruizhi2001"},"content":"                        break;","lastModifiedDate":"2023-08-22"},{"lineNumber":217,"author":{"gitId":"Ruizhi2001"},"content":"                    case \"event\":","lastModifiedDate":"2023-08-22"},{"lineNumber":218,"author":{"gitId":"Ruizhi2001"},"content":"                        bot.addEvent(input);","lastModifiedDate":"2023-08-22"},{"lineNumber":219,"author":{"gitId":"Ruizhi2001"},"content":"                        break;","lastModifiedDate":"2023-08-22"},{"lineNumber":220,"author":{"gitId":"Ruizhi2001"},"content":"                    default:","lastModifiedDate":"2023-08-22"},{"lineNumber":221,"author":{"gitId":"Ruizhi2001"},"content":"                        throw new BotException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-22"},{"lineNumber":222,"author":{"gitId":"Ruizhi2001"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":223,"author":{"gitId":"Ruizhi2001"},"content":"            } catch (BotException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":224,"author":{"gitId":"Ruizhi2001"},"content":"                System.out.println(e);","lastModifiedDate":"2023-08-22"},{"lineNumber":225,"author":{"gitId":"Ruizhi2001"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":226,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":227,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":228,"author":{"gitId":"Ruizhi2001"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Ruizhi2001":228}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruizhi2001"},"content":"public class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Ruizhi2001"},"content":"    private boolean completed;","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Ruizhi2001"},"content":"    private String description, type;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Ruizhi2001"},"content":"     * A constructor for the public Task class.","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Ruizhi2001"},"content":"     * @param description contains the description of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Ruizhi2001"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Ruizhi2001"},"content":"        this.completed \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Ruizhi2001"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Ruizhi2001"},"content":"     * Marks the current task.","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Ruizhi2001"},"content":"    public void mark() {","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"Ruizhi2001"},"content":"        this.completed \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"Ruizhi2001"},"content":"     * Unmarks the current task.","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"Ruizhi2001"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"Ruizhi2001"},"content":"        this.completed \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"Ruizhi2001"},"content":"     * This method converts the value of the task into a String value.","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"Ruizhi2001"},"content":"     * @return String representation of the task with its completion status.","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"Ruizhi2001"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"Ruizhi2001"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"Ruizhi2001"},"content":"        String mark \u003d \"[ ]\";","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"Ruizhi2001"},"content":"        if (this.completed) {","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"Ruizhi2001"},"content":"            mark \u003d \"[X]\";","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"Ruizhi2001"},"content":"        return mark + \" \" + description;","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"Ruizhi2001"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Ruizhi2001":40}},{"path":"src/main/java/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruizhi2001"},"content":"public class ToDos extends Task{","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Ruizhi2001"},"content":"     * A constructor for the public ToDos class.","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Ruizhi2001"},"content":"     * @param description contains the description of the ToDo","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Ruizhi2001"},"content":"    public ToDos(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Ruizhi2001"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Ruizhi2001"},"content":"     * This method converts the value of an Event into a String type.","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Ruizhi2001"},"content":"     * @return the String representation of the ToDo with its type and completion status.","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Ruizhi2001"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"Ruizhi2001"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"Ruizhi2001"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"Ruizhi2001"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Ruizhi2001":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Ruizhi2001"},"content":"todo read book","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Ruizhi2001"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Ruizhi2001"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Ruizhi2001"},"content":"todo join sports club","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Ruizhi2001"},"content":"mark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Ruizhi2001"},"content":"mark 4","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Ruizhi2001"},"content":"todo borrow book","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Ruizhi2001"},"content":"delete 1","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Ruizhi2001"},"content":"bye","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Ruizhi2001":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Ruizhi2001"},"content":"java -classpath ..\\bin Ruiz \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Ruizhi2001":2,"-":20}}]
