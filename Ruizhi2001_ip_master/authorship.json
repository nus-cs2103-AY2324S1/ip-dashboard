[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"Ruizhi2001"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"Ruizhi2001"},"content":"}","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"Ruizhi2001"},"content":"checkstyle {","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"Ruizhi2001"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"Ruizhi2001"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"Ruizhi2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"Ruizhi2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"Ruizhi2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"Ruizhi2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"Ruizhi2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"Ruizhi2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"Ruizhi2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"Ruizhi2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"Ruizhi2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"Ruizhi2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"Ruizhi2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"Ruizhi2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"Ruizhi2001"},"content":"    mainClass.set(\"ruiz.ui.Launcher\")","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"Ruizhi2001"},"content":"    archiveFileName\u003d \"ruiz.jar\"","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Ruizhi2001"},"content":"    archiveBaseName \u003d \"ruiz\"","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Ruizhi2001":23,"-":40}},{"path":"src/main/java/ruiz/Ruiz.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruizhi2001"},"content":"package ruiz;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Ruizhi2001"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Ruizhi2001"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Ruizhi2001"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Ruizhi2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Ruizhi2001"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"Ruizhi2001"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"Ruizhi2001"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"Ruizhi2001"},"content":"import ruiz.command.Command;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"Ruizhi2001"},"content":"import ruiz.exception.BotException;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"Ruizhi2001"},"content":"import ruiz.task.Task;","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"Ruizhi2001"},"content":"import ruiz.task.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"Ruizhi2001"},"content":"import ruiz.ui.Ui;","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"Ruizhi2001"},"content":"import ruiz.utils.Parser;","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"Ruizhi2001"},"content":"import ruiz.utils.Storage;","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"Ruizhi2001"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Ruizhi2001"},"content":" * Ruiz is a task management chatbot.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Ruizhi2001"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Ruizhi2001"},"content":"public class Ruiz {","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"Ruizhi2001"},"content":"    private static String filePath \u003d \"tasks.txt\";","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"Ruizhi2001"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Ruizhi2001"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Ruizhi2001"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Ruizhi2001"},"content":"    private Parser parser;","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Ruizhi2001"},"content":"     * Constructor for the Ruiz class.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Ruizhi2001"},"content":"    public Ruiz() {","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"Ruizhi2001"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"Ruizhi2001"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"Ruizhi2001"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"Ruizhi2001"},"content":"        try {","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"Ruizhi2001"},"content":"            tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"Ruizhi2001"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"Ruizhi2001"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Ruizhi2001"},"content":"     * Runs the chatbot.","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Ruizhi2001"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"Ruizhi2001"},"content":"        while (true) {","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"Ruizhi2001"},"content":"            String message \u003d \"\";","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"Ruizhi2001"},"content":"            try {","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"Ruizhi2001"},"content":"                Command command \u003d parser.getCommand(input);","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"Ruizhi2001"},"content":"                switch (command) {","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"Ruizhi2001"},"content":"                case BYE:","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"Ruizhi2001"},"content":"                    PauseTransition delay \u003d new PauseTransition(Duration.seconds(1));","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"Ruizhi2001"},"content":"                    delay.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"Ruizhi2001"},"content":"                    delay.play();","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"Ruizhi2001"},"content":"                    return ui.printBye();","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"Ruizhi2001"},"content":"                case LIST:","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"Ruizhi2001"},"content":"                    ArrayList\u003cTask\u003e taskList \u003d this.tasks.getTaskList();","lastModifiedDate":"2023-09-15"},{"lineNumber":59,"author":{"gitId":"Ruizhi2001"},"content":"                    message \u003d ui.getTasks(taskList);","lastModifiedDate":"2023-09-15"},{"lineNumber":60,"author":{"gitId":"Ruizhi2001"},"content":"                    break;","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"Ruizhi2001"},"content":"                case MARK:","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"Ruizhi2001"},"content":"                    message \u003d this.tasks.markTask(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"Ruizhi2001"},"content":"                    break;","lastModifiedDate":"2023-08-22"},{"lineNumber":64,"author":{"gitId":"Ruizhi2001"},"content":"                case UNMARK:","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"Ruizhi2001"},"content":"                    message \u003d this.tasks.unmarkTask(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":66,"author":{"gitId":"Ruizhi2001"},"content":"                    break;","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"Ruizhi2001"},"content":"                case DELETE:","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"Ruizhi2001"},"content":"                    message \u003d this.tasks.deleteTask(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":69,"author":{"gitId":"Ruizhi2001"},"content":"                    break;","lastModifiedDate":"2023-08-22"},{"lineNumber":70,"author":{"gitId":"Ruizhi2001"},"content":"                case DEADLINE:","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"Ruizhi2001"},"content":"                    message \u003d this.tasks.addDeadline(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":72,"author":{"gitId":"Ruizhi2001"},"content":"                    break;","lastModifiedDate":"2023-08-22"},{"lineNumber":73,"author":{"gitId":"Ruizhi2001"},"content":"                case TODO:","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"Ruizhi2001"},"content":"                    message \u003d this.tasks.addTodo(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":75,"author":{"gitId":"Ruizhi2001"},"content":"                    break;","lastModifiedDate":"2023-08-22"},{"lineNumber":76,"author":{"gitId":"Ruizhi2001"},"content":"                case EVENT:","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"Ruizhi2001"},"content":"                    message \u003d this.tasks.addEvent(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":78,"author":{"gitId":"Ruizhi2001"},"content":"                    break;","lastModifiedDate":"2023-08-22"},{"lineNumber":79,"author":{"gitId":"Ruizhi2001"},"content":"                case FIND:","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"Ruizhi2001"},"content":"                    message \u003d this.tasks.findTasksWithKeyword(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":81,"author":{"gitId":"Ruizhi2001"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"Ruizhi2001"},"content":"                default:","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"Ruizhi2001"},"content":"                    throw new BotException(ui.botErrorMsg());","lastModifiedDate":"2023-09-12"},{"lineNumber":84,"author":{"gitId":"Ruizhi2001"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":85,"author":{"gitId":"Ruizhi2001"},"content":"                this.storage.saveTasks(this.tasks.getTaskList());","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"Ruizhi2001"},"content":"            } catch (BotException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":87,"author":{"gitId":"Ruizhi2001"},"content":"                message \u003d e.getMessage();","lastModifiedDate":"2023-09-12"},{"lineNumber":88,"author":{"gitId":"Ruizhi2001"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"Ruizhi2001"},"content":"                message \u003d ui.unableToSaveTask();","lastModifiedDate":"2023-09-08"},{"lineNumber":90,"author":{"gitId":"Ruizhi2001"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"Ruizhi2001"},"content":"                message \u003d ui.wrongFormat();","lastModifiedDate":"2023-09-08"},{"lineNumber":92,"author":{"gitId":"Ruizhi2001"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":93,"author":{"gitId":"Ruizhi2001"},"content":"            assert !message.isEmpty() : \"message should not be empty\";","lastModifiedDate":"2023-09-13"},{"lineNumber":94,"author":{"gitId":"Ruizhi2001"},"content":"            return message;","lastModifiedDate":"2023-09-08"},{"lineNumber":95,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":96,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":97,"author":{"gitId":"Ruizhi2001"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Ruizhi2001":97}},{"path":"src/main/java/ruiz/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruizhi2001"},"content":"package ruiz.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Ruizhi2001"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Ruizhi2001"},"content":" * Contains all the valid commands.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Ruizhi2001"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Ruizhi2001"},"content":"public enum Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Ruizhi2001"},"content":"    BYE, LIST, MARK, UNMARK, DELETE, DEADLINE, TODO, EVENT, UNKNOWN, FIND","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Ruizhi2001"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Ruizhi2001":8}},{"path":"src/main/java/ruiz/exception/BotException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruizhi2001"},"content":"package ruiz.exception;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Ruizhi2001"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Ruizhi2001"},"content":" * Exceptions that may arise when the chatbot is in operation","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Ruizhi2001"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Ruizhi2001"},"content":"public class BotException extends Exception {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Ruizhi2001"},"content":"     * A constructor for a BotException","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Ruizhi2001"},"content":"     * @param errorMessage message to be displayed when the error is thrown.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Ruizhi2001"},"content":"    public BotException(String errorMessage) {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Ruizhi2001"},"content":"        super(errorMessage);","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Ruizhi2001"},"content":"     * This method coverts the value of the BotException into a String type.","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Ruizhi2001"},"content":"     * @return a String representation of the Exception with its error message.","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"Ruizhi2001"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"Ruizhi2001"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"Ruizhi2001"},"content":"        return super.getMessage();","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"Ruizhi2001"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Ruizhi2001":23}},{"path":"src/main/java/ruiz/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruizhi2001"},"content":"package ruiz.task;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"Ruizhi2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"Ruizhi2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"Ruizhi2001"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"Ruizhi2001"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"Ruizhi2001"},"content":" * Represents a Task that has a deadline.","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"Ruizhi2001"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"Ruizhi2001"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"Ruizhi2001"},"content":"    protected LocalDateTime taskDeadline;","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"Ruizhi2001"},"content":"    protected String location;","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"Ruizhi2001"},"content":"     * A constructor for the public Deadline class.","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"Ruizhi2001"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"Ruizhi2001"},"content":"     * @param description the description of the deadline.","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"Ruizhi2001"},"content":"     * @param by          the deadline of the task.","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"Ruizhi2001"},"content":"    public Deadline(String description, String by, String location) throws DateTimeParseException {","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"Ruizhi2001"},"content":"        super(description, location);","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"Ruizhi2001"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"Ruizhi2001"},"content":"        this.taskDeadline \u003d LocalDateTime.parse(by, formatter);","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"Ruizhi2001"},"content":"        this.location \u003d location;","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"Ruizhi2001"},"content":"     * This method converts the value of the deadline into a String type.","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"Ruizhi2001"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"Ruizhi2001"},"content":"     * @return the String representation of the deadline with its type, completion status and completion time.","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"Ruizhi2001"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"Ruizhi2001"},"content":"    public String formatSaveTaskString() {","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"Ruizhi2001"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"Ruizhi2001"},"content":"        return \"D\"","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"Ruizhi2001"},"content":"                + super.formatSaveTaskString()","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"Ruizhi2001"},"content":"                + \" | \"","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"Ruizhi2001"},"content":"                + this.taskDeadline.format(formatter)","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"Ruizhi2001"},"content":"                + \" | \"","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"Ruizhi2001"},"content":"                + location;","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"Ruizhi2001"},"content":"     * This method converts the value of the deadline into a String type.","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"Ruizhi2001"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":46,"author":{"gitId":"Ruizhi2001"},"content":"     * @return the String representation of the deadline with its type, completion status and completion time.","lastModifiedDate":"2023-09-15"},{"lineNumber":47,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":48,"author":{"gitId":"Ruizhi2001"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":49,"author":{"gitId":"Ruizhi2001"},"content":"    public String toString() {","lastModifiedDate":"2023-09-15"},{"lineNumber":50,"author":{"gitId":"Ruizhi2001"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2023-09-15"},{"lineNumber":51,"author":{"gitId":"Ruizhi2001"},"content":"        return \"[D]\"","lastModifiedDate":"2023-09-15"},{"lineNumber":52,"author":{"gitId":"Ruizhi2001"},"content":"                + super.toString()","lastModifiedDate":"2023-09-15"},{"lineNumber":53,"author":{"gitId":"Ruizhi2001"},"content":"                + \" (by: \"","lastModifiedDate":"2023-09-15"},{"lineNumber":54,"author":{"gitId":"Ruizhi2001"},"content":"                + this.taskDeadline.format(formatter)","lastModifiedDate":"2023-09-15"},{"lineNumber":55,"author":{"gitId":"Ruizhi2001"},"content":"                + \")\"","lastModifiedDate":"2023-09-15"},{"lineNumber":56,"author":{"gitId":"Ruizhi2001"},"content":"                + \" at: \"","lastModifiedDate":"2023-09-15"},{"lineNumber":57,"author":{"gitId":"Ruizhi2001"},"content":"                + location;","lastModifiedDate":"2023-09-15"},{"lineNumber":58,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":59,"author":{"gitId":"Ruizhi2001"},"content":"}","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"Ruizhi2001":59}},{"path":"src/main/java/ruiz/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruizhi2001"},"content":"package ruiz.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Ruizhi2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Ruizhi2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Ruizhi2001"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Ruizhi2001"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Ruizhi2001"},"content":" * Represents a task that has a beginning time and an ending time.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Ruizhi2001"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Ruizhi2001"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"Ruizhi2001"},"content":"    protected LocalDateTime eventStart;","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"Ruizhi2001"},"content":"    protected LocalDateTime eventEnd;","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"Ruizhi2001"},"content":"    protected String location;","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Ruizhi2001"},"content":"     * A constructor the public Event class","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"Ruizhi2001"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Ruizhi2001"},"content":"     * @param description the description of the event.","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"Ruizhi2001"},"content":"     * @param from        the beginning time of the event.","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"Ruizhi2001"},"content":"     * @param to          the ending time of the event.","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"Ruizhi2001"},"content":"    public Event(String description, String from, String to, String location) throws DateTimeParseException {","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"Ruizhi2001"},"content":"        super(description, location);","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"Ruizhi2001"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Ruizhi2001"},"content":"        this.eventStart \u003d LocalDateTime.parse(from, formatter);","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"Ruizhi2001"},"content":"        this.eventEnd \u003d LocalDateTime.parse(to, formatter);","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"Ruizhi2001"},"content":"        this.location \u003d location;","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"Ruizhi2001"},"content":"     * This method converts the value of an Event into a String type.","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"Ruizhi2001"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"Ruizhi2001"},"content":"     * @return the String representation of the event with its type, completion status,","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"Ruizhi2001"},"content":"     *     beginning time and ending time.","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"Ruizhi2001"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Ruizhi2001"},"content":"    public String formatSaveTaskString() {","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"Ruizhi2001"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"Ruizhi2001"},"content":"        return \"E\"","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"Ruizhi2001"},"content":"                + super.formatSaveTaskString()","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"Ruizhi2001"},"content":"                + \" | \"","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"Ruizhi2001"},"content":"                + eventStart.format(formatter)","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"Ruizhi2001"},"content":"                + \" | \"","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"Ruizhi2001"},"content":"                + eventEnd.format(formatter)","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"Ruizhi2001"},"content":"                + \" | \"","lastModifiedDate":"2023-09-15"},{"lineNumber":46,"author":{"gitId":"Ruizhi2001"},"content":"                + location;","lastModifiedDate":"2023-09-15"},{"lineNumber":47,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"Ruizhi2001"},"content":"     * This method converts the value of an Event into a String type.","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"Ruizhi2001"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"Ruizhi2001"},"content":"     * @return the String representation of the event with its type, completion status,","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"Ruizhi2001"},"content":"     *     beginning time and ending time.","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"Ruizhi2001"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"Ruizhi2001"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"Ruizhi2001"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"Ruizhi2001"},"content":"        return \"[E]\"","lastModifiedDate":"2023-09-15"},{"lineNumber":59,"author":{"gitId":"Ruizhi2001"},"content":"                + super.toString()","lastModifiedDate":"2023-09-15"},{"lineNumber":60,"author":{"gitId":"Ruizhi2001"},"content":"                + \" (from: \"","lastModifiedDate":"2023-09-15"},{"lineNumber":61,"author":{"gitId":"Ruizhi2001"},"content":"                + eventStart.format(formatter)","lastModifiedDate":"2023-09-15"},{"lineNumber":62,"author":{"gitId":"Ruizhi2001"},"content":"                + \" to: \"","lastModifiedDate":"2023-09-15"},{"lineNumber":63,"author":{"gitId":"Ruizhi2001"},"content":"                + eventEnd.format(formatter)","lastModifiedDate":"2023-09-15"},{"lineNumber":64,"author":{"gitId":"Ruizhi2001"},"content":"                + \")\"","lastModifiedDate":"2023-09-15"},{"lineNumber":65,"author":{"gitId":"Ruizhi2001"},"content":"                + \" at: \"","lastModifiedDate":"2023-09-15"},{"lineNumber":66,"author":{"gitId":"Ruizhi2001"},"content":"                + location;","lastModifiedDate":"2023-09-15"},{"lineNumber":67,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":68,"author":{"gitId":"Ruizhi2001"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Ruizhi2001":68}},{"path":"src/main/java/ruiz/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruizhi2001"},"content":"package ruiz.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Ruizhi2001"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Ruizhi2001"},"content":" * Represents a task that has a description and completion check.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Ruizhi2001"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Ruizhi2001"},"content":"public class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Ruizhi2001"},"content":"    private boolean isCompleted;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"Ruizhi2001"},"content":"    private String description;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"Ruizhi2001"},"content":"    private String location;","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Ruizhi2001"},"content":"     * A constructor for the public Task class.","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Ruizhi2001"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Ruizhi2001"},"content":"     * @param description contains the description of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Ruizhi2001"},"content":"    public Task(String description, String location) {","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"Ruizhi2001"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"Ruizhi2001"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"Ruizhi2001"},"content":"        this.location \u003d location;","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"Ruizhi2001"},"content":"     * Marks the current task.","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"Ruizhi2001"},"content":"    public void mark() {","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"Ruizhi2001"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"Ruizhi2001"},"content":"     * Unmarks the current task.","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"Ruizhi2001"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"Ruizhi2001"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Ruizhi2001"},"content":"     * This method converts the value of the task into a string format that is stored.","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Ruizhi2001"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Ruizhi2001"},"content":"     * @return String representation of the task in its storage format.","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Ruizhi2001"},"content":"    public String formatSaveTaskString() {","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"Ruizhi2001"},"content":"        return isCompleted ? \" | 1 | \" + description","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"Ruizhi2001"},"content":"                : \" | 0 | \" + description;","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Ruizhi2001"},"content":"     * This method checks if the description of the task has the keyword the user is looking for.","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Ruizhi2001"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Ruizhi2001"},"content":"     * @param keyword keyword the user is searching for.","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Ruizhi2001"},"content":"     * @return Boolean representing if the keyword is present.","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Ruizhi2001"},"content":"    public Boolean containsKeyword(String keyword) {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Ruizhi2001"},"content":"        return description.contains(keyword);","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"Ruizhi2001"},"content":"     * This method converts the value of the task into a String value.","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"Ruizhi2001"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"Ruizhi2001"},"content":"     * @return String representation of the task with its completion status.","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"Ruizhi2001"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":62,"author":{"gitId":"Ruizhi2001"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"Ruizhi2001"},"content":"        String mark \u003d \"[ ]\";","lastModifiedDate":"2023-08-22"},{"lineNumber":64,"author":{"gitId":"Ruizhi2001"},"content":"        if (this.isCompleted) {","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"Ruizhi2001"},"content":"            mark \u003d \"[X]\";","lastModifiedDate":"2023-08-22"},{"lineNumber":66,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"Ruizhi2001"},"content":"        return mark + \" \" + description;","lastModifiedDate":"2023-08-22"},{"lineNumber":68,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":69,"author":{"gitId":"Ruizhi2001"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Ruizhi2001":69}},{"path":"src/main/java/ruiz/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruizhi2001"},"content":"package ruiz.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Ruizhi2001"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"Ruizhi2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"Ruizhi2001"},"content":"import ruiz.exception.BotException;","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"Ruizhi2001"},"content":"import ruiz.ui.Ui;","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"Ruizhi2001"},"content":"import ruiz.utils.Parser;","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Ruizhi2001"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Ruizhi2001"},"content":" * Represents a list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Ruizhi2001"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Ruizhi2001"},"content":"public class TaskList {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Ruizhi2001"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Ruizhi2001"},"content":"    private Parser parser;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Ruizhi2001"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Ruizhi2001"},"content":"     * Constructor for the taskList class that is inititalised with a pre-saved taskList","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Ruizhi2001"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Ruizhi2001"},"content":"     * @param taskList List of tasks pre-saved in the hard disk","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Ruizhi2001"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Ruizhi2001"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Ruizhi2001"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Ruizhi2001"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Ruizhi2001"},"content":"     * Constructor for the taskList class","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Ruizhi2001"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Ruizhi2001"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"Ruizhi2001"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"Ruizhi2001"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"Ruizhi2001"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"Ruizhi2001"},"content":"        assert this.taskList !\u003d null : \"taskList should not be null\";","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"Ruizhi2001"},"content":"        return this.taskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Ruizhi2001"},"content":"     * Returns the size of the taskList.","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Ruizhi2001"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Ruizhi2001"},"content":"     * @return size of taskList.","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Ruizhi2001"},"content":"    public int getTaskListSize() {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"Ruizhi2001"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"Ruizhi2001"},"content":"     * This method marks the given task in the input.","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"Ruizhi2001"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Ruizhi2001"},"content":"     * @param input The string that consists of the keyWord \"mark\" and task index being input by the user.","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"Ruizhi2001"},"content":"     * @throws BotException if the input is not a valid one.","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"Ruizhi2001"},"content":"    public String markTask(String input) throws BotException {","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"Ruizhi2001"},"content":"        int taskIndex \u003d this.parser.getTaskNumber(input);","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"Ruizhi2001"},"content":"        if (taskIndex \u003e\u003d 0 \u0026\u0026 this.taskList.size() \u003e taskIndex) {","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"Ruizhi2001"},"content":"            Task task \u003d this.taskList.get(taskIndex);","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"Ruizhi2001"},"content":"            assert task !\u003d null : \"task should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":63,"author":{"gitId":"Ruizhi2001"},"content":"            task.mark();","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"Ruizhi2001"},"content":"            return ui.markTask(task);","lastModifiedDate":"2023-09-08"},{"lineNumber":65,"author":{"gitId":"Ruizhi2001"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"Ruizhi2001"},"content":"            throw new BotException(\"This task does not exist!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"Ruizhi2001"},"content":"     * This method unmarks the specified task in the string input.","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"Ruizhi2001"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"Ruizhi2001"},"content":"     * @param input The string that consists of the keyWord \"unmark\" and task index being input by the user.","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"Ruizhi2001"},"content":"     * @throws BotException if the input is not a valid one.","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"Ruizhi2001"},"content":"    public String unmarkTask(String input) throws BotException {","lastModifiedDate":"2023-09-08"},{"lineNumber":77,"author":{"gitId":"Ruizhi2001"},"content":"        int taskIndex \u003d this.parser.getTaskNumber(input);","lastModifiedDate":"2023-09-12"},{"lineNumber":78,"author":{"gitId":"Ruizhi2001"},"content":"        if (taskIndex \u003e\u003d 0 \u0026\u0026 this.taskList.size() \u003e taskIndex) {","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"Ruizhi2001"},"content":"            Task task \u003d this.taskList.get(taskIndex);","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"Ruizhi2001"},"content":"            assert task !\u003d null : \"task should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":81,"author":{"gitId":"Ruizhi2001"},"content":"            task.unmark();","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"Ruizhi2001"},"content":"            return ui.unmarkTask(task);","lastModifiedDate":"2023-09-08"},{"lineNumber":83,"author":{"gitId":"Ruizhi2001"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"Ruizhi2001"},"content":"            throw new BotException(\"This task does not exist!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"Ruizhi2001"},"content":"     * This method deletes the specified task from its index from the list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"Ruizhi2001"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"Ruizhi2001"},"content":"     * @param input The string that contains the keyWord \"delete\" and the index of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"Ruizhi2001"},"content":"     * @throws BotException if the input of the user is not a valid one.","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"Ruizhi2001"},"content":"    public String deleteTask(String input) throws BotException {","lastModifiedDate":"2023-09-08"},{"lineNumber":95,"author":{"gitId":"Ruizhi2001"},"content":"        int taskIndex \u003d this.parser.getTaskNumber(input);","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"Ruizhi2001"},"content":"        if (taskIndex \u003e\u003d 0 \u0026\u0026 this.taskList.size() \u003e taskIndex) {","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"Ruizhi2001"},"content":"            Task task \u003d this.taskList.get(taskIndex);","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"Ruizhi2001"},"content":"            assert task !\u003d null : \"task should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":99,"author":{"gitId":"Ruizhi2001"},"content":"            this.taskList.remove(taskIndex);","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"Ruizhi2001"},"content":"            return ui.deletedTask(task, this.getTaskListSize());","lastModifiedDate":"2023-09-08"},{"lineNumber":101,"author":{"gitId":"Ruizhi2001"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"Ruizhi2001"},"content":"            throw new BotException(\"This task does not exist!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"Ruizhi2001"},"content":"     * This method creates a todo and adds it to the list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"Ruizhi2001"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"Ruizhi2001"},"content":"     * @param input contains the keyWord \"todo\" and the description of the todo.","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"Ruizhi2001"},"content":"     * @throws BotException if the input is not in the format of a valid todo.","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"Ruizhi2001"},"content":"    public String addTodo(String input) throws BotException {","lastModifiedDate":"2023-09-08"},{"lineNumber":113,"author":{"gitId":"Ruizhi2001"},"content":"        String content \u003d parser.getTodoDescription(input);","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"Ruizhi2001"},"content":"        String location \u003d parser.getLocation(input);","lastModifiedDate":"2023-09-15"},{"lineNumber":115,"author":{"gitId":"Ruizhi2001"},"content":"        assert content !\u003d null : \"toDo should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":116,"author":{"gitId":"Ruizhi2001"},"content":"        Task temp \u003d new ToDo(content, location);","lastModifiedDate":"2023-09-15"},{"lineNumber":117,"author":{"gitId":"Ruizhi2001"},"content":"        this.taskList.add(temp);","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"Ruizhi2001"},"content":"        return ui.addedNewTaskMsg(temp, this.getTaskListSize());","lastModifiedDate":"2023-09-08"},{"lineNumber":119,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"Ruizhi2001"},"content":"     * This method creates a deadline and adds it to the list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"Ruizhi2001"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"Ruizhi2001"},"content":"     * @param input contains the keyWord \"deadline\" and the description of the deadline","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"Ruizhi2001"},"content":"     *              with the time it needs to be completed by.","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"Ruizhi2001"},"content":"     * @throws BotException if the input is not in the valid format of a deadline.","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"Ruizhi2001"},"content":"    public String addDeadline(String input) throws BotException, IOException {","lastModifiedDate":"2023-09-08"},{"lineNumber":129,"author":{"gitId":"Ruizhi2001"},"content":"        String description \u003d parser.getDeadlineDescription(input);","lastModifiedDate":"2023-08-29"},{"lineNumber":130,"author":{"gitId":"Ruizhi2001"},"content":"        String location \u003d parser.getLocation(input);","lastModifiedDate":"2023-09-15"},{"lineNumber":131,"author":{"gitId":"Ruizhi2001"},"content":"        assert description !\u003d null : \"description should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":132,"author":{"gitId":"Ruizhi2001"},"content":"        String by \u003d parser.getBy(input);","lastModifiedDate":"2023-08-29"},{"lineNumber":133,"author":{"gitId":"Ruizhi2001"},"content":"        Task temp \u003d new Deadline(description, by, location);","lastModifiedDate":"2023-09-15"},{"lineNumber":134,"author":{"gitId":"Ruizhi2001"},"content":"        this.taskList.add(temp);","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"Ruizhi2001"},"content":"        return ui.addedNewTaskMsg(temp, this.getTaskListSize());","lastModifiedDate":"2023-09-08"},{"lineNumber":136,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":139,"author":{"gitId":"Ruizhi2001"},"content":"     * This method creates an event and adds it to the list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":140,"author":{"gitId":"Ruizhi2001"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":141,"author":{"gitId":"Ruizhi2001"},"content":"     * @param input contains the command \"event\" and the description of the event","lastModifiedDate":"2023-09-06"},{"lineNumber":142,"author":{"gitId":"Ruizhi2001"},"content":"     *              with the time it takes place from and ends by.","lastModifiedDate":"2023-08-29"},{"lineNumber":143,"author":{"gitId":"Ruizhi2001"},"content":"     * @throws BotException if the input is not in the form a valid event.","lastModifiedDate":"2023-08-29"},{"lineNumber":144,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":145,"author":{"gitId":"Ruizhi2001"},"content":"    public String addEvent(String input) throws BotException, IOException {","lastModifiedDate":"2023-09-08"},{"lineNumber":146,"author":{"gitId":"Ruizhi2001"},"content":"        String description \u003d parser.getEventDescription(input);","lastModifiedDate":"2023-08-29"},{"lineNumber":147,"author":{"gitId":"Ruizhi2001"},"content":"        String beginning \u003d parser.getEventBeginning(input);","lastModifiedDate":"2023-09-12"},{"lineNumber":148,"author":{"gitId":"Ruizhi2001"},"content":"        String end \u003d parser.getEventEnd(input);","lastModifiedDate":"2023-09-15"},{"lineNumber":149,"author":{"gitId":"Ruizhi2001"},"content":"        String location \u003d parser.getLocation(input);","lastModifiedDate":"2023-09-15"},{"lineNumber":150,"author":{"gitId":"Ruizhi2001"},"content":"        Task temp \u003d new Event(description, beginning, end, location);","lastModifiedDate":"2023-09-15"},{"lineNumber":151,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":152,"author":{"gitId":"Ruizhi2001"},"content":"        this.taskList.add(temp);","lastModifiedDate":"2023-08-29"},{"lineNumber":153,"author":{"gitId":"Ruizhi2001"},"content":"        return ui.addedNewTaskMsg(temp, this.getTaskListSize());","lastModifiedDate":"2023-09-08"},{"lineNumber":154,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":155,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":157,"author":{"gitId":"Ruizhi2001"},"content":"     * This method finds tasks that contain the keyword passed in.","lastModifiedDate":"2023-09-06"},{"lineNumber":158,"author":{"gitId":"Ruizhi2001"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":159,"author":{"gitId":"Ruizhi2001"},"content":"     * @param input contains the command \"find\" and the \"keyword\"","lastModifiedDate":"2023-09-06"},{"lineNumber":160,"author":{"gitId":"Ruizhi2001"},"content":"     * @throws BotException if the input is not in the form a valid \"find\".","lastModifiedDate":"2023-09-06"},{"lineNumber":161,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":162,"author":{"gitId":"Ruizhi2001"},"content":"    public String findTasksWithKeyword(String input) throws BotException {","lastModifiedDate":"2023-09-08"},{"lineNumber":163,"author":{"gitId":"Ruizhi2001"},"content":"        String keyword \u003d parser.getKeyword(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"Ruizhi2001"},"content":"        ArrayList\u003cTask\u003e tasksWithKeyword \u003d this.taskList.stream()","lastModifiedDate":"2023-09-15"},{"lineNumber":165,"author":{"gitId":"Ruizhi2001"},"content":"                .filter(task -\u003e task.containsKeyword(keyword))","lastModifiedDate":"2023-09-15"},{"lineNumber":166,"author":{"gitId":"Ruizhi2001"},"content":"                .collect(ArrayList::new, ArrayList::add, ArrayList::addAll);","lastModifiedDate":"2023-09-15"},{"lineNumber":167,"author":{"gitId":"Ruizhi2001"},"content":"        return new Ui().getTasks(tasksWithKeyword);","lastModifiedDate":"2023-09-08"},{"lineNumber":168,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"Ruizhi2001"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Ruizhi2001":169}},{"path":"src/main/java/ruiz/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruizhi2001"},"content":"package ruiz.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Ruizhi2001"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Ruizhi2001"},"content":" * Represents a task that just has a description.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Ruizhi2001"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Ruizhi2001"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"Ruizhi2001"},"content":"    protected String location;","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Ruizhi2001"},"content":"     * A constructor for the public ToDo class.","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"Ruizhi2001"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Ruizhi2001"},"content":"     * @param description contains the description of the ToDo","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Ruizhi2001"},"content":"    public ToDo(String description, String location) {","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"Ruizhi2001"},"content":"        super(description, location);","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"Ruizhi2001"},"content":"        this.location \u003d location;","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"Ruizhi2001"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Ruizhi2001"},"content":"    public String formatSaveTaskString() {","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"Ruizhi2001"},"content":"        return \"T\" + super.formatSaveTaskString() + \" | \" + this.location;","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"Ruizhi2001"},"content":"     * This method converts the value of an Event into a String type.","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"Ruizhi2001"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Ruizhi2001"},"content":"     * @return the String representation of the ToDo with its type and completion status.","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"Ruizhi2001"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"Ruizhi2001"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"Ruizhi2001"},"content":"        return \"[T]\"","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"Ruizhi2001"},"content":"                + super.toString()","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"Ruizhi2001"},"content":"                + \" at: \"","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"Ruizhi2001"},"content":"                + this.location;","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"Ruizhi2001"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Ruizhi2001":36}},{"path":"src/main/java/ruiz/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruizhi2001"},"content":"package ruiz.ui;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"Ruizhi2001"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"Ruizhi2001"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"Ruizhi2001"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"Ruizhi2001"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"Ruizhi2001"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"Ruizhi2001"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"Ruizhi2001"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"Ruizhi2001"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"Ruizhi2001"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"Ruizhi2001"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"Ruizhi2001"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"Ruizhi2001"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"Ruizhi2001"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"Ruizhi2001"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"Ruizhi2001"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"Ruizhi2001"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"Ruizhi2001"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"Ruizhi2001"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"Ruizhi2001"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"Ruizhi2001"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"Ruizhi2001"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"Ruizhi2001"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"Ruizhi2001"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"Ruizhi2001"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"Ruizhi2001"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"Ruizhi2001"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"Ruizhi2001"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"Ruizhi2001"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"Ruizhi2001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"Ruizhi2001"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"Ruizhi2001"},"content":"        this.dialog.setText(text);","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"Ruizhi2001"},"content":"        this.displayPicture.setImage(img);","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"Ruizhi2001"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"Ruizhi2001"},"content":"    private void flip() {","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"Ruizhi2001"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"Ruizhi2001"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"Ruizhi2001"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"Ruizhi2001"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"Ruizhi2001"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"Ruizhi2001"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"Ruizhi2001"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"Ruizhi2001"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"Ruizhi2001"},"content":"        db.flip();","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"Ruizhi2001"},"content":"        return db;","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"Ruizhi2001"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"Ruizhi2001":60}},{"path":"src/main/java/ruiz/ui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruizhi2001"},"content":"package ruiz.ui;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"Ruizhi2001"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"Ruizhi2001"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"Ruizhi2001"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"Ruizhi2001"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"Ruizhi2001"},"content":"public class Launcher {","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"Ruizhi2001"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"Ruizhi2001"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"Ruizhi2001"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"Ruizhi2001":12}},{"path":"src/main/java/ruiz/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruizhi2001"},"content":"package ruiz.ui;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"Ruizhi2001"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"Ruizhi2001"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"Ruizhi2001"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"Ruizhi2001"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"Ruizhi2001"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"Ruizhi2001"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"Ruizhi2001"},"content":"import ruiz.Ruiz;","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"Ruizhi2001"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"Ruizhi2001"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"Ruizhi2001"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"Ruizhi2001"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"Ruizhi2001"},"content":"    private Ruiz ruiz \u003d new Ruiz();","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"Ruizhi2001"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"Ruizhi2001"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"Ruizhi2001"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"Ruizhi2001"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"Ruizhi2001"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"Ruizhi2001"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"Ruizhi2001"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"Ruizhi2001"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setRuiz(ruiz);","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"Ruizhi2001"},"content":"            stage.show();","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"Ruizhi2001"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().greet();","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"Ruizhi2001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"Ruizhi2001"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"Ruizhi2001"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"Ruizhi2001":32}},{"path":"src/main/java/ruiz/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruizhi2001"},"content":"package ruiz.ui;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"Ruizhi2001"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"Ruizhi2001"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"Ruizhi2001"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"Ruizhi2001"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"Ruizhi2001"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"Ruizhi2001"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"Ruizhi2001"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"Ruizhi2001"},"content":"import ruiz.Ruiz;","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"Ruizhi2001"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"Ruizhi2001"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"Ruizhi2001"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"Ruizhi2001"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"Ruizhi2001"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"Ruizhi2001"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"Ruizhi2001"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"Ruizhi2001"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"Ruizhi2001"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"Ruizhi2001"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"Ruizhi2001"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"Ruizhi2001"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"Ruizhi2001"},"content":"    private Ruiz ruiz;","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"Ruizhi2001"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"Ruizhi2001"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"Ruizhi2001"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"Ruizhi2001"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"Ruizhi2001"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"Ruizhi2001"},"content":"    public void setRuiz(Ruiz ruiz) {","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"Ruizhi2001"},"content":"        this.ruiz \u003d ruiz;","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"Ruizhi2001"},"content":"     * Greets the user when the chatbot is launched.","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"Ruizhi2001"},"content":"    public void greet() {","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"Ruizhi2001"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"Ruizhi2001"},"content":"                DialogBox.getDukeDialog(new Ui().greet(), dukeImage)","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"Ruizhi2001"},"content":"        );","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"Ruizhi2001"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"Ruizhi2001"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"Ruizhi2001"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"Ruizhi2001"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"Ruizhi2001"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"Ruizhi2001"},"content":"        String response \u003d ruiz.getResponse(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"Ruizhi2001"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"Ruizhi2001"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"Ruizhi2001"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"Ruizhi2001"},"content":"        );","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"Ruizhi2001"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"Ruizhi2001"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"Ruizhi2001":62}},{"path":"src/main/java/ruiz/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruizhi2001"},"content":"package ruiz.ui;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Ruizhi2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Ruizhi2001"},"content":"import ruiz.task.Task;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"Ruizhi2001"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Ruizhi2001"},"content":" * Deals with the interactions with the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Ruizhi2001"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Ruizhi2001"},"content":"public class Ui {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Ruizhi2001"},"content":"     * This method returns the greeting message of the bot.","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"Ruizhi2001"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"Ruizhi2001"},"content":"     * @return greeting message of the bot.","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Ruizhi2001"},"content":"    public String greet() {","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"Ruizhi2001"},"content":"        String greet \u003d \" Hello! I\u0027m Ruiz\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"Ruizhi2001"},"content":"                + \" What can I do for you?\\n\";","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"Ruizhi2001"},"content":"        return greet;","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Ruizhi2001"},"content":"     * This method returns the goodbye message of the bot.","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"Ruizhi2001"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"Ruizhi2001"},"content":"     * @return goodbye message of the bot.","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Ruizhi2001"},"content":"    public String printBye() {","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"Ruizhi2001"},"content":"        String bye \u003d \"Bye! Comeback soon!\\n\";","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"Ruizhi2001"},"content":"        return bye;","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Ruizhi2001"},"content":"     * This method returns the list of tasks currently","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"Ruizhi2001"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"Ruizhi2001"},"content":"     * @return list of tasks currently.","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Ruizhi2001"},"content":"    public String getTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"Ruizhi2001"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"Ruizhi2001"},"content":"            return \"You have no tasks in your list\\n\";","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"Ruizhi2001"},"content":"        String message \u003d \"\";","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"Ruizhi2001"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"Ruizhi2001"},"content":"            message +\u003d (i + 1) + \". \" + tasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"Ruizhi2001"},"content":"        return message;","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"Ruizhi2001"},"content":"     * This method returns a message when the task is unable to be saved.","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"Ruizhi2001"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"Ruizhi2001"},"content":"     * @return message when the task is unable to be saved.","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"Ruizhi2001"},"content":"    public String unableToSaveTask() {","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"Ruizhi2001"},"content":"        return \"Unable to save task\";","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"Ruizhi2001"},"content":"     * This method returns the message when the input is in the wrong format.","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"Ruizhi2001"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"Ruizhi2001"},"content":"     * @return message when the input is in the wrong format.","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"Ruizhi2001"},"content":"    public String wrongFormat() {","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"Ruizhi2001"},"content":"        return \"Please input your date and time in the correct format: yyyy-MM-dd HHmm\";","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"Ruizhi2001"},"content":"     * This method returns the message that the bot prints when the input cannot be understood.","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"Ruizhi2001"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":69,"author":{"gitId":"Ruizhi2001"},"content":"     * @return error message","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"Ruizhi2001"},"content":"    public String botErrorMsg() {","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"Ruizhi2001"},"content":"        return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"Ruizhi2001"},"content":"     * Prints an acknowledgement message that a new task has been added.","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"Ruizhi2001"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":78,"author":{"gitId":"Ruizhi2001"},"content":"     * @param task         task that is added.","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"Ruizhi2001"},"content":"     * @param taskListSize size of the task list after this task is added.","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"Ruizhi2001"},"content":"     * @return acknowledgement message.","lastModifiedDate":"2023-09-12"},{"lineNumber":81,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"Ruizhi2001"},"content":"    public String addedNewTaskMsg(Task task, int taskListSize) {","lastModifiedDate":"2023-09-08"},{"lineNumber":83,"author":{"gitId":"Ruizhi2001"},"content":"        String message \u003d \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":84,"author":{"gitId":"Ruizhi2001"},"content":"                + task","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"Ruizhi2001"},"content":"                + \"\\nNow you have \"","lastModifiedDate":"2023-09-15"},{"lineNumber":86,"author":{"gitId":"Ruizhi2001"},"content":"                + taskListSize","lastModifiedDate":"2023-09-15"},{"lineNumber":87,"author":{"gitId":"Ruizhi2001"},"content":"                + \" in the list.\\n\";","lastModifiedDate":"2023-09-15"},{"lineNumber":88,"author":{"gitId":"Ruizhi2001"},"content":"        return message;","lastModifiedDate":"2023-09-08"},{"lineNumber":89,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"Ruizhi2001"},"content":"     * Prints an acknowledgement message that the task has been deleted.","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"Ruizhi2001"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":94,"author":{"gitId":"Ruizhi2001"},"content":"     * @param task         task that is deleted.","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"Ruizhi2001"},"content":"     * @param taskListSize size of the task list after the task is deleted.","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"Ruizhi2001"},"content":"     * @return acknowledgement message that the task has been deleted.","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"Ruizhi2001"},"content":"    public String deletedTask(Task task, int taskListSize) {","lastModifiedDate":"2023-09-08"},{"lineNumber":99,"author":{"gitId":"Ruizhi2001"},"content":"        String message \u003d \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":100,"author":{"gitId":"Ruizhi2001"},"content":"                + task + \"\\n\" + \"Now you have \"","lastModifiedDate":"2023-09-08"},{"lineNumber":101,"author":{"gitId":"Ruizhi2001"},"content":"                + taskListSize","lastModifiedDate":"2023-09-08"},{"lineNumber":102,"author":{"gitId":"Ruizhi2001"},"content":"                + \" in the list.\\n\";","lastModifiedDate":"2023-09-08"},{"lineNumber":103,"author":{"gitId":"Ruizhi2001"},"content":"        return message;","lastModifiedDate":"2023-09-08"},{"lineNumber":104,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"Ruizhi2001"},"content":"     * Prints an acknowledgement message that the task has been unmarked.","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"Ruizhi2001"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":109,"author":{"gitId":"Ruizhi2001"},"content":"     * @param task task that is marked.","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"Ruizhi2001"},"content":"     * @return acknowledgement message that the task has been unmarked.","lastModifiedDate":"2023-09-12"},{"lineNumber":111,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"Ruizhi2001"},"content":"    public String unmarkTask(Task task) {","lastModifiedDate":"2023-09-08"},{"lineNumber":113,"author":{"gitId":"Ruizhi2001"},"content":"        String message \u003d \"OK, I\u0027ve marked this task as not done yet\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":114,"author":{"gitId":"Ruizhi2001"},"content":"                + task","lastModifiedDate":"2023-09-06"},{"lineNumber":115,"author":{"gitId":"Ruizhi2001"},"content":"                + \"\\n\";","lastModifiedDate":"2023-09-08"},{"lineNumber":116,"author":{"gitId":"Ruizhi2001"},"content":"        return message;","lastModifiedDate":"2023-09-08"},{"lineNumber":117,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"Ruizhi2001"},"content":"     * Prints an acknowledgement message that the task has been marked.","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"Ruizhi2001"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":122,"author":{"gitId":"Ruizhi2001"},"content":"     * @param task task that is marked.","lastModifiedDate":"2023-09-15"},{"lineNumber":123,"author":{"gitId":"Ruizhi2001"},"content":"     * @return acknowledgement message that the task has been marked.","lastModifiedDate":"2023-09-12"},{"lineNumber":124,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"Ruizhi2001"},"content":"    public String markTask(Task task) {","lastModifiedDate":"2023-09-08"},{"lineNumber":126,"author":{"gitId":"Ruizhi2001"},"content":"        String message \u003d \"Nice! I\u0027ve marked this task as done\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":127,"author":{"gitId":"Ruizhi2001"},"content":"                + task","lastModifiedDate":"2023-09-06"},{"lineNumber":128,"author":{"gitId":"Ruizhi2001"},"content":"                + \"\\n\";","lastModifiedDate":"2023-09-08"},{"lineNumber":129,"author":{"gitId":"Ruizhi2001"},"content":"        return message;","lastModifiedDate":"2023-09-08"},{"lineNumber":130,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"Ruizhi2001"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Ruizhi2001":131}},{"path":"src/main/java/ruiz/utils/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruizhi2001"},"content":"package ruiz.utils;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Ruizhi2001"},"content":"import ruiz.command.Command;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Ruizhi2001"},"content":"import ruiz.exception.BotException;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Ruizhi2001"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Ruizhi2001"},"content":" * Deals with making sense of the user command","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Ruizhi2001"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Ruizhi2001"},"content":"public class Parser {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Ruizhi2001"},"content":"     * Parses the input of the user and returns a Command","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Ruizhi2001"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Ruizhi2001"},"content":"     * @param input This is the input of the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Ruizhi2001"},"content":"     * @return The Command used in the input of the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Ruizhi2001"},"content":"    public Command getCommand(String input) {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Ruizhi2001"},"content":"        String[] words \u003d input.split(\" \");","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Ruizhi2001"},"content":"        if (words.length \u003d\u003d 0) {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Ruizhi2001"},"content":"            return Command.UNKNOWN;","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Ruizhi2001"},"content":"        String keyword \u003d words[0].toLowerCase(); // Get the first word (command) in lowercase","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Ruizhi2001"},"content":"        switch (keyword) {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Ruizhi2001"},"content":"        case \"bye\":","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Ruizhi2001"},"content":"            return Command.BYE;","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Ruizhi2001"},"content":"        case \"list\":","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Ruizhi2001"},"content":"            return Command.LIST;","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Ruizhi2001"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Ruizhi2001"},"content":"            return Command.MARK;","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Ruizhi2001"},"content":"        case \"unmark\":","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"Ruizhi2001"},"content":"            return Command.UNMARK;","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"Ruizhi2001"},"content":"        case \"delete\":","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"Ruizhi2001"},"content":"            return Command.DELETE;","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Ruizhi2001"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"Ruizhi2001"},"content":"            return Command.DEADLINE;","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"Ruizhi2001"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"Ruizhi2001"},"content":"            return Command.TODO;","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Ruizhi2001"},"content":"        case \"event\":","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"Ruizhi2001"},"content":"            return Command.EVENT;","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"Ruizhi2001"},"content":"        case \"find\":","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Ruizhi2001"},"content":"            return Command.FIND;","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Ruizhi2001"},"content":"        default:","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"Ruizhi2001"},"content":"            return Command.UNKNOWN;","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Ruizhi2001"},"content":"     * Parses and splits the input by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Ruizhi2001"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Ruizhi2001"},"content":"     * @param input","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Ruizhi2001"},"content":"     * @return","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Ruizhi2001"},"content":"    public String[] splitInputFromFile(String input) {","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"Ruizhi2001"},"content":"        return input.split(\" \\\\| \");","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Ruizhi2001"},"content":"     * Returns the description of the Todo input by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"Ruizhi2001"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"Ruizhi2001"},"content":"     * @param input input of the user","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"Ruizhi2001"},"content":"     * @return description of the ToDo input by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Ruizhi2001"},"content":"     * @throws BotException if the ToDo is in an invalid format.","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"Ruizhi2001"},"content":"    public String getTodoDescription(String input) throws BotException {","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"Ruizhi2001"},"content":"        if (input.split(\" \", 2).length \u003c\u003d 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"Ruizhi2001"},"content":"            throw new BotException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"Ruizhi2001"},"content":"        assert input !\u003d null : \"input should not be null\";","lastModifiedDate":"2023-09-15"},{"lineNumber":68,"author":{"gitId":"Ruizhi2001"},"content":"        String inputWithoutLocation \u003d input.split(\" /at \")[0];","lastModifiedDate":"2023-09-15"},{"lineNumber":69,"author":{"gitId":"Ruizhi2001"},"content":"        String todoDescription \u003d inputWithoutLocation.split(\" \", 2)[1];","lastModifiedDate":"2023-09-15"},{"lineNumber":70,"author":{"gitId":"Ruizhi2001"},"content":"        assert todoDescription !\u003d null : \"todoDescription should not be null\";","lastModifiedDate":"2023-09-15"},{"lineNumber":71,"author":{"gitId":"Ruizhi2001"},"content":"        return todoDescription;","lastModifiedDate":"2023-09-15"},{"lineNumber":72,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"Ruizhi2001"},"content":"     * Returns the description of the Deadline input by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"Ruizhi2001"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"Ruizhi2001"},"content":"     * @param input input of the user","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"Ruizhi2001"},"content":"     * @return description of the deadline input by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"Ruizhi2001"},"content":"     * @throws BotException if the deadline is in an invalid format.","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"Ruizhi2001"},"content":"    public String getDeadlineDescription(String input) throws BotException {","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"Ruizhi2001"},"content":"        if (input.split(\"/by\", 2).length \u003c\u003d 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"Ruizhi2001"},"content":"            throw new BotException(\"OOPS!!! The description the deadline is incomplete,\"","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"Ruizhi2001"},"content":"                    + \" it should be in the format \u0027deadline *** /by ***\u0027\");","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"Ruizhi2001"},"content":"        assert input !\u003d null : \"input should not be null\";","lastModifiedDate":"2023-09-15"},{"lineNumber":87,"author":{"gitId":"Ruizhi2001"},"content":"        String inputWithoutLocation \u003d input.split(\" /at \")[0];","lastModifiedDate":"2023-09-15"},{"lineNumber":88,"author":{"gitId":"Ruizhi2001"},"content":"        String deadlineDescription \u003d inputWithoutLocation.split(\" \", 2)[1].split(\" /by \")[0];","lastModifiedDate":"2023-09-15"},{"lineNumber":89,"author":{"gitId":"Ruizhi2001"},"content":"        assert deadlineDescription !\u003d null : \"deadlineDescription should not be null\";","lastModifiedDate":"2023-09-15"},{"lineNumber":90,"author":{"gitId":"Ruizhi2001"},"content":"        return deadlineDescription;","lastModifiedDate":"2023-09-15"},{"lineNumber":91,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"Ruizhi2001"},"content":"     * Returns the time the deadline must be completed by input by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"Ruizhi2001"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"Ruizhi2001"},"content":"     * @param input input of the user","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"Ruizhi2001"},"content":"     * @return time the deadline must be completed by input by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"Ruizhi2001"},"content":"     * @throws BotException if the deadline is in an invalid format.","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"Ruizhi2001"},"content":"    public String getBy(String input) throws BotException {","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"Ruizhi2001"},"content":"        if (input.split(\"/by\", 2).length \u003c\u003d 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"Ruizhi2001"},"content":"            throw new BotException(\"OOPS!!! The description the deadline is incomplete,\"","lastModifiedDate":"2023-09-06"},{"lineNumber":103,"author":{"gitId":"Ruizhi2001"},"content":"                    + \" it should be in the \u0027format deadline *** /by ***\u0027\"","lastModifiedDate":"2023-09-06"},{"lineNumber":104,"author":{"gitId":"Ruizhi2001"},"content":"                    + \"\");","lastModifiedDate":"2023-09-06"},{"lineNumber":105,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"Ruizhi2001"},"content":"        assert input !\u003d null : \"input should not be null\";","lastModifiedDate":"2023-09-15"},{"lineNumber":107,"author":{"gitId":"Ruizhi2001"},"content":"        String inputWithoutLocation \u003d input.split(\" /at \")[0];","lastModifiedDate":"2023-09-15"},{"lineNumber":108,"author":{"gitId":"Ruizhi2001"},"content":"        String by \u003d inputWithoutLocation.split(\" \", 2)[1].split(\" /by \")[1];","lastModifiedDate":"2023-09-15"},{"lineNumber":109,"author":{"gitId":"Ruizhi2001"},"content":"        assert by !\u003d null : \"by should not be null\";","lastModifiedDate":"2023-09-15"},{"lineNumber":110,"author":{"gitId":"Ruizhi2001"},"content":"        return by;","lastModifiedDate":"2023-09-15"},{"lineNumber":111,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"Ruizhi2001"},"content":"     * Returns the description of the Event input by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"Ruizhi2001"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"Ruizhi2001"},"content":"     * @param input input of the user","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"Ruizhi2001"},"content":"     * @return description of the Event input by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"Ruizhi2001"},"content":"     * @throws BotException if the Event is in an invalid format.","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"Ruizhi2001"},"content":"    public String getEventDescription(String input) throws BotException {","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"Ruizhi2001"},"content":"        if (input.split(\"/\").length \u003c\u003d 2) {","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"Ruizhi2001"},"content":"            throw new BotException(\"OOPS!!! The description the event is incomplete.\"","lastModifiedDate":"2023-09-06"},{"lineNumber":123,"author":{"gitId":"Ruizhi2001"},"content":"                    + \"it should be in the format \u0027event *** /from *** /to ***\u0027\");","lastModifiedDate":"2023-09-06"},{"lineNumber":124,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"Ruizhi2001"},"content":"        assert input !\u003d null : \"input should not be null\";","lastModifiedDate":"2023-09-15"},{"lineNumber":126,"author":{"gitId":"Ruizhi2001"},"content":"        String inputWithoutLocation \u003d input.split(\" /at \")[0];","lastModifiedDate":"2023-09-15"},{"lineNumber":127,"author":{"gitId":"Ruizhi2001"},"content":"        String eventDescription \u003d inputWithoutLocation.split(\" \", 2)[1].split(\" /from\")[0];","lastModifiedDate":"2023-09-15"},{"lineNumber":128,"author":{"gitId":"Ruizhi2001"},"content":"        assert eventDescription !\u003d null : \"eventDescription should not be null\";","lastModifiedDate":"2023-09-15"},{"lineNumber":129,"author":{"gitId":"Ruizhi2001"},"content":"        return eventDescription;","lastModifiedDate":"2023-09-15"},{"lineNumber":130,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"Ruizhi2001"},"content":"     * Returns the time the event begins by input by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"Ruizhi2001"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"Ruizhi2001"},"content":"     * @param input input of the user","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"Ruizhi2001"},"content":"     * @return time the event begins by input by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"Ruizhi2001"},"content":"     * @throws BotException if the event is in an invalid format.","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"Ruizhi2001"},"content":"    public String getEventBeginning(String input) throws BotException {","lastModifiedDate":"2023-09-15"},{"lineNumber":140,"author":{"gitId":"Ruizhi2001"},"content":"        if (input.split(\"/\").length \u003c\u003d 2) {","lastModifiedDate":"2023-08-29"},{"lineNumber":141,"author":{"gitId":"Ruizhi2001"},"content":"            throw new BotException(\"OOPS!!! The description the event is incomplete.\"","lastModifiedDate":"2023-09-06"},{"lineNumber":142,"author":{"gitId":"Ruizhi2001"},"content":"                    + \"it should be in the format \u0027event *** /from *** /to ***\u0027\");","lastModifiedDate":"2023-09-06"},{"lineNumber":143,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":144,"author":{"gitId":"Ruizhi2001"},"content":"        assert input !\u003d null : \"input should not be null\";","lastModifiedDate":"2023-09-15"},{"lineNumber":145,"author":{"gitId":"Ruizhi2001"},"content":"        String inputWithoutLocation \u003d input.split(\" /at \")[0];","lastModifiedDate":"2023-09-15"},{"lineNumber":146,"author":{"gitId":"Ruizhi2001"},"content":"        String beginning \u003d inputWithoutLocation.split(\" \", 2)[1].split(\" /from \")[1].split(\" /\")[0];","lastModifiedDate":"2023-09-15"},{"lineNumber":147,"author":{"gitId":"Ruizhi2001"},"content":"        assert beginning !\u003d null : \"beginning should not be null\";","lastModifiedDate":"2023-09-15"},{"lineNumber":148,"author":{"gitId":"Ruizhi2001"},"content":"        return beginning;","lastModifiedDate":"2023-09-15"},{"lineNumber":149,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":150,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":151,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"Ruizhi2001"},"content":"     * Returns the time the event finishes by input by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"Ruizhi2001"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"Ruizhi2001"},"content":"     * @param input input of the user","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"Ruizhi2001"},"content":"     * @return time the event finishes by input by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"Ruizhi2001"},"content":"     * @throws BotException if the event is in an invalid format.","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"Ruizhi2001"},"content":"    public String getEventEnd(String input) throws BotException {","lastModifiedDate":"2023-09-15"},{"lineNumber":159,"author":{"gitId":"Ruizhi2001"},"content":"        if (input.split(\"/\").length \u003c\u003d 2) {","lastModifiedDate":"2023-08-29"},{"lineNumber":160,"author":{"gitId":"Ruizhi2001"},"content":"            throw new BotException(\"OOPS!!! The description the event is incomplete.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":161,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":162,"author":{"gitId":"Ruizhi2001"},"content":"        assert input !\u003d null : \"input should not be null\";","lastModifiedDate":"2023-09-15"},{"lineNumber":163,"author":{"gitId":"Ruizhi2001"},"content":"        String inputWithoutLocation \u003d input.split(\" /at \")[0];","lastModifiedDate":"2023-09-15"},{"lineNumber":164,"author":{"gitId":"Ruizhi2001"},"content":"        String to \u003d inputWithoutLocation.split(\" \", 2)[1].split(\" /from \")[1].split(\"/to \")[1];","lastModifiedDate":"2023-09-15"},{"lineNumber":165,"author":{"gitId":"Ruizhi2001"},"content":"        assert to !\u003d null : \"to should not be null\";","lastModifiedDate":"2023-09-15"},{"lineNumber":166,"author":{"gitId":"Ruizhi2001"},"content":"        return to;","lastModifiedDate":"2023-09-15"},{"lineNumber":167,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":168,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":170,"author":{"gitId":"Ruizhi2001"},"content":"     * Returns the keyword used to search from the input to find.","lastModifiedDate":"2023-08-31"},{"lineNumber":171,"author":{"gitId":"Ruizhi2001"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"Ruizhi2001"},"content":"     * @param input input of the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":173,"author":{"gitId":"Ruizhi2001"},"content":"     * @return the keyword of the input.","lastModifiedDate":"2023-08-31"},{"lineNumber":174,"author":{"gitId":"Ruizhi2001"},"content":"     * @throws BotException if the input to find is in an invalid format.","lastModifiedDate":"2023-08-31"},{"lineNumber":175,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":176,"author":{"gitId":"Ruizhi2001"},"content":"    public String getKeyword(String input) throws BotException {","lastModifiedDate":"2023-08-31"},{"lineNumber":177,"author":{"gitId":"Ruizhi2001"},"content":"        if (input.split(\" \").length !\u003d 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":178,"author":{"gitId":"Ruizhi2001"},"content":"            throw new BotException(\"OOPS!!! PLease use the format of \u0027find *keyword*\u0027\");","lastModifiedDate":"2023-08-31"},{"lineNumber":179,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":180,"author":{"gitId":"Ruizhi2001"},"content":"        assert input !\u003d null : \"input should not be null\";","lastModifiedDate":"2023-09-15"},{"lineNumber":181,"author":{"gitId":"Ruizhi2001"},"content":"        String keyword \u003d input.split(\" \")[1];","lastModifiedDate":"2023-09-15"},{"lineNumber":182,"author":{"gitId":"Ruizhi2001"},"content":"        assert keyword !\u003d null : \"keyword should not be null\";","lastModifiedDate":"2023-09-15"},{"lineNumber":183,"author":{"gitId":"Ruizhi2001"},"content":"        return keyword;","lastModifiedDate":"2023-09-15"},{"lineNumber":184,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":185,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":186,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":187,"author":{"gitId":"Ruizhi2001"},"content":"     * Returns the task number of the task to be marked.","lastModifiedDate":"2023-09-15"},{"lineNumber":188,"author":{"gitId":"Ruizhi2001"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":189,"author":{"gitId":"Ruizhi2001"},"content":"     * @param input input of the user.","lastModifiedDate":"2023-09-15"},{"lineNumber":190,"author":{"gitId":"Ruizhi2001"},"content":"     * @return the task number of the task to be marked.","lastModifiedDate":"2023-09-15"},{"lineNumber":191,"author":{"gitId":"Ruizhi2001"},"content":"     * @throws BotException if the input to mark is in an invalid format.","lastModifiedDate":"2023-09-15"},{"lineNumber":192,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":193,"author":{"gitId":"Ruizhi2001"},"content":"    public int getTaskNumber(String input) throws BotException {","lastModifiedDate":"2023-09-15"},{"lineNumber":194,"author":{"gitId":"Ruizhi2001"},"content":"        if (input.split(\" \").length \u003c 2) {","lastModifiedDate":"2023-09-15"},{"lineNumber":195,"author":{"gitId":"Ruizhi2001"},"content":"            throw new BotException(\"OOPS!!! The index of a task cannot be empty.\");","lastModifiedDate":"2023-09-15"},{"lineNumber":196,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":197,"author":{"gitId":"Ruizhi2001"},"content":"        try {","lastModifiedDate":"2023-09-15"},{"lineNumber":198,"author":{"gitId":"Ruizhi2001"},"content":"            int taskIndex \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2023-09-15"},{"lineNumber":199,"author":{"gitId":"Ruizhi2001"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-15"},{"lineNumber":200,"author":{"gitId":"Ruizhi2001"},"content":"            throw new BotException(\"OOPS!!! The index of a task has to be an integer.\");","lastModifiedDate":"2023-09-15"},{"lineNumber":201,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":202,"author":{"gitId":"Ruizhi2001"},"content":"        assert input !\u003d null : \"input should not be null\";","lastModifiedDate":"2023-09-15"},{"lineNumber":203,"author":{"gitId":"Ruizhi2001"},"content":"        int taskIndex \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2023-09-15"},{"lineNumber":204,"author":{"gitId":"Ruizhi2001"},"content":"        assert taskIndex \u003e\u003d 0 : \"taskIndex should be greater than 0\";","lastModifiedDate":"2023-09-15"},{"lineNumber":205,"author":{"gitId":"Ruizhi2001"},"content":"        return taskIndex;","lastModifiedDate":"2023-09-15"},{"lineNumber":206,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":207,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":208,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":209,"author":{"gitId":"Ruizhi2001"},"content":"     * Returns the task number of the task to be deleted.","lastModifiedDate":"2023-09-15"},{"lineNumber":210,"author":{"gitId":"Ruizhi2001"},"content":"     * @param input input of the user.","lastModifiedDate":"2023-09-15"},{"lineNumber":211,"author":{"gitId":"Ruizhi2001"},"content":"     * @return the task number of the task to be deleted.","lastModifiedDate":"2023-09-15"},{"lineNumber":212,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":213,"author":{"gitId":"Ruizhi2001"},"content":"    public String getLocation(String input) {","lastModifiedDate":"2023-09-15"},{"lineNumber":214,"author":{"gitId":"Ruizhi2001"},"content":"        return input.split(\" /at \")[1];","lastModifiedDate":"2023-09-15"},{"lineNumber":215,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":216,"author":{"gitId":"Ruizhi2001"},"content":"}","lastModifiedDate":"2023-08-29"},{"lineNumber":217,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Ruizhi2001":217}},{"path":"src/main/java/ruiz/utils/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruizhi2001"},"content":"package ruiz.utils;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Ruizhi2001"},"content":"import java.io.File;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Ruizhi2001"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Ruizhi2001"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Ruizhi2001"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"Ruizhi2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"Ruizhi2001"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"Ruizhi2001"},"content":"import ruiz.task.Deadline;","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"Ruizhi2001"},"content":"import ruiz.task.Event;","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"Ruizhi2001"},"content":"import ruiz.task.Task;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"Ruizhi2001"},"content":"import ruiz.task.ToDo;","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"Ruizhi2001"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Ruizhi2001"},"content":" * Class manages all things that due with the storing of tasks on the hard disk.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Ruizhi2001"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Ruizhi2001"},"content":"public class Storage {","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"Ruizhi2001"},"content":"    private Parser parser;","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"Ruizhi2001"},"content":"    private String filePath;","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"Ruizhi2001"},"content":"    private File textFile;","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Ruizhi2001"},"content":"     * A constructor for the Storage class.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Ruizhi2001"},"content":"     * @param filePath provides the path of the stored file.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Ruizhi2001"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Ruizhi2001"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Ruizhi2001"},"content":"        this.textFile \u003d new File(filePath);","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"Ruizhi2001"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Ruizhi2001"},"content":"     * Saves the tasks that the user has entered into the chatbot.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Ruizhi2001"},"content":"     * @param tasks The list of tasks that is entered in to the chatbot.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Ruizhi2001"},"content":"     * @throws IOException If the filePath is not valid.","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Ruizhi2001"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"Ruizhi2001"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"Ruizhi2001"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"Ruizhi2001"},"content":"            fw.write(task.formatSaveTaskString() + System.lineSeparator());","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"Ruizhi2001"},"content":"        fw.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Ruizhi2001"},"content":"     * Loads the tasks from the pre-existing tasks file on the hard disk.","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Ruizhi2001"},"content":"     * @return The list of tasks that were stored in the pre-existing tasks file on the hard disk.","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Ruizhi2001"},"content":"     * @throws FileNotFoundException If the file at the given filepath does not exist.","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Ruizhi2001"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws FileNotFoundException {","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"Ruizhi2001"},"content":"        Scanner s \u003d new Scanner(this.textFile);","lastModifiedDate":"2023-09-15"},{"lineNumber":53,"author":{"gitId":"Ruizhi2001"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"Ruizhi2001"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"Ruizhi2001"},"content":"            String taskContent \u003d s.nextLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"Ruizhi2001"},"content":"            String[] input \u003d parser.splitInputFromFile(taskContent);","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"Ruizhi2001"},"content":"            String category \u003d input[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"Ruizhi2001"},"content":"            String marked \u003d input[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"Ruizhi2001"},"content":"            String description \u003d input[2];","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"Ruizhi2001"},"content":"            String location \u003d input[input.length - 1];","lastModifiedDate":"2023-09-15"},{"lineNumber":61,"author":{"gitId":"Ruizhi2001"},"content":"            switch (category) {","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"Ruizhi2001"},"content":"            case \"T\":","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"Ruizhi2001"},"content":"                ToDo todo \u003d new ToDo(description, location);","lastModifiedDate":"2023-09-15"},{"lineNumber":64,"author":{"gitId":"Ruizhi2001"},"content":"                taskList.add(todo);","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"Ruizhi2001"},"content":"                if (!marked.equals(\"0\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"Ruizhi2001"},"content":"                    todo.mark();","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"Ruizhi2001"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"Ruizhi2001"},"content":"                break;","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"Ruizhi2001"},"content":"            case \"D\":","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"Ruizhi2001"},"content":"                String by \u003d input[3];","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"Ruizhi2001"},"content":"                Deadline deadline \u003d new Deadline(description, by, location);","lastModifiedDate":"2023-09-15"},{"lineNumber":72,"author":{"gitId":"Ruizhi2001"},"content":"                taskList.add(deadline);","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"Ruizhi2001"},"content":"                if (!marked.equals(\"0\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"Ruizhi2001"},"content":"                    deadline.mark();","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"Ruizhi2001"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"Ruizhi2001"},"content":"                break;","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"Ruizhi2001"},"content":"            case \"E\":","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"Ruizhi2001"},"content":"                String from \u003d input[3];","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"Ruizhi2001"},"content":"                String to \u003d input[4];","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"Ruizhi2001"},"content":"                Event event \u003d new Event(description, from, to, location);","lastModifiedDate":"2023-09-15"},{"lineNumber":81,"author":{"gitId":"Ruizhi2001"},"content":"                taskList.add(event);","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"Ruizhi2001"},"content":"                if (!marked.equals(\"0\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"Ruizhi2001"},"content":"                    event.mark();","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"Ruizhi2001"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"Ruizhi2001"},"content":"                break;","lastModifiedDate":"2023-08-28"},{"lineNumber":86,"author":{"gitId":"Ruizhi2001"},"content":"            default:","lastModifiedDate":"2023-09-06"},{"lineNumber":87,"author":{"gitId":"Ruizhi2001"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":88,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"Ruizhi2001"},"content":"        return taskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":92,"author":{"gitId":"Ruizhi2001"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Ruizhi2001":92}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Ruizhi2001"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"Ruizhi2001"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"Ruizhi2001"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"Ruizhi2001"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"Ruizhi2001"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"Ruizhi2001"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"Ruizhi2001"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"Ruizhi2001"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"Ruizhi2001"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"Ruizhi2001"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"Ruizhi2001"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"Ruizhi2001"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"Ruizhi2001"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"Ruizhi2001"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"Ruizhi2001":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Ruizhi2001"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"Ruizhi2001"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"Ruizhi2001"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"Ruizhi2001"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"Ruizhi2001"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"Ruizhi2001"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"Ruizhi2001"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"ruiz.ui.MainWindow\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"Ruizhi2001"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"Ruizhi2001"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"Ruizhi2001"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"Ruizhi2001"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"Ruizhi2001"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"Ruizhi2001"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"Ruizhi2001"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"Ruizhi2001"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"Ruizhi2001"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"Ruizhi2001"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"Ruizhi2001":19}},{"path":"src/test/java/ruiz/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruizhi2001"},"content":"package ruiz;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Ruizhi2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"Ruizhi2001"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"Ruizhi2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"Ruizhi2001"},"content":"import ruiz.command.Command;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Ruizhi2001"},"content":"import ruiz.exception.BotException;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Ruizhi2001"},"content":"import ruiz.utils.Parser;","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Ruizhi2001"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Ruizhi2001"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Ruizhi2001"},"content":"    public void getCommand_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Ruizhi2001"},"content":"        assertEquals(Command.UNKNOWN, new Parser().getCommand(\"vbeirvernovner\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Ruizhi2001"},"content":"        assertEquals(Command.TODO, new Parser().getCommand(\"todo eat\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Ruizhi2001"},"content":"        assertEquals(Command.DEADLINE, new Parser().getCommand(\"deadline return books /by 2019-11-11 1900\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Ruizhi2001"},"content":"        assertEquals(Command.EVENT, new Parser().getCommand(","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Ruizhi2001"},"content":"                \"event project meeting /from 2019-11-11 1200 /to 2019-11-11 1200\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Ruizhi2001"},"content":"        assertEquals(Command.DELETE, new Parser().getCommand(\"delete 1\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Ruizhi2001"},"content":"        assertEquals(Command.MARK, new Parser().getCommand(\"mark 1\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Ruizhi2001"},"content":"        assertEquals(Command.UNMARK, new Parser().getCommand(\"unmark 1\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Ruizhi2001"},"content":"        assertEquals(Command.LIST, new Parser().getCommand(\"list\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Ruizhi2001"},"content":"        assertEquals(Command.BYE, new Parser().getCommand(\"bye\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Ruizhi2001"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Ruizhi2001"},"content":"    public void getEventDescription_success() throws BotException {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Ruizhi2001"},"content":"        assertEquals(\"project meeting\",","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Ruizhi2001"},"content":"                new Parser().getEventDescription(","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Ruizhi2001"},"content":"                        \"event project meeting /from 2019-11-11 1200 /to 2019-11-11 1200 /at home\"));","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Ruizhi2001"},"content":"    @Test","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"Ruizhi2001"},"content":"    public void getLocation_success() throws BotException {","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"Ruizhi2001"},"content":"        assertEquals(\"home\",","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"Ruizhi2001"},"content":"                new Parser().getLocation(","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"Ruizhi2001"},"content":"                        \"event project meeting /from 2019-11-11 1200 /to 2019-11-11 1200 /at home\"));","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"Ruizhi2001"},"content":"        assertEquals(\"library\",","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"Ruizhi2001"},"content":"                new Parser().getLocation(","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"Ruizhi2001"},"content":"                        \"deadline assignment /by 2011-11-11 1200 /at library\"));","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"Ruizhi2001"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Ruizhi2001"},"content":"    public void getEventDescription_exceptionThrown() throws BotException {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Ruizhi2001"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Ruizhi2001"},"content":"            assertEquals(\"event project meeting\",","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Ruizhi2001"},"content":"                    new Parser().getEventDescription(","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Ruizhi2001"},"content":"                            \"event project meeting /from 2019-11-11 1200 \"));","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Ruizhi2001"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Ruizhi2001"},"content":"        } catch (BotException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Ruizhi2001"},"content":"            assertEquals(\"OOPS!!! The description the event is incomplete.\"","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"Ruizhi2001"},"content":"                    + \"it should be in the format \u0027event *** /from *** /to ***\u0027\", e.getMessage());","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Ruizhi2001"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Ruizhi2001":56}},{"path":"src/test/java/ruiz/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruizhi2001"},"content":"package ruiz;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Ruizhi2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"Ruizhi2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Ruizhi2001"},"content":"import ruiz.task.ToDo;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Ruizhi2001"},"content":"public class ToDoTest {","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"Ruizhi2001"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Ruizhi2001"},"content":"    public void testMarkedSaveToString_success() {","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"Ruizhi2001"},"content":"        ToDo test \u003d new ToDo(\"eat\", \"home\");","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"Ruizhi2001"},"content":"        assertEquals(\"T | 0 | eat | home\", test.formatSaveTaskString());","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"Ruizhi2001"},"content":"        test.mark();","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Ruizhi2001"},"content":"        assertEquals(\"T | 1 | eat | home\", test.formatSaveTaskString());","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Ruizhi2001"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Ruizhi2001"},"content":"    public void testMarkTodo_success() {","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"Ruizhi2001"},"content":"        ToDo test \u003d new ToDo(\"read book\", \"library\");","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"Ruizhi2001"},"content":"        assertEquals(\"[T][ ] read book at: library\", test.toString());","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"Ruizhi2001"},"content":"        test.mark();","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Ruizhi2001"},"content":"        assertEquals(\"[T][X] read book at: library\", test.toString());","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Ruizhi2001"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Ruizhi2001":26}}]
