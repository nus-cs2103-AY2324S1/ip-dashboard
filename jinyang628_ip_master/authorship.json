[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"# duke.Duke project template","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"jinyang628"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jinyang628":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"jinyang628"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"jinyang628"},"content":"checkstyle {","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"jinyang628"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":43,"jinyang628":4}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"T| |love book","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"E|X|project meeting|2020-02-21|2020-05-12","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"T| |add book","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jinyang628":3}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"/** Class representing a task which has a deadline */","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"    private LocalDate by;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"     * Class constructor specifying the description of the deadline task.","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":"     * @param description the string description of the task.","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"jinyang628"},"content":"     * @param by the deadline of the task.","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"jinyang628"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"jinyang628"},"content":"        super(description);","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"jinyang628"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"jinyang628"},"content":"     * Returns a string description which contains the deadline of the task.","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"jinyang628"},"content":"     * @return a string representation of the deadline.","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"jinyang628"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":25,"author":{"gitId":"jinyang628"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":26,"author":{"gitId":"jinyang628"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":28,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"jinyang628"},"content":"     * Returns the information associated with the deadline to be stored on local hard disk.","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"jinyang628"},"content":"     * @return the string representation of the deadline saved onto the local hard disk.","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"jinyang628"},"content":"    public String saveTask() {","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"jinyang628"},"content":"        return \"D|\" + (this.isDone() ? \"X|\" : \" |\") + this.getDescription() + \"|\" + this.by;","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"jinyang628"},"content":"}","lastModifiedDate":"2023-08-19"},{"lineNumber":37,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"jinyang628":37}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-08-19"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-19"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"/** Chatbot to assist individuals in keeping track of pending tasks */","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":"    private enum SpecialTaskKeyword {","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"        TODO,","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"        DEADLINE,","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":"        EVENT","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"jinyang628"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"jinyang628"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"jinyang628"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"jinyang628"},"content":"    private Parser parser;","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"jinyang628"},"content":"    /** Constructor to initialise the chatbot */","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"jinyang628"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"jinyang628"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"jinyang628"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"jinyang628"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"jinyang628"},"content":"            this.taskList \u003d new TaskList(this.storage.load(), this.ui);","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"jinyang628"},"content":"        } catch (NoTasksStoredException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"jinyang628"},"content":"            this.ui.showLoadingError();","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"jinyang628"},"content":"            this.taskList \u003d new TaskList(this.ui);","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"jinyang628"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"jinyang628"},"content":"     * Allows the user to interact with the chatbot","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"jinyang628"},"content":"    public void run() {","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"jinyang628"},"content":"        this.ui.greetMessage();","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"jinyang628"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"jinyang628"},"content":"        SpecialTaskKeyword[] specialTasksKeywords \u003d SpecialTaskKeyword.values();","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"jinyang628"},"content":"        while (true) {","lastModifiedDate":"2023-08-19"},{"lineNumber":42,"author":{"gitId":"jinyang628"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-08-19"},{"lineNumber":43,"author":{"gitId":"jinyang628"},"content":"            try {","lastModifiedDate":"2023-08-19"},{"lineNumber":44,"author":{"gitId":"jinyang628"},"content":"                String actionWord \u003d this.parser.parseActionWord(userInput);","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"jinyang628"},"content":"                if (actionWord.equals(\"bye\")) {","lastModifiedDate":"2023-08-19"},{"lineNumber":46,"author":{"gitId":"jinyang628"},"content":"                    this.taskList.save(this.storage);","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"jinyang628"},"content":"                    break;","lastModifiedDate":"2023-08-19"},{"lineNumber":48,"author":{"gitId":"jinyang628"},"content":"                } else if (actionWord.equals(\"list\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"jinyang628"},"content":"                    this.taskList.listTasks();","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"jinyang628"},"content":"                } else if (actionWord.equals(\"mark\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"jinyang628"},"content":"                    int taskNumber \u003d this.parser.parseTaskNumber(userInput);","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"jinyang628"},"content":"                    this.taskList.markTaskAsDone(taskNumber);","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"jinyang628"},"content":"                } else if (actionWord.equals(\"unmark\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"jinyang628"},"content":"                    int taskNumber \u003d this.parser.parseTaskNumber(userInput);","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"jinyang628"},"content":"                    this.taskList.unmarkTask(taskNumber);","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"jinyang628"},"content":"                } else if (actionWord.equals(\"delete\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"jinyang628"},"content":"                    int taskNumber \u003d this.parser.parseTaskNumber(userInput);","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"jinyang628"},"content":"                    this.taskList.deleteTask(taskNumber);","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"jinyang628"},"content":"                } else if (actionWord.equals(\"find\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"jinyang628"},"content":"                    String description \u003d this.parser.parseFindDescription(userInput);","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"jinyang628"},"content":"                    this.taskList.filterTasks(description);","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"jinyang628"},"content":"                } else if (Arrays.stream(specialTasksKeywords).anyMatch(","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"jinyang628"},"content":"                        keyword -\u003e keyword.toString().toLowerCase().equals(actionWord))) {","lastModifiedDate":"2023-08-19"},{"lineNumber":64,"author":{"gitId":"jinyang628"},"content":"                    try {","lastModifiedDate":"2023-08-19"},{"lineNumber":65,"author":{"gitId":"jinyang628"},"content":"                        Task task \u003d this.parser.parseAddTaskInput(userInput, actionWord);","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"jinyang628"},"content":"                        this.taskList.addTask(task);","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"jinyang628"},"content":"                    } catch (InvalidTaskException e) {","lastModifiedDate":"2023-08-19"},{"lineNumber":68,"author":{"gitId":"jinyang628"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-08-19"},{"lineNumber":69,"author":{"gitId":"jinyang628"},"content":"                    }","lastModifiedDate":"2023-08-19"},{"lineNumber":70,"author":{"gitId":"jinyang628"},"content":"                } else {","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"jinyang628"},"content":"                    throw new InvalidInputException(\"ERROR: Invalid input\");","lastModifiedDate":"2023-08-19"},{"lineNumber":72,"author":{"gitId":"jinyang628"},"content":"                }","lastModifiedDate":"2023-08-19"},{"lineNumber":73,"author":{"gitId":"jinyang628"},"content":"            } catch (InvalidInputException e) {","lastModifiedDate":"2023-08-19"},{"lineNumber":74,"author":{"gitId":"jinyang628"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-19"},{"lineNumber":75,"author":{"gitId":"jinyang628"},"content":"            }","lastModifiedDate":"2023-08-19"},{"lineNumber":76,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":77,"author":{"gitId":"jinyang628"},"content":"        scanner.close();","lastModifiedDate":"2023-08-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":79,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"jinyang628"},"content":"     * Runs the chatbot and allows users to keep track of pending tasks","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"jinyang628"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"jinyang628"},"content":"     * @param args user inputs to interact with the chatbot","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"jinyang628"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"jinyang628"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jinyang628":89,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":" * Parent class of all the checked duke.exceptions to be implemented for duke.Duke","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":"     * Class constructor containing the message of the exception","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"     * @param message the string message associated with the exception","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"jinyang628"},"content":"        super(message);","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"jinyang628"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"jinyang628":15}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"/** Task which contains a date to start and date to finish. */","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"    private LocalDate from;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":"    private LocalDate to;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":"     * Class constructor specifying the description of the event task.","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"jinyang628"},"content":"     * @param description the string description of the event.","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"jinyang628"},"content":"     * @param from the string description of the date to begin the event.","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"jinyang628"},"content":"     * @param to the string description of the date to end the event.","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"jinyang628"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"jinyang628"},"content":"        super(description);","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"jinyang628"},"content":"        this.from \u003d LocalDate.parse(from);","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"jinyang628"},"content":"        this.to \u003d LocalDate.parse(to);","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":22,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":23,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"jinyang628"},"content":"     * Returns a string description which contains the starting and ending time of the event.","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"jinyang628"},"content":"     * @return a string representation of the event.","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"jinyang628"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":28,"author":{"gitId":"jinyang628"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":29,"author":{"gitId":"jinyang628"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"jinyang628"},"content":"                + \" to: \" + this.to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":32,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":33,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"jinyang628"},"content":"     * Returns the information associated with the event to be stored on local hard disk.","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"jinyang628"},"content":"     * @return the string representation of the event saved onto the local hard disk.","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"jinyang628"},"content":"    public String saveTask() {","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"jinyang628"},"content":"        return \"E|\" + (this.isDone() ? \"X|\" : \" |\") + this.getDescription() + \"|\" + this.from + \"|\" + this.to;","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"jinyang628"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"jinyang628":41}},{"path":"src/main/java/duke/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"/** Exception which occurs when the user input is invalid. */","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":"public class InvalidInputException extends DukeException {","lastModifiedDate":"2023-08-19"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":"     * Class constructor containing the message of the exception","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"     * @param message the string message associated with the exception","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"    public InvalidInputException(String message) {","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"        super(message);","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"jinyang628"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"jinyang628":13}},{"path":"src/main/java/duke/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"/** Exception which occurs when the description of the task is empty. */","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":"public class InvalidTaskException extends DukeException {","lastModifiedDate":"2023-08-19"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":"     * Class constructor containing the message of the exception","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"     * @param message the string message associated with the exception","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"    public InvalidTaskException(String message) {","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"        super(message);","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"jinyang628"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"jinyang628":13}},{"path":"src/main/java/duke/NoTasksStoredException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"/** Exception which occurs when the description of the task is empty. */","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":"public class NoTasksStoredException extends DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"     * Class constructor containing the message of the exception.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":"     * @param message the string message associated with the exception.","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":"    public NoTasksStoredException(String message) {","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"        super(message);","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"jinyang628":12}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":"/** Class that deals with making sense of the user command. */","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"public class Parser {","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":"     * Returns the description of the task the user is trying to filter for.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"     * @param userInput the entire user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":"     * @return a String value containing the desired description.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"jinyang628"},"content":"    public String parseFindDescription(String userInput) {","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"jinyang628"},"content":"        String[] userInputSegmented \u003d userInput.split(\" \");","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"jinyang628"},"content":"        StringBuilder description \u003d new StringBuilder();","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"jinyang628"},"content":"        for (int i \u003d 1; i \u003c userInputSegmented.length; i++) {","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"jinyang628"},"content":"            description.append(userInputSegmented[i] + \" \");","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"jinyang628"},"content":"        return description.toString();","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"jinyang628"},"content":"     * Returns a string representation of the type of command the user inputted.","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"jinyang628"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"jinyang628"},"content":"     * @param userInput the entire user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"jinyang628"},"content":"     * @return a String value indicating the type of user command.","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"jinyang628"},"content":"    public String parseActionWord(String userInput) {","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"jinyang628"},"content":"        String[] userInputSegmented \u003d userInput.split(\" \");","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"jinyang628"},"content":"        return userInputSegmented[0];","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"jinyang628"},"content":"     * Returns the task number associated with the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"jinyang628"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"jinyang628"},"content":"     * @param userInput the entire user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"jinyang628"},"content":"     * @return an integer indicating the number associated with the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"jinyang628"},"content":"    public int parseTaskNumber(String userInput) {","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"jinyang628"},"content":"        String[] userInputSegmented \u003d userInput.split(\" \");","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"jinyang628"},"content":"        return Integer.parseInt(userInputSegmented[1]) - 1;","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"jinyang628"},"content":"     * Returns the Task the user wants to add into Duke.","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"jinyang628"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"jinyang628"},"content":"     * @param userInput the entire user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"jinyang628"},"content":"     * @param actionWord the type of task the user wants to add.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"jinyang628"},"content":"     * @return the Task the user wants to add into Duke.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"jinyang628"},"content":"     * @throws InvalidTaskException if the description of the task is missing or the task type is invalid.","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"jinyang628"},"content":"    public Task parseAddTaskInput(String userInput, String actionWord) throws InvalidTaskException {","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"jinyang628"},"content":"        String[] userInputSegmented \u003d userInput.split(\" \");","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"jinyang628"},"content":"        if (userInputSegmented.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"jinyang628"},"content":"            throw new InvalidTaskException(\"ERROR: The description of a \" + userInputSegmented[0]","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"jinyang628"},"content":"                    + \" cannot be empty.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"jinyang628"},"content":"        switch (actionWord) {","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"jinyang628"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"jinyang628"},"content":"            return parseTodoInput(userInputSegmented);","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"jinyang628"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"jinyang628"},"content":"            return parseDeadlineInput(userInputSegmented);","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"jinyang628"},"content":"        case \"event\":","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"jinyang628"},"content":"            return parseEventInput(userInputSegmented);","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"jinyang628"},"content":"        default:","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"jinyang628"},"content":"            throw new InvalidTaskException(\"ERROR: The task is not of a valid type\");","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"jinyang628"},"content":"    private Deadline parseDeadlineInput(String[] userInputSegmented) {","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"jinyang628"},"content":"        int startIndex \u003d 0;","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"jinyang628"},"content":"        while (startIndex \u003c userInputSegmented.length) {","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"jinyang628"},"content":"            startIndex++;","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"jinyang628"},"content":"            if (userInputSegmented[startIndex].equals(\"/by\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"jinyang628"},"content":"                startIndex++;","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"jinyang628"},"content":"                break;","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"jinyang628"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"jinyang628"},"content":"        return new Deadline(","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"jinyang628"},"content":"                String.join(\" \", Arrays.copyOfRange(userInputSegmented, 1, startIndex - 1)),","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"jinyang628"},"content":"                String.join(\" \", Arrays.copyOfRange(userInputSegmented, startIndex, userInputSegmented.length)));","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"jinyang628"},"content":"    private Event parseEventInput(String[] userInputSegmented) {","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"jinyang628"},"content":"        int fromIndex \u003d 0;","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"jinyang628"},"content":"        int toIndex \u003d 0;","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"jinyang628"},"content":"        while (fromIndex \u003c userInputSegmented.length) {","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"jinyang628"},"content":"            fromIndex++;","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"jinyang628"},"content":"            toIndex++;","lastModifiedDate":"2023-08-27"},{"lineNumber":93,"author":{"gitId":"jinyang628"},"content":"            if (userInputSegmented[fromIndex].equals(\"/from\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"jinyang628"},"content":"                fromIndex++;","lastModifiedDate":"2023-08-27"},{"lineNumber":95,"author":{"gitId":"jinyang628"},"content":"                toIndex++;","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"jinyang628"},"content":"                break;","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"jinyang628"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"jinyang628"},"content":"        while (toIndex \u003c userInputSegmented.length) {","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"jinyang628"},"content":"            toIndex++;","lastModifiedDate":"2023-08-27"},{"lineNumber":101,"author":{"gitId":"jinyang628"},"content":"            if (userInputSegmented[toIndex].equals(\"/to\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":102,"author":{"gitId":"jinyang628"},"content":"                toIndex++;","lastModifiedDate":"2023-08-27"},{"lineNumber":103,"author":{"gitId":"jinyang628"},"content":"                break;","lastModifiedDate":"2023-08-27"},{"lineNumber":104,"author":{"gitId":"jinyang628"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":105,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":106,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":107,"author":{"gitId":"jinyang628"},"content":"        return new Event(","lastModifiedDate":"2023-08-27"},{"lineNumber":108,"author":{"gitId":"jinyang628"},"content":"                String.join(\" \", Arrays.copyOfRange(userInputSegmented, 1, fromIndex - 1)),","lastModifiedDate":"2023-08-27"},{"lineNumber":109,"author":{"gitId":"jinyang628"},"content":"                String.join(\" \", Arrays.copyOfRange(userInputSegmented, fromIndex, toIndex - 1)),","lastModifiedDate":"2023-08-27"},{"lineNumber":110,"author":{"gitId":"jinyang628"},"content":"                String.join(\" \", Arrays.copyOfRange(userInputSegmented, toIndex, userInputSegmented.length))","lastModifiedDate":"2023-08-27"},{"lineNumber":111,"author":{"gitId":"jinyang628"},"content":"        );","lastModifiedDate":"2023-08-27"},{"lineNumber":112,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":113,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":114,"author":{"gitId":"jinyang628"},"content":"    private Todo parseTodoInput(String[] userInputSegmented) {","lastModifiedDate":"2023-08-27"},{"lineNumber":115,"author":{"gitId":"jinyang628"},"content":"        return new Todo(String.join(\" \", Arrays.copyOfRange(userInputSegmented, 1,","lastModifiedDate":"2023-08-27"},{"lineNumber":116,"author":{"gitId":"jinyang628"},"content":"                userInputSegmented.length)));","lastModifiedDate":"2023-08-27"},{"lineNumber":117,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":118,"author":{"gitId":"jinyang628"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"jinyang628":118}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":"import java.io.File;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"/** CLass which deals with loading tasks from the file and saving tasks in the file. */","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"public class Storage {","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"jinyang628"},"content":"    private String dataFolderName;","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"jinyang628"},"content":"    private String fileName;","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"jinyang628"},"content":"     * Class constructor specifying the filePath to load and save data.","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"jinyang628"},"content":"     * @param filePath string representation of the required filePath.","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"jinyang628"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"jinyang628"},"content":"        String[] filePathSegmented \u003d filePath.split(\"/\");","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"jinyang628"},"content":"        this.dataFolderName \u003d filePathSegmented[0];","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"jinyang628"},"content":"        this.fileName \u003d filePathSegmented[1];","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"jinyang628"},"content":"     * Loads the tasks stored in the local hard disk.","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"jinyang628"},"content":"     * @return an ArrayList containing the stored tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"jinyang628"},"content":"     * @throws NoTasksStoredException","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"jinyang628"},"content":"    public ArrayList\u003cTask\u003e load() throws NoTasksStoredException {","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"jinyang628"},"content":"        ArrayList\u003cTask\u003e storedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"jinyang628"},"content":"        File dataFolder \u003d new File(this.dataFolderName);","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"jinyang628"},"content":"        if (!dataFolder.exists()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"jinyang628"},"content":"            dataFolder.mkdirs();","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"jinyang628"},"content":"        File file \u003d new File(dataFolder, this.fileName);","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"jinyang628"},"content":"        if (file.exists()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"jinyang628"},"content":"            try {","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"jinyang628"},"content":"                BufferedReader reader \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"jinyang628"},"content":"                String line;","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"jinyang628"},"content":"                while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"jinyang628"},"content":"                    String[] lineSegmented \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"jinyang628"},"content":"                    String taskType \u003d lineSegmented[0];","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"jinyang628"},"content":"                    String isDone \u003d lineSegmented[1];","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"jinyang628"},"content":"                    switch (isDone) {","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"jinyang628"},"content":"                    case \"X\":","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"jinyang628"},"content":"                        switch (taskType) {","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"jinyang628"},"content":"                        case \"T\":","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"jinyang628"},"content":"                            Todo todoTask \u003d new Todo(lineSegmented[2]);","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"jinyang628"},"content":"                            todoTask.markAsDone();","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"jinyang628"},"content":"                            storedTasks.add(todoTask);","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"jinyang628"},"content":"                            break;","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"jinyang628"},"content":"                        case \"D\":","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"jinyang628"},"content":"                            Deadline deadlineTask \u003d new Deadline(lineSegmented[2], lineSegmented[3]);","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"jinyang628"},"content":"                            deadlineTask.markAsDone();","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"jinyang628"},"content":"                            storedTasks.add(deadlineTask);","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"jinyang628"},"content":"                            break;","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"jinyang628"},"content":"                        case \"E\":","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"jinyang628"},"content":"                            Event eventTask \u003d new Event(lineSegmented[2], lineSegmented[3], lineSegmented[4]);","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"jinyang628"},"content":"                            eventTask.markAsDone();","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"jinyang628"},"content":"                            storedTasks.add(eventTask);","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"jinyang628"},"content":"                            break;","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"jinyang628"},"content":"                        default:","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"jinyang628"},"content":"                            System.out.println(\"Unknown duke.Task Type\");","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"jinyang628"},"content":"                            break;","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"jinyang628"},"content":"                        }","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"jinyang628"},"content":"                        break;","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"jinyang628"},"content":"                    case \" \":","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"jinyang628"},"content":"                        switch (taskType) {","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"jinyang628"},"content":"                        case \"T\":","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"jinyang628"},"content":"                            Todo todoTask \u003d new Todo(lineSegmented[2]);","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"jinyang628"},"content":"                            storedTasks.add(todoTask);","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"jinyang628"},"content":"                            break;","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"jinyang628"},"content":"                        case \"D\":","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"jinyang628"},"content":"                            Deadline deadlineTask \u003d new Deadline(lineSegmented[2], lineSegmented[3]);","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"jinyang628"},"content":"                            storedTasks.add(deadlineTask);","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"jinyang628"},"content":"                            break;","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"jinyang628"},"content":"                        case \"E\":","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"jinyang628"},"content":"                            Event eventTask \u003d new Event(lineSegmented[2], lineSegmented[3], lineSegmented[4]);","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"jinyang628"},"content":"                            storedTasks.add(eventTask);","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"jinyang628"},"content":"                            break;","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"jinyang628"},"content":"                        default:","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"jinyang628"},"content":"                            System.out.println(\"Unknown duke.Task Type\");","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"jinyang628"},"content":"                            break;","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"jinyang628"},"content":"                        }","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"jinyang628"},"content":"                        break;","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"jinyang628"},"content":"                    default:","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"jinyang628"},"content":"                        System.out.println(\"Unknown isDone marker\");","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"jinyang628"},"content":"                        break;","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"jinyang628"},"content":"                    }","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"jinyang628"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":93,"author":{"gitId":"jinyang628"},"content":"                reader.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"jinyang628"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":95,"author":{"gitId":"jinyang628"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"jinyang628"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"jinyang628"},"content":"        } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"jinyang628"},"content":"            throw new NoTasksStoredException(\"No stored tasks detected\");","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"jinyang628"},"content":"        return storedTasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":101,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":102,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":103,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":104,"author":{"gitId":"jinyang628"},"content":"     * Saves the tasks onto the local hard disk.","lastModifiedDate":"2023-08-27"},{"lineNumber":105,"author":{"gitId":"jinyang628"},"content":"     * @param tasks an ArrayList containing the tasks to be stored.","lastModifiedDate":"2023-08-27"},{"lineNumber":106,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":107,"author":{"gitId":"jinyang628"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-27"},{"lineNumber":108,"author":{"gitId":"jinyang628"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":109,"author":{"gitId":"jinyang628"},"content":"            FileWriter writer \u003d new FileWriter(this.dataFolderName + \"/\" + this.fileName);","lastModifiedDate":"2023-08-27"},{"lineNumber":110,"author":{"gitId":"jinyang628"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-27"},{"lineNumber":111,"author":{"gitId":"jinyang628"},"content":"                Task task \u003d tasks.get(i);","lastModifiedDate":"2023-08-27"},{"lineNumber":112,"author":{"gitId":"jinyang628"},"content":"                writer.write(task.saveTask());","lastModifiedDate":"2023-08-27"},{"lineNumber":113,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":114,"author":{"gitId":"jinyang628"},"content":"                if (i \u003c tasks.size() - 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":115,"author":{"gitId":"jinyang628"},"content":"                    writer.write(System.lineSeparator());","lastModifiedDate":"2023-08-27"},{"lineNumber":116,"author":{"gitId":"jinyang628"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":117,"author":{"gitId":"jinyang628"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":118,"author":{"gitId":"jinyang628"},"content":"            writer.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":119,"author":{"gitId":"jinyang628"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":120,"author":{"gitId":"jinyang628"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-27"},{"lineNumber":121,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":122,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":123,"author":{"gitId":"jinyang628"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"jinyang628":123}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":" * Abstract class which all the different types of tasks inherit from","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":"    private String description;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"     * Class constructor specifying the description of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":"     * @param description the string description of the task","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"jinyang628"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"jinyang628"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"jinyang628"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"jinyang628"},"content":"     * Returns the description of the task.","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"jinyang628"},"content":"     * @return the string description of the task.","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"jinyang628"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"jinyang628"},"content":"        return this.description;","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"jinyang628"},"content":"     * Returns a boolean indicator of whether the task is done.","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"jinyang628"},"content":"     * @return a boolean indicator of whether the task is done.","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"jinyang628"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"jinyang628"},"content":"        return this.isDone;","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"jinyang628"},"content":"     * Marks the task as completed","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"jinyang628"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-19"},{"lineNumber":39,"author":{"gitId":"jinyang628"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-19"},{"lineNumber":40,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":41,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":42,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"jinyang628"},"content":"     * Marks the task as incomplete","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"jinyang628"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-19"},{"lineNumber":46,"author":{"gitId":"jinyang628"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-19"},{"lineNumber":47,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":48,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":49,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"jinyang628"},"content":"     * Returns the information associated with the task","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"jinyang628"},"content":"     * @return the string representation of the task description and its state of completion","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"jinyang628"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":54,"author":{"gitId":"jinyang628"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":55,"author":{"gitId":"jinyang628"},"content":"        String prefix \u003d \"\";","lastModifiedDate":"2023-08-19"},{"lineNumber":56,"author":{"gitId":"jinyang628"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-08-19"},{"lineNumber":57,"author":{"gitId":"jinyang628"},"content":"            prefix \u003d \"[X]\";","lastModifiedDate":"2023-08-19"},{"lineNumber":58,"author":{"gitId":"jinyang628"},"content":"        } else {","lastModifiedDate":"2023-08-19"},{"lineNumber":59,"author":{"gitId":"jinyang628"},"content":"            prefix \u003d \"[ ]\";","lastModifiedDate":"2023-08-19"},{"lineNumber":60,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":61,"author":{"gitId":"jinyang628"},"content":"        return prefix + \" \" + this.description;","lastModifiedDate":"2023-08-19"},{"lineNumber":62,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":63,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"jinyang628"},"content":"    public abstract String saveTask();","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"jinyang628"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"jinyang628":65}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":"import java.util.List;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"public class TaskList {","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks, Ui ui) {","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"jinyang628"},"content":"    public TaskList(Ui ui) {","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"jinyang628"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"jinyang628"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"jinyang628"},"content":"    public void filterTasks(String description) {","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"jinyang628"},"content":"        List\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"jinyang628"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"jinyang628"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"jinyang628"},"content":"            if (task.getDescription().contains(description)) {","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"jinyang628"},"content":"                filteredTasks.add(task);","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"jinyang628"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"jinyang628"},"content":"        this.ui.listFoundTasks(filteredTasks);","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"jinyang628"},"content":"    public void save(Storage storage) {","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"jinyang628"},"content":"        storage.save(this.tasks);","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"jinyang628"},"content":"        this.ui.exitMessage();","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"jinyang628"},"content":"     * Prints out the list of tasks tracked by the chatbot","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"jinyang628"},"content":"    public void listTasks() {","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"jinyang628"},"content":"        this.ui.listMessage(tasks);","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"jinyang628"},"content":"    public void markTaskAsDone(int taskNumber) {","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"jinyang628"},"content":"        Task task \u003d this.tasks.get(taskNumber);","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"jinyang628"},"content":"        task.markAsDone();","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"jinyang628"},"content":"        this.ui.markTaskAsDoneMessage(task);","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"jinyang628"},"content":"    public void unmarkTask(int taskNumber) {","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"jinyang628"},"content":"        Task task \u003d this.tasks.get(taskNumber);","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"jinyang628"},"content":"        task.unmark();","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"jinyang628"},"content":"        this.ui.unmarkTaskMessage(task);","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"jinyang628"},"content":"    public void deleteTask(int taskNumber) {","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"jinyang628"},"content":"        Task task \u003d this.tasks.remove(taskNumber);","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"jinyang628"},"content":"        this.ui.deleteTaskMessage(task, this.tasks.size());","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"jinyang628"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"jinyang628"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"jinyang628"},"content":"        this.ui.addTaskMessage(task, this.tasks.size());","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"jinyang628"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"jinyang628":62}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"/** Task which contains only a description */","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":"     * Class constructor specifying the description of the _todo task.","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"     * @param description the string description of the _todo task.","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"        super(description);","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"jinyang628"},"content":"     * Returns the information associated with the _todo task.","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"jinyang628"},"content":"     * @return the string representation of the task description and its state of completion.","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"jinyang628"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"jinyang628"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"jinyang628"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-19"},{"lineNumber":21,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":22,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"jinyang628"},"content":"     * Returns the information associated with the _todo to be stored on local hard disk.","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"jinyang628"},"content":"     * @return the string representation of the _todo saved onto the local hard disk.","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"jinyang628"},"content":"    public String saveTask() {","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"jinyang628"},"content":"        return \"T|\" + (this.isDone() ? \"X|\" : \" |\") + this.getDescription();","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"jinyang628"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"jinyang628":30}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":"import java.util.List;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"public class Ui {","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"    public void listFoundTasks(List\u003cTask\u003e filteredTasks) {","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"        for (int i \u003d 0; i \u003c filteredTasks.size(); i++) {","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"            System.out.printf(\"%d.%s\\n\", i + 1, filteredTasks.get(i).toString());","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"jinyang628"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"jinyang628"},"content":"        System.out.println(\"~~No stored tasks detected~~\\n\");","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"jinyang628"},"content":"    public void greetMessage() {","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"jinyang628"},"content":"        System.out.println(\"Hello! I\u0027m HAPPY\\nWhat can I do for you?\\n\");","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"jinyang628"},"content":"    public void exitMessage() {","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"jinyang628"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"jinyang628"},"content":"    public void listMessage(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"jinyang628"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"jinyang628"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"jinyang628"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"jinyang628"},"content":"            System.out.printf(\"  %d.%s%n\", i + 1, task);","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"jinyang628"},"content":"    public void markTaskAsDoneMessage(Task task) {","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"jinyang628"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"jinyang628"},"content":"        System.out.printf(\"  %s%n\", task);","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"jinyang628"},"content":"    public void unmarkTaskMessage(Task task) {","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"jinyang628"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"jinyang628"},"content":"        System.out.printf(\"  %s%n\", task);","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"jinyang628"},"content":"    public void deleteTaskMessage(Task task, int numOfTasks) {","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"jinyang628"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"jinyang628"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"jinyang628"},"content":"        System.out.printf(\"Now you have %d tasks in the list.%n\", numOfTasks);","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"jinyang628"},"content":"    public void addTaskMessage(Task task, int numOfTasks) {","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"jinyang628"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"jinyang628"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"jinyang628"},"content":"        System.out.printf(\"Now you have %d tasks in the list.%n\", numOfTasks);","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"jinyang628"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"jinyang628":55}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"jinyang628"},"content":"    public void parseAddTaskInput_successTodo() {","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"jinyang628"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"jinyang628"},"content":"            Parser parse \u003d new Parser();","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"jinyang628"},"content":"            Task task \u003d parse.parseAddTaskInput(\"todo read book\", \"todo\");","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"jinyang628"},"content":"            assertEquals(\"[T][ ] read book\", task.toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"jinyang628"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"jinyang628"},"content":"            fail();","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"jinyang628"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"jinyang628"},"content":"    public void parseAddTaskInput_successDeadline() {","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"jinyang628"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"jinyang628"},"content":"            Parser parse \u003d new Parser();","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"jinyang628"},"content":"            Task task \u003d parse.parseAddTaskInput(\"deadline return book /by 2019-01-15\", \"deadline\");","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"jinyang628"},"content":"            task.markAsDone();","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"jinyang628"},"content":"            assertEquals(\"[D][X] return book (by: Jan 15 2019)\", task.toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"jinyang628"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"jinyang628"},"content":"            fail();","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"jinyang628"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"jinyang628"},"content":"    public void parseAddTaskInput_successEvent() {","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"jinyang628"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"jinyang628"},"content":"            Parser parse \u003d new Parser();","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"jinyang628"},"content":"            Task task \u003d parse.parseAddTaskInput(\"event project meeting /from 2019-02-15 /to 2019-03-30\", \"event\");","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"jinyang628"},"content":"            assertEquals(\"[E][ ] project meeting (from: Feb 15 2019 to: Mar 30 2019)\", task.toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"jinyang628"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"jinyang628"},"content":"            fail();","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"jinyang628"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"jinyang628"},"content":"    public void parseAddTaskInput_failureDeadline1() {","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"jinyang628"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"jinyang628"},"content":"            Parser parse \u003d new Parser();","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"jinyang628"},"content":"            Task task \u003d parse.parseAddTaskInput(\"deadline return book /by 2019-01-150\", \"deadline\");","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"jinyang628"},"content":"            task.markAsDone();","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"jinyang628"},"content":"            assertEquals(\"[D][X] return book (by: Jan 15 2019)\", task.toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"jinyang628"},"content":"            fail();","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"jinyang628"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"jinyang628"},"content":"            fail();","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"jinyang628"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"jinyang628"},"content":"            assertEquals(\"Text \u00272019-01-150\u0027 could not be parsed, unparsed text found at index 10\",","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"jinyang628"},"content":"                    e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"jinyang628"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"jinyang628"},"content":"    public void parseAddTaskInput_failureDeadline2() {","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"jinyang628"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"jinyang628"},"content":"            Parser parse \u003d new Parser();","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"jinyang628"},"content":"            Task task \u003d parse.parseAddTaskInput(\"deadline return book byebye 2019-01-150\", \"deadline\");","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"jinyang628"},"content":"            task.markAsDone();","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"jinyang628"},"content":"            assertEquals(\"[D][X] return book (by: Jan 15 2019)\", task.toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"jinyang628"},"content":"            fail();","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"jinyang628"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"jinyang628"},"content":"            fail();","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"jinyang628"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"jinyang628"},"content":"            assertEquals(\"Index 5 out of bounds for length 5\", e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"jinyang628"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"jinyang628"},"content":"    public void parseAddTaskInput_failureEvent() {","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"jinyang628"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"jinyang628"},"content":"            Parser parse \u003d new Parser();","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"jinyang628"},"content":"            Task task \u003d parse.parseAddTaskInput(\"event project meeting /to 2019-02-15 /from 2019-03-30\", \"event\");","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"jinyang628"},"content":"            task.markAsDone();","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"jinyang628"},"content":"            assertEquals(\"[E][X] project meeting (from: Feb 15 2019 to: Mar 30 2019)\", task.toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"jinyang628"},"content":"            fail();","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"jinyang628"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"jinyang628"},"content":"            fail();","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"jinyang628"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"jinyang628"},"content":"            assertEquals(\"Index 7 out of bounds for length 7\", e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"jinyang628"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"jinyang628":91}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"public class TodoTest {","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"    public void todoMarkAsDone_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":"        Todo todoTask \u003d new Todo(\"Read Book\");","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"jinyang628"},"content":"        todoTask.markAsDone();","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"jinyang628"},"content":"        assertEquals(\"[T][X] Read Book\", todoTask.toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"jinyang628"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"jinyang628"},"content":"    public void todoUnmark_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"jinyang628"},"content":"        Todo todoTask \u003d new Todo(\"Read Book\");","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"jinyang628"},"content":"        todoTask.markAsDone();","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"jinyang628"},"content":"        todoTask.unmark();","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"jinyang628"},"content":"        assertEquals(\"[T][ ] Read Book\", todoTask.toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"jinyang628"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"jinyang628"},"content":"    public void todoComplicatedName_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"jinyang628"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"jinyang628"},"content":"            Todo todoTask \u003d new Todo(\"1234567890-\u003d+qwertyuiop[]\u0027;.,/asdfghkl\u0027\");","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"jinyang628"},"content":"            assertEquals(\"[T][ ] 1234567890-\u003d+qwertyuiop[]\u0027;.,/asdfghkl\u0027\", todoTask.toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"jinyang628"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"jinyang628"},"content":"            fail();","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"jinyang628"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"jinyang628":34}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"todo borrow book","lastModifiedDate":"2023-08-19"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"deadline return book /by 2019-01-15","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"mark 2","lastModifiedDate":"2023-08-19"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":"event project meeting /from 2019-02-15 /to 2019-03-30","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":"unmark 2","lastModifiedDate":"2023-08-19"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":"delete 1","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"bye","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"jinyang628":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"javac  -cp ..\\src\\main\\java\\duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"jinyang628":2}}]
