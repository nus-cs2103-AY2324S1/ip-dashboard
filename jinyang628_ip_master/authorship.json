[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"# duke.Duke project template","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"jinyang628"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jinyang628":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.11\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":16,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"jinyang628"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"jinyang628"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"jinyang628"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"jinyang628"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"jinyang628"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"jinyang628"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"jinyang628"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"jinyang628"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"jinyang628"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"jinyang628"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"jinyang628"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"jinyang628"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"jinyang628"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"jinyang628"},"content":"javafx {","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"jinyang628"},"content":"    version \u003d \u002717\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"jinyang628"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"jinyang628"},"content":"}","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"jinyang628"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"jinyang628"},"content":"checkstyle {","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"jinyang628"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"jinyang628"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"jinyang628"},"content":"run {","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"jinyang628"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"jinyang628"},"content":"}","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"jinyang628"},"content":"tasks.build.dependsOn shadowJar","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":41,"jinyang628":33}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"E|X|project meeting|2019-02-15|2019-03-30","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"T| |borrow book","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"D|X|return book|2019-01-15","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"jinyang628":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"# Duke","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"### Feature-ABC","lastModifiedDate":"2021-07-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Description of the feature.","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"### Feature-XYZ","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Description of the feature.","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"### `Keyword` - Describe action","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Describe the action and its outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"`keyword (optional arguments)`","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Description of the outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2021-07-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"jinyang628":1,"-":28}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"/** Class representing a task which has a deadline */","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"    private LocalDate by;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"     * Class constructor specifying the description of the deadline task.","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":"     * @param description the string description of the task.","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"jinyang628"},"content":"     * @param by the deadline of the task.","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"jinyang628"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"jinyang628"},"content":"        super(description);","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"jinyang628"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"jinyang628"},"content":"     * Returns a string description which contains the deadline of the task.","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"jinyang628"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":24,"author":{"gitId":"jinyang628"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":25,"author":{"gitId":"jinyang628"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":27,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"jinyang628"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"jinyang628"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"jinyang628"},"content":"        if (!(obj instanceof Deadline)) {","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"jinyang628"},"content":"            return false;","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"jinyang628"},"content":"        Deadline task \u003d (Deadline) obj;","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"jinyang628"},"content":"        int indexOfTaskDescription \u003d 7;","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"jinyang628"},"content":"        if (this.toString().substring(indexOfTaskDescription).equals(","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"jinyang628"},"content":"                task.toString().substring(indexOfTaskDescription))) {","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"jinyang628"},"content":"            return true;","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"jinyang628"},"content":"        return false;","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"jinyang628"},"content":"     * Returns the information associated with the deadline to be stored on local hard disk.","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"jinyang628"},"content":"     * @return the string representation of the deadline saved onto the local hard disk.","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"jinyang628"},"content":"    public String saveTask() {","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"jinyang628"},"content":"        return \"D|\" + (this.isDone() ? \"X|\" : \" |\") + this.getDescription() + \"|\" + this.by;","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"jinyang628"},"content":"}","lastModifiedDate":"2023-08-19"},{"lineNumber":50,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"jinyang628":50}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"jinyang628"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"jinyang628"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"jinyang628"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"jinyang628"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"jinyang628"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"jinyang628"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"jinyang628"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"jinyang628"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"jinyang628"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"jinyang628"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"jinyang628"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"jinyang628"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"jinyang628"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"jinyang628"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"jinyang628"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"jinyang628"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"jinyang628"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"jinyang628"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"jinyang628"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"jinyang628"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"jinyang628"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"jinyang628"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"jinyang628"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"jinyang628"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"jinyang628"},"content":"    private void flip() {","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"jinyang628"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"jinyang628"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"jinyang628"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"jinyang628"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"jinyang628"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"jinyang628"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"jinyang628"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"jinyang628"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"jinyang628"},"content":"        db.flip();","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"jinyang628"},"content":"        return db;","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"jinyang628"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jinyang628":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-08-19"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"/** Chatbot to assist individuals in keeping track of pending tasks. */","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"    private enum SpecialTaskKeyword {","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":"        TODO,","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"jinyang628"},"content":"        DEADLINE,","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"jinyang628"},"content":"        EVENT","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"jinyang628"},"content":"    private SpecialTaskKeyword[] specialTasksKeywords \u003d SpecialTaskKeyword.values();","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"jinyang628"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"jinyang628"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"jinyang628"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"jinyang628"},"content":"    private Parser parser;","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":22,"author":{"gitId":"jinyang628"},"content":"    /** Constructor to initialise the chatbot */","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"jinyang628"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"jinyang628"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"jinyang628"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"jinyang628"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"jinyang628"},"content":"            this.taskList \u003d new TaskList(this.storage.load(), this.ui);","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"jinyang628"},"content":"        } catch (NoTasksStoredException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"jinyang628"},"content":"            this.taskList \u003d new TaskList(this.ui);","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"jinyang628"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"jinyang628"},"content":"     * Returns Duke\u0027s response to the user\u0027s input.","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"jinyang628"},"content":"     * @param input a string representation of the user\u0027s input.","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"jinyang628"},"content":"     * @return a string message representing Duke\u0027s response.","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"jinyang628"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"jinyang628"},"content":"        try {","lastModifiedDate":"2023-08-19"},{"lineNumber":41,"author":{"gitId":"jinyang628"},"content":"            String actionWord \u003d this.parser.parseActionWord(input);","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"jinyang628"},"content":"            int taskNumber \u003d -1;","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"jinyang628"},"content":"            switch (actionWord) {","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"jinyang628"},"content":"            case \"bye\":","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"jinyang628"},"content":"                this.taskList.save(this.storage);","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"jinyang628"},"content":"                Platform.exit();","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"jinyang628"},"content":"                break;","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"jinyang628"},"content":"            case \"list\":","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"jinyang628"},"content":"                return this.taskList.listTasks();","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"jinyang628"},"content":"            case \"mark\":","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"jinyang628"},"content":"                taskNumber \u003d this.parser.parseTaskNumber(input);","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"jinyang628"},"content":"                return this.taskList.markTaskAsDone(taskNumber);","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"jinyang628"},"content":"            case \"unmark\":","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"jinyang628"},"content":"                taskNumber \u003d this.parser.parseTaskNumber(input);","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"jinyang628"},"content":"                return this.taskList.unmarkTask(taskNumber);","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"jinyang628"},"content":"            case \"delete\":","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"jinyang628"},"content":"                taskNumber \u003d this.parser.parseTaskNumber(input);","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"jinyang628"},"content":"                return this.taskList.deleteTask(taskNumber);","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"jinyang628"},"content":"            case \"find\":","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"jinyang628"},"content":"                String description \u003d this.parser.parseFindDescription(input);","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"jinyang628"},"content":"                return this.taskList.filterTasks(description);","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"jinyang628"},"content":"            default:","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"jinyang628"},"content":"                if (Arrays.stream(this.specialTasksKeywords)","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"jinyang628"},"content":"                        .anyMatch(keyword -\u003e keyword.toString().toLowerCase().equals(actionWord))) {","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"jinyang628"},"content":"                    try {","lastModifiedDate":"2023-08-19"},{"lineNumber":66,"author":{"gitId":"jinyang628"},"content":"                        Task task \u003d this.parser.parseAddTaskInput(input, actionWord);","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"jinyang628"},"content":"                        return this.taskList.addTask(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"jinyang628"},"content":"                    } catch (InvalidTaskException e) {","lastModifiedDate":"2023-08-19"},{"lineNumber":69,"author":{"gitId":"jinyang628"},"content":"                        return e.getMessage();","lastModifiedDate":"2023-09-15"},{"lineNumber":70,"author":{"gitId":"jinyang628"},"content":"                    }","lastModifiedDate":"2023-08-19"},{"lineNumber":71,"author":{"gitId":"jinyang628"},"content":"                } else {","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"jinyang628"},"content":"                    throw new InvalidInputException(\"ERROR: Invalid input\");","lastModifiedDate":"2023-08-19"},{"lineNumber":73,"author":{"gitId":"jinyang628"},"content":"                }","lastModifiedDate":"2023-08-19"},{"lineNumber":74,"author":{"gitId":"jinyang628"},"content":"            }","lastModifiedDate":"2023-09-09"},{"lineNumber":75,"author":{"gitId":"jinyang628"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2023-08-19"},{"lineNumber":76,"author":{"gitId":"jinyang628"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":78,"author":{"gitId":"jinyang628"},"content":"        return \"ERROR\";","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jinyang628":77,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":" * Parent class of all the checked duke.exceptions to be implemented for duke.Duke","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":"     * Class constructor containing the message of the exception","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"     * @param message the string message associated with the exception","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"jinyang628"},"content":"        super(message);","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"jinyang628"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"jinyang628":15}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"/** Task which contains a date to start and date to finish. */","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"    private LocalDate from;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":"    private LocalDate to;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":"     * Class constructor specifying the description of the event task.","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"jinyang628"},"content":"     * @param description the string description of the event.","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"jinyang628"},"content":"     * @param from the string description of the date to begin the event.","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"jinyang628"},"content":"     * @param to the string description of the date to end the event.","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"jinyang628"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"jinyang628"},"content":"        super(description);","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"jinyang628"},"content":"        this.from \u003d LocalDate.parse(from);","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"jinyang628"},"content":"        this.to \u003d LocalDate.parse(to);","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":22,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":23,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"jinyang628"},"content":"     * Returns a string description which contains the starting and ending time of the event.","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"jinyang628"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":27,"author":{"gitId":"jinyang628"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":28,"author":{"gitId":"jinyang628"},"content":"        assert this.from !\u003d null;","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"jinyang628"},"content":"        assert this.to !\u003d null;","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"jinyang628"},"content":"        String startingDate \u003d this.from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"jinyang628"},"content":"        String endingDate \u003d this.to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"jinyang628"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), startingDate, endingDate);","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":34,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":35,"author":{"gitId":"jinyang628"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"jinyang628"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"jinyang628"},"content":"        if (!(obj instanceof Event)) {","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"jinyang628"},"content":"            return false;","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"jinyang628"},"content":"        Event task \u003d (Event) obj;","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"jinyang628"},"content":"        int indexOfTaskDescription \u003d 7;","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"jinyang628"},"content":"        if (this.toString().substring(indexOfTaskDescription).equals(","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"jinyang628"},"content":"                task.toString().substring(indexOfTaskDescription))) {","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"jinyang628"},"content":"            return true;","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"jinyang628"},"content":"        return false;","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"jinyang628"},"content":"     * Returns the information associated with the event to be stored on the local hard disk.","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"jinyang628"},"content":"     * @return the string representation of the event saved onto the local hard disk.","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"jinyang628"},"content":"    public String saveTask() {","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"jinyang628"},"content":"        String isDoneMarker \u003d this.isDone() ? \"X\" : \" \";","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"jinyang628"},"content":"        return String.format(\"E|%s|%s|%s|%s\", isDoneMarker, this.getDescription(), this.from, this.to);","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"jinyang628"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"jinyang628":58}},{"path":"src/main/java/duke/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"/** Exception which occurs when the user input is invalid. */","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":"public class InvalidInputException extends DukeException {","lastModifiedDate":"2023-08-19"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":"     * Class constructor containing the message of the exception","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"     * @param message the string message associated with the exception","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"    public InvalidInputException(String message) {","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"        super(message);","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"jinyang628"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"jinyang628":13}},{"path":"src/main/java/duke/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"/** Exception which occurs when the description of the task is empty. */","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":"public class InvalidTaskException extends DukeException {","lastModifiedDate":"2023-08-19"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":"     * Class constructor containing the message of the exception","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"     * @param message the string message associated with the exception","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"    public InvalidTaskException(String message) {","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"        super(message);","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"jinyang628"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"jinyang628":13}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"public class Launcher {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jinyang628":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"jinyang628"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"jinyang628"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"jinyang628"},"content":"    private final Duke duke \u003d new Duke(\"data/tasks.txt\");","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"jinyang628"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"jinyang628"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"jinyang628"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"jinyang628"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"jinyang628"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"jinyang628"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"jinyang628"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"jinyang628"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"jinyang628"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"jinyang628"},"content":"            stage.show();","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"jinyang628"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"jinyang628"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"jinyang628"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jinyang628":32}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"jinyang628"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"jinyang628"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"jinyang628"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"jinyang628"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"jinyang628"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"jinyang628"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"jinyang628"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"jinyang628"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"jinyang628"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"jinyang628"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/happy1.jpg\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"jinyang628"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/happy2.jpg\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"jinyang628"},"content":"     * Initialises the Duke GUI.","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"jinyang628"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"jinyang628"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"jinyang628"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"jinyang628"},"content":"        // Display a greeting message when the GUI initializes","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"jinyang628"},"content":"        String greeting \u003d \"Hello! I\u0027m Duke. How can I assist you today?\";","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"jinyang628"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(greeting, dukeImage));","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"jinyang628"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"jinyang628"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"jinyang628"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"jinyang628"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"jinyang628"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"jinyang628"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"jinyang628"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"jinyang628"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"jinyang628"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"jinyang628"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"jinyang628"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"jinyang628"},"content":"        );","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"jinyang628"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":57,"author":{"gitId":"jinyang628"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jinyang628":57}},{"path":"src/main/java/duke/NoTasksStoredException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"/** Exception which occurs when the description of the task is empty. */","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":"public class NoTasksStoredException extends DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"     * Class constructor containing the message of the exception.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":"     * @param message the string message associated with the exception.","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":"    public NoTasksStoredException(String message) {","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"        super(message);","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"jinyang628":12}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":"/** Class that deals with making sense of the user command. */","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"public class Parser {","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":"     * Returns the description of the task the user is trying to filter for.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"     * @param userInput the entire user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":"     * @return a String value containing the desired description.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"jinyang628"},"content":"    public String parseFindDescription(String userInput) {","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"jinyang628"},"content":"        String[] userInputSegmented \u003d userInput.split(\" \");","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"jinyang628"},"content":"        StringBuilder description \u003d new StringBuilder();","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"jinyang628"},"content":"        for (int i \u003d 1; i \u003c userInputSegmented.length; i++) {","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"jinyang628"},"content":"            description.append(userInputSegmented[i] + \" \");","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"jinyang628"},"content":"        return description.toString();","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"jinyang628"},"content":"     * Returns a string representation of the type of command the user inputted.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"jinyang628"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"jinyang628"},"content":"     * @param userInput the entire user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"jinyang628"},"content":"     * @return a String value indicating the type of user command.","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"jinyang628"},"content":"    public String parseActionWord(String userInput) {","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"jinyang628"},"content":"        String[] userInputSegmented \u003d userInput.split(\" \");","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"jinyang628"},"content":"        return userInputSegmented[0];","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"jinyang628"},"content":"     * Returns the task number associated with the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"jinyang628"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"jinyang628"},"content":"     * @param userInput the entire user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"jinyang628"},"content":"     * @return an integer indicating the number associated with the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"jinyang628"},"content":"    public int parseTaskNumber(String userInput) {","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"jinyang628"},"content":"        String[] userInputSegmented \u003d userInput.split(\" \");","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"jinyang628"},"content":"        return Integer.parseInt(userInputSegmented[1]) - 1;","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"jinyang628"},"content":"     * Returns the Task the user wants to add into Duke.","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"jinyang628"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"jinyang628"},"content":"     * @param userInput the entire user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"jinyang628"},"content":"     * @param actionWord the type of task the user wants to add.","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"jinyang628"},"content":"     * @return the Task the user wants to add into Duke.","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"jinyang628"},"content":"     * @throws InvalidTaskException if a part of the task description is missing or the task type is invalid.","lastModifiedDate":"2023-09-15"},{"lineNumber":54,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"jinyang628"},"content":"    public Task parseAddTaskInput(String userInput, String actionWord) throws InvalidTaskException {","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"jinyang628"},"content":"        String[] userInputSegmented \u003d userInput.split(\" \");","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"jinyang628"},"content":"        if (userInputSegmented.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"jinyang628"},"content":"            throw new InvalidTaskException(\"ERROR: The description of a \" + userInputSegmented[0]","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"jinyang628"},"content":"                    + \" cannot be empty.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"jinyang628"},"content":"        switch (actionWord) {","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"jinyang628"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"jinyang628"},"content":"            return parseTodoInput(userInputSegmented);","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"jinyang628"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"jinyang628"},"content":"            return parseDeadlineInput(userInputSegmented);","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"jinyang628"},"content":"        case \"event\":","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"jinyang628"},"content":"            return parseEventInput(userInputSegmented);","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"jinyang628"},"content":"        default:","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"jinyang628"},"content":"            throw new InvalidTaskException(\"ERROR: The task is not of a valid type\");","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"jinyang628"},"content":"    private Deadline parseDeadlineInput(String[] userInputSegmented) throws InvalidTaskException {","lastModifiedDate":"2023-09-15"},{"lineNumber":76,"author":{"gitId":"jinyang628"},"content":"        int startIndex \u003d 0;","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"jinyang628"},"content":"        assert Arrays.asList(userInputSegmented).contains(\"/by\");","lastModifiedDate":"2023-09-09"},{"lineNumber":78,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":79,"author":{"gitId":"jinyang628"},"content":"        while (true) {","lastModifiedDate":"2023-09-09"},{"lineNumber":80,"author":{"gitId":"jinyang628"},"content":"            startIndex++;","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"jinyang628"},"content":"            if (startIndex \u003d\u003d userInputSegmented.length) {","lastModifiedDate":"2023-09-15"},{"lineNumber":82,"author":{"gitId":"jinyang628"},"content":"                throw new InvalidTaskException(\"ERROR: Missing the /by marker\");","lastModifiedDate":"2023-09-15"},{"lineNumber":83,"author":{"gitId":"jinyang628"},"content":"            }","lastModifiedDate":"2023-09-15"},{"lineNumber":84,"author":{"gitId":"jinyang628"},"content":"            if (userInputSegmented[startIndex].equals(\"/by\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"jinyang628"},"content":"                startIndex++;","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"jinyang628"},"content":"                break;","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"jinyang628"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"jinyang628"},"content":"        return new Deadline(","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"jinyang628"},"content":"                String.join(\" \", Arrays.copyOfRange(userInputSegmented, 1, startIndex - 1)),","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"jinyang628"},"content":"                String.join(\" \", Arrays.copyOfRange(userInputSegmented, startIndex, userInputSegmented.length)));","lastModifiedDate":"2023-08-27"},{"lineNumber":93,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":95,"author":{"gitId":"jinyang628"},"content":"    private Event parseEventInput(String[] userInputSegmented) throws InvalidTaskException {","lastModifiedDate":"2023-09-15"},{"lineNumber":96,"author":{"gitId":"jinyang628"},"content":"        int fromIndex \u003d 0;","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"jinyang628"},"content":"        int toIndex \u003d 0;","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":99,"author":{"gitId":"jinyang628"},"content":"        while (fromIndex \u003c userInputSegmented.length) {","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"jinyang628"},"content":"            fromIndex++;","lastModifiedDate":"2023-08-27"},{"lineNumber":101,"author":{"gitId":"jinyang628"},"content":"            toIndex++;","lastModifiedDate":"2023-08-27"},{"lineNumber":102,"author":{"gitId":"jinyang628"},"content":"            if (fromIndex \u003d\u003d userInputSegmented.length) {","lastModifiedDate":"2023-09-15"},{"lineNumber":103,"author":{"gitId":"jinyang628"},"content":"                throw new InvalidTaskException(\"ERROR: Missing the /from marker\");","lastModifiedDate":"2023-09-15"},{"lineNumber":104,"author":{"gitId":"jinyang628"},"content":"            }","lastModifiedDate":"2023-09-15"},{"lineNumber":105,"author":{"gitId":"jinyang628"},"content":"            if (userInputSegmented[fromIndex].equals(\"/from\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":106,"author":{"gitId":"jinyang628"},"content":"                fromIndex++;","lastModifiedDate":"2023-08-27"},{"lineNumber":107,"author":{"gitId":"jinyang628"},"content":"                toIndex++;","lastModifiedDate":"2023-08-27"},{"lineNumber":108,"author":{"gitId":"jinyang628"},"content":"                break;","lastModifiedDate":"2023-08-27"},{"lineNumber":109,"author":{"gitId":"jinyang628"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":110,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":111,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":112,"author":{"gitId":"jinyang628"},"content":"        while (toIndex \u003c userInputSegmented.length) {","lastModifiedDate":"2023-08-27"},{"lineNumber":113,"author":{"gitId":"jinyang628"},"content":"            toIndex++;","lastModifiedDate":"2023-08-27"},{"lineNumber":114,"author":{"gitId":"jinyang628"},"content":"            if (toIndex \u003d\u003d userInputSegmented.length) {","lastModifiedDate":"2023-09-15"},{"lineNumber":115,"author":{"gitId":"jinyang628"},"content":"                throw new InvalidTaskException(\"ERROR: Missing the /to marker\");","lastModifiedDate":"2023-09-15"},{"lineNumber":116,"author":{"gitId":"jinyang628"},"content":"            }","lastModifiedDate":"2023-09-15"},{"lineNumber":117,"author":{"gitId":"jinyang628"},"content":"            if (userInputSegmented[toIndex].equals(\"/to\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":118,"author":{"gitId":"jinyang628"},"content":"                toIndex++;","lastModifiedDate":"2023-08-27"},{"lineNumber":119,"author":{"gitId":"jinyang628"},"content":"                break;","lastModifiedDate":"2023-08-27"},{"lineNumber":120,"author":{"gitId":"jinyang628"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":121,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":122,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":123,"author":{"gitId":"jinyang628"},"content":"        return new Event(","lastModifiedDate":"2023-08-27"},{"lineNumber":124,"author":{"gitId":"jinyang628"},"content":"                String.join(\" \", Arrays.copyOfRange(userInputSegmented, 1, fromIndex - 1)),","lastModifiedDate":"2023-08-27"},{"lineNumber":125,"author":{"gitId":"jinyang628"},"content":"                String.join(\" \", Arrays.copyOfRange(userInputSegmented, fromIndex, toIndex - 1)),","lastModifiedDate":"2023-08-27"},{"lineNumber":126,"author":{"gitId":"jinyang628"},"content":"                String.join(\" \", Arrays.copyOfRange(userInputSegmented, toIndex, userInputSegmented.length))","lastModifiedDate":"2023-08-27"},{"lineNumber":127,"author":{"gitId":"jinyang628"},"content":"        );","lastModifiedDate":"2023-08-27"},{"lineNumber":128,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":129,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":130,"author":{"gitId":"jinyang628"},"content":"    private Todo parseTodoInput(String[] userInputSegmented) {","lastModifiedDate":"2023-08-27"},{"lineNumber":131,"author":{"gitId":"jinyang628"},"content":"        return new Todo(String.join(\" \", Arrays.copyOfRange(userInputSegmented, 1,","lastModifiedDate":"2023-08-27"},{"lineNumber":132,"author":{"gitId":"jinyang628"},"content":"                userInputSegmented.length)));","lastModifiedDate":"2023-08-27"},{"lineNumber":133,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":134,"author":{"gitId":"jinyang628"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"jinyang628":134}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":"import java.io.File;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"/** Class which deals with loading tasks from the file and saving tasks in the file. */","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"public class Storage {","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":"    private String dataFolderName;","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"jinyang628"},"content":"    private String fileName;","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"jinyang628"},"content":"     * Class constructor specifying the filePath to load and save data.","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"jinyang628"},"content":"     * @param filePath string representation of the required filePath.","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"jinyang628"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"jinyang628"},"content":"        String[] filePathSegmented \u003d filePath.split(\"/\");","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"jinyang628"},"content":"        this.dataFolderName \u003d filePathSegmented[0];","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"jinyang628"},"content":"        this.fileName \u003d filePathSegmented[1];","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"jinyang628"},"content":"     * Loads the tasks stored in the local hard disk.","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"jinyang628"},"content":"     * @return an ArrayList containing the stored tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"jinyang628"},"content":"     * @throws NoTasksStoredException","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"jinyang628"},"content":"    public ArrayList\u003cTask\u003e load() throws NoTasksStoredException {","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"jinyang628"},"content":"        ArrayList\u003cTask\u003e storedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"jinyang628"},"content":"        File dataFolder \u003d new File(this.dataFolderName);","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"jinyang628"},"content":"        if (!dataFolder.exists()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"jinyang628"},"content":"            dataFolder.mkdirs();","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"jinyang628"},"content":"        File file \u003d new File(dataFolder, this.fileName);","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"jinyang628"},"content":"        if (file.exists()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"jinyang628"},"content":"            try {","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"jinyang628"},"content":"                BufferedReader reader \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"jinyang628"},"content":"                String line;","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"jinyang628"},"content":"                while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"jinyang628"},"content":"                    String[] lineSegmented \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"jinyang628"},"content":"                    String taskType \u003d lineSegmented[0];","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"jinyang628"},"content":"                    String isDone \u003d lineSegmented[1];","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"jinyang628"},"content":"                    switch (isDone) {","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"jinyang628"},"content":"                    case \"X\":","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"jinyang628"},"content":"                        switch (taskType) {","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"jinyang628"},"content":"                        case \"T\":","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"jinyang628"},"content":"                            Todo todoTask \u003d new Todo(lineSegmented[2]);","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"jinyang628"},"content":"                            todoTask.markAsDone();","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"jinyang628"},"content":"                            storedTasks.add(todoTask);","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"jinyang628"},"content":"                            break;","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"jinyang628"},"content":"                        case \"D\":","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"jinyang628"},"content":"                            Deadline deadlineTask \u003d new Deadline(lineSegmented[2], lineSegmented[3]);","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"jinyang628"},"content":"                            deadlineTask.markAsDone();","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"jinyang628"},"content":"                            storedTasks.add(deadlineTask);","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"jinyang628"},"content":"                            break;","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"jinyang628"},"content":"                        case \"E\":","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"jinyang628"},"content":"                            Event eventTask \u003d new Event(lineSegmented[2], lineSegmented[3], lineSegmented[4]);","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"jinyang628"},"content":"                            eventTask.markAsDone();","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"jinyang628"},"content":"                            storedTasks.add(eventTask);","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"jinyang628"},"content":"                            break;","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"jinyang628"},"content":"                        default:","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"jinyang628"},"content":"                            System.out.println(\"Unknown duke.Task Type\");","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"jinyang628"},"content":"                            break;","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"jinyang628"},"content":"                        }","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"jinyang628"},"content":"                        break;","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"jinyang628"},"content":"                    case \" \":","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"jinyang628"},"content":"                        switch (taskType) {","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"jinyang628"},"content":"                        case \"T\":","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"jinyang628"},"content":"                            Todo todoTask \u003d new Todo(lineSegmented[2]);","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"jinyang628"},"content":"                            storedTasks.add(todoTask);","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"jinyang628"},"content":"                            break;","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"jinyang628"},"content":"                        case \"D\":","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"jinyang628"},"content":"                            Deadline deadlineTask \u003d new Deadline(lineSegmented[2], lineSegmented[3]);","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"jinyang628"},"content":"                            storedTasks.add(deadlineTask);","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"jinyang628"},"content":"                            break;","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"jinyang628"},"content":"                        case \"E\":","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"jinyang628"},"content":"                            Event eventTask \u003d new Event(lineSegmented[2], lineSegmented[3], lineSegmented[4]);","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"jinyang628"},"content":"                            storedTasks.add(eventTask);","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"jinyang628"},"content":"                            break;","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"jinyang628"},"content":"                        default:","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"jinyang628"},"content":"                            System.out.println(\"Unknown duke.Task Type\");","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"jinyang628"},"content":"                            break;","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"jinyang628"},"content":"                        }","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"jinyang628"},"content":"                        break;","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"jinyang628"},"content":"                    default:","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"jinyang628"},"content":"                        System.out.println(\"Unknown isDone marker\");","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"jinyang628"},"content":"                        break;","lastModifiedDate":"2023-08-27"},{"lineNumber":93,"author":{"gitId":"jinyang628"},"content":"                    }","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"jinyang628"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":95,"author":{"gitId":"jinyang628"},"content":"                reader.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"jinyang628"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"jinyang628"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"jinyang628"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"jinyang628"},"content":"        } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"jinyang628"},"content":"            throw new NoTasksStoredException(\"No stored tasks detected\");","lastModifiedDate":"2023-08-27"},{"lineNumber":101,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":102,"author":{"gitId":"jinyang628"},"content":"        return storedTasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":103,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":104,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":105,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":106,"author":{"gitId":"jinyang628"},"content":"     * Saves the tasks onto the local hard disk.","lastModifiedDate":"2023-08-27"},{"lineNumber":107,"author":{"gitId":"jinyang628"},"content":"     * @param tasks an ArrayList containing the tasks to be stored.","lastModifiedDate":"2023-08-27"},{"lineNumber":108,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":109,"author":{"gitId":"jinyang628"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-27"},{"lineNumber":110,"author":{"gitId":"jinyang628"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":111,"author":{"gitId":"jinyang628"},"content":"            System.out.println(this.dataFolderName + \"/\" + this.fileName);","lastModifiedDate":"2023-09-09"},{"lineNumber":112,"author":{"gitId":"jinyang628"},"content":"            FileWriter writer \u003d new FileWriter(this.dataFolderName + \"/\" + this.fileName);","lastModifiedDate":"2023-08-27"},{"lineNumber":113,"author":{"gitId":"jinyang628"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-27"},{"lineNumber":114,"author":{"gitId":"jinyang628"},"content":"                Task task \u003d tasks.get(i);","lastModifiedDate":"2023-08-27"},{"lineNumber":115,"author":{"gitId":"jinyang628"},"content":"                writer.write(task.saveTask());","lastModifiedDate":"2023-08-27"},{"lineNumber":116,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":117,"author":{"gitId":"jinyang628"},"content":"                if (i \u003c tasks.size() - 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":118,"author":{"gitId":"jinyang628"},"content":"                    writer.write(System.lineSeparator());","lastModifiedDate":"2023-08-27"},{"lineNumber":119,"author":{"gitId":"jinyang628"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":120,"author":{"gitId":"jinyang628"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":121,"author":{"gitId":"jinyang628"},"content":"            writer.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":122,"author":{"gitId":"jinyang628"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":123,"author":{"gitId":"jinyang628"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-27"},{"lineNumber":124,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":125,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":126,"author":{"gitId":"jinyang628"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"jinyang628":126}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":" * Abstract class which all the different types of tasks inherit from","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":"    private String description;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"     * Class constructor specifying the description of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":"     * @param description the string description of the task","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"jinyang628"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"jinyang628"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"jinyang628"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"jinyang628"},"content":"     * Returns the description of the task.","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"jinyang628"},"content":"     * @return the string description of the task.","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"jinyang628"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"jinyang628"},"content":"        return this.description;","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"jinyang628"},"content":"     * Returns a boolean indicator of whether the task is done.","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"jinyang628"},"content":"     * @return a boolean indicator of whether the task is done.","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"jinyang628"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"jinyang628"},"content":"        return this.isDone;","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"jinyang628"},"content":"     * Marks the task as completed","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"jinyang628"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-19"},{"lineNumber":39,"author":{"gitId":"jinyang628"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-19"},{"lineNumber":40,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":41,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":42,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"jinyang628"},"content":"     * Marks the task as incomplete","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"jinyang628"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-19"},{"lineNumber":46,"author":{"gitId":"jinyang628"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-19"},{"lineNumber":47,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":48,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":49,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"jinyang628"},"content":"     * Returns the information associated with the task","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"jinyang628"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":53,"author":{"gitId":"jinyang628"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":54,"author":{"gitId":"jinyang628"},"content":"        String prefix \u003d \"\";","lastModifiedDate":"2023-08-19"},{"lineNumber":55,"author":{"gitId":"jinyang628"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-08-19"},{"lineNumber":56,"author":{"gitId":"jinyang628"},"content":"            prefix \u003d \"[X]\";","lastModifiedDate":"2023-08-19"},{"lineNumber":57,"author":{"gitId":"jinyang628"},"content":"        } else {","lastModifiedDate":"2023-08-19"},{"lineNumber":58,"author":{"gitId":"jinyang628"},"content":"            prefix \u003d \"[ ]\";","lastModifiedDate":"2023-08-19"},{"lineNumber":59,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":60,"author":{"gitId":"jinyang628"},"content":"        return prefix + \" \" + this.description;","lastModifiedDate":"2023-08-19"},{"lineNumber":61,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":62,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"jinyang628"},"content":"    public abstract String saveTask();","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"jinyang628"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"jinyang628":64}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":"import java.util.List;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"/** Task List to store all the tasks. */","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":"public class TaskList {","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":"     * Class constructor when there are previously stored tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"jinyang628"},"content":"     * @param tasks list of tasks stored previously.","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"jinyang628"},"content":"     * @param ui the UI containing the message responses.","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"jinyang628"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks, Ui ui) {","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"jinyang628"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"jinyang628"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"jinyang628"},"content":"     * Class constructor when there are no previously stored tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"jinyang628"},"content":"     * @param ui the UI containing the message responses.","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"jinyang628"},"content":"    public TaskList(Ui ui) {","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"jinyang628"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"jinyang628"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"jinyang628"},"content":"     * Returns a string message containing the tasks which match","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"jinyang628"},"content":"     * the description inputted by the user.","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"jinyang628"},"content":"     * @param description the description inputted by the user.","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"jinyang628"},"content":"     * @return a string message containing the filtered tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"jinyang628"},"content":"    public String filterTasks(String description) {","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"jinyang628"},"content":"        List\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"jinyang628"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"jinyang628"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"jinyang628"},"content":"            if (task.getDescription().contains(description)) {","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"jinyang628"},"content":"                filteredTasks.add(task);","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"jinyang628"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"jinyang628"},"content":"        return this.ui.listFoundTasks(filteredTasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"jinyang628"},"content":"     * Saves the tasks currently tracked by Duke.","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"jinyang628"},"content":"     * @param storage the storage class which stores the tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"jinyang628"},"content":"    public void save(Storage storage) {","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"jinyang628"},"content":"        storage.save(this.tasks);","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"jinyang628"},"content":"     * Lists the tasks currently tracked by Duke.","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"jinyang628"},"content":"     * @return a string message containing the list of tasks tracked.","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"jinyang628"},"content":"    public String listTasks() {","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"jinyang628"},"content":"        return this.ui.listMessage(tasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"jinyang628"},"content":"     * Returns a string message indicating that the task is successfully","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"jinyang628"},"content":"     * marked as done.","lastModifiedDate":"2023-09-09"},{"lineNumber":66,"author":{"gitId":"jinyang628"},"content":"     * @param taskNumber the index of the task to be marked as done.","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"jinyang628"},"content":"     * @return a string message indicating that the task is marked as done.","lastModifiedDate":"2023-09-09"},{"lineNumber":68,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":69,"author":{"gitId":"jinyang628"},"content":"    public String markTaskAsDone(int taskNumber) {","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"jinyang628"},"content":"        Task task \u003d this.tasks.get(taskNumber);","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"jinyang628"},"content":"        task.markAsDone();","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"jinyang628"},"content":"        return this.ui.markTaskAsDoneMessage(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":76,"author":{"gitId":"jinyang628"},"content":"     * Returns a string message indicating that the task is marked as undone.","lastModifiedDate":"2023-09-09"},{"lineNumber":77,"author":{"gitId":"jinyang628"},"content":"     * @param taskNumber the index of the task to be marked as done.","lastModifiedDate":"2023-09-09"},{"lineNumber":78,"author":{"gitId":"jinyang628"},"content":"     * @return a string message indicating that the task is marked as undone.","lastModifiedDate":"2023-09-09"},{"lineNumber":79,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":80,"author":{"gitId":"jinyang628"},"content":"    public String unmarkTask(int taskNumber) {","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"jinyang628"},"content":"        Task task \u003d this.tasks.get(taskNumber);","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"jinyang628"},"content":"        task.unmark();","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"jinyang628"},"content":"        return this.ui.unmarkTaskMessage(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":87,"author":{"gitId":"jinyang628"},"content":"     * Deletes a task from the stored list.","lastModifiedDate":"2023-09-09"},{"lineNumber":88,"author":{"gitId":"jinyang628"},"content":"     * @param taskNumber the index of the task to be deleted.","lastModifiedDate":"2023-09-09"},{"lineNumber":89,"author":{"gitId":"jinyang628"},"content":"     * @return a string message indicating that the task is deleted.","lastModifiedDate":"2023-09-09"},{"lineNumber":90,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":91,"author":{"gitId":"jinyang628"},"content":"    public String deleteTask(int taskNumber) {","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"jinyang628"},"content":"        Task task \u003d this.tasks.remove(taskNumber);","lastModifiedDate":"2023-08-27"},{"lineNumber":93,"author":{"gitId":"jinyang628"},"content":"        return this.ui.deleteTaskMessage(task, this.tasks.size());","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":95,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":97,"author":{"gitId":"jinyang628"},"content":"     * Adds a task into the list.","lastModifiedDate":"2023-09-09"},{"lineNumber":98,"author":{"gitId":"jinyang628"},"content":"     * @param task the Task to be added.","lastModifiedDate":"2023-09-09"},{"lineNumber":99,"author":{"gitId":"jinyang628"},"content":"     * @return a string message indicating that the task is added.","lastModifiedDate":"2023-09-09"},{"lineNumber":100,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":101,"author":{"gitId":"jinyang628"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"jinyang628"},"content":"        int startOfDescriptionIndex \u003d 7;","lastModifiedDate":"2023-09-09"},{"lineNumber":103,"author":{"gitId":"jinyang628"},"content":"        if (this.containsTask(task)) {","lastModifiedDate":"2023-09-09"},{"lineNumber":104,"author":{"gitId":"jinyang628"},"content":"            return this.ui.duplicateTaskMessage(task, startOfDescriptionIndex);","lastModifiedDate":"2023-09-09"},{"lineNumber":105,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":106,"author":{"gitId":"jinyang628"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-08-27"},{"lineNumber":107,"author":{"gitId":"jinyang628"},"content":"        return this.ui.addTaskMessage(task, this.tasks.size(), startOfDescriptionIndex);","lastModifiedDate":"2023-09-09"},{"lineNumber":108,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":109,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":110,"author":{"gitId":"jinyang628"},"content":"    private boolean containsTask(Task task) {","lastModifiedDate":"2023-09-09"},{"lineNumber":111,"author":{"gitId":"jinyang628"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-09-09"},{"lineNumber":112,"author":{"gitId":"jinyang628"},"content":"            if (this.tasks.get(i).equals(task)) {","lastModifiedDate":"2023-09-09"},{"lineNumber":113,"author":{"gitId":"jinyang628"},"content":"                return true;","lastModifiedDate":"2023-09-09"},{"lineNumber":114,"author":{"gitId":"jinyang628"},"content":"            }","lastModifiedDate":"2023-09-09"},{"lineNumber":115,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":116,"author":{"gitId":"jinyang628"},"content":"        return false;","lastModifiedDate":"2023-09-09"},{"lineNumber":117,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":118,"author":{"gitId":"jinyang628"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"jinyang628":118}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"/** Task which contains only a description */","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":"     * Class constructor specifying the description of the _todo task.","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"     * @param description the string description of the _todo task.","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"        super(description);","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"jinyang628"},"content":"     * Returns the information associated with the _todo task.","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"jinyang628"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"jinyang628"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"jinyang628"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":21,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"jinyang628"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"jinyang628"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"jinyang628"},"content":"        if (!(obj instanceof Todo)) {","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"jinyang628"},"content":"            return false;","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"jinyang628"},"content":"        Todo task \u003d (Todo) obj;","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"jinyang628"},"content":"        int indexOfTaskDescription \u003d 7;","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"jinyang628"},"content":"        if (this.toString().substring(indexOfTaskDescription).equals(","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"jinyang628"},"content":"                task.toString().substring(indexOfTaskDescription))) {","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"jinyang628"},"content":"            return true;","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"jinyang628"},"content":"        return false;","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"jinyang628"},"content":"     * Returns the information associated with the _todo to be stored on local hard disk.","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"jinyang628"},"content":"     * @return the string representation of the _todo saved onto the local hard disk.","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"jinyang628"},"content":"    public String saveTask() {","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"jinyang628"},"content":"        return \"T|\" + (this.isDone() ? \"X|\" : \" |\") + this.getDescription();","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"jinyang628"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"jinyang628":43}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":"import java.util.List;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"/** The UI managing the message responses of Duke. */","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":"public class Ui {","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"     * Lists the tasks that matches the user input.","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"     * @param filteredTasks the filtered list of tasks that matches the user input.","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":"     * @return a String message containing the list of tasks that matches the user input.","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"jinyang628"},"content":"    public String listFoundTasks(List\u003cTask\u003e filteredTasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"jinyang628"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"jinyang628"},"content":"        sb.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"jinyang628"},"content":"        for (int i \u003d 0; i \u003c filteredTasks.size(); i++) {","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"jinyang628"},"content":"            sb.append(String.format(\"%d.%s\\n\", i + 1, filteredTasks.get(i).toString()));","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"jinyang628"},"content":"        return sb.toString();","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"jinyang628"},"content":"     * Lists the tasks currently stored in Duke.","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"jinyang628"},"content":"     * @param tasks the list of tasks currently stored.","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"jinyang628"},"content":"     * @return a string message containing the list of tasks currently stored in Duke.","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"jinyang628"},"content":"    public String listMessage(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"jinyang628"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"jinyang628"},"content":"        sb.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"jinyang628"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"jinyang628"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"jinyang628"},"content":"            sb.append(String.format(\"%d.%s%n\", i + 1, task));","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"jinyang628"},"content":"        return sb.toString();","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"jinyang628"},"content":"     * Returns a string message indicating that the task is successfully marked as done.","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"jinyang628"},"content":"     * @param task the task that is marked as done.","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"jinyang628"},"content":"     * @return a string message indicating that the task is marked as done.","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"jinyang628"},"content":"    public String markTaskAsDoneMessage(Task task) {","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"jinyang628"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"jinyang628"},"content":"        sb.append(\"Nice! I\u0027ve marked this task as done:\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"jinyang628"},"content":"        sb.append(String.format(\"%s%n\", task));","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"jinyang628"},"content":"        return sb.toString();","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"jinyang628"},"content":"     * Returns a string message indicating that the task is unmarked as incomplete.","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"jinyang628"},"content":"     * @param task the task to be unmarked as incomplete.","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"jinyang628"},"content":"     * @return a string message indicating that the task is unmarked as incomplete.","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"jinyang628"},"content":"    public String unmarkTaskMessage(Task task) {","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"jinyang628"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"jinyang628"},"content":"        sb.append(\"OK, I\u0027ve marked this task as not done yet:\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"jinyang628"},"content":"        sb.append(String.format(\"%s%n\", task));","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"jinyang628"},"content":"        return sb.toString();","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"jinyang628"},"content":"     * Returns a string message indicating that the task is deleted.","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"jinyang628"},"content":"     * @param task the task to be deleted.","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"jinyang628"},"content":"     * @param numOfTasks the number of tasks left.","lastModifiedDate":"2023-09-09"},{"lineNumber":66,"author":{"gitId":"jinyang628"},"content":"     * @return a string message indicating that the task is deleted and the number of tasks left.","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":68,"author":{"gitId":"jinyang628"},"content":"    public String deleteTaskMessage(Task task, int numOfTasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"jinyang628"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"jinyang628"},"content":"        sb.append(\"Noted. I\u0027ve removed this task:\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"jinyang628"},"content":"        sb.append(String.format(\"%s\\n\", task));","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"jinyang628"},"content":"        sb.append(String.format(\"Now you have %d tasks in the list.%n\", numOfTasks));","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"jinyang628"},"content":"        return sb.toString();","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":77,"author":{"gitId":"jinyang628"},"content":"     * Returns a string message indicating that the task is added.","lastModifiedDate":"2023-09-09"},{"lineNumber":78,"author":{"gitId":"jinyang628"},"content":"     * @param task the task that is added.","lastModifiedDate":"2023-09-09"},{"lineNumber":79,"author":{"gitId":"jinyang628"},"content":"     * @param numOfTasks the number of tasks now stored in Duke.","lastModifiedDate":"2023-09-09"},{"lineNumber":80,"author":{"gitId":"jinyang628"},"content":"     * @return a string message indicating that the task is added and the number of tasks stored.","lastModifiedDate":"2023-09-09"},{"lineNumber":81,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":82,"author":{"gitId":"jinyang628"},"content":"    public String addTaskMessage(Task task, int numOfTasks, int startOfDescriptionIndex) {","lastModifiedDate":"2023-09-09"},{"lineNumber":83,"author":{"gitId":"jinyang628"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"jinyang628"},"content":"        sb.append(\"Got it. I\u0027ve added this task:\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"jinyang628"},"content":"        sb.append(String.format(\"%s\\n\", task.toString().substring(startOfDescriptionIndex)));","lastModifiedDate":"2023-09-09"},{"lineNumber":86,"author":{"gitId":"jinyang628"},"content":"        sb.append(String.format(\"Now you have %d tasks in the list.%n\", numOfTasks));","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"jinyang628"},"content":"        return sb.toString();","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":90,"author":{"gitId":"jinyang628"},"content":"    public String duplicateTaskMessage(Task task, int startOfDescriptionIndex) {","lastModifiedDate":"2023-09-09"},{"lineNumber":91,"author":{"gitId":"jinyang628"},"content":"        return String.format(\"%s is already added before!\", task.toString().substring(startOfDescriptionIndex));","lastModifiedDate":"2023-09-09"},{"lineNumber":92,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":93,"author":{"gitId":"jinyang628"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"jinyang628":93}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"jinyang628"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"jinyang628"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"jinyang628"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"jinyang628"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jinyang628":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"jinyang628"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"jinyang628"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"jinyang628"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"jinyang628"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"jinyang628"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"jinyang628"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"jinyang628"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jinyang628":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"jinyang628"},"content":"    public void parseAddTaskInput_successTodo() {","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"jinyang628"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"jinyang628"},"content":"            Parser parse \u003d new Parser();","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"jinyang628"},"content":"            Task task \u003d parse.parseAddTaskInput(\"todo read book\", \"todo\");","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"jinyang628"},"content":"            assertEquals(\"[T][ ] read book\", task.toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"jinyang628"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"jinyang628"},"content":"            fail();","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"jinyang628"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"jinyang628"},"content":"    public void parseAddTaskInput_successDeadline() {","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"jinyang628"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"jinyang628"},"content":"            Parser parse \u003d new Parser();","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"jinyang628"},"content":"            Task task \u003d parse.parseAddTaskInput(\"deadline return book /by 2019-01-15\", \"deadline\");","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"jinyang628"},"content":"            task.markAsDone();","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"jinyang628"},"content":"            assertEquals(\"[D][X] return book (by: Jan 15 2019)\", task.toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"jinyang628"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"jinyang628"},"content":"            fail();","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"jinyang628"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"jinyang628"},"content":"    public void parseAddTaskInput_successEvent() {","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"jinyang628"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"jinyang628"},"content":"            Parser parse \u003d new Parser();","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"jinyang628"},"content":"            Task task \u003d parse.parseAddTaskInput(\"event project meeting /from 2019-02-15 /to 2019-03-30\", \"event\");","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"jinyang628"},"content":"            assertEquals(\"[E][ ] project meeting (from: Feb 15 2019 to: Mar 30 2019)\", task.toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"jinyang628"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"jinyang628"},"content":"            fail();","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"jinyang628"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"jinyang628"},"content":"    public void parseAddTaskInput_failureDeadline1() {","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"jinyang628"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"jinyang628"},"content":"            Parser parse \u003d new Parser();","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"jinyang628"},"content":"            Task task \u003d parse.parseAddTaskInput(\"deadline return book /by 2019-01-150\", \"deadline\");","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"jinyang628"},"content":"            task.markAsDone();","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"jinyang628"},"content":"            assertEquals(\"[D][X] return book (by: Jan 15 2019)\", task.toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"jinyang628"},"content":"            fail();","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"jinyang628"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"jinyang628"},"content":"            fail();","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"jinyang628"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"jinyang628"},"content":"            assertEquals(\"Text \u00272019-01-150\u0027 could not be parsed, unparsed text found at index 10\",","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"jinyang628"},"content":"                    e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"jinyang628"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"jinyang628"},"content":"    public void parseAddTaskInput_failureDeadline2() {","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"jinyang628"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"jinyang628"},"content":"            Parser parse \u003d new Parser();","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"jinyang628"},"content":"            Task task \u003d parse.parseAddTaskInput(\"deadline return book byebye 2019-01-150\", \"deadline\");","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"jinyang628"},"content":"            task.markAsDone();","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"jinyang628"},"content":"            assertEquals(\"[D][X] return book (by: Jan 15 2019)\", task.toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"jinyang628"},"content":"            fail();","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"jinyang628"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"jinyang628"},"content":"            assertEquals(\"ERROR: Missing the /by marker\", e.getMessage());","lastModifiedDate":"2023-09-15"},{"lineNumber":72,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"jinyang628"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"jinyang628"},"content":"    public void parseAddTaskInput_failureEvent() {","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"jinyang628"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"jinyang628"},"content":"            Parser parse \u003d new Parser();","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"jinyang628"},"content":"            Task task \u003d parse.parseAddTaskInput(\"event project meeting /to 2019-02-15 /from 2019-03-30\", \"event\");","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"jinyang628"},"content":"            task.markAsDone();","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"jinyang628"},"content":"            assertEquals(\"[E][X] project meeting (from: Feb 15 2019 to: Mar 30 2019)\", task.toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"jinyang628"},"content":"            fail();","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"jinyang628"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"jinyang628"},"content":"            fail();","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"jinyang628"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"jinyang628"},"content":"            assertEquals(\"Index 7 out of bounds for length 7\", e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"jinyang628"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"jinyang628":89}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"public class TodoTest {","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"    public void todoMarkAsDone_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":"        Todo todoTask \u003d new Todo(\"Read Book\");","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"jinyang628"},"content":"        todoTask.markAsDone();","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"jinyang628"},"content":"        assertEquals(\"[T][X] Read Book\", todoTask.toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"jinyang628"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"jinyang628"},"content":"    public void todoUnmark_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"jinyang628"},"content":"        Todo todoTask \u003d new Todo(\"Read Book\");","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"jinyang628"},"content":"        todoTask.markAsDone();","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"jinyang628"},"content":"        todoTask.unmark();","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"jinyang628"},"content":"        assertEquals(\"[T][ ] Read Book\", todoTask.toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"jinyang628"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"jinyang628"},"content":"    public void todoComplicatedName_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"jinyang628"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"jinyang628"},"content":"            Todo todoTask \u003d new Todo(\"1234567890-\u003d+qwertyuiop[]\u0027;.,/asdfghkl\u0027\");","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"jinyang628"},"content":"            assertEquals(\"[T][ ] 1234567890-\u003d+qwertyuiop[]\u0027;.,/asdfghkl\u0027\", todoTask.toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"jinyang628"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"jinyang628"},"content":"            fail();","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"jinyang628"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"jinyang628":34}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"todo borrow book","lastModifiedDate":"2023-08-19"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"deadline return book /by 2019-01-15","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"mark 2","lastModifiedDate":"2023-08-19"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":"event project meeting /from 2019-02-15 /to 2019-03-30","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":"unmark 2","lastModifiedDate":"2023-08-19"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":"delete 1","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"bye","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"jinyang628":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"javac  -cp ..\\src\\main\\java\\duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"jinyang628":2}}]
