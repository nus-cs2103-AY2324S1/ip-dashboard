[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovkusuma"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"jovkusuma"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"jovkusuma"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"jovkusuma"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"jovkusuma"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"jovkusuma"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"jovkusuma"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"jovkusuma"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"jovkusuma"},"content":" * A chatbot that helps the user take note of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"jovkusuma"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"jovkusuma"},"content":" * @author Armando Jovan Kusuma","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"jovkusuma"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"jovkusuma"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"jovkusuma"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"jovkusuma"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"jovkusuma"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"jovkusuma"},"content":"    public Duke() {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"jovkusuma"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"jovkusuma"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"jovkusuma"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"jovkusuma"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"jovkusuma"},"content":"     * Runs the Duke chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"jovkusuma"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"jovkusuma"},"content":"    public void run() {","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"jovkusuma"},"content":"        this.ui.greet();","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"jovkusuma"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"jovkusuma"},"content":"            this.storage.init();","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"jovkusuma"},"content":"            this.tasks \u003d this.storage.readFromFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"jovkusuma"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"jovkusuma"},"content":"            this.ui.errorPrint(e);","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"jovkusuma"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"jovkusuma"},"content":"        while (true) {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"jovkusuma"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"jovkusuma"},"content":"                String input \u003d this.scanner.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"jovkusuma"},"content":"                Command command \u003d Parser.parse(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"jovkusuma"},"content":"                command.execute(this.tasks, this.ui, this.storage);","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"jovkusuma"},"content":"                if (input.split(\" \")[0].equals(\"bye\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"jovkusuma"},"content":"                    this.scanner.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"jovkusuma"},"content":"                    break;","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"jovkusuma"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"jovkusuma"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"jovkusuma"},"content":"                this.ui.errorPrint(e);","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"jovkusuma"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"jovkusuma"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"jovkusuma"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"jovkusuma"},"content":"        duke.run();","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jovkusuma":52,"-":4}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovkusuma"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"jovkusuma"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"jovkusuma"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"jovkusuma"},"content":"import duke.task.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"jovkusuma"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"jovkusuma"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"jovkusuma"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"jovkusuma"},"content":" * Represent commands Todo, Deadline, Event which add tasks to the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"jovkusuma"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"jovkusuma"},"content":" * @author Armando Jovan Kusuma","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"jovkusuma"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"jovkusuma"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"jovkusuma"},"content":"    private String command;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"jovkusuma"},"content":"    public AddCommand(String command) {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"jovkusuma"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"jovkusuma"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"jovkusuma"},"content":"     * Executes the command.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"jovkusuma"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"jovkusuma"},"content":"     * @param tasks The TaskList where the command is to be executed.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"jovkusuma"},"content":"     * @param ui The UI which functions as the user interface of the Chat bot.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"jovkusuma"},"content":"     * @param storage The storage file to store the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"jovkusuma"},"content":"     * @throws DukeException If the command execution fails.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"jovkusuma"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"jovkusuma"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"jovkusuma"},"content":"        if (command.equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"jovkusuma"},"content":"            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"jovkusuma"},"content":"        } else if (command.equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"jovkusuma"},"content":"            throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"jovkusuma"},"content":"        } else if (command.equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"jovkusuma"},"content":"            throw new DukeException(\"OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"jovkusuma"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"jovkusuma"},"content":"        String task \u003d command.substring(0, command.indexOf(\" \"));","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"jovkusuma"},"content":"        if (task.startsWith(\"todo\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"jovkusuma"},"content":"            Task currTask \u003d new Todo(command.replace(\"todo\", \"\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"jovkusuma"},"content":"            tasks.add(currTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"jovkusuma"},"content":"            ui.taskPrint(currTask, tasks.getTaskCount());","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"jovkusuma"},"content":"        } else if (task.startsWith(\"event\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"jovkusuma"},"content":"            String[] s \u003d command.replace(\"event \", \"\").split(\" /from | /to \");","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"jovkusuma"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"jovkusuma"},"content":"                Task currTask \u003d new Event(s[0], s[1], s[2]);","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"jovkusuma"},"content":"                tasks.add(currTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"jovkusuma"},"content":"                ui.taskPrint(currTask,tasks.getTaskCount());","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"jovkusuma"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"jovkusuma"},"content":"                throw new DukeException(\"Invalid date format! Please command date using the format yyyy-MM-dd\");","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"jovkusuma"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"jovkusuma"},"content":"        } else if (task.startsWith(\"deadline\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"jovkusuma"},"content":"            String[] s \u003d command.replace(\"deadline \", \"\").split(\" /by \");","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"jovkusuma"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"jovkusuma"},"content":"                Task currTask \u003d new Deadline(s[0], s[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"jovkusuma"},"content":"                tasks.add(currTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"jovkusuma"},"content":"                ui.taskPrint(currTask,tasks.getTaskCount());","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"jovkusuma"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"jovkusuma"},"content":"                throw new DukeException(\"Invalid date format! Please command date using the format yyyy-MM-dd\");","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"jovkusuma"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"jovkusuma"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"jovkusuma"},"content":"            throw new DukeException(\"Oops! I\u0027m sorry, I don\u0027t know what that means.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"jovkusuma"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"jovkusuma"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"jovkusuma":68}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovkusuma"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"jovkusuma"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"jovkusuma"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"jovkusuma"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"jovkusuma"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"jovkusuma"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"jovkusuma"},"content":" * Represent commands for the Chat bot.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"jovkusuma"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"jovkusuma"},"content":" * @author Armando Jovan Kusuma","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"jovkusuma"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"jovkusuma"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"jovkusuma"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"jovkusuma"},"content":"     * Executes the command.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"jovkusuma"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"jovkusuma"},"content":"     * @param tasks The TaskList where the command is to be executed.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"jovkusuma"},"content":"     * @param ui The UI which functions as the user interface of the Chat bot.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"jovkusuma"},"content":"     * @param storage The storage file to store the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"jovkusuma"},"content":"     * @throws DukeException If the command execution fails.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"jovkusuma"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"jovkusuma"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"jovkusuma"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"jovkusuma":25}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovkusuma"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"jovkusuma"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"jovkusuma"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"jovkusuma"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"jovkusuma"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"jovkusuma"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"jovkusuma"},"content":" * Represents command Delete that deletes a task from the list","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"jovkusuma"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"jovkusuma"},"content":" * @author Armando Jovan Kusuma","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"jovkusuma"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"jovkusuma"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"jovkusuma"},"content":"    private int index;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"jovkusuma"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"jovkusuma"},"content":"     * Constructs a DeleteCommand with the specified index","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"jovkusuma"},"content":"     * of the task to be deleted","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"jovkusuma"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"jovkusuma"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"jovkusuma"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"jovkusuma"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"jovkusuma"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"jovkusuma"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"jovkusuma"},"content":"     * Executes the DeleteCommand.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"jovkusuma"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"jovkusuma"},"content":"     * @param tasks The TaskList where the command is to be executed.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"jovkusuma"},"content":"     * @param ui The UI which functions as the user interface of the Chat bot.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"jovkusuma"},"content":"     * @param storage The storage file to store the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"jovkusuma"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"jovkusuma"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"jovkusuma"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"jovkusuma"},"content":"        if(index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.getTaskCount()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"jovkusuma"},"content":"            ui.deletePrint(tasks.getTask(index), tasks.getTaskCount() - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"jovkusuma"},"content":"            tasks.remove(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"jovkusuma"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"jovkusuma"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"jovkusuma":40}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovkusuma"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"jovkusuma"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"jovkusuma"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"jovkusuma"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"jovkusuma"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"jovkusuma"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"jovkusuma"},"content":" * Represents command Bye which exits the Chat Bot.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"jovkusuma"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"jovkusuma"},"content":" * @author Armando Jovan Kusuma","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"jovkusuma"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"jovkusuma"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"jovkusuma"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"jovkusuma"},"content":"     * Executes the ExitCommand.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"jovkusuma"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"jovkusuma"},"content":"     * @param tasks The TaskList where the command is to be executed.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"jovkusuma"},"content":"     * @param ui The UI which functions as the user interface of the Chat bot.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"jovkusuma"},"content":"     * @param storage The storage file to store the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"jovkusuma"},"content":"     * @throws DukeException If the command execution fails.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"jovkusuma"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"jovkusuma"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"jovkusuma"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"jovkusuma"},"content":"        ui.bye();","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"jovkusuma"},"content":"        storage.writeToFile(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"jovkusuma"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"jovkusuma":29}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovkusuma"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"jovkusuma"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"jovkusuma"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"jovkusuma"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"jovkusuma"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"jovkusuma"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"jovkusuma"},"content":" * Represents command Find that finds for tasks with a specific keyword.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"jovkusuma"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"jovkusuma"},"content":" * @author Armando Jovan Kusuma","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"jovkusuma"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"jovkusuma"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"jovkusuma"},"content":"    private String keyword;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"jovkusuma"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"jovkusuma"},"content":"     * Constructs a FindCommand with the specified keyword","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"jovkusuma"},"content":"     * to be found in the list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"jovkusuma"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"jovkusuma"},"content":"     * @param keyword The keyword to find in the list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"jovkusuma"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"jovkusuma"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"jovkusuma"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"jovkusuma"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"jovkusuma"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"jovkusuma"},"content":"        TaskList foundTasks \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"jovkusuma"},"content":"        for (int i \u003d 0; i \u003c tasks.getTaskCount(); i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"jovkusuma"},"content":"            Task currTask \u003d tasks.getTask(i);","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"jovkusuma"},"content":"            if (currTask.contains(keyword)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"jovkusuma"},"content":"                foundTasks.add(currTask);","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"jovkusuma"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"jovkusuma"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"jovkusuma"},"content":"        ui.printFoundTasks(foundTasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"jovkusuma"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"jovkusuma":37}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovkusuma"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"jovkusuma"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"jovkusuma"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"jovkusuma"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"jovkusuma"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"jovkusuma"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"jovkusuma"},"content":" * Represents the command List which lists the tasks in the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"jovkusuma"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"jovkusuma"},"content":" * @author Armando Jovan Kusuma","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"jovkusuma"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"jovkusuma"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"jovkusuma"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"jovkusuma"},"content":"     * Executes the ListCommand.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"jovkusuma"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"jovkusuma"},"content":"     * @param tasks The TaskList where the command is to be executed.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"jovkusuma"},"content":"     * @param ui The UI which functions as the user interface of the Chat bot.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"jovkusuma"},"content":"     * @param storage The storage file to store the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"jovkusuma"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"jovkusuma"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"jovkusuma"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"jovkusuma"},"content":"        ui.listOfTasks(tasks, tasks.getTaskCount());","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"jovkusuma"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"jovkusuma":26}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovkusuma"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"jovkusuma"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"jovkusuma"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"jovkusuma"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"jovkusuma"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"jovkusuma"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"jovkusuma"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"jovkusuma"},"content":" * Represents command Mark which marks the task in the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"jovkusuma"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"jovkusuma"},"content":" * @author Armando Jovan Kusuma","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"jovkusuma"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"jovkusuma"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"jovkusuma"},"content":"    private int index;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"jovkusuma"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"jovkusuma"},"content":"     * Constructs a MarkCommand with the specified index","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"jovkusuma"},"content":"     * of the task to be marked","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"jovkusuma"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"jovkusuma"},"content":"     * @param index The index of the task to be marked.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"jovkusuma"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"jovkusuma"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"jovkusuma"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"jovkusuma"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"jovkusuma"},"content":"     * Executes the MarkCommand.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"jovkusuma"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"jovkusuma"},"content":"     * @param tasks The TaskList where the command is to be executed.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"jovkusuma"},"content":"     * @param ui The UI which functions as the user interface of the Chat bot.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"jovkusuma"},"content":"     * @param storage The storage file to store the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"jovkusuma"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"jovkusuma"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"jovkusuma"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"jovkusuma"},"content":"        Task task \u003d tasks.getTask(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"jovkusuma"},"content":"        task.markDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"jovkusuma"},"content":"        ui.markDonePrint(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"jovkusuma"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"jovkusuma":40}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovkusuma"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"jovkusuma"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"jovkusuma"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"jovkusuma"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"jovkusuma"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"jovkusuma"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"jovkusuma"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"jovkusuma"},"content":" * Represents command Unmark which unmarks the task in the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"jovkusuma"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"jovkusuma"},"content":" * @author Armando Jovan Kusuma","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"jovkusuma"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"jovkusuma"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"jovkusuma"},"content":"    private int index;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"jovkusuma"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"jovkusuma"},"content":"     * Creates an UnmarkCommand which unmarks the task with the specified index.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"jovkusuma"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"jovkusuma"},"content":"     * @param index the specific index of the task to be unmarked.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"jovkusuma"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"jovkusuma"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"jovkusuma"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"jovkusuma"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"jovkusuma"},"content":"     * Executes the UnmarkCommand.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"jovkusuma"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"jovkusuma"},"content":"     * @param tasks The TaskList where the command is to be executed.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"jovkusuma"},"content":"     * @param ui The UI which functions as the user interface of the Chat bot.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"jovkusuma"},"content":"     * @param storage The storage file to store the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"jovkusuma"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"jovkusuma"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"jovkusuma"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"jovkusuma"},"content":"        Task task \u003d tasks.getTask(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"jovkusuma"},"content":"        task.unmarkDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"jovkusuma"},"content":"        ui.unmarkDonePrint(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"jovkusuma"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"jovkusuma":39}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovkusuma"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"jovkusuma"},"content":"import java.lang.Exception;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"jovkusuma"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"jovkusuma"},"content":" * Represents the exceptions for the Duke Chat bot.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"jovkusuma"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"jovkusuma"},"content":" * @author Armando Jovan Kusuma","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"jovkusuma"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"jovkusuma"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"jovkusuma"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"jovkusuma"},"content":"     * Constructs a DukeException with the specified message.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"jovkusuma"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"jovkusuma"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"jovkusuma"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"jovkusuma"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"jovkusuma"},"content":"     * Returns the string representation of the DukeException.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"jovkusuma"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"jovkusuma"},"content":"     * @return String representation of the DukeException.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"jovkusuma"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"jovkusuma"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"jovkusuma"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"jovkusuma"},"content":"        return super.getMessage();","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"jovkusuma"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jovkusuma":28}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovkusuma"},"content":"package duke.parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"jovkusuma"},"content":"import duke.command.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"jovkusuma"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"jovkusuma"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"jovkusuma"},"content":" * Parses the inputs given by the user","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"jovkusuma"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"jovkusuma"},"content":" * @author Armando Jovan Kusuma","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"jovkusuma"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"jovkusuma"},"content":"public class Parser {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"jovkusuma"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"jovkusuma"},"content":"     * Parses the user input into a command.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"jovkusuma"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"jovkusuma"},"content":"     * @param input The user input to be parsed.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"jovkusuma"},"content":"     * @return the Command that represents the user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"jovkusuma"},"content":"     * @throws DukeException When the user input is invalid.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"jovkusuma"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"jovkusuma"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"jovkusuma"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"jovkusuma"},"content":"            if (!input.contains(\" \")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"jovkusuma"},"content":"                if (input.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"jovkusuma"},"content":"                    return new ListCommand();","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"jovkusuma"},"content":"                } else if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"jovkusuma"},"content":"                    return new ExitCommand();","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"jovkusuma"},"content":"                } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"jovkusuma"},"content":"                    throw new DukeException(\"I\u0027m sorry, I don\u0027t know what that means\");","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"jovkusuma"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"jovkusuma"},"content":"            } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"jovkusuma"},"content":"                String task \u003d input.substring(0, input.indexOf(\" \"));","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"jovkusuma"},"content":"                if (task.equalsIgnoreCase(\"mark\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"jovkusuma"},"content":"                    return new MarkCommand(Integer.parseInt(input.split(\" \")[1]) - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"jovkusuma"},"content":"                } else if (task.equalsIgnoreCase(\"unmark\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"jovkusuma"},"content":"                    return new UnmarkCommand(Integer.parseInt(input.split(\" \")[1]) - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"jovkusuma"},"content":"                } else if (task.equalsIgnoreCase(\"delete\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"jovkusuma"},"content":"                    return new DeleteCommand(Integer.parseInt(input.split(\" \")[1]) - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"jovkusuma"},"content":"                } else if (task.equalsIgnoreCase(\"find\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"jovkusuma"},"content":"                    return new FindCommand(input.split(\" \", 2)[1].trim());","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"jovkusuma"},"content":"                } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"jovkusuma"},"content":"                    return new AddCommand(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"jovkusuma"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"jovkusuma"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"jovkusuma"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"jovkusuma"},"content":"            throw new DukeException(\"Oops! I\u0027m sorry, I don\u0027t know what that means\");","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"jovkusuma"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"jovkusuma"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"jovkusuma":49}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovkusuma"},"content":"package duke.storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"jovkusuma"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"jovkusuma"},"content":"import duke.task.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"jovkusuma"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jovkusuma"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jovkusuma"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"jovkusuma"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"jovkusuma"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jovkusuma"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"jovkusuma"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jovkusuma"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"jovkusuma"},"content":" * Stores the tasks of the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"jovkusuma"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"jovkusuma"},"content":" * @author Armando Jovan Kusuma","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"jovkusuma"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"jovkusuma"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"jovkusuma"},"content":"    private final String DIRECTORY \u003d \"./data\";","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"jovkusuma"},"content":"    private final String FILE_PATH \u003d DIRECTORY + \"/duke.txt\";","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"jovkusuma"},"content":"    private File STORAGE_FILE;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"jovkusuma"},"content":"    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"jovkusuma"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"jovkusuma"},"content":"     * Creates a new file as storage if none is created yet.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"jovkusuma"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"jovkusuma"},"content":"     * @throws DukeException When a file cannot be created.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"jovkusuma"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"jovkusuma"},"content":"    public void init() throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"jovkusuma"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"jovkusuma"},"content":"            File dir \u003d new File(this.DIRECTORY);","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"jovkusuma"},"content":"            if (!dir.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"jovkusuma"},"content":"                dir.mkdir();","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"jovkusuma"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"jovkusuma"},"content":"            this.STORAGE_FILE \u003d new File(this.FILE_PATH);","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"jovkusuma"},"content":"            if (!STORAGE_FILE.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"jovkusuma"},"content":"                STORAGE_FILE.createNewFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"jovkusuma"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"jovkusuma"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"jovkusuma"},"content":"            throw new DukeException(\"OOPS !!! It seems that a new file cannot be created.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"jovkusuma"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"jovkusuma"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"jovkusuma"},"content":"     * Reads the file to retrieve the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"jovkusuma"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"jovkusuma"},"content":"     * @return a TaskList containing all the tasks read from the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"jovkusuma"},"content":"     * @throws DukeException When the process of reading the file fails.","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"jovkusuma"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"jovkusuma"},"content":"    public TaskList readFromFile() throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"jovkusuma"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"jovkusuma"},"content":"            TaskList listOfTasks \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"jovkusuma"},"content":"            Scanner scanner \u003d new Scanner(this.STORAGE_FILE);","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"jovkusuma"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"jovkusuma"},"content":"                String task \u003d scanner.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"jovkusuma"},"content":"                String type \u003d task.substring(1, 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"jovkusuma"},"content":"                String mark \u003d task.substring(4, 5);","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"jovkusuma"},"content":"                String description \u003d task.substring(7);","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"jovkusuma"},"content":"                if (type.equals(\"T\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"jovkusuma"},"content":"                    Task todo \u003d new Todo(description);","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"jovkusuma"},"content":"                    if (mark.equals(\"X\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"jovkusuma"},"content":"                        todo.markDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"jovkusuma"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"jovkusuma"},"content":"                    listOfTasks.add(todo);","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"jovkusuma"},"content":"                } else if (type.equals(\"E\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"jovkusuma"},"content":"                    String[] s \u003d description.split(\" \\\\(from: | to: |\\\\)\");","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"jovkusuma"},"content":"                    LocalDate from \u003d LocalDate.parse(s[1], formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"jovkusuma"},"content":"                    LocalDate to \u003d LocalDate.parse(s[2], formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"jovkusuma"},"content":"                    Task event \u003d new Event(s[0], from.toString(), to.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"jovkusuma"},"content":"                    if (mark.equals(\"X\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"jovkusuma"},"content":"                        event.markDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"jovkusuma"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"jovkusuma"},"content":"                    listOfTasks.add(event);","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"jovkusuma"},"content":"                } else if (type.equals(\"D\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"jovkusuma"},"content":"                    String[] s \u003d description.split(\" \\\\(by: |\\\\)\");","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"jovkusuma"},"content":"                    LocalDate by \u003d LocalDate.parse(s[1], formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"jovkusuma"},"content":"                    Task deadline \u003d new Deadline(s[0], by.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"jovkusuma"},"content":"                    if (mark.equals(\"X\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"jovkusuma"},"content":"                        deadline.markDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"jovkusuma"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"jovkusuma"},"content":"                    listOfTasks.add(deadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"jovkusuma"},"content":"                } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"jovkusuma"},"content":"                    throw new DukeException(\"OOPS !!! Can\u0027t Load task from File\");","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"jovkusuma"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"jovkusuma"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"jovkusuma"},"content":"            return listOfTasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"jovkusuma"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"jovkusuma"},"content":"            throw new DukeException(\"Invalid date format! Please input date using the format yyyy-MM-dd\");","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"jovkusuma"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"jovkusuma"},"content":"            throw new DukeException(\"OOPS !!! Can\u0027t Load task from File\");","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"jovkusuma"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"jovkusuma"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"jovkusuma"},"content":"     * Writes the list of tasks to the storage file","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"jovkusuma"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"jovkusuma"},"content":"     * @param tasks the tasks to be written back to the storage file","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"jovkusuma"},"content":"     * @throws DukeException When the process of writing to the file fails","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"jovkusuma"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"jovkusuma"},"content":"    public void writeToFile(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"jovkusuma"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"jovkusuma"},"content":"            FileWriter fileWriter \u003d new FileWriter(STORAGE_FILE);","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"jovkusuma"},"content":"            for (int i \u003d 0; i \u003c tasks.getTaskCount(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"jovkusuma"},"content":"                Task currTask \u003d tasks.getTask(i);","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"jovkusuma"},"content":"                fileWriter.write(currTask.toString() + \"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"jovkusuma"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"jovkusuma"},"content":"            fileWriter.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"jovkusuma"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"jovkusuma"},"content":"            throw new DukeException(\"OOPS !!! Can\u0027t write to file\");","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"jovkusuma"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"jovkusuma"},"content":"}","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jovkusuma":117}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovkusuma"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"jovkusuma"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"jovkusuma"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"jovkusuma"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"jovkusuma"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"jovkusuma"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"jovkusuma"},"content":" * Represent tasks of type deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"jovkusuma"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"jovkusuma"},"content":" * @author Armando Jovan Kusuma","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"jovkusuma"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"jovkusuma"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"jovkusuma"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"jovkusuma"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"jovkusuma"},"content":"     * Creates a deadline task with the specified","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"jovkusuma"},"content":"     * description and due date.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"jovkusuma"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"jovkusuma"},"content":"     * @param description the description of the deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"jovkusuma"},"content":"     * @param by the due date.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"jovkusuma"},"content":"     * @throws DukeException If the date format is wrong.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"jovkusuma"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"jovkusuma"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"jovkusuma"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"jovkusuma"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"jovkusuma"},"content":"            this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"jovkusuma"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"jovkusuma"},"content":"            throw new DukeException(\"Invalid date format! Please input in the form of yyyy-MM-dd\");","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"jovkusuma"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"jovkusuma"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"jovkusuma"},"content":"     * Returns the string representation of the deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"jovkusuma"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"jovkusuma"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"jovkusuma"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"jovkusuma"},"content":"                + \" (by: \"","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"jovkusuma"},"content":"                + this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"jovkusuma"},"content":"                + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"jovkusuma"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jovkusuma":44}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovkusuma"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"jovkusuma"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"jovkusuma"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"jovkusuma"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"jovkusuma"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"jovkusuma"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"jovkusuma"},"content":" * Represent tasks of type event.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"jovkusuma"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"jovkusuma"},"content":" * @author Armando Jovan Kusuma","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"jovkusuma"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"jovkusuma"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"jovkusuma"},"content":"    protected LocalDate from;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"jovkusuma"},"content":"    protected LocalDate to;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"jovkusuma"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"jovkusuma"},"content":"     * Creates a event task with the specified","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"jovkusuma"},"content":"     * description, start date, and end date.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"jovkusuma"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"jovkusuma"},"content":"     * @param description the description of the event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"jovkusuma"},"content":"     * @param from the start date.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"jovkusuma"},"content":"     * @param to the end date.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"jovkusuma"},"content":"     * @throws DukeException If the date format is wrong.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"jovkusuma"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"jovkusuma"},"content":"    public Event(String description, String from, String to) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"jovkusuma"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"jovkusuma"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"jovkusuma"},"content":"            this.from \u003d LocalDate.parse(from);","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"jovkusuma"},"content":"            this.to \u003d LocalDate.parse(to);","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"jovkusuma"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"jovkusuma"},"content":"            throw new DukeException(\"Invalid date format! Please input in the form of yyyy-MM-dd\");","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"jovkusuma"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"jovkusuma"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"jovkusuma"},"content":"     * Returns the string description of the event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"jovkusuma"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"jovkusuma"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"jovkusuma"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"jovkusuma"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"jovkusuma"},"content":"                + \" (from: \"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"jovkusuma"},"content":"                + this.from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"jovkusuma"},"content":"                + \" to: \"","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"jovkusuma"},"content":"                + this.to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"jovkusuma"},"content":"                + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"jovkusuma"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jovkusuma":48}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovkusuma"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"jovkusuma"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"jovkusuma"},"content":" * Represent the task in Duke Chat Bot.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"jovkusuma"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"jovkusuma"},"content":" * @author Armando Jovan Kusuma","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"jovkusuma"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"jovkusuma"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"jovkusuma"},"content":"    protected String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"jovkusuma"},"content":"    private static final String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"jovkusuma"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"jovkusuma"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"jovkusuma"},"content":"     * Creates a task with a specified description.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"jovkusuma"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"jovkusuma"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"jovkusuma"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"jovkusuma"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"jovkusuma"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"jovkusuma"},"content":"     * Gets the status of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"jovkusuma"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"jovkusuma"},"content":"     * @return The status icon of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"jovkusuma"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"jovkusuma"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"jovkusuma"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"jovkusuma"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"jovkusuma"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"jovkusuma"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"jovkusuma"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"jovkusuma"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"jovkusuma"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"jovkusuma"},"content":"     * Unmarks the task as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"jovkusuma"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"jovkusuma"},"content":"    public void unmarkDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"jovkusuma"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"jovkusuma"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"jovkusuma"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"jovkusuma"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"jovkusuma"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"jovkusuma"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"jovkusuma"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"jovkusuma"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"jovkusuma"},"content":"        return this.description.contains(keyword);","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"jovkusuma"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jovkusuma":55}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovkusuma"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"jovkusuma"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"jovkusuma"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"jovkusuma"},"content":" * Represent the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"jovkusuma"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"jovkusuma"},"content":" * @author Armando Jovan Kusuma","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"jovkusuma"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"jovkusuma"},"content":"public class TaskList {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"jovkusuma"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"jovkusuma"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"jovkusuma"},"content":"     * Creates a task list which is empty at first.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"jovkusuma"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"jovkusuma"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"jovkusuma"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"jovkusuma"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"jovkusuma"},"content":"     * Adds a task into the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"jovkusuma"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"jovkusuma"},"content":"     * @param task the task to be added into the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"jovkusuma"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"jovkusuma"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"jovkusuma"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"jovkusuma"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"jovkusuma"},"content":"     * Gets a specific task from the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"jovkusuma"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"jovkusuma"},"content":"     * @param index the index of the task to be retrieved.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"jovkusuma"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"jovkusuma"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"jovkusuma"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"jovkusuma"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"jovkusuma"},"content":"     * Removes a specific task from the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"jovkusuma"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"jovkusuma"},"content":"     * @param index the index of the task to be removed.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"jovkusuma"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"jovkusuma"},"content":"    public void remove(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"jovkusuma"},"content":"        this.tasks.remove(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"jovkusuma"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"jovkusuma"},"content":"     * Gets the number of tasks in the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"jovkusuma"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"jovkusuma"},"content":"    public int getTaskCount() {","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"jovkusuma"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"jovkusuma"},"content":"//    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"jovkusuma"},"content":"//     * Gets the number of tasks in the task list","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"jovkusuma"},"content":"//     */","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"jovkusuma"},"content":"//    public int getLength() {","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"jovkusuma"},"content":"//        return tasks.size();","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"jovkusuma"},"content":"//    }","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"jovkusuma"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"jovkusuma":61}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovkusuma"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"jovkusuma"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"jovkusuma"},"content":" * Represent tasks of type todo.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"jovkusuma"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"jovkusuma"},"content":" * @author Armando Jovan Kusuma","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"jovkusuma"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"jovkusuma"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"jovkusuma"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"jovkusuma"},"content":"     * Creates a todo task with the specified description.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"jovkusuma"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"jovkusuma"},"content":"     * @param description the description of the task todo.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"jovkusuma"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"jovkusuma"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"jovkusuma"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"jovkusuma"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"jovkusuma"},"content":"     * Returns the string representation of the todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"jovkusuma"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"jovkusuma"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"jovkusuma"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"jovkusuma"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"jovkusuma"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jovkusuma":27}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovkusuma"},"content":"package duke.ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"jovkusuma"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"jovkusuma"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"jovkusuma"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"jovkusuma"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"jovkusuma"},"content":" * The user interface for the Chat Bot.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"jovkusuma"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"jovkusuma"},"content":" * @author Armando Jovan Kusuma","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"jovkusuma"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"jovkusuma"},"content":"public class Ui {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"jovkusuma"},"content":"    private static final String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"jovkusuma"},"content":"    private static final String MESSAGE \u003d LINE + \"\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"jovkusuma"},"content":"            + \" Hello! I\u0027m ChatBot\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"jovkusuma"},"content":"            + \" What can I do for you?\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"jovkusuma"},"content":"            + LINE + \"\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"jovkusuma"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"jovkusuma"},"content":"     * Greets the user at the start","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"jovkusuma"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"jovkusuma"},"content":"    public void greet() {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"jovkusuma"},"content":"        System.out.println(MESSAGE);","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"jovkusuma"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"jovkusuma"},"content":"     * Prints a message if a task is added to the list","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"jovkusuma"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"jovkusuma"},"content":"     * @param input the task added to the list of tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"jovkusuma"},"content":"     * @param count the number of tasks in the list","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"jovkusuma"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"jovkusuma"},"content":"    public void taskPrint(Task input, int count) {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"jovkusuma"},"content":"        System.out.println(LINE + \"\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"jovkusuma"},"content":"                + \"Got it. I\u0027ve added this task\" + \"\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"jovkusuma"},"content":"                + input + \"\\n\" + \"Now you have \" + count","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"jovkusuma"},"content":"                + \" tasks in this list.\" + \"\\n\" + LINE);","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"jovkusuma"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"jovkusuma"},"content":"     * Prints a message if a task is deleted from the list","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"jovkusuma"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"jovkusuma"},"content":"     * @param input the task deleted from the list of tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"jovkusuma"},"content":"     * @param count the number of tasks in the list","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"jovkusuma"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"jovkusuma"},"content":"    public void deletePrint(Task input, int count) {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"jovkusuma"},"content":"        System.out.println(LINE + \"\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"jovkusuma"},"content":"                + \"Noted. I\u0027ve removed this task: \" + \"\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"jovkusuma"},"content":"                + input + \"\\n\" + \"Now you have \" + count","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"jovkusuma"},"content":"                + \" tasks in this list.\" + \"\\n\" + LINE);","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"jovkusuma"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"jovkusuma"},"content":"     * Prints a message if a task is marked as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"jovkusuma"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"jovkusuma"},"content":"     * @param task the task to be marked as done","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"jovkusuma"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"jovkusuma"},"content":"    public void markDonePrint(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"jovkusuma"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"jovkusuma"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done: \" + \"\\n\" + task);","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"jovkusuma"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"jovkusuma"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"jovkusuma"},"content":"     * Prints a message if a task is unmarked as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"jovkusuma"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"jovkusuma"},"content":"     * @param task the task to be unmarked as done","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"jovkusuma"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"jovkusuma"},"content":"    public void unmarkDonePrint(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"jovkusuma"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"jovkusuma"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet: \" + \"\\n\" + task);","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"jovkusuma"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"jovkusuma"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"jovkusuma"},"content":"     * Prints a message if a task is marked as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"jovkusuma"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"jovkusuma"},"content":"    public void bye() {","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"jovkusuma"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"jovkusuma"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"jovkusuma"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"jovkusuma"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"jovkusuma"},"content":"     * Prints the list of tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"jovkusuma"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"jovkusuma"},"content":"     * @param tasksList the list of tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"jovkusuma"},"content":"     * @param count the amount of tasks in the tasks list","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"jovkusuma"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"jovkusuma"},"content":"    public void listOfTasks(TaskList tasksList, int count) {","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"jovkusuma"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"jovkusuma"},"content":"        for (int i \u003d 0; i \u003c count; i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"jovkusuma"},"content":"            System.out.println((i + 1) + \".\" + tasksList.getTask(i));","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"jovkusuma"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"jovkusuma"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"jovkusuma"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"jovkusuma"},"content":"     * Prints the error message from Duke Exception","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"jovkusuma"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"jovkusuma"},"content":"     * @param e The DukeException error to be printed","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"jovkusuma"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"jovkusuma"},"content":"    public void errorPrint(DukeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"jovkusuma"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"jovkusuma"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"jovkusuma"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"jovkusuma"},"content":"    public void printFoundTasks(TaskList findTasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"jovkusuma"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"jovkusuma"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"jovkusuma"},"content":"        for (int i \u003d 0; i \u003c findTasks.getTaskCount(); i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"jovkusuma"},"content":"            System.out.println((i + 1) + \". \" + findTasks.getTask(i));","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"jovkusuma"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"jovkusuma"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"jovkusuma"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"jovkusuma":117}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovkusuma"},"content":"package duke.parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"jovkusuma"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"jovkusuma"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"jovkusuma"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"jovkusuma"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"jovkusuma"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"jovkusuma"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"jovkusuma"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"jovkusuma"},"content":"    public void parse_invalidCommand_exceptionThrown() throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"jovkusuma"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"jovkusuma"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"jovkusuma"},"content":"            parser.parse(\"abcde\");","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"jovkusuma"},"content":"            fail(\"This should not be possible! It should have thrown an error.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"jovkusuma"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"jovkusuma"},"content":"            assertEquals(\"I\u0027m sorry, I don\u0027t know what that means\", e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"jovkusuma"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"jovkusuma"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"jovkusuma"},"content":"    public void parse_listCommand_valid() {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"jovkusuma"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"jovkusuma"},"content":"            Command list \u003d Parser.parse(\"list\");","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"jovkusuma"},"content":"            assertTrue(list instanceof ListCommand);","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"jovkusuma"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"jovkusuma"},"content":"            fail(\"This should not be possible! It should have worked properly\");","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"jovkusuma"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"jovkusuma"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"jovkusuma":34}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovkusuma"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"jovkusuma"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"jovkusuma"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"jovkusuma"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"jovkusuma"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"jovkusuma"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"jovkusuma"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"jovkusuma"},"content":"public class EventTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"jovkusuma"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"jovkusuma"},"content":"    public void event_toString_validCommand_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"jovkusuma"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"jovkusuma"},"content":"            Task event \u003d new Event(\"Birthday Party\", \"2023-09-01\", \"2023-09-02\");","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"jovkusuma"},"content":"            String expectedOutcome \u003d \"[E][ ] Birthday Party (from: Sep 01 2023 to: Sep 02 2023)\";","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"jovkusuma"},"content":"            assertEquals(expectedOutcome, event.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"jovkusuma"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"jovkusuma"},"content":"            fail(\"This should not be possible! It should have worked properly.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"jovkusuma"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"jovkusuma"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"jovkusuma"},"content":"    public void event_toString_invalidCommand_throwException() {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"jovkusuma"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"jovkusuma"},"content":"            Task event \u003d new Event(\"Birthday Party\", \"2023-08-31\", \"2023-08-32\");","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"jovkusuma"},"content":"            fail(\"This should not be possible! It should have thrown a DukeException\");","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"jovkusuma"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"jovkusuma"},"content":"            assertEquals(\"Invalid date format! Please input in the form of yyyy-MM-dd\", e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"jovkusuma"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"jovkusuma"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"jovkusuma"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"jovkusuma":29}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jovkusuma"},"content":"deadline return book /by Monday 28 Aug @ 5pm","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"jovkusuma"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"jovkusuma"},"content":"todo borrow LOTR book","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"jovkusuma"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"jovkusuma"},"content":"event project meeting /from Wednesday, 23 Aug @ 8pm  /to Thursday, 24 Aug @ 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"jovkusuma"},"content":"deadline register book /by Wednesday 30 Aug @ 5pm","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"jovkusuma"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"jovkusuma"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"jovkusuma"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"jovkusuma"},"content":"mark 3","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"jovkusuma"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"jovkusuma"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"jovkusuma"},"content":"unmark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"jovkusuma"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"jovkusuma"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jovkusuma":15}}]
