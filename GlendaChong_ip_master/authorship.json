[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"GlendaChong"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"GlendaChong"},"content":"}","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"GlendaChong"},"content":"checkstyle {","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"GlendaChong"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"GlendaChong"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":21,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"GlendaChong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"GlendaChong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"GlendaChong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"GlendaChong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"GlendaChong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"GlendaChong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"GlendaChong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"GlendaChong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"GlendaChong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"GlendaChong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"GlendaChong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"GlendaChong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"GlendaChong"},"content":"    mainClassName \u003d \u0027duke.Launcher\u0027","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"GlendaChong"},"content":"    archiveBaseName \u003d \"glendasaurus\"","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"GlendaChong":23,"-":40}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"GlendaChong"},"content":"E | 1 | AI Workshop | from 22 Aug | to 23 Aug","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"GlendaChong"},"content":"D | 0 | CS2103T iP task | 22 Sep 2023 | 11.59PM","lastModifiedDate":"2023-09-19"},{"lineNumber":3,"author":{"gitId":"GlendaChong"},"content":"T | 0 | buy groceries","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"GlendaChong"},"content":"D | 1 | SEP Application | 24 Sep 2023 | 11.59PM","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"GlendaChong"},"content":"D | 0 | ES2660 Presentation | 21 Sep 2023 | 10.00AM","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"GlendaChong"},"content":"F | 0 | improve GUI | needs 2 hours","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"GlendaChong"},"content":"D | 1 | hello | 12 Dec 1212 | 11.49PM","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"GlendaChong"},"content":"E | 1 | todo | from 1 | to 1","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"GlendaChong":8}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"GlendaChong"},"content":"# Glendasaurus User Guide","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":3,"author":{"gitId":"GlendaChong"},"content":"Glendasaurus is a Personal Assistant Chatbot that helps you keep track of various tasks!","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"GlendaChong"},"content":"## Getting Started","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"GlendaChong"},"content":"1. Ensure that you have Java `11` or above installed in your Computer.","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"GlendaChong"},"content":"2. Download the latest `glendasaurus.jar` from [here](https://github.com/GlendaChong/ip/releases)","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"GlendaChong"},"content":"3. Copy the file to the folder you want to use as the home folder for Glendasaurus.","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"GlendaChong"},"content":"4. Open your command terminal and use the `cd` command to navigate to the home folder for Glendasaurus.","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"GlendaChong"},"content":"5. Type `java jar -glendasaurus.jar` and press Enter to execute it. ","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"GlendaChong"},"content":"6. You may now begin to use the app!","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"GlendaChong"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"GlendaChong"},"content":"- [Add a `Todo` task](#add-a-todo-task)","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"GlendaChong"},"content":"- [Add a `Deadline` task](#add-a-deadline-task)","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"GlendaChong"},"content":"- [Add an `Event` task](#add-an-event-task)","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"GlendaChong"},"content":"- [Add a `FixedDuration` task](#add-a-fixedduration-task)","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"GlendaChong"},"content":"- [List all tasks](#list-all-tasks)","lastModifiedDate":"2023-09-19"},{"lineNumber":20,"author":{"gitId":"GlendaChong"},"content":"- [Mark a task as done](#mark-a-task-as-done)","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"GlendaChong"},"content":"- [Mark a task as undone](#mark-a-task-as-undone)","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"GlendaChong"},"content":"- [Delete a task](#delete-a-task)","lastModifiedDate":"2023-09-19"},{"lineNumber":23,"author":{"gitId":"GlendaChong"},"content":"- [Find tasks](#find-tasks)","lastModifiedDate":"2023-09-19"},{"lineNumber":24,"author":{"gitId":"GlendaChong"},"content":"- [Exit the program](#exit-the-program)","lastModifiedDate":"2023-09-19"},{"lineNumber":25,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":26,"author":{"gitId":"GlendaChong"},"content":"### Add a `Todo` task","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"GlendaChong"},"content":"A `Todo` task is one that does not have any date/time attached to it. ","lastModifiedDate":"2023-09-19"},{"lineNumber":28,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":29,"author":{"gitId":"GlendaChong"},"content":"#### Usage","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"GlendaChong"},"content":"`todo [task description]`","lastModifiedDate":"2023-09-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"GlendaChong"},"content":"#### Examples","lastModifiedDate":"2023-09-19"},{"lineNumber":33,"author":{"gitId":"GlendaChong"},"content":"- `todo read book`","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"GlendaChong"},"content":"- `todo return book`","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"GlendaChong"},"content":"- `todo borrow book`","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":37,"author":{"gitId":"GlendaChong"},"content":"#### Expected Outcome ","lastModifiedDate":"2023-09-19"},{"lineNumber":38,"author":{"gitId":"GlendaChong"},"content":"If successful, the task will be added to the task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":39,"author":{"gitId":"GlendaChong"},"content":"Glendasaurus will respond with the following message:","lastModifiedDate":"2023-09-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":41,"author":{"gitId":"GlendaChong"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":42,"author":{"gitId":"GlendaChong"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-19"},{"lineNumber":43,"author":{"gitId":"GlendaChong"},"content":"[T][ ] read book","lastModifiedDate":"2023-09-19"},{"lineNumber":44,"author":{"gitId":"GlendaChong"},"content":"Now you have 1 task(s) in the list.","lastModifiedDate":"2023-09-19"},{"lineNumber":45,"author":{"gitId":"GlendaChong"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":47,"author":{"gitId":"GlendaChong"},"content":"#### Possible Errors","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"GlendaChong"},"content":"If the task description is empty, Glendasaurus will respond with the following message:","lastModifiedDate":"2023-09-19"},{"lineNumber":49,"author":{"gitId":"GlendaChong"},"content":"``` ","lastModifiedDate":"2023-09-19"},{"lineNumber":50,"author":{"gitId":"GlendaChong"},"content":"OOPS!!! The description of a todo cannot be empty.","lastModifiedDate":"2023-09-19"},{"lineNumber":51,"author":{"gitId":"GlendaChong"},"content":"``` ","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"GlendaChong"},"content":"### Add a `Deadline` task","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"GlendaChong"},"content":"A `Deadline` task is one that needs to be done before a specific date/time. ","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"GlendaChong"},"content":"#### Usage","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"GlendaChong"},"content":"`deadline [task description] /by [DD/MM/YYYY] [HHMM]`","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"GlendaChong"},"content":"#### Examples","lastModifiedDate":"2023-09-19"},{"lineNumber":60,"author":{"gitId":"GlendaChong"},"content":"- `deadline return book /by 18/09/2020 2359`","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"GlendaChong"},"content":"- `deadline homework /by 20/09/2020 1059`","lastModifiedDate":"2023-09-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"GlendaChong"},"content":"#### Expected Outcome","lastModifiedDate":"2023-09-19"},{"lineNumber":64,"author":{"gitId":"GlendaChong"},"content":"If successful, the task will be added to the task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":65,"author":{"gitId":"GlendaChong"},"content":"Glendasaurus will respond with the following message:","lastModifiedDate":"2023-09-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":67,"author":{"gitId":"GlendaChong"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":68,"author":{"gitId":"GlendaChong"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-19"},{"lineNumber":69,"author":{"gitId":"GlendaChong"},"content":"[D][ ] return book (by Sep 18 2020 11:59pm)","lastModifiedDate":"2023-09-19"},{"lineNumber":70,"author":{"gitId":"GlendaChong"},"content":"Now you have 2 task(s) in the list.","lastModifiedDate":"2023-09-19"},{"lineNumber":71,"author":{"gitId":"GlendaChong"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":72,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":73,"author":{"gitId":"GlendaChong"},"content":"#### Possible Errors","lastModifiedDate":"2023-09-19"},{"lineNumber":74,"author":{"gitId":"GlendaChong"},"content":"If the task is not in the correct format, Glendasaurus will respond with the following message:","lastModifiedDate":"2023-09-19"},{"lineNumber":75,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":76,"author":{"gitId":"GlendaChong"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":77,"author":{"gitId":"GlendaChong"},"content":"OOPS!!! The format of a deadline task is ","lastModifiedDate":"2023-09-19"},{"lineNumber":78,"author":{"gitId":"GlendaChong"},"content":"\"deadline TASK_DESCRIPTION /by DD/MM/YYYY 24H_TIME\\\"\"","lastModifiedDate":"2023-09-19"},{"lineNumber":79,"author":{"gitId":"GlendaChong"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":80,"author":{"gitId":"GlendaChong"},"content":"If the date/time is not valid, Glendasaurus will respond with the following message:","lastModifiedDate":"2023-09-19"},{"lineNumber":81,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":82,"author":{"gitId":"GlendaChong"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":83,"author":{"gitId":"GlendaChong"},"content":"OOPS!!! Invalid date or time format in deadline task.","lastModifiedDate":"2023-09-19"},{"lineNumber":84,"author":{"gitId":"GlendaChong"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":86,"author":{"gitId":"GlendaChong"},"content":"### Add an `Event` task","lastModifiedDate":"2023-09-19"},{"lineNumber":87,"author":{"gitId":"GlendaChong"},"content":"An `Event` task is one that starts at a specific date/time and ends at a specific date/time.","lastModifiedDate":"2023-09-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":89,"author":{"gitId":"GlendaChong"},"content":"#### Usage","lastModifiedDate":"2023-09-19"},{"lineNumber":90,"author":{"gitId":"GlendaChong"},"content":"`event [task description] /from [start] /to [end]`","lastModifiedDate":"2023-09-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":92,"author":{"gitId":"GlendaChong"},"content":"#### Examples","lastModifiedDate":"2023-09-19"},{"lineNumber":93,"author":{"gitId":"GlendaChong"},"content":"- `event project meeting /from 18/09/2020 1400 /to 18/09/2020 1500`","lastModifiedDate":"2023-09-19"},{"lineNumber":94,"author":{"gitId":"GlendaChong"},"content":"- `event AI workshop /from 20 Sep /to 21 Sep`","lastModifiedDate":"2023-09-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":96,"author":{"gitId":"GlendaChong"},"content":"#### Expected Outcome","lastModifiedDate":"2023-09-19"},{"lineNumber":97,"author":{"gitId":"GlendaChong"},"content":"If successful, the task will be added to the task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":98,"author":{"gitId":"GlendaChong"},"content":"Glendasaurus will respond with the following message:","lastModifiedDate":"2023-09-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":100,"author":{"gitId":"GlendaChong"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":101,"author":{"gitId":"GlendaChong"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-19"},{"lineNumber":102,"author":{"gitId":"GlendaChong"},"content":"[E][ ] project meeting (from Sep 18 2020 2:00pm to Sep 18 2020 3:00pm)","lastModifiedDate":"2023-09-19"},{"lineNumber":103,"author":{"gitId":"GlendaChong"},"content":"Now you have 3 task(s) in the list.","lastModifiedDate":"2023-09-19"},{"lineNumber":104,"author":{"gitId":"GlendaChong"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":105,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":106,"author":{"gitId":"GlendaChong"},"content":"#### Possible Errors","lastModifiedDate":"2023-09-19"},{"lineNumber":107,"author":{"gitId":"GlendaChong"},"content":"If the task is not in the correct format, Glendasaurus will respond with the following message:","lastModifiedDate":"2023-09-19"},{"lineNumber":108,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":109,"author":{"gitId":"GlendaChong"},"content":"``` ","lastModifiedDate":"2023-09-19"},{"lineNumber":110,"author":{"gitId":"GlendaChong"},"content":"OOPS!!! The format of an event task is \"event TASK_DESCRIPTION /from START /to END\"\"","lastModifiedDate":"2023-09-19"},{"lineNumber":111,"author":{"gitId":"GlendaChong"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":113,"author":{"gitId":"GlendaChong"},"content":"### Add a `FixedDuration` task","lastModifiedDate":"2023-09-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":115,"author":{"gitId":"GlendaChong"},"content":"#### Description","lastModifiedDate":"2023-09-19"},{"lineNumber":116,"author":{"gitId":"GlendaChong"},"content":"A `FixedDuration` task is one that is unscheduled but has a fixed duration. ","lastModifiedDate":"2023-09-19"},{"lineNumber":117,"author":{"gitId":"GlendaChong"},"content":"It does not have a fixed start/end time. ","lastModifiedDate":"2023-09-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":119,"author":{"gitId":"GlendaChong"},"content":"#### Usage","lastModifiedDate":"2023-09-19"},{"lineNumber":120,"author":{"gitId":"GlendaChong"},"content":"`fixedDuration [task description] /needs [duration] [units]`","lastModifiedDate":"2023-09-19"},{"lineNumber":121,"author":{"gitId":"GlendaChong"},"content":"- duration must be an integer","lastModifiedDate":"2023-09-19"},{"lineNumber":122,"author":{"gitId":"GlendaChong"},"content":"- units must be one of the following: `hours`, `minutes`","lastModifiedDate":"2023-09-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":124,"author":{"gitId":"GlendaChong"},"content":"#### Examples","lastModifiedDate":"2023-09-19"},{"lineNumber":125,"author":{"gitId":"GlendaChong"},"content":"- `fixedDuration iP submission /needs 2 hours`","lastModifiedDate":"2023-09-19"},{"lineNumber":126,"author":{"gitId":"GlendaChong"},"content":"- `fixedDuration homework /needs 30 minutes`","lastModifiedDate":"2023-09-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":128,"author":{"gitId":"GlendaChong"},"content":"#### Expected Outcome","lastModifiedDate":"2023-09-19"},{"lineNumber":129,"author":{"gitId":"GlendaChong"},"content":"If successful, the task will be added to the task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":130,"author":{"gitId":"GlendaChong"},"content":"Glendasaurus will respond with the following message:","lastModifiedDate":"2023-09-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":133,"author":{"gitId":"GlendaChong"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-19"},{"lineNumber":134,"author":{"gitId":"GlendaChong"},"content":"[F][ ] iP submission (needs 2 hours)","lastModifiedDate":"2023-09-19"},{"lineNumber":135,"author":{"gitId":"GlendaChong"},"content":"Now you have 4 task(s) in the list.","lastModifiedDate":"2023-09-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":137,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":138,"author":{"gitId":"GlendaChong"},"content":"#### Possible Errors","lastModifiedDate":"2023-09-19"},{"lineNumber":139,"author":{"gitId":"GlendaChong"},"content":"If the task is not in the correct format, Glendasaurus will respond with the following message:","lastModifiedDate":"2023-09-19"},{"lineNumber":140,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":141,"author":{"gitId":"GlendaChong"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":142,"author":{"gitId":"GlendaChong"},"content":"OOPS!!! The format of an event task is ","lastModifiedDate":"2023-09-19"},{"lineNumber":143,"author":{"gitId":"GlendaChong"},"content":"fixedDuration TASK_DESCRIPTION /needs DURATION UNITS(minutes OR hours)","lastModifiedDate":"2023-09-19"},{"lineNumber":144,"author":{"gitId":"GlendaChong"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":145,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":146,"author":{"gitId":"GlendaChong"},"content":"If the units is not valid, Glendasaurus will respond with the following message:","lastModifiedDate":"2023-09-19"},{"lineNumber":147,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":148,"author":{"gitId":"GlendaChong"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":149,"author":{"gitId":"GlendaChong"},"content":"OOPS!!! The units of a fixed duration task must be either \"hours\" or \"minutes\".","lastModifiedDate":"2023-09-19"},{"lineNumber":150,"author":{"gitId":"GlendaChong"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":151,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":152,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":153,"author":{"gitId":"GlendaChong"},"content":"### List all tasks","lastModifiedDate":"2023-09-19"},{"lineNumber":154,"author":{"gitId":"GlendaChong"},"content":"Lists all tasks in the task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":155,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":156,"author":{"gitId":"GlendaChong"},"content":"#### Usage","lastModifiedDate":"2023-09-19"},{"lineNumber":157,"author":{"gitId":"GlendaChong"},"content":"`list`","lastModifiedDate":"2023-09-19"},{"lineNumber":158,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":159,"author":{"gitId":"GlendaChong"},"content":"#### Expected Outcome","lastModifiedDate":"2023-09-19"},{"lineNumber":160,"author":{"gitId":"GlendaChong"},"content":"Glendasaurus will respond with the following message:","lastModifiedDate":"2023-09-19"},{"lineNumber":161,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":162,"author":{"gitId":"GlendaChong"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":163,"author":{"gitId":"GlendaChong"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-09-19"},{"lineNumber":164,"author":{"gitId":"GlendaChong"},"content":"1. [T][ ] read book","lastModifiedDate":"2023-09-19"},{"lineNumber":165,"author":{"gitId":"GlendaChong"},"content":"2. [D][ ] return book (by Sep 18 2020 11:59pm)","lastModifiedDate":"2023-09-19"},{"lineNumber":166,"author":{"gitId":"GlendaChong"},"content":"3. [E][ ] project meeting (from Sep 18 2020 2:00pm to Sep 18 2020 3:00pm)","lastModifiedDate":"2023-09-19"},{"lineNumber":167,"author":{"gitId":"GlendaChong"},"content":"4. [F][ ] iP submission (needs 2 hours)","lastModifiedDate":"2023-09-19"},{"lineNumber":168,"author":{"gitId":"GlendaChong"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":169,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":170,"author":{"gitId":"GlendaChong"},"content":"### Mark a task as done","lastModifiedDate":"2023-09-19"},{"lineNumber":171,"author":{"gitId":"GlendaChong"},"content":"Marks a task as done.","lastModifiedDate":"2023-09-19"},{"lineNumber":172,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":173,"author":{"gitId":"GlendaChong"},"content":"#### Usage","lastModifiedDate":"2023-09-19"},{"lineNumber":174,"author":{"gitId":"GlendaChong"},"content":"`mark [task number]`","lastModifiedDate":"2023-09-19"},{"lineNumber":175,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":176,"author":{"gitId":"GlendaChong"},"content":"#### Examples","lastModifiedDate":"2023-09-19"},{"lineNumber":177,"author":{"gitId":"GlendaChong"},"content":"- `mark 1`","lastModifiedDate":"2023-09-19"},{"lineNumber":178,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":179,"author":{"gitId":"GlendaChong"},"content":"#### Expected Outcome","lastModifiedDate":"2023-09-19"},{"lineNumber":180,"author":{"gitId":"GlendaChong"},"content":"If successful, the task will be marked as done.","lastModifiedDate":"2023-09-19"},{"lineNumber":181,"author":{"gitId":"GlendaChong"},"content":"Glendasaurus will respond with the following message:","lastModifiedDate":"2023-09-19"},{"lineNumber":182,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":183,"author":{"gitId":"GlendaChong"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":184,"author":{"gitId":"GlendaChong"},"content":"Great! I\u0027ve completed this task!","lastModifiedDate":"2023-09-19"},{"lineNumber":185,"author":{"gitId":"GlendaChong"},"content":"[T][X] read book","lastModifiedDate":"2023-09-19"},{"lineNumber":186,"author":{"gitId":"GlendaChong"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":188,"author":{"gitId":"GlendaChong"},"content":"#### Possible Errors","lastModifiedDate":"2023-09-19"},{"lineNumber":189,"author":{"gitId":"GlendaChong"},"content":"If the command is in an invalid format, Glendasaurus will respond with the following message:","lastModifiedDate":"2023-09-19"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":191,"author":{"gitId":"-"},"content":" ```","lastModifiedDate":"2021-07-17"},{"lineNumber":192,"author":{"gitId":"GlendaChong"},"content":"OOPS!!! The format of unmark command is \"unmark TASK_NUMBER\". ","lastModifiedDate":"2023-09-19"},{"lineNumber":193,"author":{"gitId":"GlendaChong"},"content":"Task number must exist in the task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":194,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":195,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":196,"author":{"gitId":"GlendaChong"},"content":"If the task number is not valid, Glendasaurus will respond with the following message:","lastModifiedDate":"2023-09-19"},{"lineNumber":197,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":198,"author":{"gitId":"GlendaChong"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":199,"author":{"gitId":"GlendaChong"},"content":"OOPS!!! Task 5 does not exist.","lastModifiedDate":"2023-09-19"},{"lineNumber":200,"author":{"gitId":"GlendaChong"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":201,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":202,"author":{"gitId":"GlendaChong"},"content":"### Mark a task as undone","lastModifiedDate":"2023-09-19"},{"lineNumber":203,"author":{"gitId":"GlendaChong"},"content":"Marks a task as undone.","lastModifiedDate":"2023-09-19"},{"lineNumber":204,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":205,"author":{"gitId":"GlendaChong"},"content":"#### Usage","lastModifiedDate":"2023-09-19"},{"lineNumber":206,"author":{"gitId":"GlendaChong"},"content":"`unmark [task number]`","lastModifiedDate":"2023-09-19"},{"lineNumber":207,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":208,"author":{"gitId":"GlendaChong"},"content":"#### Examples","lastModifiedDate":"2023-09-19"},{"lineNumber":209,"author":{"gitId":"GlendaChong"},"content":"- `unmark 1`","lastModifiedDate":"2023-09-19"},{"lineNumber":210,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":211,"author":{"gitId":"GlendaChong"},"content":"#### Expected Outcome","lastModifiedDate":"2023-09-19"},{"lineNumber":212,"author":{"gitId":"GlendaChong"},"content":"If successful, the task will be marked as undone.","lastModifiedDate":"2023-09-19"},{"lineNumber":213,"author":{"gitId":"GlendaChong"},"content":"Glendasaurus will respond with the following message:","lastModifiedDate":"2023-09-19"},{"lineNumber":214,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":215,"author":{"gitId":"GlendaChong"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":216,"author":{"gitId":"GlendaChong"},"content":"Okay, I have not yet completed this task: ","lastModifiedDate":"2023-09-19"},{"lineNumber":217,"author":{"gitId":"GlendaChong"},"content":"[T][ ] read book","lastModifiedDate":"2023-09-19"},{"lineNumber":218,"author":{"gitId":"GlendaChong"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":219,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":220,"author":{"gitId":"GlendaChong"},"content":"#### Possible Errors","lastModifiedDate":"2023-09-19"},{"lineNumber":221,"author":{"gitId":"GlendaChong"},"content":"If the command is in an invalid format, Glendasaurus will respond with the following message:","lastModifiedDate":"2023-09-19"},{"lineNumber":222,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":223,"author":{"gitId":"GlendaChong"},"content":" ```","lastModifiedDate":"2023-09-19"},{"lineNumber":224,"author":{"gitId":"GlendaChong"},"content":"OOPS!!! The format of unmark command is \"unmark TASK_NUMBER\".","lastModifiedDate":"2023-09-19"},{"lineNumber":225,"author":{"gitId":"GlendaChong"},"content":"Task number must exist in the task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":226,"author":{"gitId":"GlendaChong"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":227,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":228,"author":{"gitId":"GlendaChong"},"content":"If the task number is not valid, Glendasaurus will respond with the following message:","lastModifiedDate":"2023-09-19"},{"lineNumber":229,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":230,"author":{"gitId":"GlendaChong"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":231,"author":{"gitId":"GlendaChong"},"content":"OOPS!!! Task 5 does not exist.","lastModifiedDate":"2023-09-19"},{"lineNumber":232,"author":{"gitId":"GlendaChong"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":233,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":234,"author":{"gitId":"GlendaChong"},"content":"### Delete a task","lastModifiedDate":"2023-09-19"},{"lineNumber":235,"author":{"gitId":"GlendaChong"},"content":"Deletes a task from the task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":236,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":237,"author":{"gitId":"GlendaChong"},"content":"#### Usage","lastModifiedDate":"2023-09-19"},{"lineNumber":238,"author":{"gitId":"GlendaChong"},"content":"`delete [task number]`","lastModifiedDate":"2023-09-19"},{"lineNumber":239,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":240,"author":{"gitId":"GlendaChong"},"content":"#### Examples","lastModifiedDate":"2023-09-19"},{"lineNumber":241,"author":{"gitId":"GlendaChong"},"content":"- `delete 1`","lastModifiedDate":"2023-09-19"},{"lineNumber":242,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":243,"author":{"gitId":"GlendaChong"},"content":"#### Expected Outcome","lastModifiedDate":"2023-09-19"},{"lineNumber":244,"author":{"gitId":"GlendaChong"},"content":"If successful, the task will be deleted from the task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":245,"author":{"gitId":"GlendaChong"},"content":"Glendasaurus will respond with the following message:","lastModifiedDate":"2023-09-19"},{"lineNumber":246,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":247,"author":{"gitId":"GlendaChong"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":248,"author":{"gitId":"GlendaChong"},"content":"Okay, I\u0027ve removed this task:","lastModifiedDate":"2023-09-19"},{"lineNumber":249,"author":{"gitId":"GlendaChong"},"content":"[T][ ] read book","lastModifiedDate":"2023-09-19"},{"lineNumber":250,"author":{"gitId":"GlendaChong"},"content":"Now you have 3 task(s) in the list.","lastModifiedDate":"2023-09-19"},{"lineNumber":251,"author":{"gitId":"GlendaChong"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":252,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":253,"author":{"gitId":"GlendaChong"},"content":"#### Possible Errors","lastModifiedDate":"2023-09-19"},{"lineNumber":254,"author":{"gitId":"GlendaChong"},"content":"If the command is in an invalid format, Glendasaurus will respond with the following message:","lastModifiedDate":"2023-09-19"},{"lineNumber":255,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":256,"author":{"gitId":"GlendaChong"},"content":" ```","lastModifiedDate":"2023-09-19"},{"lineNumber":257,"author":{"gitId":"GlendaChong"},"content":"OOPS!!! The format of delete command is \"delete TASK_NUMBER\". ","lastModifiedDate":"2023-09-19"},{"lineNumber":258,"author":{"gitId":"GlendaChong"},"content":"Task number must exist in the task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":259,"author":{"gitId":"GlendaChong"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":260,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":261,"author":{"gitId":"GlendaChong"},"content":"If the task number is not valid, Glendasaurus will respond with the following message:","lastModifiedDate":"2023-09-19"},{"lineNumber":262,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":263,"author":{"gitId":"GlendaChong"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":264,"author":{"gitId":"GlendaChong"},"content":"OOPS!!! Task 5 does not exist.","lastModifiedDate":"2023-09-19"},{"lineNumber":265,"author":{"gitId":"GlendaChong"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":266,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":267,"author":{"gitId":"GlendaChong"},"content":"### Find tasks","lastModifiedDate":"2023-09-19"},{"lineNumber":268,"author":{"gitId":"GlendaChong"},"content":"Finds tasks that contain the matching keyword.","lastModifiedDate":"2023-09-19"},{"lineNumber":269,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":270,"author":{"gitId":"GlendaChong"},"content":"#### Usage","lastModifiedDate":"2023-09-19"},{"lineNumber":271,"author":{"gitId":"GlendaChong"},"content":"`find [keyword]`","lastModifiedDate":"2023-09-19"},{"lineNumber":272,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":273,"author":{"gitId":"GlendaChong"},"content":"#### Examples","lastModifiedDate":"2023-09-19"},{"lineNumber":274,"author":{"gitId":"GlendaChong"},"content":"- `find book`","lastModifiedDate":"2023-09-19"},{"lineNumber":275,"author":{"gitId":"GlendaChong"},"content":"- `find project`","lastModifiedDate":"2023-09-19"},{"lineNumber":276,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":277,"author":{"gitId":"GlendaChong"},"content":"#### Expected Outcome","lastModifiedDate":"2023-09-19"},{"lineNumber":278,"author":{"gitId":"GlendaChong"},"content":"If successful, the tasks that contain the keyword will be listed.","lastModifiedDate":"2023-09-19"},{"lineNumber":279,"author":{"gitId":"GlendaChong"},"content":"Glendasaurus will respond with the following message:","lastModifiedDate":"2023-09-19"},{"lineNumber":280,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":281,"author":{"gitId":"GlendaChong"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":282,"author":{"gitId":"GlendaChong"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2023-09-19"},{"lineNumber":283,"author":{"gitId":"GlendaChong"},"content":"1. [D][ ] return book (by Sep 18 2020 11:59pm)","lastModifiedDate":"2023-09-19"},{"lineNumber":284,"author":{"gitId":"GlendaChong"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":285,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":286,"author":{"gitId":"GlendaChong"},"content":"#### Possible Errors","lastModifiedDate":"2023-09-19"},{"lineNumber":287,"author":{"gitId":"GlendaChong"},"content":"If the command is in an invalid format, Glendasaurus will respond with the following message:","lastModifiedDate":"2023-09-19"},{"lineNumber":288,"author":{"gitId":"GlendaChong"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":289,"author":{"gitId":"GlendaChong"},"content":"OOPS!!! The description of a find command cannot be empty.","lastModifiedDate":"2023-09-19"},{"lineNumber":290,"author":{"gitId":"GlendaChong"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":291,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":292,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":293,"author":{"gitId":"GlendaChong"},"content":"### Exit the program","lastModifiedDate":"2023-09-19"},{"lineNumber":294,"author":{"gitId":"GlendaChong"},"content":"Exits Glendasaurus easily once done!","lastModifiedDate":"2023-09-19"},{"lineNumber":295,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":296,"author":{"gitId":"GlendaChong"},"content":"#### Usage","lastModifiedDate":"2023-09-19"},{"lineNumber":297,"author":{"gitId":"GlendaChong"},"content":"`bye`","lastModifiedDate":"2023-09-19"},{"lineNumber":298,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":299,"author":{"gitId":"GlendaChong"},"content":"#### Expected Outcome","lastModifiedDate":"2023-09-19"},{"lineNumber":300,"author":{"gitId":"GlendaChong"},"content":"Glendasaurus will respond with the following message:","lastModifiedDate":"2023-09-19"},{"lineNumber":301,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":302,"author":{"gitId":"GlendaChong"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":303,"author":{"gitId":"GlendaChong"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2023-09-19"},{"lineNumber":304,"author":{"gitId":"GlendaChong"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":305,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":306,"author":{"gitId":"GlendaChong"},"content":"## Command Summary","lastModifiedDate":"2023-09-19"},{"lineNumber":307,"author":{"gitId":"GlendaChong"},"content":"The following table provides a quick summary of all the commands that Glendasarus can understand:","lastModifiedDate":"2023-09-19"},{"lineNumber":308,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":309,"author":{"gitId":"GlendaChong"},"content":"| Command             | Description, Examples                                                                                                          |","lastModifiedDate":"2023-09-19"},{"lineNumber":310,"author":{"gitId":"GlendaChong"},"content":"|---------------------|--------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-09-19"},{"lineNumber":311,"author":{"gitId":"GlendaChong"},"content":"| `todo`        | Adds a `Todo` task to the task list. \u003cbr\u003e e.g. `todo read book`                                                                |","lastModifiedDate":"2023-09-19"},{"lineNumber":312,"author":{"gitId":"GlendaChong"},"content":"| `deadline`    | Adds a `Deadline` task to the task list. \u003cbr\u003e e.g. `deadline return book /by 18/09/2020 2359`                                  |","lastModifiedDate":"2023-09-19"},{"lineNumber":313,"author":{"gitId":"GlendaChong"},"content":"| `event`      | Adds an `Event` task to the task list. \u003cbr\u003e e.g. `event project meeting /from 18/09/2020 1400 /to 18/09/2020 1500`              |","lastModifiedDate":"2023-09-19"},{"lineNumber":314,"author":{"gitId":"GlendaChong"},"content":"| `fixedDuration` | Adds a `FixedDuration` task to the task list. \u003cbr\u003e e.g. `fixedDuration iP submission /needs 2 hours`                            |","lastModifiedDate":"2023-09-19"},{"lineNumber":315,"author":{"gitId":"GlendaChong"},"content":"| `list`        | Lists all tasks in the task list.                                                                                              |","lastModifiedDate":"2023-09-19"},{"lineNumber":316,"author":{"gitId":"GlendaChong"},"content":"| `mark`        | Marks a task as done. \u003cbr\u003e e.g. `mark 1`                                                                                       |","lastModifiedDate":"2023-09-19"},{"lineNumber":317,"author":{"gitId":"GlendaChong"},"content":"| `unmark`      | Marks a task as undone. \u003cbr\u003e e.g. `unmark 1`                                                                                   |","lastModifiedDate":"2023-09-19"},{"lineNumber":318,"author":{"gitId":"GlendaChong"},"content":"| `delete`      | Deletes a task from the task list. \u003cbr\u003e e.g. `delete 1`                                                                        |","lastModifiedDate":"2023-09-19"},{"lineNumber":319,"author":{"gitId":"GlendaChong"},"content":"| `find`        | Finds tasks that contain the keyword. \u003cbr\u003e e.g. `find book`                                                                    |","lastModifiedDate":"2023-09-19"},{"lineNumber":320,"author":{"gitId":"GlendaChong"},"content":"| `bye`         | Exits the program.                                                                                                             |","lastModifiedDate":"2023-09-19"},{"lineNumber":321,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":322,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":323,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":324,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":325,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"GlendaChong":297,"-":28}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GlendaChong"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"GlendaChong"},"content":"import duke.command.Command;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"GlendaChong"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"GlendaChong"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"GlendaChong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"GlendaChong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"GlendaChong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"GlendaChong"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"GlendaChong"},"content":" * Duke is a personal assistant chatbot that helps","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"GlendaChong"},"content":" * to keep track of various tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"GlendaChong"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"GlendaChong"},"content":"    private final Storage storage;","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"GlendaChong"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"GlendaChong"},"content":"    private final Ui ui;","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"GlendaChong"},"content":"     * Constructs a Duke object.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"GlendaChong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"GlendaChong"},"content":"     * @param filePath The filepath for loading and saving the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"GlendaChong"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"GlendaChong"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"GlendaChong"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"GlendaChong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"GlendaChong"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"GlendaChong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"GlendaChong"},"content":"            ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"GlendaChong"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"GlendaChong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"GlendaChong"},"content":"     * Retrieves a welcome message for the user.","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"GlendaChong"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"GlendaChong"},"content":"     * @return A welcome message to greet the user.","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"GlendaChong"},"content":"    public String getGreetings() {","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"GlendaChong"},"content":"        return ui.showWelcomeMessage();","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"GlendaChong"},"content":"     * Generates a response to user input.","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"GlendaChong"},"content":"     * This method parses the user input, executes the corresponding command, and returns the response.","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"GlendaChong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"GlendaChong"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"GlendaChong"},"content":"     * @return A response generated based on the user\u0027s input.","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"GlendaChong"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"GlendaChong"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"GlendaChong"},"content":"            assert input !\u003d null : \"Input cannot be null\";","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"GlendaChong"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"GlendaChong"},"content":"            if (c.isExit()) {","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"GlendaChong"},"content":"                exitAfterDelay(); // Exit the application after a delay with the exit message","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"GlendaChong"},"content":"            }","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"GlendaChong"},"content":"            return c.execute(tasks, ui, storage);","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"GlendaChong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"GlendaChong"},"content":"            return ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":64,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":65,"author":{"gitId":"GlendaChong"},"content":"     * Initiates the exit process with a delay and a custom exit message.","lastModifiedDate":"2023-09-19"},{"lineNumber":66,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":67,"author":{"gitId":"GlendaChong"},"content":"    private void exitAfterDelay() {","lastModifiedDate":"2023-09-19"},{"lineNumber":68,"author":{"gitId":"GlendaChong"},"content":"        Thread exitThread \u003d new Thread(() -\u003e {","lastModifiedDate":"2023-09-19"},{"lineNumber":69,"author":{"gitId":"GlendaChong"},"content":"            try {","lastModifiedDate":"2023-09-19"},{"lineNumber":70,"author":{"gitId":"GlendaChong"},"content":"                ui.showGoodbyeMessage();","lastModifiedDate":"2023-09-19"},{"lineNumber":71,"author":{"gitId":"GlendaChong"},"content":"                Thread.sleep(500);","lastModifiedDate":"2023-09-19"},{"lineNumber":72,"author":{"gitId":"GlendaChong"},"content":"                System.exit(0);","lastModifiedDate":"2023-09-19"},{"lineNumber":73,"author":{"gitId":"GlendaChong"},"content":"            } catch (InterruptedException e) {","lastModifiedDate":"2023-09-19"},{"lineNumber":74,"author":{"gitId":"GlendaChong"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-09-19"},{"lineNumber":75,"author":{"gitId":"GlendaChong"},"content":"            }","lastModifiedDate":"2023-09-19"},{"lineNumber":76,"author":{"gitId":"GlendaChong"},"content":"        });","lastModifiedDate":"2023-09-19"},{"lineNumber":77,"author":{"gitId":"GlendaChong"},"content":"        exitThread.start();","lastModifiedDate":"2023-09-19"},{"lineNumber":78,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":79,"author":{"gitId":"GlendaChong"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"GlendaChong":80,"-":3}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GlendaChong"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"GlendaChong"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"GlendaChong"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"GlendaChong"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"GlendaChong"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"GlendaChong"},"content":"public class Launcher {","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"GlendaChong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"GlendaChong"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"GlendaChong"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"GlendaChong":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GlendaChong"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"GlendaChong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"GlendaChong"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"GlendaChong"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"GlendaChong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"GlendaChong"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"GlendaChong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"GlendaChong"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"GlendaChong"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"GlendaChong"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"GlendaChong"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"GlendaChong"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"GlendaChong"},"content":"    private static final String FILE_PATH \u003d \"data/duke.txt\";","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"GlendaChong"},"content":"    private final Duke duke \u003d new Duke(FILE_PATH);","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"GlendaChong"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"GlendaChong"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"GlendaChong"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"GlendaChong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"GlendaChong"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"GlendaChong"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"GlendaChong"},"content":"            // Allow the stage to be resizable","lastModifiedDate":"2023-09-19"},{"lineNumber":26,"author":{"gitId":"GlendaChong"},"content":"            stage.setResizable(true);","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"GlendaChong"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"GlendaChong"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"GlendaChong"},"content":"            stage.show();","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"GlendaChong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"GlendaChong"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"GlendaChong"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"GlendaChong"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"GlendaChong":34}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GlendaChong"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"GlendaChong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"GlendaChong"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"GlendaChong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"GlendaChong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"GlendaChong"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"GlendaChong"},"content":" * The AddCommand class represents a command to add a new task to the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"GlendaChong"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"GlendaChong"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"GlendaChong"},"content":"    private final Task task;","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"GlendaChong"},"content":"     * Constructs an AddCommand object.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"GlendaChong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"GlendaChong"},"content":"     * @param task Task to be added into the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"GlendaChong"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"GlendaChong"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"GlendaChong"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"GlendaChong"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"GlendaChong"},"content":"        taskList.add(task);","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"GlendaChong"},"content":"        String message \u003d ui.showAddedTask(task, taskList.getNumberOfTasks());","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"GlendaChong"},"content":"        storage.save(taskList.getList(), ui);","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"GlendaChong"},"content":"        return message;","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"GlendaChong"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"GlendaChong":30}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GlendaChong"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"GlendaChong"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"GlendaChong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"GlendaChong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"GlendaChong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"GlendaChong"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"GlendaChong"},"content":" * The Command class is an abstract base class for different types of commands in the Duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"GlendaChong"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"GlendaChong"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"GlendaChong"},"content":"     * Executes the command, performing specific actions based on the type of command.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"GlendaChong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"GlendaChong"},"content":"     * @param tasks The TaskList containing tasks to be manipulated.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"GlendaChong"},"content":"     * @param ui The Ui instance for displaying messages.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"GlendaChong"},"content":"     * @param storage The Storage instance for loading and saving tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"GlendaChong"},"content":"     * @return A message or response string based on the command execution.","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"GlendaChong"},"content":"     * @throws DukeException If there is an error while executing the command.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"GlendaChong"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"GlendaChong"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"GlendaChong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"GlendaChong"},"content":"     * @return true if the command is an ExitCommand, false otherwise.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"GlendaChong"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"GlendaChong"},"content":"        return (this instanceof ExitCommand);","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"GlendaChong"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"GlendaChong":32}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GlendaChong"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"GlendaChong"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"GlendaChong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"GlendaChong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"GlendaChong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"GlendaChong"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"GlendaChong"},"content":" * The DeleteCommand class represents a command to deleted from the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"GlendaChong"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"GlendaChong"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"GlendaChong"},"content":"    private final int taskNumber;","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"GlendaChong"},"content":"     * Constructs a DeleteCommand object.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"GlendaChong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"GlendaChong"},"content":"     * @param taskNumber Task number corresponding to the task to be deleted from the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"GlendaChong"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"GlendaChong"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"GlendaChong"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"GlendaChong"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"GlendaChong"},"content":"        if (taskNumber \u003e taskList.getNumberOfTasks()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"GlendaChong"},"content":"            throw new DukeException(\"OOPS!!! Task \" + taskNumber + \" does not exist.\");","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"GlendaChong"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"GlendaChong"},"content":"        String message \u003d ui.showDeletedTask(taskList.getTask(taskNumber), taskList.getNumberOfTasks() - 1);","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"GlendaChong"},"content":"        taskList.remove(taskNumber);","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"GlendaChong"},"content":"        storage.save(taskList.getList(), ui);","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"GlendaChong"},"content":"        return message;","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"GlendaChong"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"GlendaChong":34}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GlendaChong"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"GlendaChong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"GlendaChong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"GlendaChong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"GlendaChong"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"GlendaChong"},"content":" * The ExitCommand class represents a command to quit the Duke application once done.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"GlendaChong"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"GlendaChong"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"GlendaChong"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"GlendaChong"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"GlendaChong"},"content":"        return ui.showGoodbyeMessage();","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"GlendaChong"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"GlendaChong":15}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GlendaChong"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"GlendaChong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"GlendaChong"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"GlendaChong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"GlendaChong"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"GlendaChong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"GlendaChong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"GlendaChong"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"GlendaChong"},"content":" *  The FindCommand class represents a command to find tasks that match a given keyword.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"GlendaChong"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"GlendaChong"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"GlendaChong"},"content":"    private final String keyword;","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"GlendaChong"},"content":"     * Constructs a FindCommand object.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"GlendaChong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"GlendaChong"},"content":"     * @param keyword Keyword to be searched from the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"GlendaChong"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"GlendaChong"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"GlendaChong"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"GlendaChong"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"GlendaChong"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"GlendaChong"},"content":"        for (Task task: taskList.getList()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"GlendaChong"},"content":"            if (task.toString().contains(keyword)) {","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"GlendaChong"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"GlendaChong"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"GlendaChong"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"GlendaChong"},"content":"        return ui.showMatchingTasksToKeyword(matchingTasks);","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"GlendaChong"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"GlendaChong":37}},{"path":"src/main/java/duke/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GlendaChong"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"GlendaChong"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"GlendaChong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"GlendaChong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"GlendaChong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"GlendaChong"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"GlendaChong"},"content":" * The InvalidCommand class represents a command that throws an error to users","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"GlendaChong"},"content":" * when they provide an invalid user input as the command.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"GlendaChong"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"GlendaChong"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"GlendaChong"},"content":"    private final DukeException error;","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"GlendaChong"},"content":"    public InvalidCommand(DukeException error) {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"GlendaChong"},"content":"        this.error \u003d error;","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"GlendaChong"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"GlendaChong"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"GlendaChong"},"content":"        return ui.showErrorMessage(error.getMessage());","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"GlendaChong"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"GlendaChong":23}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GlendaChong"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"GlendaChong"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"GlendaChong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"GlendaChong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"GlendaChong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"GlendaChong"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"GlendaChong"},"content":" * The ListCommand class represents a command to list out all the tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"GlendaChong"},"content":" * in the current task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"GlendaChong"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"GlendaChong"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"GlendaChong"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"GlendaChong"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"GlendaChong"},"content":"        return ui.showAllTasks(taskList.getList());","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"GlendaChong"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"GlendaChong":17}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GlendaChong"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"GlendaChong"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"GlendaChong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"GlendaChong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"GlendaChong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"GlendaChong"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"GlendaChong"},"content":" * The MarkCommand class represents a command to mark the specified task in the list as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"GlendaChong"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"GlendaChong"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"GlendaChong"},"content":"    private final int taskNumber;","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"GlendaChong"},"content":"     * Constructs a MarkCommand object.","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"GlendaChong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"GlendaChong"},"content":"     * @param taskNumber The task number corresponding to the task, to be marked done.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"GlendaChong"},"content":"    public MarkCommand(int taskNumber) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"GlendaChong"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"GlendaChong"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"GlendaChong"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"GlendaChong"},"content":"        if (taskNumber \u003e taskList.getNumberOfTasks()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"GlendaChong"},"content":"            throw new DukeException(\"OOPS!!! Task \" + taskNumber + \" does not exist.\");","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"GlendaChong"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"GlendaChong"},"content":"        String message \u003d ui.showTaskMarkedAsDone(taskList.getTask(taskNumber));","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"GlendaChong"},"content":"        storage.save(taskList.getList(), ui);","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"GlendaChong"},"content":"        return message;","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"GlendaChong"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"GlendaChong":33}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GlendaChong"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"GlendaChong"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"GlendaChong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"GlendaChong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"GlendaChong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"GlendaChong"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"GlendaChong"},"content":" * The UnmarkCommand class represents a command to be marked undone in the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"GlendaChong"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"GlendaChong"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"GlendaChong"},"content":"    private final int taskNumber;","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"GlendaChong"},"content":"     * Constructs an UnmarkCommand object.","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"GlendaChong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"GlendaChong"},"content":"     * @param taskNumber The task number corresponding to the task, to be marked undone.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"GlendaChong"},"content":"    public UnmarkCommand(int taskNumber) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"GlendaChong"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"GlendaChong"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"GlendaChong"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"GlendaChong"},"content":"        if (taskNumber \u003e taskList.getNumberOfTasks()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"GlendaChong"},"content":"            throw new DukeException(\"OOPS!!! Task \" + taskNumber + \" does not exist.\");","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"GlendaChong"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"GlendaChong"},"content":"        String message \u003d ui.showTaskMarkedAsUndone(taskList.getTask(taskNumber));","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"GlendaChong"},"content":"        storage.save(taskList.getList(), ui);","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"GlendaChong"},"content":"        return message;","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"GlendaChong"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"GlendaChong":33}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GlendaChong"},"content":"package duke.exception;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"GlendaChong"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"GlendaChong"},"content":" * The DukeException class represents an exception that can be thrown by the Duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"GlendaChong"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"GlendaChong"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"GlendaChong"},"content":"     * Constructs a DukeException with a default error message.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"GlendaChong"},"content":"    public DukeException() {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"GlendaChong"},"content":"        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"GlendaChong"},"content":"     * Constructs a DukeException with a custom error message.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"GlendaChong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"GlendaChong"},"content":"     * @param message The custom error message explaining the exception.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"GlendaChong"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"GlendaChong"},"content":"        super(message);","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"GlendaChong"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"GlendaChong":23}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GlendaChong"},"content":"package duke.parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"GlendaChong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"GlendaChong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"GlendaChong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"GlendaChong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"GlendaChong"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"GlendaChong"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"GlendaChong"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"GlendaChong"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"GlendaChong"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"GlendaChong"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"GlendaChong"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"GlendaChong"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"GlendaChong"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"GlendaChong"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"GlendaChong"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"GlendaChong"},"content":"import duke.task.FixedDurationTask;","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"GlendaChong"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"GlendaChong"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"GlendaChong"},"content":" * The Parser class deals with interpreting the user inputs","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"GlendaChong"},"content":" * and generating corresponding commands if valid.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"GlendaChong"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"GlendaChong"},"content":"public class Parser {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"GlendaChong"},"content":"     * Returns a command based on the user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"GlendaChong"},"content":"     * If the command is invalid, an exception is thrown.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"GlendaChong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"GlendaChong"},"content":"     * @param userInput The input provided by the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"GlendaChong"},"content":"     * @return A Command object representing the user\u0027s intended action.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"GlendaChong"},"content":"     * @throws DukeException If there is an error in the user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"GlendaChong"},"content":"    public static Command parse(String userInput) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"GlendaChong"},"content":"        String[] splitCommand \u003d userInput.trim().split(\" \", 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"GlendaChong"},"content":"        switch (splitCommand[0]) {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"GlendaChong"},"content":"        case \"list\":","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"GlendaChong"},"content":"            return new ListCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"GlendaChong"},"content":"        case \"bye\":","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"GlendaChong"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"GlendaChong"},"content":"        case \"event\":","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"GlendaChong"},"content":"            return parseEventCommand(userInput, splitCommand[1]);","lastModifiedDate":"2023-09-19"},{"lineNumber":44,"author":{"gitId":"GlendaChong"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"GlendaChong"},"content":"            return parseDeadlineCommand(splitCommand[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"GlendaChong"},"content":"        case \"todo\":","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"GlendaChong"},"content":"            return parseTodoCommand(userInput, splitCommand);","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"GlendaChong"},"content":"        case \"fixedDuration\":","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"GlendaChong"},"content":"            return parseFixedDurationTask(splitCommand[1]);","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"GlendaChong"},"content":"        case \"mark\":","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"GlendaChong"},"content":"            return parseMarkCommand(userInput, splitCommand);","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"GlendaChong"},"content":"        case \"unmark\":","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"GlendaChong"},"content":"            return parseUnmarkCommand(userInput, splitCommand);","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"GlendaChong"},"content":"        case \"delete\":","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"GlendaChong"},"content":"            return parseDeleteCommand(userInput, splitCommand);","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"GlendaChong"},"content":"        case \"find\":","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"GlendaChong"},"content":"            return parseFindCommand(userInput, splitCommand[1]);","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"GlendaChong"},"content":"        default:","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"GlendaChong"},"content":"            throw new DukeException();","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"GlendaChong"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"GlendaChong"},"content":"     * Returns a command for deadline tasks for valid user inputs.","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"GlendaChong"},"content":"     * Else, exception is thrown.","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"GlendaChong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"GlendaChong"},"content":"     * @param stringCommand The deadline command provided by the user, excluding the task type.","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"GlendaChong"},"content":"     * @return A Command object with a deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"GlendaChong"},"content":"     * @throws DateTimeParseException If the date or time inputs are invalid.","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"GlendaChong"},"content":"     * @throws DukeException If the deadline command has an invalid input format.","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"GlendaChong"},"content":"    public static Command parseDeadlineCommand(String stringCommand)","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"GlendaChong"},"content":"            throws DateTimeParseException, DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"GlendaChong"},"content":"        // Add deadline task into task list","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"GlendaChong"},"content":"        String errorMessage \u003d \"OOPS!!! The format of a deadline task is \"","lastModifiedDate":"2023-09-04"},{"lineNumber":76,"author":{"gitId":"GlendaChong"},"content":"                + \"\\\"deadline TASK_DESCRIPTION /by DD/MM/YYYY 24H_TIME\\\"\";","lastModifiedDate":"2023-09-04"},{"lineNumber":77,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"GlendaChong"},"content":"        if (!stringCommand.matches(\".*/by \\\\d{1,2}/\\\\d{1,2}/\\\\d{4} \\\\d{4}\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"GlendaChong"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"GlendaChong"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"GlendaChong"},"content":"        String[] taskParts \u003d stringCommand.split(\" /by \");","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"GlendaChong"},"content":"        String[] dateAndTime \u003d taskParts[1].split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"GlendaChong"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"GlendaChong"},"content":"            LocalDate date \u003d parseDate(dateAndTime[0]);","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"GlendaChong"},"content":"            LocalTime time \u003d parseTime(dateAndTime[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"GlendaChong"},"content":"            return new AddCommand(new Deadline(taskParts[0], date, time));","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"GlendaChong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"GlendaChong"},"content":"            throw new DukeException(\"OOPS!!! Invalid date or time format in deadline task.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"GlendaChong"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"GlendaChong"},"content":"     * Parses a date string and returns a LocalDate object.","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"GlendaChong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"GlendaChong"},"content":"     * @param date The date of the deadline for the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"GlendaChong"},"content":"     * @return A LocalDate object of the deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"GlendaChong"},"content":"    public static LocalDate parseDate(String date) {","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"GlendaChong"},"content":"        assert date !\u003d null : \"Parsed date cannot be null\";","lastModifiedDate":"2023-09-12"},{"lineNumber":102,"author":{"gitId":"GlendaChong"},"content":"        return LocalDate.parse(date, DateTimeFormatter.ofPattern(\"d/MM/yyyy\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"GlendaChong"},"content":"     * Parses a time string and returns a LocalTime object.","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"GlendaChong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"GlendaChong"},"content":"     * @param time The time of the deadline for the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"GlendaChong"},"content":"     * @return A LocalTime object of the deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"GlendaChong"},"content":"    public static LocalTime parseTime(String time) {","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"GlendaChong"},"content":"        assert time !\u003d null : \"Parsed time cannot be null\";","lastModifiedDate":"2023-09-12"},{"lineNumber":113,"author":{"gitId":"GlendaChong"},"content":"        return LocalTime.parse(time, DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":116,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":117,"author":{"gitId":"GlendaChong"},"content":"     * Parses a user input string to create a FixedDurationTask object.","lastModifiedDate":"2023-09-13"},{"lineNumber":118,"author":{"gitId":"GlendaChong"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":119,"author":{"gitId":"GlendaChong"},"content":"     * @param stringCommand The user input string to parse.","lastModifiedDate":"2023-09-13"},{"lineNumber":120,"author":{"gitId":"GlendaChong"},"content":"     * @return A Command object representing the parsed FixedDurationTask.","lastModifiedDate":"2023-09-13"},{"lineNumber":121,"author":{"gitId":"GlendaChong"},"content":"     * @throws DukeException If there is an error in the user input or parsing.","lastModifiedDate":"2023-09-13"},{"lineNumber":122,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":123,"author":{"gitId":"GlendaChong"},"content":"    public static Command parseFixedDurationTask(String stringCommand) throws DukeException {","lastModifiedDate":"2023-09-13"},{"lineNumber":124,"author":{"gitId":"GlendaChong"},"content":"        if (!stringCommand.matches(\".*/needs .* .*\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":125,"author":{"gitId":"GlendaChong"},"content":"            throw new DukeException(\"OOPS!!! The format of an event task is \"","lastModifiedDate":"2023-09-13"},{"lineNumber":126,"author":{"gitId":"GlendaChong"},"content":"                    + \"\\\"fixedDuration TASK_DESCRIPTION /needs DURATION UNITS(minutes OR hours)\\\"\");","lastModifiedDate":"2023-09-13"},{"lineNumber":127,"author":{"gitId":"GlendaChong"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":128,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":129,"author":{"gitId":"GlendaChong"},"content":"        String[] taskParts \u003d stringCommand.split(\"/needs \");","lastModifiedDate":"2023-09-13"},{"lineNumber":130,"author":{"gitId":"GlendaChong"},"content":"        String[] durationWithUnits \u003d taskParts[1].split(\" \");","lastModifiedDate":"2023-09-13"},{"lineNumber":131,"author":{"gitId":"GlendaChong"},"content":"        int duration \u003d Integer.parseInt(durationWithUnits[0].trim());","lastModifiedDate":"2023-09-13"},{"lineNumber":132,"author":{"gitId":"GlendaChong"},"content":"        String units \u003d durationWithUnits[1].toLowerCase().trim();","lastModifiedDate":"2023-09-13"},{"lineNumber":133,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":134,"author":{"gitId":"GlendaChong"},"content":"        if (!units.equals(\"minutes\") \u0026\u0026 !units.equals(\"hours\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":135,"author":{"gitId":"GlendaChong"},"content":"            throw new DukeException(\"OOPS!!! Invalid units. Use \u0027minutes\u0027 or \u0027hours\u0027 only.\");","lastModifiedDate":"2023-09-13"},{"lineNumber":136,"author":{"gitId":"GlendaChong"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":137,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":138,"author":{"gitId":"GlendaChong"},"content":"        return new AddCommand(new FixedDurationTask(taskParts[0].trim(), duration, units));","lastModifiedDate":"2023-09-13"},{"lineNumber":139,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":140,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":141,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":142,"author":{"gitId":"GlendaChong"},"content":"     * Parses a user input string to create an Event object.","lastModifiedDate":"2023-09-19"},{"lineNumber":143,"author":{"gitId":"GlendaChong"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":144,"author":{"gitId":"GlendaChong"},"content":"     * @param userInput The user input string to parse.","lastModifiedDate":"2023-09-19"},{"lineNumber":145,"author":{"gitId":"GlendaChong"},"content":"     * @param splitCommand The user input string to parse.","lastModifiedDate":"2023-09-19"},{"lineNumber":146,"author":{"gitId":"GlendaChong"},"content":"     * @return A Command object representing the parsed Event.","lastModifiedDate":"2023-09-19"},{"lineNumber":147,"author":{"gitId":"GlendaChong"},"content":"     * @throws DukeException If there is an error in the user input or parsing.","lastModifiedDate":"2023-09-19"},{"lineNumber":148,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":149,"author":{"gitId":"GlendaChong"},"content":"    public static Command parseEventCommand(String userInput, String splitCommand) throws DukeException {","lastModifiedDate":"2023-09-19"},{"lineNumber":150,"author":{"gitId":"GlendaChong"},"content":"        // Add event task into task list","lastModifiedDate":"2023-09-19"},{"lineNumber":151,"author":{"gitId":"GlendaChong"},"content":"        if (!userInput.matches(\"event .*/from .* /to .*\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":152,"author":{"gitId":"GlendaChong"},"content":"            throw new DukeException(\"OOPS!!! The format of an event task is \"","lastModifiedDate":"2023-09-19"},{"lineNumber":153,"author":{"gitId":"GlendaChong"},"content":"                    + \"\\\"event TASK_DESCRIPTION /from START /to END\\\"\");","lastModifiedDate":"2023-09-19"},{"lineNumber":154,"author":{"gitId":"GlendaChong"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":155,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":156,"author":{"gitId":"GlendaChong"},"content":"        String description \u003d splitCommand.split(\"/from\")[0].trim();","lastModifiedDate":"2023-09-19"},{"lineNumber":157,"author":{"gitId":"GlendaChong"},"content":"        String[] dateAndTime \u003d splitCommand.split(\"/from\")[1].split(\"/to\");","lastModifiedDate":"2023-09-19"},{"lineNumber":158,"author":{"gitId":"GlendaChong"},"content":"        return new AddCommand(new Event(description, dateAndTime[0], dateAndTime[1]));","lastModifiedDate":"2023-09-19"},{"lineNumber":159,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":160,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":161,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":162,"author":{"gitId":"GlendaChong"},"content":"     * Parses a user input string to create a ToDo object.","lastModifiedDate":"2023-09-19"},{"lineNumber":163,"author":{"gitId":"GlendaChong"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":164,"author":{"gitId":"GlendaChong"},"content":"     * @param userInput The user input string to parse.","lastModifiedDate":"2023-09-19"},{"lineNumber":165,"author":{"gitId":"GlendaChong"},"content":"     * @param stringCommand The user input string to parse.","lastModifiedDate":"2023-09-19"},{"lineNumber":166,"author":{"gitId":"GlendaChong"},"content":"     * @return A Command object representing the parsed ToDo.","lastModifiedDate":"2023-09-19"},{"lineNumber":167,"author":{"gitId":"GlendaChong"},"content":"     * @throws DukeException If there is an error in the user input or parsing.","lastModifiedDate":"2023-09-19"},{"lineNumber":168,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":169,"author":{"gitId":"GlendaChong"},"content":"    public static Command parseTodoCommand(String userInput, String[] stringCommand) throws DukeException {","lastModifiedDate":"2023-09-19"},{"lineNumber":170,"author":{"gitId":"GlendaChong"},"content":"        // Add to-do task into task list","lastModifiedDate":"2023-09-19"},{"lineNumber":171,"author":{"gitId":"GlendaChong"},"content":"        if (!userInput.matches(\"todo .*\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":172,"author":{"gitId":"GlendaChong"},"content":"            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-09-19"},{"lineNumber":173,"author":{"gitId":"GlendaChong"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":174,"author":{"gitId":"GlendaChong"},"content":"        return new AddCommand(new ToDo(stringCommand[1]));","lastModifiedDate":"2023-09-19"},{"lineNumber":175,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":176,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":177,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":178,"author":{"gitId":"GlendaChong"},"content":"     * Parses a user input string to create a DeleteCommand object.","lastModifiedDate":"2023-09-19"},{"lineNumber":179,"author":{"gitId":"GlendaChong"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":180,"author":{"gitId":"GlendaChong"},"content":"     * @param userInput The user input string to parse.","lastModifiedDate":"2023-09-19"},{"lineNumber":181,"author":{"gitId":"GlendaChong"},"content":"     * @param splitCommand The task number to delete.","lastModifiedDate":"2023-09-19"},{"lineNumber":182,"author":{"gitId":"GlendaChong"},"content":"     * @return A DeleteCommand object representing the parsed delete command.","lastModifiedDate":"2023-09-19"},{"lineNumber":183,"author":{"gitId":"GlendaChong"},"content":"     * @throws DukeException If there is an error in the user input or parsing.","lastModifiedDate":"2023-09-19"},{"lineNumber":184,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":185,"author":{"gitId":"GlendaChong"},"content":"    public static Command parseDeleteCommand(String userInput, String[] splitCommand) throws DukeException {","lastModifiedDate":"2023-09-19"},{"lineNumber":186,"author":{"gitId":"GlendaChong"},"content":"        if (!userInput.matches(\".* \\\\d+\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":187,"author":{"gitId":"GlendaChong"},"content":"            String errorMessage \u003d \"OOPS!!! The format of delete command is \\\"delete TASK_NUMBER\\\". \"","lastModifiedDate":"2023-09-19"},{"lineNumber":188,"author":{"gitId":"GlendaChong"},"content":"                            + \"Task number must exist in the task list.\";","lastModifiedDate":"2023-09-19"},{"lineNumber":189,"author":{"gitId":"GlendaChong"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2023-09-19"},{"lineNumber":190,"author":{"gitId":"GlendaChong"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":191,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":192,"author":{"gitId":"GlendaChong"},"content":"        return new DeleteCommand(Integer.parseInt(splitCommand[1]));","lastModifiedDate":"2023-09-19"},{"lineNumber":193,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":194,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":195,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":196,"author":{"gitId":"GlendaChong"},"content":"     * Parses a user input string to create a MarkCommand object.","lastModifiedDate":"2023-09-19"},{"lineNumber":197,"author":{"gitId":"GlendaChong"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":198,"author":{"gitId":"GlendaChong"},"content":"     * @param userInput The user input string to parse.","lastModifiedDate":"2023-09-19"},{"lineNumber":199,"author":{"gitId":"GlendaChong"},"content":"     * @param splitCommand The task number to mark as done.","lastModifiedDate":"2023-09-19"},{"lineNumber":200,"author":{"gitId":"GlendaChong"},"content":"     * @return A MarkCommand object representing the parsed mark command.","lastModifiedDate":"2023-09-19"},{"lineNumber":201,"author":{"gitId":"GlendaChong"},"content":"     * @throws DukeException If there is an error in the user input or parsing.","lastModifiedDate":"2023-09-19"},{"lineNumber":202,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":203,"author":{"gitId":"GlendaChong"},"content":"    public static Command parseMarkCommand(String userInput, String[] splitCommand) throws DukeException {","lastModifiedDate":"2023-09-19"},{"lineNumber":204,"author":{"gitId":"GlendaChong"},"content":"        if (!userInput.matches(\".* \\\\d+\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":205,"author":{"gitId":"GlendaChong"},"content":"            String errorMessage \u003d \"OOPS!!! The format of mark command is \\\"mark TASK_NUMBER\\\". \"","lastModifiedDate":"2023-09-19"},{"lineNumber":206,"author":{"gitId":"GlendaChong"},"content":"                    + \"Task number must exist in the task list.\";","lastModifiedDate":"2023-09-19"},{"lineNumber":207,"author":{"gitId":"GlendaChong"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2023-09-19"},{"lineNumber":208,"author":{"gitId":"GlendaChong"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":209,"author":{"gitId":"GlendaChong"},"content":"        return new MarkCommand(Integer.parseInt(splitCommand[1]));","lastModifiedDate":"2023-09-19"},{"lineNumber":210,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":211,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":212,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":213,"author":{"gitId":"GlendaChong"},"content":"     * Parses a user input string to create an UnmarkCommand object.","lastModifiedDate":"2023-09-19"},{"lineNumber":214,"author":{"gitId":"GlendaChong"},"content":"     * @param userInput The user input string to parse.","lastModifiedDate":"2023-09-19"},{"lineNumber":215,"author":{"gitId":"GlendaChong"},"content":"     * @param splitCommand The task number to mark as undone.","lastModifiedDate":"2023-09-19"},{"lineNumber":216,"author":{"gitId":"GlendaChong"},"content":"     * @return An UnmarkCommand object representing the parsed unmark command.","lastModifiedDate":"2023-09-19"},{"lineNumber":217,"author":{"gitId":"GlendaChong"},"content":"     * @throws DukeException If there is an error in the user input or parsing.","lastModifiedDate":"2023-09-19"},{"lineNumber":218,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":219,"author":{"gitId":"GlendaChong"},"content":"    public static Command parseUnmarkCommand(String userInput, String[] splitCommand) throws DukeException {","lastModifiedDate":"2023-09-19"},{"lineNumber":220,"author":{"gitId":"GlendaChong"},"content":"        if (!userInput.matches(\".* \\\\d+\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":221,"author":{"gitId":"GlendaChong"},"content":"            String errorMessage \u003d \"OOPS!!! The format of unmark command is \\\"unmark TASK_NUMBER\\\". \"","lastModifiedDate":"2023-09-19"},{"lineNumber":222,"author":{"gitId":"GlendaChong"},"content":"                    + \"Task number must exist in the task list.\";","lastModifiedDate":"2023-09-19"},{"lineNumber":223,"author":{"gitId":"GlendaChong"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2023-09-19"},{"lineNumber":224,"author":{"gitId":"GlendaChong"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":225,"author":{"gitId":"GlendaChong"},"content":"        return new UnmarkCommand(Integer.parseInt(splitCommand[1]));","lastModifiedDate":"2023-09-19"},{"lineNumber":226,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":227,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":228,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":229,"author":{"gitId":"GlendaChong"},"content":"     * Parses a user input string to create a FindCommand object.","lastModifiedDate":"2023-09-19"},{"lineNumber":230,"author":{"gitId":"GlendaChong"},"content":"     * @param userInput The user input string to parse.","lastModifiedDate":"2023-09-19"},{"lineNumber":231,"author":{"gitId":"GlendaChong"},"content":"     * @param splitCommand The keyword to search for in the task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":232,"author":{"gitId":"GlendaChong"},"content":"     * @return A FindCommand object representing the parsed find command.","lastModifiedDate":"2023-09-19"},{"lineNumber":233,"author":{"gitId":"GlendaChong"},"content":"     * @throws DukeException If there is an error in the user input or parsing.","lastModifiedDate":"2023-09-19"},{"lineNumber":234,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":235,"author":{"gitId":"GlendaChong"},"content":"    public static Command parseFindCommand(String userInput, String splitCommand) throws DukeException {","lastModifiedDate":"2023-09-19"},{"lineNumber":236,"author":{"gitId":"GlendaChong"},"content":"        if (!userInput.matches(\"find .*\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":237,"author":{"gitId":"GlendaChong"},"content":"            throw new DukeException(\"OOPS!!! The description of a find command cannot be empty.\");","lastModifiedDate":"2023-09-19"},{"lineNumber":238,"author":{"gitId":"GlendaChong"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":239,"author":{"gitId":"GlendaChong"},"content":"        return new FindCommand(splitCommand);","lastModifiedDate":"2023-09-19"},{"lineNumber":240,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":241,"author":{"gitId":"GlendaChong"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"GlendaChong":241}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GlendaChong"},"content":"package duke.storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"GlendaChong"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"GlendaChong"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"GlendaChong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"GlendaChong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"GlendaChong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"GlendaChong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"GlendaChong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"GlendaChong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"GlendaChong"},"content":"import java.util.Locale;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"GlendaChong"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"GlendaChong"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"GlendaChong"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"GlendaChong"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"GlendaChong"},"content":"import duke.task.FixedDurationTask;","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"GlendaChong"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"GlendaChong"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"GlendaChong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"GlendaChong"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"GlendaChong"},"content":" * The Storage class deals with savings tasks in the file and","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"GlendaChong"},"content":" * loading tasks from the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"GlendaChong"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"GlendaChong"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"GlendaChong"},"content":"    private final String filePath;","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"GlendaChong"},"content":"     * Constructs a Storage object.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"GlendaChong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"GlendaChong"},"content":"     * @param filePath The filepath of the file containing the tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"GlendaChong"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"GlendaChong"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"GlendaChong"},"content":"     * Saves the tasks into the file in hard drive.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"GlendaChong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"GlendaChong"},"content":"     * @param tasks The current list of tasks to be saved into the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"GlendaChong"},"content":"     * @param ui The user interface of the Duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"GlendaChong"},"content":"    public void save(ArrayList\u003cTask\u003e tasks, Ui ui) {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"GlendaChong"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"GlendaChong"},"content":"        if (!f.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"GlendaChong"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"GlendaChong"},"content":"                // Create folder and file","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"GlendaChong"},"content":"                f.getParentFile().mkdirs();","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"GlendaChong"},"content":"                f.createNewFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"GlendaChong"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"GlendaChong"},"content":"                ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"GlendaChong"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"GlendaChong"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"GlendaChong"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"GlendaChong"},"content":"            // Write tasks into hard disk","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"GlendaChong"},"content":"            FileWriter fileWriter \u003d new FileWriter(filePath);","lastModifiedDate":"2023-09-13"},{"lineNumber":60,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"GlendaChong"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"GlendaChong"},"content":"                fileWriter.write(task.toFileFormat());","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"GlendaChong"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"GlendaChong"},"content":"            fileWriter.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"GlendaChong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"GlendaChong"},"content":"            ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"GlendaChong"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"GlendaChong"},"content":"     * Loads the tasks from the file.","lastModifiedDate":"2023-09-12"},{"lineNumber":72,"author":{"gitId":"GlendaChong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"GlendaChong"},"content":"     * @return The ArrayList of the tasks saved into the Duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"GlendaChong"},"content":"     * @throws DukeException If the task type in the file is invalid, or file is not found.","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"GlendaChong"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"GlendaChong"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"GlendaChong"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-09-13"},{"lineNumber":79,"author":{"gitId":"GlendaChong"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"GlendaChong"},"content":"            ArrayList\u003cTask\u003e tasks \u003d parseTasksFromFile(scanner);","lastModifiedDate":"2023-09-12"},{"lineNumber":81,"author":{"gitId":"GlendaChong"},"content":"            scanner.close();","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"GlendaChong"},"content":"            return tasks;","lastModifiedDate":"2023-09-12"},{"lineNumber":83,"author":{"gitId":"GlendaChong"},"content":"        } catch (DukeException | FileNotFoundException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":84,"author":{"gitId":"GlendaChong"},"content":"            throw new DukeException(\"File not found: \" + filePath);","lastModifiedDate":"2023-09-13"},{"lineNumber":85,"author":{"gitId":"GlendaChong"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":86,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":87,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":88,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":89,"author":{"gitId":"GlendaChong"},"content":"     * Parses tasks from a file using a provided Scanner and returns an ArrayList of tasks.","lastModifiedDate":"2023-09-12"},{"lineNumber":90,"author":{"gitId":"GlendaChong"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":91,"author":{"gitId":"GlendaChong"},"content":"     * @param scanner The Scanner object used to read task information from the file.","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"GlendaChong"},"content":"     * @return An ArrayList of tasks parsed from the file.","lastModifiedDate":"2023-09-12"},{"lineNumber":93,"author":{"gitId":"GlendaChong"},"content":"     * @throws DukeException If there are issues parsing the tasks or if the task type is invalid.","lastModifiedDate":"2023-09-12"},{"lineNumber":94,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":95,"author":{"gitId":"GlendaChong"},"content":"    public ArrayList\u003cTask\u003e parseTasksFromFile(Scanner scanner) throws DukeException {","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"GlendaChong"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"GlendaChong"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"GlendaChong"},"content":"            String fullTaskCommand \u003d scanner.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"GlendaChong"},"content":"            String[] taskParts \u003d fullTaskCommand.split(\"\\\\|\");","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"GlendaChong"},"content":"            String taskType \u003d taskParts[0].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"GlendaChong"},"content":"            int taskStatus \u003d Integer.parseInt(taskParts[1].trim());","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"GlendaChong"},"content":"            switch (taskType) {","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"GlendaChong"},"content":"            case \"T\":","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"GlendaChong"},"content":"                Task todo \u003d new ToDo(taskParts[2].trim());","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"GlendaChong"},"content":"                tasks.add(todo);","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"GlendaChong"},"content":"                todo.markStatusFromFile(taskStatus);","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"GlendaChong"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"GlendaChong"},"content":"            case \"D\":","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"GlendaChong"},"content":"                String datePart \u003d taskParts[3].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"GlendaChong"},"content":"                String timePart \u003d taskParts[4].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"GlendaChong"},"content":"                LocalDate date \u003d LocalDate.parse(datePart, DateTimeFormatter.ofPattern(\"d MMM yyyy\", Locale.US));","lastModifiedDate":"2023-09-12"},{"lineNumber":115,"author":{"gitId":"GlendaChong"},"content":"                LocalTime time \u003d LocalTime.parse(timePart, DateTimeFormatter.ofPattern(\"h.mma\", Locale.US));","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"GlendaChong"},"content":"                Task deadline \u003d new Deadline(taskParts[2].trim(), date, time);","lastModifiedDate":"2023-09-12"},{"lineNumber":118,"author":{"gitId":"GlendaChong"},"content":"                tasks.add(deadline);","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"GlendaChong"},"content":"                deadline.markStatusFromFile(taskStatus);","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"GlendaChong"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"GlendaChong"},"content":"            case \"E\":","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"GlendaChong"},"content":"                Task event \u003d new Event(taskParts[2].trim(),","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"GlendaChong"},"content":"                        taskParts[3].trim().replace(\"from\", \"\"),","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"GlendaChong"},"content":"                        taskParts[4].trim().replace(\"to\", \"\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"GlendaChong"},"content":"                tasks.add(event);","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"GlendaChong"},"content":"                event.markStatusFromFile(taskStatus);","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"GlendaChong"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"GlendaChong"},"content":"            case \"F\":","lastModifiedDate":"2023-09-13"},{"lineNumber":129,"author":{"gitId":"GlendaChong"},"content":"                String[] durationParts \u003d taskParts[3].replace(\"needs\", \"\").trim().split(\" \");","lastModifiedDate":"2023-09-13"},{"lineNumber":130,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":131,"author":{"gitId":"GlendaChong"},"content":"                Task fixedDuration \u003d new FixedDurationTask(taskParts[2].trim(),","lastModifiedDate":"2023-09-13"},{"lineNumber":132,"author":{"gitId":"GlendaChong"},"content":"                        Integer.parseInt(durationParts[0].trim()),","lastModifiedDate":"2023-09-13"},{"lineNumber":133,"author":{"gitId":"GlendaChong"},"content":"                        durationParts[1].trim());","lastModifiedDate":"2023-09-13"},{"lineNumber":134,"author":{"gitId":"GlendaChong"},"content":"                tasks.add(fixedDuration);","lastModifiedDate":"2023-09-13"},{"lineNumber":135,"author":{"gitId":"GlendaChong"},"content":"                fixedDuration.markStatusFromFile(taskStatus);","lastModifiedDate":"2023-09-13"},{"lineNumber":136,"author":{"gitId":"GlendaChong"},"content":"                break;","lastModifiedDate":"2023-09-13"},{"lineNumber":137,"author":{"gitId":"GlendaChong"},"content":"            default:","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"GlendaChong"},"content":"                throw new DukeException(\"Invalid task type in file: \" + taskType);","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"GlendaChong"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"GlendaChong"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"GlendaChong"},"content":"        return tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"GlendaChong"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"GlendaChong":143}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GlendaChong"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"GlendaChong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"GlendaChong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"GlendaChong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"GlendaChong"},"content":"import java.util.Locale;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"GlendaChong"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"GlendaChong"},"content":" * The Deadline class represents a task with a description,","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"GlendaChong"},"content":" * completion status, and a deadline date and time.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"GlendaChong"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"GlendaChong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"GlendaChong"},"content":"    protected LocalDate date;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"GlendaChong"},"content":"    protected LocalTime time;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"GlendaChong"},"content":"     * Constructs a Deadline object.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"GlendaChong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"GlendaChong"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"GlendaChong"},"content":"     * @param date LocalDate representation of the date of deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"GlendaChong"},"content":"     * @param time LocalTime representation of the time of deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"GlendaChong"},"content":"    public Deadline(String description, LocalDate date, LocalTime time) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"GlendaChong"},"content":"        super(description);","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"GlendaChong"},"content":"        assert date !\u003d null : \"Date cannot be null\";","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"GlendaChong"},"content":"        assert time !\u003d null : \"Time cannot be null\";","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"GlendaChong"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"GlendaChong"},"content":"        this.time \u003d time;","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"GlendaChong"},"content":"     * Returns a formatted string representation of the deadline date.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"GlendaChong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"GlendaChong"},"content":"     * @return A string representing the deadline date in the format \"d MMM yyyy\".","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"GlendaChong"},"content":"    public String reformatDate() {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"GlendaChong"},"content":"        return this.date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"GlendaChong"},"content":"     * Returns a formatted string representation of the deadline time.","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"GlendaChong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"GlendaChong"},"content":"     * @return A string representing the deadline time in the format \"h.mma\".","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"GlendaChong"},"content":"    public String reformatTime() {","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"GlendaChong"},"content":"        return this.time.format(DateTimeFormatter.ofPattern(\"h.mma\", Locale.US));","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"GlendaChong"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"GlendaChong"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"GlendaChong"},"content":"        return \"[D]\" + super.toString() + \" (by \" + reformatDate() + \" \" + reformatTime() + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"GlendaChong"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"GlendaChong"},"content":"    public String toFileFormat() {","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"GlendaChong"},"content":"        return \"D\" + super.toFileFormat() + \" | \" + reformatDate() + \" | \" + reformatTime() + \"\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"GlendaChong"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"GlendaChong":60}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GlendaChong"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"GlendaChong"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"GlendaChong"},"content":" * The Event class represents a task with a description,","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"GlendaChong"},"content":" * completion status, and a start and end period.","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"GlendaChong"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"GlendaChong"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"GlendaChong"},"content":"    protected String from;","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"GlendaChong"},"content":"    protected String to;","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"GlendaChong"},"content":"     * Constructs an Event object.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"GlendaChong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"GlendaChong"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"GlendaChong"},"content":"     * @param from Start period of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"GlendaChong"},"content":"     * @param to End period of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"GlendaChong"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"GlendaChong"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"GlendaChong"},"content":"        assert from !\u003d null : \"From cannot be null\";","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"GlendaChong"},"content":"        assert to !\u003d null : \"To cannot be null\";","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"GlendaChong"},"content":"        this.from \u003d from.trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"GlendaChong"},"content":"        this.to \u003d to.trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"GlendaChong"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"GlendaChong"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"GlendaChong"},"content":"        return \"[E]\" + super.toString().trim() + \" (from \" + this.from + \" to \" + this.to + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"GlendaChong"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"GlendaChong"},"content":"    public String toFileFormat() {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"GlendaChong"},"content":"        return \"E\" + super.toFileFormat() + \" | from \" + this.from + \" | to \" + this.to + \"\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"GlendaChong"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"GlendaChong":37}},{"path":"src/main/java/duke/task/FixedDurationTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GlendaChong"},"content":"package duke.task;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"GlendaChong"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"GlendaChong"},"content":" * FixedDurationTask class represents a task that takes a fixed amount of time","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"GlendaChong"},"content":" * but does not have a fixed start/end time.","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"GlendaChong"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"GlendaChong"},"content":"public class FixedDurationTask extends Task {","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"GlendaChong"},"content":"    protected int duration;","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"GlendaChong"},"content":"    protected String units;","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"GlendaChong"},"content":"     * Constructs a FixedDurationTask object.","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"GlendaChong"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"GlendaChong"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"GlendaChong"},"content":"     * @param duration Duration needed for the task.","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"GlendaChong"},"content":"     * @param units Units used for the task.","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"GlendaChong"},"content":"    public FixedDurationTask(String description, int duration, String units) {","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"GlendaChong"},"content":"        super(description);","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"GlendaChong"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"GlendaChong"},"content":"        this.units \u003d units;","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"GlendaChong"},"content":"    @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"GlendaChong"},"content":"    public String toString() {","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"GlendaChong"},"content":"        return \"[F]\" + super.toString() + \" (needs \" + duration + \" \" + units + \")\";","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"GlendaChong"},"content":"    @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"GlendaChong"},"content":"    public String toFileFormat() {","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"GlendaChong"},"content":"        return \"F\" + super.toFileFormat() + \" | needs \" + duration + \" \" + units + \"\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"GlendaChong"},"content":"}","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"GlendaChong":33}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GlendaChong"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"GlendaChong"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"GlendaChong"},"content":" * The Task class represents a task with a description and completion status.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"GlendaChong"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"GlendaChong"},"content":"public class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"GlendaChong"},"content":"    protected String description;","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"GlendaChong"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"GlendaChong"},"content":"     * Constructs a Task object.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"GlendaChong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"GlendaChong"},"content":"     * @param d Description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"GlendaChong"},"content":"    public Task(String d) {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"GlendaChong"},"content":"        assert d !\u003d null : \"Description cannot be empty\";","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"GlendaChong"},"content":"        description \u003d d;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"GlendaChong"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"GlendaChong"},"content":"     * Returns the icon representing the completion status of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"GlendaChong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"GlendaChong"},"content":"     * @return \"X\" if the task is done, \" \" if the task is not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"GlendaChong"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"GlendaChong"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"GlendaChong"},"content":"     * Marks the task as done by setting its completion status to true.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"GlendaChong"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"GlendaChong"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"GlendaChong"},"content":"     * Marks the task as undone by setting its completion status to false.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"GlendaChong"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"GlendaChong"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"GlendaChong"},"content":"     * Marks the task status based on status obtained from file.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"GlendaChong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"GlendaChong"},"content":"     * @param status The status of the task saved in the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"GlendaChong"},"content":"    public void markStatusFromFile(int status) {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"GlendaChong"},"content":"        if (status \u003d\u003d 0) {","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"GlendaChong"},"content":"            markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"GlendaChong"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"GlendaChong"},"content":"            markAsUndone();","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"GlendaChong"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"GlendaChong"},"content":"     * Returns a string representation of the task, containing its","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"GlendaChong"},"content":"     * completion status and description.","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"GlendaChong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"GlendaChong"},"content":"     * @return String representation of task status and description.","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"GlendaChong"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":64,"author":{"gitId":"GlendaChong"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":65,"author":{"gitId":"GlendaChong"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"GlendaChong"},"content":"     * Returns a string representation of the task when saved in a hard disk file.","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"GlendaChong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"GlendaChong"},"content":"     * @return String representation of task status and description for hard disk file.","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"GlendaChong"},"content":"    public String toFileFormat() {","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"GlendaChong"},"content":"        if (isDone) {","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"GlendaChong"},"content":"            return \" | 0 | \" + description;","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"GlendaChong"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"GlendaChong"},"content":"            return \" | 1 | \" + description;","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"GlendaChong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"GlendaChong"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"GlendaChong":80}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GlendaChong"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"GlendaChong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"GlendaChong"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"GlendaChong"},"content":" * The TaskList class contains the task list and all the operations","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"GlendaChong"},"content":" * performed on the tasks in the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"GlendaChong"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"GlendaChong"},"content":"public class TaskList {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"GlendaChong"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"GlendaChong"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"GlendaChong"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"GlendaChong"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"GlendaChong"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"GlendaChong"},"content":"     * Adds the task to the current task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"GlendaChong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"GlendaChong"},"content":"     * @param task Task to be added into task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"GlendaChong"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"GlendaChong"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"GlendaChong"},"content":"     * Removes the task from the current task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"GlendaChong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"GlendaChong"},"content":"     * @param taskNumber Task Number corresponding to the task list to be removed.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"GlendaChong"},"content":"    public void remove(int taskNumber) {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"GlendaChong"},"content":"        tasks.remove(taskNumber - 1);","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"GlendaChong"},"content":"     * Returns the number of tasks in current task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"GlendaChong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"GlendaChong"},"content":"     * @return number of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"GlendaChong"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"GlendaChong"},"content":"        return tasks.size();","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"GlendaChong"},"content":"    public Task getTask(int taskNumber) {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"GlendaChong"},"content":"        return tasks.get(taskNumber - 1);","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"GlendaChong"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"GlendaChong"},"content":"        return tasks;","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"GlendaChong"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"GlendaChong":54}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GlendaChong"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"GlendaChong"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"GlendaChong"},"content":" * The ToDo class represents a task with a description.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"GlendaChong"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"GlendaChong"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"GlendaChong"},"content":"     * Constructs a ToDo object.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"GlendaChong"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"GlendaChong"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"GlendaChong"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"GlendaChong"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"GlendaChong"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"GlendaChong"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"GlendaChong"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"GlendaChong"},"content":"    public String toFileFormat() {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"GlendaChong"},"content":"        return \"T\" + super.toFileFormat() + \"\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"GlendaChong"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"GlendaChong":25}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GlendaChong"},"content":"package duke.ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"GlendaChong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"GlendaChong"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"GlendaChong"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"GlendaChong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"GlendaChong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"GlendaChong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"GlendaChong"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"GlendaChong"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"GlendaChong"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"GlendaChong"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"GlendaChong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"GlendaChong"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"GlendaChong"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"GlendaChong"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"GlendaChong"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"GlendaChong"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"GlendaChong"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"GlendaChong"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"GlendaChong"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"GlendaChong"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"GlendaChong"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"GlendaChong"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"GlendaChong"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"GlendaChong"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"GlendaChong"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"GlendaChong"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"GlendaChong"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"GlendaChong"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"GlendaChong"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"GlendaChong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"GlendaChong"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"GlendaChong"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"GlendaChong"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"GlendaChong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"GlendaChong"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"GlendaChong"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"GlendaChong"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"GlendaChong"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"GlendaChong"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"GlendaChong"},"content":"    private void flip() {","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"GlendaChong"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"GlendaChong"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"GlendaChong"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"GlendaChong"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"GlendaChong"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"GlendaChong"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-19"},{"lineNumber":59,"author":{"gitId":"GlendaChong"},"content":"        db.dialog.setBackground(","lastModifiedDate":"2023-09-19"},{"lineNumber":60,"author":{"gitId":"GlendaChong"},"content":"                new Background(new BackgroundFill(Color.web(\"#0474ea\"), new CornerRadii(10.0), new Insets(0))));","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"GlendaChong"},"content":"        db.dialog.setTextFill(Color.WHITE);","lastModifiedDate":"2023-09-19"},{"lineNumber":62,"author":{"gitId":"GlendaChong"},"content":"        return db;","lastModifiedDate":"2023-09-19"},{"lineNumber":63,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"GlendaChong"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"GlendaChong"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"GlendaChong"},"content":"        db.dialog.setBackground(","lastModifiedDate":"2023-09-19"},{"lineNumber":68,"author":{"gitId":"GlendaChong"},"content":"                new Background(new BackgroundFill(Color.WHITE, new CornerRadii(10.0), new Insets(0))));","lastModifiedDate":"2023-09-19"},{"lineNumber":69,"author":{"gitId":"GlendaChong"},"content":"        db.flip();","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"GlendaChong"},"content":"        return db;","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"GlendaChong"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"GlendaChong":72}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GlendaChong"},"content":"package duke.ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"GlendaChong"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"GlendaChong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"GlendaChong"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"GlendaChong"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"GlendaChong"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"GlendaChong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"GlendaChong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"GlendaChong"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"GlendaChong"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"GlendaChong"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"GlendaChong"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"GlendaChong"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"GlendaChong"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"GlendaChong"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"GlendaChong"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"GlendaChong"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"GlendaChong"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"GlendaChong"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"GlendaChong"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"GlendaChong"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"GlendaChong"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"GlendaChong"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"GlendaChong"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"GlendaChong"},"content":"     * Initializes the main chat window and ensures that it always scrolls down to show the latest messages.","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"GlendaChong"},"content":"     * This method sets up a listener on the height property of the dialog container to automatically scroll","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"GlendaChong"},"content":"     * to the end whenever new content is added.","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"GlendaChong"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"GlendaChong"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"GlendaChong"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"GlendaChong"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"GlendaChong"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"GlendaChong"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"GlendaChong"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(duke.getGreetings(), dukeImage));","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"GlendaChong"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"GlendaChong"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"GlendaChong"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"GlendaChong"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"GlendaChong"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"GlendaChong"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"GlendaChong"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"GlendaChong"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"GlendaChong"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"GlendaChong"},"content":"        );","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"GlendaChong"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"GlendaChong"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"GlendaChong":60}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GlendaChong"},"content":"package duke.ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"GlendaChong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"GlendaChong"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"GlendaChong"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"GlendaChong"},"content":" * The Ui class handles interactions with the user by displaying messages and receiving input.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"GlendaChong"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"GlendaChong"},"content":"public class Ui {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"GlendaChong"},"content":"     * Displays a welcome message when the Duke application starts.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"GlendaChong"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"GlendaChong"},"content":"     * @return The welcome message as a string.","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"GlendaChong"},"content":"    public String showWelcomeMessage() {","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"GlendaChong"},"content":"        return \"Hello! I\u0027m Glendasaurus!\\nWhat can I do for you?\\n\";","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"GlendaChong"},"content":"     * Displays a goodbye message when the Duke application ends.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"GlendaChong"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"GlendaChong"},"content":"     * @return The goodbye message as a string.","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"GlendaChong"},"content":"    public String showGoodbyeMessage() {","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"GlendaChong"},"content":"        return \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"GlendaChong"},"content":"     * Displays the task added and the current total number of tasks in the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"GlendaChong"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"GlendaChong"},"content":"     * @param task The task that was added.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"GlendaChong"},"content":"     * @param numberOfTasks The number of tasks in the list currently.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"GlendaChong"},"content":"     * @return The message displaying the added task and the total number of tasks as a string.","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"GlendaChong"},"content":"    public String showAddedTask(Task task, int numberOfTasks) {","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"GlendaChong"},"content":"        return \"Got it. I\u0027ve added this task to the list:\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"GlendaChong"},"content":"                + task.toString()","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"GlendaChong"},"content":"                + \"\\nNow you have \"","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"GlendaChong"},"content":"                + numberOfTasks","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"GlendaChong"},"content":"                + \" task(s) in the list.\\n\";","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"GlendaChong"},"content":"     * Displays all the tasks in the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"GlendaChong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"GlendaChong"},"content":"     * @param tasks The list of tasks to be displayed.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"GlendaChong"},"content":"     * @return The message displaying all tasks as a string.","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"GlendaChong"},"content":"    public String showAllTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"GlendaChong"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"GlendaChong"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"GlendaChong"},"content":"            // Case where there are no tasks to be displayed","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"GlendaChong"},"content":"            message.append(\"No tasks added. \\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"GlendaChong"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"GlendaChong"},"content":"        message.append(\"Here are the task(s) in your list:\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"GlendaChong"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"GlendaChong"},"content":"            message.append(tasks.indexOf(task) + 1).append(\". \").append(task).append(\"\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"GlendaChong"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"GlendaChong"},"content":"        return message.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"GlendaChong"},"content":"     * Displays a message indicating the task was marked as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"GlendaChong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"GlendaChong"},"content":"     * @param task The task that was marked as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"GlendaChong"},"content":"     * @return The message indicating the completed task as a string.","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"GlendaChong"},"content":"    public String showTaskMarkedAsDone(Task task) {","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"GlendaChong"},"content":"        task.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"GlendaChong"},"content":"        return \"Great! I\u0027ve completed this task!\\n\" + task.toString() + \"\\n\";","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"GlendaChong"},"content":"     * Displays a message indicating the task was marked as undone.","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"GlendaChong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"GlendaChong"},"content":"     * @param task The task that was marked undone.","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"GlendaChong"},"content":"     * @return The message indicating the task was marked as undone as a string.","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"GlendaChong"},"content":"    public String showTaskMarkedAsUndone(Task task) {","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"GlendaChong"},"content":"        task.markAsUndone();","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"GlendaChong"},"content":"        return \"Okay, I have not yet completed this task:\\n\" + task.toString() + \"\\n\";","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"GlendaChong"},"content":"     * Displays a message indicating the tasks that were deleted, and the number of tasks left in the task list.","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"GlendaChong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"GlendaChong"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"GlendaChong"},"content":"     * @param numberOfTasks The number of tasks left in the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"GlendaChong"},"content":"     * @return The message indicating the deleted task and the remaining number of tasks as a string.","lastModifiedDate":"2023-09-05"},{"lineNumber":95,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"GlendaChong"},"content":"    public String showDeletedTask(Task task, int numberOfTasks) {","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"GlendaChong"},"content":"        return \"Okay, I\u0027ve removed this task:\\n\" + task.toString()","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"GlendaChong"},"content":"                + \"\\nNow you have \" + numberOfTasks + \" task(s) in the list.\\n\";","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"GlendaChong"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"GlendaChong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"GlendaChong"},"content":"     * @param errorMessage The error message shown to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"GlendaChong"},"content":"     * @return The error message as a string.","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"GlendaChong"},"content":"    public String showErrorMessage(String errorMessage) {","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"GlendaChong"},"content":"        return errorMessage + \"\\n\";","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"GlendaChong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"GlendaChong"},"content":"     * Displays the list of tasks matching the keyword search.","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"GlendaChong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"GlendaChong"},"content":"     * @param tasks Tasks associated with the keyword search.","lastModifiedDate":"2023-09-05"},{"lineNumber":115,"author":{"gitId":"GlendaChong"},"content":"     * @return The message displaying matching tasks as a string.","lastModifiedDate":"2023-09-05"},{"lineNumber":116,"author":{"gitId":"GlendaChong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"GlendaChong"},"content":"    public String showMatchingTasksToKeyword(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-05"},{"lineNumber":118,"author":{"gitId":"GlendaChong"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2023-09-05"},{"lineNumber":119,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"GlendaChong"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"GlendaChong"},"content":"            // Case where there are no matching tasks to be displayed","lastModifiedDate":"2023-09-05"},{"lineNumber":122,"author":{"gitId":"GlendaChong"},"content":"            message.append(\"No matching tasks in the list. \\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":123,"author":{"gitId":"GlendaChong"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":124,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"GlendaChong"},"content":"        message.append(\"Here are the matching task(s) in your list:\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":126,"author":{"gitId":"GlendaChong"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"GlendaChong"},"content":"            message.append(tasks.indexOf(task) + 1).append(\". \").append(task.toString()).append(\"\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":128,"author":{"gitId":"GlendaChong"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":130,"author":{"gitId":"GlendaChong"},"content":"        return message.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":131,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"GlendaChong"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"GlendaChong":132}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"GlendaChong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"GlendaChong"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"GlendaChong"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"GlendaChong"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"GlendaChong"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"GlendaChong"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"GlendaChong"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"GlendaChong"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"GlendaChong"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"GlendaChong"},"content":"        \u003cLabel fx:id\u003d\"dialog\"","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"GlendaChong"},"content":"               text\u003d\"Label\"","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"GlendaChong"},"content":"               wrapText\u003d\"true\"","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"GlendaChong"},"content":"               style\u003d\"","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"GlendaChong"},"content":"                    -fx-padding: 8;","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"GlendaChong"},"content":"                    -fx-border-radius: 8;","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"GlendaChong"},"content":"                    -fx-border-color: black \"\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"GlendaChong"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":20,"author":{"gitId":"GlendaChong"},"content":"                \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"GlendaChong"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"GlendaChong"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"GlendaChong"},"content":"                \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"GlendaChong"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"GlendaChong"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"GlendaChong"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"60.0\" fitWidth\u003d\"60.0\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"GlendaChong"},"content":"            \u003cclip \u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"GlendaChong"},"content":"                \u003cCircle radius\u003d\"30.0\" centerX\u003d\"30.0\" centerY\u003d\"30.0\" /\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":29,"author":{"gitId":"GlendaChong"},"content":"            \u003c/clip\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"GlendaChong"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"GlendaChong"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"GlendaChong"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"GlendaChong"},"content":"        \u003cInsets bottom\u003d\"10.0\" left\u003d\"7.0\" right\u003d\"7.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"GlendaChong"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"GlendaChong"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"GlendaChong":36}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"GlendaChong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"GlendaChong"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"GlendaChong"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"GlendaChong"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"GlendaChong"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"GlendaChong"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"GlendaChong"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"GlendaChong"},"content":"            prefWidth\u003d\"400.0\"  xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"GlendaChong"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"GlendaChong"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"GlendaChong"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\"","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"GlendaChong"},"content":"                   prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"GlendaChong"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"GlendaChong"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"GlendaChong"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\"","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"GlendaChong"},"content":"                    prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" \u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"GlendaChong"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"GlendaChong"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"GlendaChong"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"GlendaChong"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"GlendaChong"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"GlendaChong"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"GlendaChong":24}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GlendaChong"},"content":"package duke.parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"GlendaChong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"GlendaChong"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"GlendaChong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"GlendaChong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"GlendaChong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"GlendaChong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"GlendaChong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"GlendaChong"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"GlendaChong"},"content":"import duke.command.Command;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"GlendaChong"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"GlendaChong"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"GlendaChong"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"GlendaChong"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"GlendaChong"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"GlendaChong"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"GlendaChong"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"GlendaChong"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"GlendaChong"},"content":"    public void parseListCommand_validInput_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"GlendaChong"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"GlendaChong"},"content":"            Command command \u003d Parser.parse(\"list\");","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"GlendaChong"},"content":"            assertTrue(command instanceof ListCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"GlendaChong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"GlendaChong"},"content":"            assertEquals(\"Exception should not be thrown\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"GlendaChong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"GlendaChong"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"GlendaChong"},"content":"    public void parseByeCommand_validInput_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"GlendaChong"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"GlendaChong"},"content":"            Command command \u003d Parser.parse(\"bye\");","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"GlendaChong"},"content":"            assertTrue(command instanceof ExitCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"GlendaChong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"GlendaChong"},"content":"            assertEquals(\"Exception should not be thrown\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"GlendaChong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"GlendaChong"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"GlendaChong"},"content":"    public void parseEventCommand_validInput_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"GlendaChong"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"GlendaChong"},"content":"            Command command \u003d Parser.parse(\"event Orbital Splashdown /from 01/01/2023 1800 /to 01/01/2023 2000\");","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"GlendaChong"},"content":"            assertTrue(command instanceof AddCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"GlendaChong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"GlendaChong"},"content":"            assertEquals(\"Exception should not be thrown\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"GlendaChong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"GlendaChong"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"GlendaChong"},"content":"    public void parseEventCommand_invalidInput_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"GlendaChong"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"GlendaChong"},"content":"            Command command \u003d Parser.parse(\"event Orbital Splashdown /to 01/01/2023 2000\");","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"GlendaChong"},"content":"            assertTrue(command instanceof AddCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"GlendaChong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"GlendaChong"},"content":"            assertEquals(\"OOPS!!! The format of an event task is \"","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"GlendaChong"},"content":"                    + \"\\\"event TASK_DESCRIPTION /from START /to END\\\"\", e.getMessage());","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"GlendaChong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"GlendaChong"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"GlendaChong"},"content":"    public void parseDeadlineCommand_validInput_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"GlendaChong"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"GlendaChong"},"content":"            Command command1 \u003d Parser.parse(\"deadline Do CS2103T /by 01/01/2023 1800\");","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"GlendaChong"},"content":"            Command command2 \u003d Parser.parse(\"deadline Do CS2103T /by 1/01/2023 1800\");","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"GlendaChong"},"content":"            assertTrue(command1 instanceof AddCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"GlendaChong"},"content":"            assertTrue(command2 instanceof AddCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"GlendaChong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"GlendaChong"},"content":"            assertEquals(\"Exception should not be thrown\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"GlendaChong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"GlendaChong"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"GlendaChong"},"content":"    public void parseDeadlineCommand_invalidInputFormat_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"GlendaChong"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"GlendaChong"},"content":"            Command command \u003d Parser.parseDeadlineCommand(\"deadline Do CS2103T 1800\");","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"GlendaChong"},"content":"            assertTrue(command instanceof AddCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"GlendaChong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"GlendaChong"},"content":"            assertEquals(\"OOPS!!! The format of a deadline task is \"","lastModifiedDate":"2023-09-04"},{"lineNumber":85,"author":{"gitId":"GlendaChong"},"content":"                    + \"\\\"deadline TASK_DESCRIPTION /by DD/MM/YYYY 24H_TIME\\\"\", e.getMessage());","lastModifiedDate":"2023-09-04"},{"lineNumber":86,"author":{"gitId":"GlendaChong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"GlendaChong"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"GlendaChong"},"content":"    public void parseDeadlineCommand_invalidDateInput_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"GlendaChong"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"GlendaChong"},"content":"            Command command \u003d Parser.parseDeadlineCommand(\"deadline Do CS2103T /by 25/25/2023 1800\");","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"GlendaChong"},"content":"            assertTrue(command instanceof AddCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"GlendaChong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"GlendaChong"},"content":"            assertEquals(\"OOPS!!! Invalid date or time format in deadline task.\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"GlendaChong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"GlendaChong"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"GlendaChong"},"content":"    public void parseDeadlineCommand_invalidTimeInput_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"GlendaChong"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"GlendaChong"},"content":"            Command command \u003d Parser.parseDeadlineCommand(\"deadline Do CS2103T /by 12/12/2023 2500\");","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"GlendaChong"},"content":"            assertTrue(command instanceof AddCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"GlendaChong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"GlendaChong"},"content":"            assertEquals(\"OOPS!!! Invalid date or time format in deadline task.\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"GlendaChong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"GlendaChong"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"GlendaChong"},"content":"    public void parseToDoCommand_validInput_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"GlendaChong"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"GlendaChong"},"content":"            Command command \u003d Parser.parse(\"todo read book\");","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"GlendaChong"},"content":"            assertTrue(command instanceof AddCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"GlendaChong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"GlendaChong"},"content":"            assertEquals(\"Exception should not be thrown\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"GlendaChong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"GlendaChong"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"GlendaChong"},"content":"    public void parseToDoCommand_invalidInput_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"GlendaChong"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"GlendaChong"},"content":"            Command command \u003d Parser.parse(\"todo\");","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"GlendaChong"},"content":"            assertTrue(command instanceof AddCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"GlendaChong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"GlendaChong"},"content":"            assertEquals(\"OOPS!!! The description of a todo cannot be empty.\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"GlendaChong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"GlendaChong"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"GlendaChong"},"content":"    public void parseMarkCommand_validInput_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"GlendaChong"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"GlendaChong"},"content":"            Command command \u003d Parser.parse(\"mark 1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"GlendaChong"},"content":"            assertTrue(command instanceof MarkCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"GlendaChong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"GlendaChong"},"content":"            assertEquals(\"Exception should not be thrown\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"GlendaChong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"GlendaChong"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"GlendaChong"},"content":"    public void parseMarkCommand_invalidInputFormat_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"GlendaChong"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"GlendaChong"},"content":"            Command command \u003d Parser.parse(\"mark\");","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"GlendaChong"},"content":"            assertTrue(command instanceof MarkCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"GlendaChong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"GlendaChong"},"content":"            assertEquals(\"OOPS!!! The format of mark command is \\\"mark TASK_NUMBER\\\". \"","lastModifiedDate":"2023-09-19"},{"lineNumber":146,"author":{"gitId":"GlendaChong"},"content":"                    + \"Task number must exist in the task list.\", e.getMessage());","lastModifiedDate":"2023-09-04"},{"lineNumber":147,"author":{"gitId":"GlendaChong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"GlendaChong"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"GlendaChong"},"content":"    public void parseUnmarkCommand_validInput_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"GlendaChong"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"GlendaChong"},"content":"            Command command \u003d Parser.parse(\"unmark 1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"GlendaChong"},"content":"            assertTrue(command instanceof UnmarkCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"GlendaChong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"GlendaChong"},"content":"            assertEquals(\"Exception should not be thrown\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"GlendaChong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"GlendaChong"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"GlendaChong"},"content":"    public void parseUnmarkCommand_invalidInputFormat_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"GlendaChong"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"GlendaChong"},"content":"            Command command \u003d Parser.parse(\"unmark\");","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"GlendaChong"},"content":"            assertTrue(command instanceof UnmarkCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":165,"author":{"gitId":"GlendaChong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":166,"author":{"gitId":"GlendaChong"},"content":"            assertEquals(\"OOPS!!! The format of unmark command is \\\"unmark TASK_NUMBER\\\". \"","lastModifiedDate":"2023-09-19"},{"lineNumber":167,"author":{"gitId":"GlendaChong"},"content":"                    + \"Task number must exist in the task list.\", e.getMessage());","lastModifiedDate":"2023-09-04"},{"lineNumber":168,"author":{"gitId":"GlendaChong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":170,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":171,"author":{"gitId":"GlendaChong"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"GlendaChong"},"content":"    public void parseDeleteCommand_validInput_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":173,"author":{"gitId":"GlendaChong"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":174,"author":{"gitId":"GlendaChong"},"content":"            Command command \u003d Parser.parse(\"delete 1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":175,"author":{"gitId":"GlendaChong"},"content":"            assertTrue(command instanceof DeleteCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":176,"author":{"gitId":"GlendaChong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":177,"author":{"gitId":"GlendaChong"},"content":"            assertEquals(\"Exception should not be thrown\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":178,"author":{"gitId":"GlendaChong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":179,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":180,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":181,"author":{"gitId":"GlendaChong"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":182,"author":{"gitId":"GlendaChong"},"content":"    public void parseDeleteCommand_invalidInputFormat_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":183,"author":{"gitId":"GlendaChong"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":184,"author":{"gitId":"GlendaChong"},"content":"            Command command \u003d Parser.parse(\"delete 1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":185,"author":{"gitId":"GlendaChong"},"content":"            assertTrue(command instanceof DeleteCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":186,"author":{"gitId":"GlendaChong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":187,"author":{"gitId":"GlendaChong"},"content":"            assertEquals(\"OOPS!!! The format of delete command is \\\"delete TASK_NUMBER\\\". \"","lastModifiedDate":"2023-09-19"},{"lineNumber":188,"author":{"gitId":"GlendaChong"},"content":"                    + \"Task number must exist in the task list.\", e.getMessage());","lastModifiedDate":"2023-09-04"},{"lineNumber":189,"author":{"gitId":"GlendaChong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":190,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":191,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":192,"author":{"gitId":"GlendaChong"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":193,"author":{"gitId":"GlendaChong"},"content":"    public void testParseDate_validInput_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":194,"author":{"gitId":"GlendaChong"},"content":"        LocalDate result \u003d Parser.parseDate(\"31/08/2023\");","lastModifiedDate":"2023-08-31"},{"lineNumber":195,"author":{"gitId":"GlendaChong"},"content":"        assertEquals(LocalDate.of(2023, 8, 31), result);","lastModifiedDate":"2023-08-31"},{"lineNumber":196,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":197,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":198,"author":{"gitId":"GlendaChong"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":199,"author":{"gitId":"GlendaChong"},"content":"    public void testParseDate_invalidMonth_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":200,"author":{"gitId":"GlendaChong"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e Parser.parseDate(\"31/13/2023\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":201,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":202,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":203,"author":{"gitId":"GlendaChong"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":204,"author":{"gitId":"GlendaChong"},"content":"    public void testParseDate_invalidDay_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":205,"author":{"gitId":"GlendaChong"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e Parser.parseDate(\"32/08/2023\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":206,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":207,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":208,"author":{"gitId":"GlendaChong"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":209,"author":{"gitId":"GlendaChong"},"content":"    public void testParseTime_validInput_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":210,"author":{"gitId":"GlendaChong"},"content":"        LocalTime result \u003d Parser.parseTime(\"1345\");","lastModifiedDate":"2023-08-31"},{"lineNumber":211,"author":{"gitId":"GlendaChong"},"content":"        assertEquals(LocalTime.of(13, 45), result);","lastModifiedDate":"2023-08-31"},{"lineNumber":212,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":213,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":214,"author":{"gitId":"GlendaChong"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":215,"author":{"gitId":"GlendaChong"},"content":"    public void testParseTime_validInputWithLeadingZero_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":216,"author":{"gitId":"GlendaChong"},"content":"        LocalTime result \u003d Parser.parseTime(\"0900\");","lastModifiedDate":"2023-08-31"},{"lineNumber":217,"author":{"gitId":"GlendaChong"},"content":"        assertEquals(LocalTime.of(9, 0), result);","lastModifiedDate":"2023-08-31"},{"lineNumber":218,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":219,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":220,"author":{"gitId":"GlendaChong"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":221,"author":{"gitId":"GlendaChong"},"content":"    public void testParseTime_invalidHour_exceptionThrown() {","lastModifiedDate":"2023-09-04"},{"lineNumber":222,"author":{"gitId":"GlendaChong"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e Parser.parseTime(\"2560\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":223,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":224,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":225,"author":{"gitId":"GlendaChong"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":226,"author":{"gitId":"GlendaChong"},"content":"    public void testParseTime_invalidMinute_exceptionThrown() {","lastModifiedDate":"2023-09-04"},{"lineNumber":227,"author":{"gitId":"GlendaChong"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e Parser.parseTime(\"13160\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":228,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":229,"author":{"gitId":"GlendaChong"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"GlendaChong":229}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GlendaChong"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"GlendaChong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"GlendaChong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"GlendaChong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"GlendaChong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"GlendaChong"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"GlendaChong"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"GlendaChong"},"content":"    public void testToString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"GlendaChong"},"content":"        Deadline deadline \u003d new Deadline(\"CS2103T\", LocalDate.of(2023, 8, 31), LocalTime.of(13, 45));","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"GlendaChong"},"content":"        assertEquals(\"[D][ ] CS2103T (by 31 Aug 2023 1.45PM)\", deadline.toString());","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"GlendaChong"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"GlendaChong"},"content":"    public void testFileDescription() {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"GlendaChong"},"content":"        Deadline deadline \u003d new Deadline(\"CS2103T\", LocalDate.of(2023, 8, 31), LocalTime.of(13, 45));","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"GlendaChong"},"content":"        assertEquals(\"D | 1 | CS2103T | 31 Aug 2023 | 1.45PM\" + \"\\n\", deadline.toFileFormat());","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"GlendaChong"},"content":"        deadline.markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"GlendaChong"},"content":"        assertEquals(\"D | 0 | CS2103T | 31 Aug 2023 | 1.45PM\" + \"\\n\", deadline.toFileFormat());","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"GlendaChong"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"GlendaChong":27}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GlendaChong"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"GlendaChong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"GlendaChong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"GlendaChong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"GlendaChong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"GlendaChong"},"content":"public class TaskListTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"GlendaChong"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"GlendaChong"},"content":"    public void testAddTask() {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"GlendaChong"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"GlendaChong"},"content":"        Task task1 \u003d new ToDo(\"Buy groceries\");","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"GlendaChong"},"content":"        taskList.add(task1);","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"GlendaChong"},"content":"        assertEquals(task1, taskList.getTask(1));","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"GlendaChong"},"content":"        Task task2 \u003d new Deadline(\"CS2103T\", LocalDate.now(), LocalTime.now());","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"GlendaChong"},"content":"        taskList.add(task2);","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"GlendaChong"},"content":"        assertEquals(task2, taskList.getTask(2));","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"GlendaChong"},"content":"        Task task3 \u003d new Event(\"SLF\", \"Aug 20\", \"Aug 22\");","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"GlendaChong"},"content":"        taskList.add(task3);","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"GlendaChong"},"content":"        assertEquals(task3, taskList.getTask(3));","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"GlendaChong"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"GlendaChong"},"content":"    public void testRemoveTask() {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"GlendaChong"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"GlendaChong"},"content":"        Task task1 \u003d new ToDo(\"Read a book\");","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"GlendaChong"},"content":"        Task task2 \u003d new ToDo(\"Clean the room\");","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"GlendaChong"},"content":"        taskList.add(task1);","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"GlendaChong"},"content":"        taskList.add(task2);","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"GlendaChong"},"content":"        taskList.remove(1);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"GlendaChong"},"content":"        assertEquals(1, taskList.getNumberOfTasks());","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"GlendaChong"},"content":"        assertEquals(task2, taskList.getTask(1));","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"GlendaChong"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"GlendaChong"},"content":"    public void testGetTask() {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"GlendaChong"},"content":"        TaskList tasklist \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"GlendaChong"},"content":"        Task task1 \u003d new ToDo(\"Read a book\");","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"GlendaChong"},"content":"        Task task2 \u003d new ToDo(\"Clean the room\");","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"GlendaChong"},"content":"        tasklist.add(task1);","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"GlendaChong"},"content":"        tasklist.add(task2);","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"GlendaChong"},"content":"        assertEquals(2, tasklist.getNumberOfTasks());","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"GlendaChong"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"GlendaChong":51}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GlendaChong"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"GlendaChong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"GlendaChong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"GlendaChong"},"content":"public class ToDoTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"GlendaChong"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"GlendaChong"},"content":"    public void testToString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"GlendaChong"},"content":"        ToDo todo \u003d new ToDo(\"Buy groceries\");","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"GlendaChong"},"content":"        assertEquals(\"[T][ ] Buy groceries\", todo.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"GlendaChong"},"content":"        todo.markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"GlendaChong"},"content":"        assertEquals(\"[T][X] Buy groceries\", todo.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"GlendaChong"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"GlendaChong"},"content":"    public void testFileDescription() {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"GlendaChong"},"content":"        ToDo todo \u003d new ToDo(\"Read a book\");","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"GlendaChong"},"content":"        assertEquals(\"T | 1 | Read a book\" + \"\\n\", todo.toFileFormat());","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"GlendaChong"},"content":"        todo.markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"GlendaChong"},"content":"        assertEquals(\"T | 0 | Read a book\" + \"\\n\", todo.toFileFormat());","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"GlendaChong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"GlendaChong"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"GlendaChong":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"GlendaChong"},"content":"todo borrow book","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"GlendaChong"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"GlendaChong"},"content":"deadline return book /by 29/08/2023 1200","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"GlendaChong"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"GlendaChong"},"content":"mark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"GlendaChong"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"GlendaChong"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"GlendaChong"},"content":"mark 4","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"GlendaChong"},"content":"unmark 1","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"GlendaChong"},"content":"delete 1","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"GlendaChong"},"content":"bye","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"GlendaChong":11}},{"path":"text-ui-test/output.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"GlendaChong"},"content":"        ____________________________________________________________","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"GlendaChong"},"content":"        Hello! I\u0027m Glenda!","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"GlendaChong"},"content":"        What can I do for you?","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"GlendaChong"},"content":"        ____________________________________________________________","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"GlendaChong"},"content":"        ____________________________________________________________","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"GlendaChong"},"content":"        Got it. I\u0027ve added this task to the list:","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"GlendaChong"},"content":"          [T][ ] borrow book","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"GlendaChong"},"content":"        Now you have 1 task(s) in the list.","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"GlendaChong"},"content":"        ____________________________________________________________","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"GlendaChong"},"content":"        ____________________________________________________________","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"GlendaChong"},"content":"        OOPS!!! The format of a deadline task is \"deadline TASK_DESCRIPTION /by DD/MM/YYYY 24H_TIME\"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"GlendaChong"},"content":"        ____________________________________________________________","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"GlendaChong"},"content":"        ____________________________________________________________","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"GlendaChong"},"content":"        Got it. I\u0027ve added this task to the list:","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"GlendaChong"},"content":"          [D][ ] return book (by 29 Aug 2023 12.00PM)","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"GlendaChong"},"content":"        Now you have 2 task(s) in the list.","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"GlendaChong"},"content":"        ____________________________________________________________","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"GlendaChong"},"content":"        ____________________________________________________________","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"GlendaChong"},"content":"        Here are the task(s) in your list:","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"GlendaChong"},"content":"        1. [T][ ] borrow book","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"GlendaChong"},"content":"        2. [D][ ] return book (by 29 Aug 2023 12.00PM)","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"GlendaChong"},"content":"        ____________________________________________________________","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"GlendaChong"},"content":"        ____________________________________________________________","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"GlendaChong"},"content":"        Great! I\u0027ve completed this task!","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"GlendaChong"},"content":"        [T][X] borrow book","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"GlendaChong"},"content":"        ____________________________________________________________","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"GlendaChong"},"content":"        ____________________________________________________________","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"GlendaChong"},"content":"        Here are the task(s) in your list:","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"GlendaChong"},"content":"        1. [T][X] borrow book","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"GlendaChong"},"content":"        2. [D][ ] return book (by 29 Aug 2023 12.00PM)","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"GlendaChong"},"content":"        ____________________________________________________________","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"GlendaChong"},"content":"        ____________________________________________________________","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"GlendaChong"},"content":"        Got it. I\u0027ve added this task to the list:","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"GlendaChong"},"content":"          [E][ ] project meeting (from Mon 2pm to 4pm)","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"GlendaChong"},"content":"        Now you have 3 task(s) in the list.","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"GlendaChong"},"content":"        ____________________________________________________________","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"GlendaChong"},"content":"        ____________________________________________________________","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"GlendaChong"},"content":"        OOPS!!! Task 4 does not exist.","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"GlendaChong"},"content":"        ____________________________________________________________","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"GlendaChong"},"content":"        ____________________________________________________________","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"GlendaChong"},"content":"        Okay, I have not yet completed this task:","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"GlendaChong"},"content":"        [T][ ] borrow book","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"GlendaChong"},"content":"        ____________________________________________________________","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"GlendaChong"},"content":"        ____________________________________________________________","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"GlendaChong"},"content":"        Okay, I\u0027ve removed this task:","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"GlendaChong"},"content":"          [T][ ] borrow book","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"GlendaChong"},"content":"        Now you have 2 task(s) in the list.","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"GlendaChong"},"content":"        ____________________________________________________________","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"GlendaChong"},"content":"        ____________________________________________________________","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"GlendaChong"},"content":"        Bye. Hope to see you again soon!","lastModifiedDate":"2023-08-22"},{"lineNumber":62,"author":{"gitId":"GlendaChong"},"content":"        ____________________________________________________________","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"GlendaChong"},"content":"","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"GlendaChong":63}}]
