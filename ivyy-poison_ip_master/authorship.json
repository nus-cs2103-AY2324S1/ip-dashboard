[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"ivyy-poison"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"ivyy-poison"},"content":"checkstyle {","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"ivyy-poison"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"ivyy-poison"},"content":"}","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"ivyy-poison"},"content":"java {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"ivyy-poison"},"content":"    sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"ivyy-poison"},"content":"    targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"ivyy-poison"},"content":"}","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":24,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"ivyy-poison"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"ivyy-poison"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"ivyy-poison"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"ivyy-poison"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"ivyy-poison"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"ivyy-poison"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"ivyy-poison"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"ivyy-poison"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"ivyy-poison"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"ivyy-poison"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"ivyy-poison"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"ivyy-poison"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"ivyy-poison"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"ivyy-poison"},"content":"    mainClassName(\"duke/Launcher\")","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"ivyy-poison"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":69,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"ivyy-poison"},"content":"build.dependsOn test","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"ivyy-poison":29,"-":41}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ivyy-poison"},"content":"# User Guide for Ekud Chatbot","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"ivyy-poison"},"content":"Thank you for using the Ekud Chatbot! As a chatbot, my aim is to help you organise","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"ivyy-poison"},"content":"your schedule with a task list.","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"ivyy-poison"},"content":"### 1. Display task list","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"ivyy-poison"},"content":"Lists out all of the tasks in your task list.","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"ivyy-poison"},"content":"### 2. Add Todo Task to task list","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"ivyy-poison"},"content":"Adds ToDo task to task list. (ToDo tasks are tasks that have no specific deadline, or time range.)","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"ivyy-poison"},"content":"### 3. Add Deadline Task to task list","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"ivyy-poison"},"content":"Adds Deadline task to task list. (Deadline tasks are tasks need to be completed by a specific end date.)","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"ivyy-poison"},"content":"### 4. Add Event Task to task list","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"ivyy-poison"},"content":"Adds Event task to task list. (Event tasks are tasks have a specified start and end date.)","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"ivyy-poison"},"content":"### 5. Mark Task as complete","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"ivyy-poison"},"content":"Marks a task as complete in task list","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"ivyy-poison"},"content":"### 6. Delete Task","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"ivyy-poison"},"content":"Removes a task from task list","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"ivyy-poison"},"content":"### 7. Find tasks by keyword","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"ivyy-poison"},"content":"Finds tasks relating to a particular keyword","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"ivyy-poison"},"content":"### 8. Find tasks by time frame","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"ivyy-poison"},"content":"Finds tasks that either occur or have a deadline during a given time period.","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"ivyy-poison"},"content":"### 9. Close chatbot","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"ivyy-poison"},"content":"Exits the chatbot and closes the user interface.","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"ivyy-poison"},"content":"### `list` - Lists tasks in task list","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"ivyy-poison"},"content":"Lists out all of the tasks in your task list.","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"ivyy-poison"},"content":"Syntax: `list`","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"ivyy-poison"},"content":"A list containing all recorded tasks will be shown.","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"ivyy-poison"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"ivyy-poison"},"content":"------------------------------------------------------------","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"ivyy-poison"},"content":"1. [T][X] eat supper","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"ivyy-poison"},"content":"2. [E][X] lunch appointment (from: 12-12-2023 12:00 to: 12-12-2023 14:00)","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"ivyy-poison"},"content":"------------------------------------------------------------","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"ivyy-poison"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"ivyy-poison"},"content":"### `todo` - Add Todo Task","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"ivyy-poison"},"content":"Adds ToDo task to task list. (ToDo tasks are tasks that have no specific deadline, or time range.)","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"ivyy-poison"},"content":"Syntax: `todo \u003cName of task\u003e`","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"ivyy-poison"},"content":"Example of usage: `todo homework`","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"ivyy-poison"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"ivyy-poison"},"content":"Todo task will be added to task list.","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":83,"author":{"gitId":"ivyy-poison"},"content":"------------------------------------------------------------","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"ivyy-poison"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"ivyy-poison"},"content":"  [T][ ] homework","lastModifiedDate":"2023-09-20"},{"lineNumber":86,"author":{"gitId":"ivyy-poison"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"ivyy-poison"},"content":"------------------------------------------------------------","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":89,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"ivyy-poison"},"content":"### `deadline` - Add Deadline Task","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"ivyy-poison"},"content":"Adds Deadline task to task list. (Deadline tasks are tasks need to be completed by a specific end date.)","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"ivyy-poison"},"content":"Syntax: `deadline \u003cName of task\u003e /by \u003cDue date and time\u003e`","lastModifiedDate":"2023-09-20"},{"lineNumber":95,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":96,"author":{"gitId":"ivyy-poison"},"content":"Example of usage: `deadline submit homework /by 20 Sep 2023 2359`","lastModifiedDate":"2023-09-20"},{"lineNumber":97,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"ivyy-poison"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":99,"author":{"gitId":"ivyy-poison"},"content":"Deadline task will be added to task list.","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"ivyy-poison"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":102,"author":{"gitId":"ivyy-poison"},"content":"------------------------------------------------------------","lastModifiedDate":"2023-09-20"},{"lineNumber":103,"author":{"gitId":"ivyy-poison"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2023-09-20"},{"lineNumber":104,"author":{"gitId":"ivyy-poison"},"content":"  [D][ ] submit homework (by: 20-09-2023 23:59)","lastModifiedDate":"2023-09-20"},{"lineNumber":105,"author":{"gitId":"ivyy-poison"},"content":"Now you have 4 tasks in the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":106,"author":{"gitId":"ivyy-poison"},"content":"------------------------------------------------------------","lastModifiedDate":"2023-09-20"},{"lineNumber":107,"author":{"gitId":"ivyy-poison"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":108,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":109,"author":{"gitId":"ivyy-poison"},"content":"### `event` - Add Event Task","lastModifiedDate":"2023-09-20"},{"lineNumber":110,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":111,"author":{"gitId":"ivyy-poison"},"content":"Adds Event task to task list. (Event tasks are tasks have a specified start and end date.)","lastModifiedDate":"2023-09-20"},{"lineNumber":112,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":113,"author":{"gitId":"ivyy-poison"},"content":"Syntax: `event \u003cname of task\u003e /from \u003cDate and time of event start\u003e /to \u003cDate and time of event end\u003e`","lastModifiedDate":"2023-09-20"},{"lineNumber":114,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":115,"author":{"gitId":"ivyy-poison"},"content":"Example of usage: `event dinner appointment /from 20 Sep 2023 1800 /to 20 Sep 2023 1900`","lastModifiedDate":"2023-09-20"},{"lineNumber":116,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":117,"author":{"gitId":"ivyy-poison"},"content":"Expected outcome: Event task will be added to task list.","lastModifiedDate":"2023-09-20"},{"lineNumber":118,"author":{"gitId":"ivyy-poison"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":119,"author":{"gitId":"ivyy-poison"},"content":"------------------------------------------------------------","lastModifiedDate":"2023-09-20"},{"lineNumber":120,"author":{"gitId":"ivyy-poison"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2023-09-20"},{"lineNumber":121,"author":{"gitId":"ivyy-poison"},"content":"  [E][ ] dinner appointment (from: 20-09-2023 18:00 to: 20-09-2023 19:00)","lastModifiedDate":"2023-09-20"},{"lineNumber":122,"author":{"gitId":"ivyy-poison"},"content":"Now you have 5 tasks in the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":123,"author":{"gitId":"ivyy-poison"},"content":"------------------------------------------------------------","lastModifiedDate":"2023-09-20"},{"lineNumber":124,"author":{"gitId":"ivyy-poison"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":125,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":126,"author":{"gitId":"ivyy-poison"},"content":"### `mark` - Mark Task as done","lastModifiedDate":"2023-09-20"},{"lineNumber":127,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":128,"author":{"gitId":"ivyy-poison"},"content":"Marks a task as done.","lastModifiedDate":"2023-09-20"},{"lineNumber":129,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":130,"author":{"gitId":"ivyy-poison"},"content":"Syntax: `mark \u003cThe task number in the list\u003e`","lastModifiedDate":"2023-09-20"},{"lineNumber":131,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":132,"author":{"gitId":"ivyy-poison"},"content":"Example of usage: `mark 3`","lastModifiedDate":"2023-09-20"},{"lineNumber":133,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":134,"author":{"gitId":"ivyy-poison"},"content":"Expected outcome: Task will be marked as done.","lastModifiedDate":"2023-09-20"},{"lineNumber":135,"author":{"gitId":"ivyy-poison"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":136,"author":{"gitId":"ivyy-poison"},"content":"------------------------------------------------------------","lastModifiedDate":"2023-09-20"},{"lineNumber":137,"author":{"gitId":"ivyy-poison"},"content":"Nice! I\u0027ve marked this task as done: ","lastModifiedDate":"2023-09-20"},{"lineNumber":138,"author":{"gitId":"ivyy-poison"},"content":"  [T][X] homework","lastModifiedDate":"2023-09-20"},{"lineNumber":139,"author":{"gitId":"ivyy-poison"},"content":"------------------------------------------------------------","lastModifiedDate":"2023-09-20"},{"lineNumber":140,"author":{"gitId":"ivyy-poison"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":141,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":142,"author":{"gitId":"ivyy-poison"},"content":"### `delete` - Delete Task from task list","lastModifiedDate":"2023-09-20"},{"lineNumber":143,"author":{"gitId":"ivyy-poison"},"content":"Removes task from task list.","lastModifiedDate":"2023-09-20"},{"lineNumber":144,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":145,"author":{"gitId":"ivyy-poison"},"content":"Syntax: `delete \u003cThe task number in the list\u003e`","lastModifiedDate":"2023-09-20"},{"lineNumber":146,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":147,"author":{"gitId":"ivyy-poison"},"content":"Example of usage: `delete 1`","lastModifiedDate":"2023-09-20"},{"lineNumber":148,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":149,"author":{"gitId":"ivyy-poison"},"content":"Expected outcome: Task will be removed from task list","lastModifiedDate":"2023-09-20"},{"lineNumber":150,"author":{"gitId":"ivyy-poison"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":151,"author":{"gitId":"ivyy-poison"},"content":"------------------------------------------------------------","lastModifiedDate":"2023-09-20"},{"lineNumber":152,"author":{"gitId":"ivyy-poison"},"content":"Noted. I\u0027ve removed this task: ","lastModifiedDate":"2023-09-20"},{"lineNumber":153,"author":{"gitId":"ivyy-poison"},"content":"  [T][X] eat supper","lastModifiedDate":"2023-09-20"},{"lineNumber":154,"author":{"gitId":"ivyy-poison"},"content":"Now you have 4 tasks in the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":155,"author":{"gitId":"ivyy-poison"},"content":"------------------------------------------------------------","lastModifiedDate":"2023-09-20"},{"lineNumber":156,"author":{"gitId":"ivyy-poison"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":157,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":158,"author":{"gitId":"ivyy-poison"},"content":"### `find` - Find all tasks with a given keyword","lastModifiedDate":"2023-09-20"},{"lineNumber":159,"author":{"gitId":"ivyy-poison"},"content":"Finds tasks relating to a particular keyword","lastModifiedDate":"2023-09-20"},{"lineNumber":160,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":161,"author":{"gitId":"ivyy-poison"},"content":"Syntax: `find \u003cKeyword to search for\u003e`","lastModifiedDate":"2023-09-20"},{"lineNumber":162,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":163,"author":{"gitId":"ivyy-poison"},"content":"Example of usage: `find appointment`","lastModifiedDate":"2023-09-20"},{"lineNumber":164,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":165,"author":{"gitId":"ivyy-poison"},"content":"Expected outcome: A list of tasks containing the keyword will be displayed","lastModifiedDate":"2023-09-20"},{"lineNumber":166,"author":{"gitId":"ivyy-poison"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":167,"author":{"gitId":"ivyy-poison"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2023-09-20"},{"lineNumber":168,"author":{"gitId":"ivyy-poison"},"content":"------------------------------------------------------------","lastModifiedDate":"2023-09-20"},{"lineNumber":169,"author":{"gitId":"ivyy-poison"},"content":"1. [E][X] lunch appointment (from: 12-12-2022 12:00 to: 12-12-2022 14:00)","lastModifiedDate":"2023-09-20"},{"lineNumber":170,"author":{"gitId":"ivyy-poison"},"content":"2. [E][ ] dinner appointment (from: 20-09-2023 18:00 to: 20-09-2023 19:00)","lastModifiedDate":"2023-09-20"},{"lineNumber":171,"author":{"gitId":"ivyy-poison"},"content":"------------------------------------------------------------","lastModifiedDate":"2023-09-20"},{"lineNumber":172,"author":{"gitId":"ivyy-poison"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":173,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":174,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":175,"author":{"gitId":"ivyy-poison"},"content":"### `view schedule` - Lists all tasks in a given time interval","lastModifiedDate":"2023-09-20"},{"lineNumber":176,"author":{"gitId":"ivyy-poison"},"content":"Finds tasks that either occur or have a deadline during a given time period.","lastModifiedDate":"2023-09-20"},{"lineNumber":177,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":178,"author":{"gitId":"ivyy-poison"},"content":"Syntax: `view schedule /from \u003cStart of time frame\u003e /to \u003cEnd of time frame\u003e`","lastModifiedDate":"2023-09-20"},{"lineNumber":179,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":180,"author":{"gitId":"ivyy-poison"},"content":"Example of usage: `view schedule /from 20 Sep 2023 0000 /to 20 Sep 2023 2359`","lastModifiedDate":"2023-09-20"},{"lineNumber":181,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":182,"author":{"gitId":"ivyy-poison"},"content":"Expected outcome: A list of event and deadline tasks that occur during the specified time frame will be shown","lastModifiedDate":"2023-09-20"},{"lineNumber":183,"author":{"gitId":"ivyy-poison"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":184,"author":{"gitId":"ivyy-poison"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2023-09-20"},{"lineNumber":185,"author":{"gitId":"ivyy-poison"},"content":"------------------------------------------------------------","lastModifiedDate":"2023-09-20"},{"lineNumber":186,"author":{"gitId":"ivyy-poison"},"content":"1. [E][ ] dinner appointment (from: 20-09-2023 18:00 to: 20-09-2023 19:00)","lastModifiedDate":"2023-09-20"},{"lineNumber":187,"author":{"gitId":"ivyy-poison"},"content":"2. [D][ ] submit homework (by: 20-09-2023 23:59)","lastModifiedDate":"2023-09-20"},{"lineNumber":188,"author":{"gitId":"ivyy-poison"},"content":"------------------------------------------------------------","lastModifiedDate":"2023-09-20"},{"lineNumber":189,"author":{"gitId":"ivyy-poison"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":190,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":191,"author":{"gitId":"ivyy-poison"},"content":"### `bye` - Exits the platform","lastModifiedDate":"2023-09-20"},{"lineNumber":192,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":193,"author":{"gitId":"ivyy-poison"},"content":"Exits the chatbot and closes the user interface.","lastModifiedDate":"2023-09-20"},{"lineNumber":194,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":195,"author":{"gitId":"ivyy-poison"},"content":"Syntax: `bye`","lastModifiedDate":"2023-09-20"},{"lineNumber":196,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":197,"author":{"gitId":"ivyy-poison"},"content":"Expected outcome: A goodbye message is shown, and the user interface will then close by itself","lastModifiedDate":"2023-09-20"},{"lineNumber":198,"author":{"gitId":"ivyy-poison"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":199,"author":{"gitId":"ivyy-poison"},"content":"------------------------------------------------------------","lastModifiedDate":"2023-09-20"},{"lineNumber":200,"author":{"gitId":"ivyy-poison"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2023-09-20"},{"lineNumber":201,"author":{"gitId":"ivyy-poison"},"content":"------------------------------------------------------------","lastModifiedDate":"2023-09-20"},{"lineNumber":202,"author":{"gitId":"ivyy-poison"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":203,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":204,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"ivyy-poison":186,"-":18}},{"path":"src/main/java/duke/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivyy-poison"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"ivyy-poison"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"ivyy-poison"},"content":" * Encapsulates the types of commands that can be executed by the application.","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"ivyy-poison"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"ivyy-poison"},"content":"public enum CommandType {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"ivyy-poison"},"content":"    LIST, MARK, DELETE, TODO, DEADLINE, EVENT, UNKNOWN, FIND, EXIT, SCHEDULE","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"ivyy-poison"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"ivyy-poison":8}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivyy-poison"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"ivyy-poison"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"ivyy-poison"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"ivyy-poison"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"ivyy-poison"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"ivyy-poison"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"ivyy-poison"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"ivyy-poison"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"ivyy-poison"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"ivyy-poison"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"ivyy-poison"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"ivyy-poison"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"ivyy-poison"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"ivyy-poison"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"ivyy-poison"},"content":" * Duke is a personal assistant chatbot that helps a person to keep track of various things.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"ivyy-poison"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"ivyy-poison"},"content":"public class Duke {","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"ivyy-poison"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"ivyy-poison"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"ivyy-poison"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"ivyy-poison"},"content":"    private Parser parser;","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"ivyy-poison"},"content":"     * Constructs a Duke object.","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"ivyy-poison"},"content":"    public Duke() {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"ivyy-poison"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"ivyy-poison"},"content":"            this.ui \u003d new Ui();","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"ivyy-poison"},"content":"            this.storage \u003d new Storage();","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"ivyy-poison"},"content":"            this.tasks \u003d new TaskList(storage.readTasks());","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"ivyy-poison"},"content":"            this.parser \u003d new Parser();","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"ivyy-poison"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"ivyy-poison"},"content":"            ui.printErrorMessage(e);","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"ivyy-poison"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"ivyy-poison"},"content":"     * Returns the response of Duke to the user input.","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"ivyy-poison"},"content":"     * @param input The user input.","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"ivyy-poison"},"content":"     * @return The response of Duke to the user input.","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"ivyy-poison"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"ivyy-poison"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"ivyy-poison"},"content":"            CommandType commandType \u003d parser.parseCommandType(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"ivyy-poison"},"content":"            return handleCommand(commandType, input);","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"ivyy-poison"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"ivyy-poison"},"content":"            ui.printErrorMessage(e);","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"ivyy-poison"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"ivyy-poison"},"content":"        assert false : \"Response should not be null\";","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"ivyy-poison"},"content":"        return \"Duke heard: \" + input;","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"ivyy-poison"},"content":"    private void run() {","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"ivyy-poison"},"content":"        ui.printWelcomeMessage();","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"ivyy-poison"},"content":"        try (Scanner sc \u003d new Scanner(System.in)) {","lastModifiedDate":"2023-08-20"},{"lineNumber":62,"author":{"gitId":"ivyy-poison"},"content":"            while (true) {","lastModifiedDate":"2023-08-20"},{"lineNumber":63,"author":{"gitId":"ivyy-poison"},"content":"                String input \u003d sc.nextLine();","lastModifiedDate":"2023-08-20"},{"lineNumber":64,"author":{"gitId":"ivyy-poison"},"content":"                if (input.equals(\"bye\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":65,"author":{"gitId":"ivyy-poison"},"content":"                    break;","lastModifiedDate":"2023-08-20"},{"lineNumber":66,"author":{"gitId":"ivyy-poison"},"content":"                }","lastModifiedDate":"2023-08-20"},{"lineNumber":67,"author":{"gitId":"ivyy-poison"},"content":"                CommandType commandType \u003d parser.parseCommandType(input);","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"ivyy-poison"},"content":"                handleCommand(commandType, input);","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"ivyy-poison"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":70,"author":{"gitId":"ivyy-poison"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"ivyy-poison"},"content":"            ui.printErrorMessage(e);","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"ivyy-poison"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-20"},{"lineNumber":73,"author":{"gitId":"ivyy-poison"},"content":"            ui.printErrorMessage(new DukeException(\"An unexpected error occurred: \" + e.getMessage()));","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"ivyy-poison"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":75,"author":{"gitId":"ivyy-poison"},"content":"        ui.printFarewellMessage();","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":79,"author":{"gitId":"ivyy-poison"},"content":"     * Serves as the main entry point of the Duke application.","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":81,"author":{"gitId":"ivyy-poison"},"content":"     * @param args Command line arguments.","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"ivyy-poison"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"ivyy-poison"},"content":"        Duke ekud \u003d new Duke();","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"ivyy-poison"},"content":"        ekud.run();","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":87,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":88,"author":{"gitId":"ivyy-poison"},"content":"    private String handleCommand(CommandType commandType, String command) throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"ivyy-poison"},"content":"        Task task;","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"ivyy-poison"},"content":"        TaskList filteredList;","lastModifiedDate":"2023-09-15"},{"lineNumber":91,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":92,"author":{"gitId":"ivyy-poison"},"content":"        switch (commandType) {","lastModifiedDate":"2023-08-20"},{"lineNumber":93,"author":{"gitId":"ivyy-poison"},"content":"        case LIST:","lastModifiedDate":"2023-08-20"},{"lineNumber":94,"author":{"gitId":"ivyy-poison"},"content":"            ui.printList(tasks.getTasks());","lastModifiedDate":"2023-08-27"},{"lineNumber":95,"author":{"gitId":"ivyy-poison"},"content":"            return ui.displayList(tasks.getTasks());","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"ivyy-poison"},"content":"        case MARK:","lastModifiedDate":"2023-08-20"},{"lineNumber":98,"author":{"gitId":"ivyy-poison"},"content":"            task \u003d markTask(command);","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"ivyy-poison"},"content":"            return ui.displayMarkedTaskConfirmation(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"ivyy-poison"},"content":"        case DELETE:","lastModifiedDate":"2023-08-20"},{"lineNumber":102,"author":{"gitId":"ivyy-poison"},"content":"            task \u003d deleteTask(command);","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"ivyy-poison"},"content":"            return ui.displayDeletedTaskConfirmation(task, tasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"ivyy-poison"},"content":"        case TODO:","lastModifiedDate":"2023-08-20"},{"lineNumber":106,"author":{"gitId":"ivyy-poison"},"content":"        case DEADLINE:","lastModifiedDate":"2023-08-20"},{"lineNumber":107,"author":{"gitId":"ivyy-poison"},"content":"        case EVENT:","lastModifiedDate":"2023-08-20"},{"lineNumber":108,"author":{"gitId":"ivyy-poison"},"content":"            task \u003d addTask(command);","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"ivyy-poison"},"content":"            return ui.displayAddedTaskConfirmation(task, tasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"ivyy-poison"},"content":"        case FIND:","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"ivyy-poison"},"content":"            filteredList \u003d handleFind(command);","lastModifiedDate":"2023-09-15"},{"lineNumber":113,"author":{"gitId":"ivyy-poison"},"content":"            return ui.displayList(filteredList.getTasks());","lastModifiedDate":"2023-09-15"},{"lineNumber":114,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":115,"author":{"gitId":"ivyy-poison"},"content":"        case SCHEDULE:","lastModifiedDate":"2023-09-15"},{"lineNumber":116,"author":{"gitId":"ivyy-poison"},"content":"            filteredList \u003d findTaskByPeriod(command);","lastModifiedDate":"2023-09-15"},{"lineNumber":117,"author":{"gitId":"ivyy-poison"},"content":"            return ui.displayList(filteredList.getTasks());","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"ivyy-poison"},"content":"        case UNKNOWN:","lastModifiedDate":"2023-08-20"},{"lineNumber":120,"author":{"gitId":"ivyy-poison"},"content":"            ui.printErrorMessage(new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"ivyy-poison"},"content":"            return ui.displayErrorMessage(new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"ivyy-poison"},"content":"        case EXIT:","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"ivyy-poison"},"content":"            ui.printFarewellMessage();","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"ivyy-poison"},"content":"            return ui.displayFarewellMessage();","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":127,"author":{"gitId":"ivyy-poison"},"content":"        default:","lastModifiedDate":"2023-09-04"},{"lineNumber":128,"author":{"gitId":"ivyy-poison"},"content":"            assert false : \"Command type should not be null\";","lastModifiedDate":"2023-09-08"},{"lineNumber":129,"author":{"gitId":"ivyy-poison"},"content":"            return \"\";","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"ivyy-poison"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":131,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":132,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":133,"author":{"gitId":"ivyy-poison"},"content":"    private TaskList handleFind(String command) {","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"ivyy-poison"},"content":"        ui.printFindMessage();","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"ivyy-poison"},"content":"        String keyword \u003d command.split(\" \")[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"ivyy-poison"},"content":"        TaskList filtered \u003d tasks.filterByName(keyword);","lastModifiedDate":"2023-09-15"},{"lineNumber":137,"author":{"gitId":"ivyy-poison"},"content":"        ui.printList(filtered.getTasks());","lastModifiedDate":"2023-09-15"},{"lineNumber":138,"author":{"gitId":"ivyy-poison"},"content":"        return filtered;","lastModifiedDate":"2023-09-15"},{"lineNumber":139,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":140,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":141,"author":{"gitId":"ivyy-poison"},"content":"    private TaskList findTaskByPeriod(String command) {","lastModifiedDate":"2023-09-15"},{"lineNumber":142,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":143,"author":{"gitId":"ivyy-poison"},"content":"        ui.printFindMessage();","lastModifiedDate":"2023-09-15"},{"lineNumber":144,"author":{"gitId":"ivyy-poison"},"content":"        String[] split \u003d command.split(\" /from \");","lastModifiedDate":"2023-09-15"},{"lineNumber":145,"author":{"gitId":"ivyy-poison"},"content":"        String from \u003d split[1].split(\" /to \")[0];","lastModifiedDate":"2023-09-15"},{"lineNumber":146,"author":{"gitId":"ivyy-poison"},"content":"        String to \u003d split[1].split(\" /to \")[1];","lastModifiedDate":"2023-09-15"},{"lineNumber":147,"author":{"gitId":"ivyy-poison"},"content":"        LocalDateTime start \u003d LocalDateTime.parse(from, DateTimeFormatter.ofPattern(\"d MMM yyyy HHmm\"));","lastModifiedDate":"2023-09-15"},{"lineNumber":148,"author":{"gitId":"ivyy-poison"},"content":"        LocalDateTime end \u003d LocalDateTime.parse(to, DateTimeFormatter.ofPattern(\"d MMM yyyy HHmm\"));","lastModifiedDate":"2023-09-15"},{"lineNumber":149,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":150,"author":{"gitId":"ivyy-poison"},"content":"        TaskList filtered \u003d tasks.filterByDateRange(start, end);","lastModifiedDate":"2023-09-15"},{"lineNumber":151,"author":{"gitId":"ivyy-poison"},"content":"        ui.printList(filtered.getTasks());","lastModifiedDate":"2023-08-30"},{"lineNumber":152,"author":{"gitId":"ivyy-poison"},"content":"        return filtered;","lastModifiedDate":"2023-09-02"},{"lineNumber":153,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":154,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":155,"author":{"gitId":"ivyy-poison"},"content":"    private Task addTask(String task) {","lastModifiedDate":"2023-09-02"},{"lineNumber":156,"author":{"gitId":"ivyy-poison"},"content":"        try {","lastModifiedDate":"2023-08-20"},{"lineNumber":157,"author":{"gitId":"ivyy-poison"},"content":"            Task newTask \u003d null;","lastModifiedDate":"2023-08-20"},{"lineNumber":158,"author":{"gitId":"ivyy-poison"},"content":"            if (task.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":159,"author":{"gitId":"ivyy-poison"},"content":"                newTask \u003d ToDo.createToDoFromCommand(task);","lastModifiedDate":"2023-08-20"},{"lineNumber":160,"author":{"gitId":"ivyy-poison"},"content":"            } else if (task.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":161,"author":{"gitId":"ivyy-poison"},"content":"                newTask \u003d Deadline.createDeadlineFromCommand(task);","lastModifiedDate":"2023-08-20"},{"lineNumber":162,"author":{"gitId":"ivyy-poison"},"content":"            } else if (task.startsWith(\"event\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":163,"author":{"gitId":"ivyy-poison"},"content":"                newTask \u003d Event.createEventFromCommand(task);","lastModifiedDate":"2023-08-20"},{"lineNumber":164,"author":{"gitId":"ivyy-poison"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":165,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":166,"author":{"gitId":"ivyy-poison"},"content":"            if (newTask !\u003d null) {","lastModifiedDate":"2023-08-20"},{"lineNumber":167,"author":{"gitId":"ivyy-poison"},"content":"                tasks.add(newTask);","lastModifiedDate":"2023-08-20"},{"lineNumber":168,"author":{"gitId":"ivyy-poison"},"content":"                storage.write(newTask);","lastModifiedDate":"2023-08-27"},{"lineNumber":169,"author":{"gitId":"ivyy-poison"},"content":"                ui.printAddedTaskConfirmation(newTask, tasks);","lastModifiedDate":"2023-08-27"},{"lineNumber":170,"author":{"gitId":"ivyy-poison"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":171,"author":{"gitId":"ivyy-poison"},"content":"            return newTask;","lastModifiedDate":"2023-09-02"},{"lineNumber":172,"author":{"gitId":"ivyy-poison"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-20"},{"lineNumber":173,"author":{"gitId":"ivyy-poison"},"content":"            ui.printErrorMessage(e);","lastModifiedDate":"2023-08-27"},{"lineNumber":174,"author":{"gitId":"ivyy-poison"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":175,"author":{"gitId":"ivyy-poison"},"content":"        assert false : \"Task should not be null\";","lastModifiedDate":"2023-09-08"},{"lineNumber":176,"author":{"gitId":"ivyy-poison"},"content":"        return null;","lastModifiedDate":"2023-09-02"},{"lineNumber":177,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":178,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":179,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":180,"author":{"gitId":"ivyy-poison"},"content":"    private Task markTask(String command) {","lastModifiedDate":"2023-09-02"},{"lineNumber":181,"author":{"gitId":"ivyy-poison"},"content":"        try {","lastModifiedDate":"2023-08-20"},{"lineNumber":182,"author":{"gitId":"ivyy-poison"},"content":"            int index \u003d Integer.parseInt(command.split(\" \")[1]) - 1;","lastModifiedDate":"2023-08-20"},{"lineNumber":183,"author":{"gitId":"ivyy-poison"},"content":"            Task task \u003d tasks.get(index);","lastModifiedDate":"2023-08-20"},{"lineNumber":184,"author":{"gitId":"ivyy-poison"},"content":"            task.markAsDone();","lastModifiedDate":"2023-08-20"},{"lineNumber":185,"author":{"gitId":"ivyy-poison"},"content":"            storage.write(tasks.getTasks());","lastModifiedDate":"2023-08-27"},{"lineNumber":186,"author":{"gitId":"ivyy-poison"},"content":"            ui.printMarkedTaskConfirmation(task);","lastModifiedDate":"2023-08-27"},{"lineNumber":187,"author":{"gitId":"ivyy-poison"},"content":"            return task;","lastModifiedDate":"2023-09-02"},{"lineNumber":188,"author":{"gitId":"ivyy-poison"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-20"},{"lineNumber":189,"author":{"gitId":"ivyy-poison"},"content":"            ui.printErrorMessage(new DukeException(\"Invalid command format\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":190,"author":{"gitId":"ivyy-poison"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":191,"author":{"gitId":"ivyy-poison"},"content":"            ui.printErrorMessage(e);","lastModifiedDate":"2023-08-27"},{"lineNumber":192,"author":{"gitId":"ivyy-poison"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":193,"author":{"gitId":"ivyy-poison"},"content":"        assert false : \"Task should not be null\";","lastModifiedDate":"2023-09-08"},{"lineNumber":194,"author":{"gitId":"ivyy-poison"},"content":"        return null;","lastModifiedDate":"2023-09-02"},{"lineNumber":195,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":196,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":197,"author":{"gitId":"ivyy-poison"},"content":"    private Task deleteTask(String command) {","lastModifiedDate":"2023-09-02"},{"lineNumber":198,"author":{"gitId":"ivyy-poison"},"content":"        try {","lastModifiedDate":"2023-08-20"},{"lineNumber":199,"author":{"gitId":"ivyy-poison"},"content":"            int index \u003d Integer.parseInt(command.split(\" \")[1]) - 1;","lastModifiedDate":"2023-08-20"},{"lineNumber":200,"author":{"gitId":"ivyy-poison"},"content":"            Task task \u003d tasks.remove(index);","lastModifiedDate":"2023-08-20"},{"lineNumber":201,"author":{"gitId":"ivyy-poison"},"content":"            storage.write(tasks.getTasks());","lastModifiedDate":"2023-08-27"},{"lineNumber":202,"author":{"gitId":"ivyy-poison"},"content":"            ui.printDeletedTaskConfirmation(task, tasks);","lastModifiedDate":"2023-08-27"},{"lineNumber":203,"author":{"gitId":"ivyy-poison"},"content":"            return task;","lastModifiedDate":"2023-09-02"},{"lineNumber":204,"author":{"gitId":"ivyy-poison"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-20"},{"lineNumber":205,"author":{"gitId":"ivyy-poison"},"content":"            ui.printErrorMessage(new DukeException(\"Invalid command format\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":206,"author":{"gitId":"ivyy-poison"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":207,"author":{"gitId":"ivyy-poison"},"content":"            ui.printErrorMessage(e);","lastModifiedDate":"2023-08-27"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":209,"author":{"gitId":"ivyy-poison"},"content":"        assert false : \"Task should not be null\";","lastModifiedDate":"2023-09-08"},{"lineNumber":210,"author":{"gitId":"ivyy-poison"},"content":"        return null;","lastModifiedDate":"2023-09-02"},{"lineNumber":211,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ivyy-poison":210,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivyy-poison"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"ivyy-poison"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"ivyy-poison"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"ivyy-poison"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"ivyy-poison"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"ivyy-poison"},"content":"public class Launcher {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"ivyy-poison"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"ivyy-poison"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"ivyy-poison"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"ivyy-poison":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivyy-poison"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"ivyy-poison"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"ivyy-poison"},"content":"import duke.components.MainWindow;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"ivyy-poison"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"ivyy-poison"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"ivyy-poison"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"ivyy-poison"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"ivyy-poison"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"ivyy-poison"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"ivyy-poison"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"ivyy-poison"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"ivyy-poison"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"ivyy-poison"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"ivyy-poison"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"ivyy-poison"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"ivyy-poison"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"ivyy-poison"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"ivyy-poison"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"ivyy-poison"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"ivyy-poison"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"ivyy-poison"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"ivyy-poison"},"content":"            stage.show();","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"ivyy-poison"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"ivyy-poison"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"ivyy-poison"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"ivyy-poison"},"content":"}","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"ivyy-poison":33}},{"path":"src/main/java/duke/components/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivyy-poison"},"content":"package duke.components;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"ivyy-poison"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"ivyy-poison"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"ivyy-poison"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"ivyy-poison"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"ivyy-poison"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"ivyy-poison"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"ivyy-poison"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"ivyy-poison"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"ivyy-poison"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"ivyy-poison"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"ivyy-poison"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"ivyy-poison"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"ivyy-poison"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"ivyy-poison"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"ivyy-poison"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"ivyy-poison"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"ivyy-poison"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"ivyy-poison"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"ivyy-poison"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"ivyy-poison"},"content":"    @FXML","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"ivyy-poison"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"ivyy-poison"},"content":"    @FXML","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"ivyy-poison"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"ivyy-poison"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"ivyy-poison"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"ivyy-poison"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"ivyy-poison"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"ivyy-poison"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"ivyy-poison"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"ivyy-poison"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"ivyy-poison"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"ivyy-poison"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"ivyy-poison"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"ivyy-poison"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"ivyy-poison"},"content":"        displayPicture.setClip(new Circle(50, 50, 50));","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"ivyy-poison"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"ivyy-poison"},"content":"    private void flip() {","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"ivyy-poison"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"ivyy-poison"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"ivyy-poison"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"ivyy-poison"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"ivyy-poison"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"ivyy-poison"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"ivyy-poison"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"ivyy-poison"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"ivyy-poison"},"content":"        db.flip();","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"ivyy-poison"},"content":"        return db;","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"ivyy-poison"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"ivyy-poison":69}},{"path":"src/main/java/duke/components/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivyy-poison"},"content":"package duke.components;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"ivyy-poison"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"ivyy-poison"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"ivyy-poison"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"ivyy-poison"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"ivyy-poison"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"ivyy-poison"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"ivyy-poison"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"ivyy-poison"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"ivyy-poison"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"ivyy-poison"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"ivyy-poison"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"ivyy-poison"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"ivyy-poison"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"ivyy-poison"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"ivyy-poison"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"ivyy-poison"},"content":"    @FXML","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"ivyy-poison"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"ivyy-poison"},"content":"    @FXML","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"ivyy-poison"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"ivyy-poison"},"content":"    @FXML","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"ivyy-poison"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"ivyy-poison"},"content":"    @FXML","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"ivyy-poison"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"ivyy-poison"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"ivyy-poison"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"ivyy-poison"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"ivyy-poison"},"content":"    @FXML","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"ivyy-poison"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"ivyy-poison"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"ivyy-poison"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"ivyy-poison"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"ivyy-poison"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"ivyy-poison"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"ivyy-poison"},"content":"    @FXML","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"ivyy-poison"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"ivyy-poison"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"ivyy-poison"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"ivyy-poison"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"ivyy-poison"},"content":"            PauseTransition pause \u003d new PauseTransition(Duration.seconds(2));","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"ivyy-poison"},"content":"            pause.setOnFinished(event -\u003e {","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"ivyy-poison"},"content":"                Platform.exit();","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"ivyy-poison"},"content":"            });","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"ivyy-poison"},"content":"            pause.play();","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"ivyy-poison"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"ivyy-poison"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"ivyy-poison"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"ivyy-poison"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"ivyy-poison"},"content":"        );","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"ivyy-poison"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"ivyy-poison"},"content":"}","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"ivyy-poison":64}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivyy-poison"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"ivyy-poison"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"ivyy-poison"},"content":" * Encapsulates exceptions specific to Duke.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"ivyy-poison"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"ivyy-poison"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"ivyy-poison"},"content":"     * Constructs a DukeException object with the given message.","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"ivyy-poison"},"content":"     * @param message The message of the exception.","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"ivyy-poison"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"ivyy-poison"},"content":"        super(message);","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"ivyy-poison"},"content":"     * Constructs a DukeException object with the given message and cause.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"ivyy-poison"},"content":"     * @param message The message of the exception.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"ivyy-poison"},"content":"     * @param cause The cause of the exception.","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"ivyy-poison"},"content":"    public DukeException(String message, Throwable cause) {","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"ivyy-poison"},"content":"        super(message, cause);","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"ivyy-poison"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"ivyy-poison":26}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivyy-poison"},"content":"package duke.parser;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"ivyy-poison"},"content":"import duke.CommandType;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"ivyy-poison"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"ivyy-poison"},"content":" * Encapsulates a parser that parses user input.","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"ivyy-poison"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"ivyy-poison"},"content":"public class Parser {","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"ivyy-poison"},"content":"     * Returns the command type of the given command.","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"ivyy-poison"},"content":"     * @param command The command to be parsed.","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"ivyy-poison"},"content":"     * @return The command type of the given command.","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"ivyy-poison"},"content":"    public CommandType parseCommandType(String command) {","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"ivyy-poison"},"content":"        assert command !\u003d null : \"Command should not be null\";","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"ivyy-poison"},"content":"        if (command.startsWith(\"list\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"ivyy-poison"},"content":"            return CommandType.LIST;","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"ivyy-poison"},"content":"        } else if (command.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"ivyy-poison"},"content":"            return CommandType.MARK;","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"ivyy-poison"},"content":"        } else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"ivyy-poison"},"content":"            return CommandType.DELETE;","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"ivyy-poison"},"content":"        } else if (command.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"ivyy-poison"},"content":"            return CommandType.TODO;","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"ivyy-poison"},"content":"        } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"ivyy-poison"},"content":"            return CommandType.DEADLINE;","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"ivyy-poison"},"content":"        } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"ivyy-poison"},"content":"            return CommandType.EVENT;","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"ivyy-poison"},"content":"        } else if (command.startsWith(\"find\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"ivyy-poison"},"content":"            return CommandType.FIND;","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"ivyy-poison"},"content":"        } else if (command.startsWith(\"bye\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"ivyy-poison"},"content":"            return CommandType.EXIT;","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"ivyy-poison"},"content":"        } else if (command.startsWith(\"view schedule\")) {","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"ivyy-poison"},"content":"            return CommandType.SCHEDULE;","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"ivyy-poison"},"content":"        } else {","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"ivyy-poison"},"content":"            return CommandType.UNKNOWN;","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"ivyy-poison"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"ivyy-poison"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"ivyy-poison":41}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivyy-poison"},"content":"package duke.storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"ivyy-poison"},"content":"import java.io.File;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"ivyy-poison"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"ivyy-poison"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"ivyy-poison"},"content":"import java.util.List;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"ivyy-poison"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"ivyy-poison"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"ivyy-poison"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"ivyy-poison"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"ivyy-poison"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"ivyy-poison"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"ivyy-poison"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"ivyy-poison"},"content":" * Encapsulates the storage of tasks in duke.txt.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"ivyy-poison"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"ivyy-poison"},"content":"public class Storage {","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"ivyy-poison"},"content":"    private File file;","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"ivyy-poison"},"content":"    private String filePath;","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"ivyy-poison"},"content":"     * Constructs a Storage object with the default file path.","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"ivyy-poison"},"content":"    public Storage() {","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"ivyy-poison"},"content":"        this.filePath \u003d \"data/duke.txt\";","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"ivyy-poison"},"content":"        this.file \u003d getFile();","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"ivyy-poison"},"content":"    private File getFile() {","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"ivyy-poison"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"ivyy-poison"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"ivyy-poison"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"ivyy-poison"},"content":"            file.createNewFile();","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"ivyy-poison"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"ivyy-poison"},"content":"            new DukeException(\"Unable to create file: \" + e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"ivyy-poison"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"ivyy-poison"},"content":"        return file;","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"ivyy-poison"},"content":"    private static Task addTaskFromStorage(String task) {","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"ivyy-poison"},"content":"        Task newTask \u003d null;","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"ivyy-poison"},"content":"        if (task.startsWith(\"T\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"ivyy-poison"},"content":"            newTask \u003d ToDo.createToDoFromStorage(task);","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"ivyy-poison"},"content":"        } else if (task.startsWith(\"D\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"ivyy-poison"},"content":"            newTask \u003d Deadline.createDeadlineFromStorage(task);","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"ivyy-poison"},"content":"        } else if (task.startsWith(\"E\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"ivyy-poison"},"content":"            newTask \u003d Event.createEventFromStorage(task);","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"ivyy-poison"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"ivyy-poison"},"content":"        assert newTask !\u003d null : \"Task should not be null\";","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"ivyy-poison"},"content":"        return newTask;","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"ivyy-poison"},"content":"     * Reads the tasks from duke.txt and returns them as a list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"ivyy-poison"},"content":"     * @return The list of tasks read from duke.txt.","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"ivyy-poison"},"content":"     * @throws DukeException If there is an error reading from duke.txt.","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"ivyy-poison"},"content":"    public List\u003cTask\u003e readTasks() throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"ivyy-poison"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"ivyy-poison"},"content":"        try (Scanner sc \u003d new Scanner(file)) {","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"ivyy-poison"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"ivyy-poison"},"content":"                String entry \u003d sc.nextLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"ivyy-poison"},"content":"                Task newTask \u003d addTaskFromStorage(entry);","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"ivyy-poison"},"content":"                tasks.add(newTask);","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"ivyy-poison"},"content":"                System.out.println(newTask);","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"ivyy-poison"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"ivyy-poison"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"ivyy-poison"},"content":"            throw new DukeException(\"Unable to read from storage: \" + e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"ivyy-poison"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"ivyy-poison"},"content":"        return tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":77,"author":{"gitId":"ivyy-poison"},"content":"     * Writes the given list of tasks to duke.txt.","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"ivyy-poison"},"content":"     * @param tasks The list of tasks to be written to duke.txt.","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"ivyy-poison"},"content":"     * @throws DukeException If there is an error writing to duke.txt.","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"ivyy-poison"},"content":"    public void write(List\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"ivyy-poison"},"content":"        assert tasks !\u003d null : \"Tasks should not be null\";","lastModifiedDate":"2023-09-08"},{"lineNumber":84,"author":{"gitId":"ivyy-poison"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"ivyy-poison"},"content":"            FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"ivyy-poison"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"ivyy-poison"},"content":"                fw.write(task.toStorageString() + \"\\n\");","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"ivyy-poison"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"ivyy-poison"},"content":"            fw.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"ivyy-poison"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"ivyy-poison"},"content":"            throw new DukeException(\"Unable to write to storage: \" + e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"ivyy-poison"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":93,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":95,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":96,"author":{"gitId":"ivyy-poison"},"content":"     * Writes the given task to duke.txt.","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"ivyy-poison"},"content":"     * @param newTask The task to be written to duke.txt.","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"ivyy-poison"},"content":"     * @throws DukeException If there is an error writing to duke.txt.","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"ivyy-poison"},"content":"    public void write(Task newTask) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":102,"author":{"gitId":"ivyy-poison"},"content":"        assert newTask !\u003d null : \"Task should not be null\";","lastModifiedDate":"2023-09-08"},{"lineNumber":103,"author":{"gitId":"ivyy-poison"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":104,"author":{"gitId":"ivyy-poison"},"content":"            FileWriter fw \u003d new FileWriter(file, true);","lastModifiedDate":"2023-08-27"},{"lineNumber":105,"author":{"gitId":"ivyy-poison"},"content":"            fw.write(newTask.toStorageString() + \"\\n\");","lastModifiedDate":"2023-08-27"},{"lineNumber":106,"author":{"gitId":"ivyy-poison"},"content":"            fw.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":107,"author":{"gitId":"ivyy-poison"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":108,"author":{"gitId":"ivyy-poison"},"content":"            throw new DukeException(\"Unable to write to storage: \" + e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":109,"author":{"gitId":"ivyy-poison"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":110,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":111,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":112,"author":{"gitId":"ivyy-poison"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"ivyy-poison":112}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivyy-poison"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"ivyy-poison"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"ivyy-poison"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"ivyy-poison"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"ivyy-poison"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"ivyy-poison"},"content":" * Encapsulates a task that needs to be done before a specific date/time.","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"ivyy-poison"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"ivyy-poison"},"content":"public class Deadline extends Task implements Temporal {","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"ivyy-poison"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"ivyy-poison"},"content":"     * Constructor for a Deadline object with the given description and by.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"ivyy-poison"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"ivyy-poison"},"content":"     * @param by The date/time by which the deadline needs to be done.","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"ivyy-poison"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"ivyy-poison"},"content":"        super(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"ivyy-poison"},"content":"        this.by \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"d MMM yyyy HHmm\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"ivyy-poison"},"content":"     * Constructs a Deadline object with a given description and by as given in command string.","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"ivyy-poison"},"content":"     * @param command The command to create the deadline.","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"ivyy-poison"},"content":"     * @return The deadline object constructed from the given command.","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"ivyy-poison"},"content":"    public static Deadline createDeadlineFromCommand(String command) throws DukeException {","lastModifiedDate":"2023-08-20"},{"lineNumber":33,"author":{"gitId":"ivyy-poison"},"content":"        if (command.length() \u003c\u003d 9) {","lastModifiedDate":"2023-08-20"},{"lineNumber":34,"author":{"gitId":"ivyy-poison"},"content":"            throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-20"},{"lineNumber":35,"author":{"gitId":"ivyy-poison"},"content":"        } else if (!command.contains(\" /by \")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"ivyy-poison"},"content":"            throw new DukeException(\"The deadline command must contain a /by.\");","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"ivyy-poison"},"content":"        } else if (command.endsWith(\" /by \")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":38,"author":{"gitId":"ivyy-poison"},"content":"            throw new DukeException(\"The deadline command must contain a description after /by.\");","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"ivyy-poison"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":41,"author":{"gitId":"ivyy-poison"},"content":"        String[] split \u003d command.substring(9).split(\" /by \");","lastModifiedDate":"2023-08-20"},{"lineNumber":42,"author":{"gitId":"ivyy-poison"},"content":"        return new Deadline(split[0], split[1]);","lastModifiedDate":"2023-08-20"},{"lineNumber":43,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":45,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"ivyy-poison"},"content":"     * Constructs a Deadline object with the given description, by, and done status.","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"ivyy-poison"},"content":"     * @param storageString The string from duke.txt representing a row of data for a deadline.","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"ivyy-poison"},"content":"     * @return The deadline object constructed from the given storage string.","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"ivyy-poison"},"content":"    public static Deadline createDeadlineFromStorage(String storageString) {","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"ivyy-poison"},"content":"        String[] split \u003d storageString.split(\" \\\\| \");","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"ivyy-poison"},"content":"        String isDone \u003d split[1];","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"ivyy-poison"},"content":"        String taskDescription \u003d split[2];","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"ivyy-poison"},"content":"        String by \u003d split[3];","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"ivyy-poison"},"content":"        Deadline deadline \u003d new Deadline(taskDescription, by);","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"ivyy-poison"},"content":"        if (isDone.equals(\"1\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"ivyy-poison"},"content":"            deadline.markAsDone();","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"ivyy-poison"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"ivyy-poison"},"content":"        return deadline;","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"ivyy-poison"},"content":"     * Returns the string representation of the deadline.","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"ivyy-poison"},"content":"     * @return The string representation of the deadline.","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"ivyy-poison"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":69,"author":{"gitId":"ivyy-poison"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":70,"author":{"gitId":"ivyy-poison"},"content":"        String byString \u003d by.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));","lastModifiedDate":"2023-09-15"},{"lineNumber":71,"author":{"gitId":"ivyy-poison"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + byString + \")\";","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":73,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"ivyy-poison"},"content":"     * Returns the string representation of the deadline for storage in duke.txt.","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"ivyy-poison"},"content":"     * @return The string representation of the deadline for storage in duke.txt.","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"ivyy-poison"},"content":"    public String toStorageString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"ivyy-poison"},"content":"        String byString \u003d by.format(DateTimeFormatter.ofPattern(\"d MMM yyyy HHmm\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"ivyy-poison"},"content":"        return \"D\" + super.toStorageString() + \" | \" + byString;","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":84,"author":{"gitId":"ivyy-poison"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":85,"author":{"gitId":"ivyy-poison"},"content":"    public String getType() {","lastModifiedDate":"2023-09-15"},{"lineNumber":86,"author":{"gitId":"ivyy-poison"},"content":"        return \"deadline\";","lastModifiedDate":"2023-09-15"},{"lineNumber":87,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":88,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":89,"author":{"gitId":"ivyy-poison"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":90,"author":{"gitId":"ivyy-poison"},"content":"    public LocalDateTime getStartTime() {","lastModifiedDate":"2023-09-15"},{"lineNumber":91,"author":{"gitId":"ivyy-poison"},"content":"        return this.by;","lastModifiedDate":"2023-09-15"},{"lineNumber":92,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":93,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":94,"author":{"gitId":"ivyy-poison"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":95,"author":{"gitId":"ivyy-poison"},"content":"    public LocalDateTime getEndTime() {","lastModifiedDate":"2023-09-15"},{"lineNumber":96,"author":{"gitId":"ivyy-poison"},"content":"        return this.by;","lastModifiedDate":"2023-09-15"},{"lineNumber":97,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":98,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":99,"author":{"gitId":"ivyy-poison"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":100,"author":{"gitId":"ivyy-poison"},"content":"    public boolean isWithinPeriod(LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-09-15"},{"lineNumber":101,"author":{"gitId":"ivyy-poison"},"content":"        return !by.isAfter(to) \u0026\u0026 !by.isBefore(from);","lastModifiedDate":"2023-09-15"},{"lineNumber":102,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":103,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":104,"author":{"gitId":"ivyy-poison"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"ivyy-poison":104}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivyy-poison"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"ivyy-poison"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"ivyy-poison"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"ivyy-poison"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"ivyy-poison"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"ivyy-poison"},"content":" * Encapsulates a task that starts at a specific time and ends at a specific time.","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"ivyy-poison"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"ivyy-poison"},"content":"public class Event extends Task implements Temporal {","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"ivyy-poison"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"ivyy-poison"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"ivyy-poison"},"content":"     * Constructor for an Event object with the given description, start time, and end time.","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"ivyy-poison"},"content":"     * @param description The description of the event.","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"ivyy-poison"},"content":"     * @param from        The start time of the event.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"ivyy-poison"},"content":"     * @param to          The end time of the event.","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"ivyy-poison"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"ivyy-poison"},"content":"        super(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"ivyy-poison"},"content":"        this.from \u003d LocalDateTime.parse(from, DateTimeFormatter.ofPattern(\"d MMM yyyy HHmm\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"ivyy-poison"},"content":"        this.to \u003d LocalDateTime.parse(to, DateTimeFormatter.ofPattern(\"d MMM yyyy HHmm\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"ivyy-poison"},"content":"     * Constructs an Event object with a given description, start time, end time.","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"ivyy-poison"},"content":"     * @param command The command to create the event.","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"ivyy-poison"},"content":"     * @return The event object constructed from the given command.","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"ivyy-poison"},"content":"    public static Event createEventFromCommand(String command) throws DukeException {","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"ivyy-poison"},"content":"        if (command.length() \u003c\u003d 6) {","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"ivyy-poison"},"content":"            throw new DukeException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2023-08-20"},{"lineNumber":38,"author":{"gitId":"ivyy-poison"},"content":"        } else if (!command.contains(\" /from \")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"ivyy-poison"},"content":"            throw new DukeException(\"The event command must contain a /from.\");","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"ivyy-poison"},"content":"        } else if (!command.contains(\" /to \")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":41,"author":{"gitId":"ivyy-poison"},"content":"            throw new DukeException(\"The event command must contain a /to.\");","lastModifiedDate":"2023-08-20"},{"lineNumber":42,"author":{"gitId":"ivyy-poison"},"content":"        } else if (command.endsWith(\" /from \")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":43,"author":{"gitId":"ivyy-poison"},"content":"            throw new DukeException(\"The event command must contain a description after /from.\");","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"ivyy-poison"},"content":"        } else if (command.endsWith(\" /to \")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":45,"author":{"gitId":"ivyy-poison"},"content":"            throw new DukeException(\"The event command must contain a description after /to.\");","lastModifiedDate":"2023-08-20"},{"lineNumber":46,"author":{"gitId":"ivyy-poison"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":47,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":48,"author":{"gitId":"ivyy-poison"},"content":"        String[] tmpSplit \u003d command.substring(6).split(\" /from \");","lastModifiedDate":"2023-08-20"},{"lineNumber":49,"author":{"gitId":"ivyy-poison"},"content":"        String taskDescription \u003d tmpSplit[0];","lastModifiedDate":"2023-08-20"},{"lineNumber":50,"author":{"gitId":"ivyy-poison"},"content":"        String[] split \u003d tmpSplit[1].split(\" /to \");","lastModifiedDate":"2023-08-20"},{"lineNumber":51,"author":{"gitId":"ivyy-poison"},"content":"        String from \u003d split[0];","lastModifiedDate":"2023-08-20"},{"lineNumber":52,"author":{"gitId":"ivyy-poison"},"content":"        String to \u003d split[1];","lastModifiedDate":"2023-08-20"},{"lineNumber":53,"author":{"gitId":"ivyy-poison"},"content":"        return new Event(taskDescription, from, to);","lastModifiedDate":"2023-08-20"},{"lineNumber":54,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":55,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":56,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"ivyy-poison"},"content":"     * Constructs an Event object with the given description, start time, end time, and done status.","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"ivyy-poison"},"content":"     * @param storageString The string from duke.txt representing a row of data for an event.","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"ivyy-poison"},"content":"     * @return The event object constructed from the given string.","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"ivyy-poison"},"content":"    public static Event createEventFromStorage(String storageString) {","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"ivyy-poison"},"content":"        String[] split \u003d storageString.split(\" \\\\| \");","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"ivyy-poison"},"content":"        String isDone \u003d split[1];","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"ivyy-poison"},"content":"        String taskDescription \u003d split[2];","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"ivyy-poison"},"content":"        String from \u003d split[3];","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"ivyy-poison"},"content":"        String to \u003d split[4];","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"ivyy-poison"},"content":"        Event event \u003d new Event(taskDescription, from, to);","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"ivyy-poison"},"content":"        if (isDone.equals(\"1\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"ivyy-poison"},"content":"            event.markAsDone();","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"ivyy-poison"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"ivyy-poison"},"content":"        return event;","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":76,"author":{"gitId":"ivyy-poison"},"content":"     * Returns the string representation of the event.","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"ivyy-poison"},"content":"     * @return The string representation of the event.","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"ivyy-poison"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":81,"author":{"gitId":"ivyy-poison"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":82,"author":{"gitId":"ivyy-poison"},"content":"        String fromString \u003d from.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));","lastModifiedDate":"2023-09-15"},{"lineNumber":83,"author":{"gitId":"ivyy-poison"},"content":"        String toString \u003d to.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));","lastModifiedDate":"2023-09-15"},{"lineNumber":84,"author":{"gitId":"ivyy-poison"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + fromString + \" to: \" + toString + \")\";","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":86,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":87,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":88,"author":{"gitId":"ivyy-poison"},"content":"     * Returns the string representation of the event for storage in duke.txt.","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"ivyy-poison"},"content":"     * @return The string representation of the event for storage in duke.txt.","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"ivyy-poison"},"content":"    public String toStorageString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":93,"author":{"gitId":"ivyy-poison"},"content":"        String fromString \u003d from.format(DateTimeFormatter.ofPattern(\"d MMM yyyy HHmm\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"ivyy-poison"},"content":"        String toString \u003d to.format(DateTimeFormatter.ofPattern(\"d MMM yyyy HHmm\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":95,"author":{"gitId":"ivyy-poison"},"content":"        return \"E\" + super.toStorageString() + \" | \" + fromString + \" | \" + toString;","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":98,"author":{"gitId":"ivyy-poison"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":99,"author":{"gitId":"ivyy-poison"},"content":"    public String getType() {","lastModifiedDate":"2023-09-15"},{"lineNumber":100,"author":{"gitId":"ivyy-poison"},"content":"        return \"event\";","lastModifiedDate":"2023-09-15"},{"lineNumber":101,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":102,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":103,"author":{"gitId":"ivyy-poison"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":104,"author":{"gitId":"ivyy-poison"},"content":"    public LocalDateTime getStartTime() {","lastModifiedDate":"2023-09-15"},{"lineNumber":105,"author":{"gitId":"ivyy-poison"},"content":"        return this.from;","lastModifiedDate":"2023-09-15"},{"lineNumber":106,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":107,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":108,"author":{"gitId":"ivyy-poison"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":109,"author":{"gitId":"ivyy-poison"},"content":"    public LocalDateTime getEndTime() {","lastModifiedDate":"2023-09-15"},{"lineNumber":110,"author":{"gitId":"ivyy-poison"},"content":"        return this.to;","lastModifiedDate":"2023-09-15"},{"lineNumber":111,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":112,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":113,"author":{"gitId":"ivyy-poison"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":114,"author":{"gitId":"ivyy-poison"},"content":"    public boolean isWithinPeriod(LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-09-15"},{"lineNumber":115,"author":{"gitId":"ivyy-poison"},"content":"        return !from.isAfter(end) \u0026\u0026 !to.isBefore(start);","lastModifiedDate":"2023-09-15"},{"lineNumber":116,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":117,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":118,"author":{"gitId":"ivyy-poison"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"ivyy-poison":118}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivyy-poison"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ivyy-poison"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"ivyy-poison"},"content":" * Encapsulates a task.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"ivyy-poison"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"ivyy-poison"},"content":"public abstract class Task {","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"ivyy-poison"},"content":"    protected String description;","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"ivyy-poison"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"ivyy-poison"},"content":"     * Constructor for a Task object with the given description.","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"ivyy-poison"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"ivyy-poison"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"ivyy-poison"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"ivyy-poison"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"ivyy-poison"},"content":"     * Returns the status icon associated with whether a task is done or not.","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"ivyy-poison"},"content":"     * @return The status icon associated with whether a task is done or not.","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"ivyy-poison"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"ivyy-poison"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"ivyy-poison"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"ivyy-poison"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-20"},{"lineNumber":33,"author":{"gitId":"ivyy-poison"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-20"},{"lineNumber":34,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":35,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"ivyy-poison"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"ivyy-poison"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"ivyy-poison"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":42,"author":{"gitId":"ivyy-poison"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-08-20"},{"lineNumber":43,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"ivyy-poison"},"content":"     * Returns the string representation of the task for storage in duke.txt.","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"ivyy-poison"},"content":"     * @return The string representation of the task for storage in duke.txt..","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"ivyy-poison"},"content":"    public String toStorageString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"ivyy-poison"},"content":"        return \" | \" + (this.isDone ? 1 : 0) + \" | \" + this.description;","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"ivyy-poison"},"content":"     * Returns the description of the task.","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"ivyy-poison"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"ivyy-poison"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"ivyy-poison"},"content":"        return this.description;","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":63,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":64,"author":{"gitId":"ivyy-poison"},"content":"     * Returns the type of the task.","lastModifiedDate":"2023-09-15"},{"lineNumber":65,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":66,"author":{"gitId":"ivyy-poison"},"content":"     * @return The type of the task.","lastModifiedDate":"2023-09-15"},{"lineNumber":67,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":68,"author":{"gitId":"ivyy-poison"},"content":"    public abstract String getType();","lastModifiedDate":"2023-09-15"},{"lineNumber":69,"author":{"gitId":"ivyy-poison"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"ivyy-poison":69}},{"path":"src/main/java/duke/tasks/Temporal.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivyy-poison"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"ivyy-poison"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"ivyy-poison"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"ivyy-poison"},"content":" * Encapsulates a task that starts at a specific time and ends at a specific time.","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"ivyy-poison"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"ivyy-poison"},"content":"public interface Temporal {","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"ivyy-poison"},"content":"     * Returns the start time of the temporal object.","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"ivyy-poison"},"content":"     * @return The start time of the temporal object.","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"ivyy-poison"},"content":"    LocalDateTime getStartTime();","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"ivyy-poison"},"content":"     * Returns the end time of the temporal object.","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"ivyy-poison"},"content":"     * @return The end time of the temporal object.","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"ivyy-poison"},"content":"    LocalDateTime getEndTime();","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"ivyy-poison"},"content":"     * Returns true if the temporal object is within the given period.","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"ivyy-poison"},"content":"     * @param start The start of the period.","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"ivyy-poison"},"content":"     * @param end The end of the period.","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"ivyy-poison"},"content":"     * @return True if the temporal object is within the given period.","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"ivyy-poison"},"content":"    boolean isWithinPeriod(LocalDateTime start, LocalDateTime end);","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"ivyy-poison"},"content":"}","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"ivyy-poison":33}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivyy-poison"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"ivyy-poison"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"ivyy-poison"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"ivyy-poison"},"content":" * Encapsulates a todo task.","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"ivyy-poison"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"ivyy-poison"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"ivyy-poison"},"content":"     * Constructor for a ToDo object with the given description.","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"ivyy-poison"},"content":"     * @param description The description of the todo.","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"ivyy-poison"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"ivyy-poison"},"content":"        super(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"ivyy-poison"},"content":"     * Constructs a ToDo object with a given description as found in the command.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"ivyy-poison"},"content":"     * @param command The command to create the todo.","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"ivyy-poison"},"content":"     * @return The todo object constructed from the given command.","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"ivyy-poison"},"content":"    public static ToDo createToDoFromCommand(String command) throws DukeException {","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"ivyy-poison"},"content":"        if (command.length() \u003c\u003d 5) {","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"ivyy-poison"},"content":"            throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"ivyy-poison"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"ivyy-poison"},"content":"        return new ToDo(command.substring(5));","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"ivyy-poison"},"content":"     * Constructs a ToDo object with the given description and done status.","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"ivyy-poison"},"content":"     * @param storageString The string from duke.txt representing a row of data for a todo.","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"ivyy-poison"},"content":"     * @return The todo object constructed from the given storage string.","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"ivyy-poison"},"content":"    public static ToDo createToDoFromStorage(String storageString) {","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"ivyy-poison"},"content":"        String[] split \u003d storageString.split(\" \\\\| \");","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"ivyy-poison"},"content":"        String isDone \u003d split[1];","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"ivyy-poison"},"content":"        String taskDescription \u003d split[2];","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"ivyy-poison"},"content":"        ToDo todo \u003d new ToDo(taskDescription);","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"ivyy-poison"},"content":"        if (isDone.equals(\"1\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"ivyy-poison"},"content":"            todo.markAsDone();","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"ivyy-poison"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"ivyy-poison"},"content":"        return todo;","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"ivyy-poison"},"content":"     * Returns the string representation of the todo.","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"ivyy-poison"},"content":"     * @return The string representation of the todo.","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"ivyy-poison"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":55,"author":{"gitId":"ivyy-poison"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":56,"author":{"gitId":"ivyy-poison"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-20"},{"lineNumber":57,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":58,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"ivyy-poison"},"content":"     * Returns the string representation of the todo for storage in duke.txt.","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"ivyy-poison"},"content":"     * @return The string representation of the todo for storage in duke.txt.","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"ivyy-poison"},"content":"    public String toStorageString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"ivyy-poison"},"content":"        return \"T\" + super.toStorageString();","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":68,"author":{"gitId":"ivyy-poison"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":69,"author":{"gitId":"ivyy-poison"},"content":"    public String getType() {","lastModifiedDate":"2023-09-15"},{"lineNumber":70,"author":{"gitId":"ivyy-poison"},"content":"        return \"todo\";","lastModifiedDate":"2023-09-15"},{"lineNumber":71,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":72,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":73,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":74,"author":{"gitId":"ivyy-poison"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"ivyy-poison":74}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivyy-poison"},"content":"package duke.ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"ivyy-poison"},"content":"import java.util.List;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"ivyy-poison"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"ivyy-poison"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"ivyy-poison"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"ivyy-poison"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"ivyy-poison"},"content":" * Encapsulates the user interface of the application.","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"ivyy-poison"},"content":" * It provides methods to print various messages to the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"ivyy-poison"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"ivyy-poison"},"content":"public class Ui {","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"ivyy-poison"},"content":"    private static final String LOGO \u003d \",------.,--.              ,--.  \\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"ivyy-poison"},"content":"            + \"|  .---\\\u0027|  |,-.,--.,--. ,-|  |  \\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"ivyy-poison"},"content":"            + \"|  `--, |     /|  ||  |\u0027 .-. |   \\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"ivyy-poison"},"content":"            + \"|  `---.|  \\\\\\\\  \\\\\\\\  \u0027\u0027  \u0027\\\\\\\\ `-\\\u0027   \\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"ivyy-poison"},"content":"            + \"`------\u0027`--\u0027`--\u0027`----\u0027  `---\u0027 \\n\";","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"ivyy-poison"},"content":"    private static final String LINE \u003d \"-\".repeat(60);","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"ivyy-poison"},"content":"     * Prints the welcome message to the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"ivyy-poison"},"content":"    public void printWelcomeMessage() {","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"ivyy-poison"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"ivyy-poison"},"content":"        System.out.println(\"Hello! I\u0027m \\n\");","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"ivyy-poison"},"content":"        System.out.println(LOGO);","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"ivyy-poison"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"ivyy-poison"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"ivyy-poison"},"content":"     * Returns the welcome message to the user.","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"ivyy-poison"},"content":"     * @return The welcome message as a String.","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"ivyy-poison"},"content":"    public String displayWelcomeMessage() {","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"ivyy-poison"},"content":"        return \"Hello! I\u0027m \\n\" + LOGO + \"What can I do for you?\";","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"ivyy-poison"},"content":"     * Prints the farewell message to the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"ivyy-poison"},"content":"    public void printFarewellMessage() {","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"ivyy-poison"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"ivyy-poison"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"ivyy-poison"},"content":"     * Returns the farewell message to the user.","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"ivyy-poison"},"content":"     * @return The farewell message as a String.","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"ivyy-poison"},"content":"    public String displayFarewellMessage() {","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"ivyy-poison"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"ivyy-poison"},"content":"     * Prints confirmation when user successfully adds task to the list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"ivyy-poison"},"content":"     * @param task The Newly added task","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"ivyy-poison"},"content":"     * @param tasks The updated list of tasks","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"ivyy-poison"},"content":"    public void printAddedTaskConfirmation(Task task, TaskList tasks) {","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"ivyy-poison"},"content":"        assert task !\u003d null : \"Task should not be null\";","lastModifiedDate":"2023-09-08"},{"lineNumber":68,"author":{"gitId":"ivyy-poison"},"content":"        assert tasks !\u003d null : \"List of tasks should not be null\";","lastModifiedDate":"2023-09-08"},{"lineNumber":69,"author":{"gitId":"ivyy-poison"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"ivyy-poison"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"ivyy-poison"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"ivyy-poison"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"ivyy-poison"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"ivyy-poison"},"content":"     * Returns confirmation when user successfully adds task to the list of tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"ivyy-poison"},"content":"     * @param task The Newly added task","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"ivyy-poison"},"content":"     * @param tasks The updated list of tasks","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"ivyy-poison"},"content":"     * @return The confirmation message as a String.","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"ivyy-poison"},"content":"    public String displayAddedTaskConfirmation(Task task, TaskList tasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"ivyy-poison"},"content":"        assert task !\u003d null : \"Task should not be null\";","lastModifiedDate":"2023-09-08"},{"lineNumber":85,"author":{"gitId":"ivyy-poison"},"content":"        assert tasks !\u003d null : \"List of tasks should not be null\";","lastModifiedDate":"2023-09-08"},{"lineNumber":86,"author":{"gitId":"ivyy-poison"},"content":"        return \"Got it. I\u0027ve added this task: \\n\" + \"  \" + task + \"\\n\" + \"Now you have \" + tasks.size()","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"ivyy-poison"},"content":"                + \" tasks in the list.\";","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":91,"author":{"gitId":"ivyy-poison"},"content":"     * Prints confirmation when user successfully deletes task from the list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"ivyy-poison"},"content":"     * @param task The deleted task","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"ivyy-poison"},"content":"     * @param tasks The updated list of tasks","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"ivyy-poison"},"content":"    public void printDeletedTaskConfirmation(Task task, TaskList tasks) {","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"ivyy-poison"},"content":"        assert task !\u003d null : \"Task should not be null\";","lastModifiedDate":"2023-09-08"},{"lineNumber":98,"author":{"gitId":"ivyy-poison"},"content":"        assert tasks !\u003d null : \"List of tasks should not be null\";","lastModifiedDate":"2023-09-08"},{"lineNumber":99,"author":{"gitId":"ivyy-poison"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"ivyy-poison"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task: \");","lastModifiedDate":"2023-08-27"},{"lineNumber":101,"author":{"gitId":"ivyy-poison"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2023-08-27"},{"lineNumber":102,"author":{"gitId":"ivyy-poison"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":103,"author":{"gitId":"ivyy-poison"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-27"},{"lineNumber":104,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":105,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":106,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":107,"author":{"gitId":"ivyy-poison"},"content":"     * Returns confirmation when user successfully deletes task from the list of tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"ivyy-poison"},"content":"     * @param task The deleted task","lastModifiedDate":"2023-09-05"},{"lineNumber":110,"author":{"gitId":"ivyy-poison"},"content":"     * @param tasks The updated list of tasks","lastModifiedDate":"2023-09-05"},{"lineNumber":111,"author":{"gitId":"ivyy-poison"},"content":"     * @return The confirmation message as a String.","lastModifiedDate":"2023-09-05"},{"lineNumber":112,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":113,"author":{"gitId":"ivyy-poison"},"content":"    public String displayDeletedTaskConfirmation(Task task, TaskList tasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"ivyy-poison"},"content":"        assert task !\u003d null : \"Task should not be null\";","lastModifiedDate":"2023-09-08"},{"lineNumber":115,"author":{"gitId":"ivyy-poison"},"content":"        assert tasks !\u003d null : \"List of tasks should not be null\";","lastModifiedDate":"2023-09-08"},{"lineNumber":116,"author":{"gitId":"ivyy-poison"},"content":"        return \"Noted. I\u0027ve removed this task: \\n\" + \"  \" + task + \"\\n\" + \"Now you have \" + tasks.size()","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"ivyy-poison"},"content":"                + \" tasks in the list.\";","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":121,"author":{"gitId":"ivyy-poison"},"content":"     * Prints confirmation when user successfully marks task as done.","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"ivyy-poison"},"content":"     * @param task The marked task","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"ivyy-poison"},"content":"    public void printMarkedTaskConfirmation(Task task) {","lastModifiedDate":"2023-08-27"},{"lineNumber":126,"author":{"gitId":"ivyy-poison"},"content":"        assert task !\u003d null : \"Task should not be null\";","lastModifiedDate":"2023-09-08"},{"lineNumber":127,"author":{"gitId":"ivyy-poison"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-27"},{"lineNumber":128,"author":{"gitId":"ivyy-poison"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done: \");","lastModifiedDate":"2023-08-27"},{"lineNumber":129,"author":{"gitId":"ivyy-poison"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2023-08-27"},{"lineNumber":130,"author":{"gitId":"ivyy-poison"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-27"},{"lineNumber":131,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":132,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":133,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":134,"author":{"gitId":"ivyy-poison"},"content":"     * Returns confirmation when user successfully marks task as done.","lastModifiedDate":"2023-09-11"},{"lineNumber":135,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":136,"author":{"gitId":"ivyy-poison"},"content":"     * @param task The marked task","lastModifiedDate":"2023-09-11"},{"lineNumber":137,"author":{"gitId":"ivyy-poison"},"content":"     * @return The confirmation message as a String.","lastModifiedDate":"2023-09-11"},{"lineNumber":138,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":139,"author":{"gitId":"ivyy-poison"},"content":"    public String displayMarkedTaskConfirmation(Task task) {","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"ivyy-poison"},"content":"        assert task !\u003d null : \"Task should not be null\";","lastModifiedDate":"2023-09-08"},{"lineNumber":141,"author":{"gitId":"ivyy-poison"},"content":"        return \"Nice! I\u0027ve marked this task as done: \\n\" + \"  \" + task;","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":145,"author":{"gitId":"ivyy-poison"},"content":"     * Prints the error message to the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"ivyy-poison"},"content":"     * @param e The exception that was thrown.","lastModifiedDate":"2023-08-30"},{"lineNumber":148,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":149,"author":{"gitId":"ivyy-poison"},"content":"    public void printErrorMessage(DukeException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":150,"author":{"gitId":"ivyy-poison"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-27"},{"lineNumber":151,"author":{"gitId":"ivyy-poison"},"content":"        System.out.println(\"OOPS!!! \" + e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":152,"author":{"gitId":"ivyy-poison"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-27"},{"lineNumber":153,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":154,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":155,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":156,"author":{"gitId":"ivyy-poison"},"content":"     * Returns the error message to the user.","lastModifiedDate":"2023-09-05"},{"lineNumber":157,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":158,"author":{"gitId":"ivyy-poison"},"content":"     * @param e The exception that was thrown.","lastModifiedDate":"2023-09-05"},{"lineNumber":159,"author":{"gitId":"ivyy-poison"},"content":"     * @return The error message as a String.","lastModifiedDate":"2023-09-05"},{"lineNumber":160,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":161,"author":{"gitId":"ivyy-poison"},"content":"    public String displayErrorMessage(DukeException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":162,"author":{"gitId":"ivyy-poison"},"content":"        return \"OOPS!!! \" + e.getMessage();","lastModifiedDate":"2023-09-02"},{"lineNumber":163,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":164,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":165,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":166,"author":{"gitId":"ivyy-poison"},"content":"     * Prints the list of tasks to the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":167,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":168,"author":{"gitId":"ivyy-poison"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":169,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":170,"author":{"gitId":"ivyy-poison"},"content":"    public void printList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-27"},{"lineNumber":171,"author":{"gitId":"ivyy-poison"},"content":"        assert tasks !\u003d null : \"List of tasks should not be null\";","lastModifiedDate":"2023-09-08"},{"lineNumber":172,"author":{"gitId":"ivyy-poison"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-27"},{"lineNumber":173,"author":{"gitId":"ivyy-poison"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-27"},{"lineNumber":174,"author":{"gitId":"ivyy-poison"},"content":"            System.out.println((i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2023-08-27"},{"lineNumber":175,"author":{"gitId":"ivyy-poison"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":176,"author":{"gitId":"ivyy-poison"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-27"},{"lineNumber":177,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":178,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":179,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":180,"author":{"gitId":"ivyy-poison"},"content":"     * Returns the list of tasks to the user.","lastModifiedDate":"2023-09-05"},{"lineNumber":181,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":182,"author":{"gitId":"ivyy-poison"},"content":"     * @param tasks","lastModifiedDate":"2023-09-05"},{"lineNumber":183,"author":{"gitId":"ivyy-poison"},"content":"     * @return The list of tasks as a String.","lastModifiedDate":"2023-09-05"},{"lineNumber":184,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":185,"author":{"gitId":"ivyy-poison"},"content":"    public String displayList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":186,"author":{"gitId":"ivyy-poison"},"content":"        assert tasks !\u003d null : \"List of tasks should not be null\";","lastModifiedDate":"2023-09-08"},{"lineNumber":187,"author":{"gitId":"ivyy-poison"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-09-02"},{"lineNumber":188,"author":{"gitId":"ivyy-poison"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":189,"author":{"gitId":"ivyy-poison"},"content":"            result +\u003d (i + 1) + \". \" + tasks.get(i) + \"\\n\";","lastModifiedDate":"2023-09-02"},{"lineNumber":190,"author":{"gitId":"ivyy-poison"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":191,"author":{"gitId":"ivyy-poison"},"content":"        return result;","lastModifiedDate":"2023-09-02"},{"lineNumber":192,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":193,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":194,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":195,"author":{"gitId":"ivyy-poison"},"content":"     * Prints the header string before the displayed search result.","lastModifiedDate":"2023-09-05"},{"lineNumber":196,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":197,"author":{"gitId":"ivyy-poison"},"content":"    public void printFindMessage() {","lastModifiedDate":"2023-08-30"},{"lineNumber":198,"author":{"gitId":"ivyy-poison"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-30"},{"lineNumber":199,"author":{"gitId":"ivyy-poison"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":200,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":201,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":202,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":203,"author":{"gitId":"ivyy-poison"},"content":"     * Returns a header string before the displayed search result.","lastModifiedDate":"2023-09-05"},{"lineNumber":204,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":205,"author":{"gitId":"ivyy-poison"},"content":"     * @return The header of search result as a String.","lastModifiedDate":"2023-09-05"},{"lineNumber":206,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":207,"author":{"gitId":"ivyy-poison"},"content":"    public String displayFindMessage() {","lastModifiedDate":"2023-09-02"},{"lineNumber":208,"author":{"gitId":"ivyy-poison"},"content":"        return \"Here are the matching tasks in your list:\";","lastModifiedDate":"2023-09-02"},{"lineNumber":209,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":210,"author":{"gitId":"ivyy-poison"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"ivyy-poison":210}},{"path":"src/main/java/duke/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivyy-poison"},"content":"package duke.util;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"ivyy-poison"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"ivyy-poison"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"ivyy-poison"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"ivyy-poison"},"content":"import java.util.List;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"ivyy-poison"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"ivyy-poison"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"ivyy-poison"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"ivyy-poison"},"content":"import duke.tasks.Temporal;","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"ivyy-poison"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"ivyy-poison"},"content":" * Encapsulates a list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"ivyy-poison"},"content":" * It provides methods to add, remove, and get tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"ivyy-poison"},"content":" * It also provides a method to get the number of tasks in the list.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"ivyy-poison"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"ivyy-poison"},"content":"public class TaskList {","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"ivyy-poison"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"ivyy-poison"},"content":"     * Constructs a TaskList object with an empty list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"ivyy-poison"},"content":"     * The list of tasks is represented as an ArrayList.","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"ivyy-poison"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"ivyy-poison"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"ivyy-poison"},"content":"     * Constructs a TaskList object with the given list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"ivyy-poison"},"content":"     * The list of tasks is represented as an ArrayList.","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"ivyy-poison"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"ivyy-poison"},"content":"        assert tasks !\u003d null : \"List of tasks should not be null\";","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"ivyy-poison"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"ivyy-poison"},"content":"     * Adds the given task to the list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"ivyy-poison"},"content":"     * @param task The task to be added to the list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"ivyy-poison"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"ivyy-poison"},"content":"        assert task !\u003d null : \"Task should not be null\";","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"ivyy-poison"},"content":"        tasks.add(task);","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"ivyy-poison"},"content":"     * Returns the task at the given index in the list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"ivyy-poison"},"content":"     * @param index The index of the task to be returned.","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"ivyy-poison"},"content":"     * @return The task at the given index in the list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"ivyy-poison"},"content":"     * @throws DukeException If the given index is invalid.","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"ivyy-poison"},"content":"    public Task get(int index) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"ivyy-poison"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"ivyy-poison"},"content":"            throw new DukeException(\"Invalid task index\");","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"ivyy-poison"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"ivyy-poison"},"content":"        return tasks.get(index);","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"ivyy-poison"},"content":"     * Returns the number of tasks in the list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"ivyy-poison"},"content":"     * @return The number of tasks in the list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"ivyy-poison"},"content":"    public int size() {","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"ivyy-poison"},"content":"        return tasks.size();","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"ivyy-poison"},"content":"     * Removes the task at the given index in the list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"ivyy-poison"},"content":"     * @param index The index of the task to be removed.","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"ivyy-poison"},"content":"     * @return The task that was removed.","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"ivyy-poison"},"content":"     * @throws DukeException If the given index is invalid.","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"ivyy-poison"},"content":"    public Task remove(int index) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"ivyy-poison"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"ivyy-poison"},"content":"            throw new DukeException(\"Invalid task index\");","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"ivyy-poison"},"content":"        } else if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"ivyy-poison"},"content":"            throw new DukeException(\"There are no tasks to delete\");","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"ivyy-poison"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"ivyy-poison"},"content":"        Task deletedTask \u003d this.get(index);","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"ivyy-poison"},"content":"        tasks.remove(index);","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"ivyy-poison"},"content":"        return deletedTask;","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":92,"author":{"gitId":"ivyy-poison"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"ivyy-poison"},"content":"     * @return The list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"ivyy-poison"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"ivyy-poison"},"content":"        return tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":101,"author":{"gitId":"ivyy-poison"},"content":"     * Returns a new TaskList object with tasks that contain the given keyword in their description.","lastModifiedDate":"2023-09-04"},{"lineNumber":102,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":103,"author":{"gitId":"ivyy-poison"},"content":"     * @param keyword The keyword to filter the tasks by.","lastModifiedDate":"2023-09-04"},{"lineNumber":104,"author":{"gitId":"ivyy-poison"},"content":"     * @return A new TaskList object with tasks that contain the given keyword in their description.","lastModifiedDate":"2023-09-04"},{"lineNumber":105,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":106,"author":{"gitId":"ivyy-poison"},"content":"    public TaskList filterByName(String keyword) {","lastModifiedDate":"2023-09-15"},{"lineNumber":107,"author":{"gitId":"ivyy-poison"},"content":"        List\u003cTask\u003e filtered \u003d tasks.stream()","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"ivyy-poison"},"content":"                .filter(task -\u003e task.getDescription().contains(keyword))","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"ivyy-poison"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"ivyy-poison"},"content":"        return new TaskList(filtered);","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":113,"author":{"gitId":"ivyy-poison"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":114,"author":{"gitId":"ivyy-poison"},"content":"     * Returns a new TaskList object with tasks that are within the given date range.","lastModifiedDate":"2023-09-15"},{"lineNumber":115,"author":{"gitId":"ivyy-poison"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":116,"author":{"gitId":"ivyy-poison"},"content":"     * @param from","lastModifiedDate":"2023-09-15"},{"lineNumber":117,"author":{"gitId":"ivyy-poison"},"content":"     * @param to","lastModifiedDate":"2023-09-15"},{"lineNumber":118,"author":{"gitId":"ivyy-poison"},"content":"     * @return A new TaskList object with tasks that are within the given date range.","lastModifiedDate":"2023-09-15"},{"lineNumber":119,"author":{"gitId":"ivyy-poison"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":120,"author":{"gitId":"ivyy-poison"},"content":"    public TaskList filterByDateRange(LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-09-15"},{"lineNumber":121,"author":{"gitId":"ivyy-poison"},"content":"        List\u003cTask\u003e filtered \u003d tasks.stream()","lastModifiedDate":"2023-09-15"},{"lineNumber":122,"author":{"gitId":"ivyy-poison"},"content":"                .filter(task -\u003e task instanceof Temporal)","lastModifiedDate":"2023-09-15"},{"lineNumber":123,"author":{"gitId":"ivyy-poison"},"content":"                .map(task -\u003e (Temporal) task)","lastModifiedDate":"2023-09-15"},{"lineNumber":124,"author":{"gitId":"ivyy-poison"},"content":"                .filter(temporal -\u003e temporal.isWithinPeriod(from, to))","lastModifiedDate":"2023-09-15"},{"lineNumber":125,"author":{"gitId":"ivyy-poison"},"content":"                .sorted(Comparator.comparing(Temporal::getStartTime))","lastModifiedDate":"2023-09-15"},{"lineNumber":126,"author":{"gitId":"ivyy-poison"},"content":"                .map(temporal -\u003e (Task) temporal)","lastModifiedDate":"2023-09-15"},{"lineNumber":127,"author":{"gitId":"ivyy-poison"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-09-15"},{"lineNumber":128,"author":{"gitId":"ivyy-poison"},"content":"        return new TaskList(filtered);","lastModifiedDate":"2023-09-15"},{"lineNumber":129,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":130,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":131,"author":{"gitId":"ivyy-poison"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"ivyy-poison":131}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ivyy-poison"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"ivyy-poison"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"ivyy-poison"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"ivyy-poison"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"ivyy-poison"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"ivyy-poison"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-border-color: grey; -fx-border-width: 5;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"ivyy-poison"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"ivyy-poison"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"ivyy-poison"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"ivyy-poison"},"content":"            \u003cInsets bottom\u003d\"15.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"ivyy-poison"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"ivyy-poison"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"ivyy-poison"},"content":"  \u003c/children\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"ivyy-poison"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"ivyy-poison"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"ivyy-poison"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"ivyy-poison"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"ivyy-poison":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ivyy-poison"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"ivyy-poison"},"content":"\u003c?import javafx.scene.Cursor?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"ivyy-poison"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"ivyy-poison"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"ivyy-poison"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"ivyy-poison"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"ivyy-poison"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"ivyy-poison"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"ivyy-poison"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.components.MainWindow\"\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"ivyy-poison"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"ivyy-poison"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Enter message here\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"ivyy-poison"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"ivyy-poison"},"content":"            \u003cFont name\u003d\"System Bold\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"ivyy-poison"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"ivyy-poison"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"315.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"85.0\" text\u003d\"Send\"\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"ivyy-poison"},"content":"         \u003ccursor\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"ivyy-poison"},"content":"            \u003cCursor fx:constant\u003d\"DEFAULT\" /\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"ivyy-poison"},"content":"         \u003c/cursor\u003e\u003c/Button\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"ivyy-poison"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"ivyy-poison"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"ivyy-poison"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"ivyy-poison"},"content":"      \u003c/content\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"ivyy-poison"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"ivyy-poison"},"content":"  \u003c/children\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"ivyy-poison"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"ivyy-poison":27}},{"path":"src/test/java/duke/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivyy-poison"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"ivyy-poison"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"ivyy-poison"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"ivyy-poison"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"ivyy-poison"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"ivyy-poison"},"content":"    public void toStorageString_stringRepresentation_success() {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"ivyy-poison"},"content":"        Deadline deadline \u003d new Deadline(\"read book\", \"23 Aug 2020 2359\");","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"ivyy-poison"},"content":"        assertEquals(\"D | 0 | read book | 23 Aug 2020 2359\", deadline.toStorageString());","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"ivyy-poison"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"ivyy-poison"},"content":"    public void toString_stringRepresentation_success() {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"ivyy-poison"},"content":"        Deadline deadline \u003d new Deadline(\"read book\", \"23 Aug 2020 2359\");","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"ivyy-poison"},"content":"        assertEquals(\"[D][ ] read book (by: 23-08-2020 23:59)\", deadline.toString());","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"ivyy-poison"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"ivyy-poison"},"content":"    public void createDeadlineFromCommand_createDeadlineObject_success() throws Exception {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"ivyy-poison"},"content":"        Deadline deadline \u003d Deadline.createDeadlineFromCommand(\"deadline read book /by 23 Aug 2020 2359\");","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"ivyy-poison"},"content":"        assertEquals(\"[D][ ] read book (by: 23-08-2020 23:59)\", deadline.toString());","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"ivyy-poison"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"ivyy-poison"},"content":"    public void createDeadlineFromCommand_illegalArgument_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"ivyy-poison"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"ivyy-poison"},"content":"            Deadline deadline \u003d Deadline.createDeadlineFromCommand(\"deadline\");","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"ivyy-poison"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"ivyy-poison"},"content":"            assertEquals(\"The description of a deadline cannot be empty.\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"ivyy-poison"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"ivyy-poison"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"ivyy-poison"},"content":"    public void createDeadlineFromCommand_illegalArgument_exceptionThrown2() {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"ivyy-poison"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"ivyy-poison"},"content":"            Deadline deadline \u003d Deadline.createDeadlineFromCommand(\"deadline read book\");","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"ivyy-poison"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"ivyy-poison"},"content":"            assertEquals(\"The deadline command must contain a /by.\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"ivyy-poison"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"ivyy-poison"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"ivyy-poison"},"content":"    public void createDeadlineFromCommand_illegalArgument_exceptionThrown3() {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"ivyy-poison"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"ivyy-poison"},"content":"            Deadline deadline \u003d Deadline.createDeadlineFromCommand(\"deadline read book /by \");","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"ivyy-poison"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"ivyy-poison"},"content":"            assertEquals(\"The deadline command must contain a description after /by.\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"ivyy-poison"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"ivyy-poison"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"ivyy-poison"},"content":"    public void createDeadlineFromStorage_createDeadlineObject_success() {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"ivyy-poison"},"content":"        Deadline deadline \u003d Deadline.createDeadlineFromStorage(\"D | 0 | read book | 23 Aug 2020 2359\");","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"ivyy-poison"},"content":"        assertEquals(\"[D][ ] read book (by: 23-08-2020 23:59)\", deadline.toString());","lastModifiedDate":"2023-09-15"},{"lineNumber":59,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"ivyy-poison"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"ivyy-poison"},"content":"    public void createDeadlineFromStorage_createDoneDeadlineObject_success() {","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"ivyy-poison"},"content":"        Deadline deadline \u003d Deadline.createDeadlineFromStorage(\"D | 1 | read book | 23 Aug 2020 2359\");","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"ivyy-poison"},"content":"        assertEquals(\"[D][X] read book (by: 23-08-2020 23:59)\", deadline.toString());","lastModifiedDate":"2023-09-15"},{"lineNumber":65,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"ivyy-poison"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"ivyy-poison":67}},{"path":"src/test/java/duke/tasks/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivyy-poison"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ivyy-poison"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"ivyy-poison"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"ivyy-poison"},"content":"public class ToDoTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"ivyy-poison"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"ivyy-poison"},"content":"    public void toStorageString_stringRepresentation_success() {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"ivyy-poison"},"content":"        ToDo todo \u003d new ToDo(\"read book\");","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"ivyy-poison"},"content":"        assertEquals(\"T | 0 | read book\", todo.toStorageString());","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"ivyy-poison"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"ivyy-poison"},"content":"    public void toString_stringRepresentation_success() {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"ivyy-poison"},"content":"        ToDo todo \u003d new ToDo(\"read book\");","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"ivyy-poison"},"content":"        assertEquals(\"[T][ ] read book\", todo.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"ivyy-poison"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"ivyy-poison"},"content":"    public void createToDoFromCommand_createToDoObject_success() throws Exception {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"ivyy-poison"},"content":"        ToDo todo \u003d ToDo.createToDoFromCommand(\"todo read book\");","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"ivyy-poison"},"content":"        assertEquals(\"[T][ ] read book\", todo.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"ivyy-poison"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"ivyy-poison"},"content":"    public void createToDoFromCommand_illegalArgument_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"ivyy-poison"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"ivyy-poison"},"content":"            ToDo todo \u003d ToDo.createToDoFromCommand(\"todo\");","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"ivyy-poison"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"ivyy-poison"},"content":"            assertEquals(\"The description of a todo cannot be empty.\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"ivyy-poison"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"ivyy-poison"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"ivyy-poison"},"content":"    public void createToDoFromStorage_createToDoObject_success() {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"ivyy-poison"},"content":"        ToDo todo \u003d ToDo.createToDoFromStorage(\"T | 0 | read book\");","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"ivyy-poison"},"content":"        assertEquals(\"[T][ ] read book\", todo.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"ivyy-poison"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"ivyy-poison"},"content":"    public void createToDoFromStorage_createDoneToDoObject_success() {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"ivyy-poison"},"content":"        ToDo todo \u003d ToDo.createToDoFromStorage(\"T | 1 | read book\");","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"ivyy-poison"},"content":"        assertEquals(\"[T][X] read book\", todo.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"ivyy-poison"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"ivyy-poison"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"ivyy-poison"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"ivyy-poison":48}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ivyy-poison"},"content":"T | 0 | borrow book","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"ivyy-poison":1}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ivyy-poison"},"content":"todo borrow book","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"ivyy-poison"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"ivyy-poison"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"ivyy-poison"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"ivyy-poison"},"content":"mark 1","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"ivyy-poison"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"ivyy-poison"},"content":"something","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"ivyy-poison"},"content":"deadline return book /by next monday","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"ivyy-poison"},"content":"delete 5","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"ivyy-poison"},"content":"delete 4","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"ivyy-poison"},"content":"bye","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"ivyy-poison":11}}]
