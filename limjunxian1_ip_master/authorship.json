[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"limjunxian1"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"limjunxian1"},"content":"}","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"limjunxian1"},"content":"checkstyle {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"limjunxian1"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"limjunxian1"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"limjunxian1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"limjunxian1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"limjunxian1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"limjunxian1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"limjunxian1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"limjunxian1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"limjunxian1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"limjunxian1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"limjunxian1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"limjunxian1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"limjunxian1"},"content":"    mainClass.set(\"helpbuddy.Launcher\")","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"limjunxian1"},"content":"    archiveBaseName \u003d \"helpbuddy\"","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"limjunxian1"},"content":"    archiveFileName \u003d \u0027helpbuddy.jar\u0027","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"limjunxian1"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"limjunxian1":23,"-":40}},{"path":"src/main/java/helpbuddy/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limjunxian1"},"content":"package helpbuddy;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"limjunxian1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"limjunxian1"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"limjunxian1"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"limjunxian1"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"limjunxian1"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"limjunxian1"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"limjunxian1"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"limjunxian1"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"limjunxian1"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"limjunxian1"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"limjunxian1"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"limjunxian1"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"limjunxian1"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"limjunxian1"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"limjunxian1"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"limjunxian1"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"limjunxian1"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"limjunxian1"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"limjunxian1"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"limjunxian1"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"limjunxian1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"limjunxian1"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"limjunxian1"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"limjunxian1"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"limjunxian1"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"limjunxian1"},"content":"    private void flip() {","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"limjunxian1"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"limjunxian1"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"limjunxian1"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"limjunxian1"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"limjunxian1"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"limjunxian1"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"limjunxian1"},"content":"    public static DialogBox getHelpBuddyDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"limjunxian1"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"limjunxian1"},"content":"        db.flip();","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"limjunxian1"},"content":"        return db;","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"limjunxian1"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"limjunxian1":61}},{"path":"src/main/java/helpbuddy/HelpBuddy.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limjunxian1"},"content":"package helpbuddy;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"limjunxian1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"limjunxian1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.command.Command;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.exception.HelpBuddyException;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.task.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.ui.Parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.ui.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"limjunxian1"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":" * A HelpBuddy class creates a HelpBuddy object to run the HelpBuddy chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"limjunxian1"},"content":"public class HelpBuddy {","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"limjunxian1"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"limjunxian1"},"content":"     * Constructs a new HelpBuddy object containing the specified String filePath to store data.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"limjunxian1"},"content":"     * @param filePath the filePath for data to be loaded and saved.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"limjunxian1"},"content":"     * @throws IOException if Storage encounters error in creating database or reading entry from file.","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"limjunxian1"},"content":"     * @throws HelpBuddyException if the task entries in file has missing fields.","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"limjunxian1"},"content":"    public HelpBuddy(String filePath) throws IOException, HelpBuddyException {","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"limjunxian1"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"limjunxian1"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"limjunxian1"},"content":"        tasks \u003d new TaskList(storage.loadData());","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"limjunxian1"},"content":"     * Gets a response from HelpBuddy chatbot after user\u0027s input.","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"limjunxian1"},"content":"     * @param userInput the String that represents user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"limjunxian1"},"content":"     * @return a String message of HelpBuddy\u0027s response.","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"limjunxian1"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"limjunxian1"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"limjunxian1"},"content":"            Command c \u003d Parser.parseCommand(userInput);","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"limjunxian1"},"content":"            return c.execute(tasks, ui, storage);","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"limjunxian1"},"content":"        } catch (HelpBuddyException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"limjunxian1"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"limjunxian1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"limjunxian1"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"limjunxian1"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"limjunxian1"},"content":"            return ui.printDateTimeParseErrorMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"limjunxian1"},"content":"     * Says hello message when HelpBuddy is first launched.","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"limjunxian1"},"content":"     * @return a String of HelpBuddy\u0027s welcome message.","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"limjunxian1"},"content":"    public static String sayHello() {","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"limjunxian1"},"content":"        return \"Hello! I\u0027m HelpBuddy.\\n\" + \"What can I do for you?\";","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"limjunxian1"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"limjunxian1":59}},{"path":"src/main/java/helpbuddy/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limjunxian1"},"content":"package helpbuddy;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"limjunxian1"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"limjunxian1"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"limjunxian1"},"content":" * A Launcher class that launches HelpBuddy application.","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"limjunxian1"},"content":"public class Launcher {","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"limjunxian1"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"limjunxian1"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"limjunxian1":12}},{"path":"src/main/java/helpbuddy/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limjunxian1"},"content":"package helpbuddy;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"limjunxian1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.exception.HelpBuddyException;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"limjunxian1"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"limjunxian1"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"limjunxian1"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"limjunxian1"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"limjunxian1"},"content":" * A GUI for HelpBuddy using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"limjunxian1"},"content":"    private HelpBuddy helpBuddy;","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":"    private FXMLLoader fxmlLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"limjunxian1"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"limjunxian1"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"limjunxian1"},"content":"            fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"limjunxian1"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"limjunxian1"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"limjunxian1"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"limjunxian1"},"content":"            stage.show();","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"limjunxian1"},"content":"            helpBuddy \u003d new HelpBuddy(\"data/tasks.txt\");","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"limjunxian1"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setHelpBuddy(helpBuddy);","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"limjunxian1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"limjunxian1"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().printErrorMessage(e.getMessage());","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"limjunxian1"},"content":"        } catch (HelpBuddyException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"limjunxian1"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().printErrorMessage(e.getMessage());","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"limjunxian1"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"limjunxian1":36}},{"path":"src/main/java/helpbuddy/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limjunxian1"},"content":"package helpbuddy;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"limjunxian1"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"limjunxian1"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"limjunxian1"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"limjunxian1"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"limjunxian1"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"limjunxian1"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"limjunxian1"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"limjunxian1"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"limjunxian1"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"limjunxian1"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"limjunxian1"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"limjunxian1"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"limjunxian1"},"content":"    private HelpBuddy helpBuddy;","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"limjunxian1"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"limjunxian1"},"content":"    private Image helpBuddyImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/HelpBuddy.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"limjunxian1"},"content":"     * Initializes MainWindow.","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"limjunxian1"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"limjunxian1"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"limjunxian1"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"limjunxian1"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"limjunxian1"},"content":"                DialogBox.getHelpBuddyDialog(HelpBuddy.sayHello(), helpBuddyImage)","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"limjunxian1"},"content":"        );","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"limjunxian1"},"content":"    public void setHelpBuddy(HelpBuddy d) {","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"limjunxian1"},"content":"        assert d !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"limjunxian1"},"content":"        helpBuddy \u003d d;","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"limjunxian1"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing HelpBuddy\u0027s reply and then","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"limjunxian1"},"content":"     * appends them to the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"limjunxian1"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"limjunxian1"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"limjunxian1"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"limjunxian1"},"content":"        String response \u003d helpBuddy.getResponse(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"limjunxian1"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"limjunxian1"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"limjunxian1"},"content":"                DialogBox.getHelpBuddyDialog(response, helpBuddyImage)","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"limjunxian1"},"content":"        );","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"limjunxian1"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"limjunxian1"},"content":"     * Creates a dialog box containing HelpBuddy\u0027s reply when an error is encountered.","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"limjunxian1"},"content":"     * @param  error A String representation of error message.","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"limjunxian1"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"limjunxian1"},"content":"    protected void printErrorMessage(String error) {","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"limjunxian1"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"limjunxian1"},"content":"                DialogBox.getHelpBuddyDialog(error, helpBuddyImage)","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"limjunxian1"},"content":"        );","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"limjunxian1"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"limjunxian1":69}},{"path":"src/main/java/helpbuddy/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limjunxian1"},"content":"package helpbuddy.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.task.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.ui.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"limjunxian1"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"limjunxian1"},"content":" * The AddCommand class adds a value of type Task to TaskList and calls Ui to print corresponding","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"limjunxian1"},"content":" * message upon execution.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"limjunxian1"},"content":"    private Task task;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"limjunxian1"},"content":"     * Constructs a new AddCommand object with the specified Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"limjunxian1"},"content":"     * @param task the task to be added by AddCommand object.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"limjunxian1"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"limjunxian1"},"content":"     * Adds a Task into TaskList and calls Ui to print corresponding message.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"limjunxian1"},"content":"     * @param taskList the tasklist for Task to be added to.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"limjunxian1"},"content":"     * @param ui the ui that prints message.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"limjunxian1"},"content":"     * @param storage the storage with saved data in TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"limjunxian1"},"content":"     * @return a String message of HelpBuddy\u0027s reply after adding task.","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"limjunxian1"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"limjunxian1"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"limjunxian1"},"content":"        if (taskList.hasDuplicate(task)) {","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"limjunxian1"},"content":"            return ui.printTaskDuplicateMessage();","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"limjunxian1"},"content":"        } else {","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"limjunxian1"},"content":"            taskList.addTask(this.task);","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"limjunxian1"},"content":"            return ui.printAddTaskMessage(this.task, taskList);","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"limjunxian1"},"content":"     * Compares the object to the specified object. The result is true if and only if argument is not null and","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"limjunxian1"},"content":"     * the Task added is the same Task as the object.","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"limjunxian1"},"content":"     * @param obj the object to compare with.","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"limjunxian1"},"content":"     * @return true if objects are the same; false otherwise.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"limjunxian1"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"limjunxian1"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"limjunxian1"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"limjunxian1"},"content":"            return true;","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"limjunxian1"},"content":"        if (obj instanceof AddCommand) {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"limjunxian1"},"content":"            AddCommand addCmd \u003d (AddCommand) obj;","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"limjunxian1"},"content":"            return this.task.equals(addCmd.task);","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"limjunxian1"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"limjunxian1"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"limjunxian1":60}},{"path":"src/main/java/helpbuddy/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limjunxian1"},"content":"package helpbuddy.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"limjunxian1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.exception.HelpBuddyException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.task.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.ui.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"limjunxian1"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":" * An abstract class representing a command. This class provides a basic structure for various commands.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"limjunxian1"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"limjunxian1"},"content":"     * Executes the Command.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"limjunxian1"},"content":"     * @param taskList the tasklist for Task to be added to.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":"     * @param ui the ui that prints message.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":"     * @param storage the storage with saved data in TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"limjunxian1"},"content":"     * @return a String message of HelpBuddy\u0027s reply.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"limjunxian1"},"content":"     * @throws IOException if unable to write data to file.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"     * @throws HelpBuddyException if Command contains invalid input or not executable.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"limjunxian1"},"content":"    public abstract String execute(TaskList taskList, Ui ui, Storage storage) throws IOException, HelpBuddyException;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"limjunxian1"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"limjunxian1":26}},{"path":"src/main/java/helpbuddy/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limjunxian1"},"content":"package helpbuddy.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.exception.HelpBuddyException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.task.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.ui.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"limjunxian1"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"limjunxian1"},"content":" * The DeleteCommand class deletes a value of type Task to TaskList and calls Ui to print corresponding","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":" * message upon execution.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"limjunxian1"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":"    private int taskIndex;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"limjunxian1"},"content":"     * Constructs a new DeleteCommand object with the specified int taskIndex.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":"     * @param taskIndex the taskIndex of Task to delete.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":"     * @throws HelpBuddyException if the taskIndex value is out of range (taskIndex \u003c 0).","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"limjunxian1"},"content":"    public DeleteCommand(int taskIndex) throws HelpBuddyException {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"        if (taskIndex \u003c 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"limjunxian1"},"content":"            throw new HelpBuddyException(\"Invalid task number.\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"limjunxian1"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"limjunxian1"},"content":"     * Deletes a Task of taskIndex from TaskList and calls Ui to print corresponding message.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"limjunxian1"},"content":"     * @param taskList the tasklist for Task to be deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"limjunxian1"},"content":"     * @param ui the ui that prints message.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"limjunxian1"},"content":"     * @param storage the storage with saved data in TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"limjunxian1"},"content":"     * @return a String message of HelpBuddy\u0027s reply after deleting task.","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"limjunxian1"},"content":"     * @throws HelpBuddyException if taskIndex is out of range (taskIndex \u003e taskList.getSize()).","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"limjunxian1"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"limjunxian1"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws HelpBuddyException {","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"limjunxian1"},"content":"        if (this.taskIndex \u003e taskList.getSize()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"limjunxian1"},"content":"            throw new HelpBuddyException(\"Invalid task number.\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"limjunxian1"},"content":"        Task task \u003d taskList.getTask(this.taskIndex - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"limjunxian1"},"content":"        taskList.deleteTask(this.taskIndex - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"limjunxian1"},"content":"        return ui.printDeleteTaskMessage(task, taskList);","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"limjunxian1"},"content":"     * Compares the object to the specified object. The result is true if and only if argument is not null and","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"limjunxian1"},"content":"     * the taskIndex is the same taskIndex as the object.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"limjunxian1"},"content":"     * @param obj the object to compare with.","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"limjunxian1"},"content":"     * @return true if objects are the same; false otherwise.","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"limjunxian1"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"limjunxian1"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"limjunxian1"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"limjunxian1"},"content":"            return true;","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"limjunxian1"},"content":"        if (obj instanceof DeleteCommand) {","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"limjunxian1"},"content":"            DeleteCommand deleteCmd \u003d (DeleteCommand) obj;","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"limjunxian1"},"content":"            return this.taskIndex \u003d\u003d deleteCmd.taskIndex;","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"limjunxian1"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"limjunxian1"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"limjunxian1":65}},{"path":"src/main/java/helpbuddy/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limjunxian1"},"content":"package helpbuddy.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"limjunxian1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.task.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.ui.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"limjunxian1"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"limjunxian1"},"content":" * The ExitCommand class calls Ui to print farewell message and closes HelpBuddy.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"     * Saves data from taskList into storage and calls Ui to print farewell message.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"limjunxian1"},"content":"     * Finally, closes HelpBuddy chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"limjunxian1"},"content":"     * @param taskList the tasklist with Task to be saved.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":"     * @param ui the ui that prints message.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":"     * @param storage the storage with saved data in TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"limjunxian1"},"content":"     * @return a String message of HelpBuddy\u0027s reply after user closes HelpBuddy.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"limjunxian1"},"content":"     * @throws IOException if unable to write data to file.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"limjunxian1"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"limjunxian1"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"limjunxian1"},"content":"        storage.saveData(taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"limjunxian1"},"content":"        return ui.printByeMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"limjunxian1"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"limjunxian1":28}},{"path":"src/main/java/helpbuddy/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limjunxian1"},"content":"package helpbuddy.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"limjunxian1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.exception.HelpBuddyException;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.storage.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":" * A FindCommand class that finds a list of possible task from the keyword that user entered and calls Ui to","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"limjunxian1"},"content":" * print out the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"limjunxian1"},"content":"    private String taskDescription;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":"     * Constructs a FindCommand Object with the String taskDescription that user inputs into HelpBuddy chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"limjunxian1"},"content":"     * @param taskDescription the String representation of Task description user is finding.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"limjunxian1"},"content":"     * @throws HelpBuddyException if the taskDescription is empty.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"limjunxian1"},"content":"    public FindCommand(String taskDescription) throws HelpBuddyException {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"limjunxian1"},"content":"        if (taskDescription.isBlank()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"limjunxian1"},"content":"            throw new HelpBuddyException(\"Please enter the task you are trying to find.\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"limjunxian1"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"limjunxian1"},"content":"     * Finds an ArrayList of Task objects in taskList that has taskDescription and calls ui to print the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"limjunxian1"},"content":"     * @param taskList the taskList that stores Task objects.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"limjunxian1"},"content":"     * @param ui the ui that prints the corresponding response from HelpBuddy chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"limjunxian1"},"content":"     * @param storage the storage that loads and saves data.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"limjunxian1"},"content":"     * @return a String message of HelpBuddy\u0027s reply after finding relevant tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"limjunxian1"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"limjunxian1"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"limjunxian1"},"content":"        ArrayList\u003cTask\u003e commonTaskList \u003d taskList.findCommonTask(taskDescription);","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"limjunxian1"},"content":"        return ui.printFindTaskMessage(commonTaskList);","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"limjunxian1"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"limjunxian1":42}},{"path":"src/main/java/helpbuddy/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limjunxian1"},"content":"package helpbuddy.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.task.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.ui.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"limjunxian1"},"content":" * The ListCommand class calls Ui to list all Task in TaskList upon execution.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"limjunxian1"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"limjunxian1"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"limjunxian1"},"content":"     * Calls Ui to list all Task in TaskList upon execution.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":"     * @param taskList the tasklist for Task to be listed.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"     * @param ui the ui that prints message.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"limjunxian1"},"content":"     * @param storage the storage with saved data in TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"limjunxian1"},"content":"     * @return a String message of HelpBuddy\u0027s reply after being asked to list all Tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"limjunxian1"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"limjunxian1"},"content":"        return ui.printListMessage(taskList);","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"limjunxian1"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"limjunxian1":23}},{"path":"src/main/java/helpbuddy/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limjunxian1"},"content":"package helpbuddy.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.exception.HelpBuddyException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.task.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.ui.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"limjunxian1"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"limjunxian1"},"content":" * The MarkCommand class marks a value of type Task in TaskList done and calls Ui to print corresponding","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":" * message upon execution.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"limjunxian1"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":"    private int taskIndex;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"limjunxian1"},"content":"     * Constructs a new MarkCommand object with the specified int taskIndex.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":"     * @param taskIndex the taskIndex of Task to mark as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":"     * @throws HelpBuddyException if the taskIndex value is out of range (taskIndex \u003c 0).","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"limjunxian1"},"content":"    public MarkCommand(int taskIndex) throws HelpBuddyException {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"        if (taskIndex \u003c 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"limjunxian1"},"content":"            throw new HelpBuddyException(\"Invalid task number.\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"limjunxian1"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"limjunxian1"},"content":"     * Marks Task of taskIndex in TaskList done and calls Ui to print corresponding message.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"limjunxian1"},"content":"     * @param taskList the tasklist for Task to be marked.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"limjunxian1"},"content":"     * @param ui the ui that prints message.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"limjunxian1"},"content":"     * @param storage the storage with saved data in TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"limjunxian1"},"content":"     * @return a String message of HelpBuddy\u0027s reply after being asked to mark a Task.","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"limjunxian1"},"content":"     * @throws HelpBuddyException if taskIndex is out of range (taskIndex \u003e taskList.getSize()).","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"limjunxian1"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"limjunxian1"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws HelpBuddyException {","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"limjunxian1"},"content":"        if (this.taskIndex \u003e taskList.getSize()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"limjunxian1"},"content":"            throw new HelpBuddyException(\"Invalid task number.\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"limjunxian1"},"content":"        Task task \u003d taskList.getTask(this.taskIndex - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"limjunxian1"},"content":"        if (task.getStatusIcon() \u003d\u003d \"X\") {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"limjunxian1"},"content":"            throw new HelpBuddyException(\"Task is already marked as done.\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"limjunxian1"},"content":"        task.updateDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"limjunxian1"},"content":"        return ui.printMarkMessage(task);","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"limjunxian1"},"content":"     * Compares the object to the specified object. The result is true if and only if argument is not null and","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"limjunxian1"},"content":"     * the taskIndex is the same taskIndex as the object.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"limjunxian1"},"content":"     * @param obj the object to compare with.","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"limjunxian1"},"content":"     * @return true if objects are the same; false otherwise.","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"limjunxian1"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"limjunxian1"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"limjunxian1"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"limjunxian1"},"content":"            return true;","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"limjunxian1"},"content":"        if (obj instanceof MarkCommand) {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"limjunxian1"},"content":"            MarkCommand markCmd \u003d (MarkCommand) obj;","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"limjunxian1"},"content":"            return this.taskIndex \u003d\u003d markCmd.taskIndex;","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"limjunxian1"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"limjunxian1"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"limjunxian1":68}},{"path":"src/main/java/helpbuddy/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limjunxian1"},"content":"package helpbuddy.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.exception.HelpBuddyException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.task.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.ui.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"limjunxian1"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"limjunxian1"},"content":" * The UnmarkCommand class marks a value of type Task in TaskList as not done and calls Ui to print corresponding","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":" * message upon execution.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"limjunxian1"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":"    private int taskIndex;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"limjunxian1"},"content":"     * Constructs a new UnmarkCommand object with the specified int taskIndex.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":"     * @param taskIndex the taskIndex of Task to unmark as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":"     * @throws HelpBuddyException if the taskIndex value is out of range (taskIndex \u003c 0).","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"limjunxian1"},"content":"    public UnmarkCommand(int taskIndex) throws HelpBuddyException {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"        if (taskIndex \u003c 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"limjunxian1"},"content":"            throw new HelpBuddyException(\"Invalid task number.\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"limjunxian1"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"limjunxian1"},"content":"     * Unmarks Task of taskIndex in TaskList as not done and calls Ui to print corresponding message.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"limjunxian1"},"content":"     * @param taskList the tasklist for Task to be unmarked.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"limjunxian1"},"content":"     * @param ui the ui that prints message.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"limjunxian1"},"content":"     * @param storage the storage with saved data in TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"limjunxian1"},"content":"     * @return a String message of HelpBuddy\u0027s reply after being asked to unmark a Task.","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"limjunxian1"},"content":"     * @throws HelpBuddyException if taskIndex is out of range (taskIndex \u003e taskList.getSize()).","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"limjunxian1"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"limjunxian1"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws HelpBuddyException {","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"limjunxian1"},"content":"        if (this.taskIndex \u003e taskList.getSize()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"limjunxian1"},"content":"            throw new HelpBuddyException(\"Invalid task number.\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"limjunxian1"},"content":"        Task task \u003d taskList.getTask(this.taskIndex - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"limjunxian1"},"content":"        if (task.getStatusIcon() \u003d\u003d \" \") {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"limjunxian1"},"content":"            throw new HelpBuddyException(\"Task is not marked as done.\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"limjunxian1"},"content":"        task.updateDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"limjunxian1"},"content":"        return ui.printUnmarkMessage(task);","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"limjunxian1"},"content":"     * Compares the object to the specified object. The result is true if and only if argument is not null and","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"limjunxian1"},"content":"     * the taskIndex is the same taskIndex as the object.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"limjunxian1"},"content":"     * @param obj the object to compare with.","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"limjunxian1"},"content":"     * @return true if objects are the same; false otherwise.","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"limjunxian1"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"limjunxian1"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"limjunxian1"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"limjunxian1"},"content":"            return true;","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"limjunxian1"},"content":"        if (obj instanceof UnmarkCommand) {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"limjunxian1"},"content":"            UnmarkCommand unmarkCmd \u003d (UnmarkCommand) obj;","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"limjunxian1"},"content":"            return this.taskIndex \u003d\u003d unmarkCmd.taskIndex;","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"limjunxian1"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"limjunxian1"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"limjunxian1":68}},{"path":"src/main/java/helpbuddy/exception/HelpBuddyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limjunxian1"},"content":"package helpbuddy.exception;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"limjunxian1"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"limjunxian1"},"content":" * Thrown when HelpBuddy chatbot detects invalid input by user.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"limjunxian1"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"limjunxian1"},"content":"public class HelpBuddyException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"limjunxian1"},"content":"     * Reports a HelpBuddyException for the message specified.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"limjunxian1"},"content":"     * @param message String describing the reason for exception.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":"    public HelpBuddyException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"limjunxian1"},"content":"     * Produces the error message.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"limjunxian1"},"content":"     * @return the error message along with \"OOPS!\".","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"limjunxian1"},"content":"    public String getMessage() {","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"limjunxian1"},"content":"        return \"OOPS! \" + super.getMessage();","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"limjunxian1"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"limjunxian1":23}},{"path":"src/main/java/helpbuddy/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limjunxian1"},"content":"package helpbuddy.storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"limjunxian1"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"limjunxian1"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"limjunxian1"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"limjunxian1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"limjunxian1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"limjunxian1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"limjunxian1"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.exception.HelpBuddyException;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.task.Deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.task.Event;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.task.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.task.ToDo;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"limjunxian1"},"content":" * The Storage class that loads, reads and saves data. Creates a new file if file search is unsuccessful.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"limjunxian1"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"limjunxian1"},"content":"    private String filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"limjunxian1"},"content":"     * Constructs a new Storage under the specified filePath.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"limjunxian1"},"content":"     * @param filePath the filePath with data stored.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"limjunxian1"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"limjunxian1"},"content":"        assert !filePath.trim().isEmpty() : \"File path cannot be empty\";","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"limjunxian1"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"limjunxian1"},"content":"     * Reads data from filePath and add Task from filePath to an ArrayList.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"limjunxian1"},"content":"     * @return an ArrayList containing Task that is previously stored under the filePath.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"limjunxian1"},"content":"     * @throws IOException if unable to read data from file or error creating a new file.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"limjunxian1"},"content":"     * @throws HelpBuddyException if Task details in file are not present or invalid.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"limjunxian1"},"content":"    public ArrayList\u003cTask\u003e loadData() throws IOException, HelpBuddyException {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"limjunxian1"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"limjunxian1"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"limjunxian1"},"content":"            File data \u003d new File(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"limjunxian1"},"content":"            Scanner fileReader \u003d new Scanner(data);","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"limjunxian1"},"content":"            while (fileReader.hasNextLine()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"limjunxian1"},"content":"                String entry \u003d fileReader.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"limjunxian1"},"content":"                taskList.add(readEntry(entry));","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"limjunxian1"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"limjunxian1"},"content":"            fileReader.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"limjunxian1"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"limjunxian1"},"content":"            this.createDatabase();","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"limjunxian1"},"content":"        return taskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"limjunxian1"},"content":"     * Reads each line under the filePath and creates a Task object corresponding to each line.","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"limjunxian1"},"content":"     * @param entry the entry under the filePath.","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"limjunxian1"},"content":"     * @return Task that is saved under the filePath.","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"limjunxian1"},"content":"     * @throws HelpBuddyException if Task details in file are not present or invalid.","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"limjunxian1"},"content":"     * @throws IOException if unable to read data from file.","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"limjunxian1"},"content":"    public Task readEntry(String entry) throws HelpBuddyException, IOException {","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"limjunxian1"},"content":"        String[] fields \u003d entry.split(\"\\\\|\");","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"limjunxian1"},"content":"        Task taskToAdd;","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"limjunxian1"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ISO_LOCAL_DATE_TIME;","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"limjunxian1"},"content":"        switch (fields[0]) {","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"limjunxian1"},"content":"        case \"T\":","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"limjunxian1"},"content":"            taskToAdd \u003d new ToDo(fields[2]);","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"limjunxian1"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"limjunxian1"},"content":"        case \"D\":","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"limjunxian1"},"content":"            taskToAdd \u003d new Deadline(fields[2], LocalDateTime.parse(fields[3], formatter));","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"limjunxian1"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"limjunxian1"},"content":"        case \"E\":","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"limjunxian1"},"content":"            String[] fromToFields \u003d fields[3].split(\" to \");","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"limjunxian1"},"content":"            taskToAdd \u003d new Event(fields[2],","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"limjunxian1"},"content":"                    LocalDateTime.parse(fromToFields[0], formatter),","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"limjunxian1"},"content":"                    LocalDateTime.parse(fromToFields[1], formatter));","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"limjunxian1"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"limjunxian1"},"content":"        default:","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"limjunxian1"},"content":"            assert false : \"Unknown task in storage file\";","lastModifiedDate":"2023-09-12"},{"lineNumber":83,"author":{"gitId":"limjunxian1"},"content":"            throw new IOException(\"Error occurred when reading data from storage file.\\n \"","lastModifiedDate":"2023-09-12"},{"lineNumber":84,"author":{"gitId":"limjunxian1"},"content":"                    + \"Delete file and relaunch HelpBuddy again.\");","lastModifiedDate":"2023-09-12"},{"lineNumber":85,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"limjunxian1"},"content":"        if (Integer.parseInt(fields[1]) \u003d\u003d 1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"limjunxian1"},"content":"            taskToAdd.updateDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"limjunxian1"},"content":"        return taskToAdd;","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"limjunxian1"},"content":"     * Creates a new file upon unsuccessful search of file under filePath.","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"limjunxian1"},"content":"     * @throws IOException if unable to create new file.","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"limjunxian1"},"content":"    private void createDatabase() throws IOException {","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"limjunxian1"},"content":"        assert !this.filePath.trim().isEmpty() : \"File path cannot be empty\";","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"limjunxian1"},"content":"        File data \u003d new File(this.filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"limjunxian1"},"content":"        File dataDir \u003d new File(data.getParent());","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"limjunxian1"},"content":"        dataDir.mkdir();","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"limjunxian1"},"content":"        data.createNewFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"limjunxian1"},"content":"     * Writes all Task in TaskList into a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"limjunxian1"},"content":"     * @param taskList the taskList with Task to be saved.","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"limjunxian1"},"content":"     * @throws IOException if unable to write to file.","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"limjunxian1"},"content":"    public void saveData(TaskList taskList) throws IOException {","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"limjunxian1"},"content":"        assert !this.filePath.trim().isEmpty() : \"File path cannot be empty\";","lastModifiedDate":"2023-09-12"},{"lineNumber":113,"author":{"gitId":"limjunxian1"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"limjunxian1"},"content":"        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"limjunxian1"},"content":"            fw.write(taskList.getTask(i).stringifyTask());","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"limjunxian1"},"content":"            fw.write(System.lineSeparator());","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"limjunxian1"},"content":"        fw.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"limjunxian1"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"limjunxian1":120}},{"path":"src/main/java/helpbuddy/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limjunxian1"},"content":"package helpbuddy.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"limjunxian1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"limjunxian1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.exception.HelpBuddyException;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"limjunxian1"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"limjunxian1"},"content":" * The Deadline class creates a Task storing a deadline of type LocalDateTime.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"limjunxian1"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":"    private LocalDateTime by;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"     * Constructs a new Deadline object with specified String description and LocalDateTime by as deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"limjunxian1"},"content":"     * @param description the description of Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"limjunxian1"},"content":"     * @param by the deadline of task to be completed by.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":"     * @throws HelpBuddyException if description or by has no value.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"limjunxian1"},"content":"    public Deadline(String description, LocalDateTime by) throws HelpBuddyException {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"limjunxian1"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"limjunxian1"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"limjunxian1"},"content":"            throw new HelpBuddyException(\"The description of a deadline cannot be empty.\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"limjunxian1"},"content":"        } else if (by \u003d\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"limjunxian1"},"content":"            throw new HelpBuddyException(\"Please enter /by followed by a deadline.\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"limjunxian1"},"content":"     * Returns String representing the Deadline object.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"limjunxian1"},"content":"     * @return a string representation of description, isDone and by.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"limjunxian1"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"limjunxian1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"limjunxian1"},"content":"        String deadline \u003d this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"limjunxian1"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadline + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"limjunxian1"},"content":"     * Returns String representing the Deadline object to be saved in a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"limjunxian1"},"content":"     * @return a string representation of description, isDone and by.","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"limjunxian1"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"limjunxian1"},"content":"    public String stringifyTask() {","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"limjunxian1"},"content":"        return String.format(\"D|%d|%s|%s\", this.isDone ? 1 : 0, this.description, this.by);","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"limjunxian1"},"content":"     * Compares the object to the specified object. The result is true if and only if argument is not null and","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"limjunxian1"},"content":"     * its stringifyTask() is the same as the object\u0027s.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"limjunxian1"},"content":"     * @param obj the object to compare with.","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"limjunxian1"},"content":"     * @return true if objects are the same; false otherwise.","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"limjunxian1"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"limjunxian1"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"limjunxian1"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"limjunxian1"},"content":"            return true;","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"limjunxian1"},"content":"        if (obj instanceof Deadline) {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"limjunxian1"},"content":"            Deadline task \u003d (Deadline) obj;","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"limjunxian1"},"content":"            return this.stringifyTask().equals(task.stringifyTask());","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"limjunxian1"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"limjunxian1"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"limjunxian1":69}},{"path":"src/main/java/helpbuddy/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limjunxian1"},"content":"package helpbuddy.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"limjunxian1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"limjunxian1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.exception.HelpBuddyException;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"limjunxian1"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"limjunxian1"},"content":" * The Event class creates a Task storing a start time and an end time of type LocalDateTime.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"limjunxian1"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"limjunxian1"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"limjunxian1"},"content":"     * Constructs a new Event object with specified String description and LocalDateTime from as start time of Event","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"limjunxian1"},"content":"     * and LocalDateTime to as end time of Event.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":"     * @param description the description of Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":"     * @param from the start time of Event.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"limjunxian1"},"content":"     * @param to the end time of Event.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"limjunxian1"},"content":"     * @throws HelpBuddyException if description, from and to is empty and if from and to are invalid time.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"limjunxian1"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) throws HelpBuddyException {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"limjunxian1"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"limjunxian1"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"limjunxian1"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"limjunxian1"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"limjunxian1"},"content":"            throw new HelpBuddyException(\"The description of a event cannot be empty.\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"limjunxian1"},"content":"        } else if (from \u003d\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"limjunxian1"},"content":"            throw new HelpBuddyException(\"Please enter /from followed by a start time of event.\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"limjunxian1"},"content":"        } else if (to \u003d\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"limjunxian1"},"content":"            throw new HelpBuddyException(\"Please enter /to followed by an end time of event.\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"limjunxian1"},"content":"        } else if (to.isBefore(from)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"limjunxian1"},"content":"            throw new HelpBuddyException(\"End time must be after the start time!\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"limjunxian1"},"content":"        } else if (to.isEqual(from)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"limjunxian1"},"content":"            throw new HelpBuddyException(\"Both start and end time are the same, please check!\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"limjunxian1"},"content":"     * Returns String representing the Event object.","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"limjunxian1"},"content":"     * @return a string representation of description, isDone, from and to.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"limjunxian1"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"limjunxian1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"limjunxian1"},"content":"        String startTime \u003d this.from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"limjunxian1"},"content":"        String endTime \u003d this.to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"limjunxian1"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + startTime + \" to: \" + endTime + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"limjunxian1"},"content":"     * Returns String representing the Event object to be saved in a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"limjunxian1"},"content":"     * @return a string representation of description, isDone, from and to.","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"limjunxian1"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"limjunxian1"},"content":"    public String stringifyTask() {","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"limjunxian1"},"content":"        return String.format(\"E|%d|%s|%s\", this.isDone ? 1 : 0, this.description, this.from + \" to \" + this.to);","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"limjunxian1"},"content":"     * Compares the object to the specified object. The result is true if and only if argument is not null and","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"limjunxian1"},"content":"     * its stringifyTask() is the same as the object\u0027s.","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"limjunxian1"},"content":"     * @param obj the object to compare with.","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"limjunxian1"},"content":"     * @return true if objects are the same; false otherwise.","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"limjunxian1"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"limjunxian1"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"limjunxian1"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"limjunxian1"},"content":"            return true;","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"limjunxian1"},"content":"        if (obj instanceof Event) {","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"limjunxian1"},"content":"            Event task \u003d (Event) obj;","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"limjunxian1"},"content":"            return this.stringifyTask().equals(task.stringifyTask());","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"limjunxian1"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"limjunxian1"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"limjunxian1":79}},{"path":"src/main/java/helpbuddy/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limjunxian1"},"content":"package helpbuddy.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"limjunxian1"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"limjunxian1"},"content":" * An abstract class representing a Task. This class provides a basic structure for various tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"limjunxian1"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"limjunxian1"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":"    protected String description;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"limjunxian1"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":"     * Constructs a new Task object with specified String description.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":"     * @param description A string that indicates task name.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"limjunxian1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"limjunxian1"},"content":"     * Returns String icon that represents if Task is done.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"limjunxian1"},"content":"     * @return \"X\" if Task is done; \" \" otherwise.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"limjunxian1"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"limjunxian1"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"limjunxian1"},"content":"     * Updates the status of task.","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"limjunxian1"},"content":"    public void updateDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"limjunxian1"},"content":"        this.isDone \u003d !this.isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"limjunxian1"},"content":"     * Returns String representing the Task object.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"limjunxian1"},"content":"     * @return a string representation of description, isDone.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"limjunxian1"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"limjunxian1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"limjunxian1"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"limjunxian1"},"content":"     * Returns String representing the Task object to be saved in a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"limjunxian1"},"content":"     * @return a string representation of Task object attributes.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"limjunxian1"},"content":"    public abstract String stringifyTask();","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"limjunxian1"},"content":"     * Compares the description of Task object to String S. Return true if and only if s is found in the description;","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"limjunxian1"},"content":"     * false otherwise.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"limjunxian1"},"content":"     * @param s String representation of Task\u0027s description to match.","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"limjunxian1"},"content":"     * @return true if description has String s; false otherwise.","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"limjunxian1"},"content":"    public boolean hasDescription(String s) {","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"limjunxian1"},"content":"        return this.description.contains(s);","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"limjunxian1"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"limjunxian1":59}},{"path":"src/main/java/helpbuddy/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limjunxian1"},"content":"package helpbuddy.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"limjunxian1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"limjunxian1"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"limjunxian1"},"content":" * A TaskList class that stores Task objects.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"limjunxian1"},"content":"public class TaskList {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"limjunxian1"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":"     * Constructs an ArrayList object with the same elements in taskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"limjunxian1"},"content":"     * @param taskList the taskList with Task objects.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"limjunxian1"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"limjunxian1"},"content":"     * Returns the Task object of the specified int i in the ArrayList.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"limjunxian1"},"content":"     * @param i the index of Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"     * @return the Task object at index i in ArrayList.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"limjunxian1"},"content":"    public Task getTask(int i) {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"limjunxian1"},"content":"        return this.taskList.get(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"limjunxian1"},"content":"     * Adds the Task in the ArrayList.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"limjunxian1"},"content":"     * @param task the task to be added.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"limjunxian1"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"limjunxian1"},"content":"        this.taskList.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"limjunxian1"},"content":"     * Deletes the Task in the ArrayList.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"limjunxian1"},"content":"     * @param i the index of task to be deleted in ArrayList.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"limjunxian1"},"content":"    public void deleteTask(int i) {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"limjunxian1"},"content":"        this.taskList.remove(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"limjunxian1"},"content":"     * Checks if the ArrayList size() is 0.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"limjunxian1"},"content":"     * @return true if size() is 0; otherwise false.","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"limjunxian1"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"limjunxian1"},"content":"        return this.taskList.size() \u003d\u003d 0;","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"limjunxian1"},"content":"     * Returns the size of the ArrayList.","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"limjunxian1"},"content":"     * @return an int of the ArrayList\u0027s size.","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"limjunxian1"},"content":"    public int getSize() {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"limjunxian1"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"limjunxian1"},"content":"     * Finds Task objects that has String s in description of Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"limjunxian1"},"content":"     * @param s String that represents the description of Task to find in taskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"limjunxian1"},"content":"     * @return an ArrayList with Task objects description matching String s.","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"limjunxian1"},"content":"    public ArrayList\u003cTask\u003e findCommonTask(String s) {","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"limjunxian1"},"content":"        ArrayList\u003cTask\u003e commonTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"limjunxian1"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"limjunxian1"},"content":"            if (task.hasDescription(s)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"limjunxian1"},"content":"                commonTaskList.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"limjunxian1"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"limjunxian1"},"content":"        return commonTaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":76,"author":{"gitId":"limjunxian1"},"content":"     * Checks if the new Task to be added is already in TaskList.","lastModifiedDate":"2023-09-12"},{"lineNumber":77,"author":{"gitId":"limjunxian1"},"content":"     * @param newTask a Task object to be added.","lastModifiedDate":"2023-09-12"},{"lineNumber":78,"author":{"gitId":"limjunxian1"},"content":"     * @return true if Task is already added, else false.","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":80,"author":{"gitId":"limjunxian1"},"content":"    public boolean hasDuplicate(Task newTask) {","lastModifiedDate":"2023-09-12"},{"lineNumber":81,"author":{"gitId":"limjunxian1"},"content":"        boolean isEqual \u003d false;","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"limjunxian1"},"content":"        for (Task task : this.taskList) {","lastModifiedDate":"2023-09-12"},{"lineNumber":83,"author":{"gitId":"limjunxian1"},"content":"            if (newTask.equals(task)) {","lastModifiedDate":"2023-09-12"},{"lineNumber":84,"author":{"gitId":"limjunxian1"},"content":"                isEqual \u003d true;","lastModifiedDate":"2023-09-12"},{"lineNumber":85,"author":{"gitId":"limjunxian1"},"content":"                break;","lastModifiedDate":"2023-09-12"},{"lineNumber":86,"author":{"gitId":"limjunxian1"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":87,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":88,"author":{"gitId":"limjunxian1"},"content":"        return isEqual;","lastModifiedDate":"2023-09-12"},{"lineNumber":89,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":90,"author":{"gitId":"limjunxian1"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"limjunxian1":90}},{"path":"src/main/java/helpbuddy/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limjunxian1"},"content":"package helpbuddy.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.exception.HelpBuddyException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"limjunxian1"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"limjunxian1"},"content":" * The ToDo class creates a Task storing the description of ToDo.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"limjunxian1"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"limjunxian1"},"content":"     * Constructs a new ToDo object with specified String description.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":"     * @param description the description of Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":"     * @throws HelpBuddyException if the description has no value.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":"    public ToDo(String description) throws HelpBuddyException {","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"limjunxian1"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"limjunxian1"},"content":"            throw new HelpBuddyException(\"The description of a todo cannot be empty.\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"     * Returns String representing the ToDo object.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"limjunxian1"},"content":"     * @return a string representation of description.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"limjunxian1"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"limjunxian1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"limjunxian1"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"limjunxian1"},"content":"     * Returns String representing the ToDo object to be saved in a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"limjunxian1"},"content":"     * @return a string representation of description.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"limjunxian1"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"limjunxian1"},"content":"    public String stringifyTask() {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"limjunxian1"},"content":"        return String.format(\"T|%d|%s\", this.isDone ? 1 : 0, this.description);","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"limjunxian1"},"content":"     * Compares the object to the specified object. The result is true if and only if argument is not null and","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"limjunxian1"},"content":"     * its stringifyTask() is the same as the object\u0027s.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"limjunxian1"},"content":"     * @param obj the object to compare with.","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"limjunxian1"},"content":"     * @return true if objects are the same; false otherwise.","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"limjunxian1"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"limjunxian1"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"limjunxian1"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"limjunxian1"},"content":"            return true;","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"limjunxian1"},"content":"        if (obj instanceof ToDo) {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"limjunxian1"},"content":"            ToDo task \u003d (ToDo) obj;","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"limjunxian1"},"content":"            return this.stringifyTask().equals(task.stringifyTask());","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"limjunxian1"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"limjunxian1"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"limjunxian1":58}},{"path":"src/main/java/helpbuddy/ui/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limjunxian1"},"content":"package helpbuddy.ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"limjunxian1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"limjunxian1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"limjunxian1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.command.AddCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.command.Command;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.command.DeleteCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.command.ExitCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.command.FindCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.command.ListCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.command.MarkCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.command.UnmarkCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.exception.HelpBuddyException;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.task.Deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.task.Event;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.task.ToDo;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"limjunxian1"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"limjunxian1"},"content":" * A Parser class interprets the user input and produces a corresponding Command.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"limjunxian1"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"limjunxian1"},"content":"     * Returns an AddCommand for ToDo task.","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"limjunxian1"},"content":"     * @param userInput A String array containing user\u0027s input to HelpBuddy.","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"limjunxian1"},"content":"     * @return an AddCommand for ToDo task.","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"limjunxian1"},"content":"     * @throws HelpBuddyException if user input for ToDo task is invalid.","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"limjunxian1"},"content":"    private static Command addToDoCommand(String[] userInput) throws HelpBuddyException {","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"limjunxian1"},"content":"        if (userInput.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"limjunxian1"},"content":"            return new AddCommand(new ToDo(\"\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"limjunxian1"},"content":"        String taskDescription \u003d userInput[1];","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"limjunxian1"},"content":"        return new AddCommand(new ToDo(taskDescription));","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"limjunxian1"},"content":"     * Returns an AddCommand for Deadline task.","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"limjunxian1"},"content":"     * @param userInput A String array containing user\u0027s input to HelpBuddy.","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"limjunxian1"},"content":"     * @return an AddCommand for Deadline task.","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"limjunxian1"},"content":"     * @throws HelpBuddyException if user input for Deadline task is invalid.","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"limjunxian1"},"content":"    private static Command addDeadlineCommand(String[] userInput) throws HelpBuddyException {","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"limjunxian1"},"content":"        if (userInput.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"limjunxian1"},"content":"            return new AddCommand(new Deadline(\"\", null));","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"limjunxian1"},"content":"        String[] taskDetails \u003d userInput[1].split(\"/by\", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"limjunxian1"},"content":"        String taskName \u003d taskDetails[0].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"limjunxian1"},"content":"        if (taskDetails.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"limjunxian1"},"content":"            return new AddCommand(new Deadline(taskName, null));","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"limjunxian1"},"content":"        String deadlineTime \u003d taskDetails[1].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"limjunxian1"},"content":"        if (deadlineTime.isBlank()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"limjunxian1"},"content":"            return new AddCommand(new Deadline(taskName, null));","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"limjunxian1"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yy HH:mm\");","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"limjunxian1"},"content":"        return new AddCommand(new Deadline(taskName, LocalDateTime.parse(deadlineTime, formatter)));","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"limjunxian1"},"content":"     * Returns an AddCommand for Event task.","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"limjunxian1"},"content":"     * @param userInput A String array containing user\u0027s input to HelpBuddy.","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"limjunxian1"},"content":"     * @return an AddCommand for Event task.","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"limjunxian1"},"content":"     * @throws HelpBuddyException if user input for Event task is invalid.","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"limjunxian1"},"content":"    private static Command addEventCommand(String[] userInput) throws HelpBuddyException {","lastModifiedDate":"2023-09-12"},{"lineNumber":69,"author":{"gitId":"limjunxian1"},"content":"        if (userInput.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"limjunxian1"},"content":"            return new AddCommand(new Event(\"\", null, null));","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"limjunxian1"},"content":"        String[] taskDetails \u003d userInput[1].split(\"/from\", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"limjunxian1"},"content":"        String taskName \u003d taskDetails[0].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"limjunxian1"},"content":"        if (taskDetails.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"limjunxian1"},"content":"            return new AddCommand(new Event(taskName, null, null));","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"limjunxian1"},"content":"        String[] taskDateDetails \u003d taskDetails[1].split(\"/to\", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"limjunxian1"},"content":"        String startTime \u003d taskDateDetails[0].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"limjunxian1"},"content":"        if (startTime.isBlank()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"limjunxian1"},"content":"            return new AddCommand(new Event(taskName, null, null));","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"limjunxian1"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yy HH:mm\");","lastModifiedDate":"2023-09-12"},{"lineNumber":83,"author":{"gitId":"limjunxian1"},"content":"        if (taskDateDetails.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"limjunxian1"},"content":"            return new AddCommand(new Event(taskName,","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"limjunxian1"},"content":"                    LocalDateTime.parse(startTime, formatter),","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"limjunxian1"},"content":"                    null","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"limjunxian1"},"content":"            ));","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"limjunxian1"},"content":"        String endTime \u003d taskDateDetails[1].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"limjunxian1"},"content":"        if (startTime.isBlank()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"limjunxian1"},"content":"            return new AddCommand(new Event(","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"limjunxian1"},"content":"                    taskName,","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"limjunxian1"},"content":"                    LocalDateTime.parse(startTime, formatter),","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"limjunxian1"},"content":"                    null","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"limjunxian1"},"content":"            ));","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"limjunxian1"},"content":"        return new AddCommand(new Event(","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"limjunxian1"},"content":"                taskName,","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"limjunxian1"},"content":"                LocalDateTime.parse(startTime, formatter),","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"limjunxian1"},"content":"                LocalDateTime.parse(endTime, formatter)","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"limjunxian1"},"content":"        ));","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":104,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":105,"author":{"gitId":"limjunxian1"},"content":"     * Returns a FindCommand.","lastModifiedDate":"2023-09-12"},{"lineNumber":106,"author":{"gitId":"limjunxian1"},"content":"     * @param userInput A String array containing user\u0027s input to HelpBuddy.","lastModifiedDate":"2023-09-12"},{"lineNumber":107,"author":{"gitId":"limjunxian1"},"content":"     * @return a FindCommand.","lastModifiedDate":"2023-09-12"},{"lineNumber":108,"author":{"gitId":"limjunxian1"},"content":"     * @throws HelpBuddyException if user did not input anything to find.","lastModifiedDate":"2023-09-12"},{"lineNumber":109,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":110,"author":{"gitId":"limjunxian1"},"content":"    private static Command findTaskCommand(String[] userInput) throws HelpBuddyException {","lastModifiedDate":"2023-09-12"},{"lineNumber":111,"author":{"gitId":"limjunxian1"},"content":"        if (userInput.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"limjunxian1"},"content":"            return new FindCommand(\"\");","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"limjunxian1"},"content":"        String taskPrefix \u003d userInput[1].trim();","lastModifiedDate":"2023-09-12"},{"lineNumber":115,"author":{"gitId":"limjunxian1"},"content":"        return new FindCommand(taskPrefix);","lastModifiedDate":"2023-09-12"},{"lineNumber":116,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":117,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":118,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":119,"author":{"gitId":"limjunxian1"},"content":"     * Interprets the userCommand and produces a corresponding Command.","lastModifiedDate":"2023-09-12"},{"lineNumber":120,"author":{"gitId":"limjunxian1"},"content":"     * @param userCommand the String that user keys into HelpBuddy.","lastModifiedDate":"2023-09-12"},{"lineNumber":121,"author":{"gitId":"limjunxian1"},"content":"     * @return the Command to be executed by HelpBuddy.","lastModifiedDate":"2023-09-12"},{"lineNumber":122,"author":{"gitId":"limjunxian1"},"content":"     * @throws HelpBuddyException if userCommand is invalid.","lastModifiedDate":"2023-09-12"},{"lineNumber":123,"author":{"gitId":"limjunxian1"},"content":"     * @throws DateTimeParseException if the time keyed in for Deadline and Event Task is","lastModifiedDate":"2023-09-12"},{"lineNumber":124,"author":{"gitId":"limjunxian1"},"content":"     *     not in the format of dd/MM/yy HH:mm.","lastModifiedDate":"2023-09-12"},{"lineNumber":125,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":126,"author":{"gitId":"limjunxian1"},"content":"    public static Command parseCommand(String userCommand) throws HelpBuddyException, DateTimeParseException {","lastModifiedDate":"2023-09-12"},{"lineNumber":127,"author":{"gitId":"limjunxian1"},"content":"        String[] userInput \u003d userCommand.split(\" \", 2);","lastModifiedDate":"2023-09-12"},{"lineNumber":128,"author":{"gitId":"limjunxian1"},"content":"        String command \u003d userInput[0];","lastModifiedDate":"2023-09-12"},{"lineNumber":129,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":130,"author":{"gitId":"limjunxian1"},"content":"        switch (command) {","lastModifiedDate":"2023-09-12"},{"lineNumber":131,"author":{"gitId":"limjunxian1"},"content":"        case (\"list\"):","lastModifiedDate":"2023-09-12"},{"lineNumber":132,"author":{"gitId":"limjunxian1"},"content":"            return new ListCommand();","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"limjunxian1"},"content":"        case (\"mark\"):","lastModifiedDate":"2023-09-12"},{"lineNumber":134,"author":{"gitId":"limjunxian1"},"content":"            int taskIndex \u003d Integer.parseInt(userInput[1]);","lastModifiedDate":"2023-09-12"},{"lineNumber":135,"author":{"gitId":"limjunxian1"},"content":"            return new MarkCommand(taskIndex);","lastModifiedDate":"2023-09-12"},{"lineNumber":136,"author":{"gitId":"limjunxian1"},"content":"        case (\"unmark\"):","lastModifiedDate":"2023-09-12"},{"lineNumber":137,"author":{"gitId":"limjunxian1"},"content":"            int taskNumber \u003d Integer.parseInt(userInput[1]);","lastModifiedDate":"2023-09-12"},{"lineNumber":138,"author":{"gitId":"limjunxian1"},"content":"            return new UnmarkCommand(taskNumber);","lastModifiedDate":"2023-09-12"},{"lineNumber":139,"author":{"gitId":"limjunxian1"},"content":"        case (\"todo\"):","lastModifiedDate":"2023-09-12"},{"lineNumber":140,"author":{"gitId":"limjunxian1"},"content":"            return addToDoCommand(userInput);","lastModifiedDate":"2023-09-12"},{"lineNumber":141,"author":{"gitId":"limjunxian1"},"content":"        case (\"deadline\"): {","lastModifiedDate":"2023-09-12"},{"lineNumber":142,"author":{"gitId":"limjunxian1"},"content":"            return addDeadlineCommand(userInput);","lastModifiedDate":"2023-09-12"},{"lineNumber":143,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":144,"author":{"gitId":"limjunxian1"},"content":"        case (\"event\"): {","lastModifiedDate":"2023-09-12"},{"lineNumber":145,"author":{"gitId":"limjunxian1"},"content":"            return addEventCommand(userInput);","lastModifiedDate":"2023-09-12"},{"lineNumber":146,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":147,"author":{"gitId":"limjunxian1"},"content":"        case(\"find\"):","lastModifiedDate":"2023-09-12"},{"lineNumber":148,"author":{"gitId":"limjunxian1"},"content":"            return findTaskCommand(userInput);","lastModifiedDate":"2023-09-12"},{"lineNumber":149,"author":{"gitId":"limjunxian1"},"content":"        case (\"delete\"):","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"limjunxian1"},"content":"            int taskRank \u003d Integer.parseInt(userInput[1]);","lastModifiedDate":"2023-09-12"},{"lineNumber":151,"author":{"gitId":"limjunxian1"},"content":"            return new DeleteCommand(taskRank);","lastModifiedDate":"2023-09-12"},{"lineNumber":152,"author":{"gitId":"limjunxian1"},"content":"        case (\"bye\"):","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"limjunxian1"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"limjunxian1"},"content":"        default:","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"limjunxian1"},"content":"            throw new HelpBuddyException(\"I\u0027m sorry, but I don\u0027t know what that means.\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"limjunxian1"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"limjunxian1":158}},{"path":"src/main/java/helpbuddy/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limjunxian1"},"content":"package helpbuddy.ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"limjunxian1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.task.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"limjunxian1"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"limjunxian1"},"content":" * An Ui class that prints the corresponding response by HelpBuddy after user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"limjunxian1"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":"     * Prints bye message when HelpBuddy is closed by user.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"     * @return a String of HelpBuddy\u0027s farewell message.","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"limjunxian1"},"content":"    public String printByeMessage() {","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"     * Prints a list of Task that user has keyed into HelpBuddy.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"limjunxian1"},"content":"     * @param taskList the taskList that stores Task objects.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"limjunxian1"},"content":"     * @return a String message of HelpBuddy\u0027s reply after being asked to list all Tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"limjunxian1"},"content":"    public String printListMessage(TaskList taskList) {","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"limjunxian1"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"limjunxian1"},"content":"            return \"You have no task in your list.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"limjunxian1"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"limjunxian1"},"content":"            String messageOutput \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"limjunxian1"},"content":"            for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"limjunxian1"},"content":"                int taskIndex \u003d i + 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"limjunxian1"},"content":"                messageOutput +\u003d taskIndex + \". \" + taskList.getTask(i) + \"\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"limjunxian1"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"limjunxian1"},"content":"            return messageOutput;","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"limjunxian1"},"content":"     * Prints the message that a Task object is marked as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"limjunxian1"},"content":"     * @param task the task to mark as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"limjunxian1"},"content":"     * @return a String message of HelpBuddy\u0027s reply after being asked to mark a Task.","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"limjunxian1"},"content":"    public String printMarkMessage(Task task) {","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"limjunxian1"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\\t\" + task;","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"limjunxian1"},"content":"     * Prints the message that a Task object is marked as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"limjunxian1"},"content":"     * @param task the task to mark as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"limjunxian1"},"content":"     * @return a String message of HelpBuddy\u0027s reply after being asked to mark a Task.","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"limjunxian1"},"content":"    public String printUnmarkMessage(Task task) {","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"limjunxian1"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\\t\" + task;","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"limjunxian1"},"content":"     * Returns a String representation of the size of taskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"limjunxian1"},"content":"     * @param taskList the taskList that contains Task objects.","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"limjunxian1"},"content":"     * @return a String message that Ui will output to users to notify the number of Task objects in taskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"limjunxian1"},"content":"    private String stringifyNumOfTasks(TaskList taskList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"limjunxian1"},"content":"        return \"\\nNow you have \" + taskList.getSize() + \" tasks in the list.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"limjunxian1"},"content":"     * Prints task added successfully.","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"limjunxian1"},"content":"     * @param task the task added.","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"limjunxian1"},"content":"     * @param taskList the taskList that task is added to.","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"limjunxian1"},"content":"     * @return a String message of HelpBuddy\u0027s reply after task is added successfully.","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"limjunxian1"},"content":"    public String printAddTaskMessage(Task task, TaskList taskList) {","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"limjunxian1"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + task + stringifyNumOfTasks(taskList);","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"limjunxian1"},"content":"     * Prints task deleted successfully.","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"limjunxian1"},"content":"     * @param task the task deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"limjunxian1"},"content":"     * @param taskList the taskList that task is deleted from.","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"limjunxian1"},"content":"     * @return a String message of HelpBuddy\u0027s reply after deleting task.","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"limjunxian1"},"content":"    public String printDeleteTaskMessage(Task task, TaskList taskList) {","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"limjunxian1"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\" + task + stringifyNumOfTasks(taskList);","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"limjunxian1"},"content":"     * Prints the taskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"limjunxian1"},"content":"     * @param taskList the taskList that contains Task objects user is finding.","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"limjunxian1"},"content":"    public String printFindTaskMessage(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-09-07"},{"lineNumber":91,"author":{"gitId":"limjunxian1"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"limjunxian1"},"content":"            return \"There is no such task in your list.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":93,"author":{"gitId":"limjunxian1"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"limjunxian1"},"content":"            String messageOutput \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"limjunxian1"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"limjunxian1"},"content":"                int taskIndex \u003d i + 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"limjunxian1"},"content":"                messageOutput +\u003d taskIndex + \". \" + taskList.get(i) + \"\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":98,"author":{"gitId":"limjunxian1"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"limjunxian1"},"content":"            return messageOutput;","lastModifiedDate":"2023-09-07"},{"lineNumber":100,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"limjunxian1"},"content":"     * Returns a String that directs users to follow the format of dates for Deadline and Event Task inputs.","lastModifiedDate":"2023-09-07"},{"lineNumber":105,"author":{"gitId":"limjunxian1"},"content":"     * @return a String containing date time parse error message.","lastModifiedDate":"2023-09-07"},{"lineNumber":106,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"limjunxian1"},"content":"    public String printDateTimeParseErrorMessage() {","lastModifiedDate":"2023-09-07"},{"lineNumber":108,"author":{"gitId":"limjunxian1"},"content":"        return \"Please enter the start/end time in the format of \u003cDD/MM/YY HH:MM\u003e!\";","lastModifiedDate":"2023-09-07"},{"lineNumber":109,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":112,"author":{"gitId":"limjunxian1"},"content":"     * Returns a String that informs users about duplicate task.","lastModifiedDate":"2023-09-12"},{"lineNumber":113,"author":{"gitId":"limjunxian1"},"content":"     * @return a String message that signals to user that the task has been added.","lastModifiedDate":"2023-09-12"},{"lineNumber":114,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":115,"author":{"gitId":"limjunxian1"},"content":"    public String printTaskDuplicateMessage() {","lastModifiedDate":"2023-09-12"},{"lineNumber":116,"author":{"gitId":"limjunxian1"},"content":"        return \"This task has already been added to your task list.\";","lastModifiedDate":"2023-09-12"},{"lineNumber":117,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":118,"author":{"gitId":"limjunxian1"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"limjunxian1":118}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"limjunxian1"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"limjunxian1"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"limjunxian1"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"limjunxian1"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"limjunxian1"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"limjunxian1"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"limjunxian1"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"limjunxian1"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"limjunxian1"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"limjunxian1"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"limjunxian1":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"limjunxian1"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"limjunxian1"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"limjunxian1"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"limjunxian1"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"limjunxian1"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"limjunxian1"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"helpbuddy.MainWindow\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"limjunxian1"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"limjunxian1"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"limjunxian1"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"limjunxian1"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"limjunxian1":19}},{"path":"src/test/java/helpbuddy/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limjunxian1"},"content":"package helpbuddy.storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"limjunxian1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"limjunxian1"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"limjunxian1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"limjunxian1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"limjunxian1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.exception.HelpBuddyException;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.task.Deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.task.Event;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.task.ToDo;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":"public class StorageTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":"    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yy HH:mm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"limjunxian1"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"limjunxian1"},"content":"    public void readEntry_success1() {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"limjunxian1"},"content":"            Storage s \u003d new Storage(\"data/tasks.txt\");","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"limjunxian1"},"content":"            Task actualTask \u003d s.readEntry(\"T|0|read\");","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"limjunxian1"},"content":"            ToDo expectedTask \u003d new ToDo(\"read\");","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"limjunxian1"},"content":"            assertEquals(true, expectedTask.equals(actualTask));","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"limjunxian1"},"content":"        } catch (HelpBuddyException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"limjunxian1"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"limjunxian1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"limjunxian1"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"limjunxian1"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"limjunxian1"},"content":"    public void readEntry_success2() {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"limjunxian1"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"limjunxian1"},"content":"            Storage s \u003d new Storage(\"data/tasks.txt\");","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"limjunxian1"},"content":"            Task actualTask \u003d s.readEntry(\"D|0|read|2023-08-31T18:00\");","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"limjunxian1"},"content":"            Deadline expectedTask \u003d new Deadline(\"read\", LocalDateTime.parse(\"31/08/23 18:00\", formatter));","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"limjunxian1"},"content":"            assertEquals(true, expectedTask.equals(actualTask));","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"limjunxian1"},"content":"        } catch (HelpBuddyException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"limjunxian1"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"limjunxian1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"limjunxian1"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"limjunxian1"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"limjunxian1"},"content":"    public void readEntry_success3() {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"limjunxian1"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"limjunxian1"},"content":"            Storage s \u003d new Storage(\"data/tasks.txt\");","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"limjunxian1"},"content":"            Task actualTask \u003d s.readEntry(\"E|0|read|2023-08-31T18:00 to 2023-08-31T19:00\");","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"limjunxian1"},"content":"            Event expectedTask \u003d new Event(","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"limjunxian1"},"content":"                    \"read\",","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"limjunxian1"},"content":"                    LocalDateTime.parse(\"31/08/23 18:00\", formatter),","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"limjunxian1"},"content":"                    LocalDateTime.parse(\"31/08/23 19:00\", formatter)","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"limjunxian1"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"limjunxian1"},"content":"            assertEquals(true, expectedTask.equals(actualTask));","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"limjunxian1"},"content":"        } catch (HelpBuddyException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"limjunxian1"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"limjunxian1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"limjunxian1"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"limjunxian1"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"limjunxian1":65}},{"path":"src/test/java/helpbuddy/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limjunxian1"},"content":"package helpbuddy.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"limjunxian1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"limjunxian1"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"limjunxian1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"limjunxian1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.exception.HelpBuddyException;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"    public void deadline_noTaskName_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"limjunxian1"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"limjunxian1"},"content":"            new Deadline(\"\", null);","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":"        } catch (HelpBuddyException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"limjunxian1"},"content":"            assertEquals(\"OOPS! The description of a deadline cannot be empty.\\n\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"limjunxian1"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"limjunxian1"},"content":"    public void deadline_noDeadline_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"limjunxian1"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"limjunxian1"},"content":"            new Deadline(\"read\", null);","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"limjunxian1"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"limjunxian1"},"content":"        } catch (HelpBuddyException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"limjunxian1"},"content":"            assertEquals(\"OOPS! Please enter /by followed by a deadline.\\n\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"limjunxian1"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"limjunxian1"},"content":"    public void deadline_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"limjunxian1"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yy HH:mm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"limjunxian1"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"limjunxian1"},"content":"            Deadline task \u003d new Deadline(\"read\", LocalDateTime.parse(\"31/08/23 17:41\", formatter));","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"limjunxian1"},"content":"            assertEquals(\"D|0|read|2023-08-31T17:41\", task.stringifyTask());","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"limjunxian1"},"content":"        } catch (HelpBuddyException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"limjunxian1"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"limjunxian1"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"limjunxian1":44}},{"path":"src/test/java/helpbuddy/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limjunxian1"},"content":"package helpbuddy.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"limjunxian1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"limjunxian1"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"limjunxian1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"limjunxian1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.exception.HelpBuddyException;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"limjunxian1"},"content":"public class EventTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":"    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yy HH:mm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"limjunxian1"},"content":"    public void event_noTaskName_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"limjunxian1"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":"            new Event(\"\", null, null);","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"limjunxian1"},"content":"        } catch (HelpBuddyException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"limjunxian1"},"content":"            assertEquals(\"OOPS! The description of a event cannot be empty.\\n\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"limjunxian1"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"limjunxian1"},"content":"    public void event_noStartTime_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"limjunxian1"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"limjunxian1"},"content":"            new Event(\"meeting\", null, null);","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"limjunxian1"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"limjunxian1"},"content":"        } catch (HelpBuddyException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"limjunxian1"},"content":"            assertEquals(\"OOPS! Please enter /from followed by a start time of event.\\n\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"limjunxian1"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"limjunxian1"},"content":"    public void event_noEndTime_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"limjunxian1"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"limjunxian1"},"content":"            new Event(\"meeting\", LocalDateTime.parse(\"31/08/23 17:41\", formatter), null);","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"limjunxian1"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"limjunxian1"},"content":"        } catch (HelpBuddyException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"limjunxian1"},"content":"            assertEquals(\"OOPS! Please enter /to followed by an end time of event.\\n\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"limjunxian1"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"limjunxian1"},"content":"    public void event_startEqualsEnd_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"limjunxian1"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"limjunxian1"},"content":"            new Event(","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"limjunxian1"},"content":"                    \"meeting\",","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"limjunxian1"},"content":"                    LocalDateTime.parse(\"31/08/23 17:41\", formatter),","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"limjunxian1"},"content":"                    LocalDateTime.parse(\"31/08/23 17:41\", formatter)","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"limjunxian1"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"limjunxian1"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"limjunxian1"},"content":"        } catch (HelpBuddyException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"limjunxian1"},"content":"            assertEquals(\"OOPS! Both start and end time are the same, please check!\\n\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"limjunxian1"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"limjunxian1"},"content":"    public void event_endBeforeStart_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"limjunxian1"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"limjunxian1"},"content":"            new Event(","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"limjunxian1"},"content":"                    \"meeting\",","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"limjunxian1"},"content":"                    LocalDateTime.parse(\"31/08/23 17:41\", formatter),","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"limjunxian1"},"content":"                    LocalDateTime.parse(\"31/08/23 17:40\", formatter)","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"limjunxian1"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"limjunxian1"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"limjunxian1"},"content":"        } catch (HelpBuddyException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"limjunxian1"},"content":"            assertEquals(\"OOPS! End time must be after the start time!\\n\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"limjunxian1"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"limjunxian1"},"content":"    public void event_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"limjunxian1"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"limjunxian1"},"content":"            Event task \u003d new Event(","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"limjunxian1"},"content":"                    \"meeting\",","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"limjunxian1"},"content":"                    LocalDateTime.parse(\"31/08/23 17:41\", formatter),","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"limjunxian1"},"content":"                    LocalDateTime.parse(\"31/08/23 18:41\", formatter)","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"limjunxian1"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"limjunxian1"},"content":"            assertEquals(\"E|0|meeting|2023-08-31T17:41 to 2023-08-31T18:41\", task.stringifyTask());","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"limjunxian1"},"content":"        } catch (HelpBuddyException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"limjunxian1"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"limjunxian1"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"limjunxian1":86}},{"path":"src/test/java/helpbuddy/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limjunxian1"},"content":"package helpbuddy.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"limjunxian1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"limjunxian1"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"limjunxian1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.exception.HelpBuddyException;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"limjunxian1"},"content":"public class ToDoTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"limjunxian1"},"content":"    public void toDo_noTaskName_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"            new ToDo(\"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"limjunxian1"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"limjunxian1"},"content":"        } catch (HelpBuddyException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":"            assertEquals(\"OOPS! The description of a todo cannot be empty.\\n\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"limjunxian1"},"content":"    public void toDo_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"limjunxian1"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"limjunxian1"},"content":"            ToDo task \u003d new ToDo(\"read\");","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"limjunxian1"},"content":"            assertEquals(\"T|0|read\", task.stringifyTask());","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"limjunxian1"},"content":"        } catch (HelpBuddyException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"limjunxian1"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"limjunxian1"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"limjunxian1":31}},{"path":"src/test/java/helpbuddy/ui/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limjunxian1"},"content":"package helpbuddy.ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"limjunxian1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"limjunxian1"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"limjunxian1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"limjunxian1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.command.AddCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.command.Command;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.command.DeleteCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.command.MarkCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.command.UnmarkCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.exception.HelpBuddyException;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.task.Deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.task.Event;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":"import helpbuddy.task.ToDo;","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"limjunxian1"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yy HH:mm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"limjunxian1"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"limjunxian1"},"content":"    public void parseCommand_unknownCommand_exceptionThrown1() {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"limjunxian1"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"limjunxian1"},"content":"            Parser.parseCommand(\"ashhsdlf\");","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"limjunxian1"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"limjunxian1"},"content":"        } catch (HelpBuddyException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"limjunxian1"},"content":"            assertEquals(\"OOPS! I\u0027m sorry, but I don\u0027t know what that means.\\n\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"limjunxian1"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"limjunxian1"},"content":"    public void parseCommand_unknownCommand_exceptionThrown2() {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"limjunxian1"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"limjunxian1"},"content":"            Parser.parseCommand(\"help\");","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"limjunxian1"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"limjunxian1"},"content":"        } catch (HelpBuddyException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"limjunxian1"},"content":"            assertEquals(\"OOPS! I\u0027m sorry, but I don\u0027t know what that means.\\n\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"limjunxian1"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"limjunxian1"},"content":"    public void parseCommand_addCommand_success1() {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"limjunxian1"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"limjunxian1"},"content":"            Event e \u003d new Event(","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"limjunxian1"},"content":"                    \"meeting\",","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"limjunxian1"},"content":"                    LocalDateTime.parse(\"31/08/23 18:20\", formatter),","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"limjunxian1"},"content":"                    LocalDateTime.parse(\"31/08/23 19:20\", formatter)","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"limjunxian1"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"limjunxian1"},"content":"            Command expectedCmd \u003d new AddCommand(e);","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"limjunxian1"},"content":"            Command actualCmd \u003d Parser.parseCommand(\"event meeting /from 31/08/23 18:20 /to 31/08/23 19:20\");","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"limjunxian1"},"content":"            assertEquals(true, expectedCmd.equals(actualCmd));","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"limjunxian1"},"content":"        } catch (HelpBuddyException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"limjunxian1"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"limjunxian1"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"limjunxian1"},"content":"    public void parseCommand_addCommand_success2() {","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"limjunxian1"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"limjunxian1"},"content":"            Deadline d \u003d new Deadline(\"meeting\", LocalDateTime.parse(\"31/08/23 18:20\", formatter));","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"limjunxian1"},"content":"            Command expectedCmd \u003d new AddCommand(d);","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"limjunxian1"},"content":"            Command actualCmd \u003d Parser.parseCommand(\"deadline meeting /by 31/08/23 18:20\");","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"limjunxian1"},"content":"            assertEquals(true, expectedCmd.equals(actualCmd));","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"limjunxian1"},"content":"        } catch (HelpBuddyException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"limjunxian1"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"limjunxian1"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"limjunxian1"},"content":"    public void parseCommand_addCommand_success3() {","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"limjunxian1"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"limjunxian1"},"content":"            ToDo d \u003d new ToDo(\"meeting\");","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"limjunxian1"},"content":"            Command expectedCmd \u003d new AddCommand(d);","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"limjunxian1"},"content":"            Command actualCmd \u003d Parser.parseCommand(\"todo meeting\");","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"limjunxian1"},"content":"            assertEquals(true, expectedCmd.equals(actualCmd));","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"limjunxian1"},"content":"        } catch (HelpBuddyException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"limjunxian1"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"limjunxian1"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"limjunxian1"},"content":"    public void parseCommand_deleteCommand_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"limjunxian1"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"limjunxian1"},"content":"            Command expectedCmd \u003d new DeleteCommand(1);","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"limjunxian1"},"content":"            Command actualCmd \u003d Parser.parseCommand(\"delete 1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"limjunxian1"},"content":"            assertEquals(true, expectedCmd.equals(actualCmd));","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"limjunxian1"},"content":"        } catch (HelpBuddyException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"limjunxian1"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"limjunxian1"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"limjunxian1"},"content":"    public void parseCommand_markCommand_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"limjunxian1"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"limjunxian1"},"content":"            Command expectedCmd \u003d new MarkCommand(1);","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"limjunxian1"},"content":"            Command actualCmd \u003d Parser.parseCommand(\"mark 1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"limjunxian1"},"content":"            assertEquals(true, expectedCmd.equals(actualCmd));","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"limjunxian1"},"content":"        } catch (HelpBuddyException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"limjunxian1"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"limjunxian1"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"limjunxian1"},"content":"    public void parseCommand_unmarkCommand_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"limjunxian1"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"limjunxian1"},"content":"            Command expectedCmd \u003d new UnmarkCommand(1);","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"limjunxian1"},"content":"            Command actualCmd \u003d Parser.parseCommand(\"unmark 1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"limjunxian1"},"content":"            assertEquals(true, expectedCmd.equals(actualCmd));","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"limjunxian1"},"content":"        } catch (HelpBuddyException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"limjunxian1"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"limjunxian1"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"limjunxian1":115}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"limjunxian1"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"limjunxian1"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"limjunxian1"},"content":"todo","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"limjunxian1"},"content":"todo read book","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"limjunxian1"},"content":"deadline","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"limjunxian1"},"content":"deadline return book","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":"deadline return book /on","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"limjunxian1"},"content":"deadline return book /by","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"limjunxian1"},"content":"deadline return book /by Sun","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"limjunxian1"},"content":"event","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":"event meeting","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":"event meeting /start 4pm /end 6pm","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"limjunxian1"},"content":"event meeting /from /to 6pm","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":"event meeting /from 4pm /to","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"event meeting /from 4pm /to 6pm","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"limjunxian1"},"content":"mark","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"limjunxian1"},"content":"mark -1","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":"mark 4","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"limjunxian1"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"limjunxian1"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"unmark","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"limjunxian1"},"content":"unmark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"limjunxian1"},"content":"unmark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"limjunxian1"},"content":"delete","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"limjunxian1"},"content":"delete -1","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"limjunxian1"},"content":"delete 4","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"limjunxian1"},"content":"delete 1","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"limjunxian1"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"limjunxian1"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"limjunxian1":30}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":"java -classpath ..\\bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"limjunxian1":1,"-":20}}]
