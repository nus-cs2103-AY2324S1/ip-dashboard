[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"suryanshkushwaha"},"content":"# duke.Duke project template","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"suryanshkushwaha"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"suryanshkushwaha":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"suryanshkushwaha"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"suryanshkushwaha":1,"-":41}},{"path":"src/main/java/duke/DatesAndTimesFormatter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"suryanshkushwaha"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"suryanshkushwaha"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"suryanshkushwaha"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"suryanshkushwaha"},"content":" * Enum class for the different date and time formats.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"suryanshkushwaha"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"suryanshkushwaha"},"content":"//@@ author zhanyang01-reused\\","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"suryanshkushwaha"},"content":"//Inspired by the smart usage of enums for date and time formats.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"suryanshkushwaha"},"content":"public enum DatesAndTimesFormatter {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"suryanshkushwaha"},"content":"    INPUT_FORMAT(\"yyyy-MM-dd\"),","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"suryanshkushwaha"},"content":"    OUTPUT_FORMAT(\"MMM dd yyyy\"),","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"suryanshkushwaha"},"content":"    SLASH_FORMAT(\"dd/MM/yyyy\");","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"suryanshkushwaha"},"content":"    public final DateTimeFormatter formatter;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"suryanshkushwaha"},"content":"     * Creates a DatesAndTimesFormatter object.","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"suryanshkushwaha"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"suryanshkushwaha"},"content":"     * @param formatter The DateTimeFormatter to be used.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"suryanshkushwaha"},"content":"    DatesAndTimesFormatter(DateTimeFormatter formatter) {","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"suryanshkushwaha"},"content":"        this.formatter \u003d formatter;","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"suryanshkushwaha"},"content":"     * Creates a DatesAndTimesFormatter object.","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"suryanshkushwaha"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"suryanshkushwaha"},"content":"     * @param format The format of the DateTimeFormatter to be used.","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"suryanshkushwaha"},"content":"    DatesAndTimesFormatter(String format) {","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"suryanshkushwaha"},"content":"        this.formatter \u003d DateTimeFormatter.ofPattern(format);","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"suryanshkushwaha"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"suryanshkushwaha"},"content":"//@@ author","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"suryanshkushwaha":35}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"suryanshkushwaha"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"suryanshkushwaha"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"suryanshkushwaha"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"suryanshkushwaha"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"suryanshkushwaha"},"content":"public class Duke {","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"suryanshkushwaha"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"suryanshkushwaha"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"suryanshkushwaha"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"suryanshkushwaha"},"content":"     * Constructor for Duke.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"suryanshkushwaha"},"content":"     * Creates a new Duke object with the given file path.","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"suryanshkushwaha"},"content":"     * Loads the tasks from the file path.","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"suryanshkushwaha"},"content":"     * If the file path does not exist, creates a new file.","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"suryanshkushwaha"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"suryanshkushwaha"},"content":"     * @param filePath The path to the file where the tasks are stored.","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"suryanshkushwaha"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"suryanshkushwaha"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"suryanshkushwaha"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"suryanshkushwaha"},"content":"            storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"suryanshkushwaha"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"suryanshkushwaha"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"suryanshkushwaha"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"suryanshkushwaha"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"suryanshkushwaha"},"content":"     * Main method for Duke.","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"suryanshkushwaha"},"content":"     * Runs the duke program with the file path.","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"suryanshkushwaha"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"suryanshkushwaha"},"content":"     * @param args Command line arguments.","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"suryanshkushwaha"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"suryanshkushwaha"},"content":"        new Duke(\"./data/stored_tasks\").run();","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"suryanshkushwaha"},"content":"     * Runs the duke program.","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"suryanshkushwaha"},"content":"     * Shows the welcome, exit message.","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"suryanshkushwaha"},"content":"     * Deals with User input.","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"suryanshkushwaha"},"content":"    public void run() {","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"suryanshkushwaha"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"suryanshkushwaha"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"suryanshkushwaha"},"content":"        while (! isExit) {","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"suryanshkushwaha"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"suryanshkushwaha"},"content":"                String fullCommand \u003d ui.getUserInput();","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"suryanshkushwaha"},"content":"                isExit \u003d Parser.checkCommandType(fullCommand, tasks, ui, storage);","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"suryanshkushwaha"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"suryanshkushwaha"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"suryanshkushwaha"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"suryanshkushwaha"},"content":"        ui.showExit();","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"suryanshkushwaha"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"suryanshkushwaha":60}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"suryanshkushwaha"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"suryanshkushwaha"},"content":"import duke.exceptions.IncompleteInputException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"suryanshkushwaha"},"content":"import duke.exceptions.InvalidInputException;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"suryanshkushwaha"},"content":"import duke.exceptions.WrongMarkException;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"suryanshkushwaha"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"suryanshkushwaha"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"suryanshkushwaha"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"suryanshkushwaha"},"content":"import java.util.Objects;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"suryanshkushwaha"},"content":"public class Parser {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"suryanshkushwaha"},"content":"     * Creates a Parser object.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"suryanshkushwaha"},"content":"    public Parser() {","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"suryanshkushwaha"},"content":"     * Checks the type of command given by the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"suryanshkushwaha"},"content":"     * Executes the command given by the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"suryanshkushwaha"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"suryanshkushwaha"},"content":"     * @param commandGiven The command given by the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"suryanshkushwaha"},"content":"     * @param tasks        The TaskList object containing the tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"suryanshkushwaha"},"content":"     * @param ui           The Ui object to deal with user input and output.","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"suryanshkushwaha"},"content":"     * @param storage      The Storage object to deal with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"suryanshkushwaha"},"content":"     * @return true if the command given is \"bye\", false otherwise.","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"suryanshkushwaha"},"content":"     * @throws IncompleteInputException If the command given is incomplete.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"suryanshkushwaha"},"content":"     * @throws WrongMarkException       If the command given is wrong.","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"suryanshkushwaha"},"content":"     * @throws InvalidInputException    If the command given is invalid.","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"suryanshkushwaha"},"content":"    public static boolean checkCommandType(String commandGiven,","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"suryanshkushwaha"},"content":"                                           TaskList tasks,","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"suryanshkushwaha"},"content":"                                           Ui ui,","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"suryanshkushwaha"},"content":"                                           Storage storage)","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"suryanshkushwaha"},"content":"            throws IncompleteInputException,","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"suryanshkushwaha"},"content":"            WrongMarkException,","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"suryanshkushwaha"},"content":"            InvalidInputException {","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"suryanshkushwaha"},"content":"        commandGiven \u003d commandGiven.trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"suryanshkushwaha"},"content":"        String[] splittedCommands \u003d commandGiven.split(\" \");","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"suryanshkushwaha"},"content":"        String commandType \u003d splittedCommands[0];","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"suryanshkushwaha"},"content":"        switch (commandType) {","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"suryanshkushwaha"},"content":"        case \"list\":","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"suryanshkushwaha"},"content":"            ui.separatorLines();","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"suryanshkushwaha"},"content":"            tasks.printTasks();","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"suryanshkushwaha"},"content":"            break;","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"suryanshkushwaha"},"content":"        case \"mark\":","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"suryanshkushwaha"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"suryanshkushwaha"},"content":"                Task task \u003d tasks.get(Integer.parseInt(splittedCommands[1]) - 1);","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"suryanshkushwaha"},"content":"                if (Objects.equals(task.getStatusIcon(), \"X\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"suryanshkushwaha"},"content":"                    ui.showAlreadyDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"suryanshkushwaha"},"content":"                } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"suryanshkushwaha"},"content":"                    ui.separatorLines();","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"suryanshkushwaha"},"content":"                    task.setAsDone(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"suryanshkushwaha"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"suryanshkushwaha"},"content":"                storage.save(tasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"suryanshkushwaha"},"content":"            } catch (IndexOutOfBoundsException | NullPointerException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"suryanshkushwaha"},"content":"                ui.showInvalidIndex();","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"suryanshkushwaha"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"suryanshkushwaha"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"suryanshkushwaha"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"suryanshkushwaha"},"content":"            break;","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"suryanshkushwaha"},"content":"        case \"unmark\":","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"suryanshkushwaha"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"suryanshkushwaha"},"content":"                Task task \u003d tasks.get(Integer.parseInt(splittedCommands[1]) - 1);","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"suryanshkushwaha"},"content":"                if (Objects.equals(task.getStatusIcon(), \" \")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"suryanshkushwaha"},"content":"                    ui.showAlreadyUndone();","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"suryanshkushwaha"},"content":"                } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"suryanshkushwaha"},"content":"                    ui.separatorLines();","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"suryanshkushwaha"},"content":"                    task.setAsUndone(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"suryanshkushwaha"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"suryanshkushwaha"},"content":"                storage.save(tasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"suryanshkushwaha"},"content":"            } catch (IndexOutOfBoundsException | NullPointerException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"suryanshkushwaha"},"content":"                ui.showInvalidIndex();","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"suryanshkushwaha"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"suryanshkushwaha"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"suryanshkushwaha"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"suryanshkushwaha"},"content":"            break;","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"suryanshkushwaha"},"content":"        case \"delete\":","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"suryanshkushwaha"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"suryanshkushwaha"},"content":"                Task task \u003d tasks.get(Integer.parseInt(splittedCommands[1]) - 1);","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"suryanshkushwaha"},"content":"                tasks.deleteTask(Integer.parseInt(splittedCommands[1]));","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"suryanshkushwaha"},"content":"                ui.deleteTaskMessage(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"suryanshkushwaha"},"content":"            } catch (IndexOutOfBoundsException | NullPointerException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"suryanshkushwaha"},"content":"                ui.showInvalidIndex();","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"suryanshkushwaha"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"suryanshkushwaha"},"content":"            break;","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"suryanshkushwaha"},"content":"        case \"find\":","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"suryanshkushwaha"},"content":"            ui.separatorLines();","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"suryanshkushwaha"},"content":"            try {","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"suryanshkushwaha"},"content":"                String keyword \u003d splittedCommands[1];","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"suryanshkushwaha"},"content":"                tasks.findTasks(keyword);","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"suryanshkushwaha"},"content":"            } catch (IndexOutOfBoundsException | NullPointerException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"suryanshkushwaha"},"content":"                throw new IncompleteInputException(\"find what eh! \");","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"suryanshkushwaha"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"suryanshkushwaha"},"content":"            break;","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"suryanshkushwaha"},"content":"        case \"bye\":","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"suryanshkushwaha"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"suryanshkushwaha"},"content":"                storage.save(tasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"suryanshkushwaha"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"suryanshkushwaha"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"suryanshkushwaha"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"suryanshkushwaha"},"content":"            return true;","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"suryanshkushwaha"},"content":"        default:","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"suryanshkushwaha"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"suryanshkushwaha"},"content":"                Task task \u003d Task.createTask(commandGiven);","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"suryanshkushwaha"},"content":"                tasks.addTask(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"suryanshkushwaha"},"content":"                ui.addTaskMessage(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"suryanshkushwaha"},"content":"                storage.save(tasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"suryanshkushwaha"},"content":"            } catch (InvalidInputException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"suryanshkushwaha"},"content":"                ui.separatorLines();","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"suryanshkushwaha"},"content":"                throw new InvalidInputException(\"I dont understand! \" + e);","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"suryanshkushwaha"},"content":"            } catch (IncompleteInputException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"suryanshkushwaha"},"content":"                ui.separatorLines();","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"suryanshkushwaha"},"content":"                throw new IncompleteInputException(\"Incomplete input eh! \" + e);","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"suryanshkushwaha"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"suryanshkushwaha"},"content":"                ui.showSaveError();","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"suryanshkushwaha"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"suryanshkushwaha"},"content":"        return false;","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"suryanshkushwaha"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"suryanshkushwaha":122}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"suryanshkushwaha"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"suryanshkushwaha"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"suryanshkushwaha"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"suryanshkushwaha"},"content":"import java.io.File;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"suryanshkushwaha"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"suryanshkushwaha"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"suryanshkushwaha"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"suryanshkushwaha"},"content":"public class Storage {","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"suryanshkushwaha"},"content":"    private String filePath;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"suryanshkushwaha"},"content":"    private File file;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"suryanshkushwaha"},"content":"    private Scanner sc;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"suryanshkushwaha"},"content":"     * Creates a Storage object.","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"suryanshkushwaha"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"suryanshkushwaha"},"content":"     * @param filePath The path to the file where the tasks are stored.","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"suryanshkushwaha"},"content":"     * @throws IOException If the file does not exist and cannot be created.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"suryanshkushwaha"},"content":"    public Storage(String filePath) throws IOException {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"suryanshkushwaha"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"suryanshkushwaha"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"suryanshkushwaha"},"content":"        if (! file.exists()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"suryanshkushwaha"},"content":"            System.out.println(\"File does not exist. Creating file...\");","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"suryanshkushwaha"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"suryanshkushwaha"},"content":"            file.createNewFile();","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"suryanshkushwaha"},"content":"            System.out.println(\"File created!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"suryanshkushwaha"},"content":"     * Saves the tasks in the TaskList to the file.","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"suryanshkushwaha"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"suryanshkushwaha"},"content":"     * @param tasks The TaskList object containing the tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"suryanshkushwaha"},"content":"     * @throws IOException If the file does not exist and cannot be created.","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"suryanshkushwaha"},"content":"    public void save(TaskList tasks) throws IOException {","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"suryanshkushwaha"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"suryanshkushwaha"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"suryanshkushwaha"},"content":"            fw.write(task.toString() + \"\\n\");","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"suryanshkushwaha"},"content":"        fw.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"suryanshkushwaha"},"content":"     * Loads the tasks from the file.","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"suryanshkushwaha"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"suryanshkushwaha"},"content":"     * @return The Scanner object containing the tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"suryanshkushwaha"},"content":"     * @throws IOException If the file does not exist and cannot be created.","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"suryanshkushwaha"},"content":"    public Scanner load() throws IOException {","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"suryanshkushwaha"},"content":"        if (sc !\u003d null) {","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"suryanshkushwaha"},"content":"            return sc;","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"suryanshkushwaha"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"suryanshkushwaha"},"content":"            sc \u003d new Scanner(this.file);","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"suryanshkushwaha"},"content":"            return sc;","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"suryanshkushwaha"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"suryanshkushwaha":61}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"suryanshkushwaha"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"suryanshkushwaha"},"content":"import duke.exceptions.WrongMarkException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"suryanshkushwaha"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"suryanshkushwaha"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"suryanshkushwaha"},"content":"public class Ui {","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"suryanshkushwaha"},"content":"    private final String LOGO \u003d \"\" +","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"suryanshkushwaha"},"content":"            \"  /\\\\______/\\\\ \\n\" +","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"suryanshkushwaha"},"content":"            \" /  O    O  \\\\ \\n\" +","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"suryanshkushwaha"},"content":"            \"|    -_-     | \\n\" +","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"suryanshkushwaha"},"content":"            \"|   \\\\___/    | \\n\" +","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"suryanshkushwaha"},"content":"            \" \\\\__________/ \\n\";","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"suryanshkushwaha"},"content":"     * Creates a Ui object.","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"suryanshkushwaha"},"content":"    public Ui() {","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"suryanshkushwaha"},"content":"     * Prints the welcome message.","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"suryanshkushwaha"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"suryanshkushwaha"},"content":"        separatorLines();","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"suryanshkushwaha"},"content":"        System.out.println(LOGO);","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"suryanshkushwaha"},"content":"        System.out.println(\"Call me sillyBOT\\n\" +","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"suryanshkushwaha"},"content":"                \"Tell me what silly things you are gonna do, if you are haha?\");","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"suryanshkushwaha"},"content":"     * Prints the exit message.","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"suryanshkushwaha"},"content":"    public void showExit() {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"suryanshkushwaha"},"content":"        separatorLines();","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"suryanshkushwaha"},"content":"        System.out.println(\"See ya! I know you are gonna procrastinate again.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"suryanshkushwaha"},"content":"        separatorLines();","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"suryanshkushwaha"},"content":"     * Prints the separator lines.","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"suryanshkushwaha"},"content":"    public void separatorLines() {","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"suryanshkushwaha"},"content":"        System.out.println(\"_\".repeat(50));","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"suryanshkushwaha"},"content":"     * Gets the user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"suryanshkushwaha"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"suryanshkushwaha"},"content":"     * @return The user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"suryanshkushwaha"},"content":"    public String getUserInput() {","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"suryanshkushwaha"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"suryanshkushwaha"},"content":"        separatorLines();","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"suryanshkushwaha"},"content":"        System.out.println(\"What do you want to do, eh?\");","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"suryanshkushwaha"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"suryanshkushwaha"},"content":"     * Prints message if task is already done.","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"suryanshkushwaha"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"suryanshkushwaha"},"content":"     * @throws WrongMarkException If the task is already done.","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"suryanshkushwaha"},"content":"    public void showAlreadyDone() throws WrongMarkException {","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"suryanshkushwaha"},"content":"        separatorLines();","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"suryanshkushwaha"},"content":"        throw new WrongMarkException(\"So silly ah! How mark already done work? You trying to be smart?\");","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"suryanshkushwaha"},"content":"     * Prints message if index is invalid.","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"suryanshkushwaha"},"content":"    public void showInvalidIndex() {","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"suryanshkushwaha"},"content":"        separatorLines();","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"suryanshkushwaha"},"content":"        System.out.println(\"You silly ah! That does not even exist! Wake up!!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"suryanshkushwaha"},"content":"     * Prints message if task is already undone.","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"suryanshkushwaha"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"suryanshkushwaha"},"content":"     * @throws WrongMarkException If the task is already undone.","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"suryanshkushwaha"},"content":"    public void showAlreadyUndone() throws WrongMarkException {","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"suryanshkushwaha"},"content":"        separatorLines();","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"suryanshkushwaha"},"content":"        throw new WrongMarkException(\"Yea I know you didn\u0027t do it! Why tell me again? Start working now!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"suryanshkushwaha"},"content":"     * Prints message for deleting task.","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"suryanshkushwaha"},"content":"    public void deleteTaskMessage(Task task) {","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"suryanshkushwaha"},"content":"        separatorLines();","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"suryanshkushwaha"},"content":"        System.out.println(\"HAhahah! You couldn\u0027t do it. Could ya?\\n\" + task + \"\\n\" +","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"suryanshkushwaha"},"content":"                \"Now you have \" + Task.taskCount + \" tasks in the list.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"suryanshkushwaha"},"content":"     * Prints message for adding task.","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"suryanshkushwaha"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"suryanshkushwaha"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-09-03"},{"lineNumber":101,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"suryanshkushwaha"},"content":"    public void addTaskMessage(Task task) {","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"suryanshkushwaha"},"content":"        separatorLines();","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"suryanshkushwaha"},"content":"        System.out.println(\"For some reason I believe you are gonna do that!\\n\" + task + \"\\n\" +","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"suryanshkushwaha"},"content":"                \"Now you have \" + Task.taskCount + \" tasks in the list.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"suryanshkushwaha"},"content":"     * Prints error message for saving task.","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"suryanshkushwaha"},"content":"    public void showSaveError() {","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"suryanshkushwaha"},"content":"        separatorLines();","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"suryanshkushwaha"},"content":"        System.out.println(\"Something went wrong while saving your tasks. Remember I am silly! :(.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":117,"author":{"gitId":"suryanshkushwaha"},"content":"     * Prints error message for loading task.","lastModifiedDate":"2023-09-03"},{"lineNumber":118,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":119,"author":{"gitId":"suryanshkushwaha"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"suryanshkushwaha"},"content":"        separatorLines();","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"suryanshkushwaha"},"content":"        System.out.println(\"Something went wrong while loading your tasks. :(.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"suryanshkushwaha"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"suryanshkushwaha":123}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"suryanshkushwaha"},"content":"package duke.exceptions;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"suryanshkushwaha"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"suryanshkushwaha"},"content":"     * Constructor for DukeException.","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"suryanshkushwaha"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"suryanshkushwaha"},"content":"     * @param message Error message.","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"suryanshkushwaha"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"suryanshkushwaha"},"content":"        super(message);","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"suryanshkushwaha"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"suryanshkushwaha"},"content":"    public String toString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"suryanshkushwaha"},"content":"        return super.getMessage();","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"suryanshkushwaha"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"suryanshkushwaha":17}},{"path":"src/main/java/duke/exceptions/IncompleteInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"suryanshkushwaha"},"content":"package duke.exceptions;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"suryanshkushwaha"},"content":"public class IncompleteInputException extends DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"suryanshkushwaha"},"content":"     * Constructor for IncompleteInputException.","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"suryanshkushwaha"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"suryanshkushwaha"},"content":"     * @param message Error message.","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"suryanshkushwaha"},"content":"    public IncompleteInputException(String message) {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"suryanshkushwaha"},"content":"        super(message);","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"suryanshkushwaha"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"suryanshkushwaha":12}},{"path":"src/main/java/duke/exceptions/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"suryanshkushwaha"},"content":"package duke.exceptions;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"suryanshkushwaha"},"content":"public class InvalidInputException extends DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"suryanshkushwaha"},"content":"     * Constructor for InvalidInputException.","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"suryanshkushwaha"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"suryanshkushwaha"},"content":"     * @param message Error message.","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"suryanshkushwaha"},"content":"    public InvalidInputException(String message) {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"suryanshkushwaha"},"content":"        super(message);","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"suryanshkushwaha"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"suryanshkushwaha":12}},{"path":"src/main/java/duke/exceptions/WrongMarkException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"suryanshkushwaha"},"content":"package duke.exceptions;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"suryanshkushwaha"},"content":"public class WrongMarkException extends DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"suryanshkushwaha"},"content":"     * Constructor for WrongMarkException.","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"suryanshkushwaha"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"suryanshkushwaha"},"content":"     * @param message Error message.","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"suryanshkushwaha"},"content":"    public WrongMarkException(String message) {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"suryanshkushwaha"},"content":"        super(message);","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"suryanshkushwaha"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"suryanshkushwaha":12}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"suryanshkushwaha"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"suryanshkushwaha"},"content":"import duke.DatesAndTimesFormatter;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"suryanshkushwaha"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"suryanshkushwaha"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"suryanshkushwaha"},"content":"    protected String by;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"suryanshkushwaha"},"content":"    protected LocalDate date;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"suryanshkushwaha"},"content":"     * Creates a Deadline object.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"suryanshkushwaha"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"suryanshkushwaha"},"content":"     * @param description The description of the Deadline.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"suryanshkushwaha"},"content":"     * @param by          The date of the Deadline.","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"suryanshkushwaha"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"suryanshkushwaha"},"content":"        super(description);","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"suryanshkushwaha"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"suryanshkushwaha"},"content":"        this.date \u003d Task.parseDate(by);","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"suryanshkushwaha"},"content":"        if (date !\u003d null) {","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"suryanshkushwaha"},"content":"            this.by \u003d date.format(DatesAndTimesFormatter.OUTPUT_FORMAT.formatter);","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"suryanshkushwaha"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"suryanshkushwaha"},"content":"    public String toString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"suryanshkushwaha"},"content":"        return \"|D| \" + super.toString() + \" (by: \" + this.by + \")\";","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"suryanshkushwaha"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"suryanshkushwaha":30}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"suryanshkushwaha"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"suryanshkushwaha"},"content":"import duke.DatesAndTimesFormatter;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"suryanshkushwaha"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"suryanshkushwaha"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"suryanshkushwaha"},"content":"    protected String from;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"suryanshkushwaha"},"content":"    protected String to;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"suryanshkushwaha"},"content":"    protected LocalDate startDate;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"suryanshkushwaha"},"content":"    protected LocalDate endDate;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"suryanshkushwaha"},"content":"     * Creates an Event object.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"suryanshkushwaha"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"suryanshkushwaha"},"content":"     * @param description The description of the Event.","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"suryanshkushwaha"},"content":"     * @param from        The start date of the Event.","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"suryanshkushwaha"},"content":"     * @param to          The end date of the Event.","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"suryanshkushwaha"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"suryanshkushwaha"},"content":"        super(description);","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"suryanshkushwaha"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"suryanshkushwaha"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"suryanshkushwaha"},"content":"        this.startDate \u003d Task.parseDate(from);","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"suryanshkushwaha"},"content":"        this.endDate \u003d Task.parseDate(to);","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"suryanshkushwaha"},"content":"        if (startDate !\u003d null) {","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"suryanshkushwaha"},"content":"            this.from \u003d startDate.format(DatesAndTimesFormatter.OUTPUT_FORMAT.formatter);","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"suryanshkushwaha"},"content":"        if (endDate !\u003d null) {","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"suryanshkushwaha"},"content":"            this.to \u003d endDate.format(DatesAndTimesFormatter.OUTPUT_FORMAT.formatter);","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"suryanshkushwaha"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"suryanshkushwaha"},"content":"    public String toString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"suryanshkushwaha"},"content":"        return \"|E| \" + super.toString() + \" (from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"suryanshkushwaha"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"suryanshkushwaha":38}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"suryanshkushwaha"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"suryanshkushwaha"},"content":"import duke.DatesAndTimesFormatter;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"suryanshkushwaha"},"content":"import duke.exceptions.IncompleteInputException;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"suryanshkushwaha"},"content":"import duke.exceptions.InvalidInputException;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"suryanshkushwaha"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"suryanshkushwaha"},"content":"public class Task {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"suryanshkushwaha"},"content":"    protected String description;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"suryanshkushwaha"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"suryanshkushwaha"},"content":"    public static int taskCount \u003d 0;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"suryanshkushwaha"},"content":"     * Creates a Task object.","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"suryanshkushwaha"},"content":"     * Keeps track of the number of Tasks created.","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"suryanshkushwaha"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"suryanshkushwaha"},"content":"     * @param description The description of the Task.","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"suryanshkushwaha"},"content":"    public Task(String description) {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"suryanshkushwaha"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"suryanshkushwaha"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"suryanshkushwaha"},"content":"        taskCount++;","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"suryanshkushwaha"},"content":"     * Returns the status icon of the Task.","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"suryanshkushwaha"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"suryanshkushwaha"},"content":"     * @return The status icon of the Task.","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"suryanshkushwaha"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"suryanshkushwaha"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"suryanshkushwaha"},"content":"     * Sets the Task as done.","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"suryanshkushwaha"},"content":"     * Prints a message to the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"suryanshkushwaha"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"suryanshkushwaha"},"content":"     * @param task The Task to be set as done.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"suryanshkushwaha"},"content":"    public void setAsDone(Task task) {","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"suryanshkushwaha"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"suryanshkushwaha"},"content":"        System.out.println(\"Whoa... are you kidding me? You did that!?\" + \"\\n\" + task);","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"suryanshkushwaha"},"content":"     * Sets the Task as done.","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"suryanshkushwaha"},"content":"     * Used only for Tasks read from the file to avoid printing the message to the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"suryanshkushwaha"},"content":"    public void setAsDoneFromFile() {","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"suryanshkushwaha"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"suryanshkushwaha"},"content":"     * Sets the Task as undone.","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"suryanshkushwaha"},"content":"     * Prints a message to the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"suryanshkushwaha"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"suryanshkushwaha"},"content":"     * @param task The Task to be set as undone.","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"suryanshkushwaha"},"content":"    public void setAsUndone(Task task) {","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"suryanshkushwaha"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"suryanshkushwaha"},"content":"        System.out.println(\"HAHHAA! I knew it! You won\u0027t be able to!\" + \"\\n\" + task);","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"suryanshkushwaha"},"content":"     * Returns the description of the Task.","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"suryanshkushwaha"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"suryanshkushwaha"},"content":"     * @return The description of the Task.","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"suryanshkushwaha"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"suryanshkushwaha"},"content":"        return this.description;","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"suryanshkushwaha"},"content":"     * Returns the type of Task (Todo, Deadline, Event).","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"suryanshkushwaha"},"content":"     * Checks the user command and creates the appropriate Task.","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"suryanshkushwaha"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"suryanshkushwaha"},"content":"     * @param command The command input by the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"suryanshkushwaha"},"content":"     * @return The number of Tasks created.","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"suryanshkushwaha"},"content":"     * @throws IncompleteInputException If the command is incomplete.","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"suryanshkushwaha"},"content":"     * @throws InvalidInputException    If the command is invalid.","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"suryanshkushwaha"},"content":"    public static Task createTask(String command) throws IncompleteInputException, InvalidInputException {","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"suryanshkushwaha"},"content":"        String[] splittedCommand \u003d command.split(\" \", 2);","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"suryanshkushwaha"},"content":"        String taskType \u003d splittedCommand[0];","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"suryanshkushwaha"},"content":"        if (splittedCommand.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"suryanshkushwaha"},"content":"            if (taskType.equals(\"todo\") || taskType.equals(\"deadline\") || taskType.equals(\"event\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"suryanshkushwaha"},"content":"                throw new IncompleteInputException(\"The description of a \" + taskType + \" cannot be empty.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"suryanshkushwaha"},"content":"            } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"suryanshkushwaha"},"content":"                throw new InvalidInputException(\"That is some garbage input you have there.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"suryanshkushwaha"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"suryanshkushwaha"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"suryanshkushwaha"},"content":"            String taskDescription \u003d splittedCommand[1];","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"suryanshkushwaha"},"content":"            switch (taskType) {","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"suryanshkushwaha"},"content":"            case \"todo\":","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"suryanshkushwaha"},"content":"                return new Todo(taskDescription);","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"suryanshkushwaha"},"content":"            case \"deadline\":","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"suryanshkushwaha"},"content":"                String[] deadlineSplit \u003d taskDescription.split(\" /by \");","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"suryanshkushwaha"},"content":"                if (deadlineSplit.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"suryanshkushwaha"},"content":"                    throw new IncompleteInputException(\"Deadline what ah? Why leave empty?\");","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"suryanshkushwaha"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"suryanshkushwaha"},"content":"                String deadlineDescription \u003d deadlineSplit[0];","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"suryanshkushwaha"},"content":"                String deadlineBy \u003d deadlineSplit[1];","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"suryanshkushwaha"},"content":"                return new Deadline(deadlineDescription, deadlineBy);","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"suryanshkushwaha"},"content":"            case \"event\":","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"suryanshkushwaha"},"content":"                String[] eventSplit \u003d taskDescription.split(\" /from \");","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"suryanshkushwaha"},"content":"                if (eventSplit.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"suryanshkushwaha"},"content":"                    throw new IncompleteInputException(\"Event what ah? Why leave empty?\");","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"suryanshkushwaha"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"suryanshkushwaha"},"content":"                String eventDescription \u003d eventSplit[0];","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"suryanshkushwaha"},"content":"                String eventFrom \u003d eventSplit[1].split(\" /to \")[0];","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"suryanshkushwaha"},"content":"                String eventTo \u003d eventSplit[1].split(\" /to \")[1];","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"suryanshkushwaha"},"content":"                return new Event(eventDescription, eventFrom, eventTo);","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"suryanshkushwaha"},"content":"            default:","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"suryanshkushwaha"},"content":"                throw new InvalidInputException(\"That is some garbage input you have there.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"suryanshkushwaha"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":121,"author":{"gitId":"suryanshkushwaha"},"content":"     * Creates a task based on the line in the file.","lastModifiedDate":"2023-09-03"},{"lineNumber":122,"author":{"gitId":"suryanshkushwaha"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":123,"author":{"gitId":"suryanshkushwaha"},"content":"     * @param taskLine Line in the file.","lastModifiedDate":"2023-09-03"},{"lineNumber":124,"author":{"gitId":"suryanshkushwaha"},"content":"     * @return Task created.","lastModifiedDate":"2023-09-03"},{"lineNumber":125,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":126,"author":{"gitId":"suryanshkushwaha"},"content":"    public static Task createTaskFromFile(String taskLine) {","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"suryanshkushwaha"},"content":"        char taskType \u003d taskLine.charAt(1);","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"suryanshkushwaha"},"content":"        char taskStatus \u003d taskLine.charAt(5);","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"suryanshkushwaha"},"content":"        String taskDescription \u003d taskLine.substring(8);","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"suryanshkushwaha"},"content":"        Task task \u003d null;","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"suryanshkushwaha"},"content":"        switch (taskType) {","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"suryanshkushwaha"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"suryanshkushwaha"},"content":"            task \u003d new Todo(taskDescription);","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"suryanshkushwaha"},"content":"            break;","lastModifiedDate":"2023-09-02"},{"lineNumber":135,"author":{"gitId":"suryanshkushwaha"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"suryanshkushwaha"},"content":"            String deadlineDescription \u003d taskDescription.split(\" \\\\(by: \")[0];","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"suryanshkushwaha"},"content":"            String deadlineBy \u003d taskDescription.split(\" \\\\(by: \")[1].split(\"\\\\)\")[0];","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"suryanshkushwaha"},"content":"            task \u003d new Deadline(deadlineDescription, deadlineBy);","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"suryanshkushwaha"},"content":"            break;","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"suryanshkushwaha"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2023-09-02"},{"lineNumber":141,"author":{"gitId":"suryanshkushwaha"},"content":"            String eventDescription \u003d taskDescription.split(\" \\\\(from: \")[0];","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"suryanshkushwaha"},"content":"            String eventFrom \u003d taskDescription.split(\" \\\\(from: \")[1].split(\" to: \")[0];","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"suryanshkushwaha"},"content":"            String eventTo \u003d taskDescription.split(\" \\\\(from: \")[1].split(\" to: \")[1].split(\"\\\\)\")[0];","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"suryanshkushwaha"},"content":"            task \u003d new Event(eventDescription, eventFrom, eventTo);","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"suryanshkushwaha"},"content":"            break;","lastModifiedDate":"2023-09-02"},{"lineNumber":146,"author":{"gitId":"suryanshkushwaha"},"content":"        default:","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"suryanshkushwaha"},"content":"            System.out.println(\"Unknown task type. Returning null...\");","lastModifiedDate":"2023-09-02"},{"lineNumber":148,"author":{"gitId":"suryanshkushwaha"},"content":"            return null;","lastModifiedDate":"2023-09-02"},{"lineNumber":149,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":150,"author":{"gitId":"suryanshkushwaha"},"content":"        if (taskStatus \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2023-09-02"},{"lineNumber":151,"author":{"gitId":"suryanshkushwaha"},"content":"            task.setAsDoneFromFile();","lastModifiedDate":"2023-09-02"},{"lineNumber":152,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":153,"author":{"gitId":"suryanshkushwaha"},"content":"        return task;","lastModifiedDate":"2023-09-02"},{"lineNumber":154,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":155,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":156,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":157,"author":{"gitId":"suryanshkushwaha"},"content":"     * Returns the date in LocalDate format.","lastModifiedDate":"2023-09-03"},{"lineNumber":158,"author":{"gitId":"suryanshkushwaha"},"content":"     * Checks the date format and returns the date in LocalDate format.","lastModifiedDate":"2023-09-03"},{"lineNumber":159,"author":{"gitId":"suryanshkushwaha"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":160,"author":{"gitId":"suryanshkushwaha"},"content":"     * @param date The date to be parsed.","lastModifiedDate":"2023-09-03"},{"lineNumber":161,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":162,"author":{"gitId":"suryanshkushwaha"},"content":"    public static LocalDate parseDate(String date) {","lastModifiedDate":"2023-09-03"},{"lineNumber":163,"author":{"gitId":"suryanshkushwaha"},"content":"        for (DatesAndTimesFormatter formatter : DatesAndTimesFormatter.values()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":164,"author":{"gitId":"suryanshkushwaha"},"content":"            try {","lastModifiedDate":"2023-09-03"},{"lineNumber":165,"author":{"gitId":"suryanshkushwaha"},"content":"                return LocalDate.parse(date, formatter.formatter);","lastModifiedDate":"2023-09-03"},{"lineNumber":166,"author":{"gitId":"suryanshkushwaha"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":167,"author":{"gitId":"suryanshkushwaha"},"content":"                continue;","lastModifiedDate":"2023-09-03"},{"lineNumber":168,"author":{"gitId":"suryanshkushwaha"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":169,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":170,"author":{"gitId":"suryanshkushwaha"},"content":"        System.out.println(\"Unknown date format. Returning null...\");","lastModifiedDate":"2023-09-03"},{"lineNumber":171,"author":{"gitId":"suryanshkushwaha"},"content":"        return null;","lastModifiedDate":"2023-09-03"},{"lineNumber":172,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":173,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":174,"author":{"gitId":"suryanshkushwaha"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":175,"author":{"gitId":"suryanshkushwaha"},"content":"    public String toString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":176,"author":{"gitId":"suryanshkushwaha"},"content":"        return \"|\" + this.getStatusIcon() + \"| \" + this.getDescription();","lastModifiedDate":"2023-09-02"},{"lineNumber":177,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":178,"author":{"gitId":"suryanshkushwaha"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"suryanshkushwaha":178}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"suryanshkushwaha"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"suryanshkushwaha"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"suryanshkushwaha"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"suryanshkushwaha"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"suryanshkushwaha"},"content":"     * Creates a TaskList object.","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"suryanshkushwaha"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"suryanshkushwaha"},"content":"        super();","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"suryanshkushwaha"},"content":"     * Creates a TaskList object from a file.","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"suryanshkushwaha"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"suryanshkushwaha"},"content":"     * @param tasks The file containing the tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"suryanshkushwaha"},"content":"    public TaskList(Scanner tasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"suryanshkushwaha"},"content":"        super();","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"suryanshkushwaha"},"content":"        while (tasks.hasNextLine()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"suryanshkushwaha"},"content":"            String line \u003d tasks.nextLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"suryanshkushwaha"},"content":"            Task task \u003d Task.createTaskFromFile(line);","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"suryanshkushwaha"},"content":"            this.add(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"suryanshkushwaha"},"content":"     * Adds task to the TaskList.","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"suryanshkushwaha"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"suryanshkushwaha"},"content":"     * @param task the task to be added to the TaskList.","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"suryanshkushwaha"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"suryanshkushwaha"},"content":"        this.add(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"suryanshkushwaha"},"content":"     * Deletes task from the TaskList.","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"suryanshkushwaha"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"suryanshkushwaha"},"content":"     * @param index the (index - 1) of the task to be deleted from the TaskList.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"suryanshkushwaha"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"suryanshkushwaha"},"content":"        Task.taskCount--;","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"suryanshkushwaha"},"content":"        this.remove(index - 1);","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"suryanshkushwaha"},"content":"     * Prints the tasks in the TaskList.","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"suryanshkushwaha"},"content":"    public void printTasks() {","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"suryanshkushwaha"},"content":"        if (this.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"suryanshkushwaha"},"content":"            System.out.println(\"Either you are a very productive person, or you have nothing to do.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"suryanshkushwaha"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"suryanshkushwaha"},"content":"            System.out.println(\"This is what you\u0027ve been procrastinating about...\");","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"suryanshkushwaha"},"content":"            for (int i \u003d 0; i \u003c this.size(); i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"suryanshkushwaha"},"content":"                System.out.println((i + 1) + \". \" + this.get(i));","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"suryanshkushwaha"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"suryanshkushwaha"},"content":"     * Find tasks that contain the keyword.","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"suryanshkushwaha"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"suryanshkushwaha"},"content":"     * @param keyword keyword to be searched.","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"suryanshkushwaha"},"content":"    public void findTasks(String keyword) {","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"suryanshkushwaha"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"suryanshkushwaha"},"content":"        for (int i \u003d 0; i \u003c this.size(); i++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"suryanshkushwaha"},"content":"            if (this.get(i).getDescription().contains(keyword)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"suryanshkushwaha"},"content":"                System.out.println((i + 1) + \". \" + this.get(i));","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"suryanshkushwaha"},"content":"                count++;","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"suryanshkushwaha"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"suryanshkushwaha"},"content":"        if (count \u003d\u003d 0) {","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"suryanshkushwaha"},"content":"            System.out.println(\"how you find that when you dont have that?\");","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"suryanshkushwaha"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"suryanshkushwaha":78}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"suryanshkushwaha"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"suryanshkushwaha"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"suryanshkushwaha"},"content":"     * Creates a Todo object.","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"suryanshkushwaha"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"suryanshkushwaha"},"content":"     * @param description The description of the Todo","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"suryanshkushwaha"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"suryanshkushwaha"},"content":"        super(description);","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"suryanshkushwaha"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"suryanshkushwaha"},"content":"    public String toString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"suryanshkushwaha"},"content":"        return \"|T| \" + super.toString();","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"suryanshkushwaha"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"suryanshkushwaha":17}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"suryanshkushwaha"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"suryanshkushwaha"},"content":"public class DukeTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"suryanshkushwaha"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"suryanshkushwaha":4}},{"path":"src/test/java/duke/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"suryanshkushwaha"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"suryanshkushwaha"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"suryanshkushwaha"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"suryanshkushwaha"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"suryanshkushwaha"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"suryanshkushwaha"},"content":"    void deadlineTask_encodesCorrectly() throws Exception {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"suryanshkushwaha"},"content":"        assertEquals(\"|D| | | return book (by: Jun 10 2024)\",","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"suryanshkushwaha"},"content":"                new Deadline(\"return book\", \"2024-06-10\").toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"suryanshkushwaha"},"content":"        assertEquals(\"|D| | | do homework (by: Dec 10 2024)\",","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"suryanshkushwaha"},"content":"                new Deadline(\"do homework\", \"2024-12-10\").toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"suryanshkushwaha"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"suryanshkushwaha":16}},{"path":"src/test/java/duke/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"suryanshkushwaha"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"suryanshkushwaha"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"suryanshkushwaha"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"suryanshkushwaha"},"content":"public class EventTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"suryanshkushwaha"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"suryanshkushwaha"},"content":"    void eventTask_encodesCorrectly() throws Exception {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"suryanshkushwaha"},"content":"         assertEquals(\"|E| | | project meeting (from: Jun 08 2033 to: Dec 08 2234)\",","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"suryanshkushwaha"},"content":"                 new Event(\"project meeting\", \"2033-06-08\", \"2234-12-08\").toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"suryanshkushwaha"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"suryanshkushwaha":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"suryanshkushwaha"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"suryanshkushwaha"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"suryanshkushwaha"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"suryanshkushwaha"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"suryanshkushwaha"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"suryanshkushwaha"},"content":"mark 3","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"suryanshkushwaha"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"suryanshkushwaha"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"suryanshkushwaha"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"suryanshkushwaha":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"suryanshkushwaha"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"suryanshkushwaha":1,"-":20}}]
