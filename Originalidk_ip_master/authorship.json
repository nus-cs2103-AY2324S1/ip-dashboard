[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":"    private LocalDateTime due;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"    public Deadline(String description, LocalDateTime due) {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"        this.due \u003d due;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.due.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\")) + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"    public String writeToFile() {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"        int mark;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"        if (super.getStatusIcon() \u003d\u003d \"X\") {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"            mark \u003d 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"            mark \u003d 0;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"        return \"D | \" + mark + \" | \" + super.writeToFile() + \" | \" + this.due.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Originalidk":27}},{"path":"src/main/java/DeadlineUnclearException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"public class DeadlineUnclearException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Originalidk":2}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"        this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"    public void run() {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"        Ui.start();","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"        Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"        String input \u003d Ui.getInput(scan);","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Originalidk"},"content":"            Parser.parseInput(input, this.tasks, this.storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Originalidk"},"content":"            input \u003d Ui.getInput(scan);","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Originalidk"},"content":"        Ui.bye();","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Originalidk"},"content":"        new Duke(\"./duke.txt\").run();","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Originalidk"},"content":"        /*FileWriter writer \u003d new FileWriter(\"./duke.txt\");","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Originalidk"},"content":"        writer.write(\"\");*/","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Originalidk"},"content":"    /*","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Originalidk"},"content":"    public static void main(String[] args) throws InvalidTextException, EmptyDescriptionException, InvalidTaskException,","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"Originalidk"},"content":"            DeadlineUnclearException, DurationUnclearException, FileNotFoundException, IOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"Originalidk"},"content":"        Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"Originalidk"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"Originalidk"},"content":"        File f \u003d new File(\"./duke.txt\");","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"Originalidk"},"content":"        if (!f.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"Originalidk"},"content":"            f.createNewFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"Originalidk"},"content":"        Scanner fileScan \u003d new Scanner(f);","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"Originalidk"},"content":"        while (fileScan.hasNext()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"Originalidk"},"content":"            String taskString \u003d fileScan.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"Originalidk"},"content":"            if (taskString.charAt(0) \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"Originalidk"},"content":"                Task task \u003d new ToDo(taskString.substring(8));","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"Originalidk"},"content":"                if (taskString.charAt(4) \u003d\u003d \u00271\u0027) {","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"Originalidk"},"content":"                    task.mark();","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"Originalidk"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"Originalidk"},"content":"                list.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"Originalidk"},"content":"            } else if (taskString.charAt(0) \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"Originalidk"},"content":"                String[] details \u003d taskString.substring(8).split(Pattern.quote(\" | \"));","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"Originalidk"},"content":"                LocalDateTime dateTime \u003d LocalDateTime.parse(details[1], DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"Originalidk"},"content":"                Task task \u003d new Deadline(details[0], dateTime);","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"Originalidk"},"content":"                if (taskString.charAt(4) \u003d\u003d \u00271\u0027) {","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"Originalidk"},"content":"                    task.mark();","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"Originalidk"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"Originalidk"},"content":"                list.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"Originalidk"},"content":"            } else if (taskString.charAt(0) \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"Originalidk"},"content":"                String[] details \u003d taskString.substring(8).split(Pattern.quote(\" | \"));","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"Originalidk"},"content":"                String[] duration \u003d details[1].split(\" -\u003e \");","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"Originalidk"},"content":"                LocalDateTime fromDateTime \u003d LocalDateTime.parse(duration[0], DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"Originalidk"},"content":"                LocalDateTime toDateTime \u003d LocalDateTime.parse(duration[1], DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"Originalidk"},"content":"                Task task \u003d new Event(details[0], fromDateTime, toDateTime);","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"Originalidk"},"content":"                if (taskString.charAt(4) \u003d\u003d \u00271\u0027) {","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"Originalidk"},"content":"                    task.mark();","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"Originalidk"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"Originalidk"},"content":"                list.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"Originalidk"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-08-23"},{"lineNumber":80,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"     \" + \"Hello! I\u0027m ChatGP0\");","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"     \" + \"What can I do for you?\");","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":83,"author":{"gitId":"Originalidk"},"content":"        String input \u003d scan.nextLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":84,"author":{"gitId":"Originalidk"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":85,"author":{"gitId":"Originalidk"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"Originalidk"},"content":"                if (input.equals(\"list\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":87,"author":{"gitId":"Originalidk"},"content":"                    System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-08-23"},{"lineNumber":88,"author":{"gitId":"Originalidk"},"content":"                    System.out.println(\"     \" + \"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"Originalidk"},"content":"                    for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-08-23"},{"lineNumber":90,"author":{"gitId":"Originalidk"},"content":"                        Task task \u003d list.get(i);","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"     \" + (i + 1) + \".\" + task.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"Originalidk"},"content":"                    }","lastModifiedDate":"2023-08-23"},{"lineNumber":93,"author":{"gitId":"Originalidk"},"content":"                    System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"Originalidk"},"content":"                } else if (input.startsWith(\"todo \") || (input.startsWith(\"todo\") \u0026\u0026 input.length() \u003d\u003d 4)) {","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"Originalidk"},"content":"                    try {","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"Originalidk"},"content":"                        if (input.length() \u003c\u003d 5 || input.substring(5).isBlank()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"Originalidk"},"content":"                            throw new EmptyDescriptionException();","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"Originalidk"},"content":"                        }","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"Originalidk"},"content":"                        Task task \u003d new ToDo(input.substring(5));","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"Originalidk"},"content":"                        list.add(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"Originalidk"},"content":"                        FileWriter fw;","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"Originalidk"},"content":"                        Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"Originalidk"},"content":"                        if (sc.hasNextLine()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"Originalidk"},"content":"                            fw \u003d new FileWriter(\"./duke.txt\", true);","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"Originalidk"},"content":"                            fw.write(\"\\r\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"Originalidk"},"content":"                        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"Originalidk"},"content":"                            fw \u003d new FileWriter(\"./duke.txt\");","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"Originalidk"},"content":"                        }","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"Originalidk"},"content":"                        fw.write(task.writeToFile());","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"Originalidk"},"content":"                        fw.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":112,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"     Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"       \" + task.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"     Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"Originalidk"},"content":"                    } catch (EmptyDescriptionException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":117,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":118,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"     ☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":119,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"Originalidk"},"content":"                    } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"Originalidk"},"content":"                        throw new RuntimeException(e);","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"Originalidk"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":123,"author":{"gitId":"Originalidk"},"content":"                } else if (input.startsWith(\"deadline \") || (input.startsWith(\"deadline\") \u0026\u0026 input.length() \u003d\u003d 8)) {","lastModifiedDate":"2023-08-24"},{"lineNumber":124,"author":{"gitId":"Originalidk"},"content":"                    try {","lastModifiedDate":"2023-08-24"},{"lineNumber":125,"author":{"gitId":"Originalidk"},"content":"                        if (input.length() \u003c\u003d 9 || input.substring(9).isBlank()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":126,"author":{"gitId":"Originalidk"},"content":"                            throw new EmptyDescriptionException();","lastModifiedDate":"2023-08-24"},{"lineNumber":127,"author":{"gitId":"Originalidk"},"content":"                        }","lastModifiedDate":"2023-08-24"},{"lineNumber":128,"author":{"gitId":"Originalidk"},"content":"                        String[] details \u003d input.substring(9).split(\" /by \");","lastModifiedDate":"2023-08-24"},{"lineNumber":129,"author":{"gitId":"Originalidk"},"content":"                        if (details.length !\u003d 2) {","lastModifiedDate":"2023-08-24"},{"lineNumber":130,"author":{"gitId":"Originalidk"},"content":"                            throw new DeadlineUnclearException();","lastModifiedDate":"2023-08-24"},{"lineNumber":131,"author":{"gitId":"Originalidk"},"content":"                        }","lastModifiedDate":"2023-08-24"},{"lineNumber":132,"author":{"gitId":"Originalidk"},"content":"                        LocalDateTime dateTime \u003d LocalDateTime.parse(details[1], DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"Originalidk"},"content":"                        Task task \u003d new Deadline(details[0], dateTime);","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"Originalidk"},"content":"                        list.add(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":135,"author":{"gitId":"Originalidk"},"content":"                        FileWriter fw;","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"Originalidk"},"content":"                        Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"Originalidk"},"content":"                        if (sc.hasNextLine()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"Originalidk"},"content":"                            fw \u003d new FileWriter(\"./duke.txt\", true);","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"Originalidk"},"content":"                            fw.write(\"\\r\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"Originalidk"},"content":"                        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"Originalidk"},"content":"                            fw \u003d new FileWriter(\"./duke.txt\");","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"Originalidk"},"content":"                        }","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"Originalidk"},"content":"                        fw.write(task.writeToFile());","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"Originalidk"},"content":"                        fw.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":146,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"     Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":147,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"       \" + task.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":148,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"     Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":149,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"Originalidk"},"content":"                    } catch (EmptyDescriptionException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":151,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":152,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"     ☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":153,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":154,"author":{"gitId":"Originalidk"},"content":"                    } catch (DeadlineUnclearException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":155,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":156,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"     ☹ OOPS!!! The deadline is unclear.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":157,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"Originalidk"},"content":"                    } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":159,"author":{"gitId":"Originalidk"},"content":"                        throw new RuntimeException(e);","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"Originalidk"},"content":"                    } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":161,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-08-30"},{"lineNumber":162,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"     ☹ OOPS!!! Please follow the \\\"yyyy-MM-dd HHmm\\\" format.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":163,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":164,"author":{"gitId":"Originalidk"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":165,"author":{"gitId":"Originalidk"},"content":"                } else if (input.startsWith(\"event \") || (input.startsWith(\"event\") \u0026\u0026 input.length() \u003d\u003d 5)) {","lastModifiedDate":"2023-08-24"},{"lineNumber":166,"author":{"gitId":"Originalidk"},"content":"                    try {","lastModifiedDate":"2023-08-24"},{"lineNumber":167,"author":{"gitId":"Originalidk"},"content":"                        if (input.length() \u003c\u003d 6 || input.substring(6).isBlank()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":168,"author":{"gitId":"Originalidk"},"content":"                            throw new EmptyDescriptionException();","lastModifiedDate":"2023-08-24"},{"lineNumber":169,"author":{"gitId":"Originalidk"},"content":"                        }","lastModifiedDate":"2023-08-24"},{"lineNumber":170,"author":{"gitId":"Originalidk"},"content":"                        String[] details \u003d input.substring(6).split(\" /from | /to \");","lastModifiedDate":"2023-08-24"},{"lineNumber":171,"author":{"gitId":"Originalidk"},"content":"                        if (details.length !\u003d 3 || !input.contains(\" /from \") || !input.contains(\" /to \")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":172,"author":{"gitId":"Originalidk"},"content":"                            throw new DurationUnclearException();","lastModifiedDate":"2023-08-24"},{"lineNumber":173,"author":{"gitId":"Originalidk"},"content":"                        }","lastModifiedDate":"2023-08-24"},{"lineNumber":174,"author":{"gitId":"Originalidk"},"content":"                        LocalDateTime fromDateTime \u003d LocalDateTime.parse(details[1], DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":175,"author":{"gitId":"Originalidk"},"content":"                        LocalDateTime toDateTime \u003d LocalDateTime.parse(details[2], DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":176,"author":{"gitId":"Originalidk"},"content":"                        Task task \u003d new Event(details[0], fromDateTime, toDateTime);","lastModifiedDate":"2023-08-30"},{"lineNumber":177,"author":{"gitId":"Originalidk"},"content":"                        list.add(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":178,"author":{"gitId":"Originalidk"},"content":"                        FileWriter fw;","lastModifiedDate":"2023-08-30"},{"lineNumber":179,"author":{"gitId":"Originalidk"},"content":"                        Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2023-08-30"},{"lineNumber":180,"author":{"gitId":"Originalidk"},"content":"                        if (sc.hasNextLine()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":181,"author":{"gitId":"Originalidk"},"content":"                            fw \u003d new FileWriter(\"./duke.txt\", true);","lastModifiedDate":"2023-08-30"},{"lineNumber":182,"author":{"gitId":"Originalidk"},"content":"                            fw.write(\"\\r\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":183,"author":{"gitId":"Originalidk"},"content":"                        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":184,"author":{"gitId":"Originalidk"},"content":"                            fw \u003d new FileWriter(\"./duke.txt\");","lastModifiedDate":"2023-08-30"},{"lineNumber":185,"author":{"gitId":"Originalidk"},"content":"                        }","lastModifiedDate":"2023-08-30"},{"lineNumber":186,"author":{"gitId":"Originalidk"},"content":"                        fw.write(task.writeToFile());","lastModifiedDate":"2023-08-30"},{"lineNumber":187,"author":{"gitId":"Originalidk"},"content":"                        fw.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":188,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":189,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"     Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":190,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"       \" + task.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":191,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"     Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":192,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":193,"author":{"gitId":"Originalidk"},"content":"                    } catch (EmptyDescriptionException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":194,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":195,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"     ☹ OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":196,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":197,"author":{"gitId":"Originalidk"},"content":"                    } catch (DurationUnclearException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":198,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":199,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"     ☹ OOPS!!! The duration is unclear.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":200,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":201,"author":{"gitId":"Originalidk"},"content":"                    } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":202,"author":{"gitId":"Originalidk"},"content":"                        throw new RuntimeException(e);","lastModifiedDate":"2023-08-30"},{"lineNumber":203,"author":{"gitId":"Originalidk"},"content":"                    } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":204,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-08-30"},{"lineNumber":205,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"     ☹ OOPS!!! Please follow the \\\"yyyy-MM-dd HHmm\\\" format.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":206,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":207,"author":{"gitId":"Originalidk"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":208,"author":{"gitId":"Originalidk"},"content":"                } else if (input.startsWith(\"mark \") \u0026\u0026 input.length() \u003e 5 \u0026\u0026 input.substring(5).matches(\"\\\\d+\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":209,"author":{"gitId":"Originalidk"},"content":"                    try {","lastModifiedDate":"2023-08-24"},{"lineNumber":210,"author":{"gitId":"Originalidk"},"content":"                        int number \u003d Integer.parseInt(input.substring(5));","lastModifiedDate":"2023-08-24"},{"lineNumber":211,"author":{"gitId":"Originalidk"},"content":"                        if (number \u003e list.size() || number \u003c\u003d 0) {","lastModifiedDate":"2023-08-24"},{"lineNumber":212,"author":{"gitId":"Originalidk"},"content":"                            throw new InvalidTaskException();","lastModifiedDate":"2023-08-24"},{"lineNumber":213,"author":{"gitId":"Originalidk"},"content":"                        }","lastModifiedDate":"2023-08-24"},{"lineNumber":214,"author":{"gitId":"Originalidk"},"content":"                        Task task \u003d list.get(number - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":215,"author":{"gitId":"Originalidk"},"content":"                        task.mark();","lastModifiedDate":"2023-08-24"},{"lineNumber":216,"author":{"gitId":"Originalidk"},"content":"                        FileWriter fw \u003d new FileWriter(\"./duke.txt\");","lastModifiedDate":"2023-08-30"},{"lineNumber":217,"author":{"gitId":"Originalidk"},"content":"                        for (int i \u003d 0; i \u003c list.size() - 1; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":218,"author":{"gitId":"Originalidk"},"content":"                            fw.write(list.get(i).writeToFile() + \"\\r\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":219,"author":{"gitId":"Originalidk"},"content":"                        }","lastModifiedDate":"2023-08-30"},{"lineNumber":220,"author":{"gitId":"Originalidk"},"content":"                        fw.write(list.get(list.size() - 1).writeToFile());","lastModifiedDate":"2023-08-30"},{"lineNumber":221,"author":{"gitId":"Originalidk"},"content":"                        fw.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":222,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":223,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"     \" + \"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":224,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"       \" + task.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":225,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":226,"author":{"gitId":"Originalidk"},"content":"                    } catch (InvalidTaskException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":227,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":228,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"     ☹ OOPS!!! This task does not exist :O\");","lastModifiedDate":"2023-08-24"},{"lineNumber":229,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-08-24"},{"lineNumber":230,"author":{"gitId":"Originalidk"},"content":"                    } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":231,"author":{"gitId":"Originalidk"},"content":"                        throw new RuntimeException(e);","lastModifiedDate":"2023-08-30"},{"lineNumber":232,"author":{"gitId":"Originalidk"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":233,"author":{"gitId":"Originalidk"},"content":"                } else if (input.startsWith(\"unmark \") \u0026\u0026 input.length() \u003e 7 \u0026\u0026 input.substring(7).matches(\"\\\\d+\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":234,"author":{"gitId":"Originalidk"},"content":"                    try {","lastModifiedDate":"2023-08-24"},{"lineNumber":235,"author":{"gitId":"Originalidk"},"content":"                        int number \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2023-08-24"},{"lineNumber":236,"author":{"gitId":"Originalidk"},"content":"                        if (number \u003e list.size() || number \u003c\u003d 0) {","lastModifiedDate":"2023-08-24"},{"lineNumber":237,"author":{"gitId":"Originalidk"},"content":"                            throw new InvalidTaskException();","lastModifiedDate":"2023-08-24"},{"lineNumber":238,"author":{"gitId":"Originalidk"},"content":"                        }","lastModifiedDate":"2023-08-24"},{"lineNumber":239,"author":{"gitId":"Originalidk"},"content":"                        Task task \u003d list.get(number - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":240,"author":{"gitId":"Originalidk"},"content":"                        task.unmark();","lastModifiedDate":"2023-08-24"},{"lineNumber":241,"author":{"gitId":"Originalidk"},"content":"                        FileWriter fw \u003d new FileWriter(\"./duke.txt\");","lastModifiedDate":"2023-08-30"},{"lineNumber":242,"author":{"gitId":"Originalidk"},"content":"                        for (int i \u003d 0; i \u003c list.size() - 1; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":243,"author":{"gitId":"Originalidk"},"content":"                            fw.write(list.get(i).writeToFile() + \"\\r\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":244,"author":{"gitId":"Originalidk"},"content":"                        }","lastModifiedDate":"2023-08-30"},{"lineNumber":245,"author":{"gitId":"Originalidk"},"content":"                        fw.write(list.get(list.size() - 1).writeToFile());","lastModifiedDate":"2023-08-30"},{"lineNumber":246,"author":{"gitId":"Originalidk"},"content":"                        fw.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":247,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":248,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"     \" + \"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":249,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"       \" + task.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":250,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":251,"author":{"gitId":"Originalidk"},"content":"                    } catch (InvalidTaskException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":252,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":253,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"     ☹ OOPS!!! This task does not exist :O\");","lastModifiedDate":"2023-08-24"},{"lineNumber":254,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-08-24"},{"lineNumber":255,"author":{"gitId":"Originalidk"},"content":"                    } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":256,"author":{"gitId":"Originalidk"},"content":"                        throw new RuntimeException(e);","lastModifiedDate":"2023-08-30"},{"lineNumber":257,"author":{"gitId":"Originalidk"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":258,"author":{"gitId":"Originalidk"},"content":"                } else if (input.startsWith(\"delete \") \u0026\u0026 input.length() \u003e 7 \u0026\u0026 input.substring(7).matches(\"\\\\d+\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":259,"author":{"gitId":"Originalidk"},"content":"                    try {","lastModifiedDate":"2023-08-24"},{"lineNumber":260,"author":{"gitId":"Originalidk"},"content":"                        int number \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2023-08-24"},{"lineNumber":261,"author":{"gitId":"Originalidk"},"content":"                        if (number \u003e list.size() || number \u003c\u003d 0) {","lastModifiedDate":"2023-08-24"},{"lineNumber":262,"author":{"gitId":"Originalidk"},"content":"                            throw new InvalidTaskException();","lastModifiedDate":"2023-08-24"},{"lineNumber":263,"author":{"gitId":"Originalidk"},"content":"                        }","lastModifiedDate":"2023-08-24"},{"lineNumber":264,"author":{"gitId":"Originalidk"},"content":"                        Task task \u003d list.remove(number - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":265,"author":{"gitId":"Originalidk"},"content":"                        FileWriter fw \u003d new FileWriter(\"./duke.txt\");","lastModifiedDate":"2023-08-30"},{"lineNumber":266,"author":{"gitId":"Originalidk"},"content":"                        for (int i \u003d 0; i \u003c list.size() - 1; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":267,"author":{"gitId":"Originalidk"},"content":"                            fw.write(list.get(i).writeToFile() + \"\\r\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":268,"author":{"gitId":"Originalidk"},"content":"                        }","lastModifiedDate":"2023-08-30"},{"lineNumber":269,"author":{"gitId":"Originalidk"},"content":"                        if (list.size() \u003e 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":270,"author":{"gitId":"Originalidk"},"content":"                            fw.write(list.get(list.size() - 1).writeToFile());","lastModifiedDate":"2023-08-30"},{"lineNumber":271,"author":{"gitId":"Originalidk"},"content":"                        }","lastModifiedDate":"2023-08-30"},{"lineNumber":272,"author":{"gitId":"Originalidk"},"content":"                        fw.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":273,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":274,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"     Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":275,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"       \" + task.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":276,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"     Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":277,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":278,"author":{"gitId":"Originalidk"},"content":"                    } catch (InvalidTaskException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":279,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":280,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"     ☹ OOPS!!! This task does not exist :O\");","lastModifiedDate":"2023-08-24"},{"lineNumber":281,"author":{"gitId":"Originalidk"},"content":"                        System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-08-24"},{"lineNumber":282,"author":{"gitId":"Originalidk"},"content":"                    } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":283,"author":{"gitId":"Originalidk"},"content":"                        throw new RuntimeException(e);","lastModifiedDate":"2023-08-30"},{"lineNumber":284,"author":{"gitId":"Originalidk"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":285,"author":{"gitId":"Originalidk"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":286,"author":{"gitId":"Originalidk"},"content":"                else {","lastModifiedDate":"2023-08-24"},{"lineNumber":287,"author":{"gitId":"Originalidk"},"content":"                    throw new InvalidTextException();","lastModifiedDate":"2023-08-24"},{"lineNumber":288,"author":{"gitId":"Originalidk"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":289,"author":{"gitId":"Originalidk"},"content":"            } catch (InvalidTextException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":290,"author":{"gitId":"Originalidk"},"content":"                System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-08-23"},{"lineNumber":291,"author":{"gitId":"Originalidk"},"content":"                System.out.println(\"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-24"},{"lineNumber":292,"author":{"gitId":"Originalidk"},"content":"                System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":293,"author":{"gitId":"Originalidk"},"content":"            } finally {","lastModifiedDate":"2023-08-24"},{"lineNumber":294,"author":{"gitId":"Originalidk"},"content":"                input \u003d scan.nextLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":295,"author":{"gitId":"Originalidk"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":296,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":297,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-08-23"},{"lineNumber":298,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"     \" + \"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-23"},{"lineNumber":299,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-08-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":301,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Originalidk":298,"-":4}},{"path":"src/main/java/DurationUnclearException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"public class DurationUnclearException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Originalidk":2}},{"path":"src/main/java/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"public class EmptyDescriptionException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Originalidk":2}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\"))","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"                + \" to: \" + this.to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\")) + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"    public String writeToFile() {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"        int mark;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"        if (super.getStatusIcon() \u003d\u003d \"X\") {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"            mark \u003d 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"            mark \u003d 0;","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"        return \"E | \" + mark + \" | \" + super.writeToFile() + \" | \" + this.from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\"))","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Originalidk"},"content":"                + \" -\u003e \" + this.to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Originalidk":31}},{"path":"src/main/java/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"public class InvalidTaskException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Originalidk":2}},{"path":"src/main/java/InvalidTextException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"public class InvalidTextException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Originalidk":2}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"    public static void parseInput(String input, TaskList tasks, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"            if (input.equals(\"list\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"                Ui.listOfTasks(tasks.showList());","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"            } else if (input.startsWith(\"todo \") || (input.startsWith(\"todo\") \u0026\u0026 input.length() \u003d\u003d 4)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"                try {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"                    if (input.length() \u003c\u003d 5 || input.substring(5).isBlank()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"                        throw new EmptyDescriptionException();","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"                    Task task \u003d new ToDo(input.substring(5));","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"                    tasks.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"                    storage.rewrite(tasks.fileList());","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"                    Ui.addTask(task.toString(), tasks.size());","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"                } catch (EmptyDescriptionException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"                    Ui.emptyDesc(\"todo\");","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Originalidk"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Originalidk"},"content":"            } else if (input.startsWith(\"deadline \") || (input.startsWith(\"deadline\") \u0026\u0026 input.length() \u003d\u003d 8)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Originalidk"},"content":"                try {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Originalidk"},"content":"                    if (input.length() \u003c\u003d 9 || input.substring(9).isBlank()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Originalidk"},"content":"                        throw new EmptyDescriptionException();","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Originalidk"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Originalidk"},"content":"                    String[] details \u003d input.substring(9).split(\" /by \");","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Originalidk"},"content":"                    if (details.length !\u003d 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Originalidk"},"content":"                        throw new DeadlineUnclearException();","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Originalidk"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Originalidk"},"content":"                    LocalDateTime dateTime \u003d LocalDateTime.parse(details[1], DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Originalidk"},"content":"                    Task task \u003d new Deadline(details[0], dateTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Originalidk"},"content":"                    tasks.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Originalidk"},"content":"                    storage.rewrite(tasks.fileList());","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Originalidk"},"content":"                    Ui.addTask(task.toString(), tasks.size());","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Originalidk"},"content":"                } catch (EmptyDescriptionException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Originalidk"},"content":"                    Ui.emptyDesc(\"deadline\");","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Originalidk"},"content":"                } catch (DeadlineUnclearException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Originalidk"},"content":"                    Ui.unclear(\"deadline\");","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Originalidk"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Originalidk"},"content":"                    Ui.wrongDateTimeFormat();","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Originalidk"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Originalidk"},"content":"            } else if (input.startsWith(\"event \") || (input.startsWith(\"event\") \u0026\u0026 input.length() \u003d\u003d 5)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Originalidk"},"content":"                try {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Originalidk"},"content":"                    if (input.length() \u003c\u003d 6 || input.substring(6).isBlank()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Originalidk"},"content":"                        throw new EmptyDescriptionException();","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Originalidk"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Originalidk"},"content":"                    String[] details \u003d input.substring(6).split(\" /from | /to \");","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Originalidk"},"content":"                    if (details.length !\u003d 3 || !input.contains(\" /from \") || !input.contains(\" /to \")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"Originalidk"},"content":"                        throw new DurationUnclearException();","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"Originalidk"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"Originalidk"},"content":"                    LocalDateTime fromDateTime \u003d LocalDateTime.parse(details[1], DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Originalidk"},"content":"                    LocalDateTime toDateTime \u003d LocalDateTime.parse(details[2], DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"Originalidk"},"content":"                    Task task \u003d new Event(details[0], fromDateTime, toDateTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"Originalidk"},"content":"                    tasks.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"Originalidk"},"content":"                    storage.rewrite(tasks.fileList());","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"Originalidk"},"content":"                    Ui.addTask(task.toString(), tasks.size());","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"Originalidk"},"content":"                } catch (EmptyDescriptionException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"Originalidk"},"content":"                    Ui.emptyDesc(\"event\");","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"Originalidk"},"content":"                } catch (DurationUnclearException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"Originalidk"},"content":"                    Ui.unclear(\"duration\");","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"Originalidk"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"Originalidk"},"content":"                    Ui.wrongDateTimeFormat();","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"Originalidk"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"Originalidk"},"content":"            } else if (input.startsWith(\"mark \") \u0026\u0026 input.length() \u003e 5 \u0026\u0026 input.substring(5).matches(\"\\\\d+\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"Originalidk"},"content":"                try {","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"Originalidk"},"content":"                    int number \u003d Integer.parseInt(input.substring(5));","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"Originalidk"},"content":"                    if (number \u003e tasks.size() || number \u003c\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"Originalidk"},"content":"                        throw new InvalidTaskException();","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"Originalidk"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"Originalidk"},"content":"                    Task task \u003d tasks.get(number - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"Originalidk"},"content":"                    task.mark();","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"Originalidk"},"content":"                    storage.rewrite(tasks.fileList());","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"Originalidk"},"content":"                    Ui.mark(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"Originalidk"},"content":"                } catch (InvalidTaskException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"Originalidk"},"content":"                    Ui.invalidTask();","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"Originalidk"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"Originalidk"},"content":"            } else if (input.startsWith(\"unmark \") \u0026\u0026 input.length() \u003e 7 \u0026\u0026 input.substring(7).matches(\"\\\\d+\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"Originalidk"},"content":"                try {","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"Originalidk"},"content":"                    int number \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"Originalidk"},"content":"                    if (number \u003e tasks.size() || number \u003c\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"Originalidk"},"content":"                        throw new InvalidTaskException();","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"Originalidk"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"Originalidk"},"content":"                    Task task \u003d tasks.get(number - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"Originalidk"},"content":"                    task.unmark();","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"Originalidk"},"content":"                    storage.rewrite(tasks.fileList());","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"Originalidk"},"content":"                    Ui.unmark(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"Originalidk"},"content":"                } catch (InvalidTaskException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"Originalidk"},"content":"                    Ui.invalidTask();","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"Originalidk"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"Originalidk"},"content":"            } else if (input.startsWith(\"delete \") \u0026\u0026 input.length() \u003e 7 \u0026\u0026 input.substring(7).matches(\"\\\\d+\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"Originalidk"},"content":"                try {","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"Originalidk"},"content":"                    int number \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"Originalidk"},"content":"                    if (number \u003e tasks.size() || number \u003c\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"Originalidk"},"content":"                        throw new InvalidTaskException();","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"Originalidk"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"Originalidk"},"content":"                    Task task \u003d tasks.delete(number - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"Originalidk"},"content":"                    storage.rewrite(tasks.fileList());","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"Originalidk"},"content":"                    Ui.delete(task, tasks.size());","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"Originalidk"},"content":"                } catch (InvalidTaskException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"Originalidk"},"content":"                    Ui.invalidTask();","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"Originalidk"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"Originalidk"},"content":"            } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"Originalidk"},"content":"                throw new InvalidTextException();","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"Originalidk"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"Originalidk"},"content":"        } catch (InvalidTextException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"Originalidk"},"content":"            Ui.invalidText();","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Originalidk":118}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"    private File file;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"    String filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"            this.file \u003d new File(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"            Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"            if (!this.file.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"                this.file.createNewFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"    public File load() {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Originalidk"},"content":"        return this.file;","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Originalidk"},"content":"    public void rewrite(String newText) {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Originalidk"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Originalidk"},"content":"            FileWriter fw;","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Originalidk"},"content":"            Scanner sc \u003d new Scanner(this.file);","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Originalidk"},"content":"            fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Originalidk"},"content":"            fw.write(newText);","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Originalidk"},"content":"            fw.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Originalidk"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Originalidk"},"content":"            System.out.println(\"File not found\");","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Originalidk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Originalidk"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Originalidk"},"content":"/*","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Originalidk"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Originalidk"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Originalidk"},"content":"            FileWriter fw;","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Originalidk"},"content":"            Scanner sc \u003d new Scanner(this.file);","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Originalidk"},"content":"            if (sc.hasNextLine()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Originalidk"},"content":"                fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Originalidk"},"content":"                fw.write(\"\\r\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Originalidk"},"content":"            } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Originalidk"},"content":"                fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Originalidk"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Originalidk"},"content":"            fw.write(task.writeToFile());","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Originalidk"},"content":"            fw.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"Originalidk"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"Originalidk"},"content":"            System.out.println(\"File not found\");","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"Originalidk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Originalidk"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"Originalidk"},"content":"    public void delete(int taskNumber) {","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"Originalidk"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"Originalidk"},"content":"            FileWriter fw;","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"Originalidk"},"content":"            Scanner sc \u003d new Scanner(this.file);","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"Originalidk"},"content":"            fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"Originalidk"},"content":"            fw.write(task.writeToFile());","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"Originalidk"},"content":"            fw.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"Originalidk"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"Originalidk"},"content":"            System.out.println(\"File not found\");","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"Originalidk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"Originalidk"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"Originalidk"},"content":"    }*/","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Originalidk":78}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"    private String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"    private boolean done;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"        return (done ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"    public void mark() {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"        this.done \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"    public String writeToFile() {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"        return this.description;","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Originalidk":30}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"public class TaskList {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"    ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"    File startFile;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"    public TaskList(File startFile) {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"        this.startFile \u003d startFile;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"        this.list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"        Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"            Scanner fileScan \u003d new Scanner(startFile);","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"            while (fileScan.hasNext()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"                String taskString \u003d fileScan.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"                if (taskString.charAt(0) \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"                    Task task \u003d new ToDo(taskString.substring(8));","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"                    if (taskString.charAt(4) \u003d\u003d \u00271\u0027) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"                        task.mark();","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Originalidk"},"content":"                    list.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Originalidk"},"content":"                } else if (taskString.charAt(0) \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Originalidk"},"content":"                    String[] details \u003d taskString.substring(8).split(Pattern.quote(\" | \"));","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Originalidk"},"content":"                    LocalDateTime dateTime \u003d LocalDateTime.parse(details[1], DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Originalidk"},"content":"                    Task task \u003d new Deadline(details[0], dateTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Originalidk"},"content":"                    if (taskString.charAt(4) \u003d\u003d \u00271\u0027) {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Originalidk"},"content":"                        task.mark();","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Originalidk"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Originalidk"},"content":"                    list.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Originalidk"},"content":"                } else if (taskString.charAt(0) \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Originalidk"},"content":"                    String[] details \u003d taskString.substring(8).split(Pattern.quote(\" | \"));","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Originalidk"},"content":"                    String[] duration \u003d details[1].split(\" -\u003e \");","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Originalidk"},"content":"                    LocalDateTime fromDateTime \u003d LocalDateTime.parse(duration[0], DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Originalidk"},"content":"                    LocalDateTime toDateTime \u003d LocalDateTime.parse(duration[1], DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Originalidk"},"content":"                    Task task \u003d new Event(details[0], fromDateTime, toDateTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Originalidk"},"content":"                    if (taskString.charAt(4) \u003d\u003d \u00271\u0027) {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Originalidk"},"content":"                        task.mark();","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Originalidk"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Originalidk"},"content":"                    list.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Originalidk"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Originalidk"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Originalidk"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Originalidk"},"content":"            System.out.println(\"File not found\");","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Originalidk"},"content":"    public String showList() {","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Originalidk"},"content":"        StringBuilder listOfTasks \u003d new StringBuilder();","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Originalidk"},"content":"        for (int i \u003d 0; i \u003c list.size() - 1; i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Originalidk"},"content":"            Task task \u003d list.get(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"Originalidk"},"content":"            listOfTasks.append(\"     \").append(i + 1).append(\".\").append(task.toString()).append(\"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"Originalidk"},"content":"        if (list.size() !\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Originalidk"},"content":"            Task task \u003d list.get(list.size() - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"Originalidk"},"content":"            listOfTasks.append(\"     \").append(list.size()).append(\".\").append(task.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"Originalidk"},"content":"        return listOfTasks.toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"Originalidk"},"content":"    public String fileList() {","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"Originalidk"},"content":"        StringBuilder listOfTasks \u003d new StringBuilder();","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"Originalidk"},"content":"        for (int i \u003d 0; i \u003c list.size() - 1; i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"Originalidk"},"content":"            Task task \u003d list.get(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"Originalidk"},"content":"            listOfTasks.append(task.writeToFile()).append(\"\\r\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"Originalidk"},"content":"        if (list.size() !\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"Originalidk"},"content":"            Task task \u003d list.get(list.size() - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"Originalidk"},"content":"            listOfTasks.append(task.writeToFile());","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"Originalidk"},"content":"        return listOfTasks.toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"Originalidk"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"Originalidk"},"content":"        list.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"Originalidk"},"content":"    public Task delete(int taskNumber) {","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"Originalidk"},"content":"        return list.remove(taskNumber);","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"Originalidk"},"content":"    public Task get(int taskNumber) {","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"Originalidk"},"content":"        return list.get(taskNumber);","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"Originalidk"},"content":"    public int size() {","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"Originalidk"},"content":"        return list.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Originalidk":95}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"    public String writeToFile() {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"        int mark;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"        if (super.getStatusIcon() \u003d\u003d \"X\") {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"            mark \u003d 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"            mark \u003d 0;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"        return \"T | \" + mark + \" | \" + super.writeToFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Originalidk":21}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"    public static void start() {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"     \" + \"Hello! I\u0027m ChatGP0\");","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"     \" + \"What can I do for you?\");","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"    public static String getInput(Scanner scan) {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"        String input \u003d scan.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"        return input;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"    public static void listOfTasks(String tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"     \" + \"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Originalidk"},"content":"        System.out.println(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Originalidk"},"content":"    public static void addTask(String taskStr, int size) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"     Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"       \" + taskStr);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"     Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Originalidk"},"content":"    public static void emptyDesc(String type) {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"     ☹ OOPS!!! The description of a \" + type + \" cannot be empty.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Originalidk"},"content":"    public static void unclear(String type) {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"     ☹ OOPS!!! The \" + type + \" is unclear.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Originalidk"},"content":"    public static void wrongDateTimeFormat() {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"     ☹ OOPS!!! Please follow the \\\"yyyy-MM-dd HHmm\\\" format.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"Originalidk"},"content":"    public static void mark(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"     \" + \"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"       \" + task.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"Originalidk"},"content":"    public static void unmark(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"     \" + \"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"       \" + task.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"Originalidk"},"content":"    public static void delete(Task task, int size) {","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"     Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"       \" + task.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"     Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"Originalidk"},"content":"    public static void invalidTask() {","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"     ☹ OOPS!!! This task does not exist :O\");","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"Originalidk"},"content":"    public static void invalidText() {","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"Originalidk"},"content":"    public static void bye() {","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"     \" + \"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"Originalidk"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Originalidk":98}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"deadline return book /by 2023-07-08 1430","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"event project meeting /from 2023-05-05 1000 /to 2023-05-05 1200","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":"todo join sports club","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"mark 4","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"deadline return book /by 2023-09-08 1920","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"event project meeting /from 2023-05-07 1500 /to 2023-05-08 1800","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"mark 7","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"unmark 7","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"unmark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"unmark 4","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"delete 3","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"todo","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"todo","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"todo","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"blah","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"deadline","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"Originalidk"},"content":"event","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"Originalidk"},"content":"deadline fifjsoidjoisd","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"Originalidk"},"content":"event jskdjsaidja","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"Originalidk"},"content":"event reading /from 2023-05-07 1500","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Originalidk"},"content":"event reading /to 2023-05-07 1500","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Originalidk"},"content":"event reading /from 2023-05-07 1500 /from 2023-05-07 1900","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Originalidk"},"content":"event reading /to 2023-05-07 1500 /to 2023-05-07 1900","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"Originalidk"},"content":"mark 99","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"Originalidk"},"content":"unmark 99","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"Originalidk"},"content":"delete 99","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"Originalidk"},"content":"delete 1","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"Originalidk"},"content":"delete 1","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"Originalidk"},"content":"delete 1","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"Originalidk"},"content":"delete 1","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"Originalidk"},"content":"delete 1","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"Originalidk"},"content":"delete 1","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"Originalidk"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Originalidk":45}}]
