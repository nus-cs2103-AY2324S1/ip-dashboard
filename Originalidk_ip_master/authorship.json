[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"checkstyle {","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"Originalidk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"Originalidk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"Originalidk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"Originalidk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"Originalidk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"Originalidk"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"Originalidk"},"content":"mainClassName \u003d \u0027duke.Duke\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":60,"author":{"gitId":"Originalidk"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Originalidk":24,"-":41}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":" * The Deadline class represents a Task with a deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"    /** Date and time the task is due **/","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"     * Instantiates an instance of Deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"     * @param description Description of the Deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"     * @param dateTime Deadline for deadline task.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"    public Deadline(String description, LocalDateTime dateTime) {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"                + this.dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\")) + \")\";","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Originalidk"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Originalidk"},"content":"    public String writeToFile() {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Originalidk"},"content":"        int mark;","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Originalidk"},"content":"        if (super.getStatusIcon().equals(\"X\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Originalidk"},"content":"            mark \u003d 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Originalidk"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"Originalidk"},"content":"            mark \u003d 0;","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"Originalidk"},"content":"        return \"D | \" + mark + \" | \" + super.writeToFile() + \" | \"","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"Originalidk"},"content":"                + this.dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Originalidk":41}},{"path":"src/main/java/duke/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":" * The DeadlineCommand class represents the command to create a deadline task.","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"public class DeadlineCommand {","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"     * Runs the DeadlineCommand.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"     * @param input Input typed by user.","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"     * @param storage Stores the file and handles file methods.","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"     * @return Bot response when creating a deadline task.","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"    public static String execute(String input, TaskList tasks, Storage storage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"            boolean isEmptyDescription \u003d input.length() \u003c\u003d 9 || input.substring(9).isBlank();","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"            if (isEmptyDescription) {","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"                throw new EmptyDescriptionException();","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"            String[] details \u003d input.substring(9).split(\" /by \");","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"            if (details.length !\u003d 2) {","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"                throw new DeadlineUnclearException();","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"Originalidk"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"Originalidk"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(details[1], DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"Originalidk"},"content":"            Task task \u003d new Deadline(details[0], dateTime);","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"Originalidk"},"content":"            tasks.add(task);","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"Originalidk"},"content":"            storage.rewrite(tasks.fileList());","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"Originalidk"},"content":"            return Ui.addTask(task.toString(), tasks.size());","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"Originalidk"},"content":"        } catch (EmptyDescriptionException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"Originalidk"},"content":"            return Ui.emptyDesc(\"deadline\");","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"Originalidk"},"content":"        } catch (DeadlineUnclearException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"Originalidk"},"content":"            return Ui.unclear(\"deadline\");","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"Originalidk"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"Originalidk"},"content":"            return Ui.wrongDateTimeFormat();","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"Originalidk":43}},{"path":"src/main/java/duke/DeadlineUnclearException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":" * The DeadlineUnclearException is an Exception when the deadline is not specified.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"public class DeadlineUnclearException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Originalidk":7}},{"path":"src/main/java/duke/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":" * The DeleteCommand class represents the command to delete a task.","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"public class DeleteCommand {","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"     * Runs the DeleteCommand.","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"     * @param input Input typed by user.","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"     * @param storage Stores the file and handles file methods.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"     * @return Bot response when deleting a task.","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"    public static String execute(String input, TaskList tasks, Storage storage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"            int number \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"            boolean isInvalidTask \u003d number \u003e tasks.size() || number \u003c\u003d 0;","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"            if (isInvalidTask) {","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"                throw new InvalidTaskException();","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"            Task task \u003d tasks.delete(number - 1);","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"            storage.rewrite(tasks.fileList());","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"            return Ui.delete(task, tasks.size());","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"            return Ui.invalidTask();","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"Originalidk":30}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"package duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":" * The DialogBox class represents dialog.","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"    /** The text attribute represents the text message **/","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"    /** The picture of the chatbot **/","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"Originalidk"},"content":"     * Initiates an instance of the dialog.","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"Originalidk"},"content":"     * @param text The text.","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"Originalidk"},"content":"     * @param img The image.","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"Originalidk"},"content":"    public DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"Originalidk"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"Originalidk"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"Originalidk"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"Originalidk"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"Originalidk"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"Originalidk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"Originalidk"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"Originalidk"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"Originalidk"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"Originalidk"},"content":"     * Flips the chatbot to the right side.","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"Originalidk"},"content":"    private void flip() {","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"Originalidk"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"Originalidk"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"Originalidk"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"Originalidk"},"content":"        setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"Originalidk"},"content":"     * Returns an instance of DialogBox containing the user\u0027s text and image.","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"Originalidk"},"content":"     * @param text The user\u0027s input typed in.","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"Originalidk"},"content":"     * @param img The user\u0027s profile image.","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"Originalidk"},"content":"     * @return Instance of DialogBox for the user.","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"Originalidk"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":66,"author":{"gitId":"Originalidk"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-08"},{"lineNumber":67,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":68,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":69,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":70,"author":{"gitId":"Originalidk"},"content":"     * Returns an instance of DialogBox containing the user\u0027s text and image.","lastModifiedDate":"2023-09-12"},{"lineNumber":71,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":72,"author":{"gitId":"Originalidk"},"content":"     * @param response The response of the chatbot.","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"Originalidk"},"content":"     * @param img The profile image of the bot.","lastModifiedDate":"2023-09-12"},{"lineNumber":74,"author":{"gitId":"Originalidk"},"content":"     * @return Instance of DialogBox for the user.","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":76,"author":{"gitId":"Originalidk"},"content":"    public static DialogBox getBotDialog(String response, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":77,"author":{"gitId":"Originalidk"},"content":"        var db \u003d new DialogBox(response, img);","lastModifiedDate":"2023-09-08"},{"lineNumber":78,"author":{"gitId":"Originalidk"},"content":"        db.flip();","lastModifiedDate":"2023-09-08"},{"lineNumber":79,"author":{"gitId":"Originalidk"},"content":"        return db;","lastModifiedDate":"2023-09-08"},{"lineNumber":80,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":81,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"Originalidk":81}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"import java.io.File;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":" * The Duke class represents the chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"    /** Stores file information and handles the file operations **/","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"    /** Stores the list of tasks **/","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"    /** Instance of Ui to handle user interactions **/","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"     * Instantiates an instance of Duke.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"     * @param filePath String of the intended file path.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"        this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"        File checkFile \u003d new File(filePath);","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"        assert checkFile.exists();","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Originalidk"},"content":"     * Runs the program.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Originalidk"},"content":"    public void run() {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Originalidk"},"content":"        Ui.start();","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Originalidk"},"content":"        Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Originalidk"},"content":"        String input \u003d Ui.getInput(scan);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Originalidk"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Originalidk"},"content":"            Parser.parseInput(input, this.tasks, this.storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Originalidk"},"content":"            input \u003d Ui.getInput(scan);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Originalidk"},"content":"        Ui.bye();","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Originalidk"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Originalidk"},"content":"        new Duke(\"./duke.txt\").run();","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"Originalidk"},"content":"     * Produces the response of the chatbot based on what the user types.","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"Originalidk"},"content":"     * @param input The user\u0027s message.","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"Originalidk"},"content":"     * @return The chatbot response.","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"Originalidk"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"Originalidk"},"content":"        Ui.start();","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"Originalidk"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"Originalidk"},"content":"            return Ui.bye();","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"Originalidk"},"content":"        } else {","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"Originalidk"},"content":"            return Parser.parseInput(input, this.tasks, this.storage);","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Originalidk":60,"-":2}},{"path":"src/main/java/duke/DurationUnclearException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":" * The DurationUnclearException is an Exception when the duration is not specified.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"public class DurationUnclearException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Originalidk":7}},{"path":"src/main/java/duke/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":" * The EmptyDescriptionException is an Exception when the description is empty.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"public class EmptyDescriptionException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Originalidk":7}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":" * The Event class represents a Task with a duration.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"    /** Date and time the event starts **/","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"    private LocalDateTime startDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"    /** Date and time the event starts **/","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"    private LocalDateTime endDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"     * Instantiates an instance of Event.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"     * @param description Description of the Event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"     * @param startDateTime Date and time the event starts.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"     * @param endDateTime Date and time the event ends.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"    public Event(String description, LocalDateTime startDateTime, LocalDateTime endDateTime) {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"Originalidk"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"Originalidk"},"content":"        return \"[E]\" + super.toString() + \" (from: \"","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"Originalidk"},"content":"            + this.startDateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\")) + \" to: \"","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"Originalidk"},"content":"                + this.endDateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\")) + \")\";","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Originalidk"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"Originalidk"},"content":"    public String writeToFile() {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"Originalidk"},"content":"        int mark;","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"Originalidk"},"content":"        if (super.getStatusIcon() \u003d\u003d \"X\") {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"Originalidk"},"content":"            mark \u003d 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"Originalidk"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"Originalidk"},"content":"            mark \u003d 0;","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"Originalidk"},"content":"        return \"E | \" + mark + \" | \" + super.writeToFile() + \" | \"","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"Originalidk"},"content":"            + this.startDateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\"))","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"Originalidk"},"content":"                + \" -\u003e \" + this.endDateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Originalidk":47}},{"path":"src/main/java/duke/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":" * The EventCommand class represents the command to create an event task.","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"public class EventCommand {","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"     * Runs the EventCommand.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"     * @param input Input typed by user.","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"     * @param storage Stores the file and handles file methods.","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"     * @return Bot response when creating an event task.","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"    public static String execute(String input, TaskList tasks, Storage storage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"            boolean isEmptyDescription \u003d input.length() \u003c\u003d 6 || input.substring(6).isBlank();","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"            if (isEmptyDescription) {","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"                throw new EmptyDescriptionException();","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"            String[] details \u003d input.substring(6).split(\" /from | /to \");","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"            boolean isUnclearDuration \u003d details.length !\u003d 3 || !input.contains(\" /from \") || !input.contains(\" /to \");","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"            if (isUnclearDuration) {","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"Originalidk"},"content":"                throw new DurationUnclearException();","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"Originalidk"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"Originalidk"},"content":"            DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"Originalidk"},"content":"            LocalDateTime fromDateTime \u003d LocalDateTime.parse(details[1], inputFormat);","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"Originalidk"},"content":"            LocalDateTime toDateTime \u003d LocalDateTime.parse(details[2], inputFormat);","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"Originalidk"},"content":"            Task task \u003d new Event(details[0], fromDateTime, toDateTime);","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"Originalidk"},"content":"            tasks.add(task);","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"Originalidk"},"content":"            storage.rewrite(tasks.fileList());","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"Originalidk"},"content":"            return Ui.addTask(task.toString(), tasks.size());","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"Originalidk"},"content":"        } catch (EmptyDescriptionException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"Originalidk"},"content":"            return Ui.emptyDesc(\"event\");","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"Originalidk"},"content":"        } catch (DurationUnclearException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"Originalidk"},"content":"            return Ui.unclear(\"duration\");","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"Originalidk"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"Originalidk"},"content":"            return Ui.wrongDateTimeFormat();","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"Originalidk":46}},{"path":"src/main/java/duke/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":" * The FindCommand class represents the command to find a task.","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"public class FindCommand {","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"     * Runs the FindCommand.","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"     * @param input Input typed by user.","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"     * @param storage Stores the file and handles file methods.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"     * @return Bot response when finding a task.","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"    public static String execute(String input, TaskList tasks, Storage storage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"            boolean isEmptyDescription \u003d input.length() \u003c\u003d 5 || input.substring(5).isBlank();","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"            if (isEmptyDescription) {","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"                throw new EmptyDescriptionException();","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"            return Ui.searchTasks(tasks.showSpecificTasks(input.substring(5)));","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"        } catch (EmptyDescriptionException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"            return Ui.emptyDesc(\"find\");","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"Originalidk":27}},{"path":"src/main/java/duke/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":" * The InvalidTaskException is an Exception when the task does not exist.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"public class InvalidTaskException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Originalidk":7}},{"path":"src/main/java/duke/InvalidTextException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":" * The InvalidTextException is an Exception when the command is invalid.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"public class InvalidTextException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Originalidk":7}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"package duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":" * The Launcher class represents a launcher.","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"public class Launcher {","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"Originalidk":12}},{"path":"src/main/java/duke/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":" * The ListCommand class represents the command to show the list of tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"public class ListCommand {","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"     * Runs the ListCommand.","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"     * @param input Input typed by user.","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"     * @param storage Stores the file and handles file methods.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"     * @return Bot response when asked to show the list of tasks.","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"    public static String execute(String input, TaskList tasks, Storage storage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"        return Ui.listOfTasks(tasks.showList());","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"Originalidk":19}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"package duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"    /** An instance of the chatbot **/","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"    private Duke bot \u003d new Duke(\"./duke.txt\");","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(bot);","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"            stage.show();","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"Originalidk":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"package duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/ChatGP0.png\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"Originalidk"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"Originalidk"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"Originalidk"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"Originalidk"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"Originalidk"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"Originalidk"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"Originalidk"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"Originalidk"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"Originalidk"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"Originalidk"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"Originalidk"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"Originalidk"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"Originalidk"},"content":"                DialogBox.getBotDialog(response, dukeImage)","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"Originalidk"},"content":"        );","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"Originalidk"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"Originalidk":51}},{"path":"src/main/java/duke/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":" * The MarkCommand class represents the command to mark a task.","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"public class MarkCommand {","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"     * Runs the MarkCommand.","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"     * @param input Input typed by user.","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"     * @param storage Stores the file and handles file methods.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"     * @return Bot response when marking a task.","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"    public static String execute(String input, TaskList tasks, Storage storage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"            int number \u003d Integer.parseInt(input.substring(5));","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"            boolean isInvalidTask \u003d number \u003e tasks.size() || number \u003c\u003d 0;","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"            if (isInvalidTask) {","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"                throw new InvalidTaskException();","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"            Task task \u003d tasks.get(number - 1);","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"            task.setMark(true);","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"            storage.rewrite(tasks.fileList());","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"            return Ui.mark(task);","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"            return Ui.invalidTask();","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"Originalidk":31}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":" * The Parser class represents a parser that takes inputs and produces an output.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"     * Processes and responds to the inputs received.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"     * @param input Input typed by user.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"     * @param storage Stores the file and handles file methods.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"     * @return Bot response.","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"    public static String parseInput(String input, TaskList tasks, Storage storage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"            if (input.equals(\"list\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"                return ListCommand.execute(input, tasks, storage);","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"            } else if (input.startsWith(\"todo \") || (input.startsWith(\"todo\") \u0026\u0026 input.length() \u003d\u003d 4)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"                return ToDoCommand.execute(input, tasks, storage);","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"            } else if (input.startsWith(\"deadline \") || (input.startsWith(\"deadline\") \u0026\u0026 input.length() \u003d\u003d 8)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"                return DeadlineCommand.execute(input, tasks, storage);","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"            } else if (input.startsWith(\"event \") || (input.startsWith(\"event\") \u0026\u0026 input.length() \u003d\u003d 5)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"                return EventCommand.execute(input, tasks, storage);","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"            } else if (input.startsWith(\"mark \") \u0026\u0026 input.length() \u003e 5 \u0026\u0026 input.substring(5).matches(\"\\\\d+\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"                return MarkCommand.execute(input, tasks, storage);","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"            } else if (input.startsWith(\"unmark \") \u0026\u0026 input.length() \u003e 7 \u0026\u0026 input.substring(7).matches(\"\\\\d+\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Originalidk"},"content":"                return UnmarkCommand.execute(input, tasks, storage);","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"Originalidk"},"content":"            } else if (input.startsWith(\"delete \") \u0026\u0026 input.length() \u003e 7 \u0026\u0026 input.substring(7).matches(\"\\\\d+\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Originalidk"},"content":"                return DeleteCommand.execute(input, tasks, storage);","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"Originalidk"},"content":"            } else if (input.startsWith(\"find \") || (input.startsWith(\"find\") \u0026\u0026 input.length() \u003d\u003d 4)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Originalidk"},"content":"                return FindCommand.execute(input, tasks, storage);","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"Originalidk"},"content":"            } else {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"Originalidk"},"content":"                throw new InvalidTextException();","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Originalidk"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Originalidk"},"content":"        } catch (InvalidTextException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Originalidk"},"content":"            return Ui.invalidText();","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Originalidk":41}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":" * The Storage class represents the file information.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"    /** The file\u0027s information **/","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"    private File file;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"    /** The file path **/","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"    private String filePath;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"     * Instantiates an instance of Storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"     * @param filePath The file path for the new file.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"            this.file \u003d new File(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"            if (!this.file.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"                this.file.createNewFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Originalidk"},"content":"            assert this.file.exists();","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"Originalidk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Originalidk"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Originalidk"},"content":"     * Returns the file based on the file path of the instance.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Originalidk"},"content":"     * @return The file stored.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Originalidk"},"content":"    public File load() {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Originalidk"},"content":"        return this.file;","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Originalidk"},"content":"     * Rewrites all the information in the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"Originalidk"},"content":"     * @param newText The new information to be written into the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Originalidk"},"content":"    public void rewrite(String newText) {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Originalidk"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Originalidk"},"content":"            FileWriter fw;","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Originalidk"},"content":"            fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Originalidk"},"content":"            fw.write(newText);","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Originalidk"},"content":"            fw.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Originalidk"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Originalidk"},"content":"            System.out.println(\"File not found\");","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Originalidk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"Originalidk"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Originalidk":61}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":" * The Task class represents a task.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"    /** Description of the task. **/","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"    private String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"    /** Whether the task has been marked **/","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"    private boolean isMark;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"     * Instantiates an instance of Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"        this.isMark \u003d false;","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"     * Returns whether the task has been marked with string X.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"     * @return The status of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"        return (isMark ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Originalidk"},"content":"     * Sets status of task to be marked or unmarked.","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Originalidk"},"content":"    public void setMark(boolean isMark) {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Originalidk"},"content":"        this.isMark \u003d isMark;","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"Originalidk"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"Originalidk"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"Originalidk"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Originalidk"},"content":"     * Returns string to be written into the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Originalidk"},"content":"     * @return File information extracted from the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Originalidk"},"content":"    public String writeToFile() {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"Originalidk"},"content":"        return this.description;","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Originalidk":51}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":" * The TaskList class represents a list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"public class TaskList {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"    /** List of tasks. **/","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"    /** File storing information to create the list of tasks. **/","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"    private File startFile;","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"     * Instantiates an instance of TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"     * @param startFile Information of the file saved.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"    public TaskList(File startFile) {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"        this.startFile \u003d startFile;","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"        assert this.startFile.exists();","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"        this.list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Originalidk"},"content":"        Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Originalidk"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Originalidk"},"content":"            Scanner fileScan \u003d new Scanner(startFile);","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Originalidk"},"content":"            DateTimeFormatter fileDateFormat \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\");","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"Originalidk"},"content":"            while (fileScan.hasNext()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Originalidk"},"content":"                String taskString \u003d fileScan.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Originalidk"},"content":"                if (taskString.charAt(0) \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Originalidk"},"content":"                    Task task \u003d new ToDo(taskString.substring(8));","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Originalidk"},"content":"                    if (taskString.charAt(4) \u003d\u003d \u00271\u0027) {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Originalidk"},"content":"                        task.setMark(true);","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Originalidk"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Originalidk"},"content":"                    list.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Originalidk"},"content":"                } else if (taskString.charAt(0) \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Originalidk"},"content":"                    String[] details \u003d taskString.substring(8).split(Pattern.quote(\" | \"));","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Originalidk"},"content":"                    LocalDateTime dateTime \u003d LocalDateTime.parse(details[1], fileDateFormat);","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"Originalidk"},"content":"                    Task task \u003d new Deadline(details[0], dateTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Originalidk"},"content":"                    if (taskString.charAt(4) \u003d\u003d \u00271\u0027) {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Originalidk"},"content":"                        task.setMark(true);","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"Originalidk"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Originalidk"},"content":"                    list.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Originalidk"},"content":"                } else if (taskString.charAt(0) \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Originalidk"},"content":"                    String[] details \u003d taskString.substring(8).split(Pattern.quote(\" | \"));","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Originalidk"},"content":"                    String[] duration \u003d details[1].split(\" -\u003e \");","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Originalidk"},"content":"                    LocalDateTime fromDateTime \u003d LocalDateTime.parse(duration[0], fileDateFormat);","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"Originalidk"},"content":"                    LocalDateTime toDateTime \u003d LocalDateTime.parse(duration[1], fileDateFormat);","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"Originalidk"},"content":"                    Task task \u003d new Event(details[0], fromDateTime, toDateTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Originalidk"},"content":"                    if (taskString.charAt(4) \u003d\u003d \u00271\u0027) {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Originalidk"},"content":"                        task.setMark(true);","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"Originalidk"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"Originalidk"},"content":"                    list.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"Originalidk"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"Originalidk"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Originalidk"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"Originalidk"},"content":"            System.out.println(\"File not found\");","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"Originalidk"},"content":"     * Returns list of tasks as a string.","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"Originalidk"},"content":"     * @return List of tasks to be printed.","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"Originalidk"},"content":"    public String showList() {","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"Originalidk"},"content":"        StringBuilder listOfTasks \u003d new StringBuilder();","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"Originalidk"},"content":"        for (int i \u003d 0; i \u003c list.size() - 1; i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"Originalidk"},"content":"            Task task \u003d list.get(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"Originalidk"},"content":"            listOfTasks.append(\"     \").append(i + 1).append(\".\").append(task.toString()).append(\"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"Originalidk"},"content":"        if (list.size() !\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"Originalidk"},"content":"            Task task \u003d list.get(list.size() - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"Originalidk"},"content":"            listOfTasks.append(\"     \").append(list.size()).append(\".\").append(task.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"Originalidk"},"content":"        return listOfTasks.toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"Originalidk"},"content":"     * Returns a string showing how the tasks are written in the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"Originalidk"},"content":"     * @return File information in a string","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"Originalidk"},"content":"    public String fileList() {","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"Originalidk"},"content":"        StringBuilder listOfTasks \u003d new StringBuilder();","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"Originalidk"},"content":"        for (int i \u003d 0; i \u003c list.size() - 1; i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"Originalidk"},"content":"            Task task \u003d list.get(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"Originalidk"},"content":"            listOfTasks.append(task.writeToFile()).append(\"\\r\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"Originalidk"},"content":"        if (list.size() !\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"Originalidk"},"content":"            Task task \u003d list.get(list.size() - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"Originalidk"},"content":"            listOfTasks.append(task.writeToFile());","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"Originalidk"},"content":"        return listOfTasks.toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"Originalidk"},"content":"     * Adds a task to the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"Originalidk"},"content":"     * @param task Task to be added.","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"Originalidk"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"Originalidk"},"content":"        list.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"Originalidk"},"content":"     * Returns the task removed from a list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"Originalidk"},"content":"     * Removes a task from the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"Originalidk"},"content":"     * @param taskNumber Number of the task to be removed.","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"Originalidk"},"content":"     * @return Task removed.","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"Originalidk"},"content":"    public Task delete(int taskNumber) {","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"Originalidk"},"content":"        return list.remove(taskNumber);","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"Originalidk"},"content":"     * Returns the task specified.","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"Originalidk"},"content":"     * @param taskNumber Number of the task to be removed.","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"Originalidk"},"content":"     * @return Task obtained.","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"Originalidk"},"content":"    public Task get(int taskNumber) {","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"Originalidk"},"content":"        return list.get(taskNumber);","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"Originalidk"},"content":"     * Returns the number of tasks in the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"Originalidk"},"content":"     * @return Size of TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"Originalidk"},"content":"    public int size() {","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"Originalidk"},"content":"        return list.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":142,"author":{"gitId":"Originalidk"},"content":"     * Returns a list of tasks being search for.","lastModifiedDate":"2023-09-07"},{"lineNumber":143,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":144,"author":{"gitId":"Originalidk"},"content":"     * @param search Task being searched.","lastModifiedDate":"2023-09-07"},{"lineNumber":145,"author":{"gitId":"Originalidk"},"content":"     * @return List of tasks that contain the string search.","lastModifiedDate":"2023-09-07"},{"lineNumber":146,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":147,"author":{"gitId":"Originalidk"},"content":"    public String showSpecificTasks(String search) {","lastModifiedDate":"2023-09-01"},{"lineNumber":148,"author":{"gitId":"Originalidk"},"content":"        String selectedTasks \u003d \"\";","lastModifiedDate":"2023-09-01"},{"lineNumber":149,"author":{"gitId":"Originalidk"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":150,"author":{"gitId":"Originalidk"},"content":"            String taskString \u003d list.get(i).toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":151,"author":{"gitId":"Originalidk"},"content":"            if (!selectedTasks.equals(\"\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":152,"author":{"gitId":"Originalidk"},"content":"                selectedTasks +\u003d \"\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":153,"author":{"gitId":"Originalidk"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":154,"author":{"gitId":"Originalidk"},"content":"            if (taskString.substring(7).contains(search)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":155,"author":{"gitId":"Originalidk"},"content":"                selectedTasks +\u003d \"     \" + (i + 1) + \".\" + taskString;","lastModifiedDate":"2023-09-01"},{"lineNumber":156,"author":{"gitId":"Originalidk"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":158,"author":{"gitId":"Originalidk"},"content":"        return selectedTasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":159,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":160,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Originalidk":160}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":" * The ToDo class represents a Task with a duration.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"     * Instantiates an instance of ToDo.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"     * @param description Description of the ToDo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"    public String writeToFile() {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"        int mark;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"        if (super.getStatusIcon() \u003d\u003d \"X\") {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"            mark \u003d 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"            mark \u003d 0;","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Originalidk"},"content":"        return \"T | \" + mark + \" | \" + super.writeToFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Originalidk":31}},{"path":"src/main/java/duke/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":" * The ToDoCommand class represents the command to create a todo task.","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"public class ToDoCommand {","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"     * Runs the ToDoCommand.","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"     * @param input Input typed by user.","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"     * @param storage Stores the file and handles file methods.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"     * @return Bot response when marking a task.","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"    public static String execute(String input, TaskList tasks, Storage storage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"            boolean isEmptyDescription \u003d input.length() \u003c\u003d 5 || input.substring(5).isBlank();","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"            if (isEmptyDescription) {","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"                throw new EmptyDescriptionException();","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"            Task task \u003d new ToDo(input.substring(5));","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"            tasks.add(task);","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"            storage.rewrite(tasks.fileList());","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"            return Ui.addTask(task.toString(), tasks.size());","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"        } catch (EmptyDescriptionException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"            return Ui.emptyDesc(\"todo\");","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"Originalidk":30}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":" * The Ui class represents the User Interface.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"    private static final String line \u003d \"    __________________________________________________________\";","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"     * Returns the starting messages of the chatbot.","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"    public static String start() {","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"        sb.append(line + \"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"        sb.append(\"     \" + \"Hello! I\u0027m ChatGP0\" + \"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"        sb.append(\"     \" + \"What can I do for you?\" + \"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"        sb.append(line + \"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"        return sb.toString();","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"     * Returns the input received.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"     * @param scan The scanner opened to scan the input.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"     * @return Human text input.","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Originalidk"},"content":"    public static String getInput(Scanner scan) {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Originalidk"},"content":"        String input \u003d scan.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Originalidk"},"content":"        return input;","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Originalidk"},"content":"     * Returns the list of tasks to the user.","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Originalidk"},"content":"     * @param tasks The list of tasks as a string.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Originalidk"},"content":"     * @return List of tasks.","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Originalidk"},"content":"    public static String listOfTasks(String tasks) {","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"Originalidk"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"Originalidk"},"content":"        sb.append(line + \"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"Originalidk"},"content":"        sb.append(\"     \" + \"Here are the tasks in your list:\" + \"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"Originalidk"},"content":"        sb.append(tasks + \"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"Originalidk"},"content":"        sb.append(line + \"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"Originalidk"},"content":"        return sb.toString();","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Originalidk"},"content":"     * Returns the added task to the user.","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Originalidk"},"content":"     * @param taskStr The new task as a string.","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Originalidk"},"content":"     * @param size The number of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Originalidk"},"content":"     * @return Added task as a string.","lastModifiedDate":"2023-09-13"},{"lineNumber":55,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"Originalidk"},"content":"    public static String addTask(String taskStr, int size) {","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"Originalidk"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"Originalidk"},"content":"        sb.append(line + \"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"Originalidk"},"content":"        sb.append(\"     Got it. I\u0027ve added this task:\" + \"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"Originalidk"},"content":"        sb.append(\"       \" + taskStr + \"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"Originalidk"},"content":"        sb.append(\"     Now you have \" + size + \" tasks in the list.\" + \"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"Originalidk"},"content":"        sb.append(line + \"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"Originalidk"},"content":"        return sb.toString();","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"Originalidk"},"content":"     * Returns the mistake the user made for the task description.","lastModifiedDate":"2023-09-13"},{"lineNumber":68,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"Originalidk"},"content":"     * @param type The type of task.","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"Originalidk"},"content":"     * @return Empty description warning message.","lastModifiedDate":"2023-09-13"},{"lineNumber":71,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"Originalidk"},"content":"    public static String emptyDesc(String type) {","lastModifiedDate":"2023-09-08"},{"lineNumber":73,"author":{"gitId":"Originalidk"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-08"},{"lineNumber":74,"author":{"gitId":"Originalidk"},"content":"        sb.append(line + \"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":75,"author":{"gitId":"Originalidk"},"content":"        sb.append(\"     ☹ OOPS!!! The description of a \" + type + \" cannot be empty.\" + \"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":76,"author":{"gitId":"Originalidk"},"content":"        sb.append(line + \"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":77,"author":{"gitId":"Originalidk"},"content":"        return sb.toString();","lastModifiedDate":"2023-09-08"},{"lineNumber":78,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"Originalidk"},"content":"     * Returns the mistake the user made for the deadline or duration.","lastModifiedDate":"2023-09-13"},{"lineNumber":82,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"Originalidk"},"content":"     * @param type The type of task.","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"Originalidk"},"content":"     * @return Unclear deadline or duration warning message.","lastModifiedDate":"2023-09-13"},{"lineNumber":85,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"Originalidk"},"content":"    public static String unclear(String type) {","lastModifiedDate":"2023-09-08"},{"lineNumber":87,"author":{"gitId":"Originalidk"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-08"},{"lineNumber":88,"author":{"gitId":"Originalidk"},"content":"        sb.append(line + \"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":89,"author":{"gitId":"Originalidk"},"content":"        sb.append(\"     ☹ OOPS!!! The \" + type + \" is unclear.\" + \"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":90,"author":{"gitId":"Originalidk"},"content":"        sb.append(line + \"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":91,"author":{"gitId":"Originalidk"},"content":"        return sb.toString();","lastModifiedDate":"2023-09-08"},{"lineNumber":92,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"Originalidk"},"content":"     * Returns the mistake the user made for the date and time format.","lastModifiedDate":"2023-09-13"},{"lineNumber":96,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":97,"author":{"gitId":"Originalidk"},"content":"     * @return Warning message for wrong date and time format.","lastModifiedDate":"2023-09-13"},{"lineNumber":98,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"Originalidk"},"content":"    public static String wrongDateTimeFormat() {","lastModifiedDate":"2023-09-08"},{"lineNumber":100,"author":{"gitId":"Originalidk"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-08"},{"lineNumber":101,"author":{"gitId":"Originalidk"},"content":"        sb.append(line + \"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":102,"author":{"gitId":"Originalidk"},"content":"        sb.append(\"     ☹ OOPS!!! Please follow the \\\"yyyy-MM-dd HHmm\\\" format.\" + \"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":103,"author":{"gitId":"Originalidk"},"content":"        sb.append(line + \"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":104,"author":{"gitId":"Originalidk"},"content":"        return sb.toString();","lastModifiedDate":"2023-09-08"},{"lineNumber":105,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"Originalidk"},"content":"     * Returns the task being marked.","lastModifiedDate":"2023-09-13"},{"lineNumber":109,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"Originalidk"},"content":"     * @param task The task being marked.","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"Originalidk"},"content":"     * @return Task being marked as a string.","lastModifiedDate":"2023-09-13"},{"lineNumber":112,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"Originalidk"},"content":"    public static String mark(Task task) {","lastModifiedDate":"2023-09-08"},{"lineNumber":114,"author":{"gitId":"Originalidk"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-08"},{"lineNumber":115,"author":{"gitId":"Originalidk"},"content":"        sb.append(line + \"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":116,"author":{"gitId":"Originalidk"},"content":"        sb.append(\"     \" + \"Nice! I\u0027ve marked this task as done:\" + \"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":117,"author":{"gitId":"Originalidk"},"content":"        sb.append(\"       \" + task.toString() + \"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":118,"author":{"gitId":"Originalidk"},"content":"        sb.append(line + \"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":119,"author":{"gitId":"Originalidk"},"content":"        return sb.toString();","lastModifiedDate":"2023-09-08"},{"lineNumber":120,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"Originalidk"},"content":"     * Returns the task being unmarked.","lastModifiedDate":"2023-09-13"},{"lineNumber":124,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"Originalidk"},"content":"     * @param task The task being unmarked.","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"Originalidk"},"content":"     * @return Task being unmarked as a string.","lastModifiedDate":"2023-09-13"},{"lineNumber":127,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"Originalidk"},"content":"    public static String unmark(Task task) {","lastModifiedDate":"2023-09-08"},{"lineNumber":129,"author":{"gitId":"Originalidk"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-08"},{"lineNumber":130,"author":{"gitId":"Originalidk"},"content":"        sb.append(line + \"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":131,"author":{"gitId":"Originalidk"},"content":"        sb.append(\"     \" + \"OK, I\u0027ve marked this task as not done yet:\" + \"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":132,"author":{"gitId":"Originalidk"},"content":"        sb.append(\"       \" + task.toString() + \"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":133,"author":{"gitId":"Originalidk"},"content":"        sb.append(line + \"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":134,"author":{"gitId":"Originalidk"},"content":"        return sb.toString();","lastModifiedDate":"2023-09-08"},{"lineNumber":135,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"Originalidk"},"content":"     * Returns the deleted task to the user.","lastModifiedDate":"2023-09-13"},{"lineNumber":139,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"Originalidk"},"content":"     * @param task The deleted task.","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"Originalidk"},"content":"     * @param size The number of tasks left.","lastModifiedDate":"2023-09-01"},{"lineNumber":142,"author":{"gitId":"Originalidk"},"content":"     * @return Task being deleted as a string.","lastModifiedDate":"2023-09-13"},{"lineNumber":143,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"Originalidk"},"content":"    public static String delete(Task task, int size) {","lastModifiedDate":"2023-09-08"},{"lineNumber":145,"author":{"gitId":"Originalidk"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-08"},{"lineNumber":146,"author":{"gitId":"Originalidk"},"content":"        sb.append(line + \"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":147,"author":{"gitId":"Originalidk"},"content":"        sb.append(\"     Noted. I\u0027ve removed this task:\" + \"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":148,"author":{"gitId":"Originalidk"},"content":"        sb.append(\"       \" + task.toString() + \"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":149,"author":{"gitId":"Originalidk"},"content":"        sb.append(\"     Now you have \" + size + \" tasks in the list.\" + \"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":150,"author":{"gitId":"Originalidk"},"content":"        sb.append(line + \"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":151,"author":{"gitId":"Originalidk"},"content":"        return sb.toString();","lastModifiedDate":"2023-09-08"},{"lineNumber":152,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":155,"author":{"gitId":"Originalidk"},"content":"     * Returns the mistake the user made for the task number not existing.","lastModifiedDate":"2023-09-13"},{"lineNumber":156,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":157,"author":{"gitId":"Originalidk"},"content":"     * @return Warning message for an invalid task number.","lastModifiedDate":"2023-09-13"},{"lineNumber":158,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":159,"author":{"gitId":"Originalidk"},"content":"    public static String invalidTask() {","lastModifiedDate":"2023-09-08"},{"lineNumber":160,"author":{"gitId":"Originalidk"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-08"},{"lineNumber":161,"author":{"gitId":"Originalidk"},"content":"        sb.append(line + \"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":162,"author":{"gitId":"Originalidk"},"content":"        sb.append(\"     ☹ OOPS!!! This task does not exist :O\" + \"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":163,"author":{"gitId":"Originalidk"},"content":"        sb.append(line + \"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":164,"author":{"gitId":"Originalidk"},"content":"        return sb.toString();","lastModifiedDate":"2023-09-08"},{"lineNumber":165,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":166,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":168,"author":{"gitId":"Originalidk"},"content":"     * Returns the mistake the user made for the command not existing.","lastModifiedDate":"2023-09-13"},{"lineNumber":169,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":170,"author":{"gitId":"Originalidk"},"content":"     * @return Warning message for an invalid command.","lastModifiedDate":"2023-09-13"},{"lineNumber":171,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":172,"author":{"gitId":"Originalidk"},"content":"    public static String invalidText() {","lastModifiedDate":"2023-09-08"},{"lineNumber":173,"author":{"gitId":"Originalidk"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-08"},{"lineNumber":174,"author":{"gitId":"Originalidk"},"content":"        sb.append(line + \"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":175,"author":{"gitId":"Originalidk"},"content":"        sb.append(\"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\" + \"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":176,"author":{"gitId":"Originalidk"},"content":"        sb.append(line + \"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":177,"author":{"gitId":"Originalidk"},"content":"        return sb.toString();","lastModifiedDate":"2023-09-08"},{"lineNumber":178,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":179,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":180,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":181,"author":{"gitId":"Originalidk"},"content":"     * Returns a goodbye statement.","lastModifiedDate":"2023-09-13"},{"lineNumber":182,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":183,"author":{"gitId":"Originalidk"},"content":"     * @return Goodbye statement as a string.","lastModifiedDate":"2023-09-13"},{"lineNumber":184,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":185,"author":{"gitId":"Originalidk"},"content":"    public static String bye() {","lastModifiedDate":"2023-09-08"},{"lineNumber":186,"author":{"gitId":"Originalidk"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-08"},{"lineNumber":187,"author":{"gitId":"Originalidk"},"content":"        sb.append(line + \"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":188,"author":{"gitId":"Originalidk"},"content":"        sb.append(\"     \" + \"Bye. Hope to see you again soon!\" + \"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":189,"author":{"gitId":"Originalidk"},"content":"        sb.append(line);","lastModifiedDate":"2023-09-08"},{"lineNumber":190,"author":{"gitId":"Originalidk"},"content":"        return sb.toString();","lastModifiedDate":"2023-09-08"},{"lineNumber":191,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":192,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":193,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":194,"author":{"gitId":"Originalidk"},"content":"     * Returns list of tasks that matches the search input.","lastModifiedDate":"2023-09-13"},{"lineNumber":195,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":196,"author":{"gitId":"Originalidk"},"content":"     * @param selectedTasks List of tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":197,"author":{"gitId":"Originalidk"},"content":"     * @return List of tasks that match the search input.","lastModifiedDate":"2023-09-13"},{"lineNumber":198,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":199,"author":{"gitId":"Originalidk"},"content":"    public static String searchTasks(String selectedTasks) {","lastModifiedDate":"2023-09-08"},{"lineNumber":200,"author":{"gitId":"Originalidk"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-08"},{"lineNumber":201,"author":{"gitId":"Originalidk"},"content":"        sb.append(line + \"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":202,"author":{"gitId":"Originalidk"},"content":"        sb.append(\"     Here are the matching tasks in your list:\" + \"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":203,"author":{"gitId":"Originalidk"},"content":"        sb.append(selectedTasks + \"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":204,"author":{"gitId":"Originalidk"},"content":"        sb.append(line + \"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":205,"author":{"gitId":"Originalidk"},"content":"        return sb.toString();","lastModifiedDate":"2023-09-08"},{"lineNumber":206,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":207,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Originalidk":207}},{"path":"src/main/java/duke/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":" * The UnmarkCommand class represents the command to unmark a task.","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"public class UnmarkCommand {","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"     * Runs the UnmarkCommand.","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"     * @param input Input typed by user.","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"     * @param storage Stores the file and handles file methods.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"     * @return Bot response when unmarking a task.","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"    public static String execute(String input, TaskList tasks, Storage storage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"            int number \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"            boolean isInvalidTask \u003d number \u003e tasks.size() || number \u003c\u003d 0;","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"            if (isInvalidTask) {","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"                throw new InvalidTaskException();","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"            Task task \u003d tasks.get(number - 1);","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"            task.setMark(false);","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"            storage.rewrite(tasks.fileList());","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"            return Ui.unmark(task);","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"            return Ui.invalidTask();","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"Originalidk":31}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"\u003cfx:root alignment\u003d\"TOP_LEFT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"Originalidk":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"Originalidk":19}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"    public void testStringConversion() {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(\"2023-09-23 1800\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"        assertEquals(\"[D][ ] Apply for internships (by: Sep 23 2023 1800)\",","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"            new Deadline(\"Apply for internships\", dateTime).toString());","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"        Task task \u003d new Deadline(\"Make my resume\", dateTime);","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"        task.setMark(true);","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"        assertEquals(\"[D][X] Make my resume (by: Sep 23 2023 1800)\", task.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"    public void testWriteToFile() {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(\"2023-09-23 1800\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Originalidk"},"content":"        assertEquals(\"D | 0 | Apply for internships | Sep 23 2023 1800\",","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"Originalidk"},"content":"            new Deadline(\"Apply for internships\", dateTime).writeToFile());","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Originalidk"},"content":"        Task task \u003d new Deadline(\"Make my resume\", dateTime);","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Originalidk"},"content":"        task.setMark(true);","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Originalidk"},"content":"        assertEquals(\"D | 1 | Make my resume | Sep 23 2023 1800\", task.writeToFile());","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Originalidk":37}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"public class EventTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"    private DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"    public void testStringConversion() {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"        LocalDateTime fromDateTime \u003d LocalDateTime.parse(\"2023-09-23 1800\", inputFormat);","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"        LocalDateTime toDateTime \u003d LocalDateTime.parse(\"2023-09-23 2000\", inputFormat);","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"        assertEquals(\"[E][ ] Apply for internships (from: Sep 23 2023 1800 to: Sep 23 2023 2000)\",","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"                new Event(\"Apply for internships\", fromDateTime, toDateTime).toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"        Task task \u003d new Event(\"Make my resume\", fromDateTime, toDateTime);","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"        task.setMark(true);","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"        assertEquals(\"[E][X] Make my resume (from: Sep 23 2023 1800 to: Sep 23 2023 2000)\", task.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"    public void testWriteToFile() {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Originalidk"},"content":"        LocalDateTime fromDateTime \u003d LocalDateTime.parse(\"2023-09-23 1800\", inputFormat);","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"Originalidk"},"content":"        LocalDateTime toDateTime \u003d LocalDateTime.parse(\"2023-09-23 2000\", inputFormat);","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Originalidk"},"content":"        assertEquals(\"E | 0 | Apply for internships | Sep 23 2023 1800 -\u003e Sep 23 2023 2000\",","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Originalidk"},"content":"                new Event(\"Apply for internships\", fromDateTime, toDateTime).writeToFile());","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Originalidk"},"content":"        Task task \u003d new Event(\"Make my resume\", fromDateTime, toDateTime);","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Originalidk"},"content":"        task.setMark(true);","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Originalidk"},"content":"        assertEquals(\"E | 1 | Make my resume | Sep 23 2023 1800 -\u003e Sep 23 2023 2000\", task.writeToFile());","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Originalidk":40}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"import java.io.File;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"public class StorageTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"    public void testLoad() {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"            File file \u003d new File(\"./testFile.txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"            file.createNewFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"            FileWriter fw \u003d new FileWriter(\"./testFile.txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"            fw.write(\"T | 0 | Apply for internships\\r\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"            fw.write(\"D | 1 | Finish reading | Oct 15 2023 1800\\r\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"            fw.write(\"E | 0 | Resume clinic | Sep 01 2023 0000 -\u003e Sep 29 2023 2359\");","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"            fw.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"            Storage storage \u003d new Storage(\"./testFile.txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"            assertEquals(file, storage.load());","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Originalidk"},"content":"            fail();","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Originalidk"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Originalidk"},"content":"    public void testRewrite() {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Originalidk"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Originalidk"},"content":"            File file \u003d new File(\"./testFile.txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Originalidk"},"content":"            file.createNewFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Originalidk"},"content":"            FileWriter fw \u003d new FileWriter(\"./testFile.txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Originalidk"},"content":"            fw.write(\"T | 0 | Apply for internships\\r\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Originalidk"},"content":"            fw.write(\"D | 1 | Finish reading | Oct 15 2023 1800\\r\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Originalidk"},"content":"            fw.write(\"E | 0 | Resume clinic | Sep 01 2023 0000 -\u003e Sep 29 2023 2359\");","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Originalidk"},"content":"            fw.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Originalidk"},"content":"            Storage storage \u003d new Storage(\"./testFile.txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Originalidk"},"content":"            storage.rewrite(\"T | 1 | Apply for internships\");","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Originalidk"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Originalidk"},"content":"            String toDoTask \u003d sc.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Originalidk"},"content":"            assertEquals(\"T | 1 | Apply for internships\", toDoTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Originalidk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Originalidk"},"content":"            fail();","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Originalidk":56}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"import java.io.File;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"    public void testShowList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"            File file \u003d new File(\"./testFile.txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"            file.createNewFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"            FileWriter fw \u003d new FileWriter(\"./testFile.txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"            fw.write(\"T | 0 | Apply for internships\\r\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"            fw.write(\"D | 1 | Finish reading | Oct 15 2023 1800\\r\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"            fw.write(\"E | 0 | Resume clinic | Sep 01 2023 0000 -\u003e Sep 29 2023 2359\");","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"            fw.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"            String allText \u003d \"     1.[T][ ] Apply for internships\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"            allText +\u003d \"     2.[D][X] Finish reading (by: Oct 15 2023 1800)\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"            allText +\u003d \"     3.[E][ ] Resume clinic (from: Sep 1 2023 0000 to: Sep 29 2023 2359)\";","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Originalidk"},"content":"            TaskList tasks \u003d new TaskList(file);","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Originalidk"},"content":"            assertEquals(allText, tasks.showList());","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Originalidk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Originalidk"},"content":"            fail();","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Originalidk"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Originalidk"},"content":"    public void testFileList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Originalidk"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Originalidk"},"content":"            File file \u003d new File(\"./testFile.txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Originalidk"},"content":"            file.createNewFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Originalidk"},"content":"            FileWriter fw \u003d new FileWriter(\"./testFile.txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Originalidk"},"content":"            fw.write(\"T | 0 | Apply for internships\\r\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Originalidk"},"content":"            fw.write(\"D | 1 | Finish reading | Oct 15 2023 1800\\r\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Originalidk"},"content":"            fw.write(\"E | 0 | Resume clinic | Sep 01 2023 0000 -\u003e Sep 29 2023 2359\");","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"Originalidk"},"content":"            fw.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Originalidk"},"content":"            String allText \u003d \"T | 0 | Apply for internships\\r\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Originalidk"},"content":"            allText +\u003d \"D | 1 | Finish reading | Oct 15 2023 1800\\r\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Originalidk"},"content":"            allText +\u003d \"E | 0 | Resume clinic | Sep 1 2023 0000 -\u003e Sep 29 2023 2359\";","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Originalidk"},"content":"            TaskList tasks \u003d new TaskList(file);","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Originalidk"},"content":"            assertEquals(allText, tasks.fileList());","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"Originalidk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"Originalidk"},"content":"            fail();","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"Originalidk"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"Originalidk"},"content":"    public void testAdd() {","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"Originalidk"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"Originalidk"},"content":"            File file \u003d new File(\"./testFile.txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"Originalidk"},"content":"            file.createNewFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"Originalidk"},"content":"            FileWriter fw \u003d new FileWriter(\"./testFile.txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"Originalidk"},"content":"            fw.write(\"T | 0 | Apply for internships\\r\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"Originalidk"},"content":"            fw.write(\"D | 1 | Finish reading | Oct 15 2023 1800\\r\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"Originalidk"},"content":"            fw.write(\"E | 0 | Resume clinic | Sep 01 2023 0000 -\u003e Sep 29 2023 2359\");","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"Originalidk"},"content":"            fw.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"Originalidk"},"content":"            String allText \u003d \"T | 0 | Apply for internships\\r\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"Originalidk"},"content":"            allText +\u003d \"D | 1 | Finish reading | Oct 15 2023 1800\\r\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"Originalidk"},"content":"            allText +\u003d \"E | 0 | Resume clinic | Sep 1 2023 0000 -\u003e Sep 29 2023 2359\\r\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"Originalidk"},"content":"            allText +\u003d \"T | 0 | Go to bed\";","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"Originalidk"},"content":"            TaskList tasks \u003d new TaskList(file);","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"Originalidk"},"content":"            tasks.add(new ToDo(\"Go to bed\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"Originalidk"},"content":"            assertEquals(allText, tasks.fileList());","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"Originalidk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"Originalidk"},"content":"            fail();","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"Originalidk"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"Originalidk"},"content":"    public void testDelete() {","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"Originalidk"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"Originalidk"},"content":"            File file \u003d new File(\"./testFile.txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"Originalidk"},"content":"            file.createNewFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"Originalidk"},"content":"            FileWriter fw \u003d new FileWriter(\"./testFile.txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"Originalidk"},"content":"            fw.write(\"T | 0 | Apply for internships\\r\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"Originalidk"},"content":"            fw.write(\"D | 1 | Finish reading | Oct 15 2023 1800\\r\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"Originalidk"},"content":"            fw.write(\"E | 0 | Resume clinic | Sep 01 2023 0000 -\u003e Sep 29 2023 2359\");","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"Originalidk"},"content":"            fw.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"Originalidk"},"content":"            String allText \u003d \"D | 1 | Finish reading | Oct 15 2023 1800\\r\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"Originalidk"},"content":"            allText +\u003d \"E | 0 | Resume clinic | Sep 1 2023 0000 -\u003e Sep 29 2023 2359\";","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"Originalidk"},"content":"            TaskList tasks \u003d new TaskList(file);","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"Originalidk"},"content":"            tasks.delete(0);","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"Originalidk"},"content":"            assertEquals(allText, tasks.fileList());","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"Originalidk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"Originalidk"},"content":"            fail();","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"Originalidk"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"Originalidk"},"content":"    public void testGet() {","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"Originalidk"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"Originalidk"},"content":"            File file \u003d new File(\"./testFile.txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"Originalidk"},"content":"            file.createNewFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"Originalidk"},"content":"            FileWriter fw \u003d new FileWriter(\"./testFile.txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"Originalidk"},"content":"            fw.write(\"T | 0 | Apply for internships\\r\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"Originalidk"},"content":"            fw.write(\"D | 1 | Finish reading | Oct 15 2023 1800\\r\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"Originalidk"},"content":"            fw.write(\"E | 0 | Resume clinic | Sep 01 2023 0000 -\u003e Sep 29 2023 2359\");","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"Originalidk"},"content":"            fw.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"Originalidk"},"content":"            Task task \u003d new ToDo(\"Apply for internships\");","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"Originalidk"},"content":"            TaskList tasks \u003d new TaskList(file);","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"Originalidk"},"content":"            assertEquals(task.toString(), tasks.get(0).toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"Originalidk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"Originalidk"},"content":"            fail();","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"Originalidk"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"Originalidk"},"content":"    public void testSize() {","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"Originalidk"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"Originalidk"},"content":"            File file \u003d new File(\"./testFile.txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"Originalidk"},"content":"            file.createNewFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"Originalidk"},"content":"            FileWriter fw \u003d new FileWriter(\"./testFile.txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"Originalidk"},"content":"            fw.write(\"T | 0 | Apply for internships\\r\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"Originalidk"},"content":"            fw.write(\"D | 1 | Finish reading | Oct 15 2023 1800\\r\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"Originalidk"},"content":"            fw.write(\"E | 0 | Resume clinic | Sep 01 2023 0000 -\u003e Sep 29 2023 2359\");","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"Originalidk"},"content":"            fw.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"Originalidk"},"content":"            TaskList tasks \u003d new TaskList(file);","lastModifiedDate":"2023-09-01"},{"lineNumber":142,"author":{"gitId":"Originalidk"},"content":"            assertEquals(3, tasks.size());","lastModifiedDate":"2023-09-01"},{"lineNumber":143,"author":{"gitId":"Originalidk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"Originalidk"},"content":"            fail();","lastModifiedDate":"2023-09-01"},{"lineNumber":145,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":147,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Originalidk":147}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"public class TodoTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"    public void testStringConversion() {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"        assertEquals(\"[T][ ] Apply for internships\", new ToDo(\"Apply for internships\").toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"        Task task \u003d new ToDo(\"Make my resume\");","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"        task.setMark(true);","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"        assertEquals(\"[T][X] Make my resume\", task.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"    public void testWriteToFile() {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"        assertEquals(\"T | 0 | Apply for internships\", new ToDo(\"Apply for internships\").writeToFile());","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"        Task task \u003d new ToDo(\"Make my resume\");","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"        task.setMark(true);","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"        assertEquals(\"T | 1 | Make my resume\", task.writeToFile());","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Originalidk":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"deadline return book /by 2023-07-08 1430","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"event project meeting /from 2023-05-05 1000 /to 2023-05-05 1200","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":"todo join sports club","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"mark 4","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"deadline return book /by 2023-09-08 1920","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"event project meeting /from 2023-05-07 1500 /to 2023-05-08 1800","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"mark 7","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"unmark 7","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"unmark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"unmark 4","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"delete 3","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"todo","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"todo","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"todo","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"blah","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"deadline","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"Originalidk"},"content":"event","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"Originalidk"},"content":"deadline fifjsoidjoisd","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"Originalidk"},"content":"event jskdjsaidja","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"Originalidk"},"content":"event reading /from 2023-05-07 1500","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Originalidk"},"content":"event reading /to 2023-05-07 1500","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Originalidk"},"content":"event reading /from 2023-05-07 1500 /from 2023-05-07 1900","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Originalidk"},"content":"event reading /to 2023-05-07 1500 /to 2023-05-07 1900","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"Originalidk"},"content":"mark 99","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"Originalidk"},"content":"unmark 99","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"Originalidk"},"content":"delete 99","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"Originalidk"},"content":"delete 1","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"Originalidk"},"content":"delete 1","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"Originalidk"},"content":"delete 1","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"Originalidk"},"content":"delete 1","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"Originalidk"},"content":"delete 1","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"Originalidk"},"content":"delete 1","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"Originalidk"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Originalidk":45}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Originalidk":1,"-":20}}]
