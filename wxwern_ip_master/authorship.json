[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"wxwern"},"content":"# Todoify","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"wxwern"},"content":"This is a chatbot-style task manager Java project as specified by NUS CS2103T.","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"wxwern"},"content":"Though, the chatbot does not understand natural language - it only understands instructions in a format that\u0027s somewhat similar to common POSIX shells like `bash` and `zsh`. Something like... \"`deadline project work --by 2023-08-31`\".","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"wxwern"},"content":"## Setting up in IntelliJ","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"wxwern"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version.","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"wxwern"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"wxwern"},"content":"2. Open the project into IntelliJ as follows:","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":14,"author":{"gitId":"wxwern"},"content":"   2. Select the project directory, and click `OK`.","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"wxwern"},"content":"   3. If there are any further prompts, accept the defaults.","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"wxwern"},"content":"2. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":18,"author":{"gitId":"wxwern"},"content":"3. After that, build the project (which should use Gradle automatically), and then execute the `run` Gradle task. If the setup is correct, you will see a GUI (or TUI if you configure it to run with the `-t` or `--text-ui` flag) presenting something resembling a chat interface:","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"wxwern"},"content":"   - GUI","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"wxwern"},"content":"      ![](docs/Ui.png)","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"wxwern"},"content":"   - TUI","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"wxwern"},"content":"   ","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      ```","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"wxwern"},"content":"      [Todoify]:","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"wxwern"},"content":"        Hello! I\u0027m Todoify, your friendly task helper.","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"wxwern"},"content":"      [Todoify]:","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"wxwern"},"content":"        You\u0027ve 5 tasks in your list right now! :)","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"wxwern"},"content":"      [Todoify]:","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"wxwern"},"content":"        What can I do for you?","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"wxwern"},"content":"      [You]:","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"wxwern"},"content":"       \u003e ","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"      ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wxwern":29,"-":9}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"wxwern"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"wxwern"},"content":"    implementation \u0027com.google.code.gson:gson:2.10.1\u0027","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"wxwern"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"wxwern"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"wxwern"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"wxwern"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"wxwern"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"wxwern"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"wxwern"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"wxwern"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"wxwern"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"wxwern"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"wxwern"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"wxwern"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"wxwern"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"wxwern"},"content":"checkstyle {","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"wxwern"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"wxwern"},"content":"    mainClass.set(\"todoify.Main\")","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"wxwern"},"content":"    archiveBaseName \u003d \"todoify\"","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"wxwern"},"content":"    archiveVersion \u003d \"0.0.3\"","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wxwern":22,"-":41}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"wxwern"},"content":"# Todoify User Guide","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":3,"author":{"gitId":"wxwern"},"content":"Welcome to **Todoify** - a simple CLI task tracking desktop app.","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"wxwern"},"content":"![Todoify Screenshot](Ui.png)","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"wxwern"},"content":"Todoify is easy to use for users with experience of the CLI. It:","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"wxwern"},"content":"- has a chatbot-like interface","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"wxwern"},"content":"- available via your preferred [DE](https://en.wikipedia.org/wiki/Desktop_environment) or even your [terminal](https://en.wikipedia.org/wiki/Computer_terminal).","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"wxwern"},"content":"- uses Unix- and POSIX-like CLI syntax, so experienced users can pick it up quickly.","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"wxwern"},"content":"## Table of Contents","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"wxwern"},"content":"- [Getting Started](#getting-started)","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"wxwern"},"content":"- [Features](#features)","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"wxwern"},"content":"    - [Command-Line Interface (CLI)](#command-line-interface-cli)","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"wxwern"},"content":"    - [Viewing Help](#viewing-help-help-tutorial)","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"wxwern"},"content":"    - [Adding a Todo](#adding-a-todo-todo)","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"wxwern"},"content":"    - [Adding a Deadline](#adding-a-deadline-deadline)","lastModifiedDate":"2023-09-19"},{"lineNumber":20,"author":{"gitId":"wxwern"},"content":"    - [Adding an Event](#adding-an-event-event)","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"wxwern"},"content":"    - [List all tasks](#list-all-tasks-list)","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"wxwern"},"content":"    - [Find tasks](#find-tasks-find-search)","lastModifiedDate":"2023-09-19"},{"lineNumber":23,"author":{"gitId":"wxwern"},"content":"    - [Completing a task](#completing-a-task-mark-done-complete)","lastModifiedDate":"2023-09-19"},{"lineNumber":24,"author":{"gitId":"wxwern"},"content":"    - [Revert completing a task](#revert-completing-a-task-unmark-undone-incomplete)","lastModifiedDate":"2023-09-19"},{"lineNumber":25,"author":{"gitId":"wxwern"},"content":"    - [Deleting a task](#deleting-a-task-delete-remove)","lastModifiedDate":"2023-09-19"},{"lineNumber":26,"author":{"gitId":"wxwern"},"content":"    - [Closing the conversation](#closing-the-conversation-bye-exit)","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"wxwern"},"content":"    - [Launch Modes](#launch-modes)","lastModifiedDate":"2023-09-19"},{"lineNumber":28,"author":{"gitId":"wxwern"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2023-09-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"wxwern"},"content":"## Getting Started","lastModifiedDate":"2023-09-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":32,"author":{"gitId":"wxwern"},"content":"1. Check out the [releases](https://github.com/wxwern/ip/releases).","lastModifiedDate":"2023-09-19"},{"lineNumber":33,"author":{"gitId":"wxwern"},"content":"2. Download the latest `.jar` file.","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"wxwern"},"content":"3. Run the JAR file by double-clicking it, or using `java -jar \u003cjar file name\u003e` in the terminal.","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"wxwern"},"content":"4. Talk to the chatbot to add your tasks! To learn how to communicate with Todoify, simply send a `help` message to list available commands.","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"wxwern"},"content":"### Command-Line Interface (CLI)","lastModifiedDate":"2023-09-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":41,"author":{"gitId":"wxwern"},"content":"Todoify uses a Command-Line Interface format similar to others on Unix and Linux, but it is not exactly the same.","lastModifiedDate":"2023-09-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":43,"author":{"gitId":"wxwern"},"content":"As an example, the following is a valid input format.","lastModifiedDate":"2023-09-19"},{"lineNumber":44,"author":{"gitId":"wxwern"},"content":"```sh","lastModifiedDate":"2023-09-19"},{"lineNumber":45,"author":{"gitId":"wxwern"},"content":"commandname long input text --parameter1 first value --parameter2 second value","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"wxwern"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"wxwern"},"content":"This evaluates:","lastModifiedDate":"2023-09-19"},{"lineNumber":49,"author":{"gitId":"wxwern"},"content":"- the command `commandname`,","lastModifiedDate":"2023-09-19"},{"lineNumber":50,"author":{"gitId":"wxwern"},"content":"- with input `long input text`,","lastModifiedDate":"2023-09-19"},{"lineNumber":51,"author":{"gitId":"wxwern"},"content":"- while it sets `--parameter1` to `first value`,","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"wxwern"},"content":"- and sets `--parameter 2` set to `second value`.","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"wxwern"},"content":"#### Format Notes","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"wxwern"},"content":"- The first word is always the **command name**.","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"wxwern"},"content":"- The second word till the last non-\"`--`\"-prefixed word is the **command input text**.","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"wxwern"},"content":"- **Parameters** can be rearranged with no issue as they are only identified by name. They must be marked with the prefix `--`.","lastModifiedDate":"2023-09-19"},{"lineNumber":59,"author":{"gitId":"wxwern"},"content":"- Any text without the `--` prefix is not considered to be a parameter and is considered part of a contiguous text chunk, so no need to surround text with quotes like in standard shell commands.","lastModifiedDate":"2023-09-19"},{"lineNumber":60,"author":{"gitId":"wxwern"},"content":"- If duplicate parameters are present, the last value is considered.","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"wxwern"},"content":"- When a command format description contains stuff in `\u003c\u003e`, it refers to an inline explanatory description that should be replaced with actual command info.","lastModifiedDate":"2023-09-19"},{"lineNumber":62,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":63,"author":{"gitId":"wxwern"},"content":"### Viewing Help: `help`, `tutorial`","lastModifiedDate":"2023-09-19"},{"lineNumber":64,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":65,"author":{"gitId":"wxwern"},"content":"It is good to know that Todoify allows you to directly check all available commands offline, and will be kept up-to-date on every new release.","lastModifiedDate":"2023-09-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":67,"author":{"gitId":"wxwern"},"content":"All you need to do is to send `help` or `tutorial`, and you\u0027ll get all the info you need!","lastModifiedDate":"2023-09-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":69,"author":{"gitId":"wxwern"},"content":"- Format: `help` or `tutorial`.","lastModifiedDate":"2023-09-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":71,"author":{"gitId":"wxwern"},"content":"### Adding a Todo: `todo`","lastModifiedDate":"2023-09-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":73,"author":{"gitId":"wxwern"},"content":"You can add a todo with the given title.","lastModifiedDate":"2023-09-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":75,"author":{"gitId":"wxwern"},"content":"- Format: `todo \u003ctask title\u003e`","lastModifiedDate":"2023-09-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":77,"author":{"gitId":"wxwern"},"content":"### Adding a Deadline: `deadline`","lastModifiedDate":"2023-09-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":79,"author":{"gitId":"wxwern"},"content":"You can add a task with a title and a deadline.","lastModifiedDate":"2023-09-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":81,"author":{"gitId":"wxwern"},"content":"- Format: `deadline \u003ctask title\u003e --by \u003ctask deadline in ISO8601\u003e`","lastModifiedDate":"2023-09-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":83,"author":{"gitId":"wxwern"},"content":"We use the [ISO8601 format specifications](https://en.wikipedia.org/wiki/ISO_8601). You must provide a valid date, though we allow you to **omit** any of the following:","lastModifiedDate":"2023-09-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":85,"author":{"gitId":"wxwern"},"content":"- The entire time component (e.g., `hh:mm:ssZ`)","lastModifiedDate":"2023-09-19"},{"lineNumber":86,"author":{"gitId":"wxwern"},"content":"- The seconds component (e.g., `:ss`)","lastModifiedDate":"2023-09-19"},{"lineNumber":87,"author":{"gitId":"wxwern"},"content":"- The timezone component (e.g., `Z`, `+hh:mm`)","lastModifiedDate":"2023-09-19"},{"lineNumber":88,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":89,"author":{"gitId":"wxwern"},"content":"For example:","lastModifiedDate":"2023-09-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":91,"author":{"gitId":"wxwern"},"content":"- `deadline CS2103T Project --by 2023-09-22T16:00`","lastModifiedDate":"2023-09-19"},{"lineNumber":92,"author":{"gitId":"wxwern"},"content":"- `deadline Christmas Prep --by 2023-12-23`","lastModifiedDate":"2023-09-19"},{"lineNumber":93,"author":{"gitId":"wxwern"},"content":"- `deadline Homework --by 2023-11-11T23:59:59`","lastModifiedDate":"2023-09-19"},{"lineNumber":94,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":95,"author":{"gitId":"wxwern"},"content":"are valid inputs.","lastModifiedDate":"2023-09-19"},{"lineNumber":96,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":97,"author":{"gitId":"wxwern"},"content":"### Adding an Event: `event`","lastModifiedDate":"2023-09-19"},{"lineNumber":98,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":99,"author":{"gitId":"wxwern"},"content":"You can add an event with a title and a date range.","lastModifiedDate":"2023-09-19"},{"lineNumber":100,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":101,"author":{"gitId":"wxwern"},"content":"- Format: `event \u003ctitle\u003e --from \u003cstart date in ISO8601\u003e --to \u003cend date in ISO8601\u003e`","lastModifiedDate":"2023-09-19"},{"lineNumber":102,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":103,"author":{"gitId":"wxwern"},"content":"We use the [ISO8601 format specifications](https://en.wikipedia.org/wiki/ISO_8601). You must provide a valid date, though we allow you to **omit** any of the following:","lastModifiedDate":"2023-09-19"},{"lineNumber":104,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":105,"author":{"gitId":"wxwern"},"content":"- The entire time component (e.g., `hh:mm:ssZ`)","lastModifiedDate":"2023-09-19"},{"lineNumber":106,"author":{"gitId":"wxwern"},"content":"- The seconds component (e.g., `:ss`)","lastModifiedDate":"2023-09-19"},{"lineNumber":107,"author":{"gitId":"wxwern"},"content":"- The timezone component (e.g., `Z`, `+hh:mm`)","lastModifiedDate":"2023-09-19"},{"lineNumber":108,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":109,"author":{"gitId":"wxwern"},"content":"For example:","lastModifiedDate":"2023-09-19"},{"lineNumber":110,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":111,"author":{"gitId":"wxwern"},"content":"- `event Birthday Party --from 2023-10-01T16:00 --to 2023-10-01T21:00`","lastModifiedDate":"2023-09-19"},{"lineNumber":112,"author":{"gitId":"wxwern"},"content":"- `event Holiday --from 2023-12-01 --to 2024-01-01`","lastModifiedDate":"2023-09-19"},{"lineNumber":113,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":114,"author":{"gitId":"wxwern"},"content":"are valid inputs.","lastModifiedDate":"2023-09-19"},{"lineNumber":115,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":116,"author":{"gitId":"wxwern"},"content":"### List all tasks: `list`","lastModifiedDate":"2023-09-19"},{"lineNumber":117,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":118,"author":{"gitId":"wxwern"},"content":"Lists all your available tasks.","lastModifiedDate":"2023-09-19"},{"lineNumber":119,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":120,"author":{"gitId":"wxwern"},"content":"- Format: `list`","lastModifiedDate":"2023-09-19"},{"lineNumber":121,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":122,"author":{"gitId":"wxwern"},"content":"This gives you your full list of tasks in one place with a task number prefixed. The output is of the following format:","lastModifiedDate":"2023-09-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":125,"author":{"gitId":"wxwern"},"content":"Task Number. \u003cType\u003e [Completion State] Task Description (Extra Details)","lastModifiedDate":"2023-09-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":127,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":128,"author":{"gitId":"wxwern"},"content":"Where:","lastModifiedDate":"2023-09-19"},{"lineNumber":129,"author":{"gitId":"wxwern"},"content":"- **Task Number** represents the number assigned to the task.","lastModifiedDate":"2023-09-19"},{"lineNumber":130,"author":{"gitId":"wxwern"},"content":"- **Type** represents the task type, e.g., `E` for Event, `D` for Deadline, `T` for Todo.","lastModifiedDate":"2023-09-19"},{"lineNumber":131,"author":{"gitId":"wxwern"},"content":"- **Completion State** represents whether it\u0027s marked as complete. It\u0027s complete if it\u0027s `[X]`, incomplete if `[ ]`.","lastModifiedDate":"2023-09-19"},{"lineNumber":132,"author":{"gitId":"wxwern"},"content":"- **Task Description** is the information you added to the task.","lastModifiedDate":"2023-09-19"},{"lineNumber":133,"author":{"gitId":"wxwern"},"content":"- **Extra Details** is any extra information associated with this task.","lastModifiedDate":"2023-09-19"},{"lineNumber":134,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":135,"author":{"gitId":"wxwern"},"content":"### Find tasks: `find`, `search`","lastModifiedDate":"2023-09-19"},{"lineNumber":136,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":137,"author":{"gitId":"wxwern"},"content":"You can search for tasks containing a specific substring, case-insensitive.","lastModifiedDate":"2023-09-19"},{"lineNumber":138,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":139,"author":{"gitId":"wxwern"},"content":"- Format: `find \u003csubstring\u003e` or `search \u003csubstring\u003e`","lastModifiedDate":"2023-09-19"},{"lineNumber":140,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":141,"author":{"gitId":"wxwern"},"content":"For example:","lastModifiedDate":"2023-09-19"},{"lineNumber":142,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":143,"author":{"gitId":"wxwern"},"content":"- `find Book` finds tasks with \"book\" in the title, ignoring case.","lastModifiedDate":"2023-09-19"},{"lineNumber":144,"author":{"gitId":"wxwern"},"content":"- `search Prep Work` finds tasks with \"prep work\" in the title, ignoring case.","lastModifiedDate":"2023-09-19"},{"lineNumber":145,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":146,"author":{"gitId":"wxwern"},"content":"The output is simply that of a filtered output from the `list` command.","lastModifiedDate":"2023-09-19"},{"lineNumber":147,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":148,"author":{"gitId":"wxwern"},"content":"### Completing a task: `mark`, `done`, `complete`","lastModifiedDate":"2023-09-19"},{"lineNumber":149,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":150,"author":{"gitId":"wxwern"},"content":"You can mark a task as complete by their **task number**. The task number is the one shown when using `list` or `find`.","lastModifiedDate":"2023-09-19"},{"lineNumber":151,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":152,"author":{"gitId":"wxwern"},"content":"- Format: `mark \u003ctask number\u003e` or `done \u003ctask number\u003e` or `complete \u003ctask number\u003e`","lastModifiedDate":"2023-09-19"},{"lineNumber":153,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":154,"author":{"gitId":"wxwern"},"content":"For example:","lastModifiedDate":"2023-09-19"},{"lineNumber":155,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":156,"author":{"gitId":"wxwern"},"content":"- `mark 1` marks the task numbered 1 as completed.","lastModifiedDate":"2023-09-19"},{"lineNumber":157,"author":{"gitId":"wxwern"},"content":"- `done 3` marks the task numbered 3 as completed.","lastModifiedDate":"2023-09-19"},{"lineNumber":158,"author":{"gitId":"wxwern"},"content":"- `complete 5` marks the task numbered 5 as completed.","lastModifiedDate":"2023-09-19"},{"lineNumber":159,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":160,"author":{"gitId":"wxwern"},"content":"### Revert completing a task: `unmark`, `undone`, `incomplete`","lastModifiedDate":"2023-09-19"},{"lineNumber":161,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":162,"author":{"gitId":"wxwern"},"content":"You revert a completed task to the incomplete state by their **task number**. The task number is the one shown when using `list` or `find`.","lastModifiedDate":"2023-09-19"},{"lineNumber":163,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":164,"author":{"gitId":"wxwern"},"content":"- Format: `unmark \u003ctask number\u003e` or `undone \u003ctask number\u003e` or `incomplete \u003ctask number\u003e`","lastModifiedDate":"2023-09-19"},{"lineNumber":165,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":166,"author":{"gitId":"wxwern"},"content":"For example:","lastModifiedDate":"2023-09-19"},{"lineNumber":167,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":168,"author":{"gitId":"wxwern"},"content":"- `unmark 1` marks the task numbered 1 as incomplete.","lastModifiedDate":"2023-09-19"},{"lineNumber":169,"author":{"gitId":"wxwern"},"content":"- `undone 3` marks the task numbered 3 as incomplete.","lastModifiedDate":"2023-09-19"},{"lineNumber":170,"author":{"gitId":"wxwern"},"content":"- `incomplete 5` marks the task numbered 5 as incomplete.","lastModifiedDate":"2023-09-19"},{"lineNumber":171,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":172,"author":{"gitId":"wxwern"},"content":"### Deleting a task: `delete`, `remove`","lastModifiedDate":"2023-09-19"},{"lineNumber":173,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":174,"author":{"gitId":"wxwern"},"content":"You can easily delete tasks by their **task number**. The task number is the one shown when using `list` or `find`.","lastModifiedDate":"2023-09-19"},{"lineNumber":175,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":176,"author":{"gitId":"wxwern"},"content":"- Format: `delete \u003ctask number\u003e` or `remove \u003ctask number\u003e`","lastModifiedDate":"2023-09-19"},{"lineNumber":177,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":178,"author":{"gitId":"wxwern"},"content":"For example:","lastModifiedDate":"2023-09-19"},{"lineNumber":179,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":180,"author":{"gitId":"wxwern"},"content":"- `delete 1` deletes the task numbered 1.","lastModifiedDate":"2023-09-19"},{"lineNumber":181,"author":{"gitId":"wxwern"},"content":"- `remove 3` removes the task numbered 3.","lastModifiedDate":"2023-09-19"},{"lineNumber":182,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":183,"author":{"gitId":"wxwern"},"content":"\u003e **Warning:** Note that deleting a task will change numbering for all tasks after it. Be careful when you are planning to deleting multiple tasks.","lastModifiedDate":"2023-09-19"},{"lineNumber":184,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":185,"author":{"gitId":"wxwern"},"content":"### Closing the conversation: `bye`, `exit`","lastModifiedDate":"2023-09-19"},{"lineNumber":186,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":187,"author":{"gitId":"wxwern"},"content":"This terminates the conversation with Todoify. Simply run the `bye` or `exit` command to close the conversation.","lastModifiedDate":"2023-09-19"},{"lineNumber":188,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":189,"author":{"gitId":"wxwern"},"content":"- Format: `bye` or `exit`","lastModifiedDate":"2023-09-19"},{"lineNumber":190,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":191,"author":{"gitId":"wxwern"},"content":"It has two distinct behaviours depending on your [Launch Mode](#launch-modes):","lastModifiedDate":"2023-09-19"},{"lineNumber":192,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":193,"author":{"gitId":"wxwern"},"content":"- In the **GUI**, this halts further input. It does not close the app, so you can refer to a read-only transcript of your conversation. To restart, you must close and reopen the app.","lastModifiedDate":"2023-09-19"},{"lineNumber":194,"author":{"gitId":"wxwern"},"content":"- In the **TUI**, this exits the program. You can use your terminal scrollback if you need to refer to the transcript.","lastModifiedDate":"2023-09-19"},{"lineNumber":195,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":196,"author":{"gitId":"wxwern"},"content":"### Launch Modes","lastModifiedDate":"2023-09-19"},{"lineNumber":197,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":198,"author":{"gitId":"wxwern"},"content":"For very advanced users, you can launch Todoify in both **GUI** and **TUI** modes. While the former requires a [desktop environment](https://en.wikipedia.org/wiki/Desktop_environment), the latter can operate on headless systems like a server or a [headless Raspberry Pi](https://learn.sparkfun.com/tutorials/headless-raspberry-pi-setup/all).","lastModifiedDate":"2023-09-19"},{"lineNumber":199,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":200,"author":{"gitId":"wxwern"},"content":"**To launch in GUI mode**, either:","lastModifiedDate":"2023-09-19"},{"lineNumber":201,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":202,"author":{"gitId":"wxwern"},"content":"- Navigate to where the JAR file is stored in your file manager, then double-click the JAR file.","lastModifiedDate":"2023-09-19"},{"lineNumber":203,"author":{"gitId":"wxwern"},"content":"- Navigate to the directory of the JAR file in your terminal, then run: `java -jar todoify-v1.0.jar`.","lastModifiedDate":"2023-09-19"},{"lineNumber":204,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":205,"author":{"gitId":"wxwern"},"content":"**To launch in TUI mode**, navigate to the directory of the JAR file in your terminal, then run:","lastModifiedDate":"2023-09-19"},{"lineNumber":206,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":207,"author":{"gitId":"wxwern"},"content":"- `java -jar todoify-v1.0.jar --text-ui`, or","lastModifiedDate":"2023-09-19"},{"lineNumber":208,"author":{"gitId":"wxwern"},"content":"- `java -jar todoify-v1.0.jar -t` as a shortcut.","lastModifiedDate":"2023-09-19"},{"lineNumber":209,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":210,"author":{"gitId":"wxwern"},"content":"Please note that you need to replace `todoify-v1.0.jar` with a different name (specifically, the version number part) if it\u0027s not the same as the one you downloaded.","lastModifiedDate":"2023-09-19"},{"lineNumber":211,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":212,"author":{"gitId":"wxwern"},"content":"## Command Summary","lastModifiedDate":"2023-09-19"},{"lineNumber":213,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":214,"author":{"gitId":"wxwern"},"content":"- `todo`","lastModifiedDate":"2023-09-19"},{"lineNumber":215,"author":{"gitId":"wxwern"},"content":"    - Adds a todo with the given title.","lastModifiedDate":"2023-09-19"},{"lineNumber":216,"author":{"gitId":"wxwern"},"content":"    - Format: `todo \u003ctask title\u003e`","lastModifiedDate":"2023-09-19"},{"lineNumber":217,"author":{"gitId":"wxwern"},"content":"- `deadline`","lastModifiedDate":"2023-09-19"},{"lineNumber":218,"author":{"gitId":"wxwern"},"content":"    - Adds a deadline with the given title and due by date.","lastModifiedDate":"2023-09-19"},{"lineNumber":219,"author":{"gitId":"wxwern"},"content":"    - Format: `deadline \u003cdeadline title\u003e --by \u003cdeadline in IS08601\u003e`","lastModifiedDate":"2023-09-19"},{"lineNumber":220,"author":{"gitId":"wxwern"},"content":"- `event`","lastModifiedDate":"2023-09-19"},{"lineNumber":221,"author":{"gitId":"wxwern"},"content":"    - Adds a deadline with the given title and date range.","lastModifiedDate":"2023-09-19"},{"lineNumber":222,"author":{"gitId":"wxwern"},"content":"    - Format: `event \u003cevent title\u003e --from \u003cstart date in IS08601\u003e --to \u003cend date in IS08601\u003e`","lastModifiedDate":"2023-09-19"},{"lineNumber":223,"author":{"gitId":"wxwern"},"content":"- `delete`, `remove`","lastModifiedDate":"2023-09-19"},{"lineNumber":224,"author":{"gitId":"wxwern"},"content":"    - Deletes the referenced task.","lastModifiedDate":"2023-09-19"},{"lineNumber":225,"author":{"gitId":"wxwern"},"content":"    - Format: `delete \u003ctask number\u003e`","lastModifiedDate":"2023-09-19"},{"lineNumber":226,"author":{"gitId":"wxwern"},"content":"- `mark`, `done`, `complete`","lastModifiedDate":"2023-09-19"},{"lineNumber":227,"author":{"gitId":"wxwern"},"content":"    - Marks the referenced task as complete.","lastModifiedDate":"2023-09-19"},{"lineNumber":228,"author":{"gitId":"wxwern"},"content":"    - Format: `mark \u003ctask number\u003e`","lastModifiedDate":"2023-09-19"},{"lineNumber":229,"author":{"gitId":"wxwern"},"content":"- `unmark`, `undone`, `incomplete`","lastModifiedDate":"2023-09-19"},{"lineNumber":230,"author":{"gitId":"wxwern"},"content":"    - Sets the referenced task as incomplete.","lastModifiedDate":"2023-09-19"},{"lineNumber":231,"author":{"gitId":"wxwern"},"content":"    - Format: `unmark \u003ctask number\u003e`","lastModifiedDate":"2023-09-19"},{"lineNumber":232,"author":{"gitId":"wxwern"},"content":"- `list`","lastModifiedDate":"2023-09-19"},{"lineNumber":233,"author":{"gitId":"wxwern"},"content":"    - Lists all available tasks.","lastModifiedDate":"2023-09-19"},{"lineNumber":234,"author":{"gitId":"wxwern"},"content":"    - Format: `list`","lastModifiedDate":"2023-09-19"},{"lineNumber":235,"author":{"gitId":"wxwern"},"content":"- `find`, `search`","lastModifiedDate":"2023-09-19"},{"lineNumber":236,"author":{"gitId":"wxwern"},"content":"    - Finds all available tasks with the given search term.","lastModifiedDate":"2023-09-19"},{"lineNumber":237,"author":{"gitId":"wxwern"},"content":"    - Format: `find \u003csearch terms\u003e`","lastModifiedDate":"2023-09-19"},{"lineNumber":238,"author":{"gitId":"wxwern"},"content":"- `help`, `tutorial`","lastModifiedDate":"2023-09-19"},{"lineNumber":239,"author":{"gitId":"wxwern"},"content":"    - Shows the help sheet for all commands.","lastModifiedDate":"2023-09-19"},{"lineNumber":240,"author":{"gitId":"wxwern"},"content":"    - Format: `help`","lastModifiedDate":"2023-09-19"},{"lineNumber":241,"author":{"gitId":"wxwern"},"content":"- `bye`, `exit`","lastModifiedDate":"2023-09-19"},{"lineNumber":242,"author":{"gitId":"wxwern"},"content":"    - Stops the conversation.","lastModifiedDate":"2023-09-19"},{"lineNumber":243,"author":{"gitId":"wxwern"},"content":"    - Format: `bye`","lastModifiedDate":"2023-09-19"},{"lineNumber":244,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"wxwern":218,"-":26}},{"path":"src/main/java/todoify/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxwern"},"content":"package todoify;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"wxwern"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"wxwern"},"content":"import todoify.gui.MainWindowController;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"wxwern"},"content":"import todoify.stdio.MainTextUi;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"wxwern"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"wxwern"},"content":" * The main entry point of the program.","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"wxwern"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"wxwern"},"content":"public class Main {","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"wxwern"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"wxwern"},"content":"        boolean hasRequestedTextMode \u003d false;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"wxwern"},"content":"        for (String arg : args) {","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"wxwern"},"content":"            if (arg.equals(\"-t\") || arg.equals(\"--text-ui\")) {","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"wxwern"},"content":"                hasRequestedTextMode \u003d true;","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"wxwern"},"content":"                break;","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"wxwern"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"wxwern"},"content":"        if (hasRequestedTextMode) {","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"wxwern"},"content":"            MainTextUi.run(args);","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"wxwern"},"content":"        } else {","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"wxwern"},"content":"            Application.launch(MainWindowController.class, args);","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"wxwern"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"wxwern":28}},{"path":"src/main/java/todoify/chatbot/ChatCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxwern"},"content":"package todoify.chatbot;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"wxwern"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"wxwern"},"content":"import java.util.Map;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"wxwern"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"wxwern"},"content":" * An abstraction for an instruction command derived from a chat message.","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"wxwern"},"content":" *","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"wxwern"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"wxwern"},"content":" * This class represents a simple command structure with name, data, parameters. It also provides convenience parser","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"wxwern"},"content":" * methods to automatically parse an instruction String into a command, and enum lookups for known command operation","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"wxwern"},"content":" * types.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"wxwern"},"content":" * \u003c/p\u003e","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"wxwern"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"wxwern"},"content":"public class ChatCommand {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"wxwern"},"content":"     * The prefix used to denote a parameter.","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"wxwern"},"content":"    public static final String PARAMETER_PREFIX \u003d \"--\";","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"wxwern"},"content":"     * A command operation, representing an identified operation for a command.","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"wxwern"},"content":"    public enum Operation {","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"wxwern"},"content":"        ADD_TODO, ADD_DEADLINE, ADD_EVENT, DELETE,","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"wxwern"},"content":"        MARK_COMPLETE, UNMARK_COMPLETE,","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"wxwern"},"content":"        LIST, SEARCH, HELP, EXIT,","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"wxwern"},"content":"        UNKNOWN;","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"wxwern"},"content":"        /**","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"wxwern"},"content":"         * An internal lookup cache for mapping string names to commands.","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"wxwern"},"content":"         */","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"wxwern"},"content":"        private static Map\u003cString, Operation\u003e nameToCommandLookupCache \u003d null;","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"wxwern"},"content":"        /**","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"wxwern"},"content":"         * Obtains the operation from the given command name or alias.","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"wxwern"},"content":"         *","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"wxwern"},"content":"         * @param name The name or alias that refers to the operation.","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"wxwern"},"content":"         * @return The operation represented the given name.","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"wxwern"},"content":"         */","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"wxwern"},"content":"        public static Operation fromCommandName(String name) {","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"wxwern"},"content":"            if (nameToCommandLookupCache \u003d\u003d null) {","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"wxwern"},"content":"                // Pre-compute the lookup cache if it is not yet initialized.","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"wxwern"},"content":"                nameToCommandLookupCache \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"wxwern"},"content":"                for (Operation op : ChatCommand.Operation.values()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"wxwern"},"content":"                    for (String n : op.getSupportedNameAliases()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"wxwern"},"content":"                        nameToCommandLookupCache.put(n, op);","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"wxwern"},"content":"                    }","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"wxwern"},"content":"                }","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"wxwern"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"wxwern"},"content":"            return nameToCommandLookupCache.getOrDefault(name, UNKNOWN);","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":55,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"wxwern"},"content":"        /**","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"wxwern"},"content":"         * Obtains the supported name aliases to invoke this command.","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"wxwern"},"content":"         *","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"wxwern"},"content":"         * @return The supported name aliases as an array of strings.","lastModifiedDate":"2023-09-13"},{"lineNumber":60,"author":{"gitId":"wxwern"},"content":"         */","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"wxwern"},"content":"        public String[] getSupportedNameAliases() {","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"wxwern"},"content":"            switch (this) {","lastModifiedDate":"2023-09-13"},{"lineNumber":63,"author":{"gitId":"wxwern"},"content":"            case ADD_TODO:","lastModifiedDate":"2023-09-13"},{"lineNumber":64,"author":{"gitId":"wxwern"},"content":"                return new String[] { \"todo\" };","lastModifiedDate":"2023-09-13"},{"lineNumber":65,"author":{"gitId":"wxwern"},"content":"            case ADD_DEADLINE:","lastModifiedDate":"2023-09-13"},{"lineNumber":66,"author":{"gitId":"wxwern"},"content":"                return new String[] { \"deadline\" };","lastModifiedDate":"2023-09-13"},{"lineNumber":67,"author":{"gitId":"wxwern"},"content":"            case ADD_EVENT:","lastModifiedDate":"2023-09-13"},{"lineNumber":68,"author":{"gitId":"wxwern"},"content":"                return new String[] { \"event\" };","lastModifiedDate":"2023-09-13"},{"lineNumber":69,"author":{"gitId":"wxwern"},"content":"            case DELETE:","lastModifiedDate":"2023-09-13"},{"lineNumber":70,"author":{"gitId":"wxwern"},"content":"                return new String[] { \"delete\", \"remove\" };","lastModifiedDate":"2023-09-13"},{"lineNumber":71,"author":{"gitId":"wxwern"},"content":"            case MARK_COMPLETE:","lastModifiedDate":"2023-09-13"},{"lineNumber":72,"author":{"gitId":"wxwern"},"content":"                return new String[] { \"mark\", \"done\", \"complete\" };","lastModifiedDate":"2023-09-13"},{"lineNumber":73,"author":{"gitId":"wxwern"},"content":"            case UNMARK_COMPLETE:","lastModifiedDate":"2023-09-13"},{"lineNumber":74,"author":{"gitId":"wxwern"},"content":"                return new String[] { \"unmark\", \"undone\", \"incomplete\" };","lastModifiedDate":"2023-09-13"},{"lineNumber":75,"author":{"gitId":"wxwern"},"content":"            case LIST:","lastModifiedDate":"2023-09-13"},{"lineNumber":76,"author":{"gitId":"wxwern"},"content":"                return new String[] { \"list\" };","lastModifiedDate":"2023-09-13"},{"lineNumber":77,"author":{"gitId":"wxwern"},"content":"            case SEARCH:","lastModifiedDate":"2023-09-13"},{"lineNumber":78,"author":{"gitId":"wxwern"},"content":"                return new String[] { \"find\", \"search\" };","lastModifiedDate":"2023-09-13"},{"lineNumber":79,"author":{"gitId":"wxwern"},"content":"            case HELP:","lastModifiedDate":"2023-09-13"},{"lineNumber":80,"author":{"gitId":"wxwern"},"content":"                return new String[] { \"help\", \"tutorial\" };","lastModifiedDate":"2023-09-13"},{"lineNumber":81,"author":{"gitId":"wxwern"},"content":"            case EXIT:","lastModifiedDate":"2023-09-13"},{"lineNumber":82,"author":{"gitId":"wxwern"},"content":"                return new String[] { \"bye\", \"exit\" };","lastModifiedDate":"2023-09-13"},{"lineNumber":83,"author":{"gitId":"wxwern"},"content":"            case UNKNOWN:","lastModifiedDate":"2023-09-13"},{"lineNumber":84,"author":{"gitId":"wxwern"},"content":"            default:","lastModifiedDate":"2023-09-13"},{"lineNumber":85,"author":{"gitId":"wxwern"},"content":"                break;","lastModifiedDate":"2023-09-13"},{"lineNumber":86,"author":{"gitId":"wxwern"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":87,"author":{"gitId":"wxwern"},"content":"            return new String[] {};","lastModifiedDate":"2023-09-13"},{"lineNumber":88,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":89,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":90,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":91,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":92,"author":{"gitId":"wxwern"},"content":"        /**","lastModifiedDate":"2023-09-13"},{"lineNumber":93,"author":{"gitId":"wxwern"},"content":"         * Returns a user-friendly high-level description of the operation.","lastModifiedDate":"2023-09-13"},{"lineNumber":94,"author":{"gitId":"wxwern"},"content":"         *","lastModifiedDate":"2023-09-13"},{"lineNumber":95,"author":{"gitId":"wxwern"},"content":"         * @return A string representing a description of the operation.","lastModifiedDate":"2023-09-13"},{"lineNumber":96,"author":{"gitId":"wxwern"},"content":"         */","lastModifiedDate":"2023-09-13"},{"lineNumber":97,"author":{"gitId":"wxwern"},"content":"        public String getDescription() {","lastModifiedDate":"2023-09-13"},{"lineNumber":98,"author":{"gitId":"wxwern"},"content":"            switch (this) {","lastModifiedDate":"2023-09-13"},{"lineNumber":99,"author":{"gitId":"wxwern"},"content":"            case ADD_TODO:","lastModifiedDate":"2023-09-13"},{"lineNumber":100,"author":{"gitId":"wxwern"},"content":"                return \"Adds a todo with the given title.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":101,"author":{"gitId":"wxwern"},"content":"            case ADD_DEADLINE:","lastModifiedDate":"2023-09-13"},{"lineNumber":102,"author":{"gitId":"wxwern"},"content":"                return \"Adds a deadline with the given title and due by date.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":103,"author":{"gitId":"wxwern"},"content":"            case ADD_EVENT:","lastModifiedDate":"2023-09-13"},{"lineNumber":104,"author":{"gitId":"wxwern"},"content":"                return \"Adds a deadline with the given title and date range.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":105,"author":{"gitId":"wxwern"},"content":"            case DELETE:","lastModifiedDate":"2023-09-13"},{"lineNumber":106,"author":{"gitId":"wxwern"},"content":"                return \"Deletes the referenced task.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":107,"author":{"gitId":"wxwern"},"content":"            case MARK_COMPLETE:","lastModifiedDate":"2023-09-13"},{"lineNumber":108,"author":{"gitId":"wxwern"},"content":"                return \"Marks the referenced task as complete.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":109,"author":{"gitId":"wxwern"},"content":"            case UNMARK_COMPLETE:","lastModifiedDate":"2023-09-13"},{"lineNumber":110,"author":{"gitId":"wxwern"},"content":"                return \"Sets the referenced task as incomplete.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":111,"author":{"gitId":"wxwern"},"content":"            case LIST:","lastModifiedDate":"2023-09-13"},{"lineNumber":112,"author":{"gitId":"wxwern"},"content":"                return \"Lists all available tasks.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":113,"author":{"gitId":"wxwern"},"content":"            case SEARCH:","lastModifiedDate":"2023-09-13"},{"lineNumber":114,"author":{"gitId":"wxwern"},"content":"                return \"Finds all available tasks with the given search term.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":115,"author":{"gitId":"wxwern"},"content":"            case HELP:","lastModifiedDate":"2023-09-13"},{"lineNumber":116,"author":{"gitId":"wxwern"},"content":"                return \"Shows the help sheet for all commands.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":117,"author":{"gitId":"wxwern"},"content":"            case EXIT:","lastModifiedDate":"2023-09-13"},{"lineNumber":118,"author":{"gitId":"wxwern"},"content":"                return \"Stops the conversation.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":119,"author":{"gitId":"wxwern"},"content":"            case UNKNOWN:","lastModifiedDate":"2023-09-13"},{"lineNumber":120,"author":{"gitId":"wxwern"},"content":"                return \"Unknown command.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":121,"author":{"gitId":"wxwern"},"content":"            default:","lastModifiedDate":"2023-09-19"},{"lineNumber":122,"author":{"gitId":"wxwern"},"content":"                assert false : \"All known command types must have a description.\";","lastModifiedDate":"2023-09-19"},{"lineNumber":123,"author":{"gitId":"wxwern"},"content":"                return \"Unhandled command.\";","lastModifiedDate":"2023-09-19"},{"lineNumber":124,"author":{"gitId":"wxwern"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":125,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":126,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":127,"author":{"gitId":"wxwern"},"content":"        /**","lastModifiedDate":"2023-09-13"},{"lineNumber":128,"author":{"gitId":"wxwern"},"content":"         * Returns the syntax allowed for the given command, as a \u003ci\u003eformat string\u003c/i\u003e.","lastModifiedDate":"2023-09-13"},{"lineNumber":129,"author":{"gitId":"wxwern"},"content":"         *","lastModifiedDate":"2023-09-13"},{"lineNumber":130,"author":{"gitId":"wxwern"},"content":"         * \u003cp\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":131,"author":{"gitId":"wxwern"},"content":"         * Specifically, this method returns a string that should be used with {@link String#format} with one","lastModifiedDate":"2023-09-13"},{"lineNumber":132,"author":{"gitId":"wxwern"},"content":"         * argument to substitute with the command name.","lastModifiedDate":"2023-09-13"},{"lineNumber":133,"author":{"gitId":"wxwern"},"content":"         * \u003c/p\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":134,"author":{"gitId":"wxwern"},"content":"         *","lastModifiedDate":"2023-09-13"},{"lineNumber":135,"author":{"gitId":"wxwern"},"content":"         * @return The syntax allowed for the given command as a \u003ci\u003eformat string\u003c/i\u003e.","lastModifiedDate":"2023-09-13"},{"lineNumber":136,"author":{"gitId":"wxwern"},"content":"         */","lastModifiedDate":"2023-09-13"},{"lineNumber":137,"author":{"gitId":"wxwern"},"content":"        public String getSyntaxDescriptionAsFormatString() {","lastModifiedDate":"2023-09-13"},{"lineNumber":138,"author":{"gitId":"wxwern"},"content":"            switch (this) {","lastModifiedDate":"2023-09-13"},{"lineNumber":139,"author":{"gitId":"wxwern"},"content":"            case ADD_TODO:","lastModifiedDate":"2023-09-13"},{"lineNumber":140,"author":{"gitId":"wxwern"},"content":"                return \"%s \u003ctask title\u003e\";","lastModifiedDate":"2023-09-19"},{"lineNumber":141,"author":{"gitId":"wxwern"},"content":"            case ADD_DEADLINE:","lastModifiedDate":"2023-09-13"},{"lineNumber":142,"author":{"gitId":"wxwern"},"content":"                return \"%s \u003cdeadline title\u003e --by \u003cdeadline in ISO8601\u003e\";","lastModifiedDate":"2023-09-19"},{"lineNumber":143,"author":{"gitId":"wxwern"},"content":"            case ADD_EVENT:","lastModifiedDate":"2023-09-13"},{"lineNumber":144,"author":{"gitId":"wxwern"},"content":"                return \"%s \u003cevent title\u003e --from \u003cstart date in ISO8601\u003e --to \u003cend date in ISO8601\u003e\";","lastModifiedDate":"2023-09-19"},{"lineNumber":145,"author":{"gitId":"wxwern"},"content":"            case DELETE:","lastModifiedDate":"2023-09-13"},{"lineNumber":146,"author":{"gitId":"wxwern"},"content":"            case MARK_COMPLETE:","lastModifiedDate":"2023-09-13"},{"lineNumber":147,"author":{"gitId":"wxwern"},"content":"            case UNMARK_COMPLETE:","lastModifiedDate":"2023-09-13"},{"lineNumber":148,"author":{"gitId":"wxwern"},"content":"                return \"%s \u003ctask number\u003e\";","lastModifiedDate":"2023-09-19"},{"lineNumber":149,"author":{"gitId":"wxwern"},"content":"            case SEARCH:","lastModifiedDate":"2023-09-13"},{"lineNumber":150,"author":{"gitId":"wxwern"},"content":"                return \"%s \u003csearch terms\u003e\";","lastModifiedDate":"2023-09-19"},{"lineNumber":151,"author":{"gitId":"wxwern"},"content":"            case LIST:","lastModifiedDate":"2023-09-13"},{"lineNumber":152,"author":{"gitId":"wxwern"},"content":"            case HELP:","lastModifiedDate":"2023-09-13"},{"lineNumber":153,"author":{"gitId":"wxwern"},"content":"            case EXIT:","lastModifiedDate":"2023-09-13"},{"lineNumber":154,"author":{"gitId":"wxwern"},"content":"                return \"%s\";","lastModifiedDate":"2023-09-13"},{"lineNumber":155,"author":{"gitId":"wxwern"},"content":"            case UNKNOWN:","lastModifiedDate":"2023-09-13"},{"lineNumber":156,"author":{"gitId":"wxwern"},"content":"                return \"%s \u003c?\u003e\";","lastModifiedDate":"2023-09-19"},{"lineNumber":157,"author":{"gitId":"wxwern"},"content":"            default:","lastModifiedDate":"2023-09-13"},{"lineNumber":158,"author":{"gitId":"wxwern"},"content":"                assert false : \"All known command types must have a syntax description.\";","lastModifiedDate":"2023-09-19"},{"lineNumber":159,"author":{"gitId":"wxwern"},"content":"                return \"%s \u003c..unknown..?\u003e\";","lastModifiedDate":"2023-09-19"},{"lineNumber":160,"author":{"gitId":"wxwern"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":161,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":162,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":163,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":164,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":165,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":166,"author":{"gitId":"wxwern"},"content":"    private final String name;","lastModifiedDate":"2023-08-28"},{"lineNumber":167,"author":{"gitId":"wxwern"},"content":"    private final String data;","lastModifiedDate":"2023-08-28"},{"lineNumber":168,"author":{"gitId":"wxwern"},"content":"    private final Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":169,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":170,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":171,"author":{"gitId":"wxwern"},"content":"     * Constructs a command with the given properties.","lastModifiedDate":"2023-08-23"},{"lineNumber":172,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":173,"author":{"gitId":"wxwern"},"content":"     * @param name   The name of the command. Cannot be null.","lastModifiedDate":"2023-08-23"},{"lineNumber":174,"author":{"gitId":"wxwern"},"content":"     * @param data   The data of the command. Cannot be null; supply empty string if no data.","lastModifiedDate":"2023-08-23"},{"lineNumber":175,"author":{"gitId":"wxwern"},"content":"     * @param params The parameters of the command. May be null.","lastModifiedDate":"2023-08-23"},{"lineNumber":176,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":177,"author":{"gitId":"wxwern"},"content":"    public ChatCommand(String name, String data, Map\u003cString, String\u003e params) {","lastModifiedDate":"2023-08-29"},{"lineNumber":178,"author":{"gitId":"wxwern"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-23"},{"lineNumber":179,"author":{"gitId":"wxwern"},"content":"        this.data \u003d data;","lastModifiedDate":"2023-08-23"},{"lineNumber":180,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":181,"author":{"gitId":"wxwern"},"content":"        if (params !\u003d null) {","lastModifiedDate":"2023-08-23"},{"lineNumber":182,"author":{"gitId":"wxwern"},"content":"            this.params.putAll(params);","lastModifiedDate":"2023-08-23"},{"lineNumber":183,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":184,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":185,"author":{"gitId":"wxwern"},"content":"        if (name \u003d\u003d null || data \u003d\u003d null) {","lastModifiedDate":"2023-08-23"},{"lineNumber":186,"author":{"gitId":"wxwern"},"content":"            throw new NullPointerException(\"Name and data of a command cannot be null.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":187,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":188,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":189,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":190,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":191,"author":{"gitId":"wxwern"},"content":"     * Parses a string instruction as a command.","lastModifiedDate":"2023-08-23"},{"lineNumber":192,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":193,"author":{"gitId":"wxwern"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-08-23"},{"lineNumber":194,"author":{"gitId":"wxwern"},"content":"     * This expects the format: \"commandName Some long data text --key1 value1 --key2 value2\".","lastModifiedDate":"2023-08-29"},{"lineNumber":195,"author":{"gitId":"wxwern"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2023-08-23"},{"lineNumber":196,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":197,"author":{"gitId":"wxwern"},"content":"     * @param instruction The string instruction to parse.","lastModifiedDate":"2023-08-23"},{"lineNumber":198,"author":{"gitId":"wxwern"},"content":"     * @return The resulting command.","lastModifiedDate":"2023-08-23"},{"lineNumber":199,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":200,"author":{"gitId":"wxwern"},"content":"    public static ChatCommand parse(String instruction) {","lastModifiedDate":"2023-08-29"},{"lineNumber":201,"author":{"gitId":"wxwern"},"content":"        String[] words \u003d extractWordsFromInstruction(instruction);","lastModifiedDate":"2023-09-13"},{"lineNumber":202,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":203,"author":{"gitId":"wxwern"},"content":"        int dataEndIndex \u003d computeDataEndIndex(words);","lastModifiedDate":"2023-09-13"},{"lineNumber":204,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":205,"author":{"gitId":"wxwern"},"content":"        var name \u003d extractCommandNameString(words);","lastModifiedDate":"2023-09-13"},{"lineNumber":206,"author":{"gitId":"wxwern"},"content":"        var data \u003d extractCommandDataComponentString(words, dataEndIndex);","lastModifiedDate":"2023-09-13"},{"lineNumber":207,"author":{"gitId":"wxwern"},"content":"        var params \u003d extractCommandParametersMap(words, dataEndIndex);","lastModifiedDate":"2023-09-13"},{"lineNumber":208,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":209,"author":{"gitId":"wxwern"},"content":"        return new ChatCommand(name, data, params);","lastModifiedDate":"2023-09-13"},{"lineNumber":210,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":211,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":212,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":213,"author":{"gitId":"wxwern"},"content":"     * Parses a string instruction\u0027s command name.","lastModifiedDate":"2023-09-13"},{"lineNumber":214,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":215,"author":{"gitId":"wxwern"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":216,"author":{"gitId":"wxwern"},"content":"     * This expects the format: \"commandName Some long data text --key1 value1 --key2 value2\". It only returns the","lastModifiedDate":"2023-09-13"},{"lineNumber":217,"author":{"gitId":"wxwern"},"content":"     * commandName component, and does not attempt to read anything beyond that.","lastModifiedDate":"2023-09-13"},{"lineNumber":218,"author":{"gitId":"wxwern"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":219,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":220,"author":{"gitId":"wxwern"},"content":"     * @param instruction The string instruction to parse.","lastModifiedDate":"2023-09-13"},{"lineNumber":221,"author":{"gitId":"wxwern"},"content":"     * @return The command name retrieved as a non-null string.","lastModifiedDate":"2023-09-13"},{"lineNumber":222,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":223,"author":{"gitId":"wxwern"},"content":"    public static String parseCommandName(String instruction) {","lastModifiedDate":"2023-09-13"},{"lineNumber":224,"author":{"gitId":"wxwern"},"content":"        String[] words \u003d extractWordsFromInstruction(instruction);","lastModifiedDate":"2023-09-13"},{"lineNumber":225,"author":{"gitId":"wxwern"},"content":"        return extractCommandNameString(words);","lastModifiedDate":"2023-09-13"},{"lineNumber":226,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":227,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":228,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":229,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":230,"author":{"gitId":"wxwern"},"content":"     * Internal method to extract individual words separated by whitespace from an instruction.","lastModifiedDate":"2023-09-13"},{"lineNumber":231,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":232,"author":{"gitId":"wxwern"},"content":"     * @param instruction The original string instruction to extract words from.","lastModifiedDate":"2023-09-13"},{"lineNumber":233,"author":{"gitId":"wxwern"},"content":"     * @return The array of words.","lastModifiedDate":"2023-09-13"},{"lineNumber":234,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":235,"author":{"gitId":"wxwern"},"content":"    private static String[] extractWordsFromInstruction(String instruction) {","lastModifiedDate":"2023-09-13"},{"lineNumber":236,"author":{"gitId":"wxwern"},"content":"        String[] parts \u003d instruction.trim().split(\"[ \\t\\r\\n]\");","lastModifiedDate":"2023-09-13"},{"lineNumber":237,"author":{"gitId":"wxwern"},"content":"        return parts;","lastModifiedDate":"2023-09-13"},{"lineNumber":238,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":239,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":240,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":241,"author":{"gitId":"wxwern"},"content":"     * Internal method to compute the first index of which is no longer the data component.","lastModifiedDate":"2023-09-13"},{"lineNumber":242,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":243,"author":{"gitId":"wxwern"},"content":"     * @param words A reference to the original partitioned words.","lastModifiedDate":"2023-09-13"},{"lineNumber":244,"author":{"gitId":"wxwern"},"content":"     * @return The first index in the words array of which is no longer part of the data.","lastModifiedDate":"2023-09-13"},{"lineNumber":245,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":246,"author":{"gitId":"wxwern"},"content":"    private static int computeDataEndIndex(String[] words) {","lastModifiedDate":"2023-09-13"},{"lineNumber":247,"author":{"gitId":"wxwern"},"content":"        int dataEndIndex \u003d 0;","lastModifiedDate":"2023-09-13"},{"lineNumber":248,"author":{"gitId":"wxwern"},"content":"        while (dataEndIndex \u003c words.length) {","lastModifiedDate":"2023-09-13"},{"lineNumber":249,"author":{"gitId":"wxwern"},"content":"            String part \u003d words[dataEndIndex];","lastModifiedDate":"2023-09-13"},{"lineNumber":250,"author":{"gitId":"wxwern"},"content":"            if (part.startsWith(PARAMETER_PREFIX)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":251,"author":{"gitId":"wxwern"},"content":"                break;","lastModifiedDate":"2023-08-23"},{"lineNumber":252,"author":{"gitId":"wxwern"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":253,"author":{"gitId":"wxwern"},"content":"            dataEndIndex++;","lastModifiedDate":"2023-08-23"},{"lineNumber":254,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":255,"author":{"gitId":"wxwern"},"content":"        return dataEndIndex;","lastModifiedDate":"2023-09-13"},{"lineNumber":256,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":257,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":258,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":259,"author":{"gitId":"wxwern"},"content":"     * Internal method to extract the command name string.","lastModifiedDate":"2023-09-13"},{"lineNumber":260,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":261,"author":{"gitId":"wxwern"},"content":"     * @param words A reference to the original partitioned words.","lastModifiedDate":"2023-09-13"},{"lineNumber":262,"author":{"gitId":"wxwern"},"content":"     * @return A string representing the command name.","lastModifiedDate":"2023-09-13"},{"lineNumber":263,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":264,"author":{"gitId":"wxwern"},"content":"    private static String extractCommandNameString(String[] words) {","lastModifiedDate":"2023-09-13"},{"lineNumber":265,"author":{"gitId":"wxwern"},"content":"        if (words.length \u003d\u003d 0 || words[0].startsWith(PARAMETER_PREFIX)) {","lastModifiedDate":"2023-09-13"},{"lineNumber":266,"author":{"gitId":"wxwern"},"content":"            return \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":267,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":268,"author":{"gitId":"wxwern"},"content":"        return words[0];","lastModifiedDate":"2023-09-13"},{"lineNumber":269,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":270,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":271,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":272,"author":{"gitId":"wxwern"},"content":"     * Internal method to extract the data string from the word parts, given the index to end the search once reached.","lastModifiedDate":"2023-09-13"},{"lineNumber":273,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":274,"author":{"gitId":"wxwern"},"content":"     * @param words        A reference to the original partitioned words.","lastModifiedDate":"2023-09-13"},{"lineNumber":275,"author":{"gitId":"wxwern"},"content":"     * @param dataEndIndex The index that marks the end of the data component, exclusive.","lastModifiedDate":"2023-09-13"},{"lineNumber":276,"author":{"gitId":"wxwern"},"content":"     * @return A string representing the full data component.","lastModifiedDate":"2023-09-13"},{"lineNumber":277,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":278,"author":{"gitId":"wxwern"},"content":"    private static String extractCommandDataComponentString(String[] words, int dataEndIndex) {","lastModifiedDate":"2023-09-13"},{"lineNumber":279,"author":{"gitId":"wxwern"},"content":"        StringBuilder data \u003d new StringBuilder();","lastModifiedDate":"2023-09-13"},{"lineNumber":280,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":281,"author":{"gitId":"wxwern"},"content":"        // Merge the data components into a string.","lastModifiedDate":"2023-08-23"},{"lineNumber":282,"author":{"gitId":"wxwern"},"content":"        for (int i \u003d 1; i \u003c dataEndIndex; i++) {","lastModifiedDate":"2023-08-23"},{"lineNumber":283,"author":{"gitId":"wxwern"},"content":"            if (i \u003e 1) {","lastModifiedDate":"2023-08-23"},{"lineNumber":284,"author":{"gitId":"wxwern"},"content":"                data.append(\u0027 \u0027);","lastModifiedDate":"2023-08-23"},{"lineNumber":285,"author":{"gitId":"wxwern"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":286,"author":{"gitId":"wxwern"},"content":"            data.append(words[i]);","lastModifiedDate":"2023-09-13"},{"lineNumber":287,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":288,"author":{"gitId":"wxwern"},"content":"        return data.toString();","lastModifiedDate":"2023-09-13"},{"lineNumber":289,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":290,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":291,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":292,"author":{"gitId":"wxwern"},"content":"     * Internal method to extract a map of the parameters from the word parts of an instruction, given the starting","lastModifiedDate":"2023-09-13"},{"lineNumber":293,"author":{"gitId":"wxwern"},"content":"     * index to search from.","lastModifiedDate":"2023-09-13"},{"lineNumber":294,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":295,"author":{"gitId":"wxwern"},"content":"     * @param words               A reference to the original partitioned words.","lastModifiedDate":"2023-09-13"},{"lineNumber":296,"author":{"gitId":"wxwern"},"content":"     * @param parameterStartIndex The index to start the search from, inclusive.","lastModifiedDate":"2023-09-13"},{"lineNumber":297,"author":{"gitId":"wxwern"},"content":"     * @return A map reflecting the newly extracted parameters as key-value pairs.","lastModifiedDate":"2023-09-13"},{"lineNumber":298,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":299,"author":{"gitId":"wxwern"},"content":"    private static Map\u003cString, String\u003e extractCommandParametersMap(String[] words, int parameterStartIndex) {","lastModifiedDate":"2023-09-13"},{"lineNumber":300,"author":{"gitId":"wxwern"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-08-23"},{"lineNumber":301,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":302,"author":{"gitId":"wxwern"},"content":"        String currParamKey \u003d \"\";","lastModifiedDate":"2023-08-23"},{"lineNumber":303,"author":{"gitId":"wxwern"},"content":"        StringBuilder currParamValue \u003d new StringBuilder();","lastModifiedDate":"2023-08-23"},{"lineNumber":304,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":305,"author":{"gitId":"wxwern"},"content":"        // Scan through each word within the parameter index range.","lastModifiedDate":"2023-09-13"},{"lineNumber":306,"author":{"gitId":"wxwern"},"content":"        for (int i \u003d parameterStartIndex; i \u003c words.length; i++) {","lastModifiedDate":"2023-09-13"},{"lineNumber":307,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":308,"author":{"gitId":"wxwern"},"content":"            String part \u003d words[i].trim();","lastModifiedDate":"2023-09-13"},{"lineNumber":309,"author":{"gitId":"wxwern"},"content":"            if (part.startsWith(PARAMETER_PREFIX)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":310,"author":{"gitId":"wxwern"},"content":"                // We reached a new key value pair.","lastModifiedDate":"2023-09-13"},{"lineNumber":311,"author":{"gitId":"wxwern"},"content":"                // If it was tracking an old key, we should add the old key-value pair in before setting the new one.","lastModifiedDate":"2023-09-13"},{"lineNumber":312,"author":{"gitId":"wxwern"},"content":"                if (!currParamKey.isEmpty()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":313,"author":{"gitId":"wxwern"},"content":"                    params.put(currParamKey, currParamValue.toString().trim());","lastModifiedDate":"2023-08-23"},{"lineNumber":314,"author":{"gitId":"wxwern"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":315,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":316,"author":{"gitId":"wxwern"},"content":"                // Now that we are done, track the new key value pair.","lastModifiedDate":"2023-09-13"},{"lineNumber":317,"author":{"gitId":"wxwern"},"content":"                currParamKey \u003d part;","lastModifiedDate":"2023-08-23"},{"lineNumber":318,"author":{"gitId":"wxwern"},"content":"                currParamValue \u003d new StringBuilder();","lastModifiedDate":"2023-08-23"},{"lineNumber":319,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":320,"author":{"gitId":"wxwern"},"content":"            } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":321,"author":{"gitId":"wxwern"},"content":"                currParamValue.append(words[i]);","lastModifiedDate":"2023-09-13"},{"lineNumber":322,"author":{"gitId":"wxwern"},"content":"                currParamValue.append(\u0027 \u0027);","lastModifiedDate":"2023-08-23"},{"lineNumber":323,"author":{"gitId":"wxwern"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":324,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":325,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":326,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":327,"author":{"gitId":"wxwern"},"content":"        // There\u0027s an ending case that we might have missed out on, since it only adds upon new key detection.","lastModifiedDate":"2023-09-13"},{"lineNumber":328,"author":{"gitId":"wxwern"},"content":"        // Check if there\u0027s anything left out and add the pair if so.","lastModifiedDate":"2023-09-13"},{"lineNumber":329,"author":{"gitId":"wxwern"},"content":"        if (!currParamKey.isEmpty()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":330,"author":{"gitId":"wxwern"},"content":"            params.put(currParamKey, currParamValue.toString().trim());","lastModifiedDate":"2023-08-23"},{"lineNumber":331,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":332,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":333,"author":{"gitId":"wxwern"},"content":"        // We\u0027re done!","lastModifiedDate":"2023-09-13"},{"lineNumber":334,"author":{"gitId":"wxwern"},"content":"        return params;","lastModifiedDate":"2023-09-13"},{"lineNumber":335,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":336,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":337,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":338,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":339,"author":{"gitId":"wxwern"},"content":"     * Obtains the name of the given command.","lastModifiedDate":"2023-08-23"},{"lineNumber":340,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":341,"author":{"gitId":"wxwern"},"content":"     * @return The name of the given command as a non-null string.","lastModifiedDate":"2023-08-23"},{"lineNumber":342,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":343,"author":{"gitId":"wxwern"},"content":"    public String getName() {","lastModifiedDate":"2023-08-23"},{"lineNumber":344,"author":{"gitId":"wxwern"},"content":"        return this.name;","lastModifiedDate":"2023-08-23"},{"lineNumber":345,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":346,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":347,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":348,"author":{"gitId":"wxwern"},"content":"     * Obtains the operation of the given command by comparing the name against one of the standard operations.","lastModifiedDate":"2023-08-23"},{"lineNumber":349,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":350,"author":{"gitId":"wxwern"},"content":"     * @return The operation of the given command.","lastModifiedDate":"2023-08-23"},{"lineNumber":351,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":352,"author":{"gitId":"wxwern"},"content":"    public Operation getOperation() {","lastModifiedDate":"2023-08-23"},{"lineNumber":353,"author":{"gitId":"wxwern"},"content":"        return Operation.fromCommandName(this.getName());","lastModifiedDate":"2023-09-13"},{"lineNumber":354,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":355,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":356,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":357,"author":{"gitId":"wxwern"},"content":"     * Obtains the data of the given command.","lastModifiedDate":"2023-08-23"},{"lineNumber":358,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":359,"author":{"gitId":"wxwern"},"content":"     * @return The data of the given command as a non-null string.","lastModifiedDate":"2023-08-23"},{"lineNumber":360,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":361,"author":{"gitId":"wxwern"},"content":"    public String getData() {","lastModifiedDate":"2023-08-23"},{"lineNumber":362,"author":{"gitId":"wxwern"},"content":"        return this.data;","lastModifiedDate":"2023-08-23"},{"lineNumber":363,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":364,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":365,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":366,"author":{"gitId":"wxwern"},"content":"     * Obtains the value of the given parameter in the command.","lastModifiedDate":"2023-08-23"},{"lineNumber":367,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":368,"author":{"gitId":"wxwern"},"content":"     * @param key the parameter, also known as the key.","lastModifiedDate":"2023-08-23"},{"lineNumber":369,"author":{"gitId":"wxwern"},"content":"     * @return The value of this param, or null if unset.","lastModifiedDate":"2023-08-23"},{"lineNumber":370,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":371,"author":{"gitId":"wxwern"},"content":"    public String getParam(String key) {","lastModifiedDate":"2023-08-23"},{"lineNumber":372,"author":{"gitId":"wxwern"},"content":"        if (!key.startsWith(PARAMETER_PREFIX)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":373,"author":{"gitId":"wxwern"},"content":"            key \u003d PARAMETER_PREFIX + key;","lastModifiedDate":"2023-08-29"},{"lineNumber":374,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":375,"author":{"gitId":"wxwern"},"content":"        return this.params.get(key);","lastModifiedDate":"2023-08-23"},{"lineNumber":376,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":377,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":378,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":379,"author":{"gitId":"wxwern"},"content":"     * Checks whether the command has parameters.","lastModifiedDate":"2023-08-29"},{"lineNumber":380,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":381,"author":{"gitId":"wxwern"},"content":"     * @return `true` if there is at least one parameter, `false` otherwise.","lastModifiedDate":"2023-08-29"},{"lineNumber":382,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":383,"author":{"gitId":"wxwern"},"content":"    public boolean hasParams() {","lastModifiedDate":"2023-08-29"},{"lineNumber":384,"author":{"gitId":"wxwern"},"content":"        return !this.params.isEmpty();","lastModifiedDate":"2023-08-29"},{"lineNumber":385,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":386,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":387,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":388,"author":{"gitId":"wxwern"},"content":"     * Checks whether the given parameter was initialised.","lastModifiedDate":"2023-08-23"},{"lineNumber":389,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":390,"author":{"gitId":"wxwern"},"content":"     * @param key the parameter, also known as the key.","lastModifiedDate":"2023-08-23"},{"lineNumber":391,"author":{"gitId":"wxwern"},"content":"     * @return `true` if it was initialised, `false` otherwise.","lastModifiedDate":"2023-08-23"},{"lineNumber":392,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":393,"author":{"gitId":"wxwern"},"content":"    public boolean hasParam(String key) {","lastModifiedDate":"2023-08-23"},{"lineNumber":394,"author":{"gitId":"wxwern"},"content":"        if (!key.startsWith(PARAMETER_PREFIX)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":395,"author":{"gitId":"wxwern"},"content":"            key \u003d PARAMETER_PREFIX + key;","lastModifiedDate":"2023-08-29"},{"lineNumber":396,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":397,"author":{"gitId":"wxwern"},"content":"        return this.params.containsKey(key);","lastModifiedDate":"2023-08-23"},{"lineNumber":398,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":399,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":400,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":401,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":402,"author":{"gitId":"wxwern"},"content":"     * Checks whether the given parameter has any \u003ci\u003euseful\u003c/i\u003e value.","lastModifiedDate":"2023-08-28"},{"lineNumber":403,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":404,"author":{"gitId":"wxwern"},"content":"     * @param key the parameter, also known as the key.","lastModifiedDate":"2023-08-23"},{"lineNumber":405,"author":{"gitId":"wxwern"},"content":"     * @return `true` if it has any non-empty, non-whitespace value, `false` otherwise.","lastModifiedDate":"2023-08-23"},{"lineNumber":406,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":407,"author":{"gitId":"wxwern"},"content":"    public boolean hasParamWithUsefulValue(String key) {","lastModifiedDate":"2023-08-23"},{"lineNumber":408,"author":{"gitId":"wxwern"},"content":"        if (!key.startsWith(PARAMETER_PREFIX)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":409,"author":{"gitId":"wxwern"},"content":"            key \u003d PARAMETER_PREFIX + key;","lastModifiedDate":"2023-08-29"},{"lineNumber":410,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":411,"author":{"gitId":"wxwern"},"content":"        String value \u003d this.params.get(key);","lastModifiedDate":"2023-08-23"},{"lineNumber":412,"author":{"gitId":"wxwern"},"content":"        if (value \u003d\u003d null) {","lastModifiedDate":"2023-08-23"},{"lineNumber":413,"author":{"gitId":"wxwern"},"content":"            value \u003d \"\";","lastModifiedDate":"2023-08-23"},{"lineNumber":414,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":415,"author":{"gitId":"wxwern"},"content":"        return !value.isBlank();","lastModifiedDate":"2023-08-23"},{"lineNumber":416,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":417,"author":{"gitId":"wxwern"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"wxwern":417}},{"path":"src/main/java/todoify/chatbot/ChatMessage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxwern"},"content":"package todoify.chatbot;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"wxwern"},"content":"import java.time.Instant;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"wxwern"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"wxwern"},"content":" * The read-only instance for a single message.","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"wxwern"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"wxwern"},"content":"public class ChatMessage {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"wxwern"},"content":"     * The message sender type for a message in a conversation.","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"wxwern"},"content":"    public enum SenderType {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"wxwern"},"content":"        CHATBOT, USER","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"wxwern"},"content":"    private final long timestamp;","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"wxwern"},"content":"    private final SenderType senderType;","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"wxwern"},"content":"    private final String message;","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"wxwern"},"content":"     * Constructor for a chat message with the current time.","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"wxwern"},"content":"     * @param senderType The type of the sender.","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"wxwern"},"content":"     * @param message    The message sent by the sender.","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"wxwern"},"content":"    public ChatMessage(SenderType senderType, String message) {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"wxwern"},"content":"        this.timestamp \u003d Instant.now().getEpochSecond();","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"wxwern"},"content":"        this.senderType \u003d senderType;","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"wxwern"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"wxwern"},"content":"     * Returns the timestamp of this message, in Unix epoch seconds.","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"wxwern"},"content":"     * @return The timestamp of this message.","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"wxwern"},"content":"    public long getTimestamp() {","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"wxwern"},"content":"        return this.timestamp;","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"wxwern"},"content":"     * Returns the type of this sender.","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"wxwern"},"content":"     * @return The sender type.","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"wxwern"},"content":"    public SenderType getSenderType() {","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"wxwern"},"content":"        return this.senderType;","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"wxwern"},"content":"     * Returns the message contents.","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"wxwern"},"content":"     * @return The message contents as a String.","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"wxwern"},"content":"    public String getMessage() {","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"wxwern"},"content":"        return this.message;","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"wxwern"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"wxwern":59}},{"path":"src/main/java/todoify/chatbot/Chatbot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxwern"},"content":"package todoify.chatbot;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"wxwern"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"wxwern"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"wxwern"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"wxwern"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"wxwern"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"wxwern"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"wxwern"},"content":"import todoify.chatbot.exception.ChatbotException;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"wxwern"},"content":"import todoify.chatbot.exception.ChatbotRuntimeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"wxwern"},"content":"import todoify.chatbot.exception.command.ChatbotCommandException;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"wxwern"},"content":"import todoify.chatbot.exception.command.ChatbotInvalidCommandFormatException;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"wxwern"},"content":"import todoify.chatbot.exception.command.ChatbotIrrelevantOperationException;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"wxwern"},"content":"import todoify.taskmanager.TaskManager;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"wxwern"},"content":"import todoify.taskmanager.task.Deadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"wxwern"},"content":"import todoify.taskmanager.task.Event;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"wxwern"},"content":"import todoify.taskmanager.task.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"wxwern"},"content":"import todoify.taskmanager.task.Todo;","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"wxwern"},"content":"import todoify.util.EpochConverter;","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"wxwern"},"content":"import todoify.util.events.EventEmitter;","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"wxwern"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"wxwern"},"content":" * A chatbot to interact with.","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"wxwern"},"content":" *","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"wxwern"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"wxwern"},"content":" * This class is an abstraction over a chatbot that also supplies methods to allow users to easily interact with the","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"wxwern"},"content":" * bot, and for UI clients to subscribe to chat messages.","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"wxwern"},"content":" * \u003c/p\u003e","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"wxwern"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"wxwern"},"content":"public class Chatbot extends EventEmitter\u003cChatMessage\u003e {","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"wxwern"},"content":"     * The default name of the chatbot.","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"wxwern"},"content":"    public static final String DEFAULT_NAME \u003d \"Todoify\";","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"wxwern"},"content":"    private final String name;","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"wxwern"},"content":"    private final ArrayList\u003cChatMessage\u003e convoList;","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"wxwern"},"content":"    private final TaskManager taskManager;","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"wxwern"},"content":"    private boolean isClosed;","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"wxwern"},"content":"     * Creates a new chatbot with the given custom name. To start talking with it, call","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"wxwern"},"content":"     * {@link Chatbot#openConversation()}.","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"wxwern"},"content":"     * @param name        The name of the chatbot. Uses the default if null.","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"wxwern"},"content":"     * @param taskManager The task manager the chatbot should utilise. Uses the default if null.","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"wxwern"},"content":"    public Chatbot(String name, TaskManager taskManager) {","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"wxwern"},"content":"        this.name \u003d name \u003d\u003d null ? DEFAULT_NAME : name;","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"wxwern"},"content":"        this.convoList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"wxwern"},"content":"        this.taskManager \u003d taskManager \u003d\u003d null ? new TaskManager() : taskManager;","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"wxwern"},"content":"        this.isClosed \u003d true;","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"wxwern"},"content":"     * Returns an iterable representing the current full conversation.","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"wxwern"},"content":"     * @return An iterable of messages for the current conversation in chronological order.","lastModifiedDate":"2023-08-22"},{"lineNumber":64,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":65,"author":{"gitId":"wxwern"},"content":"    public Iterable\u003cChatMessage\u003e getConversation() {","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"wxwern"},"content":"        return this.convoList;","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":68,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":69,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"wxwern"},"content":"     * Returns the name of the chatbot.","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"wxwern"},"content":"     * @return The name of the chatbot as a String.","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"wxwern"},"content":"    public String getName() {","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"wxwern"},"content":"        return this.name;","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":79,"author":{"gitId":"wxwern"},"content":"     * Starts the chatbot conversation. Messages may be sent to the chatbot after this.","lastModifiedDate":"2023-08-22"},{"lineNumber":80,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":81,"author":{"gitId":"wxwern"},"content":"    public void openConversation() {","lastModifiedDate":"2023-08-22"},{"lineNumber":82,"author":{"gitId":"wxwern"},"content":"        if (!this.isClosed) {","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"wxwern"},"content":"            return;","lastModifiedDate":"2023-08-22"},{"lineNumber":84,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":85,"author":{"gitId":"wxwern"},"content":"        this.isClosed \u003d false;","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"wxwern"},"content":"        this.sendMessage(","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"wxwern"},"content":"                ChatMessage.SenderType.CHATBOT,","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"wxwern"},"content":"                String.format(\"Hello! I\u0027m %s, your friendly task helper.\", this.name)","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"wxwern"},"content":"        );","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"wxwern"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":93,"author":{"gitId":"wxwern"},"content":"            this.taskManager.loadFromStorage();","lastModifiedDate":"2023-08-28"},{"lineNumber":94,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"wxwern"},"content":"            // If successful, prompt about current state.","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"wxwern"},"content":"            if (this.taskManager.getTaskCount() \u003e 0) {","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"wxwern"},"content":"                this.sendMessage(","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"wxwern"},"content":"                        ChatMessage.SenderType.CHATBOT,","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"wxwern"},"content":"                        String.format(\"You\u0027ve %d tasks in your list right now! :)\", this.taskManager.getTaskCount())","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"wxwern"},"content":"                );","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"wxwern"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"wxwern"},"content":"                this.sendMessage(ChatMessage.SenderType.CHATBOT, \"You have no tasks right now! :)\");","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"wxwern"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"wxwern"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"wxwern"},"content":"            // Do nothing.","lastModifiedDate":"2023-08-28"},{"lineNumber":107,"author":{"gitId":"wxwern"},"content":"            this.sendMessage(ChatMessage.SenderType.CHATBOT, \"You have no tasks right now! :)\");","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"wxwern"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"wxwern"},"content":"            // Warn about the error.","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"wxwern"},"content":"            this.sendMessage(ChatMessage.SenderType.CHATBOT, String.format(","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"wxwern"},"content":"                    \"Sorry, I couldn\u0027t load your tasks.\\nThe error was: [%s] %s\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"wxwern"},"content":"                            + \"I\u0027ll be starting from a blank slate instead.\",","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"wxwern"},"content":"                    e.getClass().getSimpleName(),","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"wxwern"},"content":"                    e.getLocalizedMessage()","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"wxwern"},"content":"            ));","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":118,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":119,"author":{"gitId":"wxwern"},"content":"        this.sendMessage(ChatMessage.SenderType.CHATBOT, \"What can I do for you?\");","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":121,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":122,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":123,"author":{"gitId":"wxwern"},"content":"     * Ends the chatbot conversation. No new messages may be sent after this.","lastModifiedDate":"2023-08-22"},{"lineNumber":124,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":125,"author":{"gitId":"wxwern"},"content":"    public void closeConversation() {","lastModifiedDate":"2023-08-22"},{"lineNumber":126,"author":{"gitId":"wxwern"},"content":"        if (this.isClosed) {","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"wxwern"},"content":"            return;","lastModifiedDate":"2023-08-22"},{"lineNumber":128,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":129,"author":{"gitId":"wxwern"},"content":"        this.isClosed \u003d true;","lastModifiedDate":"2023-08-29"},{"lineNumber":130,"author":{"gitId":"wxwern"},"content":"        this.sendMessage(ChatMessage.SenderType.CHATBOT, \"Bye! Hope to see you again soon! ^-^\");","lastModifiedDate":"2023-08-23"},{"lineNumber":131,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":132,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":133,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":134,"author":{"gitId":"wxwern"},"content":"     * Returns whether a conversation with the chatbot is open, which means messages can be sent.","lastModifiedDate":"2023-08-22"},{"lineNumber":135,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"wxwern"},"content":"     * @return true if the conversation is open, false otherwise.","lastModifiedDate":"2023-08-22"},{"lineNumber":137,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":138,"author":{"gitId":"wxwern"},"content":"    public boolean isConversationOpen() {","lastModifiedDate":"2023-08-22"},{"lineNumber":139,"author":{"gitId":"wxwern"},"content":"        return !this.isClosed;","lastModifiedDate":"2023-08-29"},{"lineNumber":140,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":141,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":142,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":143,"author":{"gitId":"wxwern"},"content":"     * Returns whether the conversation has clased, which means messages can no longer be sent.","lastModifiedDate":"2023-08-22"},{"lineNumber":144,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":145,"author":{"gitId":"wxwern"},"content":"     * @return true if the conversation is closed, false otherwise.","lastModifiedDate":"2023-08-22"},{"lineNumber":146,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":147,"author":{"gitId":"wxwern"},"content":"    public boolean isConversationClosed() {","lastModifiedDate":"2023-08-22"},{"lineNumber":148,"author":{"gitId":"wxwern"},"content":"        return this.isClosed;","lastModifiedDate":"2023-08-29"},{"lineNumber":149,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":150,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":151,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":152,"author":{"gitId":"wxwern"},"content":"     * Method to send a message to the chatbot from the user.","lastModifiedDate":"2023-08-22"},{"lineNumber":153,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":154,"author":{"gitId":"wxwern"},"content":"     * @param message The message string to send.","lastModifiedDate":"2023-08-22"},{"lineNumber":155,"author":{"gitId":"wxwern"},"content":"     * @return The resulting message sent.","lastModifiedDate":"2023-08-22"},{"lineNumber":156,"author":{"gitId":"wxwern"},"content":"     * @throws ChatbotRuntimeException if the conversation is closed.","lastModifiedDate":"2023-08-23"},{"lineNumber":157,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":158,"author":{"gitId":"wxwern"},"content":"    public ChatMessage sendMessageFromUser(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":159,"author":{"gitId":"wxwern"},"content":"        if (this.isClosed) {","lastModifiedDate":"2023-08-29"},{"lineNumber":160,"author":{"gitId":"wxwern"},"content":"            throw new ChatbotRuntimeException(\"Conversations are not open, so no messages may be sent!\");","lastModifiedDate":"2023-08-23"},{"lineNumber":161,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":162,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":163,"author":{"gitId":"wxwern"},"content":"        return this.sendMessage(ChatMessage.SenderType.USER, message);","lastModifiedDate":"2023-08-23"},{"lineNumber":164,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":165,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":166,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":167,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":168,"author":{"gitId":"wxwern"},"content":"     * Internal method to send a message.","lastModifiedDate":"2023-08-22"},{"lineNumber":169,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":170,"author":{"gitId":"wxwern"},"content":"     * @param message The message to send.","lastModifiedDate":"2023-08-22"},{"lineNumber":171,"author":{"gitId":"wxwern"},"content":"     * @return The resulting message sent.","lastModifiedDate":"2023-08-22"},{"lineNumber":172,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":173,"author":{"gitId":"wxwern"},"content":"    private ChatMessage sendMessage(ChatMessage.SenderType sender, String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":174,"author":{"gitId":"wxwern"},"content":"        ChatMessage msg \u003d new ChatMessage(sender, message);","lastModifiedDate":"2023-08-23"},{"lineNumber":175,"author":{"gitId":"wxwern"},"content":"        this.convoList.add(msg);","lastModifiedDate":"2023-08-29"},{"lineNumber":176,"author":{"gitId":"wxwern"},"content":"        this.processMessage(msg);","lastModifiedDate":"2023-08-22"},{"lineNumber":177,"author":{"gitId":"wxwern"},"content":"        return msg;","lastModifiedDate":"2023-08-22"},{"lineNumber":178,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":179,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":180,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":181,"author":{"gitId":"wxwern"},"content":"     * Internal method to process newly received messages.","lastModifiedDate":"2023-08-22"},{"lineNumber":182,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":183,"author":{"gitId":"wxwern"},"content":"     * @param message The message to process.","lastModifiedDate":"2023-08-22"},{"lineNumber":184,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":185,"author":{"gitId":"wxwern"},"content":"    private void processMessage(ChatMessage message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":186,"author":{"gitId":"wxwern"},"content":"        // Let\u0027s notify the listeners.","lastModifiedDate":"2023-08-22"},{"lineNumber":187,"author":{"gitId":"wxwern"},"content":"        this.fireEvent(message);","lastModifiedDate":"2023-08-22"},{"lineNumber":188,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":189,"author":{"gitId":"wxwern"},"content":"        if (message.getSenderType() \u003d\u003d ChatMessage.SenderType.CHATBOT) {","lastModifiedDate":"2023-08-23"},{"lineNumber":190,"author":{"gitId":"wxwern"},"content":"            // For now, self messages need no further processing.","lastModifiedDate":"2023-08-23"},{"lineNumber":191,"author":{"gitId":"wxwern"},"content":"            return;","lastModifiedDate":"2023-08-23"},{"lineNumber":192,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":193,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":194,"author":{"gitId":"wxwern"},"content":"        // Let\u0027s see what the other users send!","lastModifiedDate":"2023-08-23"},{"lineNumber":195,"author":{"gitId":"wxwern"},"content":"        final ChatCommand command \u003d ChatCommand.parse(message.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":196,"author":{"gitId":"wxwern"},"content":"        this.processCommand(command);","lastModifiedDate":"2023-08-29"},{"lineNumber":197,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":198,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":199,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":200,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":201,"author":{"gitId":"wxwern"},"content":"     * Internal method to process newly received commands.","lastModifiedDate":"2023-08-29"},{"lineNumber":202,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":203,"author":{"gitId":"wxwern"},"content":"     * @param chatCommand The command to process.","lastModifiedDate":"2023-08-29"},{"lineNumber":204,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":205,"author":{"gitId":"wxwern"},"content":"    private void processCommand(ChatCommand chatCommand) {","lastModifiedDate":"2023-08-29"},{"lineNumber":206,"author":{"gitId":"wxwern"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":207,"author":{"gitId":"wxwern"},"content":"            switch (chatCommand.getOperation()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":208,"author":{"gitId":"wxwern"},"content":"            case MARK_COMPLETE:","lastModifiedDate":"2023-08-29"},{"lineNumber":209,"author":{"gitId":"wxwern"},"content":"            case UNMARK_COMPLETE:","lastModifiedDate":"2023-08-29"},{"lineNumber":210,"author":{"gitId":"wxwern"},"content":"            case DELETE:","lastModifiedDate":"2023-08-29"},{"lineNumber":211,"author":{"gitId":"wxwern"},"content":"                this.processCommandAssertNumericData(chatCommand);","lastModifiedDate":"2023-09-06"},{"lineNumber":212,"author":{"gitId":"wxwern"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":213,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":214,"author":{"gitId":"wxwern"},"content":"            case ADD_TODO:","lastModifiedDate":"2023-08-29"},{"lineNumber":215,"author":{"gitId":"wxwern"},"content":"            case ADD_DEADLINE:","lastModifiedDate":"2023-08-29"},{"lineNumber":216,"author":{"gitId":"wxwern"},"content":"            case ADD_EVENT:","lastModifiedDate":"2023-08-29"},{"lineNumber":217,"author":{"gitId":"wxwern"},"content":"            case SEARCH:","lastModifiedDate":"2023-08-29"},{"lineNumber":218,"author":{"gitId":"wxwern"},"content":"                this.processCommandAssertHasData(chatCommand);","lastModifiedDate":"2023-09-06"},{"lineNumber":219,"author":{"gitId":"wxwern"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":220,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":221,"author":{"gitId":"wxwern"},"content":"            case LIST:","lastModifiedDate":"2023-08-29"},{"lineNumber":222,"author":{"gitId":"wxwern"},"content":"            case HELP:","lastModifiedDate":"2023-09-13"},{"lineNumber":223,"author":{"gitId":"wxwern"},"content":"            case EXIT:","lastModifiedDate":"2023-08-29"},{"lineNumber":224,"author":{"gitId":"wxwern"},"content":"                this.processCommandAssertNoData(chatCommand);","lastModifiedDate":"2023-09-06"},{"lineNumber":225,"author":{"gitId":"wxwern"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":226,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":227,"author":{"gitId":"wxwern"},"content":"            case UNKNOWN:","lastModifiedDate":"2023-08-29"},{"lineNumber":228,"author":{"gitId":"wxwern"},"content":"            default:","lastModifiedDate":"2023-08-29"},{"lineNumber":229,"author":{"gitId":"wxwern"},"content":"                throw new ChatbotCommandException(\"Sorry, idgi :(\\nYou might wanna try the \u0027help\u0027 command to let me \"","lastModifiedDate":"2023-09-19"},{"lineNumber":230,"author":{"gitId":"wxwern"},"content":"                        + \"guide you about all available commands!\");","lastModifiedDate":"2023-09-19"},{"lineNumber":231,"author":{"gitId":"wxwern"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":232,"author":{"gitId":"wxwern"},"content":"        } catch (ChatbotIrrelevantOperationException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":233,"author":{"gitId":"wxwern"},"content":"            // This will only be thrown if the code path unexpectedly processes data in a format not relevant to the","lastModifiedDate":"2023-09-06"},{"lineNumber":234,"author":{"gitId":"wxwern"},"content":"            // operation in question. In other words, entering this code block is likely a programmer error.","lastModifiedDate":"2023-09-12"},{"lineNumber":235,"author":{"gitId":"wxwern"},"content":"            assert false;","lastModifiedDate":"2023-09-12"},{"lineNumber":236,"author":{"gitId":"wxwern"},"content":"            this.sendMessage(ChatMessage.SenderType.CHATBOT, \"Oops! There was an internal error.\");","lastModifiedDate":"2023-09-06"},{"lineNumber":237,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":238,"author":{"gitId":"wxwern"},"content":"        } catch (ChatbotCommandException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":239,"author":{"gitId":"wxwern"},"content":"            // All other errors related to command processing will be caught here, and should be shown to the user.","lastModifiedDate":"2023-09-06"},{"lineNumber":240,"author":{"gitId":"wxwern"},"content":"            this.sendMessage(ChatMessage.SenderType.CHATBOT, \"Oops! \" + e.getLocalizedMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":241,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":242,"author":{"gitId":"wxwern"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":243,"author":{"gitId":"wxwern"},"content":"            // Any other exceptions are errors unrelated to the command itself. In this case, let the user know anyway.","lastModifiedDate":"2023-09-06"},{"lineNumber":244,"author":{"gitId":"wxwern"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-29"},{"lineNumber":245,"author":{"gitId":"wxwern"},"content":"            this.sendMessage(ChatMessage.SenderType.CHATBOT, String.format(","lastModifiedDate":"2023-09-02"},{"lineNumber":246,"author":{"gitId":"wxwern"},"content":"                    \"Oh no, something\u0027s wrong! [%s] %s\",","lastModifiedDate":"2023-08-29"},{"lineNumber":247,"author":{"gitId":"wxwern"},"content":"                    e.getClass().getSimpleName(),","lastModifiedDate":"2023-08-29"},{"lineNumber":248,"author":{"gitId":"wxwern"},"content":"                    e.getLocalizedMessage()","lastModifiedDate":"2023-08-29"},{"lineNumber":249,"author":{"gitId":"wxwern"},"content":"            ));","lastModifiedDate":"2023-09-02"},{"lineNumber":250,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":251,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":252,"author":{"gitId":"wxwern"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":253,"author":{"gitId":"wxwern"},"content":"            this.taskManager.saveToStorage();","lastModifiedDate":"2023-08-29"},{"lineNumber":254,"author":{"gitId":"wxwern"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":255,"author":{"gitId":"wxwern"},"content":"            this.sendMessage(","lastModifiedDate":"2023-08-29"},{"lineNumber":256,"author":{"gitId":"wxwern"},"content":"                    ChatMessage.SenderType.CHATBOT,","lastModifiedDate":"2023-08-29"},{"lineNumber":257,"author":{"gitId":"wxwern"},"content":"                    \"Oops! I\u0027m having problems saving your data to storage. Your data may not be preserved.\"","lastModifiedDate":"2023-09-02"},{"lineNumber":258,"author":{"gitId":"wxwern"},"content":"                            + String.format(","lastModifiedDate":"2023-09-02"},{"lineNumber":259,"author":{"gitId":"wxwern"},"content":"                            \"The error was: [%s] %s\",","lastModifiedDate":"2023-08-29"},{"lineNumber":260,"author":{"gitId":"wxwern"},"content":"                            e.getClass().getSimpleName(),","lastModifiedDate":"2023-08-29"},{"lineNumber":261,"author":{"gitId":"wxwern"},"content":"                            e.getLocalizedMessage()","lastModifiedDate":"2023-08-29"},{"lineNumber":262,"author":{"gitId":"wxwern"},"content":"                    )","lastModifiedDate":"2023-08-29"},{"lineNumber":263,"author":{"gitId":"wxwern"},"content":"            );","lastModifiedDate":"2023-08-29"},{"lineNumber":264,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":265,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":266,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":267,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":268,"author":{"gitId":"wxwern"},"content":"     * Internal method to process commands with numeric data as input.","lastModifiedDate":"2023-08-29"},{"lineNumber":269,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":270,"author":{"gitId":"wxwern"},"content":"     * @param chatCommand The command to process.","lastModifiedDate":"2023-08-29"},{"lineNumber":271,"author":{"gitId":"wxwern"},"content":"     * @throws ChatbotException if the data field does not have numeric data as input or any command-specific error.","lastModifiedDate":"2023-08-29"},{"lineNumber":272,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":273,"author":{"gitId":"wxwern"},"content":"    private void processCommandAssertNumericData(ChatCommand chatCommand) throws ChatbotCommandException {","lastModifiedDate":"2023-09-06"},{"lineNumber":274,"author":{"gitId":"wxwern"},"content":"        switch (chatCommand.getOperation()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":275,"author":{"gitId":"wxwern"},"content":"        case MARK_COMPLETE:","lastModifiedDate":"2023-08-29"},{"lineNumber":276,"author":{"gitId":"wxwern"},"content":"        case UNMARK_COMPLETE:","lastModifiedDate":"2023-08-29"},{"lineNumber":277,"author":{"gitId":"wxwern"},"content":"        case DELETE:","lastModifiedDate":"2023-08-29"},{"lineNumber":278,"author":{"gitId":"wxwern"},"content":"            break;","lastModifiedDate":"2023-08-29"},{"lineNumber":279,"author":{"gitId":"wxwern"},"content":"        default:","lastModifiedDate":"2023-08-29"},{"lineNumber":280,"author":{"gitId":"wxwern"},"content":"            throw new ChatbotIrrelevantOperationException(String.format(","lastModifiedDate":"2023-09-06"},{"lineNumber":281,"author":{"gitId":"wxwern"},"content":"                    \"The command \u0027%s\u0027 should not have numeric data only, \"","lastModifiedDate":"2023-09-13"},{"lineNumber":282,"author":{"gitId":"wxwern"},"content":"                            + \"but the internal code attempted to assert that it does\",","lastModifiedDate":"2023-09-13"},{"lineNumber":283,"author":{"gitId":"wxwern"},"content":"                    chatCommand.getName()","lastModifiedDate":"2023-09-06"},{"lineNumber":284,"author":{"gitId":"wxwern"},"content":"            ));","lastModifiedDate":"2023-09-06"},{"lineNumber":285,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":286,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":287,"author":{"gitId":"wxwern"},"content":"        int index;","lastModifiedDate":"2023-08-23"},{"lineNumber":288,"author":{"gitId":"wxwern"},"content":"        Task task;","lastModifiedDate":"2023-08-29"},{"lineNumber":289,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":290,"author":{"gitId":"wxwern"},"content":"        // Process the input","lastModifiedDate":"2023-08-23"},{"lineNumber":291,"author":{"gitId":"wxwern"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":292,"author":{"gitId":"wxwern"},"content":"            index \u003d Integer.parseInt(chatCommand.getData()) - 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":293,"author":{"gitId":"wxwern"},"content":"        } catch (NumberFormatException | NullPointerException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":294,"author":{"gitId":"wxwern"},"content":"            throw new ChatbotInvalidCommandFormatException((String.format(","lastModifiedDate":"2023-09-06"},{"lineNumber":295,"author":{"gitId":"wxwern"},"content":"                    \"The command \u0027%s\u0027 must be followed by a number representing the task number!\",","lastModifiedDate":"2023-08-23"},{"lineNumber":296,"author":{"gitId":"wxwern"},"content":"                    chatCommand.getName()","lastModifiedDate":"2023-08-29"},{"lineNumber":297,"author":{"gitId":"wxwern"},"content":"            )));","lastModifiedDate":"2023-09-06"},{"lineNumber":298,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":299,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":300,"author":{"gitId":"wxwern"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":301,"author":{"gitId":"wxwern"},"content":"            task \u003d this.taskManager.getTask(index);","lastModifiedDate":"2023-08-23"},{"lineNumber":302,"author":{"gitId":"wxwern"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":303,"author":{"gitId":"wxwern"},"content":"            throw new ChatbotInvalidCommandFormatException(String.format(","lastModifiedDate":"2023-09-06"},{"lineNumber":304,"author":{"gitId":"wxwern"},"content":"                    \"There is no task in the list numbered %d!\",","lastModifiedDate":"2023-09-06"},{"lineNumber":305,"author":{"gitId":"wxwern"},"content":"                    index + 1","lastModifiedDate":"2023-09-06"},{"lineNumber":306,"author":{"gitId":"wxwern"},"content":"            ));","lastModifiedDate":"2023-09-06"},{"lineNumber":307,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":308,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":309,"author":{"gitId":"wxwern"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c this.taskManager.getTaskCount();","lastModifiedDate":"2023-09-12"},{"lineNumber":310,"author":{"gitId":"wxwern"},"content":"        assert task !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":311,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":312,"author":{"gitId":"wxwern"},"content":"        // Let\u0027s see what we should do!","lastModifiedDate":"2023-08-23"},{"lineNumber":313,"author":{"gitId":"wxwern"},"content":"        if (chatCommand.getOperation() \u003d\u003d ChatCommand.Operation.DELETE) {","lastModifiedDate":"2023-08-29"},{"lineNumber":314,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":315,"author":{"gitId":"wxwern"},"content":"            // Delete the task accordingly. We already checked the index so it should be correct.","lastModifiedDate":"2023-08-23"},{"lineNumber":316,"author":{"gitId":"wxwern"},"content":"            this.taskManager.removeTask(index);","lastModifiedDate":"2023-08-23"},{"lineNumber":317,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":318,"author":{"gitId":"wxwern"},"content":"            // Send an appropriate reply.","lastModifiedDate":"2023-08-23"},{"lineNumber":319,"author":{"gitId":"wxwern"},"content":"            this.sendMessage(ChatMessage.SenderType.CHATBOT, String.format(","lastModifiedDate":"2023-09-02"},{"lineNumber":320,"author":{"gitId":"wxwern"},"content":"                    \"Alright, I\u0027ve deleted this task:\\n   %s\\nYou\u0027re left with %d tasks now! :)\",","lastModifiedDate":"2023-08-23"},{"lineNumber":321,"author":{"gitId":"wxwern"},"content":"                    task,","lastModifiedDate":"2023-08-23"},{"lineNumber":322,"author":{"gitId":"wxwern"},"content":"                    this.taskManager.getTaskCount()","lastModifiedDate":"2023-08-23"},{"lineNumber":323,"author":{"gitId":"wxwern"},"content":"            ));","lastModifiedDate":"2023-09-02"},{"lineNumber":324,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":325,"author":{"gitId":"wxwern"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":326,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":327,"author":{"gitId":"wxwern"},"content":"            // Mark the task as done or not accordingly","lastModifiedDate":"2023-08-23"},{"lineNumber":328,"author":{"gitId":"wxwern"},"content":"            boolean completed \u003d chatCommand.getOperation() \u003d\u003d ChatCommand.Operation.MARK_COMPLETE;","lastModifiedDate":"2023-08-29"},{"lineNumber":329,"author":{"gitId":"wxwern"},"content":"            if (task.isCompleted() \u003d\u003d completed) {","lastModifiedDate":"2023-08-23"},{"lineNumber":330,"author":{"gitId":"wxwern"},"content":"                throw new ChatbotCommandException(completed","lastModifiedDate":"2023-09-06"},{"lineNumber":331,"author":{"gitId":"wxwern"},"content":"                        ? \"The task was already done!\"","lastModifiedDate":"2023-09-06"},{"lineNumber":332,"author":{"gitId":"wxwern"},"content":"                        : \"The task was already not done!\");","lastModifiedDate":"2023-09-06"},{"lineNumber":333,"author":{"gitId":"wxwern"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":334,"author":{"gitId":"wxwern"},"content":"            task.setCompleted(completed);","lastModifiedDate":"2023-08-29"},{"lineNumber":335,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":336,"author":{"gitId":"wxwern"},"content":"            // Send an appropriate reply","lastModifiedDate":"2023-08-23"},{"lineNumber":337,"author":{"gitId":"wxwern"},"content":"            if (completed) {","lastModifiedDate":"2023-08-22"},{"lineNumber":338,"author":{"gitId":"wxwern"},"content":"                this.sendMessage(","lastModifiedDate":"2023-08-22"},{"lineNumber":339,"author":{"gitId":"wxwern"},"content":"                        ChatMessage.SenderType.CHATBOT,","lastModifiedDate":"2023-08-23"},{"lineNumber":340,"author":{"gitId":"wxwern"},"content":"                        String.format(\"Nice! I\u0027ve marked this task as done:\\n   %s\", task)","lastModifiedDate":"2023-08-29"},{"lineNumber":341,"author":{"gitId":"wxwern"},"content":"                );","lastModifiedDate":"2023-08-22"},{"lineNumber":342,"author":{"gitId":"wxwern"},"content":"            } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":343,"author":{"gitId":"wxwern"},"content":"                this.sendMessage(","lastModifiedDate":"2023-08-22"},{"lineNumber":344,"author":{"gitId":"wxwern"},"content":"                        ChatMessage.SenderType.CHATBOT,","lastModifiedDate":"2023-08-23"},{"lineNumber":345,"author":{"gitId":"wxwern"},"content":"                        String.format(\"OK, I\u0027ve marked this task as not done yet:\\n   %s\", task)","lastModifiedDate":"2023-08-29"},{"lineNumber":346,"author":{"gitId":"wxwern"},"content":"                );","lastModifiedDate":"2023-08-22"},{"lineNumber":347,"author":{"gitId":"wxwern"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":348,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":349,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":350,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":351,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":352,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":353,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":354,"author":{"gitId":"wxwern"},"content":"     * Internal method to process commands with no data nor parameters as input.","lastModifiedDate":"2023-08-29"},{"lineNumber":355,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":356,"author":{"gitId":"wxwern"},"content":"     * @param chatCommand The command to process.","lastModifiedDate":"2023-08-29"},{"lineNumber":357,"author":{"gitId":"wxwern"},"content":"     * @throws ChatbotException if the data field in fact has data as input or any command-specific error.","lastModifiedDate":"2023-08-29"},{"lineNumber":358,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":359,"author":{"gitId":"wxwern"},"content":"    private void processCommandAssertNoData(ChatCommand chatCommand) throws ChatbotCommandException {","lastModifiedDate":"2023-09-06"},{"lineNumber":360,"author":{"gitId":"wxwern"},"content":"        switch (chatCommand.getOperation()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":361,"author":{"gitId":"wxwern"},"content":"        case LIST:","lastModifiedDate":"2023-08-29"},{"lineNumber":362,"author":{"gitId":"wxwern"},"content":"        case HELP:","lastModifiedDate":"2023-09-13"},{"lineNumber":363,"author":{"gitId":"wxwern"},"content":"        case EXIT:","lastModifiedDate":"2023-08-29"},{"lineNumber":364,"author":{"gitId":"wxwern"},"content":"            break;","lastModifiedDate":"2023-08-29"},{"lineNumber":365,"author":{"gitId":"wxwern"},"content":"        default:","lastModifiedDate":"2023-08-29"},{"lineNumber":366,"author":{"gitId":"wxwern"},"content":"            throw new ChatbotIrrelevantOperationException(String.format(","lastModifiedDate":"2023-09-06"},{"lineNumber":367,"author":{"gitId":"wxwern"},"content":"                    \"The command \u0027%s\u0027 should have included data, \"","lastModifiedDate":"2023-09-06"},{"lineNumber":368,"author":{"gitId":"wxwern"},"content":"                            + \"but the internal code attempted to assert that it does not.\",","lastModifiedDate":"2023-09-13"},{"lineNumber":369,"author":{"gitId":"wxwern"},"content":"                    chatCommand.getName()","lastModifiedDate":"2023-09-06"},{"lineNumber":370,"author":{"gitId":"wxwern"},"content":"            ));","lastModifiedDate":"2023-09-06"},{"lineNumber":371,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":372,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":373,"author":{"gitId":"wxwern"},"content":"        if (!chatCommand.getData().isBlank() || chatCommand.hasParams()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":374,"author":{"gitId":"wxwern"},"content":"            throw new ChatbotInvalidCommandFormatException(String.format(","lastModifiedDate":"2023-09-06"},{"lineNumber":375,"author":{"gitId":"wxwern"},"content":"                    \"Hmm, the command \u0027%s\u0027 should not have anything following it. Is that a typo?\",","lastModifiedDate":"2023-08-29"},{"lineNumber":376,"author":{"gitId":"wxwern"},"content":"                    chatCommand.getName()","lastModifiedDate":"2023-08-29"},{"lineNumber":377,"author":{"gitId":"wxwern"},"content":"            ));","lastModifiedDate":"2023-08-29"},{"lineNumber":378,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":379,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":380,"author":{"gitId":"wxwern"},"content":"        StringBuilder builder;","lastModifiedDate":"2023-09-13"},{"lineNumber":381,"author":{"gitId":"wxwern"},"content":"        switch (chatCommand.getOperation()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":382,"author":{"gitId":"wxwern"},"content":"        case LIST:","lastModifiedDate":"2023-08-29"},{"lineNumber":383,"author":{"gitId":"wxwern"},"content":"            builder \u003d new StringBuilder();","lastModifiedDate":"2023-09-13"},{"lineNumber":384,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":385,"author":{"gitId":"wxwern"},"content":"            if (this.taskManager.getTaskCount() \u003e 0) {","lastModifiedDate":"2023-08-29"},{"lineNumber":386,"author":{"gitId":"wxwern"},"content":"                builder.append(\"Here are your tasks, glhf! :)\");","lastModifiedDate":"2023-08-29"},{"lineNumber":387,"author":{"gitId":"wxwern"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":388,"author":{"gitId":"wxwern"},"content":"                builder.append(\"Oh nice! You have no tasks! :\u003e\");","lastModifiedDate":"2023-08-29"},{"lineNumber":389,"author":{"gitId":"wxwern"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":390,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":391,"author":{"gitId":"wxwern"},"content":"            this.taskManager.getTaskIndexedStream()","lastModifiedDate":"2023-09-13"},{"lineNumber":392,"author":{"gitId":"wxwern"},"content":"                    .forEach(integerTaskPair -\u003e {","lastModifiedDate":"2023-09-13"},{"lineNumber":393,"author":{"gitId":"wxwern"},"content":"                        builder.append(\"\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":394,"author":{"gitId":"wxwern"},"content":"                        builder.append(integerTaskPair.getKey() + 1);","lastModifiedDate":"2023-09-13"},{"lineNumber":395,"author":{"gitId":"wxwern"},"content":"                        builder.append(\". \");","lastModifiedDate":"2023-08-29"},{"lineNumber":396,"author":{"gitId":"wxwern"},"content":"                        builder.append(integerTaskPair.getValue().toString());","lastModifiedDate":"2023-09-13"},{"lineNumber":397,"author":{"gitId":"wxwern"},"content":"                    });","lastModifiedDate":"2023-09-13"},{"lineNumber":398,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":399,"author":{"gitId":"wxwern"},"content":"            this.sendMessage(ChatMessage.SenderType.CHATBOT, builder.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":400,"author":{"gitId":"wxwern"},"content":"            break;","lastModifiedDate":"2023-08-29"},{"lineNumber":401,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":402,"author":{"gitId":"wxwern"},"content":"        case HELP:","lastModifiedDate":"2023-09-13"},{"lineNumber":403,"author":{"gitId":"wxwern"},"content":"            builder \u003d new StringBuilder();","lastModifiedDate":"2023-09-13"},{"lineNumber":404,"author":{"gitId":"wxwern"},"content":"            builder.append(\"No problem. Here\u0027s a summary of all possible command names and their functions!\\n\\n\");","lastModifiedDate":"2023-09-13"},{"lineNumber":405,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":406,"author":{"gitId":"wxwern"},"content":"            for (ChatCommand.Operation op : ChatCommand.Operation.values()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":407,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":408,"author":{"gitId":"wxwern"},"content":"                var aliases \u003d op.getSupportedNameAliases();","lastModifiedDate":"2023-09-13"},{"lineNumber":409,"author":{"gitId":"wxwern"},"content":"                var quotedAliases \u003d Arrays.stream(aliases)","lastModifiedDate":"2023-09-13"},{"lineNumber":410,"author":{"gitId":"wxwern"},"content":"                        .map(s -\u003e \u0027\"\u0027 + s + \u0027\"\u0027)","lastModifiedDate":"2023-09-13"},{"lineNumber":411,"author":{"gitId":"wxwern"},"content":"                        .collect(Collectors.toList());","lastModifiedDate":"2023-09-13"},{"lineNumber":412,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":413,"author":{"gitId":"wxwern"},"content":"                if (quotedAliases.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-13"},{"lineNumber":414,"author":{"gitId":"wxwern"},"content":"                    continue;","lastModifiedDate":"2023-09-13"},{"lineNumber":415,"author":{"gitId":"wxwern"},"content":"                }","lastModifiedDate":"2023-09-13"},{"lineNumber":416,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":417,"author":{"gitId":"wxwern"},"content":"                String commandTitle \u003d String.join(\", \", quotedAliases);","lastModifiedDate":"2023-09-13"},{"lineNumber":418,"author":{"gitId":"wxwern"},"content":"                String commandDescription \u003d op.getDescription();","lastModifiedDate":"2023-09-13"},{"lineNumber":419,"author":{"gitId":"wxwern"},"content":"                String commandSyntax \u003d String.format(op.getSyntaxDescriptionAsFormatString(), aliases[0]);","lastModifiedDate":"2023-09-13"},{"lineNumber":420,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":421,"author":{"gitId":"wxwern"},"content":"                builder.append(String.format(\"    %s\\n\", commandTitle));","lastModifiedDate":"2023-09-13"},{"lineNumber":422,"author":{"gitId":"wxwern"},"content":"                builder.append(String.format(\"        %s\\n\", commandDescription));","lastModifiedDate":"2023-09-13"},{"lineNumber":423,"author":{"gitId":"wxwern"},"content":"                builder.append(String.format(\"        Format: \\\"%s\\\"\\n\", commandSyntax));","lastModifiedDate":"2023-09-13"},{"lineNumber":424,"author":{"gitId":"wxwern"},"content":"                builder.append(\u0027\\n\u0027);","lastModifiedDate":"2023-09-13"},{"lineNumber":425,"author":{"gitId":"wxwern"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":426,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":427,"author":{"gitId":"wxwern"},"content":"            builder.append(\"Commands listed with multiple names above are synonyms and can be used interchangeably.\\n\");","lastModifiedDate":"2023-09-13"},{"lineNumber":428,"author":{"gitId":"wxwern"},"content":"            builder.append(\"Hope this helps! :)\");","lastModifiedDate":"2023-09-13"},{"lineNumber":429,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":430,"author":{"gitId":"wxwern"},"content":"            this.sendMessage(ChatMessage.SenderType.CHATBOT, builder.toString());","lastModifiedDate":"2023-09-13"},{"lineNumber":431,"author":{"gitId":"wxwern"},"content":"            break;","lastModifiedDate":"2023-09-13"},{"lineNumber":432,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":433,"author":{"gitId":"wxwern"},"content":"        case EXIT:","lastModifiedDate":"2023-08-29"},{"lineNumber":434,"author":{"gitId":"wxwern"},"content":"            this.closeConversation();","lastModifiedDate":"2023-08-29"},{"lineNumber":435,"author":{"gitId":"wxwern"},"content":"            break;","lastModifiedDate":"2023-08-22"},{"lineNumber":436,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":437,"author":{"gitId":"wxwern"},"content":"        default:","lastModifiedDate":"2023-09-02"},{"lineNumber":438,"author":{"gitId":"wxwern"},"content":"            break;","lastModifiedDate":"2023-09-02"},{"lineNumber":439,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":440,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":441,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":442,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":443,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":444,"author":{"gitId":"wxwern"},"content":"     * Internal method to process commands that contain some data as input.","lastModifiedDate":"2023-08-29"},{"lineNumber":445,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":446,"author":{"gitId":"wxwern"},"content":"     * @param chatCommand The command to process.","lastModifiedDate":"2023-08-29"},{"lineNumber":447,"author":{"gitId":"wxwern"},"content":"     * @throws ChatbotException if the data field does not have data as input or any command-specific error.","lastModifiedDate":"2023-08-29"},{"lineNumber":448,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":449,"author":{"gitId":"wxwern"},"content":"    private void processCommandAssertHasData(ChatCommand chatCommand) throws ChatbotCommandException {","lastModifiedDate":"2023-09-06"},{"lineNumber":450,"author":{"gitId":"wxwern"},"content":"        switch (chatCommand.getOperation()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":451,"author":{"gitId":"wxwern"},"content":"        case ADD_TODO:","lastModifiedDate":"2023-08-29"},{"lineNumber":452,"author":{"gitId":"wxwern"},"content":"        case ADD_DEADLINE:","lastModifiedDate":"2023-08-29"},{"lineNumber":453,"author":{"gitId":"wxwern"},"content":"        case ADD_EVENT:","lastModifiedDate":"2023-08-29"},{"lineNumber":454,"author":{"gitId":"wxwern"},"content":"        case SEARCH:","lastModifiedDate":"2023-08-29"},{"lineNumber":455,"author":{"gitId":"wxwern"},"content":"            break;","lastModifiedDate":"2023-08-29"},{"lineNumber":456,"author":{"gitId":"wxwern"},"content":"        default:","lastModifiedDate":"2023-08-29"},{"lineNumber":457,"author":{"gitId":"wxwern"},"content":"            throw new ChatbotIrrelevantOperationException(String.format(","lastModifiedDate":"2023-09-06"},{"lineNumber":458,"author":{"gitId":"wxwern"},"content":"                    \"The command \u0027%s\u0027 should not have included data, \"","lastModifiedDate":"2023-09-13"},{"lineNumber":459,"author":{"gitId":"wxwern"},"content":"                            + \"but the internal code attempted to assert that it does.\",","lastModifiedDate":"2023-09-13"},{"lineNumber":460,"author":{"gitId":"wxwern"},"content":"                    chatCommand.getName()","lastModifiedDate":"2023-09-06"},{"lineNumber":461,"author":{"gitId":"wxwern"},"content":"            ));","lastModifiedDate":"2023-09-06"},{"lineNumber":462,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":463,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":464,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":465,"author":{"gitId":"wxwern"},"content":"        if (chatCommand.getData().isBlank()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":466,"author":{"gitId":"wxwern"},"content":"            throw new ChatbotInvalidCommandFormatException(String.format(","lastModifiedDate":"2023-09-06"},{"lineNumber":467,"author":{"gitId":"wxwern"},"content":"                    \"The command \u0027%s\u0027 requires some title content after the command name, but none was found!\",","lastModifiedDate":"2023-08-29"},{"lineNumber":468,"author":{"gitId":"wxwern"},"content":"                    chatCommand.getName()","lastModifiedDate":"2023-08-29"},{"lineNumber":469,"author":{"gitId":"wxwern"},"content":"            ));","lastModifiedDate":"2023-08-29"},{"lineNumber":470,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":471,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":472,"author":{"gitId":"wxwern"},"content":"        // Create the appropriate task","lastModifiedDate":"2023-08-23"},{"lineNumber":473,"author":{"gitId":"wxwern"},"content":"        Task newTask \u003d null;","lastModifiedDate":"2023-08-29"},{"lineNumber":474,"author":{"gitId":"wxwern"},"content":"        switch (chatCommand.getOperation()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":475,"author":{"gitId":"wxwern"},"content":"        case ADD_TODO:","lastModifiedDate":"2023-08-29"},{"lineNumber":476,"author":{"gitId":"wxwern"},"content":"            newTask \u003d new Todo(chatCommand.getData());","lastModifiedDate":"2023-08-29"},{"lineNumber":477,"author":{"gitId":"wxwern"},"content":"            break;","lastModifiedDate":"2023-08-22"},{"lineNumber":478,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":479,"author":{"gitId":"wxwern"},"content":"        case ADD_DEADLINE:","lastModifiedDate":"2023-08-29"},{"lineNumber":480,"author":{"gitId":"wxwern"},"content":"            if (!chatCommand.hasParamWithUsefulValue(\"by\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":481,"author":{"gitId":"wxwern"},"content":"                throw new ChatbotInvalidCommandFormatException(String.format(","lastModifiedDate":"2023-09-06"},{"lineNumber":482,"author":{"gitId":"wxwern"},"content":"                        \"The \u0027deadline\u0027 command requires supplying \u0027%sby \u003cdeadline\u003e\u0027!\",","lastModifiedDate":"2023-09-13"},{"lineNumber":483,"author":{"gitId":"wxwern"},"content":"                        ChatCommand.PARAMETER_PREFIX","lastModifiedDate":"2023-08-29"},{"lineNumber":484,"author":{"gitId":"wxwern"},"content":"                ));","lastModifiedDate":"2023-08-29"},{"lineNumber":485,"author":{"gitId":"wxwern"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":486,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":487,"author":{"gitId":"wxwern"},"content":"            long byTimestamp;","lastModifiedDate":"2023-08-27"},{"lineNumber":488,"author":{"gitId":"wxwern"},"content":"            try {","lastModifiedDate":"2023-08-27"},{"lineNumber":489,"author":{"gitId":"wxwern"},"content":"                byTimestamp \u003d EpochConverter.getEpochFromIsoDateString(chatCommand.getParam(\"by\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":490,"author":{"gitId":"wxwern"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":491,"author":{"gitId":"wxwern"},"content":"                throw new ChatbotInvalidCommandFormatException(","lastModifiedDate":"2023-09-06"},{"lineNumber":492,"author":{"gitId":"wxwern"},"content":"                        \"The deadline supplied is invalid! It must be a correct date and follow the \"","lastModifiedDate":"2023-09-06"},{"lineNumber":493,"author":{"gitId":"wxwern"},"content":"                                + \"ISO8601 date format (yyyy-MM-dd or yyyy-MM-ddThh:mm).\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":494,"author":{"gitId":"wxwern"},"content":"                                + \"For example, 2023-01-31T12:34 is one such valid date.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":495,"author":{"gitId":"wxwern"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":496,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":497,"author":{"gitId":"wxwern"},"content":"            newTask \u003d new Deadline(chatCommand.getData(), byTimestamp);","lastModifiedDate":"2023-09-02"},{"lineNumber":498,"author":{"gitId":"wxwern"},"content":"            break;","lastModifiedDate":"2023-08-22"},{"lineNumber":499,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":500,"author":{"gitId":"wxwern"},"content":"        case ADD_EVENT:","lastModifiedDate":"2023-08-29"},{"lineNumber":501,"author":{"gitId":"wxwern"},"content":"            if (!chatCommand.hasParamWithUsefulValue(\"from\") || !chatCommand.hasParamWithUsefulValue(\"to\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":502,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":503,"author":{"gitId":"wxwern"},"content":"                throw new ChatbotInvalidCommandFormatException(String.format(","lastModifiedDate":"2023-09-06"},{"lineNumber":504,"author":{"gitId":"wxwern"},"content":"                        \"The \u0027event\u0027 command requires supplying both \u0027%sfrom \u003cdate\u003e\u0027 and \u0027%sto \u003cdate\u003e\u0027!\",","lastModifiedDate":"2023-08-29"},{"lineNumber":505,"author":{"gitId":"wxwern"},"content":"                        ChatCommand.PARAMETER_PREFIX,","lastModifiedDate":"2023-08-29"},{"lineNumber":506,"author":{"gitId":"wxwern"},"content":"                        ChatCommand.PARAMETER_PREFIX","lastModifiedDate":"2023-08-29"},{"lineNumber":507,"author":{"gitId":"wxwern"},"content":"                ));","lastModifiedDate":"2023-08-29"},{"lineNumber":508,"author":{"gitId":"wxwern"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":509,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":510,"author":{"gitId":"wxwern"},"content":"            long startTimestamp;","lastModifiedDate":"2023-08-27"},{"lineNumber":511,"author":{"gitId":"wxwern"},"content":"            long endTimestamp;","lastModifiedDate":"2023-08-27"},{"lineNumber":512,"author":{"gitId":"wxwern"},"content":"            try {","lastModifiedDate":"2023-08-27"},{"lineNumber":513,"author":{"gitId":"wxwern"},"content":"                startTimestamp \u003d EpochConverter.getEpochFromIsoDateString(chatCommand.getParam(\"from\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":514,"author":{"gitId":"wxwern"},"content":"                endTimestamp \u003d EpochConverter.getEpochFromIsoDateString(chatCommand.getParam(\"to\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":515,"author":{"gitId":"wxwern"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":516,"author":{"gitId":"wxwern"},"content":"                throw new ChatbotInvalidCommandFormatException(","lastModifiedDate":"2023-09-06"},{"lineNumber":517,"author":{"gitId":"wxwern"},"content":"                        \"The date range supplied is invalid! They must be correct dates and follow the \"","lastModifiedDate":"2023-09-02"},{"lineNumber":518,"author":{"gitId":"wxwern"},"content":"                                + \"ISO8601 date format (yyyy-MM-dd or yyyy-MM-ddThh:mm:ss).\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":519,"author":{"gitId":"wxwern"},"content":"                                + \"For example, 2023-01-31T12:34 is one such valid date.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":520,"author":{"gitId":"wxwern"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":521,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":522,"author":{"gitId":"wxwern"},"content":"            newTask \u003d new Event(chatCommand.getData(), startTimestamp, endTimestamp);","lastModifiedDate":"2023-09-02"},{"lineNumber":523,"author":{"gitId":"wxwern"},"content":"            break;","lastModifiedDate":"2023-08-22"},{"lineNumber":524,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":525,"author":{"gitId":"wxwern"},"content":"        case SEARCH:","lastModifiedDate":"2023-08-29"},{"lineNumber":526,"author":{"gitId":"wxwern"},"content":"            StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-08-29"},{"lineNumber":527,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":528,"author":{"gitId":"wxwern"},"content":"            builder.append(\"Alright, here\u0027s the matching tasks I found:\");","lastModifiedDate":"2023-08-29"},{"lineNumber":529,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":530,"author":{"gitId":"wxwern"},"content":"            this.taskManager.getTaskIndexedStream()","lastModifiedDate":"2023-09-13"},{"lineNumber":531,"author":{"gitId":"wxwern"},"content":"                    .filter(integerTaskPair -\u003e integerTaskPair.getValue()","lastModifiedDate":"2023-09-13"},{"lineNumber":532,"author":{"gitId":"wxwern"},"content":"                            .getTitle()","lastModifiedDate":"2023-09-13"},{"lineNumber":533,"author":{"gitId":"wxwern"},"content":"                            .toLowerCase()","lastModifiedDate":"2023-09-13"},{"lineNumber":534,"author":{"gitId":"wxwern"},"content":"                            .contains(","lastModifiedDate":"2023-09-13"},{"lineNumber":535,"author":{"gitId":"wxwern"},"content":"                                    chatCommand.getData().toLowerCase()","lastModifiedDate":"2023-09-13"},{"lineNumber":536,"author":{"gitId":"wxwern"},"content":"                            )","lastModifiedDate":"2023-09-13"},{"lineNumber":537,"author":{"gitId":"wxwern"},"content":"                    )","lastModifiedDate":"2023-09-13"},{"lineNumber":538,"author":{"gitId":"wxwern"},"content":"                    .forEach(integerTaskPair -\u003e {","lastModifiedDate":"2023-09-13"},{"lineNumber":539,"author":{"gitId":"wxwern"},"content":"                        builder.append(\"\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":540,"author":{"gitId":"wxwern"},"content":"                        builder.append(integerTaskPair.getKey() + 1);","lastModifiedDate":"2023-09-13"},{"lineNumber":541,"author":{"gitId":"wxwern"},"content":"                        builder.append(\". \");","lastModifiedDate":"2023-08-29"},{"lineNumber":542,"author":{"gitId":"wxwern"},"content":"                        builder.append(integerTaskPair.getValue().toString());","lastModifiedDate":"2023-09-13"},{"lineNumber":543,"author":{"gitId":"wxwern"},"content":"                    });","lastModifiedDate":"2023-09-13"},{"lineNumber":544,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":545,"author":{"gitId":"wxwern"},"content":"            builder.append(\"\\nThat\u0027s it!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":546,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":547,"author":{"gitId":"wxwern"},"content":"            this.sendMessage(ChatMessage.SenderType.CHATBOT, builder.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":548,"author":{"gitId":"wxwern"},"content":"            break;","lastModifiedDate":"2023-08-29"},{"lineNumber":549,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":550,"author":{"gitId":"wxwern"},"content":"        default:","lastModifiedDate":"2023-08-23"},{"lineNumber":551,"author":{"gitId":"wxwern"},"content":"            // This block should never execute. If it does, it is likely a programmer error.","lastModifiedDate":"2023-09-12"},{"lineNumber":552,"author":{"gitId":"wxwern"},"content":"            assert false;","lastModifiedDate":"2023-09-12"},{"lineNumber":553,"author":{"gitId":"wxwern"},"content":"            throw new ChatbotCommandException(\"Unexpected internal error: task type was not implemented.\");","lastModifiedDate":"2023-09-06"},{"lineNumber":554,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":555,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":556,"author":{"gitId":"wxwern"},"content":"        // Add the task created","lastModifiedDate":"2023-08-23"},{"lineNumber":557,"author":{"gitId":"wxwern"},"content":"        if (newTask !\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":558,"author":{"gitId":"wxwern"},"content":"            this.taskManager.addTask(newTask);","lastModifiedDate":"2023-08-29"},{"lineNumber":559,"author":{"gitId":"wxwern"},"content":"            this.sendMessage(ChatMessage.SenderType.CHATBOT, String.format(","lastModifiedDate":"2023-09-02"},{"lineNumber":560,"author":{"gitId":"wxwern"},"content":"                    \"Got it. I\u0027ve added this task:\\n  %s\\nYou have %d tasks in your list now! :)\",","lastModifiedDate":"2023-08-22"},{"lineNumber":561,"author":{"gitId":"wxwern"},"content":"                    newTask,","lastModifiedDate":"2023-08-29"},{"lineNumber":562,"author":{"gitId":"wxwern"},"content":"                    this.taskManager.getTaskCount()","lastModifiedDate":"2023-08-22"},{"lineNumber":563,"author":{"gitId":"wxwern"},"content":"            ));","lastModifiedDate":"2023-09-02"},{"lineNumber":564,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":565,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":566,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":567,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":568,"author":{"gitId":"wxwern"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"wxwern":568}},{"path":"src/main/java/todoify/chatbot/exception/ChatbotException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxwern"},"content":"package todoify.chatbot.exception;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"wxwern"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"wxwern"},"content":" * A checked exception caused by chatbot activities.","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"wxwern"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"wxwern"},"content":"public class ChatbotException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"wxwern"},"content":"     * Constructs a new checked exception caused by chatbot activities.","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"wxwern"},"content":"     * @param message The associated message.","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"wxwern"},"content":"    public ChatbotException(String message) {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"wxwern"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"wxwern"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"wxwern":17}},{"path":"src/main/java/todoify/chatbot/exception/ChatbotRuntimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxwern"},"content":"package todoify.chatbot.exception;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"wxwern"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"wxwern"},"content":" * A runtime exception caused by chatbot activities.","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"wxwern"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"wxwern"},"content":"public class ChatbotRuntimeException extends RuntimeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"wxwern"},"content":"     * Constructs a new runtime exception caused by chatbot activities.","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"wxwern"},"content":"     * @param message The associated message.","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"wxwern"},"content":"    public ChatbotRuntimeException(String message) {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"wxwern"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"wxwern"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"wxwern":17}},{"path":"src/main/java/todoify/chatbot/exception/command/ChatbotCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxwern"},"content":"package todoify.chatbot.exception.command;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"wxwern"},"content":"import todoify.chatbot.exception.ChatbotException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"wxwern"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"wxwern"},"content":" * A checked exception caused by chatbot internal command processing.","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"wxwern"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"wxwern"},"content":"public class ChatbotCommandException extends ChatbotException {","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"wxwern"},"content":"     * Constructs a new checked exception caused by chatbot internal command processing.","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"wxwern"},"content":"     * @param message The associated message.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"wxwern"},"content":"    public ChatbotCommandException(String message) {","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"wxwern"},"content":"        super(message);","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"wxwern"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"wxwern":18}},{"path":"src/main/java/todoify/chatbot/exception/command/ChatbotInvalidCommandFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxwern"},"content":"package todoify.chatbot.exception.command;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"wxwern"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"wxwern"},"content":" * A checked exception caused by chatbot internal command processing, specifically when a command processed is","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"wxwern"},"content":" * in a format that is not expected by the operation.","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"wxwern"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"wxwern"},"content":"public class ChatbotInvalidCommandFormatException extends ChatbotCommandException {","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"wxwern"},"content":"     * Constructs a new checked exception signifying the processed command is invalid, such as a format error.","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"wxwern"},"content":"     * @param message The associated message.","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"wxwern"},"content":"    public ChatbotInvalidCommandFormatException(String message) {","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"wxwern"},"content":"        super(message);","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"wxwern"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"wxwern":16}},{"path":"src/main/java/todoify/chatbot/exception/command/ChatbotIrrelevantOperationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxwern"},"content":"package todoify.chatbot.exception.command;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"wxwern"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"wxwern"},"content":" * A checked exception caused by chatbot internal command processing, specifically when a command processed is","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"wxwern"},"content":" * irrelevant to the type of processing performed.","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"wxwern"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"wxwern"},"content":"public class ChatbotIrrelevantOperationException extends ChatbotCommandException {","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"wxwern"},"content":"     * Constructs a new checked exception due to a command being irrelevant to the parsed category, such as trying to","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"wxwern"},"content":"     * parse a number in a command operation type that does not expect numbers.","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"wxwern"},"content":"     * @param message The associated message.","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"wxwern"},"content":"    public ChatbotIrrelevantOperationException(String message) {","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"wxwern"},"content":"        super(message);","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"wxwern"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"wxwern":17}},{"path":"src/main/java/todoify/gui/ChatBubble.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxwern"},"content":"package todoify.gui;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"wxwern"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"wxwern"},"content":"import java.util.Objects;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"wxwern"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"wxwern"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"wxwern"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"wxwern"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"wxwern"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"wxwern"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"wxwern"},"content":"import todoify.chatbot.ChatMessage;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"wxwern"},"content":"import todoify.chatbot.Chatbot;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"wxwern"},"content":"import todoify.util.EpochConverter;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"wxwern"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"wxwern"},"content":" * The chat bubble\u0027s UI controller.","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"wxwern"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"wxwern"},"content":"public class ChatBubble extends HBox {","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"wxwern"},"content":"    private final Chatbot chatbot;","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"wxwern"},"content":"    private final ChatMessage message;","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"wxwern"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"wxwern"},"content":"    private ImageView senderImageView;","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"wxwern"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"wxwern"},"content":"    private Label messageLabel;","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"wxwern"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"wxwern"},"content":"    private Label timestampLabel;","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"wxwern"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"wxwern"},"content":"    private Label titleLabel;","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"wxwern"},"content":"     * Constructs a chat bubble UI element using the given chat message.","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"wxwern"},"content":"     * @param message The message to construct from.","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"wxwern"},"content":"    public ChatBubble(Chatbot chatbot, ChatMessage message) {","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"wxwern"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"wxwern"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindowController.class.getResource(\"/view/ChatBubble.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"wxwern"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"wxwern"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"wxwern"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"wxwern"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"wxwern"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"wxwern"},"content":"        this.chatbot \u003d chatbot;","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"wxwern"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"wxwern"},"content":"        this.refreshUI();","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"wxwern"},"content":"     * Reloads the UI according to the cached message instance.","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"wxwern"},"content":"    public void refreshUI() {","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"wxwern"},"content":"        assert this.chatbot !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"wxwern"},"content":"        assert this.message !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"wxwern"},"content":"        assert this.messageLabel !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"wxwern"},"content":"        assert this.timestampLabel !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"wxwern"},"content":"        assert this.senderImageView !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"wxwern"},"content":"        assert this.titleLabel !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"wxwern"},"content":"        Image image \u003d null;","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"wxwern"},"content":"        String title \u003d \"?\";","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"wxwern"},"content":"        switch (this.message.getSenderType()) {","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"wxwern"},"content":"        case USER:","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"wxwern"},"content":"            image \u003d new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/user.jpg\")));","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"wxwern"},"content":"            title \u003d \"You\";","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"wxwern"},"content":"            break;","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"wxwern"},"content":"        case CHATBOT:","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"wxwern"},"content":"            image \u003d new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/chatbot.jpg\")));","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"wxwern"},"content":"            title \u003d this.chatbot.getName();","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"wxwern"},"content":"            break;","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"wxwern"},"content":"        default:","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"wxwern"},"content":"            break;","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"wxwern"},"content":"        this.messageLabel.setText(this.message.getMessage());","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"wxwern"},"content":"        this.timestampLabel.setText(EpochConverter.getUserReadableTimeStringFromEpoch(this.message.getTimestamp()));","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"wxwern"},"content":"        this.senderImageView.setImage(image);","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"wxwern"},"content":"        this.titleLabel.setText(title);","lastModifiedDate":"2023-09-06"},{"lineNumber":87,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":88,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":89,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":90,"author":{"gitId":"wxwern"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"wxwern":90}},{"path":"src/main/java/todoify/gui/MainWindowController.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxwern"},"content":"package todoify.gui;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"wxwern"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"wxwern"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"wxwern"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"wxwern"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"wxwern"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"wxwern"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"wxwern"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"wxwern"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"wxwern"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"wxwern"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"wxwern"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"wxwern"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"wxwern"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"wxwern"},"content":"import todoify.Main;","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"wxwern"},"content":"import todoify.chatbot.ChatMessage;","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"wxwern"},"content":"import todoify.chatbot.Chatbot;","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"wxwern"},"content":"import todoify.util.events.EventListener;","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"wxwern"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"wxwern"},"content":" * The main window\u0027s UI controller.","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"wxwern"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"wxwern"},"content":"public class MainWindowController extends Application {","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"wxwern"},"content":"    private Chatbot chatbot \u003d null;","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"wxwern"},"content":"    private final EventListener\u003cChatMessage\u003e chatMessageEventListener \u003d this::appendMessage;","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"wxwern"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"wxwern"},"content":"    private Button sendMessageButton;","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"wxwern"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"wxwern"},"content":"    private TextField userMessageTextField;","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"wxwern"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"wxwern"},"content":"    private ScrollPane messageHistoryScrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"wxwern"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"wxwern"},"content":"    private VBox messageHistoryVerticalBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"wxwern"},"content":"     * Initializes elements after FXML elements are loaded.","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"wxwern"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"wxwern"},"content":"    private void initialize() {","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"wxwern"},"content":"        assert this.messageHistoryVerticalBox !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"wxwern"},"content":"        assert this.messageHistoryScrollPane !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"wxwern"},"content":"        this.messageHistoryVerticalBox.heightProperty()","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"wxwern"},"content":"                .addListener(observable -\u003e this.messageHistoryScrollPane.setVvalue(1D));","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"wxwern"},"content":"     * Sets the chatbot used in the GUI to the given instance.","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"wxwern"},"content":"     * @param chatbot The chatbot to use.","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"wxwern"},"content":"    public void setChatbot(Chatbot chatbot) {","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"wxwern"},"content":"        if (this.chatbot !\u003d null) {","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"wxwern"},"content":"            this.chatbot.removeEventListener(this.chatMessageEventListener);","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"wxwern"},"content":"        this.chatbot \u003d chatbot;","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"wxwern"},"content":"        chatbot.openConversation();","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"wxwern"},"content":"        chatbot.addEventListener(this.chatMessageEventListener);","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"wxwern"},"content":"        this.reloadMessageHistory();","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"wxwern"},"content":"     * Consumes the user input from the text field and clears it from the GUI.","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"wxwern"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"wxwern"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"wxwern"},"content":"        assert this.chatbot !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":76,"author":{"gitId":"wxwern"},"content":"        assert this.userMessageTextField !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":77,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":78,"author":{"gitId":"wxwern"},"content":"        String input \u003d this.userMessageTextField.getText().trim();","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"wxwern"},"content":"        if (!input.isBlank()) {","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"wxwern"},"content":"            this.chatbot.sendMessageFromUser(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"wxwern"},"content":"        this.userMessageTextField.clear();","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":87,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":88,"author":{"gitId":"wxwern"},"content":"     * Handles the key event in a textbox.","lastModifiedDate":"2023-09-06"},{"lineNumber":89,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":90,"author":{"gitId":"wxwern"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":91,"author":{"gitId":"wxwern"},"content":"    private void handleKeyEvent(KeyEvent keyEvent) {","lastModifiedDate":"2023-09-06"},{"lineNumber":92,"author":{"gitId":"wxwern"},"content":"        if (keyEvent.getCode() \u003d\u003d KeyCode.ENTER) {","lastModifiedDate":"2023-09-06"},{"lineNumber":93,"author":{"gitId":"wxwern"},"content":"            this.handleUserInput();","lastModifiedDate":"2023-09-06"},{"lineNumber":94,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":95,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":96,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":97,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":98,"author":{"gitId":"wxwern"},"content":"     * Appends the given message onto the end of the message history on the GUI.","lastModifiedDate":"2023-09-06"},{"lineNumber":99,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":100,"author":{"gitId":"wxwern"},"content":"     * @param message The message to draw.","lastModifiedDate":"2023-09-06"},{"lineNumber":101,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":102,"author":{"gitId":"wxwern"},"content":"    private void appendMessage(ChatMessage message) {","lastModifiedDate":"2023-09-06"},{"lineNumber":103,"author":{"gitId":"wxwern"},"content":"        assert this.messageHistoryVerticalBox !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":104,"author":{"gitId":"wxwern"},"content":"        assert this.messageHistoryScrollPane !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":105,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":106,"author":{"gitId":"wxwern"},"content":"        this.messageHistoryVerticalBox.getChildren().add(new ChatBubble(this.chatbot, message));","lastModifiedDate":"2023-09-06"},{"lineNumber":107,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":108,"author":{"gitId":"wxwern"},"content":"        this.messageHistoryScrollPane.layout();","lastModifiedDate":"2023-09-06"},{"lineNumber":109,"author":{"gitId":"wxwern"},"content":"        this.messageHistoryVerticalBox.layout();","lastModifiedDate":"2023-09-06"},{"lineNumber":110,"author":{"gitId":"wxwern"},"content":"        this.messageHistoryScrollPane.setVvalue(1.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":111,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":112,"author":{"gitId":"wxwern"},"content":"        this.refreshUiState();","lastModifiedDate":"2023-09-06"},{"lineNumber":113,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":114,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":115,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":116,"author":{"gitId":"wxwern"},"content":"     * Re-renders the message history on the GUI, by clearing all elements and adding whatever that\u0027s present in the","lastModifiedDate":"2023-09-06"},{"lineNumber":117,"author":{"gitId":"wxwern"},"content":"     * chatbot into the GUI.","lastModifiedDate":"2023-09-06"},{"lineNumber":118,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":119,"author":{"gitId":"wxwern"},"content":"    private void reloadMessageHistory() {","lastModifiedDate":"2023-09-06"},{"lineNumber":120,"author":{"gitId":"wxwern"},"content":"        assert this.messageHistoryVerticalBox !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":121,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":122,"author":{"gitId":"wxwern"},"content":"        this.messageHistoryVerticalBox.getChildren().clear();","lastModifiedDate":"2023-09-06"},{"lineNumber":123,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":124,"author":{"gitId":"wxwern"},"content":"        if (this.chatbot \u003d\u003d null) {","lastModifiedDate":"2023-09-06"},{"lineNumber":125,"author":{"gitId":"wxwern"},"content":"            return;","lastModifiedDate":"2023-09-06"},{"lineNumber":126,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":127,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":128,"author":{"gitId":"wxwern"},"content":"        for (ChatMessage message : this.chatbot.getConversation()) {","lastModifiedDate":"2023-09-06"},{"lineNumber":129,"author":{"gitId":"wxwern"},"content":"            this.appendMessage(message);","lastModifiedDate":"2023-09-06"},{"lineNumber":130,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":131,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":132,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":133,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":134,"author":{"gitId":"wxwern"},"content":"     * Updates the GUI state to match that of the chatbot. For instance, disable the buttons if the chatbot conversation","lastModifiedDate":"2023-09-06"},{"lineNumber":135,"author":{"gitId":"wxwern"},"content":"     * is closed.","lastModifiedDate":"2023-09-06"},{"lineNumber":136,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":137,"author":{"gitId":"wxwern"},"content":"    private void refreshUiState() {","lastModifiedDate":"2023-09-06"},{"lineNumber":138,"author":{"gitId":"wxwern"},"content":"        assert this.userMessageTextField !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":139,"author":{"gitId":"wxwern"},"content":"        assert this.sendMessageButton !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":140,"author":{"gitId":"wxwern"},"content":"        assert this.chatbot !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":141,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":142,"author":{"gitId":"wxwern"},"content":"        this.userMessageTextField.setDisable(this.chatbot.isConversationClosed());","lastModifiedDate":"2023-09-06"},{"lineNumber":143,"author":{"gitId":"wxwern"},"content":"        this.sendMessageButton.setDisable(this.chatbot.isConversationClosed());","lastModifiedDate":"2023-09-06"},{"lineNumber":144,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":145,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":146,"author":{"gitId":"wxwern"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":147,"author":{"gitId":"wxwern"},"content":"    public void start(Stage stage) throws Exception {","lastModifiedDate":"2023-09-06"},{"lineNumber":148,"author":{"gitId":"wxwern"},"content":"        Chatbot bot \u003d new Chatbot(null, null);","lastModifiedDate":"2023-09-08"},{"lineNumber":149,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":150,"author":{"gitId":"wxwern"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":151,"author":{"gitId":"wxwern"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":152,"author":{"gitId":"wxwern"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":153,"author":{"gitId":"wxwern"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-06"},{"lineNumber":154,"author":{"gitId":"wxwern"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-06"},{"lineNumber":155,"author":{"gitId":"wxwern"},"content":"            stage.setTitle(bot.getName());","lastModifiedDate":"2023-09-08"},{"lineNumber":156,"author":{"gitId":"wxwern"},"content":"            stage.setMinWidth(320);","lastModifiedDate":"2023-09-08"},{"lineNumber":157,"author":{"gitId":"wxwern"},"content":"            stage.setMinHeight(320);","lastModifiedDate":"2023-09-08"},{"lineNumber":158,"author":{"gitId":"wxwern"},"content":"            fxmlLoader.\u003cMainWindowController\u003egetController().setChatbot(bot);","lastModifiedDate":"2023-09-08"},{"lineNumber":159,"author":{"gitId":"wxwern"},"content":"            stage.show();","lastModifiedDate":"2023-09-06"},{"lineNumber":160,"author":{"gitId":"wxwern"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":161,"author":{"gitId":"wxwern"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":162,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":163,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":164,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":165,"author":{"gitId":"wxwern"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"wxwern":165}},{"path":"src/main/java/todoify/stdio/MainTextUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxwern"},"content":"package todoify.stdio;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"wxwern"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"wxwern"},"content":"import todoify.chatbot.ChatMessage;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"wxwern"},"content":"import todoify.chatbot.Chatbot;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"wxwern"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"wxwern"},"content":" * The chatbot CLI entry-point, which provides an interactive input prompt via the CLI.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"wxwern"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"wxwern"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"wxwern"},"content":" * The default name for the chatbot is specified at {@link todoify.chatbot.Chatbot#DEFAULT_NAME}. Custom names can be","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"wxwern"},"content":" * set by modifying the {@link MainTextUi#run} implementation here.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"wxwern"},"content":" * \u003c/p\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"wxwern"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"wxwern"},"content":"public class MainTextUi {","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"wxwern"},"content":"    private static final String CHATBOT_PADDING \u003d \"  \";","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"wxwern"},"content":"    private static final String USER_PADDING \u003d \" \u003e \";","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"wxwern"},"content":"     * Runs the TUI with the given program arguments.","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"wxwern"},"content":"     * @param args The program arguments.","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"wxwern"},"content":"    public static void run(String[] args) {","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"wxwern"},"content":"        // Initialise with default settings.","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"wxwern"},"content":"        Chatbot chatbot \u003d new Chatbot(null, null);","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"wxwern"},"content":"        // Perform initial setup to listen to new messages.","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"wxwern"},"content":"        chatbot.addEventListener(message -\u003e {","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"wxwern"},"content":"            if (message.getSenderType() \u003d\u003d ChatMessage.SenderType.CHATBOT) {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"wxwern"},"content":"                System.out.printf(\"[%s]:\\n\", chatbot.getName());","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"wxwern"},"content":"                System.out.println(","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"wxwern"},"content":"                        CHATBOT_PADDING","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"wxwern"},"content":"                                + message.getMessage().replaceAll(\"\\n\", \"\\n\" + CHATBOT_PADDING)","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"wxwern"},"content":"                );","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"wxwern"},"content":"                System.out.println();","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"wxwern"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"wxwern"},"content":"        });","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"wxwern"},"content":"        // Start processing standard input to feed into the chatbot.","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"wxwern"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"wxwern"},"content":"        chatbot.openConversation();","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"wxwern"},"content":"        while (chatbot.isConversationOpen()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"wxwern"},"content":"            System.out.println(\"[You]:\");","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"wxwern"},"content":"            System.out.print(USER_PADDING);","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"wxwern"},"content":"            System.out.flush();","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"wxwern"},"content":"            if (!scanner.hasNextLine()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"wxwern"},"content":"                break;","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"wxwern"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"wxwern"},"content":"            String line \u003d scanner.nextLine();","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"wxwern"},"content":"            System.out.println();","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"wxwern"},"content":"            chatbot.sendMessageFromUser(line);","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":62,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"wxwern"},"content":"        chatbot.closeConversation();","lastModifiedDate":"2023-08-22"},{"lineNumber":64,"author":{"gitId":"wxwern"},"content":"        scanner.close();","lastModifiedDate":"2023-08-22"},{"lineNumber":65,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"wxwern":65,"-":2}},{"path":"src/main/java/todoify/storage/InternalPath.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxwern"},"content":"package todoify.storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"wxwern"},"content":"import java.io.File;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"wxwern"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"wxwern"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"wxwern"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"wxwern"},"content":" * An internal path is a class that represents the path from an arbitrary base directory.","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"wxwern"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"wxwern"},"content":"public class InternalPath {","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"wxwern"},"content":"    private static final Path DEFAULT_BASE_JAVA_NIO_FILE_PATH \u003d Path.of(\".\", \"todoifydata\");","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"wxwern"},"content":"    private final String[] components;","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"wxwern"},"content":"     * Constructs a new path with path components representing the internal relative path starting from the base","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"wxwern"},"content":"     * directory.","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"wxwern"},"content":"     * @param components The path components.","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"wxwern"},"content":"    private InternalPath(String... components) {","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"wxwern"},"content":"        this.components \u003d components;","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"wxwern"},"content":"     * Constructs a new path with path components representing the internal relative path starting from the base","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"wxwern"},"content":"     * directory.","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"wxwern"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"wxwern"},"content":"     * All components are separated by path separators automatically, do not supply them. Instead, supply each component","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"wxwern"},"content":"     * in the path as a separate argument.","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"wxwern"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"wxwern"},"content":"     * @param components The path components.","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"wxwern"},"content":"    public static InternalPath of(String... components) {","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"wxwern"},"content":"        return new InternalPath(components);","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"wxwern"},"content":"     * Returns the internal relative path components, representing the path if joined with a path separator.","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"wxwern"},"content":"     * @return The internal relative path components.","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"wxwern"},"content":"    public String[] getComponents() {","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"wxwern"},"content":"        return Arrays.copyOf(this.components, this.components.length);","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"wxwern"},"content":"     * Returns a new path relative to the configured base directory, while removing the last component in the path.","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"wxwern"},"content":"     * @return The path after removing the last path component.","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"wxwern"},"content":"     * @throws NegativeArraySizeException if there are no more components in the path to strip.","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"wxwern"},"content":"    public InternalPath getByExcludingLastComponent() {","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"wxwern"},"content":"        String[] pathComponents \u003d Arrays.copyOf(this.components, this.components.length - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"wxwern"},"content":"        return new InternalPath(pathComponents);","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"wxwern"},"content":"     * Returns a new path relative to the configured base directory, while adding the given last component to the path","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"wxwern"},"content":"     * @param component The new component to append to the end of the path.","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"wxwern"},"content":"     * @return The path after adding the new last path component.","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"wxwern"},"content":"    public InternalPath getByAppendingLastComponent(String component) {","lastModifiedDate":"2023-09-13"},{"lineNumber":68,"author":{"gitId":"wxwern"},"content":"        String[] pathComponents \u003d Arrays.copyOf(this.components, this.components.length + 1);","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"wxwern"},"content":"        pathComponents[pathComponents.length - 1] \u003d component;","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"wxwern"},"content":"        return new InternalPath(pathComponents);","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"wxwern"},"content":"     * Returns the given path\u0027s full path relative to the configured base directory, as a {@link java.nio.file.Path}","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"wxwern"},"content":"     * instance.","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"wxwern"},"content":"     * @param basePath The Java NIO path to the base directory. May be null to use default.","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"wxwern"},"content":"     * @return The path for the given file as a {@link java.nio.file.Path} instance.","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"wxwern"},"content":"    public Path toJavaNioFilePath(Path basePath) {","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"wxwern"},"content":"        if (basePath \u003d\u003d null) {","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"wxwern"},"content":"            basePath \u003d DEFAULT_BASE_JAVA_NIO_FILE_PATH;","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"wxwern"},"content":"        return java.nio.file.Path.of(basePath.toString(), this.components);","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":86,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":88,"author":{"gitId":"wxwern"},"content":"     * Returns a new File instance constructed from this path.","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"wxwern"},"content":"     * @param basePath The Java NIO path to the base directory. May be null to use default.","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"wxwern"},"content":"     * @return The Java IO File instance.","lastModifiedDate":"2023-08-28"},{"lineNumber":92,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":93,"author":{"gitId":"wxwern"},"content":"    public File toFile(Path basePath) {","lastModifiedDate":"2023-08-28"},{"lineNumber":94,"author":{"gitId":"wxwern"},"content":"        return this.toJavaNioFilePath(basePath).toFile();","lastModifiedDate":"2023-08-28"},{"lineNumber":95,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":96,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":97,"author":{"gitId":"wxwern"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":98,"author":{"gitId":"wxwern"},"content":"    public String toString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":99,"author":{"gitId":"wxwern"},"content":"        return String.format(\"%s\u003d%s\", this.getClass().getTypeName(), Arrays.toString(this.components));","lastModifiedDate":"2023-08-28"},{"lineNumber":100,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":101,"author":{"gitId":"wxwern"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"wxwern":101}},{"path":"src/main/java/todoify/storage/InternalStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxwern"},"content":"package todoify.storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"wxwern"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"wxwern"},"content":"import java.io.File;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"wxwern"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"wxwern"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"wxwern"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"wxwern"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"wxwern"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"wxwern"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"wxwern"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"wxwern"},"content":" * A class that manages the program\u0027s internal storage\u0027s read-write operations.","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"wxwern"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"wxwern"},"content":"public class InternalStorage {","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"wxwern"},"content":"     * A cache of the default instance. This prevents unnecessary reinitialization of the default instance if and when","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"wxwern"},"content":"     * it is used in multiple places throughout the program.","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"wxwern"},"content":"    private static InternalStorage defaultInstance \u003d null;","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"wxwern"},"content":"     * The {@link java.nio.file.Path} instance to be used as the base directory for data storage.","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"wxwern"},"content":"    private final Path baseNioPath;","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"wxwern"},"content":"     * Constructs a new instance of an internal storage manager.","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"wxwern"},"content":"     * @param baseNioPath The Java NIO path to the base directory. May be null to use default.","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"wxwern"},"content":"    public InternalStorage(Path baseNioPath) {","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"wxwern"},"content":"        this.baseNioPath \u003d baseNioPath;","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"wxwern"},"content":"     * Returns the global singleton for the storage manager with the default path.","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"wxwern"},"content":"     * @return The shared default instance of the internal storage manager.","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"wxwern"},"content":"    public static InternalStorage getDefault() {","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"wxwern"},"content":"        if (defaultInstance \u003d\u003d null) {","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"wxwern"},"content":"            defaultInstance \u003d new InternalStorage(null);","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"wxwern"},"content":"        return defaultInstance;","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"wxwern"},"content":"     * Saves the given String data into the given path, relative to the configured base directory.","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"wxwern"},"content":"     * @param internalPath The path to save to.","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"wxwern"},"content":"     * @param data         The data to save in the file with.","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"wxwern"},"content":"     * @throws IOException if the file cannot be written for any reason.","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"wxwern"},"content":"    public void saveTo(InternalPath internalPath, String data) throws IOException {","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"wxwern"},"content":"        // Auto-create directory if necessary.","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"wxwern"},"content":"        Path nioPath \u003d internalPath.getByExcludingLastComponent().toJavaNioFilePath(this.baseNioPath);","lastModifiedDate":"2023-09-13"},{"lineNumber":60,"author":{"gitId":"wxwern"},"content":"        Files.createDirectories(nioPath);","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"wxwern"},"content":"        // Write to the file.","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"wxwern"},"content":"        File file \u003d internalPath.toFile(this.baseNioPath);","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"wxwern"},"content":"        FileWriter fileWriter \u003d new FileWriter(file);","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"wxwern"},"content":"        fileWriter.write(data);","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"wxwern"},"content":"        fileWriter.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"wxwern"},"content":"     * Reads the string data from the given filename, relative to the configured base directory.","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"wxwern"},"content":"     * @param internalPath The path to read from.","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"wxwern"},"content":"     * @return The resulting data read from the file.","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"wxwern"},"content":"     * @throws FileNotFoundException if the file does not exist.","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"wxwern"},"content":"     * @throws IOException           if the file cannot be read for any reason.","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"wxwern"},"content":"    public String loadFrom(InternalPath internalPath) throws IOException {","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"wxwern"},"content":"        // Reads from the file.","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"wxwern"},"content":"        File file \u003d internalPath.toFile(this.baseNioPath);","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"wxwern"},"content":"        FileReader fileReader \u003d new FileReader(file);","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"wxwern"},"content":"        BufferedReader bufferedReader \u003d new BufferedReader(fileReader);","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"wxwern"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"wxwern"},"content":"        String line;","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"wxwern"},"content":"        while ((line \u003d bufferedReader.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"wxwern"},"content":"            stringBuilder.append(line);","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"wxwern"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-08-27"},{"lineNumber":93,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":95,"author":{"gitId":"wxwern"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"wxwern":95}},{"path":"src/main/java/todoify/taskmanager/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxwern"},"content":"package todoify.taskmanager;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"wxwern"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"wxwern"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"wxwern"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"wxwern"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"wxwern"},"content":"import java.util.List;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"wxwern"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"wxwern"},"content":"import com.google.gson.Gson;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"wxwern"},"content":"import com.google.gson.JsonArray;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"wxwern"},"content":"import com.google.gson.JsonElement;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"wxwern"},"content":"import com.google.gson.JsonParser;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"wxwern"},"content":"import com.google.gson.JsonSyntaxException;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"wxwern"},"content":"import javafx.util.Pair;","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"wxwern"},"content":"import todoify.storage.InternalPath;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"wxwern"},"content":"import todoify.storage.InternalStorage;","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"wxwern"},"content":"import todoify.taskmanager.task.Deadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"wxwern"},"content":"import todoify.taskmanager.task.Event;","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"wxwern"},"content":"import todoify.taskmanager.task.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"wxwern"},"content":"import todoify.taskmanager.task.Todo;","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"wxwern"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"wxwern"},"content":" * A class that manages a list of items aka \"tasks\".","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"wxwern"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"wxwern"},"content":"public class TaskManager {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"wxwern"},"content":"     * The default filename used to read and write tasks to.","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"wxwern"},"content":"    private static final String DEFAULT_FILENAME \u003d \"tasks.json\";","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"wxwern"},"content":"    private List\u003cTask\u003e taskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"wxwern"},"content":"    private final InternalPath storageLocation;","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"wxwern"},"content":"    private final InternalStorage storageHandler;","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"wxwern"},"content":"     * Constructs a task manager, managing a list of items representing \"tasks\", with a custom storage location and","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"wxwern"},"content":"     * storage handler.","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"wxwern"},"content":"     * @param storageLocation The storage location for tasks.","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"wxwern"},"content":"     * @param storageHandler  The handler for processing storage operations.","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"wxwern"},"content":"    public TaskManager(InternalPath storageLocation, InternalStorage storageHandler) {","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"wxwern"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"wxwern"},"content":"        this.storageLocation \u003d storageLocation;","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"wxwern"},"content":"        this.storageHandler \u003d storageHandler \u003d\u003d null ? InternalStorage.getDefault() : storageHandler;","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"wxwern"},"content":"     * Constructs a task manager, managing a list of items representing \"tasks\", with a custom storage location and","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"wxwern"},"content":"     * default storage handler.","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"wxwern"},"content":"     * @param storageLocation The storage location for tasks.","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"wxwern"},"content":"    public TaskManager(InternalPath storageLocation) {","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"wxwern"},"content":"        this(storageLocation, null);","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"wxwern"},"content":"     * Constructor for a task manager, managing a list of items representing \"tasks\", with the default storage location","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"wxwern"},"content":"     * and default storage handler.","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"wxwern"},"content":"    public TaskManager() {","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"wxwern"},"content":"        this(InternalPath.of(DEFAULT_FILENAME));","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"wxwern"},"content":"     * Obtains the currently stored tasks as an immutable list.","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"wxwern"},"content":"     * @return The list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"wxwern"},"content":"    public List\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-09-13"},{"lineNumber":75,"author":{"gitId":"wxwern"},"content":"        return Collections.unmodifiableList(this.taskList);","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":79,"author":{"gitId":"wxwern"},"content":"     * Obtains the currently stored tasks as a stream of index-task pairs.","lastModifiedDate":"2023-09-13"},{"lineNumber":80,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":81,"author":{"gitId":"wxwern"},"content":"     * @return The stream of tasks","lastModifiedDate":"2023-09-13"},{"lineNumber":82,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":83,"author":{"gitId":"wxwern"},"content":"    public Stream\u003cPair\u003cInteger, Task\u003e\u003e getTaskIndexedStream() {","lastModifiedDate":"2023-09-13"},{"lineNumber":84,"author":{"gitId":"wxwern"},"content":"        List\u003cPair\u003cInteger, Task\u003e\u003e indexedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-13"},{"lineNumber":85,"author":{"gitId":"wxwern"},"content":"        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {","lastModifiedDate":"2023-09-13"},{"lineNumber":86,"author":{"gitId":"wxwern"},"content":"            indexedList.add(new Pair\u003c\u003e(i, this.taskList.get(i)));","lastModifiedDate":"2023-09-13"},{"lineNumber":87,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":88,"author":{"gitId":"wxwern"},"content":"        return indexedList.stream();","lastModifiedDate":"2023-09-13"},{"lineNumber":89,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":90,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":91,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"wxwern"},"content":"     * Queries the number of tasks stored.","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"wxwern"},"content":"     * @return The number of tasks currently stored as an integer.","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"wxwern"},"content":"    public int getTaskCount() {","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"wxwern"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"wxwern"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"wxwern"},"content":"     * @param task The task to add.","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"wxwern"},"content":"     * @return `true`, by {@link List#add} definition.","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"wxwern"},"content":"    public boolean addTask(Task task) {","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"wxwern"},"content":"        return this.taskList.add(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"wxwern"},"content":"     * Gets a task from the task list with the corresponding index.","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"wxwern"},"content":"     * @param index The index to obtain.","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"wxwern"},"content":"     * @return The task in question at the specified index.","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"wxwern"},"content":"     * @throws IndexOutOfBoundsException if the index is out of bounds.","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"wxwern"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"wxwern"},"content":"        return this.taskList.get(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"wxwern"},"content":"     * Removes the given task from the task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"wxwern"},"content":"     * @param task The task to remove.","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"wxwern"},"content":"     * @return `true` if the task exists in the list and is successfully removed, `false` otherwise.","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"wxwern"},"content":"    public boolean removeTask(Task task) {","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"wxwern"},"content":"        return this.taskList.remove(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":130,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"wxwern"},"content":"     * Removes the task at the corresponding index.","lastModifiedDate":"2023-08-29"},{"lineNumber":133,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"wxwern"},"content":"     * @param index The index to remove.","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"wxwern"},"content":"     * @return The task in question that was removed.","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"wxwern"},"content":"     * @throws IndexOutOfBoundsException if the index is out of bounds.","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"wxwern"},"content":"    public Task removeTask(int index) {","lastModifiedDate":"2023-08-29"},{"lineNumber":139,"author":{"gitId":"wxwern"},"content":"        return this.taskList.remove(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":140,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":141,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":143,"author":{"gitId":"wxwern"},"content":"     * Loads and replaces the task list in memory with the one currently in storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":144,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":145,"author":{"gitId":"wxwern"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":146,"author":{"gitId":"wxwern"},"content":"     * This method will load the data from storage and replace all in-memory contents. Any unrecognized, incompatible","lastModifiedDate":"2023-08-29"},{"lineNumber":147,"author":{"gitId":"wxwern"},"content":"     * tasks may be omitted entirely.","lastModifiedDate":"2023-08-29"},{"lineNumber":148,"author":{"gitId":"wxwern"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":149,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":150,"author":{"gitId":"wxwern"},"content":"     * @throws IOException if there were any issues retrieving the data.","lastModifiedDate":"2023-08-29"},{"lineNumber":151,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":152,"author":{"gitId":"wxwern"},"content":"    public void loadFromStorage() throws IOException, JsonSyntaxException {","lastModifiedDate":"2023-08-29"},{"lineNumber":153,"author":{"gitId":"wxwern"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":154,"author":{"gitId":"wxwern"},"content":"            String data \u003d this.storageHandler.loadFrom(this.storageLocation);","lastModifiedDate":"2023-08-29"},{"lineNumber":155,"author":{"gitId":"wxwern"},"content":"            JsonArray array \u003d JsonParser.parseString(data).getAsJsonArray();","lastModifiedDate":"2023-08-29"},{"lineNumber":156,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":157,"author":{"gitId":"wxwern"},"content":"            // Prepare a new list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":158,"author":{"gitId":"wxwern"},"content":"            List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":159,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":160,"author":{"gitId":"wxwern"},"content":"            // Prepare a new set of classes, from most specific to least specific.","lastModifiedDate":"2023-08-29"},{"lineNumber":161,"author":{"gitId":"wxwern"},"content":"            // This ordering is required to match the provided JSON to a class that\u0027s as specific as possible.","lastModifiedDate":"2023-08-29"},{"lineNumber":162,"author":{"gitId":"wxwern"},"content":"            List\u003cClass\u003c? extends Task\u003e\u003e availClasses \u003d List.of(Event.class, Deadline.class, Todo.class);","lastModifiedDate":"2023-09-13"},{"lineNumber":163,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":164,"author":{"gitId":"wxwern"},"content":"            // Iterate through the items in the JSON array.","lastModifiedDate":"2023-08-29"},{"lineNumber":165,"author":{"gitId":"wxwern"},"content":"            for (JsonElement item : array) {","lastModifiedDate":"2023-08-29"},{"lineNumber":166,"author":{"gitId":"wxwern"},"content":"                Task task \u003d null;","lastModifiedDate":"2023-08-29"},{"lineNumber":167,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":168,"author":{"gitId":"wxwern"},"content":"                // Iterate through possible classes and attempt to get them.","lastModifiedDate":"2023-08-29"},{"lineNumber":169,"author":{"gitId":"wxwern"},"content":"                for (Class\u003c? extends Task\u003e cls : availClasses) {","lastModifiedDate":"2023-09-13"},{"lineNumber":170,"author":{"gitId":"wxwern"},"content":"                    try {","lastModifiedDate":"2023-08-29"},{"lineNumber":171,"author":{"gitId":"wxwern"},"content":"                        task \u003d Task.fromJsonRepresentation(item, cls);","lastModifiedDate":"2023-08-29"},{"lineNumber":172,"author":{"gitId":"wxwern"},"content":"                    } catch (JsonSyntaxException | IllegalArgumentException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":173,"author":{"gitId":"wxwern"},"content":"                        // This is not the correct class.","lastModifiedDate":"2023-08-29"},{"lineNumber":174,"author":{"gitId":"wxwern"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":175,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":176,"author":{"gitId":"wxwern"},"content":"                    if (task !\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":177,"author":{"gitId":"wxwern"},"content":"                        break;","lastModifiedDate":"2023-08-29"},{"lineNumber":178,"author":{"gitId":"wxwern"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":179,"author":{"gitId":"wxwern"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":180,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":181,"author":{"gitId":"wxwern"},"content":"                // Skip if we cannot parse.","lastModifiedDate":"2023-08-29"},{"lineNumber":182,"author":{"gitId":"wxwern"},"content":"                if (task \u003d\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":183,"author":{"gitId":"wxwern"},"content":"                    continue;","lastModifiedDate":"2023-08-29"},{"lineNumber":184,"author":{"gitId":"wxwern"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":185,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":186,"author":{"gitId":"wxwern"},"content":"                // Add it if we can.","lastModifiedDate":"2023-08-29"},{"lineNumber":187,"author":{"gitId":"wxwern"},"content":"                tasks.add(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":188,"author":{"gitId":"wxwern"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":189,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":190,"author":{"gitId":"wxwern"},"content":"            // Replace the task list with a new one","lastModifiedDate":"2023-08-29"},{"lineNumber":191,"author":{"gitId":"wxwern"},"content":"            this.taskList \u003d tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":192,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":193,"author":{"gitId":"wxwern"},"content":"        } catch (JsonSyntaxException | FileNotFoundException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":194,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":195,"author":{"gitId":"wxwern"},"content":"            // Silence these errors and replace the task list with a new one.","lastModifiedDate":"2023-08-29"},{"lineNumber":196,"author":{"gitId":"wxwern"},"content":"            this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":197,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":198,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":199,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":200,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":201,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":202,"author":{"gitId":"wxwern"},"content":"     * Saves and replaces the task list in storage with the one currently in memory.","lastModifiedDate":"2023-08-29"},{"lineNumber":203,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":204,"author":{"gitId":"wxwern"},"content":"     * @throws IOException if there were any issues saving the data.","lastModifiedDate":"2023-08-29"},{"lineNumber":205,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":206,"author":{"gitId":"wxwern"},"content":"    public void saveToStorage() throws IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":207,"author":{"gitId":"wxwern"},"content":"        Gson gson \u003d new Gson();","lastModifiedDate":"2023-08-29"},{"lineNumber":208,"author":{"gitId":"wxwern"},"content":"        String data \u003d gson.toJson(this.taskList);","lastModifiedDate":"2023-08-29"},{"lineNumber":209,"author":{"gitId":"wxwern"},"content":"        this.storageHandler.saveTo(this.storageLocation, data);","lastModifiedDate":"2023-08-29"},{"lineNumber":210,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":211,"author":{"gitId":"wxwern"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"wxwern":211}},{"path":"src/main/java/todoify/taskmanager/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxwern"},"content":"package todoify.taskmanager.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"wxwern"},"content":"import todoify.util.EpochConverter;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"wxwern"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"wxwern"},"content":" * A deadline task. It tracks a title and a deadline associated with it, and can be marked as completed.","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"wxwern"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"wxwern"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"wxwern"},"content":"     * Deadline timestamp of the event as Unix epoch in seconds.","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"wxwern"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"wxwern"},"content":"     * This is intentionally using the object instead of the primitive type to allow for Gson to set to null, flagging","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"wxwern"},"content":"     * the value as missing.","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"wxwern"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"wxwern"},"content":"    private final Long deadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"wxwern"},"content":"     * Constructor for a deadline task.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"wxwern"},"content":"     * @param title    The title of the deadline.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"wxwern"},"content":"     * @param deadline The deadline, as Unix epoch in seconds.","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"wxwern"},"content":"    public Deadline(String title, long deadline) {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"wxwern"},"content":"        super(title);","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"wxwern"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"wxwern"},"content":"     * Obtains the deadline of this task.","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"wxwern"},"content":"     * @return The deadline of this task as seconds since Unix epoch (1970-01-01 00:00:00 UTC).","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"wxwern"},"content":"    public long getDeadline() {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"wxwern"},"content":"        assert this.deadline !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"wxwern"},"content":"        return this.deadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"wxwern"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"wxwern"},"content":"    public String toString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"wxwern"},"content":"        String formattedDeadline \u003d this.deadline \u003d\u003d null","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"wxwern"},"content":"                ? null","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"wxwern"},"content":"                : EpochConverter.getUserReadableDateTimeStringFromEpoch(this.getDeadline());","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"wxwern"},"content":"        return String.format(","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"wxwern"},"content":"                \"\u003cD\u003e %s %s (by: %s)\",","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"wxwern"},"content":"                this.getCompletedIndicatorString(),","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"wxwern"},"content":"                this.getTitle(),","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"wxwern"},"content":"                formattedDeadline","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"wxwern"},"content":"        );","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"wxwern"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"wxwern":54}},{"path":"src/main/java/todoify/taskmanager/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxwern"},"content":"package todoify.taskmanager.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"wxwern"},"content":"import todoify.util.EpochConverter;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"wxwern"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"wxwern"},"content":" * An event task. It tracks a title and the range associated with the event (from date-time to date-time), and can be","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"wxwern"},"content":" * marked as completed.","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"wxwern"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"wxwern"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"wxwern"},"content":"     * Starting timestamp of the event as Unix epoch in seconds.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"wxwern"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"wxwern"},"content":"     * This is intentionally using the object instead of the primitive type to allow for Gson to set to null, flagging","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"wxwern"},"content":"     * the value as missing.","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"wxwern"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"wxwern"},"content":"    private final Long startTimestamp;","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"wxwern"},"content":"     * Ending timestamp of the event as Unix epoch in seconds.","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"wxwern"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"wxwern"},"content":"     * This is intentionally using the object instead of the primitive type to allow for Gson to set to null, flagging","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"wxwern"},"content":"     * the value as missing.","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"wxwern"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"wxwern"},"content":"    private final Long endTimestamp;","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"wxwern"},"content":"     * Constructor for an Event task.","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"wxwern"},"content":"     * @param title          The title of the event.","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"wxwern"},"content":"     * @param startTimestamp The start of the event as Unix epoch in seconds.","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"wxwern"},"content":"     * @param endTimestamp   The end of the event as Unix epoch in seconds.","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"wxwern"},"content":"    public Event(String title, long startTimestamp, long endTimestamp) {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"wxwern"},"content":"        super(title);","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"wxwern"},"content":"        this.startTimestamp \u003d startTimestamp;","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"wxwern"},"content":"        this.endTimestamp \u003d endTimestamp;","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"wxwern"},"content":"     * Obtains the starting timestamp of this event task.","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"wxwern"},"content":"     * @return The starting timestamp as seconds since Unix epoch (1970-01-01 00:00:00 UTC).","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"wxwern"},"content":"    public long getStartTimestamp() {","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"wxwern"},"content":"        assert this.startTimestamp !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"wxwern"},"content":"        return this.startTimestamp;","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"wxwern"},"content":"     * Obtains the ending timestamp of this event task.","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"wxwern"},"content":"     * @return The ending timestamp as seconds since Unix epoch (1970-01-01 00:00:00 UTC).","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"wxwern"},"content":"    public long getEndTimestamp() {","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"wxwern"},"content":"        assert this.endTimestamp !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"wxwern"},"content":"        return this.endTimestamp;","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"wxwern"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"wxwern"},"content":"    public String toString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":67,"author":{"gitId":"wxwern"},"content":"        String formattedStartTimestamp \u003d this.startTimestamp \u003d\u003d null","lastModifiedDate":"2023-09-13"},{"lineNumber":68,"author":{"gitId":"wxwern"},"content":"                ? null","lastModifiedDate":"2023-09-13"},{"lineNumber":69,"author":{"gitId":"wxwern"},"content":"                : EpochConverter.getUserReadableDateTimeStringFromEpoch(this.getStartTimestamp());","lastModifiedDate":"2023-09-13"},{"lineNumber":70,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":71,"author":{"gitId":"wxwern"},"content":"        String formattedEndTimestamp \u003d this.endTimestamp \u003d\u003d null","lastModifiedDate":"2023-09-13"},{"lineNumber":72,"author":{"gitId":"wxwern"},"content":"                ? null","lastModifiedDate":"2023-09-13"},{"lineNumber":73,"author":{"gitId":"wxwern"},"content":"                : EpochConverter.getUserReadableDateTimeStringFromEpoch(this.getEndTimestamp());","lastModifiedDate":"2023-09-13"},{"lineNumber":74,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":75,"author":{"gitId":"wxwern"},"content":"        return String.format(","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"wxwern"},"content":"                \"\u003cE\u003e %s %s (from: %s, to: %s)\",","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"wxwern"},"content":"                this.getCompletedIndicatorString(),","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"wxwern"},"content":"                this.getTitle(),","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"wxwern"},"content":"                formattedStartTimestamp,","lastModifiedDate":"2023-09-13"},{"lineNumber":80,"author":{"gitId":"wxwern"},"content":"                formattedEndTimestamp","lastModifiedDate":"2023-09-13"},{"lineNumber":81,"author":{"gitId":"wxwern"},"content":"        );","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"wxwern"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"wxwern":83}},{"path":"src/main/java/todoify/taskmanager/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxwern"},"content":"package todoify.taskmanager.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"wxwern"},"content":"import java.lang.reflect.Field;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"wxwern"},"content":"import java.util.Objects;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"wxwern"},"content":"import com.google.gson.Gson;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"wxwern"},"content":"import com.google.gson.JsonElement;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"wxwern"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"wxwern"},"content":" * A task that the task manager can keep in its task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"wxwern"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"wxwern"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"wxwern"},"content":" * This is an abstract class which should be inherited by custom task types. It contains basic properties for a task,","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"wxwern"},"content":" * which can be extended as needed. All subclasses must also ensure they conform to compatibility with GSON and do not","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"wxwern"},"content":" * allow any null fields.","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"wxwern"},"content":" * \u003c/p\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"wxwern"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"wxwern"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"wxwern"},"content":"     * Title for the task in question.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"wxwern"},"content":"    private final String title;","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"wxwern"},"content":"     * Whether the task is completed.","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"wxwern"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"wxwern"},"content":"     * Note: Alpha releases used \"completed\" instead of \"isCompleted\", which changes the JSON storage format by Gson\u0027s","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"wxwern"},"content":"     * serialization. This change was made to comply with coding standards, but this means data stored in past alpha","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"wxwern"},"content":"     * releases are no longer compatible with stable releases.","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"wxwern"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"wxwern"},"content":"    private boolean isCompleted \u003d false;","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"wxwern"},"content":"     * Initializes a task.","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"wxwern"},"content":"     * @param title The title for the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"wxwern"},"content":"    public Task(String title) {","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"wxwern"},"content":"        this.title \u003d Objects.requireNonNull(title);","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"wxwern"},"content":"     * Obtains the title for the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"wxwern"},"content":"     * @return The title of the task as a string.","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"wxwern"},"content":"    public String getTitle() {","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"wxwern"},"content":"        assert this.title !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"wxwern"},"content":"        return this.title;","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"wxwern"},"content":"     * Whether the task is marked as completed.","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"wxwern"},"content":"     * @return true if completed, false otherwise.","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"wxwern"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"wxwern"},"content":"        return this.isCompleted;","lastModifiedDate":"2023-09-18"},{"lineNumber":63,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"wxwern"},"content":"     * Marks the task as completed or incomplete.","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"wxwern"},"content":"     * @param isCompleted Whether to mark it as complete (true) or incomplete (false).","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"wxwern"},"content":"    public void setCompleted(boolean isCompleted) {","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"wxwern"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2023-09-18"},{"lineNumber":72,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"wxwern"},"content":"     * Internal method for a formatted mark-complete symbol for this task.","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"wxwern"},"content":"    protected String getCompletedIndicatorString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"wxwern"},"content":"        return String.format(\"[%s]\", this.isCompleted() ? \"X\" : \" \");","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"wxwern"},"content":"     * Asserts that this task\u0027s parameters are in a valid state, having correctly configured with no null values.","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"wxwern"},"content":"     * @throws IllegalArgumentException if the object is incorrectly constructed with invalid, null parameters.","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"wxwern"},"content":"    public void assertValidState() {","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"wxwern"},"content":"        Field[] fields \u003d this.getClass().getDeclaredFields();","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"wxwern"},"content":"        for (Field field : fields) {","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"wxwern"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"wxwern"},"content":"                // Forcibly allow access. This is required to verify integrity.","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"wxwern"},"content":"                field.setAccessible(true);","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"wxwern"},"content":"                // Check if the field is null. If so, it\u0027s an error.","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"wxwern"},"content":"                if (field.get(this) \u003d\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"wxwern"},"content":"                    throw new IllegalArgumentException(String.format(","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"wxwern"},"content":"                            \"Tasks may not have null values, but %s is null.\",","lastModifiedDate":"2023-09-13"},{"lineNumber":97,"author":{"gitId":"wxwern"},"content":"                            field.getName()","lastModifiedDate":"2023-09-13"},{"lineNumber":98,"author":{"gitId":"wxwern"},"content":"                    ));","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"wxwern"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"wxwern"},"content":"            } catch (IllegalAccessException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"wxwern"},"content":"                // Well, we tried.","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"wxwern"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"wxwern"},"content":"     * Returns a string representation of the task, to be implemented by inherited classes.","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"wxwern"},"content":"     * @return A string representing the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"wxwern"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"wxwern"},"content":"    public abstract String toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"wxwern"},"content":"     * Returns a JSON representation of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"wxwern"},"content":"     * @return A Gson {@link JsonElement} representing this task.","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"wxwern"},"content":"    public JsonElement toJsonRepresentation() {","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"wxwern"},"content":"        Gson gson \u003d new Gson();","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"wxwern"},"content":"        return gson.toJsonTree(this);","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"wxwern"},"content":"     * Initializes a task using the given JSON data.","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"wxwern"},"content":"     * @param jsonElement The Gson {@link JsonElement} representing this task.","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"wxwern"},"content":"     * @throws IllegalArgumentException if the data causes the class to have missing values.","lastModifiedDate":"2023-08-29"},{"lineNumber":130,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"wxwern"},"content":"    public static \u003cT extends Task\u003e T fromJsonRepresentation(JsonElement jsonElement, Class\u003cT\u003e classType) {","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"wxwern"},"content":"        Gson gson \u003d new Gson();","lastModifiedDate":"2023-08-29"},{"lineNumber":133,"author":{"gitId":"wxwern"},"content":"        T task \u003d gson.fromJson(jsonElement, classType);","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"wxwern"},"content":"        task.assertValidState();","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"wxwern"},"content":"        return task;","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"wxwern"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"wxwern":137}},{"path":"src/main/java/todoify/taskmanager/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxwern"},"content":"package todoify.taskmanager.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"wxwern"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"wxwern"},"content":" * A trivial task that represents to-dos. It has a title and can be marked as completed.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"wxwern"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"wxwern"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"wxwern"},"content":"     * Constructor for a To-do task.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"wxwern"},"content":"     * @param title The title of the to-do.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"wxwern"},"content":"    public Todo(String title) {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"wxwern"},"content":"        super(title);","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"wxwern"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"wxwern"},"content":"    public String toString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"wxwern"},"content":"        return String.format(\"\u003cT\u003e %s %s\", this.getCompletedIndicatorString(), this.getTitle());","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"wxwern"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"wxwern":20}},{"path":"src/main/java/todoify/util/EpochConverter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxwern"},"content":"package todoify.util;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"wxwern"},"content":"import java.time.Instant;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"wxwern"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"wxwern"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"wxwern"},"content":"import java.time.ZoneId;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"wxwern"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"wxwern"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"wxwern"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"wxwern"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"wxwern"},"content":" * A utility formatter and converter class to assist in formatting dates to and from the Unix epoch.","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"wxwern"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"wxwern"},"content":"public final class EpochConverter {","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"wxwern"},"content":"    private EpochConverter() {","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"wxwern"},"content":"        // A utility class constructor should not be used.","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"wxwern"},"content":"     * Converts the given date-time string to number representing seconds since the Unix epoch.","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"wxwern"},"content":"     * @param dateTimeString The date time string to convert, in ISO format of \"yyyy-MM-ddThh:mm:ss\".","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"wxwern"},"content":"     * @return The number of seconds since the Unix epoch of 1970-01-01 00:00:00 UTC.","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"wxwern"},"content":"     * @throws DateTimeParseException if the date-time cannot be parsed.","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"wxwern"},"content":"    public static long getEpochFromIsoDateString(String dateTimeString) throws DateTimeParseException {","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"wxwern"},"content":"        DateTimeParseException cachedException;","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"wxwern"},"content":"        // Try with date and time.","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"wxwern"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"wxwern"},"content":"            return LocalDateTime.parse(dateTimeString, DateTimeFormatter.ISO_DATE_TIME)","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"wxwern"},"content":"                    .atZone(ZoneId.systemDefault())","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"wxwern"},"content":"                    .toEpochSecond();","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"wxwern"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"wxwern"},"content":"            cachedException \u003d e;","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"wxwern"},"content":"        // Otherwise, try with date only.","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"wxwern"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"wxwern"},"content":"            return LocalDate.parse(dateTimeString, DateTimeFormatter.ISO_DATE)","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"wxwern"},"content":"                    .atStartOfDay()","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"wxwern"},"content":"                    .atZone(ZoneId.systemDefault())","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"wxwern"},"content":"                    .toEpochSecond();","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"wxwern"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"wxwern"},"content":"            // Do nothing...","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"wxwern"},"content":"        // Otherwise, give up.","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"wxwern"},"content":"        assert cachedException !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"wxwern"},"content":"        throw cachedException;","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"wxwern"},"content":"     * Converts seconds since the Unix epoch to a date-time string.","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"wxwern"},"content":"     * @param epochSeconds The number of seconds since the Unix epoch of 1970-01-01 00:00:00 UTC.","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"wxwern"},"content":"     * @return The resulting date time string in ISO format of \"yyyy-MM-ddThh:mm:ss\".","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"wxwern"},"content":"    public static String getIsoDateStringFromEpoch(long epochSeconds) {","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"wxwern"},"content":"        return LocalDateTime","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"wxwern"},"content":"                .ofInstant(Instant.ofEpochSecond(epochSeconds), ZoneId.systemDefault())","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"wxwern"},"content":"                .format(DateTimeFormatter.ISO_DATE_TIME);","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"wxwern"},"content":"     * Converts seconds since the Unix epoch to a user-readable date-time string.","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"wxwern"},"content":"     * @param epochSeconds The number of seconds since the Unix epoch of 1970-01-01, 00:00:00, UTC.","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"wxwern"},"content":"     * @return The resulting date-time string in a user readable format.","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"wxwern"},"content":"    public static String getUserReadableDateTimeStringFromEpoch(long epochSeconds) {","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"wxwern"},"content":"        return LocalDateTime","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"wxwern"},"content":"                .ofInstant(Instant.ofEpochSecond(epochSeconds), ZoneId.systemDefault())","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"wxwern"},"content":"                .format(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM, FormatStyle.SHORT));","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"wxwern"},"content":"     * Converts seconds since the Unix epoch to a user-readable time string.","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"wxwern"},"content":"     * @param epochSeconds The number of seconds since the Unix epoch of 1970-01-01, 00:00:00, UTC.","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"wxwern"},"content":"     * @return The resulting time string in a user readable format.","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"wxwern"},"content":"    public static String getUserReadableTimeStringFromEpoch(long epochSeconds) {","lastModifiedDate":"2023-09-06"},{"lineNumber":87,"author":{"gitId":"wxwern"},"content":"        return LocalDateTime","lastModifiedDate":"2023-09-06"},{"lineNumber":88,"author":{"gitId":"wxwern"},"content":"                .ofInstant(Instant.ofEpochSecond(epochSeconds), ZoneId.systemDefault())","lastModifiedDate":"2023-09-06"},{"lineNumber":89,"author":{"gitId":"wxwern"},"content":"                .format(DateTimeFormatter.ofLocalizedTime(FormatStyle.SHORT));","lastModifiedDate":"2023-09-06"},{"lineNumber":90,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":91,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":92,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":93,"author":{"gitId":"wxwern"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"wxwern":93}},{"path":"src/main/java/todoify/util/events/EventEmitter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxwern"},"content":"package todoify.util.events;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"wxwern"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"wxwern"},"content":"import java.util.List;","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"wxwern"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"wxwern"},"content":" * A class capable of emitting events to event listeners.","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"wxwern"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"wxwern"},"content":"public class EventEmitter\u003cT\u003e {","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"wxwern"},"content":"    private final List\u003cEventListener\u003c? super T\u003e\u003e eventListeners \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"wxwern"},"content":"     * Fires a new event to all event listeners listening to this instance.","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"wxwern"},"content":"     * @param event The event to fire.","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"wxwern"},"content":"    protected void fireEvent(T event) {","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"wxwern"},"content":"        for (var l : this.eventListeners) {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"wxwern"},"content":"            l.eventFired(event);","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"wxwern"},"content":"     * Adds an event listener to listen to events by this instance.","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"wxwern"},"content":"     * @param listener The listener to add.","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"wxwern"},"content":"    public void addEventListener(EventListener\u003c? super T\u003e listener) {","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"wxwern"},"content":"        this.eventListeners.add(listener);","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"wxwern"},"content":"     * Removes an event listener to remove it from listening to events by this instance.","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"wxwern"},"content":"     * @param listener The listener to remove.","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"wxwern"},"content":"    public void removeEventListener(EventListener\u003c? super T\u003e listener) {","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"wxwern"},"content":"        this.eventListeners.remove(listener);","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"wxwern"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"wxwern":40}},{"path":"src/main/java/todoify/util/events/EventListener.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxwern"},"content":"package todoify.util.events;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"wxwern"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"wxwern"},"content":" * An interface capable of listening to certain utils.events.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"wxwern"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"wxwern"},"content":" * @param \u003cT\u003e The type of the event.","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"wxwern"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"wxwern"},"content":"@FunctionalInterface","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"wxwern"},"content":"public interface EventListener\u003cT\u003e {","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"wxwern"},"content":"     * A method to process an event that has been fired.","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"wxwern"},"content":"     * @param event Fired event.","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"wxwern"},"content":"    void eventFired(T event);","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"wxwern"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"wxwern":16}},{"path":"src/main/resources/view/ChatBubble.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wxwern"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"wxwern"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"wxwern"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"wxwern"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"wxwern"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"wxwern"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"wxwern"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"wxwern"},"content":"\u003cfx:root maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\" spacing\u003d\"16.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"wxwern"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"wxwern"},"content":"        \u003cImageView fx:id\u003d\"senderImageView\" fitHeight\u003d\"64.0\" fitWidth\u003d\"64.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" HBox.hgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"wxwern"},"content":"      \u003cVBox maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" spacing\u003d\"8.0\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"wxwern"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"wxwern"},"content":"            \u003cHBox spacing\u003d\"8.0\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"wxwern"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"wxwern"},"content":"                  \u003cLabel fx:id\u003d\"titleLabel\" maxWidth\u003d\"1.7976931348623157E308\" text\u003d\"Title\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"wxwern"},"content":"                     \u003cfont\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"wxwern"},"content":"                        \u003cFont name\u003d\"Arial Bold\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"wxwern"},"content":"                     \u003c/font\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"wxwern"},"content":"                  \u003c/Label\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"wxwern"},"content":"                  \u003cLabel fx:id\u003d\"timestampLabel\" contentDisplay\u003d\"RIGHT\" text\u003d\"12:34\" textFill\u003d\"#00000080\" textOverrun\u003d\"LEADING_ELLIPSIS\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"wxwern"},"content":"                     \u003cfont\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"wxwern"},"content":"                        \u003cFont name\u003d\"Arial\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"wxwern"},"content":"                     \u003c/font\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"wxwern"},"content":"                  \u003c/Label\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"wxwern"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"wxwern"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"wxwern"},"content":"              \u003cLabel fx:id\u003d\"messageLabel\" alignment\u003d\"TOP_LEFT\" maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" text\u003d\"Example Message Text\" wrapText\u003d\"true\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"wxwern"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"wxwern"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"wxwern"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"wxwern"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"wxwern"},"content":"        \u003cInsets bottom\u003d\"16.0\" left\u003d\"16.0\" right\u003d\"16.0\" top\u003d\"16.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"wxwern"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"wxwern"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"wxwern":36}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wxwern"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"wxwern"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"wxwern"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"wxwern"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"wxwern"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"wxwern"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"wxwern"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"wxwern"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"wxwern"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"wxwern"},"content":"\u003cAnchorPane minHeight\u003d\"320.0\" minWidth\u003d\"320.0\" prefHeight\u003d\"480.0\" prefWidth\u003d\"640.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"todoify.gui.MainWindowController\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"wxwern"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"wxwern"},"content":"      \u003cVBox layoutX\u003d\"145.0\" layoutY\u003d\"197.0\" prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"wxwern"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"wxwern"},"content":"            \u003cScrollPane fx:id\u003d\"messageHistoryScrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"wxwern"},"content":"               \u003ccontent\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"wxwern"},"content":"                  \u003cVBox fx:id\u003d\"messageHistoryVerticalBox\" alignment\u003d\"BOTTOM_CENTER\" maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"wxwern"},"content":"               \u003c/content\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"wxwern"},"content":"            \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"wxwern"},"content":"            \u003cHBox spacing\u003d\"8.0\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"wxwern"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"wxwern"},"content":"                  \u003cTextField fx:id\u003d\"userMessageTextField\" onKeyReleased\u003d\"#handleKeyEvent\" promptText\u003d\"Type your command here...\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"wxwern"},"content":"                     \u003cfont\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"wxwern"},"content":"                        \u003cFont name\u003d\"Arial\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"wxwern"},"content":"                     \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"wxwern"},"content":"                  \u003cButton fx:id\u003d\"sendMessageButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" text\u003d\"Send\" HBox.hgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"wxwern"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"wxwern"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"wxwern"},"content":"                  \u003cInsets bottom\u003d\"8.0\" left\u003d\"8.0\" right\u003d\"8.0\" top\u003d\"8.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"wxwern"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"wxwern"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"wxwern"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"wxwern"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"wxwern"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"wxwern"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"wxwern":36}},{"path":"src/test/java/todoify/chatbot/ChatCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxwern"},"content":"package todoify.chatbot;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"wxwern"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"wxwern"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"wxwern"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"wxwern"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"wxwern"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"wxwern"},"content":"public class ChatCommandTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"wxwern"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"wxwern"},"content":"    public void parse_plainInstruction_correctComponents() {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"wxwern"},"content":"        ChatCommand command;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"wxwern"},"content":"        command \u003d ChatCommand.parse(\"\");","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"wxwern"},"content":"        assertEquals(\"\", command.getName());","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"wxwern"},"content":"        assertEquals(\"\", command.getData());","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"wxwern"},"content":"        assertEquals(ChatCommand.Operation.UNKNOWN, command.getOperation());","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"wxwern"},"content":"        assertFalse(command.hasParams());","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"wxwern"},"content":"        command \u003d ChatCommand.parse(\"bye\");","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"wxwern"},"content":"        assertEquals(\"bye\", command.getName());","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"wxwern"},"content":"        assertEquals(\"\", command.getData());","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"wxwern"},"content":"        assertEquals(ChatCommand.Operation.EXIT, command.getOperation());","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"wxwern"},"content":"        assertFalse(command.hasParams());","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"wxwern"},"content":"        command \u003d ChatCommand.parse(\"test abc 123--456\");","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"wxwern"},"content":"        assertEquals(\"test\", command.getName());","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"wxwern"},"content":"        assertEquals(\"abc 123--456\", command.getData());","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"wxwern"},"content":"        assertEquals(ChatCommand.Operation.UNKNOWN, command.getOperation());","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"wxwern"},"content":"        assertFalse(command.hasParams());","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"wxwern"},"content":"        assertFalse(command.hasParam(\"456\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"wxwern"},"content":"        assertFalse(command.hasParamWithUsefulValue(\"456\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"wxwern"},"content":"        assertNull(command.getParam(\"456\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"wxwern"},"content":"        command \u003d ChatCommand.parse(\" todo blabla\\tblah blah\\n123\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"wxwern"},"content":"        assertEquals(\"todo\", command.getName());","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"wxwern"},"content":"        assertEquals(\"blabla blah blah 123\", command.getData());","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"wxwern"},"content":"        assertEquals(ChatCommand.Operation.ADD_TODO, command.getOperation());","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"wxwern"},"content":"        assertFalse(command.hasParams());","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"wxwern"},"content":"        assertFalse(command.hasParam(\"blah\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"wxwern"},"content":"        assertFalse(command.hasParamWithUsefulValue(\"blah\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"wxwern"},"content":"        assertNull(command.getParam(\"blah\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"wxwern"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"wxwern"},"content":"    public void parse_instructionWithParameters_correctComponents() {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"wxwern"},"content":"        ChatCommand command;","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"wxwern"},"content":"        command \u003d ChatCommand.parse(\"--magic parameter\");","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"wxwern"},"content":"        assertEquals(\"\", command.getName());","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"wxwern"},"content":"        assertEquals(\"\", command.getData());","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"wxwern"},"content":"        assertEquals(ChatCommand.Operation.UNKNOWN, command.getOperation());","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"wxwern"},"content":"        assertTrue(command.hasParams());","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"wxwern"},"content":"        assertTrue(command.hasParam(\"magic\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"wxwern"},"content":"        assertTrue(command.hasParamWithUsefulValue(\"magic\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"wxwern"},"content":"        assertEquals(\"parameter\", command.getParam(\"magic\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"wxwern"},"content":"        command \u003d ChatCommand.parse(\"todo --missing\");","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"wxwern"},"content":"        assertEquals(\"todo\", command.getName());","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"wxwern"},"content":"        assertEquals(\"\", command.getData());","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"wxwern"},"content":"        assertEquals(ChatCommand.Operation.ADD_TODO, command.getOperation());","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"wxwern"},"content":"        assertTrue(command.hasParams());","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"wxwern"},"content":"        assertTrue(command.hasParam(\"missing\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"wxwern"},"content":"        assertFalse(command.hasParamWithUsefulValue(\"missing\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"wxwern"},"content":"        assertEquals(\"\", command.getParam(\"missing\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"wxwern"},"content":"        command \u003d ChatCommand.parse(\"deadline message 123--456 --by date part\");","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"wxwern"},"content":"        assertEquals(\"deadline\", command.getName());","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"wxwern"},"content":"        assertEquals(\"message 123--456\", command.getData());","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"wxwern"},"content":"        assertEquals(ChatCommand.Operation.ADD_DEADLINE, command.getOperation());","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"wxwern"},"content":"        assertTrue(command.hasParams());","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"wxwern"},"content":"        assertTrue(command.hasParam(\"by\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"wxwern"},"content":"        assertFalse(command.hasParam(\"456\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"wxwern"},"content":"        assertTrue(command.hasParamWithUsefulValue(\"by\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"wxwern"},"content":"        assertEquals(\"date part\", command.getParam(\"by\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"wxwern"},"content":"        command \u003d ChatCommand.parse(\"list something  nice\\t--anything\\n--at\\tall\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"wxwern"},"content":"        assertEquals(\"list\", command.getName());","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"wxwern"},"content":"        assertEquals(\"something  nice\", command.getData());","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"wxwern"},"content":"        assertEquals(ChatCommand.Operation.LIST, command.getOperation());","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"wxwern"},"content":"        assertTrue(command.hasParams());","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"wxwern"},"content":"        assertEquals(\"\", command.getParam(\"anything\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"wxwern"},"content":"        assertFalse(command.hasParamWithUsefulValue(\"anything\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"wxwern"},"content":"        assertEquals(\"all\", command.getParam(\"at\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"wxwern"},"content":"        assertTrue(command.hasParamWithUsefulValue(\"at\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"wxwern"},"content":"        assertNull(command.getParam(\"all\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"wxwern"},"content":"        assertFalse(command.hasParamWithUsefulValue(\"all\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"wxwern"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"wxwern":92}},{"path":"src/test/java/todoify/storage/InternalPathTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxwern"},"content":"package todoify.storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"wxwern"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"wxwern"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"wxwern"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"wxwern"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"wxwern"},"content":"public class InternalPathTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"wxwern"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"wxwern"},"content":"    public void getByExcludingLastComponent_nonEmptyPath_correctEquivalentPath() {","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"wxwern"},"content":"        InternalPath path1;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"wxwern"},"content":"        InternalPath path2;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"wxwern"},"content":"        path1 \u003d InternalPath.of(\"aaa\", \"bbb\", \"ccc\");","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"wxwern"},"content":"        path2 \u003d InternalPath.of(\"aaa\", \"bbb\");","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"wxwern"},"content":"        assertArrayEquals(new String[] { \"aaa\", \"bbb\" }, path1.getByExcludingLastComponent().getComponents());","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"wxwern"},"content":"        assertArrayEquals(new String[] { \"aaa\", \"bbb\" }, path2.getComponents());","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"wxwern"},"content":"        path1 \u003d InternalPath.of(\"123\");","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"wxwern"},"content":"        assertArrayEquals(new String[] {}, path1.getByExcludingLastComponent().getComponents());","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"wxwern"},"content":"        path2 \u003d InternalPath.of(\"456\", \"789\", \"012\");","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"wxwern"},"content":"        assertArrayEquals(","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"wxwern"},"content":"                new String[] { \"456\" },","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"wxwern"},"content":"                path2.getByExcludingLastComponent().getByExcludingLastComponent().getComponents()","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"wxwern"},"content":"        );","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"wxwern"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"wxwern"},"content":"    public void getByExcludingLastComponent_emptyPath_exceptionThrown() {","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"wxwern"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"wxwern"},"content":"            InternalPath path \u003d InternalPath.of(\"\");","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"wxwern"},"content":"            path.getByExcludingLastComponent();","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"wxwern"},"content":"        } catch (NegativeArraySizeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"wxwern"},"content":"            // Success.","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"wxwern"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"wxwern"},"content":"    public void toJavaNioFilePath_correctEquivalentNioPath() {","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"wxwern"},"content":"        InternalPath path;","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"wxwern"},"content":"        path \u003d InternalPath.of(\"aaa\", \"bbb\", \"ccc\");","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"wxwern"},"content":"        assertEquals(","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"wxwern"},"content":"                Path.of(\"/base\", \"aaa\", \"bbb\", \"ccc\"),","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"wxwern"},"content":"                path.toJavaNioFilePath(Path.of(\"/base\"))","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"wxwern"},"content":"        );","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"wxwern"},"content":"        path \u003d InternalPath.of(\"a1\", \"b2\");","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"wxwern"},"content":"        assertEquals(","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"wxwern"},"content":"                Path.of(\"\", \"a1\", \"b2\"),","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"wxwern"},"content":"                path.toJavaNioFilePath(Path.of(\"\"))","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"wxwern"},"content":"        );","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"wxwern"},"content":"        path \u003d InternalPath.of(\"zzz\");","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"wxwern"},"content":"        assertEquals(","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"wxwern"},"content":"                Path.of(\"x/yy\", \"zzz\"),","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"wxwern"},"content":"                path.toJavaNioFilePath(Path.of(\"x/yy\"))","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"wxwern"},"content":"        );","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"wxwern"},"content":"        path \u003d InternalPath.of(\"\");","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"wxwern"},"content":"        Path basePath \u003d Path.of(\"aaa/bbb\");","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"wxwern"},"content":"        assertEquals(","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"wxwern"},"content":"                basePath,","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"wxwern"},"content":"                path.toJavaNioFilePath(basePath)","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"wxwern"},"content":"        );","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"wxwern"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"wxwern":74}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wxwern"},"content":"hello","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"wxwern"},"content":"test","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"wxwern"},"content":"blah","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"wxwern"},"content":"todo read book","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"wxwern"},"content":"deadline return book --by 2023-06-06","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"wxwern"},"content":"event project meeting --from 2023-08-06T14:00 --to 2023-08-06T16:00","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"wxwern"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"wxwern"},"content":"todo join sports club","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"wxwern"},"content":"todo borrow book","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"wxwern"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"wxwern"},"content":"deadline ip week 2 --by 2024-08-24","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"wxwern"},"content":"deadline tp --by idk","lastModifiedDate":"2023-09-14"},{"lineNumber":13,"author":{"gitId":"wxwern"},"content":"deadline nonsense","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"wxwern"},"content":"event test --from 2030-01-01 --to 2040-12-31","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"wxwern"},"content":"event wrong --from --to","lastModifiedDate":"2023-09-14"},{"lineNumber":16,"author":{"gitId":"wxwern"},"content":"event missing","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"wxwern"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"wxwern"},"content":"mark 5","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"wxwern"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"wxwern"},"content":"mark 4","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"wxwern"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"wxwern"},"content":"unmark 4","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"wxwern"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"wxwern"},"content":"mark 6","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"wxwern"},"content":"unmark 6","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"wxwern"},"content":"mark 8","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"wxwern"},"content":"mark 8","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"wxwern"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"wxwern"},"content":"delete 6","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"wxwern"},"content":"delete 4","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"wxwern"},"content":"delete 6","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"wxwern"},"content":"delete 6","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"wxwern"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"wxwern"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"wxwern":34}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"wxwern"},"content":"# navigate to the same directory the script is in","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"wxwern"},"content":"cd \"$(dirname \"$0\")\"","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"wxwern"},"content":"# clear all existing jar files and data files","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"wxwern"},"content":"rm -r ../build/libs/todoify*.jar 2\u003e /dev/null","lastModifiedDate":"2023-09-14"},{"lineNumber":20,"author":{"gitId":"wxwern"},"content":"rm -r ./todoifydata 2\u003e /dev/null","lastModifiedDate":"2023-09-14"},{"lineNumber":21,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":22,"author":{"gitId":"wxwern"},"content":"# return to upper dir for compilation","lastModifiedDate":"2023-09-14"},{"lineNumber":23,"author":{"gitId":"wxwern"},"content":"cd ..","lastModifiedDate":"2023-09-14"},{"lineNumber":24,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":25,"author":{"gitId":"wxwern"},"content":"# compile a new full jar file","lastModifiedDate":"2023-09-14"},{"lineNumber":26,"author":{"gitId":"wxwern"},"content":"if ! ./gradlew shadowJar","lastModifiedDate":"2023-09-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"wxwern"},"content":"# go back into curr dir","lastModifiedDate":"2023-09-14"},{"lineNumber":32,"author":{"gitId":"wxwern"},"content":"cd - \u003e\u003e /dev/null","lastModifiedDate":"2023-09-14"},{"lineNumber":33,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":34,"author":{"gitId":"wxwern"},"content":"echo","lastModifiedDate":"2023-09-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"wxwern"},"content":"# run the program with en-US locale (for consistency, as the program uses locale-dependent formatting)","lastModifiedDate":"2023-09-14"},{"lineNumber":37,"author":{"gitId":"wxwern"},"content":"# this also feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2023-09-14"},{"lineNumber":38,"author":{"gitId":"wxwern"},"content":"echo \"Executing text UI tests...\"","lastModifiedDate":"2023-09-14"},{"lineNumber":39,"author":{"gitId":"wxwern"},"content":"java -Duser.language\u003den -Duser.country\u003dUS -classpath ../bin -jar ../build/libs/todoify*.jar --text-ui \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-14"},{"lineNumber":40,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":41,"author":{"gitId":"wxwern"},"content":"# delete the data output file","lastModifiedDate":"2023-09-14"},{"lineNumber":42,"author":{"gitId":"wxwern"},"content":"rm -r ./todoifydata","lastModifiedDate":"2023-09-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"wxwern"},"content":"diff --strip-trailing-cr ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-09-15"},{"lineNumber":46,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-09-14"}],"authorContributionMap":{"wxwern":26,"-":29}}]
