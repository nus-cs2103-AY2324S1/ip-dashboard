[{"path":"src/main/java/ChatMessage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"wxwern"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"wxwern"},"content":" * The read only instance for a single message.","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"wxwern"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"wxwern"},"content":"public class ChatMessage {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"wxwern"},"content":"     * The message sender for a conversation message","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"wxwern"},"content":"    public enum SenderType {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"wxwern"},"content":"        CHATBOT,","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"wxwern"},"content":"        USER","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"wxwern"},"content":"    private long timestamp;","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"wxwern"},"content":"    private SenderType senderType;","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"wxwern"},"content":"    private String message;","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"wxwern"},"content":"    ChatMessage(SenderType senderType, String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"wxwern"},"content":"        this.timestamp \u003d System.currentTimeMillis();","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"wxwern"},"content":"        this.senderType \u003d senderType;","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"wxwern"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"wxwern"},"content":"    public long getTimestamp() {","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"wxwern"},"content":"        return this.timestamp;","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"wxwern"},"content":"    public SenderType getSenderType() {","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"wxwern"},"content":"        return this.senderType;","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"wxwern"},"content":"    public String getMessage() {","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"wxwern"},"content":"        return this.message;","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"wxwern"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"wxwern":35}},{"path":"src/main/java/Chatbot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxwern"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"wxwern"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"wxwern"},"content":" * A chatbot to interact with. Provides methods to allow for users to easily","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"wxwern"},"content":" * interact with the bot and for clients to subscribe to chat messages.","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"wxwern"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"wxwern"},"content":"public class Chatbot extends EventEmitter\u003cChatMessage\u003e {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"wxwern"},"content":"    /** The default name of the chatbot. */","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"wxwern"},"content":"    public static String DEFAULT_NAME \u003d \"Todoify\";","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"wxwern"},"content":"     * Returns a global singleton for the chatbot with the default name.","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"wxwern"},"content":"     * To start talking with it, call {@link Chatbot#openConversation()}.","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"wxwern"},"content":"    public static Chatbot getInstance() {","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"wxwern"},"content":"        return new Chatbot(Chatbot.DEFAULT_NAME);","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"wxwern"},"content":"    private String name;","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"wxwern"},"content":"    private ArrayList\u003cChatMessage\u003e convoList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"wxwern"},"content":"    private TaskManager taskManager \u003d new TaskManager();","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"wxwern"},"content":"    private boolean closed \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"wxwern"},"content":"     * Creates a new chatbot with the given custom name.","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"wxwern"},"content":"     * To start talking with it, call {@link Chatbot#openConversation()}.","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"wxwern"},"content":"     * @param name The name of the chatbot.","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"wxwern"},"content":"    public Chatbot(String name) {","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"wxwern"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"wxwern"},"content":"     * Obtains an iterable representing the current full conversation.","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"wxwern"},"content":"     * @return An iterable of messages for the current conversation in chronological order.","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"wxwern"},"content":"    public Iterable\u003cChatMessage\u003e getConversation() {","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"wxwern"},"content":"        return convoList;","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"wxwern"},"content":"     * Starts the chatbot conversation. Messages may be sent to the chatbot after this.","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"wxwern"},"content":"    public void openConversation() {","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"wxwern"},"content":"        if (!this.closed) {","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"wxwern"},"content":"            return;","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"wxwern"},"content":"        this.closed \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"wxwern"},"content":"        this.sendMessage(ChatMessage.SenderType.CHATBOT, String.format(\"Hello! I\u0027m %s!\\nWhat can I do for you?\", this.name));","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"wxwern"},"content":"     * Ends the chatbot conversation. No new messages may be sent after this.","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"wxwern"},"content":"    public void closeConversation() {","lastModifiedDate":"2023-08-22"},{"lineNumber":62,"author":{"gitId":"wxwern"},"content":"        if (this.closed) {","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"wxwern"},"content":"            return;","lastModifiedDate":"2023-08-22"},{"lineNumber":64,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":65,"author":{"gitId":"wxwern"},"content":"        this.closed \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":66,"author":{"gitId":"wxwern"},"content":"        this.sendMessage(ChatMessage.SenderType.CHATBOT, \"Bye! Hope to see you again soon! ^-^\");","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":68,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":69,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":70,"author":{"gitId":"wxwern"},"content":"     * Returns whether a conversation with the chatbot is open, which means messages can be sent.","lastModifiedDate":"2023-08-22"},{"lineNumber":71,"author":{"gitId":"wxwern"},"content":"     * @return true if the conversation is open, false otherwise.","lastModifiedDate":"2023-08-22"},{"lineNumber":72,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":73,"author":{"gitId":"wxwern"},"content":"    public boolean isConversationOpen() {","lastModifiedDate":"2023-08-22"},{"lineNumber":74,"author":{"gitId":"wxwern"},"content":"        return !this.closed;","lastModifiedDate":"2023-08-22"},{"lineNumber":75,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":76,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":77,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":78,"author":{"gitId":"wxwern"},"content":"     * Returns whether the conversation has clased, which means messages can no longer be sent.","lastModifiedDate":"2023-08-22"},{"lineNumber":79,"author":{"gitId":"wxwern"},"content":"     * @return true if the conversation is closed, false otherwise.","lastModifiedDate":"2023-08-22"},{"lineNumber":80,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":81,"author":{"gitId":"wxwern"},"content":"    public boolean isConversationClosed() {","lastModifiedDate":"2023-08-22"},{"lineNumber":82,"author":{"gitId":"wxwern"},"content":"        return this.closed;","lastModifiedDate":"2023-08-22"},{"lineNumber":83,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":84,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":85,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":86,"author":{"gitId":"wxwern"},"content":"     * Method to send a message to the chatbot from the user.","lastModifiedDate":"2023-08-22"},{"lineNumber":87,"author":{"gitId":"wxwern"},"content":"     * @param message The message string to send.","lastModifiedDate":"2023-08-22"},{"lineNumber":88,"author":{"gitId":"wxwern"},"content":"     * @return The resulting message sent.","lastModifiedDate":"2023-08-22"},{"lineNumber":89,"author":{"gitId":"wxwern"},"content":"     * @throws ChatbotRuntimeException if the conversation is closed.","lastModifiedDate":"2023-08-23"},{"lineNumber":90,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":91,"author":{"gitId":"wxwern"},"content":"    public ChatMessage sendMessageFromUser(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":92,"author":{"gitId":"wxwern"},"content":"        if (this.closed) {","lastModifiedDate":"2023-08-22"},{"lineNumber":93,"author":{"gitId":"wxwern"},"content":"            throw new ChatbotRuntimeException(\"Conversations are not open, so no messages may be sent!\");","lastModifiedDate":"2023-08-23"},{"lineNumber":94,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":95,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":96,"author":{"gitId":"wxwern"},"content":"        return this.sendMessage(ChatMessage.SenderType.USER, message);","lastModifiedDate":"2023-08-23"},{"lineNumber":97,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":98,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":99,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":100,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":101,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":102,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":103,"author":{"gitId":"wxwern"},"content":"     * Internal method to send a message.","lastModifiedDate":"2023-08-22"},{"lineNumber":104,"author":{"gitId":"wxwern"},"content":"     * @param message The message to send.","lastModifiedDate":"2023-08-22"},{"lineNumber":105,"author":{"gitId":"wxwern"},"content":"     * @return The resulting message sent.","lastModifiedDate":"2023-08-22"},{"lineNumber":106,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":107,"author":{"gitId":"wxwern"},"content":"    private ChatMessage sendMessage(ChatMessage.SenderType sender, String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":108,"author":{"gitId":"wxwern"},"content":"        ChatMessage msg \u003d new ChatMessage(sender, message);","lastModifiedDate":"2023-08-23"},{"lineNumber":109,"author":{"gitId":"wxwern"},"content":"        convoList.add(msg);","lastModifiedDate":"2023-08-22"},{"lineNumber":110,"author":{"gitId":"wxwern"},"content":"        this.processMessage(msg);","lastModifiedDate":"2023-08-22"},{"lineNumber":111,"author":{"gitId":"wxwern"},"content":"        return msg;","lastModifiedDate":"2023-08-22"},{"lineNumber":112,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":113,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":114,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":115,"author":{"gitId":"wxwern"},"content":"     * Internal method to process newly received messages.","lastModifiedDate":"2023-08-22"},{"lineNumber":116,"author":{"gitId":"wxwern"},"content":"     * @param message The message to process.","lastModifiedDate":"2023-08-22"},{"lineNumber":117,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":118,"author":{"gitId":"wxwern"},"content":"    private void processMessage(ChatMessage message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":119,"author":{"gitId":"wxwern"},"content":"        // Let\u0027s notify the listeners.","lastModifiedDate":"2023-08-22"},{"lineNumber":120,"author":{"gitId":"wxwern"},"content":"        this.fireEvent(message);","lastModifiedDate":"2023-08-22"},{"lineNumber":121,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":122,"author":{"gitId":"wxwern"},"content":"        if (message.getSenderType() \u003d\u003d ChatMessage.SenderType.CHATBOT) {","lastModifiedDate":"2023-08-23"},{"lineNumber":123,"author":{"gitId":"wxwern"},"content":"            // For now, self messages need no further processing.","lastModifiedDate":"2023-08-23"},{"lineNumber":124,"author":{"gitId":"wxwern"},"content":"            return;","lastModifiedDate":"2023-08-23"},{"lineNumber":125,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":126,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":127,"author":{"gitId":"wxwern"},"content":"        // Let\u0027s see what the other users send!","lastModifiedDate":"2023-08-23"},{"lineNumber":128,"author":{"gitId":"wxwern"},"content":"        final String FAILURE_MESSAGE_REPLY \u003d \"Sorry, idgi :(\";","lastModifiedDate":"2023-08-23"},{"lineNumber":129,"author":{"gitId":"wxwern"},"content":"        final Command command \u003d Command.parse(message.getMessage());","lastModifiedDate":"2023-08-23"},{"lineNumber":130,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":131,"author":{"gitId":"wxwern"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":132,"author":{"gitId":"wxwern"},"content":"            switch (command.getName()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":133,"author":{"gitId":"wxwern"},"content":"                case \"mark\":","lastModifiedDate":"2023-08-22"},{"lineNumber":134,"author":{"gitId":"wxwern"},"content":"                case \"unmark\":","lastModifiedDate":"2023-08-22"},{"lineNumber":135,"author":{"gitId":"wxwern"},"content":"                case \"delete\":","lastModifiedDate":"2023-08-23"},{"lineNumber":136,"author":{"gitId":"wxwern"},"content":"                    if (command.getData() !\u003d null) {","lastModifiedDate":"2023-08-23"},{"lineNumber":137,"author":{"gitId":"wxwern"},"content":"                        int index;","lastModifiedDate":"2023-08-23"},{"lineNumber":138,"author":{"gitId":"wxwern"},"content":"                        TaskManager.Task task;","lastModifiedDate":"2023-08-23"},{"lineNumber":139,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":140,"author":{"gitId":"wxwern"},"content":"                        // Process the input","lastModifiedDate":"2023-08-23"},{"lineNumber":141,"author":{"gitId":"wxwern"},"content":"                        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":142,"author":{"gitId":"wxwern"},"content":"                            index \u003d Integer.parseInt(command.getData()) - 1;","lastModifiedDate":"2023-08-23"},{"lineNumber":143,"author":{"gitId":"wxwern"},"content":"                        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":144,"author":{"gitId":"wxwern"},"content":"                            throw new ChatbotException(String.format(","lastModifiedDate":"2023-08-23"},{"lineNumber":145,"author":{"gitId":"wxwern"},"content":"                                    \"The command \u0027%s\u0027 must be followed by a number representing the task number!\",","lastModifiedDate":"2023-08-23"},{"lineNumber":146,"author":{"gitId":"wxwern"},"content":"                                    command.getName()","lastModifiedDate":"2023-08-23"},{"lineNumber":147,"author":{"gitId":"wxwern"},"content":"                            ));","lastModifiedDate":"2023-08-23"},{"lineNumber":148,"author":{"gitId":"wxwern"},"content":"                        }","lastModifiedDate":"2023-08-23"},{"lineNumber":149,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":150,"author":{"gitId":"wxwern"},"content":"                        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":151,"author":{"gitId":"wxwern"},"content":"                            task \u003d this.taskManager.getTask(index);","lastModifiedDate":"2023-08-23"},{"lineNumber":152,"author":{"gitId":"wxwern"},"content":"                        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":153,"author":{"gitId":"wxwern"},"content":"                            throw new ChatbotException(String.format(","lastModifiedDate":"2023-08-23"},{"lineNumber":154,"author":{"gitId":"wxwern"},"content":"                                    \"There is no task in the list numbered %d!\",","lastModifiedDate":"2023-08-23"},{"lineNumber":155,"author":{"gitId":"wxwern"},"content":"                                    index + 1","lastModifiedDate":"2023-08-23"},{"lineNumber":156,"author":{"gitId":"wxwern"},"content":"                            ));","lastModifiedDate":"2023-08-23"},{"lineNumber":157,"author":{"gitId":"wxwern"},"content":"                        }","lastModifiedDate":"2023-08-23"},{"lineNumber":158,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":159,"author":{"gitId":"wxwern"},"content":"                        // Let\u0027s see what we should do!","lastModifiedDate":"2023-08-23"},{"lineNumber":160,"author":{"gitId":"wxwern"},"content":"                        if (command.getName().equals(\"delete\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":161,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":162,"author":{"gitId":"wxwern"},"content":"                            // Delete the task accordingly. We already checked the index so it should be correct.","lastModifiedDate":"2023-08-23"},{"lineNumber":163,"author":{"gitId":"wxwern"},"content":"                            this.taskManager.removeTask(index);","lastModifiedDate":"2023-08-23"},{"lineNumber":164,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":165,"author":{"gitId":"wxwern"},"content":"                            // Send an appropriate reply.","lastModifiedDate":"2023-08-23"},{"lineNumber":166,"author":{"gitId":"wxwern"},"content":"                            this.sendMessage(","lastModifiedDate":"2023-08-23"},{"lineNumber":167,"author":{"gitId":"wxwern"},"content":"                                    ChatMessage.SenderType.CHATBOT,","lastModifiedDate":"2023-08-23"},{"lineNumber":168,"author":{"gitId":"wxwern"},"content":"                                    String.format(","lastModifiedDate":"2023-08-23"},{"lineNumber":169,"author":{"gitId":"wxwern"},"content":"                                            \"Alright, I\u0027ve deleted this task:\\n   %s\\nYou\u0027re left with %d tasks now! :)\",","lastModifiedDate":"2023-08-23"},{"lineNumber":170,"author":{"gitId":"wxwern"},"content":"                                            task,","lastModifiedDate":"2023-08-23"},{"lineNumber":171,"author":{"gitId":"wxwern"},"content":"                                            this.taskManager.getTaskCount()","lastModifiedDate":"2023-08-23"},{"lineNumber":172,"author":{"gitId":"wxwern"},"content":"                                    )","lastModifiedDate":"2023-08-23"},{"lineNumber":173,"author":{"gitId":"wxwern"},"content":"                            );","lastModifiedDate":"2023-08-23"},{"lineNumber":174,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":175,"author":{"gitId":"wxwern"},"content":"                        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":176,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":177,"author":{"gitId":"wxwern"},"content":"                            // Mark the task as done or not accordingly","lastModifiedDate":"2023-08-23"},{"lineNumber":178,"author":{"gitId":"wxwern"},"content":"                            boolean completed \u003d command.getName().equals(\"mark\");","lastModifiedDate":"2023-08-23"},{"lineNumber":179,"author":{"gitId":"wxwern"},"content":"                            if (task.isCompleted() \u003d\u003d completed) {","lastModifiedDate":"2023-08-23"},{"lineNumber":180,"author":{"gitId":"wxwern"},"content":"                                throw new ChatbotException(","lastModifiedDate":"2023-08-23"},{"lineNumber":181,"author":{"gitId":"wxwern"},"content":"                                        completed ? \"The task was already done!\" : \"The task was already not done!\"","lastModifiedDate":"2023-08-23"},{"lineNumber":182,"author":{"gitId":"wxwern"},"content":"                                );","lastModifiedDate":"2023-08-23"},{"lineNumber":183,"author":{"gitId":"wxwern"},"content":"                            }","lastModifiedDate":"2023-08-23"},{"lineNumber":184,"author":{"gitId":"wxwern"},"content":"                            task.markCompleted(completed);","lastModifiedDate":"2023-08-22"},{"lineNumber":185,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":186,"author":{"gitId":"wxwern"},"content":"                            // Send an appropriate reply","lastModifiedDate":"2023-08-23"},{"lineNumber":187,"author":{"gitId":"wxwern"},"content":"                            if (completed) {","lastModifiedDate":"2023-08-22"},{"lineNumber":188,"author":{"gitId":"wxwern"},"content":"                                this.sendMessage(","lastModifiedDate":"2023-08-22"},{"lineNumber":189,"author":{"gitId":"wxwern"},"content":"                                        ChatMessage.SenderType.CHATBOT,","lastModifiedDate":"2023-08-23"},{"lineNumber":190,"author":{"gitId":"wxwern"},"content":"                                        String.format(\"Nice! I\u0027ve marked this task as done:\\n   %s\", task.toString())","lastModifiedDate":"2023-08-22"},{"lineNumber":191,"author":{"gitId":"wxwern"},"content":"                                );","lastModifiedDate":"2023-08-22"},{"lineNumber":192,"author":{"gitId":"wxwern"},"content":"                            } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":193,"author":{"gitId":"wxwern"},"content":"                                this.sendMessage(","lastModifiedDate":"2023-08-22"},{"lineNumber":194,"author":{"gitId":"wxwern"},"content":"                                        ChatMessage.SenderType.CHATBOT,","lastModifiedDate":"2023-08-23"},{"lineNumber":195,"author":{"gitId":"wxwern"},"content":"                                        String.format(\"OK, I\u0027ve marked this task as not done yet:\\n   %s\", task.toString())","lastModifiedDate":"2023-08-22"},{"lineNumber":196,"author":{"gitId":"wxwern"},"content":"                                );","lastModifiedDate":"2023-08-22"},{"lineNumber":197,"author":{"gitId":"wxwern"},"content":"                            }","lastModifiedDate":"2023-08-22"},{"lineNumber":198,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":199,"author":{"gitId":"wxwern"},"content":"                        }","lastModifiedDate":"2023-08-23"},{"lineNumber":200,"author":{"gitId":"wxwern"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":201,"author":{"gitId":"wxwern"},"content":"                    break;","lastModifiedDate":"2023-08-22"},{"lineNumber":202,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":203,"author":{"gitId":"wxwern"},"content":"                case \"todo\":","lastModifiedDate":"2023-08-22"},{"lineNumber":204,"author":{"gitId":"wxwern"},"content":"                case \"deadline\":","lastModifiedDate":"2023-08-22"},{"lineNumber":205,"author":{"gitId":"wxwern"},"content":"                case \"event\":","lastModifiedDate":"2023-08-22"},{"lineNumber":206,"author":{"gitId":"wxwern"},"content":"                    if (!command.getData().isBlank()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":207,"author":{"gitId":"wxwern"},"content":"                        TaskManager.Task task \u003d null;","lastModifiedDate":"2023-08-22"},{"lineNumber":208,"author":{"gitId":"wxwern"},"content":"                        switch (command.getName()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":209,"author":{"gitId":"wxwern"},"content":"                            case \"todo\":","lastModifiedDate":"2023-08-22"},{"lineNumber":210,"author":{"gitId":"wxwern"},"content":"                                task \u003d new TaskManager.Todo(command.getData());","lastModifiedDate":"2023-08-23"},{"lineNumber":211,"author":{"gitId":"wxwern"},"content":"                                break;","lastModifiedDate":"2023-08-22"},{"lineNumber":212,"author":{"gitId":"wxwern"},"content":"                            case \"deadline\":","lastModifiedDate":"2023-08-22"},{"lineNumber":213,"author":{"gitId":"wxwern"},"content":"                                if (!command.hasParamWithUsefulValue(\"by\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":214,"author":{"gitId":"wxwern"},"content":"                                    throw new ChatbotException(","lastModifiedDate":"2023-08-23"},{"lineNumber":215,"author":{"gitId":"wxwern"},"content":"                                            \"The \u0027deadline\u0027 command requires supplying \u0027/by \u003cdeadline\u003e\u0027!\"","lastModifiedDate":"2023-08-23"},{"lineNumber":216,"author":{"gitId":"wxwern"},"content":"                                    );","lastModifiedDate":"2023-08-23"},{"lineNumber":217,"author":{"gitId":"wxwern"},"content":"                                }","lastModifiedDate":"2023-08-23"},{"lineNumber":218,"author":{"gitId":"wxwern"},"content":"                                task \u003d new TaskManager.Deadline(","lastModifiedDate":"2023-08-23"},{"lineNumber":219,"author":{"gitId":"wxwern"},"content":"                                        command.getData(),","lastModifiedDate":"2023-08-23"},{"lineNumber":220,"author":{"gitId":"wxwern"},"content":"                                        command.getParam(\"by\")","lastModifiedDate":"2023-08-23"},{"lineNumber":221,"author":{"gitId":"wxwern"},"content":"                                );","lastModifiedDate":"2023-08-23"},{"lineNumber":222,"author":{"gitId":"wxwern"},"content":"                                break;","lastModifiedDate":"2023-08-22"},{"lineNumber":223,"author":{"gitId":"wxwern"},"content":"                            case \"event\":","lastModifiedDate":"2023-08-22"},{"lineNumber":224,"author":{"gitId":"wxwern"},"content":"                                if (!command.hasParamWithUsefulValue(\"from\") ||","lastModifiedDate":"2023-08-23"},{"lineNumber":225,"author":{"gitId":"wxwern"},"content":"                                        !command.hasParamWithUsefulValue(\"to\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":226,"author":{"gitId":"wxwern"},"content":"                                    throw new ChatbotException(","lastModifiedDate":"2023-08-23"},{"lineNumber":227,"author":{"gitId":"wxwern"},"content":"                                            \"The \u0027event\u0027 command requires supplying both \u0027/from \u003cdate\u003e\u0027 and \u0027/to \u003cdate\u003e\u0027!\"","lastModifiedDate":"2023-08-23"},{"lineNumber":228,"author":{"gitId":"wxwern"},"content":"                                    );","lastModifiedDate":"2023-08-23"},{"lineNumber":229,"author":{"gitId":"wxwern"},"content":"                                }","lastModifiedDate":"2023-08-23"},{"lineNumber":230,"author":{"gitId":"wxwern"},"content":"                                task \u003d new TaskManager.Event(","lastModifiedDate":"2023-08-23"},{"lineNumber":231,"author":{"gitId":"wxwern"},"content":"                                        command.getData(),","lastModifiedDate":"2023-08-23"},{"lineNumber":232,"author":{"gitId":"wxwern"},"content":"                                        command.getParam(\"from\"),","lastModifiedDate":"2023-08-23"},{"lineNumber":233,"author":{"gitId":"wxwern"},"content":"                                        command.getParam(\"to\")","lastModifiedDate":"2023-08-23"},{"lineNumber":234,"author":{"gitId":"wxwern"},"content":"                                );","lastModifiedDate":"2023-08-23"},{"lineNumber":235,"author":{"gitId":"wxwern"},"content":"                                break;","lastModifiedDate":"2023-08-22"},{"lineNumber":236,"author":{"gitId":"wxwern"},"content":"                        }","lastModifiedDate":"2023-08-22"},{"lineNumber":237,"author":{"gitId":"wxwern"},"content":"                        if (task !\u003d null) {","lastModifiedDate":"2023-08-23"},{"lineNumber":238,"author":{"gitId":"wxwern"},"content":"                            this.taskManager.addTask(task);","lastModifiedDate":"2023-08-22"},{"lineNumber":239,"author":{"gitId":"wxwern"},"content":"                            this.sendMessage(","lastModifiedDate":"2023-08-22"},{"lineNumber":240,"author":{"gitId":"wxwern"},"content":"                                    ChatMessage.SenderType.CHATBOT,","lastModifiedDate":"2023-08-23"},{"lineNumber":241,"author":{"gitId":"wxwern"},"content":"                                    String.format(","lastModifiedDate":"2023-08-22"},{"lineNumber":242,"author":{"gitId":"wxwern"},"content":"                                            \"Got it. I\u0027ve added this task:\\n  %s\\nYou have %d tasks in your list now! :)\",","lastModifiedDate":"2023-08-22"},{"lineNumber":243,"author":{"gitId":"wxwern"},"content":"                                            task,","lastModifiedDate":"2023-08-22"},{"lineNumber":244,"author":{"gitId":"wxwern"},"content":"                                            this.taskManager.getTaskCount()","lastModifiedDate":"2023-08-22"},{"lineNumber":245,"author":{"gitId":"wxwern"},"content":"                                    )","lastModifiedDate":"2023-08-22"},{"lineNumber":246,"author":{"gitId":"wxwern"},"content":"                            );","lastModifiedDate":"2023-08-22"},{"lineNumber":247,"author":{"gitId":"wxwern"},"content":"                        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":248,"author":{"gitId":"wxwern"},"content":"                            throw new ChatbotException(\"Unexpected error occurred - task could not be created.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":249,"author":{"gitId":"wxwern"},"content":"                        }","lastModifiedDate":"2023-08-22"},{"lineNumber":250,"author":{"gitId":"wxwern"},"content":"                    } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":251,"author":{"gitId":"wxwern"},"content":"                        throw new ChatbotException(String.format(","lastModifiedDate":"2023-08-23"},{"lineNumber":252,"author":{"gitId":"wxwern"},"content":"                                \"The command \u0027%s\u0027 to create a task requires some title content, but none was found!\",","lastModifiedDate":"2023-08-23"},{"lineNumber":253,"author":{"gitId":"wxwern"},"content":"                                command.getName()","lastModifiedDate":"2023-08-23"},{"lineNumber":254,"author":{"gitId":"wxwern"},"content":"                        ));","lastModifiedDate":"2023-08-23"},{"lineNumber":255,"author":{"gitId":"wxwern"},"content":"                    }","lastModifiedDate":"2023-08-23"},{"lineNumber":256,"author":{"gitId":"wxwern"},"content":"                    break;","lastModifiedDate":"2023-08-22"},{"lineNumber":257,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":258,"author":{"gitId":"wxwern"},"content":"                case \"list\":","lastModifiedDate":"2023-08-22"},{"lineNumber":259,"author":{"gitId":"wxwern"},"content":"                    if (command.getData().isBlank()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":260,"author":{"gitId":"wxwern"},"content":"                        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-08-22"},{"lineNumber":261,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":262,"author":{"gitId":"wxwern"},"content":"                        if (this.taskManager.getTaskCount() \u003e 0) {","lastModifiedDate":"2023-08-22"},{"lineNumber":263,"author":{"gitId":"wxwern"},"content":"                            builder.append(\"Here are your tasks, glhf! :)\");","lastModifiedDate":"2023-08-22"},{"lineNumber":264,"author":{"gitId":"wxwern"},"content":"                        } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":265,"author":{"gitId":"wxwern"},"content":"                            builder.append(\"Oh nice! You have no tasks! :\u003e\");","lastModifiedDate":"2023-08-22"},{"lineNumber":266,"author":{"gitId":"wxwern"},"content":"                        }","lastModifiedDate":"2023-08-22"},{"lineNumber":267,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":268,"author":{"gitId":"wxwern"},"content":"                        int count \u003d 1;","lastModifiedDate":"2023-08-22"},{"lineNumber":269,"author":{"gitId":"wxwern"},"content":"                        for (TaskManager.Task task : this.taskManager.getTasks()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":270,"author":{"gitId":"wxwern"},"content":"                            builder.append(\"\\n\");","lastModifiedDate":"2023-08-22"},{"lineNumber":271,"author":{"gitId":"wxwern"},"content":"                            builder.append(count);","lastModifiedDate":"2023-08-22"},{"lineNumber":272,"author":{"gitId":"wxwern"},"content":"                            builder.append(\". \");","lastModifiedDate":"2023-08-22"},{"lineNumber":273,"author":{"gitId":"wxwern"},"content":"                            builder.append(task.toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":274,"author":{"gitId":"wxwern"},"content":"                            count++;","lastModifiedDate":"2023-08-22"},{"lineNumber":275,"author":{"gitId":"wxwern"},"content":"                        }","lastModifiedDate":"2023-08-22"},{"lineNumber":276,"author":{"gitId":"wxwern"},"content":"                        this.sendMessage(ChatMessage.SenderType.CHATBOT, builder.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":277,"author":{"gitId":"wxwern"},"content":"                        break;","lastModifiedDate":"2023-08-22"},{"lineNumber":278,"author":{"gitId":"wxwern"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":279,"author":{"gitId":"wxwern"},"content":"                    throw new ChatbotException(FAILURE_MESSAGE_REPLY);","lastModifiedDate":"2023-08-23"},{"lineNumber":280,"author":{"gitId":"wxwern"},"content":"                case \"bye\":","lastModifiedDate":"2023-08-22"},{"lineNumber":281,"author":{"gitId":"wxwern"},"content":"                    if (command.getData().isBlank()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":282,"author":{"gitId":"wxwern"},"content":"                        this.closeConversation();","lastModifiedDate":"2023-08-22"},{"lineNumber":283,"author":{"gitId":"wxwern"},"content":"                        break;","lastModifiedDate":"2023-08-22"},{"lineNumber":284,"author":{"gitId":"wxwern"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":285,"author":{"gitId":"wxwern"},"content":"                    throw new ChatbotException(FAILURE_MESSAGE_REPLY);","lastModifiedDate":"2023-08-23"},{"lineNumber":286,"author":{"gitId":"wxwern"},"content":"                default:","lastModifiedDate":"2023-08-22"},{"lineNumber":287,"author":{"gitId":"wxwern"},"content":"                    throw new ChatbotException(FAILURE_MESSAGE_REPLY);","lastModifiedDate":"2023-08-23"},{"lineNumber":288,"author":{"gitId":"wxwern"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":289,"author":{"gitId":"wxwern"},"content":"        } catch (ChatbotException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":290,"author":{"gitId":"wxwern"},"content":"            this.sendMessage(ChatMessage.SenderType.CHATBOT, \"Oops! \" + e.getMessage());","lastModifiedDate":"2023-08-23"},{"lineNumber":291,"author":{"gitId":"wxwern"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":292,"author":{"gitId":"wxwern"},"content":"            this.sendMessage(ChatMessage.SenderType.CHATBOT, \"Oh no, something unexpectedly went wrong! :(\");","lastModifiedDate":"2023-08-23"},{"lineNumber":293,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":294,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":295,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":296,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":297,"author":{"gitId":"wxwern"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"wxwern":297}},{"path":"src/main/java/ChatbotException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxwern"},"content":"public class ChatbotException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"wxwern"},"content":"    ChatbotException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"wxwern"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"wxwern"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"wxwern":5}},{"path":"src/main/java/ChatbotRuntimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxwern"},"content":"public class ChatbotRuntimeException extends RuntimeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"wxwern"},"content":"    ChatbotRuntimeException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"wxwern"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"wxwern"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"wxwern":5}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxwern"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"wxwern"},"content":"import java.util.Map;","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"wxwern"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"wxwern"},"content":" * An abstraction for a command.","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"wxwern"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"wxwern"},"content":"public class Command {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"wxwern"},"content":"    private String name;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"wxwern"},"content":"    private String data;","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"wxwern"},"content":"    private Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"wxwern"},"content":"     * Constructs a command with the given properties.","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"wxwern"},"content":"     * @param name The name of the command. Cannot be null.","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"wxwern"},"content":"     * @param data The data of the command. Cannot be null; supply empty string if no data.","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"wxwern"},"content":"     * @param params The parameters of the command. May be null.","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"wxwern"},"content":"    public Command(String name, String data, Map\u003cString, String\u003e params) {","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"wxwern"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"wxwern"},"content":"        this.data \u003d data;","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"wxwern"},"content":"        if (params !\u003d null) {","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"wxwern"},"content":"            this.params.putAll(params);","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"wxwern"},"content":"        if (name \u003d\u003d null || data \u003d\u003d null) {","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"wxwern"},"content":"            throw new NullPointerException(\"Name and data of a command cannot be null.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"wxwern"},"content":"     * Parses a string instruction as a command.","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"wxwern"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"wxwern"},"content":"     *     This expects the format: \"commandName Some long data text, /key1 value1 /key2 value2\".","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"wxwern"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"wxwern"},"content":"     * @param instruction The string instruction to parse.","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"wxwern"},"content":"     * @return The resulting command.","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"wxwern"},"content":"    public static Command parse(String instruction) {","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"wxwern"},"content":"        String[] parts \u003d instruction.trim().split(\" \");","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"wxwern"},"content":"        // 1. The first space delimited component is our name","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"wxwern"},"content":"        String name \u003d parts[0].trim();","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"wxwern"},"content":"        // 2. Let\u0027s build our data component.","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"wxwern"},"content":"        StringBuilder data \u003d new StringBuilder();","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"wxwern"},"content":"        // Search up till next part with starting \"/\".","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"wxwern"},"content":"        // That\u0027s our data. We mark the index onwards where","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"wxwern"},"content":"        // the components are no longer data (so it is excluded).","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"wxwern"},"content":"        int dataEndIndex \u003d 1;","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"wxwern"},"content":"        while (dataEndIndex \u003c parts.length) {","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"wxwern"},"content":"            String part \u003d parts[dataEndIndex];","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"wxwern"},"content":"            if (part.startsWith(\"/\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"wxwern"},"content":"                break;","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"wxwern"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"wxwern"},"content":"            dataEndIndex++;","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"wxwern"},"content":"        // Merge the data components into a string.","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"wxwern"},"content":"        for (int i \u003d 1; i \u003c dataEndIndex; i++) {","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"wxwern"},"content":"            if (i \u003e 1) {","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"wxwern"},"content":"                data.append(\u0027 \u0027);","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"wxwern"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"wxwern"},"content":"            data.append(parts[i]);","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"wxwern"},"content":"        // 3. Now, we have our parameters. Let\u0027s do some fancy processing.","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"wxwern"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"wxwern"},"content":"        // We scan through each word to iteratively add the key-value pairs.","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"wxwern"},"content":"        String currParamKey \u003d \"\";","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"wxwern"},"content":"        StringBuilder currParamValue \u003d new StringBuilder();","lastModifiedDate":"2023-08-23"},{"lineNumber":78,"author":{"gitId":"wxwern"},"content":"        for (int i \u003d dataEndIndex; i \u003c parts.length; i++) {","lastModifiedDate":"2023-08-23"},{"lineNumber":79,"author":{"gitId":"wxwern"},"content":"            String part \u003d parts[i].trim();","lastModifiedDate":"2023-08-23"},{"lineNumber":80,"author":{"gitId":"wxwern"},"content":"            if (part.startsWith(\"/\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"wxwern"},"content":"                // New key value pair.","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"wxwern"},"content":"                // Check if old key exists, then add it if it does.","lastModifiedDate":"2023-08-23"},{"lineNumber":83,"author":{"gitId":"wxwern"},"content":"                if (!currParamKey.isEmpty()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":84,"author":{"gitId":"wxwern"},"content":"                    params.put(currParamKey, currParamValue.toString().trim());","lastModifiedDate":"2023-08-23"},{"lineNumber":85,"author":{"gitId":"wxwern"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":86,"author":{"gitId":"wxwern"},"content":"                // Set the new key value pair.","lastModifiedDate":"2023-08-23"},{"lineNumber":87,"author":{"gitId":"wxwern"},"content":"                currParamKey \u003d part;","lastModifiedDate":"2023-08-23"},{"lineNumber":88,"author":{"gitId":"wxwern"},"content":"                currParamValue \u003d new StringBuilder();","lastModifiedDate":"2023-08-23"},{"lineNumber":89,"author":{"gitId":"wxwern"},"content":"            } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":90,"author":{"gitId":"wxwern"},"content":"                currParamValue.append(parts[i]);","lastModifiedDate":"2023-08-23"},{"lineNumber":91,"author":{"gitId":"wxwern"},"content":"                currParamValue.append(\u0027 \u0027);","lastModifiedDate":"2023-08-23"},{"lineNumber":92,"author":{"gitId":"wxwern"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":93,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":94,"author":{"gitId":"wxwern"},"content":"        if (!currParamKey.isEmpty()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":95,"author":{"gitId":"wxwern"},"content":"            params.put(currParamKey, currParamValue.toString().trim());","lastModifiedDate":"2023-08-23"},{"lineNumber":96,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":97,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":98,"author":{"gitId":"wxwern"},"content":"        // 4. Now we are done! Construct and return the result.","lastModifiedDate":"2023-08-23"},{"lineNumber":99,"author":{"gitId":"wxwern"},"content":"        return new Command(name, data.toString(), params);","lastModifiedDate":"2023-08-23"},{"lineNumber":100,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":101,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":102,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":103,"author":{"gitId":"wxwern"},"content":"     * Parses a string instruction\u0027s command name.","lastModifiedDate":"2023-08-23"},{"lineNumber":104,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":105,"author":{"gitId":"wxwern"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-08-23"},{"lineNumber":106,"author":{"gitId":"wxwern"},"content":"     *     This expects the format: \"commandName Some long data text, /key1 value1 /key2 value2\".","lastModifiedDate":"2023-08-23"},{"lineNumber":107,"author":{"gitId":"wxwern"},"content":"     *     It only returns the commandName component, and does not attempt to read anything beyond that.","lastModifiedDate":"2023-08-23"},{"lineNumber":108,"author":{"gitId":"wxwern"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2023-08-23"},{"lineNumber":109,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":110,"author":{"gitId":"wxwern"},"content":"     * @param instruction The string instruction to parse.","lastModifiedDate":"2023-08-23"},{"lineNumber":111,"author":{"gitId":"wxwern"},"content":"     * @return The command name retrieved as a non-null string.","lastModifiedDate":"2023-08-23"},{"lineNumber":112,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":113,"author":{"gitId":"wxwern"},"content":"    public static String parseCommandName(String instruction) {","lastModifiedDate":"2023-08-23"},{"lineNumber":114,"author":{"gitId":"wxwern"},"content":"        String[] parts \u003d instruction.split(\" \", 2);","lastModifiedDate":"2023-08-23"},{"lineNumber":115,"author":{"gitId":"wxwern"},"content":"        return parts[0];","lastModifiedDate":"2023-08-23"},{"lineNumber":116,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":117,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":118,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":119,"author":{"gitId":"wxwern"},"content":"     * Obtains the name of the given command.","lastModifiedDate":"2023-08-23"},{"lineNumber":120,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":121,"author":{"gitId":"wxwern"},"content":"     * @return The name of the given command as a non-null string.","lastModifiedDate":"2023-08-23"},{"lineNumber":122,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":123,"author":{"gitId":"wxwern"},"content":"    public String getName() {","lastModifiedDate":"2023-08-23"},{"lineNumber":124,"author":{"gitId":"wxwern"},"content":"        return this.name;","lastModifiedDate":"2023-08-23"},{"lineNumber":125,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":126,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":127,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":128,"author":{"gitId":"wxwern"},"content":"     * Obtains the data of the given command.","lastModifiedDate":"2023-08-23"},{"lineNumber":129,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":130,"author":{"gitId":"wxwern"},"content":"     * @return The data of the given command as a non-null string.","lastModifiedDate":"2023-08-23"},{"lineNumber":131,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":132,"author":{"gitId":"wxwern"},"content":"    public String getData() {","lastModifiedDate":"2023-08-23"},{"lineNumber":133,"author":{"gitId":"wxwern"},"content":"        return this.data;","lastModifiedDate":"2023-08-23"},{"lineNumber":134,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":135,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":136,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":137,"author":{"gitId":"wxwern"},"content":"     * Obtains the value of the given parameter in the command.","lastModifiedDate":"2023-08-23"},{"lineNumber":138,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":139,"author":{"gitId":"wxwern"},"content":"     * @param key the parameter, also known as the key.","lastModifiedDate":"2023-08-23"},{"lineNumber":140,"author":{"gitId":"wxwern"},"content":"     * @return The value of this param, or null if unset.","lastModifiedDate":"2023-08-23"},{"lineNumber":141,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":142,"author":{"gitId":"wxwern"},"content":"    public String getParam(String key) {","lastModifiedDate":"2023-08-23"},{"lineNumber":143,"author":{"gitId":"wxwern"},"content":"        if (!key.startsWith(\"/\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":144,"author":{"gitId":"wxwern"},"content":"            key \u003d \"/\" + key;","lastModifiedDate":"2023-08-23"},{"lineNumber":145,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":146,"author":{"gitId":"wxwern"},"content":"        return this.params.get(key);","lastModifiedDate":"2023-08-23"},{"lineNumber":147,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":148,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":149,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":150,"author":{"gitId":"wxwern"},"content":"     * Checks whether the given parameter was initialised.","lastModifiedDate":"2023-08-23"},{"lineNumber":151,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":152,"author":{"gitId":"wxwern"},"content":"     * @param key the parameter, also known as the key.","lastModifiedDate":"2023-08-23"},{"lineNumber":153,"author":{"gitId":"wxwern"},"content":"     * @return `true` if it was initialised, `false` otherwise.","lastModifiedDate":"2023-08-23"},{"lineNumber":154,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":155,"author":{"gitId":"wxwern"},"content":"    public boolean hasParam(String key) {","lastModifiedDate":"2023-08-23"},{"lineNumber":156,"author":{"gitId":"wxwern"},"content":"        if (!key.startsWith(\"/\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":157,"author":{"gitId":"wxwern"},"content":"            key \u003d \"/\" + key;","lastModifiedDate":"2023-08-23"},{"lineNumber":158,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":159,"author":{"gitId":"wxwern"},"content":"        return this.params.containsKey(key);","lastModifiedDate":"2023-08-23"},{"lineNumber":160,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":161,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":162,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":163,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":164,"author":{"gitId":"wxwern"},"content":"     * Checks whether the given parameter has any *useful* value.","lastModifiedDate":"2023-08-23"},{"lineNumber":165,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":166,"author":{"gitId":"wxwern"},"content":"     * @param key the parameter, also known as the key.","lastModifiedDate":"2023-08-23"},{"lineNumber":167,"author":{"gitId":"wxwern"},"content":"     * @return `true` if it has any non-empty, non-whitespace value, `false` otherwise.","lastModifiedDate":"2023-08-23"},{"lineNumber":168,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":169,"author":{"gitId":"wxwern"},"content":"    public boolean hasParamWithUsefulValue(String key) {","lastModifiedDate":"2023-08-23"},{"lineNumber":170,"author":{"gitId":"wxwern"},"content":"        if (!key.startsWith(\"/\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":171,"author":{"gitId":"wxwern"},"content":"            key \u003d \"/\" + key;","lastModifiedDate":"2023-08-23"},{"lineNumber":172,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":173,"author":{"gitId":"wxwern"},"content":"        String value \u003d this.params.get(key);","lastModifiedDate":"2023-08-23"},{"lineNumber":174,"author":{"gitId":"wxwern"},"content":"        if (value \u003d\u003d null) {","lastModifiedDate":"2023-08-23"},{"lineNumber":175,"author":{"gitId":"wxwern"},"content":"            value \u003d \"\";","lastModifiedDate":"2023-08-23"},{"lineNumber":176,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":177,"author":{"gitId":"wxwern"},"content":"        return !value.isBlank();","lastModifiedDate":"2023-08-23"},{"lineNumber":178,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":179,"author":{"gitId":"wxwern"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"wxwern":179}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxwern"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"wxwern"},"content":"    private static final Chatbot chatbot \u003d Chatbot.getInstance();","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"wxwern"},"content":"        // Perform some setups.","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"wxwern"},"content":"        chatbot.addEventListener(message -\u003e {","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"wxwern"},"content":"            if (message.getSenderType() !\u003d ChatMessage.SenderType.USER) {","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"wxwern"},"content":"                System.out.println(message.getMessage());","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"wxwern"},"content":"                System.out.println();","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"wxwern"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"wxwern"},"content":"        });","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"wxwern"},"content":"        // Start processing the conversation.","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"wxwern"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"wxwern"},"content":"        chatbot.openConversation();","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"wxwern"},"content":"        while (chatbot.isConversationOpen()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"wxwern"},"content":"            System.out.print(\"\u003e \");","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"wxwern"},"content":"            if (!scanner.hasNextLine()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"wxwern"},"content":"                break;","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"wxwern"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"wxwern"},"content":"            String line \u003d scanner.nextLine();","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"wxwern"},"content":"            System.out.println();","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"wxwern"},"content":"            chatbot.sendMessageFromUser(line);","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"wxwern"},"content":"        chatbot.closeConversation();","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"wxwern"},"content":"        scanner.close();","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"wxwern":34,"-":4}},{"path":"src/main/java/EventEmitter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxwern"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"wxwern"},"content":"import java.util.List;","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"wxwern"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"wxwern"},"content":" * A class capable of emitting events to event listeners.","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"wxwern"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"wxwern"},"content":"public class EventEmitter\u003cT\u003e {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"wxwern"},"content":"    private List\u003cEventListener\u003c? super T\u003e\u003e eventListeners \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"wxwern"},"content":"     * Fires a new event to all event listeners listening to this instance.","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"wxwern"},"content":"     * @param event The event to fire.","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"wxwern"},"content":"    protected void fireEvent(T event) {","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"wxwern"},"content":"        for (var l: eventListeners) {","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"wxwern"},"content":"            l.eventFired(event);","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"wxwern"},"content":"     * Adds an event listener to listen to events by this instance.","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"wxwern"},"content":"     * @param listener The listener to add.","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"wxwern"},"content":"    public void addEventListener(EventListener\u003c? super T\u003e listener) {","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"wxwern"},"content":"        eventListeners.add(listener);","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"wxwern"},"content":"     * Removes an event listener to remove it from listening to events by this instance.","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"wxwern"},"content":"     * @param listener The listener to remove.","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"wxwern"},"content":"    public void removeEventListener(EventListener\u003c? super T\u003e listener) {","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"wxwern"},"content":"        eventListeners.remove(listener);","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"wxwern"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"wxwern":35}},{"path":"src/main/java/EventListener.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxwern"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"wxwern"},"content":" * An interface capable of listening to certain events.","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"wxwern"},"content":" * @param \u003cT\u003e The type of the event.","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"wxwern"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"wxwern"},"content":"public interface EventListener\u003cT\u003e {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"wxwern"},"content":"     * A method to process an event that has been fired.","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"wxwern"},"content":"     * @param event Fired event.","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"wxwern"},"content":"    public void eventFired(T event);","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"wxwern"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"wxwern":11}},{"path":"src/main/java/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxwern"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"wxwern"},"content":"import java.util.List;","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"wxwern"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"wxwern"},"content":" * A class that manages a list of items aka \"tasks\".","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"wxwern"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"wxwern"},"content":"public class TaskManager {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"wxwern"},"content":"     * A task that the task manager can keep in its task list.","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"wxwern"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"wxwern"},"content":"     * This is an abstract class which should be inherited by custom task types.","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"wxwern"},"content":"     * It contains basic properties for a task, which can be extended as needed.","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"wxwern"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"wxwern"},"content":"    public abstract static class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"wxwern"},"content":"        private String title;","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"wxwern"},"content":"        private boolean completed \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"wxwern"},"content":"        /**","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"wxwern"},"content":"         * Initializes a task.","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"wxwern"},"content":"         *","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"wxwern"},"content":"         * @param title The title for the task.","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"wxwern"},"content":"         */","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"wxwern"},"content":"        public Task(String title) {","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"wxwern"},"content":"            this.title \u003d title;","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"wxwern"},"content":"        /**","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"wxwern"},"content":"         * Obtains the title for the task.","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"wxwern"},"content":"         * @return The title of the task as a string.","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"wxwern"},"content":"         */","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"wxwern"},"content":"        public String getTitle() {","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"wxwern"},"content":"            return this.title;","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"wxwern"},"content":"        /**","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"wxwern"},"content":"         * Whether the task is marked as completed.","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"wxwern"},"content":"         * @return true if completed, false otherwise.","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"wxwern"},"content":"         */","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"wxwern"},"content":"        public boolean isCompleted() {","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"wxwern"},"content":"            return this.completed;","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"wxwern"},"content":"        /**","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"wxwern"},"content":"         * Marks the task as completed or incomplete.","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"wxwern"},"content":"         * @param completed Whether to mark it as complete (true) or incomplete (false).","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"wxwern"},"content":"         */","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"wxwern"},"content":"        public void markCompleted(boolean completed) {","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"wxwern"},"content":"            this.completed \u003d completed;","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"wxwern"},"content":"        /**","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"wxwern"},"content":"         * Internal method for a formatted mark-complete symbol for this task.","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"wxwern"},"content":"         */","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"wxwern"},"content":"        protected String getCompletedIndicatorString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"wxwern"},"content":"            return String.format(\"[%s]\", this.isCompleted() ? \"X\" : \" \");","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"wxwern"},"content":"        /**","lastModifiedDate":"2023-08-22"},{"lineNumber":62,"author":{"gitId":"wxwern"},"content":"         * Returns a string representation of the task, to be implemented by inherited classes.","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"wxwern"},"content":"         *","lastModifiedDate":"2023-08-22"},{"lineNumber":64,"author":{"gitId":"wxwern"},"content":"         * @return A string representing the task.","lastModifiedDate":"2023-08-22"},{"lineNumber":65,"author":{"gitId":"wxwern"},"content":"         */","lastModifiedDate":"2023-08-22"},{"lineNumber":66,"author":{"gitId":"wxwern"},"content":"        @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"wxwern"},"content":"        public abstract String toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":68,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":69,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":70,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":71,"author":{"gitId":"wxwern"},"content":"     * A trivial task that represents to-dos.","lastModifiedDate":"2023-08-22"},{"lineNumber":72,"author":{"gitId":"wxwern"},"content":"     * It has a title and can be marked as completed.","lastModifiedDate":"2023-08-22"},{"lineNumber":73,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":74,"author":{"gitId":"wxwern"},"content":"    public static class Todo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":75,"author":{"gitId":"wxwern"},"content":"        public Todo(String title) {","lastModifiedDate":"2023-08-22"},{"lineNumber":76,"author":{"gitId":"wxwern"},"content":"            super(title);","lastModifiedDate":"2023-08-22"},{"lineNumber":77,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":78,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":79,"author":{"gitId":"wxwern"},"content":"        @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":80,"author":{"gitId":"wxwern"},"content":"        public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":81,"author":{"gitId":"wxwern"},"content":"            return String.format(\"\u003cT\u003e %s %s\", this.getCompletedIndicatorString(), this.getTitle());","lastModifiedDate":"2023-08-22"},{"lineNumber":82,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":83,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":84,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":85,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":86,"author":{"gitId":"wxwern"},"content":"     * A deadline task. It tracks a title and a deadline associated","lastModifiedDate":"2023-08-22"},{"lineNumber":87,"author":{"gitId":"wxwern"},"content":"     * with it, and can be marked as completed.","lastModifiedDate":"2023-08-22"},{"lineNumber":88,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":89,"author":{"gitId":"wxwern"},"content":"    public static class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":90,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":91,"author":{"gitId":"wxwern"},"content":"        private String deadline; // TODO: dates should not be a string","lastModifiedDate":"2023-08-22"},{"lineNumber":92,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":93,"author":{"gitId":"wxwern"},"content":"        public Deadline(String title, String deadline) {","lastModifiedDate":"2023-08-22"},{"lineNumber":94,"author":{"gitId":"wxwern"},"content":"            super(title);","lastModifiedDate":"2023-08-22"},{"lineNumber":95,"author":{"gitId":"wxwern"},"content":"            this.deadline \u003d deadline;","lastModifiedDate":"2023-08-22"},{"lineNumber":96,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":97,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":98,"author":{"gitId":"wxwern"},"content":"        /**","lastModifiedDate":"2023-08-22"},{"lineNumber":99,"author":{"gitId":"wxwern"},"content":"         * Obtains the deadline of this task.","lastModifiedDate":"2023-08-22"},{"lineNumber":100,"author":{"gitId":"wxwern"},"content":"         * @return The deadline of this task as a string.","lastModifiedDate":"2023-08-22"},{"lineNumber":101,"author":{"gitId":"wxwern"},"content":"         */","lastModifiedDate":"2023-08-22"},{"lineNumber":102,"author":{"gitId":"wxwern"},"content":"        public String getDeadline() {","lastModifiedDate":"2023-08-22"},{"lineNumber":103,"author":{"gitId":"wxwern"},"content":"            return this.deadline;","lastModifiedDate":"2023-08-22"},{"lineNumber":104,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":105,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":106,"author":{"gitId":"wxwern"},"content":"        @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":107,"author":{"gitId":"wxwern"},"content":"        public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":108,"author":{"gitId":"wxwern"},"content":"            return String.format(","lastModifiedDate":"2023-08-22"},{"lineNumber":109,"author":{"gitId":"wxwern"},"content":"                    \"\u003cD\u003e %s %s (by: %s)\",","lastModifiedDate":"2023-08-22"},{"lineNumber":110,"author":{"gitId":"wxwern"},"content":"                    this.getCompletedIndicatorString(),","lastModifiedDate":"2023-08-22"},{"lineNumber":111,"author":{"gitId":"wxwern"},"content":"                    this.getTitle(),","lastModifiedDate":"2023-08-22"},{"lineNumber":112,"author":{"gitId":"wxwern"},"content":"                    this.getDeadline()","lastModifiedDate":"2023-08-22"},{"lineNumber":113,"author":{"gitId":"wxwern"},"content":"            );","lastModifiedDate":"2023-08-22"},{"lineNumber":114,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":115,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":116,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":117,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":118,"author":{"gitId":"wxwern"},"content":"     * An event task. It tracks a title and the range associated with the","lastModifiedDate":"2023-08-22"},{"lineNumber":119,"author":{"gitId":"wxwern"},"content":"     * event (from date-time to date-time), and can be marked as completed.","lastModifiedDate":"2023-08-22"},{"lineNumber":120,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":121,"author":{"gitId":"wxwern"},"content":"    public static class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":122,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":123,"author":{"gitId":"wxwern"},"content":"        private String startTimestamp; // TODO: Start times should not be a string.","lastModifiedDate":"2023-08-22"},{"lineNumber":124,"author":{"gitId":"wxwern"},"content":"        private String endTimestamp; // TODO: End times should not be a string.","lastModifiedDate":"2023-08-22"},{"lineNumber":125,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":126,"author":{"gitId":"wxwern"},"content":"        public Event(String title, String startTimestamp, String endTimestamp) {","lastModifiedDate":"2023-08-22"},{"lineNumber":127,"author":{"gitId":"wxwern"},"content":"            super(title);","lastModifiedDate":"2023-08-22"},{"lineNumber":128,"author":{"gitId":"wxwern"},"content":"            this.startTimestamp \u003d startTimestamp;","lastModifiedDate":"2023-08-22"},{"lineNumber":129,"author":{"gitId":"wxwern"},"content":"            this.endTimestamp \u003d endTimestamp;","lastModifiedDate":"2023-08-22"},{"lineNumber":130,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":131,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":132,"author":{"gitId":"wxwern"},"content":"        /**","lastModifiedDate":"2023-08-22"},{"lineNumber":133,"author":{"gitId":"wxwern"},"content":"         * Obtains the starting timestamp of this event task.","lastModifiedDate":"2023-08-22"},{"lineNumber":134,"author":{"gitId":"wxwern"},"content":"         *","lastModifiedDate":"2023-08-22"},{"lineNumber":135,"author":{"gitId":"wxwern"},"content":"         * @return The starting timestamp as a string.","lastModifiedDate":"2023-08-22"},{"lineNumber":136,"author":{"gitId":"wxwern"},"content":"         */","lastModifiedDate":"2023-08-22"},{"lineNumber":137,"author":{"gitId":"wxwern"},"content":"        public String getStartTimestamp() {","lastModifiedDate":"2023-08-22"},{"lineNumber":138,"author":{"gitId":"wxwern"},"content":"            return this.startTimestamp;","lastModifiedDate":"2023-08-22"},{"lineNumber":139,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":140,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":141,"author":{"gitId":"wxwern"},"content":"        /**","lastModifiedDate":"2023-08-22"},{"lineNumber":142,"author":{"gitId":"wxwern"},"content":"         * Obtains the ending timestamp of this event task.","lastModifiedDate":"2023-08-22"},{"lineNumber":143,"author":{"gitId":"wxwern"},"content":"         *","lastModifiedDate":"2023-08-22"},{"lineNumber":144,"author":{"gitId":"wxwern"},"content":"         * @return The ending timestamp as a string.","lastModifiedDate":"2023-08-22"},{"lineNumber":145,"author":{"gitId":"wxwern"},"content":"         */","lastModifiedDate":"2023-08-22"},{"lineNumber":146,"author":{"gitId":"wxwern"},"content":"        public String getEndTimestamp() {","lastModifiedDate":"2023-08-22"},{"lineNumber":147,"author":{"gitId":"wxwern"},"content":"            return this.endTimestamp;","lastModifiedDate":"2023-08-22"},{"lineNumber":148,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":149,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":150,"author":{"gitId":"wxwern"},"content":"        @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":151,"author":{"gitId":"wxwern"},"content":"        public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":152,"author":{"gitId":"wxwern"},"content":"            return String.format(","lastModifiedDate":"2023-08-22"},{"lineNumber":153,"author":{"gitId":"wxwern"},"content":"                    \"\u003cE\u003e %s %s (from: %s, to: %s)\",","lastModifiedDate":"2023-08-22"},{"lineNumber":154,"author":{"gitId":"wxwern"},"content":"                    this.getCompletedIndicatorString(),","lastModifiedDate":"2023-08-22"},{"lineNumber":155,"author":{"gitId":"wxwern"},"content":"                    this.getTitle(),","lastModifiedDate":"2023-08-22"},{"lineNumber":156,"author":{"gitId":"wxwern"},"content":"                    this.getStartTimestamp(),","lastModifiedDate":"2023-08-22"},{"lineNumber":157,"author":{"gitId":"wxwern"},"content":"                    this.getEndTimestamp()","lastModifiedDate":"2023-08-22"},{"lineNumber":158,"author":{"gitId":"wxwern"},"content":"            );","lastModifiedDate":"2023-08-22"},{"lineNumber":159,"author":{"gitId":"wxwern"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":160,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":161,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":162,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":163,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":164,"author":{"gitId":"wxwern"},"content":"    private List\u003cTask\u003e taskList;","lastModifiedDate":"2023-08-22"},{"lineNumber":165,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":166,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":167,"author":{"gitId":"wxwern"},"content":"     * Constructor for a task manager, managing a list of items representing \"tasks\".","lastModifiedDate":"2023-08-22"},{"lineNumber":168,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":169,"author":{"gitId":"wxwern"},"content":"    public TaskManager() {","lastModifiedDate":"2023-08-22"},{"lineNumber":170,"author":{"gitId":"wxwern"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-22"},{"lineNumber":171,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":172,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":173,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":174,"author":{"gitId":"wxwern"},"content":"     * Obtains the items as an iterable.","lastModifiedDate":"2023-08-22"},{"lineNumber":175,"author":{"gitId":"wxwern"},"content":"     * @return The iterable of list of items.","lastModifiedDate":"2023-08-22"},{"lineNumber":176,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":177,"author":{"gitId":"wxwern"},"content":"    public Iterable\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-08-22"},{"lineNumber":178,"author":{"gitId":"wxwern"},"content":"        return this.taskList;","lastModifiedDate":"2023-08-22"},{"lineNumber":179,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":180,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":181,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":182,"author":{"gitId":"wxwern"},"content":"     * Queries the number of items stored.","lastModifiedDate":"2023-08-22"},{"lineNumber":183,"author":{"gitId":"wxwern"},"content":"     * @return The number of items currently stored as an integer.","lastModifiedDate":"2023-08-22"},{"lineNumber":184,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":185,"author":{"gitId":"wxwern"},"content":"    public int getTaskCount() {","lastModifiedDate":"2023-08-22"},{"lineNumber":186,"author":{"gitId":"wxwern"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-08-22"},{"lineNumber":187,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":188,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":189,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":190,"author":{"gitId":"wxwern"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-08-22"},{"lineNumber":191,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":192,"author":{"gitId":"wxwern"},"content":"     * @param task The task to add.","lastModifiedDate":"2023-08-22"},{"lineNumber":193,"author":{"gitId":"wxwern"},"content":"     * @return `true`, by definition of {@link List#add}","lastModifiedDate":"2023-08-22"},{"lineNumber":194,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":195,"author":{"gitId":"wxwern"},"content":"    public boolean addTask(Task task) {","lastModifiedDate":"2023-08-22"},{"lineNumber":196,"author":{"gitId":"wxwern"},"content":"        return this.taskList.add(task);","lastModifiedDate":"2023-08-22"},{"lineNumber":197,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":198,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":199,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":200,"author":{"gitId":"wxwern"},"content":"     * Gets an task from the task list with the corresponding index.","lastModifiedDate":"2023-08-22"},{"lineNumber":201,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":202,"author":{"gitId":"wxwern"},"content":"     * @param index The index to obtain.","lastModifiedDate":"2023-08-22"},{"lineNumber":203,"author":{"gitId":"wxwern"},"content":"     * @return The task in question at the specified index.","lastModifiedDate":"2023-08-22"},{"lineNumber":204,"author":{"gitId":"wxwern"},"content":"     * @throws IndexOutOfBoundsException if the index is out of bounds.","lastModifiedDate":"2023-08-22"},{"lineNumber":205,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":206,"author":{"gitId":"wxwern"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-08-22"},{"lineNumber":207,"author":{"gitId":"wxwern"},"content":"        return this.taskList.get(index);","lastModifiedDate":"2023-08-22"},{"lineNumber":208,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":209,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":210,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":211,"author":{"gitId":"wxwern"},"content":"     * Removes the given task from the task list.","lastModifiedDate":"2023-08-22"},{"lineNumber":212,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":213,"author":{"gitId":"wxwern"},"content":"     * @param task The task to remove.","lastModifiedDate":"2023-08-22"},{"lineNumber":214,"author":{"gitId":"wxwern"},"content":"     * @return `true` if the task exists in the list and is successfully removed, `false` otherwise.","lastModifiedDate":"2023-08-22"},{"lineNumber":215,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":216,"author":{"gitId":"wxwern"},"content":"    public boolean removeTask(Task task) {","lastModifiedDate":"2023-08-22"},{"lineNumber":217,"author":{"gitId":"wxwern"},"content":"        return this.taskList.remove(task);","lastModifiedDate":"2023-08-22"},{"lineNumber":218,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":219,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":220,"author":{"gitId":"wxwern"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":221,"author":{"gitId":"wxwern"},"content":"     * Removes the task at the corresponding index.","lastModifiedDate":"2023-08-22"},{"lineNumber":222,"author":{"gitId":"wxwern"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":223,"author":{"gitId":"wxwern"},"content":"     * @param index The index to remove.","lastModifiedDate":"2023-08-22"},{"lineNumber":224,"author":{"gitId":"wxwern"},"content":"     * @return The task in question that was removed.","lastModifiedDate":"2023-08-22"},{"lineNumber":225,"author":{"gitId":"wxwern"},"content":"     * @throws IndexOutOfBoundsException if the index is out of bounds.","lastModifiedDate":"2023-08-22"},{"lineNumber":226,"author":{"gitId":"wxwern"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":227,"author":{"gitId":"wxwern"},"content":"    public Task removeTask(int index) {","lastModifiedDate":"2023-08-22"},{"lineNumber":228,"author":{"gitId":"wxwern"},"content":"        return this.taskList.remove(index);","lastModifiedDate":"2023-08-22"},{"lineNumber":229,"author":{"gitId":"wxwern"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":230,"author":{"gitId":"wxwern"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":231,"author":{"gitId":"wxwern"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"wxwern":231}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wxwern"},"content":"hello","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"wxwern"},"content":"test","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"wxwern"},"content":"blah","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"wxwern"},"content":"todo read book","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"wxwern"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"wxwern"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"wxwern"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"wxwern"},"content":"todo join sports club","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"wxwern"},"content":"todo borrow book","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"wxwern"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"wxwern"},"content":"deadline ip week 2 /by Aug 24th","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"wxwern"},"content":"deadline tp /by idk","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"wxwern"},"content":"event test /from blah /to bleh","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"wxwern"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"wxwern"},"content":"mark 5","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"wxwern"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"wxwern"},"content":"mark 4","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"wxwern"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"wxwern"},"content":"unmark 4","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"wxwern"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"wxwern"},"content":"mark 6","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"wxwern"},"content":"unmark 6","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"wxwern"},"content":"mark 8","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"wxwern"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"wxwern"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"wxwern":25}}]
