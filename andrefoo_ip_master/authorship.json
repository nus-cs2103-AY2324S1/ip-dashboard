[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"andrefoo"},"content":"    mainClass.set(\"dre.Launcher\")","lastModifiedDate":"2023-09-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"andrefoo"},"content":"    archiveBaseName \u003d \"dre\"","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"andrefoo":18,"-":40}},{"path":"data/dre.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"T| |new something","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"D|X|something|2023-12-31","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"E| |something else|1000-01-01|1000-10-10","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"T|X|hola como estas","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"D| |blub|2001-09-11","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"E| |something else|2001-09-11|2001-09-11","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"D| |something new|2022-01-01","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"andrefoo":7}},{"path":"src/main/java/dre/Dre.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import dre.exception.DreException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"import dre.gui.DialogBox;","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"import dre.ui.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"import dre.storage.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"import dre.parser.Parser;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"import dre.task.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":"import dre.command.Command;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":" * Represents the main application class, serving as the primary entry point","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":" * to initiate and run the Dre task management system.","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"public class Dre extends Application {","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"    private final Storage storage;","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"    private final Ui ui;","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"andrefoo"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"andrefoo"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"andrefoo"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"andrefoo"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"andrefoo"},"content":"    private Scene scene;","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"andrefoo"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpg\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"andrefoo"},"content":"    private Image dre \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDre.jpg\"));","lastModifiedDate":"2023-09-16"},{"lineNumber":42,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"andrefoo"},"content":"    private final String DEFAULT_FILE_PATH \u003d \"data/dre.txt\";","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"andrefoo"},"content":"     * Constructs a new instance of Dre, initializing storage, tasks, and user interface components.","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"andrefoo"},"content":"    public Dre() {","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"andrefoo"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"andrefoo"},"content":"        storage \u003d new Storage(DEFAULT_FILE_PATH);","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"andrefoo"},"content":"        assert storage !\u003d null : \"Failed to initialize storage\";","lastModifiedDate":"2023-09-16"},{"lineNumber":52,"author":{"gitId":"andrefoo"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"andrefoo"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"andrefoo"},"content":"            assert tasks !\u003d null : \"Failed to initialize tasks\";","lastModifiedDate":"2023-09-16"},{"lineNumber":55,"author":{"gitId":"andrefoo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"andrefoo"},"content":"            ui.generateLoadingErrorString();","lastModifiedDate":"2023-09-16"},{"lineNumber":57,"author":{"gitId":"andrefoo"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"andrefoo"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"andrefoo"},"content":"     * Runs the main loop of the application, repeatedly reading user commands,","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"andrefoo"},"content":"     * parsing them, and executing the corresponding actions until the user exits.","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":66,"author":{"gitId":"andrefoo"},"content":"    public void run() {","lastModifiedDate":"2023-09-04"},{"lineNumber":67,"author":{"gitId":"andrefoo"},"content":"        Ui.showWelcome();","lastModifiedDate":"2023-09-19"},{"lineNumber":68,"author":{"gitId":"andrefoo"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-09-04"},{"lineNumber":69,"author":{"gitId":"andrefoo"},"content":"        while (!isExit) {","lastModifiedDate":"2023-09-04"},{"lineNumber":70,"author":{"gitId":"andrefoo"},"content":"            try {","lastModifiedDate":"2023-09-04"},{"lineNumber":71,"author":{"gitId":"andrefoo"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-09-04"},{"lineNumber":72,"author":{"gitId":"andrefoo"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"andrefoo"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-09-04"},{"lineNumber":74,"author":{"gitId":"andrefoo"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"andrefoo"},"content":"            } catch (DreException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":76,"author":{"gitId":"andrefoo"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-09-13"},{"lineNumber":77,"author":{"gitId":"andrefoo"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":78,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":79,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":80,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":81,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":82,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":83,"author":{"gitId":"andrefoo"},"content":"     * Runs the main loop of the application, repeatedly reading user commands,","lastModifiedDate":"2023-09-16"},{"lineNumber":84,"author":{"gitId":"andrefoo"},"content":"     * parsing them, and executing the corresponding actions until the user exits.","lastModifiedDate":"2023-09-16"},{"lineNumber":85,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-16"},{"lineNumber":86,"author":{"gitId":"andrefoo"},"content":"     * @param stage the primary stage for this application, onto which","lastModifiedDate":"2023-09-16"},{"lineNumber":87,"author":{"gitId":"andrefoo"},"content":"     * the application scene can be set.","lastModifiedDate":"2023-09-16"},{"lineNumber":88,"author":{"gitId":"andrefoo"},"content":"     * Applications may create other stages, if needed, but they will not be","lastModifiedDate":"2023-09-16"},{"lineNumber":89,"author":{"gitId":"andrefoo"},"content":"     * primary stages.","lastModifiedDate":"2023-09-16"},{"lineNumber":90,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":91,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":92,"author":{"gitId":"andrefoo"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-13"},{"lineNumber":93,"author":{"gitId":"andrefoo"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-09-13"},{"lineNumber":94,"author":{"gitId":"andrefoo"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-09-13"},{"lineNumber":95,"author":{"gitId":"andrefoo"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-09-13"},{"lineNumber":96,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":97,"author":{"gitId":"andrefoo"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-09-13"},{"lineNumber":98,"author":{"gitId":"andrefoo"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-09-13"},{"lineNumber":99,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":100,"author":{"gitId":"andrefoo"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-09-13"},{"lineNumber":101,"author":{"gitId":"andrefoo"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-09-13"},{"lineNumber":102,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":103,"author":{"gitId":"andrefoo"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-09-13"},{"lineNumber":104,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":105,"author":{"gitId":"andrefoo"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-09-13"},{"lineNumber":106,"author":{"gitId":"andrefoo"},"content":"        stage.show();","lastModifiedDate":"2023-09-13"},{"lineNumber":107,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":108,"author":{"gitId":"andrefoo"},"content":"        stage.setTitle(\"Dre\");","lastModifiedDate":"2023-09-16"},{"lineNumber":109,"author":{"gitId":"andrefoo"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-09-13"},{"lineNumber":110,"author":{"gitId":"andrefoo"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-09-13"},{"lineNumber":111,"author":{"gitId":"andrefoo"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-09-13"},{"lineNumber":112,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":113,"author":{"gitId":"andrefoo"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-09-13"},{"lineNumber":114,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":115,"author":{"gitId":"andrefoo"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-09-13"},{"lineNumber":116,"author":{"gitId":"andrefoo"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-09-13"},{"lineNumber":117,"author":{"gitId":"andrefoo"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-09-13"},{"lineNumber":118,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":119,"author":{"gitId":"andrefoo"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-09-13"},{"lineNumber":120,"author":{"gitId":"andrefoo"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-09-13"},{"lineNumber":121,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":122,"author":{"gitId":"andrefoo"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-09-13"},{"lineNumber":123,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":124,"author":{"gitId":"andrefoo"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-09-13"},{"lineNumber":125,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":126,"author":{"gitId":"andrefoo"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-09-13"},{"lineNumber":127,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":128,"author":{"gitId":"andrefoo"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-09-13"},{"lineNumber":129,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":130,"author":{"gitId":"andrefoo"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-13"},{"lineNumber":131,"author":{"gitId":"andrefoo"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-13"},{"lineNumber":132,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":133,"author":{"gitId":"andrefoo"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-09-13"},{"lineNumber":134,"author":{"gitId":"andrefoo"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-09-13"},{"lineNumber":135,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":136,"author":{"gitId":"andrefoo"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-09-13"},{"lineNumber":137,"author":{"gitId":"andrefoo"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2023-09-13"},{"lineNumber":138,"author":{"gitId":"andrefoo"},"content":"            userInput.clear();","lastModifiedDate":"2023-09-13"},{"lineNumber":139,"author":{"gitId":"andrefoo"},"content":"        });","lastModifiedDate":"2023-09-13"},{"lineNumber":140,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":141,"author":{"gitId":"andrefoo"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-09-13"},{"lineNumber":142,"author":{"gitId":"andrefoo"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2023-09-13"},{"lineNumber":143,"author":{"gitId":"andrefoo"},"content":"            userInput.clear();","lastModifiedDate":"2023-09-13"},{"lineNumber":144,"author":{"gitId":"andrefoo"},"content":"        });","lastModifiedDate":"2023-09-13"},{"lineNumber":145,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":146,"author":{"gitId":"andrefoo"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2023-09-13"},{"lineNumber":147,"author":{"gitId":"andrefoo"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-09-13"},{"lineNumber":148,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":149,"author":{"gitId":"andrefoo"},"content":"        //Part 3. Add functionality to handle user input.","lastModifiedDate":"2023-09-13"},{"lineNumber":150,"author":{"gitId":"andrefoo"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-09-13"},{"lineNumber":151,"author":{"gitId":"andrefoo"},"content":"            handleUserInput();","lastModifiedDate":"2023-09-13"},{"lineNumber":152,"author":{"gitId":"andrefoo"},"content":"        });","lastModifiedDate":"2023-09-13"},{"lineNumber":153,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":154,"author":{"gitId":"andrefoo"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-09-13"},{"lineNumber":155,"author":{"gitId":"andrefoo"},"content":"            handleUserInput();","lastModifiedDate":"2023-09-13"},{"lineNumber":156,"author":{"gitId":"andrefoo"},"content":"        });","lastModifiedDate":"2023-09-13"},{"lineNumber":157,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":158,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":159,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":160,"author":{"gitId":"andrefoo"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2023-09-13"},{"lineNumber":161,"author":{"gitId":"andrefoo"},"content":"     * @param text String containing text to add","lastModifiedDate":"2023-09-13"},{"lineNumber":162,"author":{"gitId":"andrefoo"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2023-09-13"},{"lineNumber":163,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":164,"author":{"gitId":"andrefoo"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2023-09-13"},{"lineNumber":165,"author":{"gitId":"andrefoo"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2023-09-13"},{"lineNumber":166,"author":{"gitId":"andrefoo"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2023-09-13"},{"lineNumber":167,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":168,"author":{"gitId":"andrefoo"},"content":"        return textToAdd;","lastModifiedDate":"2023-09-13"},{"lineNumber":169,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":170,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":171,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":172,"author":{"gitId":"andrefoo"},"content":"     * Processes user input, creates two dialog boxes (one for user input and one for Dre\u0027s response),","lastModifiedDate":"2023-09-16"},{"lineNumber":173,"author":{"gitId":"andrefoo"},"content":"     * and appends them to the dialog container. Clears the user input field after processing.","lastModifiedDate":"2023-09-16"},{"lineNumber":174,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":175,"author":{"gitId":"andrefoo"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-13"},{"lineNumber":176,"author":{"gitId":"andrefoo"},"content":"        String userText \u003d userInput.getText();","lastModifiedDate":"2023-09-13"},{"lineNumber":177,"author":{"gitId":"andrefoo"},"content":"        String dreText \u003d getResponse(userText);","lastModifiedDate":"2023-09-16"},{"lineNumber":178,"author":{"gitId":"andrefoo"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-13"},{"lineNumber":179,"author":{"gitId":"andrefoo"},"content":"                DialogBox.getUserDialog(userText, user),","lastModifiedDate":"2023-09-13"},{"lineNumber":180,"author":{"gitId":"andrefoo"},"content":"                DialogBox.getDreDialog(dreText, dre)","lastModifiedDate":"2023-09-16"},{"lineNumber":181,"author":{"gitId":"andrefoo"},"content":"        );","lastModifiedDate":"2023-09-13"},{"lineNumber":182,"author":{"gitId":"andrefoo"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-13"},{"lineNumber":183,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":184,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":185,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":186,"author":{"gitId":"andrefoo"},"content":"     * Generates a response based on the user input.","lastModifiedDate":"2023-09-16"},{"lineNumber":187,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-16"},{"lineNumber":188,"author":{"gitId":"andrefoo"},"content":"     * @param input the user\u0027s input.","lastModifiedDate":"2023-09-16"},{"lineNumber":189,"author":{"gitId":"andrefoo"},"content":"     * @return a string response from Dre.","lastModifiedDate":"2023-09-16"},{"lineNumber":190,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":191,"author":{"gitId":"andrefoo"},"content":"    @FXML","lastModifiedDate":"2023-09-13"},{"lineNumber":192,"author":{"gitId":"andrefoo"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-13"},{"lineNumber":193,"author":{"gitId":"andrefoo"},"content":"        try {","lastModifiedDate":"2023-09-13"},{"lineNumber":194,"author":{"gitId":"andrefoo"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-09-13"},{"lineNumber":195,"author":{"gitId":"andrefoo"},"content":"            String response \u003d c.execute(tasks, ui, storage);","lastModifiedDate":"2023-09-13"},{"lineNumber":196,"author":{"gitId":"andrefoo"},"content":"            return response;","lastModifiedDate":"2023-09-13"},{"lineNumber":197,"author":{"gitId":"andrefoo"},"content":"        } catch (DreException e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":198,"author":{"gitId":"andrefoo"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-13"},{"lineNumber":199,"author":{"gitId":"andrefoo"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-13"},{"lineNumber":200,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":201,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":202,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":203,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":204,"author":{"gitId":"andrefoo"},"content":"     * The main method serves as the application\u0027s entry point.","lastModifiedDate":"2023-09-09"},{"lineNumber":205,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":206,"author":{"gitId":"andrefoo"},"content":"     * @param args The command-line arguments.","lastModifiedDate":"2023-09-09"},{"lineNumber":207,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":208,"author":{"gitId":"andrefoo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-04"},{"lineNumber":209,"author":{"gitId":"andrefoo"},"content":"        new Dre().run();","lastModifiedDate":"2023-09-13"},{"lineNumber":210,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":211,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"andrefoo":211}},{"path":"src/main/java/dre/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":" * Launcher class to initialize the Dre application.","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":" * Works around classpath issues.","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":"public class Launcher {","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"     * The main entry point for the Dre application.","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"     * @param args The command-line arguments.","lastModifiedDate":"2023-09-16"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"    public static void main(String... args) {","lastModifiedDate":"2023-09-16"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"andrefoo":18}},{"path":"src/main/java/dre/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":" * GUI for Dre using FXML.","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"    private Dre dre \u003d new Dre();","lastModifiedDate":"2023-09-16"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"     * Starts and displays the Dre application GUI.","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"     * @param stage The primary stage for the application.","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"        try {","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDre(dre);","lastModifiedDate":"2023-09-16"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"            stage.show();","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"andrefoo":36}},{"path":"src/main/java/dre/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import dre.gui.DialogBox;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"import dre.ui.Ui;","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-09-16"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"    @FXML","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"    @FXML","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"    @FXML","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"    @FXML","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"    private Dre dre;","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpg\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"    private Image dreImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDre.jpg\"));","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":36,"author":{"gitId":"andrefoo"},"content":"     * Initializes the MainWindow with the appropriate configurations.","lastModifiedDate":"2023-09-16"},{"lineNumber":37,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":38,"author":{"gitId":"andrefoo"},"content":"    @FXML","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"andrefoo"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"andrefoo"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"andrefoo"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-19"},{"lineNumber":42,"author":{"gitId":"andrefoo"},"content":"                DialogBox.getDreDialog(Ui.showWelcome(), dreImage)","lastModifiedDate":"2023-09-19"},{"lineNumber":43,"author":{"gitId":"andrefoo"},"content":"        );","lastModifiedDate":"2023-09-19"},{"lineNumber":44,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":47,"author":{"gitId":"andrefoo"},"content":"     * Sets the instance of Dre to be used by this window.","lastModifiedDate":"2023-09-16"},{"lineNumber":48,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-16"},{"lineNumber":49,"author":{"gitId":"andrefoo"},"content":"     * @param d The instance of Dre to be set.","lastModifiedDate":"2023-09-16"},{"lineNumber":50,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":51,"author":{"gitId":"andrefoo"},"content":"    public void setDre(Dre d) {","lastModifiedDate":"2023-09-16"},{"lineNumber":52,"author":{"gitId":"andrefoo"},"content":"        dre \u003d d;","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":55,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"andrefoo"},"content":"     * Handles user input by creating two dialog boxes: one to echo the user input and the other","lastModifiedDate":"2023-09-16"},{"lineNumber":57,"author":{"gitId":"andrefoo"},"content":"     * to show Dre\u0027s reply. These are appended to the dialog container.","lastModifiedDate":"2023-09-16"},{"lineNumber":58,"author":{"gitId":"andrefoo"},"content":"     * The user input is cleared after processing.","lastModifiedDate":"2023-09-16"},{"lineNumber":59,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":60,"author":{"gitId":"andrefoo"},"content":"    @FXML","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"andrefoo"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"andrefoo"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-13"},{"lineNumber":63,"author":{"gitId":"andrefoo"},"content":"        String response \u003d dre.getResponse(input);","lastModifiedDate":"2023-09-13"},{"lineNumber":64,"author":{"gitId":"andrefoo"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-13"},{"lineNumber":65,"author":{"gitId":"andrefoo"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-13"},{"lineNumber":66,"author":{"gitId":"andrefoo"},"content":"                DialogBox.getDreDialog(response, dreImage)","lastModifiedDate":"2023-09-16"},{"lineNumber":67,"author":{"gitId":"andrefoo"},"content":"        );","lastModifiedDate":"2023-09-13"},{"lineNumber":68,"author":{"gitId":"andrefoo"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-13"},{"lineNumber":69,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":70,"author":{"gitId":"andrefoo"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-09-16"},{"lineNumber":71,"author":{"gitId":"andrefoo"},"content":"            closeWindow();","lastModifiedDate":"2023-09-16"},{"lineNumber":72,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":73,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":74,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":75,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":76,"author":{"gitId":"andrefoo"},"content":"     * Closes the application window after a short delay.","lastModifiedDate":"2023-09-16"},{"lineNumber":77,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":78,"author":{"gitId":"andrefoo"},"content":"    @FXML","lastModifiedDate":"2023-09-16"},{"lineNumber":79,"author":{"gitId":"andrefoo"},"content":"    private void closeWindow() {","lastModifiedDate":"2023-09-16"},{"lineNumber":80,"author":{"gitId":"andrefoo"},"content":"        PauseTransition delay \u003d new PauseTransition(Duration.seconds(1));","lastModifiedDate":"2023-09-16"},{"lineNumber":81,"author":{"gitId":"andrefoo"},"content":"        delay.setOnFinished(event -\u003e javafx.application.Platform.exit());","lastModifiedDate":"2023-09-16"},{"lineNumber":82,"author":{"gitId":"andrefoo"},"content":"        delay.play();","lastModifiedDate":"2023-09-16"},{"lineNumber":83,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":84,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"andrefoo":84}},{"path":"src/main/java/dre/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import dre.storage.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"import dre.ui.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"import dre.task.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"import dre.task.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":" * Represents a command to add a new task.","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"    private final Task NEW_TASK;","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"     * Creates an AddCommand for the specified task.","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"        this.NEW_TASK \u003d task;","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"     * Executes the add command, adding a new task to the task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"     * @param tasks   The current list of tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"     * @param ui      The UI object to show response.","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"     * @param storage The storage object to update stored tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"    public String execute(TaskList tasks,","lastModifiedDate":"2023-09-16"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"                          Ui ui, Storage storage) {","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"        tasks.addTask(NEW_TASK);","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"andrefoo"},"content":"        return ui.generateAddedTaskString(NEW_TASK, tasks.size());","lastModifiedDate":"2023-09-16"},{"lineNumber":35,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"andrefoo":36}},{"path":"src/main/java/dre/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import dre.storage.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"import dre.ui.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"import dre.exception.DreException;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"import dre.task.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":" * Represents an abstract command that can be executed.","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":" * All specific commands should inherit from this class.","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"     * Executes the specific command\u0027s operation.","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"     * @param tasks   The current list of tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"     * @param ui      The UI object to show response.","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"     * @param storage The storage object to update stored tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"     * @throws DreException If there\u0027s an error executing the command.","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DreException;","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"     * Indicates whether this command causes the application to exit.","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"     * @return false by default; should be overridden by commands that cause exit.","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"        return false;","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"andrefoo":32}},{"path":"src/main/java/dre/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import dre.storage.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"import dre.ui.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"import dre.exception.DreException;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"import dre.task.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":" * Represents a command to delete a task.","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"    private final int INDEX;","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"     * Creates a DeleteCommand with the specified task index within the task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"        this.INDEX \u003d index;","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"     * Executes the delete command, removing a task from the task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"     * @param tasks   The current list of tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"     * @param ui      The UI object to show response.","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"     * @param storage The storage object to update stored tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"    public String execute(TaskList tasks,","lastModifiedDate":"2023-09-16"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"                          Ui ui, Storage storage) {","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"andrefoo"},"content":"            tasks.deleteTask(INDEX);","lastModifiedDate":"2023-09-16"},{"lineNumber":35,"author":{"gitId":"andrefoo"},"content":"            return ui.generateDeletedTaskString(tasks.getTask(INDEX));","lastModifiedDate":"2023-09-16"},{"lineNumber":36,"author":{"gitId":"andrefoo"},"content":"        } catch (DreException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"andrefoo"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"andrefoo"},"content":"            return ui.generateErrorString(e.getMessage());","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"andrefoo":41}},{"path":"src/main/java/dre/command/EditCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.command;","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import dre.exception.DreException;","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"import dre.storage.Storage;","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"import dre.task.Deadline;","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"import dre.task.Event;","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"import dre.ui.Ui;","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"import dre.task.Task;","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":"import dre.task.TaskList;","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"    private final int TASK_NUMBER;","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"    private String field;","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"    private String newValue;","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"    public EditCommand(int TASK_NUMBER, String field, String newValue) {","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"        this.TASK_NUMBER \u003d TASK_NUMBER;","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"        this.field \u003d field;","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"        this.newValue \u003d newValue;","lastModifiedDate":"2023-09-19"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-09-19"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DreException {","lastModifiedDate":"2023-09-19"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"        Task task \u003d tasks.getTask(TASK_NUMBER);","lastModifiedDate":"2023-09-19"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"        switch (field) {","lastModifiedDate":"2023-09-19"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"            case \"description\":","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"                task.editDescription(newValue);","lastModifiedDate":"2023-09-19"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"                break;","lastModifiedDate":"2023-09-19"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"            case \"bydate\":","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"                ((Deadline) task).editByDate(newValue);","lastModifiedDate":"2023-09-19"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"                break;","lastModifiedDate":"2023-09-19"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"            case \"fromdate\":","lastModifiedDate":"2023-09-19"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"                ((Event) task).editFromDate(newValue);","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"andrefoo"},"content":"                break;","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"andrefoo"},"content":"            case \"todate\":","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"andrefoo"},"content":"                ((Event) task).editToDate(newValue);","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"andrefoo"},"content":"                break;","lastModifiedDate":"2023-09-19"},{"lineNumber":38,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":39,"author":{"gitId":"andrefoo"},"content":"        return ui.generateEditSuccessMessage(task);","lastModifiedDate":"2023-09-19"},{"lineNumber":40,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":41,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"andrefoo":41}},{"path":"src/main/java/dre/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import dre.storage.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"import dre.ui.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"import dre.task.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":" * Represents a command to exit the application.","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"     * Executes the exit command, showing goodbye message and saving tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"     * @param tasks   The current list of tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"     * @param ui      The UI object to show response.","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"     * @param storage The storage object to save tasks before exiting.","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"    public String execute(TaskList tasks,","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"                          Ui ui, Storage storage) {","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"        return ui.showGoodbye();","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"     * Indicates that this command causes the application to exit.","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"     * @return true as this command exits the application.","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"        return true;","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"andrefoo":34}},{"path":"src/main/java/dre/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.command;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import dre.exception.DreException;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"import dre.storage.Storage;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"import dre.task.TaskList;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"import dre.ui.Ui;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":" * Represents a command to find and list all tasks that contain a given keyword.","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":" * This command is intended to help users search for specific tasks within their list.","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"    private final String KEYWORD;","lastModifiedDate":"2023-09-16"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"     * Creates a new FindCommand with the specified keyword.","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"     * @param keyword The keyword used to search for tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"        this.KEYWORD \u003d keyword;","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"     * Executes the find task command.","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"     * This method searches for tasks containing the keyword and displays them to the user.","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"     * @param tasks The list of tasks to search within.","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"     * @param ui The UI object used for user interactions.","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"     * @param storage The storage object, though not directly used in this command.","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"     * @throws DreException If there are issues during the command execution.","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"andrefoo"},"content":"    public String execute(TaskList tasks,","lastModifiedDate":"2023-09-16"},{"lineNumber":35,"author":{"gitId":"andrefoo"},"content":"                          Ui ui, Storage storage) throws DreException {","lastModifiedDate":"2023-09-16"},{"lineNumber":36,"author":{"gitId":"andrefoo"},"content":"        TaskList foundTasks \u003d tasks.findTasksByKeyword(KEYWORD);","lastModifiedDate":"2023-09-16"},{"lineNumber":37,"author":{"gitId":"andrefoo"},"content":"        return ui.generateFoundTasksString(foundTasks);","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"andrefoo":39}},{"path":"src/main/java/dre/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import dre.storage.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"import dre.ui.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"import dre.exception.DreException;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"import dre.task.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":" * Represents a command to list all tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"     * Executes the list command, displaying all tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"     * @param tasks   The current list of tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"     * @param ui      The UI object to show the list of tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"     * @param storage The storage object (unused for this command).","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"    public String execute(TaskList tasks,","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"                          Ui ui, Storage storage) {","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"            return ui.generateTasksString(tasks);","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"        } catch (DreException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"            return ui.generateErrorString(e.getMessage());","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"andrefoo":28}},{"path":"src/main/java/dre/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import dre.storage.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"import dre.ui.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"import dre.task.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"import dre.exception.DreException;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":" * Represents a command to mark a task as done.","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"    private final int TASK_INDEX;","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"     * Creates a MarkCommand with the specified task index.","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"     * @param index The index of the task to be marked.","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"        this.TASK_INDEX \u003d index;","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"     * Executes the mark command, marking a task as done.","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"     * @param tasks   The current list of tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"     * @param ui      The UI object to show response.","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"     * @param storage The storage object to update stored tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"     * @throws DreException If there\u0027s an error marking the task.","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DreException {","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"andrefoo"},"content":"            tasks.mark(TASK_INDEX);","lastModifiedDate":"2023-09-16"},{"lineNumber":35,"author":{"gitId":"andrefoo"},"content":"            return ui.generateMarkedTaskString(tasks.getTask(TASK_INDEX));","lastModifiedDate":"2023-09-16"},{"lineNumber":36,"author":{"gitId":"andrefoo"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"andrefoo"},"content":"            return ui.generateErrorString(\"Invalid task index.\");","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"andrefoo":40}},{"path":"src/main/java/dre/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import dre.storage.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"import dre.ui.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"import dre.exception.DreException;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"import dre.task.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":" * Represents a command to unmark a task.","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"    private final int TASK_INDEX;","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"     * Creates an UnmarkCommand with the specified task index.","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"     * @param index The index of the task to be unmarked.","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"        this.TASK_INDEX \u003d index;","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"     * Executes the unmark command, unmarking a task.","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"     * @param tasks   The current list of tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"     * @param ui      The UI object to show response.","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"     * @param storage The storage object to update stored tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"            tasks.unmark(TASK_INDEX);","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"andrefoo"},"content":"            return ui.generateUnmarkedTaskString(tasks.getTask(TASK_INDEX));","lastModifiedDate":"2023-09-16"},{"lineNumber":35,"author":{"gitId":"andrefoo"},"content":"        } catch (DreException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"andrefoo"},"content":"            return ui.generateErrorString(e.getMessage());","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"andrefoo":39}},{"path":"src/main/java/dre/exception/DreException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.exception;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":" * Represents an exception specific to the Dre chatbot application.","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"public class DreException extends Exception {","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":"     * Constructs a new DreException with the specified detail message.","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"     * @param message The detail message (which is saved for later retrieval by the {@link #getMessage()} method).","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"    public DreException(String message) {","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"        super(message);","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"andrefoo":16}},{"path":"src/main/java/dre/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.gui;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"import dre.MainWindow;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":" * A custom control using FXML.","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"    @FXML","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"    @FXML","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"     * Creates a new instance of the DialogBox with specified text and image.","lastModifiedDate":"2023-09-16"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-16"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"     * @param text The content for the dialog.","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"     * @param img The image to be used as a display picture.","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":35,"author":{"gitId":"andrefoo"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"andrefoo"},"content":"        try {","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"andrefoo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"andrefoo"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"andrefoo"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"andrefoo"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"andrefoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"andrefoo"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"andrefoo"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"andrefoo"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"andrefoo"},"content":"     * Adjusts the layout of the dialog box by swapping the positions of the ImageView and text.","lastModifiedDate":"2023-09-16"},{"lineNumber":51,"author":{"gitId":"andrefoo"},"content":"     * Places the ImageView to the left and the text to the right.","lastModifiedDate":"2023-09-16"},{"lineNumber":52,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"andrefoo"},"content":"    private void flip() {","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"andrefoo"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-13"},{"lineNumber":55,"author":{"gitId":"andrefoo"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"andrefoo"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"andrefoo"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":60,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":61,"author":{"gitId":"andrefoo"},"content":"     * Creates a DialogBox for user\u0027s dialog.","lastModifiedDate":"2023-09-16"},{"lineNumber":62,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-16"},{"lineNumber":63,"author":{"gitId":"andrefoo"},"content":"     * @param text The content of the user\u0027s dialog.","lastModifiedDate":"2023-09-16"},{"lineNumber":64,"author":{"gitId":"andrefoo"},"content":"     * @param img The image to represent the user.","lastModifiedDate":"2023-09-16"},{"lineNumber":65,"author":{"gitId":"andrefoo"},"content":"     * @return A DialogBox tailored for the user.","lastModifiedDate":"2023-09-16"},{"lineNumber":66,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":67,"author":{"gitId":"andrefoo"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-13"},{"lineNumber":68,"author":{"gitId":"andrefoo"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-13"},{"lineNumber":69,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":70,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":71,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":72,"author":{"gitId":"andrefoo"},"content":"     * Creates a DialogBox for Dre\u0027s dialog.","lastModifiedDate":"2023-09-16"},{"lineNumber":73,"author":{"gitId":"andrefoo"},"content":"     * The produced DialogBox will have its layout adjusted such that Dre\u0027s image is on the left.","lastModifiedDate":"2023-09-16"},{"lineNumber":74,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-16"},{"lineNumber":75,"author":{"gitId":"andrefoo"},"content":"     * @param text The content of Dre\u0027s dialog.","lastModifiedDate":"2023-09-16"},{"lineNumber":76,"author":{"gitId":"andrefoo"},"content":"     * @param img The image to represent Dre.","lastModifiedDate":"2023-09-16"},{"lineNumber":77,"author":{"gitId":"andrefoo"},"content":"     * @return A DialogBox tailored for Dre.","lastModifiedDate":"2023-09-16"},{"lineNumber":78,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":79,"author":{"gitId":"andrefoo"},"content":"    public static DialogBox getDreDialog(String text, Image img) {","lastModifiedDate":"2023-09-16"},{"lineNumber":80,"author":{"gitId":"andrefoo"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-13"},{"lineNumber":81,"author":{"gitId":"andrefoo"},"content":"        db.flip();","lastModifiedDate":"2023-09-13"},{"lineNumber":82,"author":{"gitId":"andrefoo"},"content":"        return db;","lastModifiedDate":"2023-09-13"},{"lineNumber":83,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":84,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"andrefoo":84}},{"path":"src/main/java/dre/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.parser;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"import dre.command.*;","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"import dre.task.Task;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":"import dre.task.ToDo;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":"import dre.task.Event;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"import dre.task.Deadline;","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"import dre.exception.DreException;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":" * Represents a parser that makes sense of user input commands.","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"public class Parser {","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"     * Parses a given line and returns a Task object.","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"     * @param line The string representation of the task.","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"     * @return The corresponding Task object, or null if invalid line.","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"    public static Task parseTask(String line) {","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"        assert line !\u003d null \u0026\u0026 !line.trim().isEmpty() : \"Input line for task parsing is empty or null\";","lastModifiedDate":"2023-09-16"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"        String type \u003d line.substring(0, 1);","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"        boolean isDone \u003d line.charAt(2) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"        String description;","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"        Task task \u003d null;","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"        switch (type) {","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"            case \"T\":","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"andrefoo"},"content":"                String[] todoInfo \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"andrefoo"},"content":"                task \u003d new ToDo(todoInfo[2]);","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"andrefoo"},"content":"                break;","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"andrefoo"},"content":"            case \"D\":","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"andrefoo"},"content":"                String[] deadlineInfo \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"andrefoo"},"content":"                description \u003d deadlineInfo[2].trim();","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"andrefoo"},"content":"                LocalDate byDate \u003d parseDate(deadlineInfo[3].trim());","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"andrefoo"},"content":"                task \u003d new Deadline(description, byDate);","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"andrefoo"},"content":"                break;","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"andrefoo"},"content":"            case \"E\":","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"andrefoo"},"content":"                String[] eventInfo \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"andrefoo"},"content":"                description \u003d eventInfo[2];","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"andrefoo"},"content":"                LocalDate fromDate \u003d parseDate(eventInfo[3]);","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"andrefoo"},"content":"                LocalDate toDate \u003d parseDate(eventInfo[4]);","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"andrefoo"},"content":"                task \u003d new Event(description, fromDate, toDate);","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"andrefoo"},"content":"        if (isDone) {","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"andrefoo"},"content":"            task.done();","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"andrefoo"},"content":"        assert task !\u003d null : \"Failed to parse task from line\";","lastModifiedDate":"2023-09-16"},{"lineNumber":56,"author":{"gitId":"andrefoo"},"content":"        return task; //instead of adding to list, just return the dre.task.","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"andrefoo"},"content":"     * Parses a date string into a LocalDate object.","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"andrefoo"},"content":"     * @param dateString The date in \"yyyy-MM-dd\" format.","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"andrefoo"},"content":"     * @return The LocalDate representation of the dateString.","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"andrefoo"},"content":"    private static LocalDate parseDate(String dateString) {","lastModifiedDate":"2023-09-04"},{"lineNumber":66,"author":{"gitId":"andrefoo"},"content":"        assert dateString !\u003d null \u0026\u0026 !dateString.trim().isEmpty() : \"Input date string is empty or null\";","lastModifiedDate":"2023-09-16"},{"lineNumber":67,"author":{"gitId":"andrefoo"},"content":"        DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-09-09"},{"lineNumber":68,"author":{"gitId":"andrefoo"},"content":"        LocalDate parsedDate \u003d LocalDate.parse(dateString, inputFormatter);","lastModifiedDate":"2023-09-16"},{"lineNumber":69,"author":{"gitId":"andrefoo"},"content":"        return parsedDate;","lastModifiedDate":"2023-09-16"},{"lineNumber":70,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":71,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":72,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":73,"author":{"gitId":"andrefoo"},"content":"     * Parses the user input to determine which command to execute.","lastModifiedDate":"2023-09-09"},{"lineNumber":74,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":75,"author":{"gitId":"andrefoo"},"content":"     * @param input The raw user input string.","lastModifiedDate":"2023-09-09"},{"lineNumber":76,"author":{"gitId":"andrefoo"},"content":"     * @return The corresponding Command object.","lastModifiedDate":"2023-09-09"},{"lineNumber":77,"author":{"gitId":"andrefoo"},"content":"     * @throws DreException If the input command is unknown or invalid.","lastModifiedDate":"2023-09-09"},{"lineNumber":78,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":79,"author":{"gitId":"andrefoo"},"content":"    public static Command parse(String input) throws DreException {","lastModifiedDate":"2023-09-04"},{"lineNumber":80,"author":{"gitId":"andrefoo"},"content":"        String[] words \u003d input.split(\" \", 2);","lastModifiedDate":"2023-09-09"},{"lineNumber":81,"author":{"gitId":"andrefoo"},"content":"        String commandWord \u003d words[0];","lastModifiedDate":"2023-09-04"},{"lineNumber":82,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":83,"author":{"gitId":"andrefoo"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-09-04"},{"lineNumber":84,"author":{"gitId":"andrefoo"},"content":"            case \"bye\":","lastModifiedDate":"2023-09-04"},{"lineNumber":85,"author":{"gitId":"andrefoo"},"content":"                return new ExitCommand();","lastModifiedDate":"2023-09-04"},{"lineNumber":86,"author":{"gitId":"andrefoo"},"content":"            case \"list\":","lastModifiedDate":"2023-09-04"},{"lineNumber":87,"author":{"gitId":"andrefoo"},"content":"                return new ListCommand();","lastModifiedDate":"2023-09-04"},{"lineNumber":88,"author":{"gitId":"andrefoo"},"content":"            case \"mark\":","lastModifiedDate":"2023-09-04"},{"lineNumber":89,"author":{"gitId":"andrefoo"},"content":"                if (words.length \u003c 2) {","lastModifiedDate":"2023-09-04"},{"lineNumber":90,"author":{"gitId":"andrefoo"},"content":"                    throw new DreException(\"Please specify the task index to mark.\");","lastModifiedDate":"2023-09-09"},{"lineNumber":91,"author":{"gitId":"andrefoo"},"content":"                }","lastModifiedDate":"2023-09-04"},{"lineNumber":92,"author":{"gitId":"andrefoo"},"content":"                return new MarkCommand(Integer.parseInt(words[1].trim()));","lastModifiedDate":"2023-09-04"},{"lineNumber":93,"author":{"gitId":"andrefoo"},"content":"            case \"unmark\":","lastModifiedDate":"2023-09-04"},{"lineNumber":94,"author":{"gitId":"andrefoo"},"content":"                if (words.length \u003c 2) {","lastModifiedDate":"2023-09-04"},{"lineNumber":95,"author":{"gitId":"andrefoo"},"content":"                    throw new DreException(\"Please specify the task index to unmark.\");","lastModifiedDate":"2023-09-09"},{"lineNumber":96,"author":{"gitId":"andrefoo"},"content":"                }","lastModifiedDate":"2023-09-04"},{"lineNumber":97,"author":{"gitId":"andrefoo"},"content":"                return new UnmarkCommand(Integer.parseInt(words[1].trim()));","lastModifiedDate":"2023-09-04"},{"lineNumber":98,"author":{"gitId":"andrefoo"},"content":"            case \"delete\":","lastModifiedDate":"2023-09-04"},{"lineNumber":99,"author":{"gitId":"andrefoo"},"content":"                if (words.length \u003c 2) {","lastModifiedDate":"2023-09-04"},{"lineNumber":100,"author":{"gitId":"andrefoo"},"content":"                    throw new DreException(\"Please specify the task index to delete.\");","lastModifiedDate":"2023-09-09"},{"lineNumber":101,"author":{"gitId":"andrefoo"},"content":"                }","lastModifiedDate":"2023-09-04"},{"lineNumber":102,"author":{"gitId":"andrefoo"},"content":"                return new DeleteCommand(Integer.parseInt(words[1].trim()));","lastModifiedDate":"2023-09-04"},{"lineNumber":103,"author":{"gitId":"andrefoo"},"content":"            case \"todo\":","lastModifiedDate":"2023-09-04"},{"lineNumber":104,"author":{"gitId":"andrefoo"},"content":"                if (words.length \u003c 2 || words[1].trim().isEmpty()) {","lastModifiedDate":"2023-09-04"},{"lineNumber":105,"author":{"gitId":"andrefoo"},"content":"                    throw new DreException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-09-04"},{"lineNumber":106,"author":{"gitId":"andrefoo"},"content":"                }","lastModifiedDate":"2023-09-04"},{"lineNumber":107,"author":{"gitId":"andrefoo"},"content":"                return new AddCommand(new ToDo(words[1].trim()));","lastModifiedDate":"2023-09-04"},{"lineNumber":108,"author":{"gitId":"andrefoo"},"content":"            case \"deadline\":","lastModifiedDate":"2023-09-09"},{"lineNumber":109,"author":{"gitId":"andrefoo"},"content":"                if (words.length \u003c 2 || words[1].trim().isEmpty()) {","lastModifiedDate":"2023-09-09"},{"lineNumber":110,"author":{"gitId":"andrefoo"},"content":"                    throw new DreException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-09-09"},{"lineNumber":111,"author":{"gitId":"andrefoo"},"content":"                }","lastModifiedDate":"2023-09-09"},{"lineNumber":112,"author":{"gitId":"andrefoo"},"content":"                String[] deadlineParts \u003d words[1].split(\"/by\", 2);","lastModifiedDate":"2023-09-09"},{"lineNumber":113,"author":{"gitId":"andrefoo"},"content":"                if (deadlineParts.length \u003c 2) {","lastModifiedDate":"2023-09-09"},{"lineNumber":114,"author":{"gitId":"andrefoo"},"content":"                    throw new DreException(\"Please specify the date using /by.\");","lastModifiedDate":"2023-09-09"},{"lineNumber":115,"author":{"gitId":"andrefoo"},"content":"                }","lastModifiedDate":"2023-09-09"},{"lineNumber":116,"author":{"gitId":"andrefoo"},"content":"                LocalDate byDate;","lastModifiedDate":"2023-09-09"},{"lineNumber":117,"author":{"gitId":"andrefoo"},"content":"                try {","lastModifiedDate":"2023-09-09"},{"lineNumber":118,"author":{"gitId":"andrefoo"},"content":"                    byDate \u003d LocalDate.parse(deadlineParts[1].trim());","lastModifiedDate":"2023-09-09"},{"lineNumber":119,"author":{"gitId":"andrefoo"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":120,"author":{"gitId":"andrefoo"},"content":"                    throw new DreException(\"Please use the correct date format: YYYY-MM-DD.\");","lastModifiedDate":"2023-09-09"},{"lineNumber":121,"author":{"gitId":"andrefoo"},"content":"                }","lastModifiedDate":"2023-09-09"},{"lineNumber":122,"author":{"gitId":"andrefoo"},"content":"                return new AddCommand(new Deadline(deadlineParts[0].trim(), byDate));","lastModifiedDate":"2023-09-09"},{"lineNumber":123,"author":{"gitId":"andrefoo"},"content":"            case \"event\":","lastModifiedDate":"2023-09-09"},{"lineNumber":124,"author":{"gitId":"andrefoo"},"content":"                if (words.length \u003c 2 || words[1].trim().isEmpty()) {","lastModifiedDate":"2023-09-09"},{"lineNumber":125,"author":{"gitId":"andrefoo"},"content":"                    throw new DreException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2023-09-09"},{"lineNumber":126,"author":{"gitId":"andrefoo"},"content":"                }","lastModifiedDate":"2023-09-09"},{"lineNumber":127,"author":{"gitId":"andrefoo"},"content":"                String[] eventParts \u003d words[1].split(\"/from | /to \", 3);","lastModifiedDate":"2023-09-09"},{"lineNumber":128,"author":{"gitId":"andrefoo"},"content":"                if (eventParts.length \u003c 3) {","lastModifiedDate":"2023-09-09"},{"lineNumber":129,"author":{"gitId":"andrefoo"},"content":"                    throw new DreException(\"Please specify the date range using /from and /to.\");","lastModifiedDate":"2023-09-09"},{"lineNumber":130,"author":{"gitId":"andrefoo"},"content":"                }","lastModifiedDate":"2023-09-09"},{"lineNumber":131,"author":{"gitId":"andrefoo"},"content":"                LocalDate fromDate, toDate;","lastModifiedDate":"2023-09-09"},{"lineNumber":132,"author":{"gitId":"andrefoo"},"content":"                try {","lastModifiedDate":"2023-09-09"},{"lineNumber":133,"author":{"gitId":"andrefoo"},"content":"                    fromDate \u003d LocalDate.parse(eventParts[1].trim());","lastModifiedDate":"2023-09-09"},{"lineNumber":134,"author":{"gitId":"andrefoo"},"content":"                    toDate \u003d LocalDate.parse(eventParts[2].trim());","lastModifiedDate":"2023-09-09"},{"lineNumber":135,"author":{"gitId":"andrefoo"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":136,"author":{"gitId":"andrefoo"},"content":"                    throw new DreException(\"Please use the correct date format: YYYY-MM-DD.\");","lastModifiedDate":"2023-09-09"},{"lineNumber":137,"author":{"gitId":"andrefoo"},"content":"                }","lastModifiedDate":"2023-09-09"},{"lineNumber":138,"author":{"gitId":"andrefoo"},"content":"                return new AddCommand(new Event(eventParts[0].trim(), fromDate, toDate));","lastModifiedDate":"2023-09-09"},{"lineNumber":139,"author":{"gitId":"andrefoo"},"content":"            case \"find\":","lastModifiedDate":"2023-09-09"},{"lineNumber":140,"author":{"gitId":"andrefoo"},"content":"                if (words.length \u003c 2 || words[1].isEmpty()) {","lastModifiedDate":"2023-09-09"},{"lineNumber":141,"author":{"gitId":"andrefoo"},"content":"                    throw new DreException(\"The search keyword cannot be empty.\");","lastModifiedDate":"2023-09-09"},{"lineNumber":142,"author":{"gitId":"andrefoo"},"content":"                }","lastModifiedDate":"2023-09-09"},{"lineNumber":143,"author":{"gitId":"andrefoo"},"content":"                return new FindCommand(words[1]);","lastModifiedDate":"2023-09-09"},{"lineNumber":144,"author":{"gitId":"andrefoo"},"content":"            case \"edit\":","lastModifiedDate":"2023-09-19"},{"lineNumber":145,"author":{"gitId":"andrefoo"},"content":"                if (words.length \u003c 2 || words[1].trim().isEmpty()) {","lastModifiedDate":"2023-09-19"},{"lineNumber":146,"author":{"gitId":"andrefoo"},"content":"                    throw new DreException(\"Please indicate which task you are editing.\");","lastModifiedDate":"2023-09-19"},{"lineNumber":147,"author":{"gitId":"andrefoo"},"content":"                }","lastModifiedDate":"2023-09-19"},{"lineNumber":148,"author":{"gitId":"andrefoo"},"content":"                int taskNumber;","lastModifiedDate":"2023-09-19"},{"lineNumber":149,"author":{"gitId":"andrefoo"},"content":"                try {","lastModifiedDate":"2023-09-19"},{"lineNumber":150,"author":{"gitId":"andrefoo"},"content":"                    taskNumber \u003d Integer.parseInt(words[1].split(\" \")[0]);","lastModifiedDate":"2023-09-19"},{"lineNumber":151,"author":{"gitId":"andrefoo"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-19"},{"lineNumber":152,"author":{"gitId":"andrefoo"},"content":"                    throw new DreException(\"Please indicate a task index using numbers.\");","lastModifiedDate":"2023-09-19"},{"lineNumber":153,"author":{"gitId":"andrefoo"},"content":"                }","lastModifiedDate":"2023-09-19"},{"lineNumber":154,"author":{"gitId":"andrefoo"},"content":"                String[] editParts \u003d words[1].split(\" \", 3);","lastModifiedDate":"2023-09-19"},{"lineNumber":155,"author":{"gitId":"andrefoo"},"content":"                if (editParts.length !\u003d 3) {","lastModifiedDate":"2023-09-19"},{"lineNumber":156,"author":{"gitId":"andrefoo"},"content":"                    throw new DreException(\"Use this format:\\n edit {task index} \" +","lastModifiedDate":"2023-09-19"},{"lineNumber":157,"author":{"gitId":"andrefoo"},"content":"                            \"{description / fromDate / toDate / byDate} {new description / yyyy-MM-dd\");","lastModifiedDate":"2023-09-19"},{"lineNumber":158,"author":{"gitId":"andrefoo"},"content":"                }","lastModifiedDate":"2023-09-19"},{"lineNumber":159,"author":{"gitId":"andrefoo"},"content":"                String field \u003d editParts[1];","lastModifiedDate":"2023-09-19"},{"lineNumber":160,"author":{"gitId":"andrefoo"},"content":"                String newValue \u003d editParts[2];","lastModifiedDate":"2023-09-19"},{"lineNumber":161,"author":{"gitId":"andrefoo"},"content":"                return new EditCommand(taskNumber, field, newValue);","lastModifiedDate":"2023-09-19"},{"lineNumber":162,"author":{"gitId":"andrefoo"},"content":"            default:","lastModifiedDate":"2023-09-04"},{"lineNumber":163,"author":{"gitId":"andrefoo"},"content":"                throw new DreException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-04"},{"lineNumber":164,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":165,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":166,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":167,"author":{"gitId":"andrefoo"},"content":"    public static void main(String... args) {","lastModifiedDate":"2023-09-19"},{"lineNumber":168,"author":{"gitId":"andrefoo"},"content":"        try {","lastModifiedDate":"2023-09-19"},{"lineNumber":169,"author":{"gitId":"andrefoo"},"content":"            Command command \u003d parse(\"edit 1 description something\");","lastModifiedDate":"2023-09-19"},{"lineNumber":170,"author":{"gitId":"andrefoo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-19"},{"lineNumber":171,"author":{"gitId":"andrefoo"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-19"},{"lineNumber":172,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":173,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":174,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"andrefoo":174}},{"path":"src/main/java/dre/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import java.io.*;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"import java.util.List;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"import dre.task.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"import dre.parser.Parser;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"import dre.task.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":"import dre.exception.DreException;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":" * Manages loading and saving of tasks to a file.","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"public class Storage {","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"    private final String DATA_FILE_PATH;","lastModifiedDate":"2023-09-16"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"     * Creates a new storage manager.","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"     * @param filePath The path to the file for saving/loading tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"        this.DATA_FILE_PATH \u003d filePath;","lastModifiedDate":"2023-09-16"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"     * Loads tasks from the file.","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"     * @return A list of tasks loaded from the file.","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"    public List\u003cTask\u003e load() {","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"andrefoo"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"andrefoo"},"content":"            File file \u003d new File(DATA_FILE_PATH);","lastModifiedDate":"2023-09-16"},{"lineNumber":36,"author":{"gitId":"andrefoo"},"content":"            if (file.exists()) {","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"andrefoo"},"content":"                try (BufferedReader reader \u003d new BufferedReader(new FileReader(DATA_FILE_PATH))) {","lastModifiedDate":"2023-09-16"},{"lineNumber":38,"author":{"gitId":"andrefoo"},"content":"                    String line;","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"andrefoo"},"content":"                    while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"andrefoo"},"content":"                        Task task \u003d Parser.parseTask(line);","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"andrefoo"},"content":"                        if (task !\u003d null) list.add(task);","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"andrefoo"},"content":"                    }","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"andrefoo"},"content":"                }","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"andrefoo"},"content":"            } else {","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"andrefoo"},"content":"                System.out.println(\"No saved tasks found.\");","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"andrefoo"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"andrefoo"},"content":"        } catch (IOException | SecurityException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"andrefoo"},"content":"            System.out.println(\"Error saving tasks to the file.\");","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"andrefoo"},"content":"            throw new RuntimeException(","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"andrefoo"},"content":"                    \"This should never happen, I know this file exists\", e);","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"andrefoo"},"content":"        return list;","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"andrefoo"},"content":"     * Saves the given list of tasks to the file.","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"andrefoo"},"content":"     * @param taskList The list of tasks to save.","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"andrefoo"},"content":"    public void save(TaskList taskList) {","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"andrefoo"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(DATA_FILE_PATH))) {","lastModifiedDate":"2023-09-16"},{"lineNumber":62,"author":{"gitId":"andrefoo"},"content":"            for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {","lastModifiedDate":"2023-09-16"},{"lineNumber":63,"author":{"gitId":"andrefoo"},"content":"                //TaskList indexing starts from 1.","lastModifiedDate":"2023-09-16"},{"lineNumber":64,"author":{"gitId":"andrefoo"},"content":"                Task task \u003d taskList.getTask(i);","lastModifiedDate":"2023-09-16"},{"lineNumber":65,"author":{"gitId":"andrefoo"},"content":"                writer.write(task.fileSaveFormat());","lastModifiedDate":"2023-09-04"},{"lineNumber":66,"author":{"gitId":"andrefoo"},"content":"                writer.newLine();","lastModifiedDate":"2023-09-04"},{"lineNumber":67,"author":{"gitId":"andrefoo"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":68,"author":{"gitId":"andrefoo"},"content":"        } catch (IOException | DreException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"andrefoo"},"content":"            System.out.println(\"Error saving tasks to the file.\");","lastModifiedDate":"2023-09-04"},{"lineNumber":70,"author":{"gitId":"andrefoo"},"content":"            throw new RuntimeException(","lastModifiedDate":"2023-09-09"},{"lineNumber":71,"author":{"gitId":"andrefoo"},"content":"                    \"This should never happen, I know this file exists\", e);","lastModifiedDate":"2023-09-09"},{"lineNumber":72,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":74,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"andrefoo":74}},{"path":"src/main/java/dre/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.task;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import dre.exception.DreException;","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"    private LocalDate byDate;","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"     * Creates a new deadline task.","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"     * @param task The description of the task.","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"     * @param by The deadline of the task.","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"    public Deadline(String task, LocalDate by) {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"        super(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"        this.byDate \u003d by;","lastModifiedDate":"2023-09-19"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"     * Provides a formatted string for saving this deadline task to a file.","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"     * @return A formatted string suitable for file storage.","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"    public String fileSaveFormat() {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"        return \"D|\" + super.fileSaveFormat() + \"|\" +","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"andrefoo"},"content":"                byDate.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"andrefoo"},"content":"     * Converts the task to a string format for display.","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"andrefoo"},"content":"     * @return A formatted string representing this task.","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"andrefoo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"andrefoo"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formatDate(byDate) + \")\";","lastModifiedDate":"2023-09-19"},{"lineNumber":45,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"andrefoo"},"content":"     * Formats the date for display purposes.","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"andrefoo"},"content":"     * @param date The date to be formatted.","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"andrefoo"},"content":"     * @return A string representing the formatted date in MMM dd yyyy format.","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"andrefoo"},"content":"    private String formatDate(LocalDate date) {","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"andrefoo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"andrefoo"},"content":"        return date.format(formatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"andrefoo"},"content":"    public void editByDate(String newByDate) throws DreException {","lastModifiedDate":"2023-09-19"},{"lineNumber":59,"author":{"gitId":"andrefoo"},"content":"        try {","lastModifiedDate":"2023-09-19"},{"lineNumber":60,"author":{"gitId":"andrefoo"},"content":"            LocalDate parsedDate \u003d LocalDate.parse(newByDate);","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"andrefoo"},"content":"            this.byDate \u003d parsedDate;","lastModifiedDate":"2023-09-19"},{"lineNumber":62,"author":{"gitId":"andrefoo"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-19"},{"lineNumber":63,"author":{"gitId":"andrefoo"},"content":"            throw new DreException(\"Please provide a valid date in the format yyyy-MM-dd.\");","lastModifiedDate":"2023-09-19"},{"lineNumber":64,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":65,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":66,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"andrefoo":66}},{"path":"src/main/java/dre/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.task;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import dre.exception.DreException;","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":" * Represents an event task.","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"    private LocalDate fromDate;","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"    private LocalDate toDate;","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"    public Event(String task, LocalDate fromDate, LocalDate toDate) {","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"        super(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"        this.fromDate \u003d fromDate;","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"        this.toDate \u003d toDate;","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"     * Provides a formatted string for saving this event task to a file.","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"     * @return A formatted string suitable for file storage.","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"    public String fileSaveFormat() {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"        return \"E|\" + super.fileSaveFormat() + \"|\" +","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"                fromDate.format(formatter) + \"|\" + toDate.format(formatter);","lastModifiedDate":"2023-09-19"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"andrefoo"},"content":"     * Converts the event task to a string format for display.","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"andrefoo"},"content":"     * @return A formatted string representing this task.","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"andrefoo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"andrefoo"},"content":"        return \"[E]\" + super.toString() +","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"andrefoo"},"content":"                \" (from: \" + formatDate(fromDate) + \" to: \" + formatDate(toDate) + \")\";","lastModifiedDate":"2023-09-19"},{"lineNumber":42,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"andrefoo"},"content":"     * Formats the date for display purposes.","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"andrefoo"},"content":"     * @param date The date to be formatted.","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"andrefoo"},"content":"     * @return A string representing the formatted date.","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"andrefoo"},"content":"    private String formatDate(LocalDate date) {","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"andrefoo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"andrefoo"},"content":"        return date.format(formatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"andrefoo"},"content":"    public void editFromDate(String newFromDate) throws DreException {","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"andrefoo"},"content":"        LocalDate newFrom \u003d LocalDate.parse(newFromDate);","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"andrefoo"},"content":"        if (newFrom.isAfter(this.toDate)) {","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"andrefoo"},"content":"            throw new DreException(\"The \u0027from date\u0027 cannot be after the \u0027to date\u0027.\");","lastModifiedDate":"2023-09-19"},{"lineNumber":59,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":60,"author":{"gitId":"andrefoo"},"content":"        this.fromDate \u003d newFrom;","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":62,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":63,"author":{"gitId":"andrefoo"},"content":"    public void editToDate(String newToDate) throws DreException {","lastModifiedDate":"2023-09-19"},{"lineNumber":64,"author":{"gitId":"andrefoo"},"content":"        LocalDate newTo \u003d LocalDate.parse(newToDate);","lastModifiedDate":"2023-09-19"},{"lineNumber":65,"author":{"gitId":"andrefoo"},"content":"        if (newTo.isBefore(this.fromDate)) {","lastModifiedDate":"2023-09-19"},{"lineNumber":66,"author":{"gitId":"andrefoo"},"content":"            throw new DreException(\"The \u0027to date\u0027 cannot be before the \u0027from date\u0027.\");","lastModifiedDate":"2023-09-19"},{"lineNumber":67,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":68,"author":{"gitId":"andrefoo"},"content":"        this.toDate \u003d newTo;","lastModifiedDate":"2023-09-19"},{"lineNumber":69,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":70,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"andrefoo":70}},{"path":"src/main/java/dre/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.task;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":" * Represents a generic task.","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":"    private String description;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":"    private boolean isDone;","lastModifiedDate":"2023-09-16"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"     * Creates a default generic task.","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"    public Task() {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"        description \u003d \"default\";","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"     * Creates a new generic task.","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"     * @param newTask The description of the task.","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"    public Task(String newTask){","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"        description \u003d newTask;","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-09-16"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"     * Checks if the task is done.","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"     * @return true if the task is done, false otherwise.","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"andrefoo"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"andrefoo"},"content":"        return isDone;","lastModifiedDate":"2023-09-16"},{"lineNumber":37,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"andrefoo"},"content":"     * Marks the task as done, no matter the current status of task.","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"andrefoo"},"content":"    public void done() {","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"andrefoo"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-09-16"},{"lineNumber":44,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"andrefoo"},"content":"     * Unmarks the task as not done, no matter the current status of task.","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"andrefoo"},"content":"    public void undo() {","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"andrefoo"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-09-16"},{"lineNumber":51,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"andrefoo"},"content":"     * Generates the status icon that indicates whether the task is done.","lastModifiedDate":"2023-09-16"},{"lineNumber":55,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"andrefoo"},"content":"     * @return The status icon.","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"andrefoo"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"andrefoo"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-09-16"},{"lineNumber":60,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"andrefoo"},"content":"     * Provides a formatted string for saving this task to a file.","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"andrefoo"},"content":"     * @return A formatted string suitable for file storage.","lastModifiedDate":"2023-09-09"},{"lineNumber":66,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"andrefoo"},"content":"    public String fileSaveFormat() {","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"andrefoo"},"content":"        return getStatusIcon() + \"|\" + description;","lastModifiedDate":"2023-09-09"},{"lineNumber":69,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":72,"author":{"gitId":"andrefoo"},"content":"     * Converts the task to a string format for display.","lastModifiedDate":"2023-09-09"},{"lineNumber":73,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":74,"author":{"gitId":"andrefoo"},"content":"     * @return A formatted string representing this task.","lastModifiedDate":"2023-09-09"},{"lineNumber":75,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":76,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"andrefoo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"andrefoo"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-09-09"},{"lineNumber":79,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":81,"author":{"gitId":"andrefoo"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-09"},{"lineNumber":82,"author":{"gitId":"andrefoo"},"content":"        return description;","lastModifiedDate":"2023-09-09"},{"lineNumber":83,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":84,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":85,"author":{"gitId":"andrefoo"},"content":"    public void editDescription(String newDescription) {","lastModifiedDate":"2023-09-19"},{"lineNumber":86,"author":{"gitId":"andrefoo"},"content":"        this.description \u003d newDescription;","lastModifiedDate":"2023-09-19"},{"lineNumber":87,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":88,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"andrefoo":88}},{"path":"src/main/java/dre/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.task;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"import java.util.List;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"import dre.exception.DreException;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":" * Represents a list of tasks, providing functionalities to manage and manipulate tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"public class TaskList {","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"     * Creates a new empty task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"     * Creates a new task list with the given initial tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"     * @param tasks A list of tasks to initialize the TaskList with.","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"     * Changes the index starting from 1 in the wrapper class to start from 0.","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"     * @param index the index to be adjusted","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"andrefoo"},"content":"     * @return adjusted index","lastModifiedDate":"2023-09-16"},{"lineNumber":35,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":36,"author":{"gitId":"andrefoo"},"content":"    private int adjustIndex(int index) {","lastModifiedDate":"2023-09-16"},{"lineNumber":37,"author":{"gitId":"andrefoo"},"content":"        return index - 1;","lastModifiedDate":"2023-09-16"},{"lineNumber":38,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":39,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":40,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"andrefoo"},"content":"     * Marks a task as done using its index.","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"andrefoo"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"andrefoo"},"content":"     * @throws DreException If the provided index is invalid.","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"andrefoo"},"content":"    public void mark(int index) throws DreException {","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"andrefoo"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"andrefoo"},"content":"            Task task \u003d tasks.get(adjustIndex(index));","lastModifiedDate":"2023-09-16"},{"lineNumber":49,"author":{"gitId":"andrefoo"},"content":"            task.done();","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"andrefoo"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"andrefoo"},"content":"            throw new DreException(\"Invalid dre.task index.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"andrefoo"},"content":"     * Marks a task as undone using its index.","lastModifiedDate":"2023-09-16"},{"lineNumber":57,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"andrefoo"},"content":"     * @param index The index of the task to be unmarked.","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"andrefoo"},"content":"     * @throws DreException If the provided index is invalid.","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"andrefoo"},"content":"    public void unmark(int index) throws DreException {","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"andrefoo"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"andrefoo"},"content":"            Task task \u003d tasks.get(adjustIndex(index));","lastModifiedDate":"2023-09-16"},{"lineNumber":64,"author":{"gitId":"andrefoo"},"content":"            task.undo();","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"andrefoo"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":66,"author":{"gitId":"andrefoo"},"content":"            throw new DreException(\"Invalid dre.task index.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":68,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":69,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":70,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":71,"author":{"gitId":"andrefoo"},"content":"     * Retrieves a task from the list using its index.","lastModifiedDate":"2023-09-09"},{"lineNumber":72,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":73,"author":{"gitId":"andrefoo"},"content":"     * @param index The index of the task to be retrieved.","lastModifiedDate":"2023-09-09"},{"lineNumber":74,"author":{"gitId":"andrefoo"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-09-09"},{"lineNumber":75,"author":{"gitId":"andrefoo"},"content":"     * @throws DreException If the provided index is invalid.","lastModifiedDate":"2023-09-09"},{"lineNumber":76,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":77,"author":{"gitId":"andrefoo"},"content":"    public Task getTask(int index) throws DreException {","lastModifiedDate":"2023-09-04"},{"lineNumber":78,"author":{"gitId":"andrefoo"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":79,"author":{"gitId":"andrefoo"},"content":"            return tasks.get(adjustIndex(index));","lastModifiedDate":"2023-09-16"},{"lineNumber":80,"author":{"gitId":"andrefoo"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":81,"author":{"gitId":"andrefoo"},"content":"            throw new DreException(\"Invalid dre.task index.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":83,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":84,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":85,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":86,"author":{"gitId":"andrefoo"},"content":"     * Deletes a task from the list using its index.","lastModifiedDate":"2023-09-09"},{"lineNumber":87,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":88,"author":{"gitId":"andrefoo"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2023-09-09"},{"lineNumber":89,"author":{"gitId":"andrefoo"},"content":"     * @throws DreException If the provided index is invalid.","lastModifiedDate":"2023-09-09"},{"lineNumber":90,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":91,"author":{"gitId":"andrefoo"},"content":"    public void deleteTask(int index) throws DreException {","lastModifiedDate":"2023-09-04"},{"lineNumber":92,"author":{"gitId":"andrefoo"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":93,"author":{"gitId":"andrefoo"},"content":"            tasks.remove(adjustIndex(index));","lastModifiedDate":"2023-09-16"},{"lineNumber":94,"author":{"gitId":"andrefoo"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":95,"author":{"gitId":"andrefoo"},"content":"            throw new DreException(\"Invalid dre.task index.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":96,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":97,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":98,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":99,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":100,"author":{"gitId":"andrefoo"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":101,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":102,"author":{"gitId":"andrefoo"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-09-09"},{"lineNumber":103,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":104,"author":{"gitId":"andrefoo"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-04"},{"lineNumber":105,"author":{"gitId":"andrefoo"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-04"},{"lineNumber":106,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":107,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":108,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":109,"author":{"gitId":"andrefoo"},"content":"     * Finds task in the tasklist that contain the keyword.","lastModifiedDate":"2023-09-09"},{"lineNumber":110,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":111,"author":{"gitId":"andrefoo"},"content":"     * @param keyword The String used for search","lastModifiedDate":"2023-09-09"},{"lineNumber":112,"author":{"gitId":"andrefoo"},"content":"     * @return TaskList of tasks that match the search","lastModifiedDate":"2023-09-09"},{"lineNumber":113,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":114,"author":{"gitId":"andrefoo"},"content":"    public TaskList findTasksByKeyword(String keyword) {","lastModifiedDate":"2023-09-09"},{"lineNumber":115,"author":{"gitId":"andrefoo"},"content":"        List\u003cTask\u003e foundTasks \u003d this.tasks.stream()","lastModifiedDate":"2023-09-09"},{"lineNumber":116,"author":{"gitId":"andrefoo"},"content":"                .filter(task -\u003e task.getDescription().contains(keyword))","lastModifiedDate":"2023-09-09"},{"lineNumber":117,"author":{"gitId":"andrefoo"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-09-09"},{"lineNumber":118,"author":{"gitId":"andrefoo"},"content":"        return new TaskList(foundTasks);","lastModifiedDate":"2023-09-09"},{"lineNumber":119,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":120,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":121,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":122,"author":{"gitId":"andrefoo"},"content":"     * Retrieves the size (number of tasks) of the task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":123,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":124,"author":{"gitId":"andrefoo"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2023-09-09"},{"lineNumber":125,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":126,"author":{"gitId":"andrefoo"},"content":"    public int size() {","lastModifiedDate":"2023-09-04"},{"lineNumber":127,"author":{"gitId":"andrefoo"},"content":"        return tasks.size();","lastModifiedDate":"2023-09-04"},{"lineNumber":128,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":129,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"andrefoo":129}},{"path":"src/main/java/dre/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.task;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":" * Represents a simple to-do task.","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":"     * Creates a new to-do task.","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"     * @param task The description of the task.","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"    public ToDo(String task) {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"        super(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"     * Provides a formatted string for saving this to-do task to a file.","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"     * @return A formatted string suitable for file storage.","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"    public String fileSaveFormat() {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"        return \"T|\" + super.fileSaveFormat();","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"     * Converts the task to a string format for display.","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"     * @return A formatted string representing this task.","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"andrefoo"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"andrefoo":36}},{"path":"src/main/java/dre/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"import dre.task.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"import dre.exception.DreException;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"import dre.task.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":" * Represents the User Interface responsible for interactions between the user and the application.","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"public class Ui {","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"     * Displays an error message indicating issues with loading tasks from storage.","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-16"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"     * @return loading error message","lastModifiedDate":"2023-09-16"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"    public String generateLoadingErrorString() {","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"        return \"Error reading tasks from file.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"     * Displays a specified error message to the user.","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"    public String generateErrorString(String message) {","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"        return message;","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"     * Displays the welcome message to the user upon starting the application.","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"andrefoo"},"content":"     * @return welcome message","lastModifiedDate":"2023-09-16"},{"lineNumber":35,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"andrefoo"},"content":"    public static String showWelcome() {","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"andrefoo"},"content":"        return \"Hello! I\u0027m Dre\\n\" +","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"andrefoo"},"content":"                \"What can I do for you?\";","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"andrefoo"},"content":"     * Displays the goodbye message to the user upon exiting the application.","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"andrefoo"},"content":"    public String showGoodbye() {","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"andrefoo"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"andrefoo"},"content":"     * Generates a representation of the tasks present in the user\u0027s task list.","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"andrefoo"},"content":"     * @param tasks The task list to be displayed.","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"andrefoo"},"content":"     * @return String representation of the tasks.","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"andrefoo"},"content":"     * @throws DreException If there is an error while processing the task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"andrefoo"},"content":"    public String generateTasksString(TaskList tasks) throws DreException {","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"andrefoo"},"content":"        StringBuilder sb \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"andrefoo"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"andrefoo"},"content":"            sb.append(i).append(\". \").append(tasks.getTask(i)).append(\"\\n\");","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"andrefoo"},"content":"        return sb.toString();","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"andrefoo"},"content":"     * Generates a message indicating a task has been unmarked.","lastModifiedDate":"2023-09-13"},{"lineNumber":65,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":66,"author":{"gitId":"andrefoo"},"content":"     * @param task The task that was unmarked.","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"andrefoo"},"content":"     * @return String representation of the unmarked task message.","lastModifiedDate":"2023-09-13"},{"lineNumber":68,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":69,"author":{"gitId":"andrefoo"},"content":"    public String generateUnmarkedTaskString(Task task) {","lastModifiedDate":"2023-09-13"},{"lineNumber":70,"author":{"gitId":"andrefoo"},"content":"        return \"Ok! I\u0027ve marked this task as undone:\\n\" + task;","lastModifiedDate":"2023-09-13"},{"lineNumber":71,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":72,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":74,"author":{"gitId":"andrefoo"},"content":"     * Generates a message indicating a task has been deleted.","lastModifiedDate":"2023-09-13"},{"lineNumber":75,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":76,"author":{"gitId":"andrefoo"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2023-09-09"},{"lineNumber":77,"author":{"gitId":"andrefoo"},"content":"     * @return String representation of the deleted task message.","lastModifiedDate":"2023-09-13"},{"lineNumber":78,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":79,"author":{"gitId":"andrefoo"},"content":"    public String generateDeletedTaskString(Task task) {","lastModifiedDate":"2023-09-13"},{"lineNumber":80,"author":{"gitId":"andrefoo"},"content":"        return \"Task deleted:\\n\" + task;","lastModifiedDate":"2023-09-13"},{"lineNumber":81,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":82,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":83,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":84,"author":{"gitId":"andrefoo"},"content":"     * Generates a message indicating a task has been added.","lastModifiedDate":"2023-09-13"},{"lineNumber":85,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":86,"author":{"gitId":"andrefoo"},"content":"     * @param task The task that was added.","lastModifiedDate":"2023-09-09"},{"lineNumber":87,"author":{"gitId":"andrefoo"},"content":"     * @param totalTasks The total number of tasks in the task list after addition.","lastModifiedDate":"2023-09-09"},{"lineNumber":88,"author":{"gitId":"andrefoo"},"content":"     * @return String representation of the added task message.","lastModifiedDate":"2023-09-13"},{"lineNumber":89,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":90,"author":{"gitId":"andrefoo"},"content":"    public String generateAddedTaskString(Task task, int totalTasks) {","lastModifiedDate":"2023-09-13"},{"lineNumber":91,"author":{"gitId":"andrefoo"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + task + \"\\nNow you have \" + totalTasks + \" tasks in the list.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":92,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":93,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":94,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":95,"author":{"gitId":"andrefoo"},"content":"     * Generates a message indicating a task has been marked as done.","lastModifiedDate":"2023-09-13"},{"lineNumber":96,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":97,"author":{"gitId":"andrefoo"},"content":"     * @param task The task that was marked as done.","lastModifiedDate":"2023-09-09"},{"lineNumber":98,"author":{"gitId":"andrefoo"},"content":"     * @return String representation of the marked task message.","lastModifiedDate":"2023-09-13"},{"lineNumber":99,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":100,"author":{"gitId":"andrefoo"},"content":"    public String generateMarkedTaskString(Task task) {","lastModifiedDate":"2023-09-13"},{"lineNumber":101,"author":{"gitId":"andrefoo"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + task;","lastModifiedDate":"2023-09-13"},{"lineNumber":102,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":103,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":104,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":105,"author":{"gitId":"andrefoo"},"content":"     * Generates a message indicating the tasks that match the search.","lastModifiedDate":"2023-09-13"},{"lineNumber":106,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":107,"author":{"gitId":"andrefoo"},"content":"     * @param tasks The tasks that match the search description.","lastModifiedDate":"2023-09-09"},{"lineNumber":108,"author":{"gitId":"andrefoo"},"content":"     * @return String representation of the tasks that match the search.","lastModifiedDate":"2023-09-13"},{"lineNumber":109,"author":{"gitId":"andrefoo"},"content":"     * @throws DreException If there is an error while processing the task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":110,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":111,"author":{"gitId":"andrefoo"},"content":"    public String generateFoundTasksString(TaskList tasks) throws DreException {","lastModifiedDate":"2023-09-13"},{"lineNumber":112,"author":{"gitId":"andrefoo"},"content":"        if (tasks.size() \u003c 1) {","lastModifiedDate":"2023-09-09"},{"lineNumber":113,"author":{"gitId":"andrefoo"},"content":"            return \"Sorry, no tasks match that description.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":114,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":115,"author":{"gitId":"andrefoo"},"content":"        StringBuilder sb \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-09-13"},{"lineNumber":116,"author":{"gitId":"andrefoo"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2023-09-09"},{"lineNumber":117,"author":{"gitId":"andrefoo"},"content":"            sb.append(i).append(\". \").append(tasks.getTask(i)).append(\"\\n\");","lastModifiedDate":"2023-09-13"},{"lineNumber":118,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":119,"author":{"gitId":"andrefoo"},"content":"        return sb.toString();","lastModifiedDate":"2023-09-13"},{"lineNumber":120,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":121,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":122,"author":{"gitId":"andrefoo"},"content":"    public String generateEditSuccessMessage(Task task) {","lastModifiedDate":"2023-09-19"},{"lineNumber":123,"author":{"gitId":"andrefoo"},"content":"        return \"The following task has been successfully updated:\\n\" + task;","lastModifiedDate":"2023-09-19"},{"lineNumber":124,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":125,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":126,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":127,"author":{"gitId":"andrefoo"},"content":"     * Reads the user\u0027s command input.","lastModifiedDate":"2023-09-09"},{"lineNumber":128,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":129,"author":{"gitId":"andrefoo"},"content":"     * @return The user\u0027s input as a string.","lastModifiedDate":"2023-09-09"},{"lineNumber":130,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":131,"author":{"gitId":"andrefoo"},"content":"    public String readCommand() {","lastModifiedDate":"2023-09-04"},{"lineNumber":132,"author":{"gitId":"andrefoo"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-04"},{"lineNumber":133,"author":{"gitId":"andrefoo"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-09-04"},{"lineNumber":134,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":135,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"andrefoo":135}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"andrefoo":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"dre.MainWindow\"\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"andrefoo":19}},{"path":"src/test/java/dre/DreTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"public class DreTest {","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"andrefoo":4}},{"path":"src/test/java/dre/command/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.command;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"public class AddCommandTest {","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"andrefoo":4}},{"path":"src/test/java/dre/command/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.command;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"public class CommandTest {","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"andrefoo":4}},{"path":"src/test/java/dre/command/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.command;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"andrefoo":4}},{"path":"src/test/java/dre/command/ExitCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.command;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"public class ExitCommandTest {","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"andrefoo":4}},{"path":"src/test/java/dre/command/ListCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.command;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"public class ListCommandTest {","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"andrefoo":4}},{"path":"src/test/java/dre/command/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.command;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"public class MarkCommandTest {","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"andrefoo":4}},{"path":"src/test/java/dre/command/UnmarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.command;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"public class UnmarkCommandTest {","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"andrefoo":4}},{"path":"src/test/java/dre/exception/DreExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.exception;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"public class DreExceptionTest {","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"andrefoo":4}},{"path":"src/test/java/dre/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.parser;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"andrefoo":4}},{"path":"src/test/java/dre/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.storage;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"public class StorageTest {","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"andrefoo":4}},{"path":"src/test/java/dre/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.task;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"    public void testFileSaveFormat1() {","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"        Deadline testDeadline \u003d new Deadline(\"learn to fly plane\", LocalDate.parse(\"2001-09-11\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"        assertEquals(testDeadline.fileSaveFormat(), \"D| |learn to fly plane|2001-09-11\");","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"    public void testFileSaveFormat2() {","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"        Deadline testDeadline \u003d new Deadline(\"    extra spaces\", LocalDate.parse(\"2001-09-11\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"        assertEquals(testDeadline.fileSaveFormat(), \"D| |    extra spaces|2001-09-11\");","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"    public void testFileSaveFormat3() {","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"        Deadline testDeadline \u003d new Deadline(\"learn to fly plane\", LocalDate.parse(\"2001-01-31\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"        assertEquals(testDeadline.fileSaveFormat(), \"D| |learn to fly plane|2001-01-31\");","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"    public void testToString() {","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"        Deadline testDeadline \u003d new Deadline(\"learn to fly plane\", LocalDate.parse(\"2001-09-11\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"        assertEquals(testDeadline.toString(), \"[D][ ] learn to fly plane (by: Sep 11 2001)\");","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"andrefoo":34}},{"path":"src/test/java/dre/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.task;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":"public class EventTest {","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"    public void testFileSaveFormat1() {","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"        Event testEvent \u003d new Event(\"get blueprint\", LocalDate.parse(\"2001-09-11\"),","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"                LocalDate.parse(\"2001-09-11\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"        assertEquals(testEvent.fileSaveFormat(), \"E| |get blueprint|2001-09-11|2001-09-11\");","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"    public void testFileSaveFormat2() {","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"        //test space trim","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"        Event testEvent \u003d new Event(\"    extra spaces\", LocalDate.parse(\"2001-09-11\"),","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"                LocalDate.parse(\"2001-09-11\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"        assertEquals(testEvent.fileSaveFormat(), \"E| |    extra spaces|2001-09-11|2001-09-11\");","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"    public void testFileSaveFormat3() {","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"        //test different date format entry","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"        Event testEvent \u003d new Event(\"learn to fly plane\", LocalDate.parse(\"2001-01-31\"),","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"                LocalDate.parse(\"2001-01-31\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"        assertEquals(testEvent.fileSaveFormat(), \"E| |learn to fly plane|2001-01-31|2001-01-31\");","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"andrefoo"},"content":"    public void testToString() {","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"andrefoo"},"content":"        Event testEvent \u003d new Event(\"learn to fly plane\", LocalDate.parse(\"2001-09-01\"),","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"andrefoo"},"content":"                LocalDate.parse(\"2001-09-07\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"andrefoo"},"content":"        assertEquals(testEvent.toString(), \"[E][ ] learn to fly plane (from: Sep 01 2001 to: Sep 07 2001)\");","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"andrefoo":39}},{"path":"src/test/java/dre/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.task;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"andrefoo":4}},{"path":"src/test/java/dre/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.task;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"public class TaskTest {","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"    public void testInitialTaskStatus() {","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"        Task task \u003d new Task(\"Sample\");","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"        assertFalse(task.isDone(), \"New task should not be marked as done.\");","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"    public void testMarkTaskAsDone() {","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"        Task task \u003d new Task(\"Sample\");","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"        task.done();","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"        assertTrue(task.isDone(), \"Task should be marked as done after calling markAsDone().\");","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"    public void testFileSaveFormat() {","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"        Task task \u003d new Task(\"something something\");","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"        assertEquals(task.fileSaveFormat(), \" |something something\");","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"andrefoo":28}},{"path":"src/test/java/dre/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.task;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"public class TodoTest {","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"    public void testFileSaveFormat1() {","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":"        ToDo testDeadline \u003d new ToDo(\"find a boeing\");","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":"        assertEquals(testDeadline.fileSaveFormat(), \"T| |find a boeing\");","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"    public void testFileSaveFormat2() {","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"        //test space trim","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"        ToDo testDeadline \u003d new ToDo(\"    extra spaces\");","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"        assertEquals(testDeadline.fileSaveFormat(), \"T| |    extra spaces\");","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"    public void testFileSaveFormat3() {","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"        //test different date format entry","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"        ToDo testDeadline \u003d new ToDo(\"learn to fly plane\");","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"        assertEquals(testDeadline.fileSaveFormat(), \"T| |learn to fly plane\");","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"    public void testToString() {","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"        ToDo testDeadline \u003d new ToDo(\"learn to fly plane\");","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"        assertEquals(testDeadline.toString(), \"[T][ ] learn to fly plane\");","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"andrefoo":32}},{"path":"src/test/java/dre/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.ui;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"public class UiTest {","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"andrefoo":4}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"todo one","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"deadline two /by time","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"list","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"mark 1","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"event three /from now /to later","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"bye","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"andrefoo":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"java -classpath ..\\bin Dre \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"andrefoo":1,"-":20}}]
