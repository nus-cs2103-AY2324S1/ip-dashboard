[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"    mainClass.set(\"dre.Dre\")","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"    mainClassName \u003d \u0027dre.Dre\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"andrefoo"},"content":"    mainClassName \u003d \u0027dre.Dre\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"andrefoo"},"content":"    archiveBaseName \u003d \"dre\"","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"andrefoo"},"content":"    archiveFileName \u003d \"dre.jar\"","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"andrefoo":6,"-":40}},{"path":"data/dre.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"T| |something","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"D|X|something|2023-12-31","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"E| |something else|1000-01-01|1000-10-10","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"T|X|hola como estas","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"D| |blub|2001-09-11","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"E| |something else|2001-09-11|2001-09-11","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"andrefoo":6}},{"path":"src/main/java/dre/Dre.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import dre.exception.DreException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"import dre.ui.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"import dre.storage.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"import dre.parser.Parser;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"import dre.task.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"import dre.command.Command;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":" * Represents the main application class, serving as the primary entry point","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":" * to initiate and run the Dre task management system.","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"public class Dre {","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"    private final Storage storage;","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"    private final Ui ui;","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"     * Constructs a new instance of Dre, initializing storage, tasks, and user interface components.","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"     * @param filePath The file path where tasks will be loaded from and saved to.","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"    public Dre(String filePath) {","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"            System.out.println(e);","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"andrefoo"},"content":"     * Runs the main loop of the application, repeatedly reading user commands,","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"andrefoo"},"content":"     * parsing them, and executing the corresponding actions until the user exits.","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"andrefoo"},"content":"    public void run() {","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"andrefoo"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"andrefoo"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"andrefoo"},"content":"        while (!isExit) {","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"andrefoo"},"content":"            try {","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"andrefoo"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"andrefoo"},"content":"                ui.showLine();","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"andrefoo"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"andrefoo"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"andrefoo"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"andrefoo"},"content":"            } catch (DreException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"andrefoo"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"andrefoo"},"content":"            } finally {","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"andrefoo"},"content":"                ui.showLine();","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"andrefoo"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"andrefoo"},"content":"     * The main method serves as the application\u0027s entry point.","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"andrefoo"},"content":"     * @param args The command-line arguments.","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"andrefoo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"andrefoo"},"content":"        new Dre(\"data/dre.txt\").run();","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":67,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"andrefoo":67}},{"path":"src/main/java/dre/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import dre.storage.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"import dre.ui.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"import dre.task.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"import dre.task.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":" * Represents a command to add a new task.","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"    private final Task task;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"     * Creates an AddCommand for the specified task.","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"     * Executes the add command, adding a new task to the task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"     * @param tasks   The current list of tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"     * @param ui      The UI object to show response.","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"     * @param storage The storage object to update stored tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"        tasks.addTask(task);","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"        ui.showAddedTask(task, tasks.size());","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"andrefoo":35}},{"path":"src/main/java/dre/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import dre.storage.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"import dre.ui.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"import dre.exception.DreException;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"import dre.task.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":" * Represents an abstract command that can be executed.","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":" * All specific commands should inherit from this class.","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"     * Executes the specific command\u0027s operation.","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"     * @param tasks   The current list of tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"     * @param ui      The UI object to show response.","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"     * @param storage The storage object to update stored tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"     * @throws DreException If there\u0027s an error executing the command.","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DreException;","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"     * Indicates whether this command causes the application to exit.","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"     * @return false by default; should be overridden by commands that cause exit.","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"        return false;","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"andrefoo":32}},{"path":"src/main/java/dre/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import dre.storage.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"import dre.ui.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"import dre.exception.DreException;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"import dre.task.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":" * Represents a command to delete a task.","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"    private final int index;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"     * Creates a DeleteCommand with the specified task index within the task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"     * Executes the delete command, removing a task from the task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"     * @param tasks   The current list of tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"     * @param ui      The UI object to show response.","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"     * @param storage The storage object to update stored tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"            ui.showDeletedTask(tasks.getTask(index));","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"andrefoo"},"content":"            tasks.deleteTask(index);","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"andrefoo"},"content":"        } catch (DreException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"andrefoo"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"andrefoo":39}},{"path":"src/main/java/dre/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import dre.storage.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"import dre.ui.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"import dre.task.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":" * Represents a command to exit the application.","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"     * Executes the exit command, showing goodbye message and saving tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"     * @param tasks   The current list of tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"     * @param ui      The UI object to show response.","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"     * @param storage The storage object to save tasks before exiting.","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"        ui.showGoodbye();","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"     * Indicates that this command causes the application to exit.","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"     * @return true as this command exits the application.","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"        return true;","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"andrefoo":33}},{"path":"src/main/java/dre/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.command;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import dre.exception.DreException;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"import dre.storage.Storage;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"import dre.task.TaskList;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"import dre.ui.Ui;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":" * Represents a command to find and list all tasks that contain a given keyword.","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":" * This command is intended to help users search for specific tasks within their list.","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"    private final String keyword;","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"     * Creates a new FindCommand with the specified keyword.","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"     * @param keyword The keyword used to search for tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"     * Executes the find task command.","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"     * This method searches for tasks containing the keyword and displays them to the user.","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"     * @param tasks The list of tasks to search within.","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"     * @param ui The UI object used for user interactions.","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"     * @param storage The storage object, though not directly used in this command.","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"     * @throws DreException If there are issues during the command execution.","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"andrefoo"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DreException {","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"andrefoo"},"content":"        TaskList foundTasks \u003d tasks.findTasksByKeyword(keyword);","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"andrefoo"},"content":"        ui.showFoundTasks(foundTasks);","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"andrefoo":38}},{"path":"src/main/java/dre/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import dre.storage.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"import dre.ui.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"import dre.exception.DreException;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"import dre.task.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":" * Represents a command to list all tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"     * Executes the list command, displaying all tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"     * @param tasks   The current list of tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"     * @param ui      The UI object to show the list of tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"     * @param storage The storage object (unused for this command).","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"            ui.showTasks(tasks);","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"        } catch (DreException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"andrefoo":27}},{"path":"src/main/java/dre/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import dre.storage.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"import dre.ui.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"import dre.task.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"import dre.exception.DreException;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":" * Represents a command to mark a task as done.","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"    private final int index;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"     * Creates a MarkCommand with the specified task index.","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"     * @param index The index of the task to be marked.","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"     * Executes the mark command, marking a task as done.","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"     * @param tasks   The current list of tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"     * @param ui      The UI object to show response.","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"     * @param storage The storage object to update stored tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"     * @throws DreException If there\u0027s an error marking the task.","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DreException {","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"andrefoo"},"content":"            tasks.mark(index);","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"andrefoo"},"content":"            ui.showMarkedTask(tasks.getTask(index));","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"andrefoo"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"andrefoo"},"content":"            ui.showError(\"Invalid dre.task index.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"andrefoo":40}},{"path":"src/main/java/dre/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import dre.storage.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"import dre.ui.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"import dre.exception.DreException;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"import dre.task.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":" * Represents a command to unmark a task.","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"    private final int index;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"     * Creates an UnmarkCommand with the specified task index.","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"     * @param index The index of the task to be unmarked.","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"     * Executes the unmark command, unmarking a task.","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"     * @param tasks   The current list of tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"     * @param ui      The UI object to show response.","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"     * @param storage The storage object to update stored tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"            tasks.unmark(index);","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"andrefoo"},"content":"            ui.showUnmarkedTask(tasks.getTask(index));","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"andrefoo"},"content":"        } catch (DreException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"andrefoo"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"andrefoo":39}},{"path":"src/main/java/dre/exception/DreException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.exception;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":" * Represents an exception specific to the Dre chatbot application.","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"public class DreException extends Exception {","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":"     * Constructs a new DreException with the specified detail message.","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"     * @param message The detail message (which is saved for later retrieval by the {@link #getMessage()} method).","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"    public DreException(String message) {","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"        super(message);","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"andrefoo":16}},{"path":"src/main/java/dre/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.parser;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"import dre.task.Task;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"import dre.task.ToDo;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"import dre.task.Event;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":"import dre.task.Deadline;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":"import dre.command.AddCommand;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"import dre.command.DeleteCommand;","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"import dre.command.ExitCommand;","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"import dre.command.MarkCommand;","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"import dre.command.UnmarkCommand;","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"import dre.command.Command;","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"import dre.command.ListCommand;","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"import dre.command.FindCommand;","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"import dre.exception.DreException;","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":" * Represents a parser that makes sense of user input commands.","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"public class Parser {","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"     * Parses a given line and returns a Task object.","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"     * @param line The string representation of the task.","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"     * @return The corresponding Task object, or null if invalid line.","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"    public static Task parseTask(String line) {","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"        String type \u003d line.substring(0, 1);","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"        boolean isDone \u003d line.charAt(2) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"andrefoo"},"content":"        String description;","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"andrefoo"},"content":"        Task task \u003d null;","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"andrefoo"},"content":"        switch (type) {","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"andrefoo"},"content":"            case \"T\":","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"andrefoo"},"content":"                String[] todoInfo \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"andrefoo"},"content":"                task \u003d new ToDo(todoInfo[2]);","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"andrefoo"},"content":"                break;","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"andrefoo"},"content":"            case \"D\":","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"andrefoo"},"content":"                String[] deadlineInfo \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"andrefoo"},"content":"                description \u003d deadlineInfo[2].trim();","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"andrefoo"},"content":"                LocalDate byDate \u003d parseDate(deadlineInfo[3].trim());","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"andrefoo"},"content":"                task \u003d new Deadline(description, byDate);","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"andrefoo"},"content":"                break;","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"andrefoo"},"content":"            case \"E\":","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"andrefoo"},"content":"                String[] eventInfo \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"andrefoo"},"content":"                description \u003d eventInfo[2];","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"andrefoo"},"content":"                LocalDate fromDate \u003d parseDate(eventInfo[3]);","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"andrefoo"},"content":"                LocalDate toDate \u003d parseDate(eventInfo[4]);","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"andrefoo"},"content":"                task \u003d new Event(description, fromDate, toDate);","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"andrefoo"},"content":"        if (isDone) {","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"andrefoo"},"content":"            task.done();","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"andrefoo"},"content":"        return task; //instead of adding to list, just return the dre.task.","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"andrefoo"},"content":"     * Parses a date string into a LocalDate object.","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":66,"author":{"gitId":"andrefoo"},"content":"     * @param dateString The date in \"yyyy-MM-dd\" format.","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"andrefoo"},"content":"     * @return The LocalDate representation of the dateString.","lastModifiedDate":"2023-09-09"},{"lineNumber":68,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":69,"author":{"gitId":"andrefoo"},"content":"    private static LocalDate parseDate(String dateString) {","lastModifiedDate":"2023-09-04"},{"lineNumber":70,"author":{"gitId":"andrefoo"},"content":"        DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-09-09"},{"lineNumber":71,"author":{"gitId":"andrefoo"},"content":"        return LocalDate.parse(dateString, inputFormatter);","lastModifiedDate":"2023-09-04"},{"lineNumber":72,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":74,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":75,"author":{"gitId":"andrefoo"},"content":"     * Parses the user input to determine which command to execute.","lastModifiedDate":"2023-09-09"},{"lineNumber":76,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":77,"author":{"gitId":"andrefoo"},"content":"     * @param input The raw user input string.","lastModifiedDate":"2023-09-09"},{"lineNumber":78,"author":{"gitId":"andrefoo"},"content":"     * @return The corresponding Command object.","lastModifiedDate":"2023-09-09"},{"lineNumber":79,"author":{"gitId":"andrefoo"},"content":"     * @throws DreException If the input command is unknown or invalid.","lastModifiedDate":"2023-09-09"},{"lineNumber":80,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":81,"author":{"gitId":"andrefoo"},"content":"    public static Command parse(String input) throws DreException {","lastModifiedDate":"2023-09-04"},{"lineNumber":82,"author":{"gitId":"andrefoo"},"content":"        String[] words \u003d input.split(\" \", 2);","lastModifiedDate":"2023-09-09"},{"lineNumber":83,"author":{"gitId":"andrefoo"},"content":"        String commandWord \u003d words[0];","lastModifiedDate":"2023-09-04"},{"lineNumber":84,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":85,"author":{"gitId":"andrefoo"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-09-04"},{"lineNumber":86,"author":{"gitId":"andrefoo"},"content":"            case \"bye\":","lastModifiedDate":"2023-09-04"},{"lineNumber":87,"author":{"gitId":"andrefoo"},"content":"                return new ExitCommand();","lastModifiedDate":"2023-09-04"},{"lineNumber":88,"author":{"gitId":"andrefoo"},"content":"            case \"list\":","lastModifiedDate":"2023-09-04"},{"lineNumber":89,"author":{"gitId":"andrefoo"},"content":"                return new ListCommand();","lastModifiedDate":"2023-09-04"},{"lineNumber":90,"author":{"gitId":"andrefoo"},"content":"            case \"mark\":","lastModifiedDate":"2023-09-04"},{"lineNumber":91,"author":{"gitId":"andrefoo"},"content":"                if (words.length \u003c 2) {","lastModifiedDate":"2023-09-04"},{"lineNumber":92,"author":{"gitId":"andrefoo"},"content":"                    throw new DreException(\"Please specify the task index to mark.\");","lastModifiedDate":"2023-09-09"},{"lineNumber":93,"author":{"gitId":"andrefoo"},"content":"                }","lastModifiedDate":"2023-09-04"},{"lineNumber":94,"author":{"gitId":"andrefoo"},"content":"                return new MarkCommand(Integer.parseInt(words[1].trim()));","lastModifiedDate":"2023-09-04"},{"lineNumber":95,"author":{"gitId":"andrefoo"},"content":"            case \"unmark\":","lastModifiedDate":"2023-09-04"},{"lineNumber":96,"author":{"gitId":"andrefoo"},"content":"                if (words.length \u003c 2) {","lastModifiedDate":"2023-09-04"},{"lineNumber":97,"author":{"gitId":"andrefoo"},"content":"                    throw new DreException(\"Please specify the task index to unmark.\");","lastModifiedDate":"2023-09-09"},{"lineNumber":98,"author":{"gitId":"andrefoo"},"content":"                }","lastModifiedDate":"2023-09-04"},{"lineNumber":99,"author":{"gitId":"andrefoo"},"content":"                return new UnmarkCommand(Integer.parseInt(words[1].trim()));","lastModifiedDate":"2023-09-04"},{"lineNumber":100,"author":{"gitId":"andrefoo"},"content":"            case \"delete\":","lastModifiedDate":"2023-09-04"},{"lineNumber":101,"author":{"gitId":"andrefoo"},"content":"                if (words.length \u003c 2) {","lastModifiedDate":"2023-09-04"},{"lineNumber":102,"author":{"gitId":"andrefoo"},"content":"                    throw new DreException(\"Please specify the task index to delete.\");","lastModifiedDate":"2023-09-09"},{"lineNumber":103,"author":{"gitId":"andrefoo"},"content":"                }","lastModifiedDate":"2023-09-04"},{"lineNumber":104,"author":{"gitId":"andrefoo"},"content":"                return new DeleteCommand(Integer.parseInt(words[1].trim()));","lastModifiedDate":"2023-09-04"},{"lineNumber":105,"author":{"gitId":"andrefoo"},"content":"            case \"todo\":","lastModifiedDate":"2023-09-04"},{"lineNumber":106,"author":{"gitId":"andrefoo"},"content":"                if (words.length \u003c 2 || words[1].trim().isEmpty()) {","lastModifiedDate":"2023-09-04"},{"lineNumber":107,"author":{"gitId":"andrefoo"},"content":"                    throw new DreException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-09-04"},{"lineNumber":108,"author":{"gitId":"andrefoo"},"content":"                }","lastModifiedDate":"2023-09-04"},{"lineNumber":109,"author":{"gitId":"andrefoo"},"content":"                return new AddCommand(new ToDo(words[1].trim()));","lastModifiedDate":"2023-09-04"},{"lineNumber":110,"author":{"gitId":"andrefoo"},"content":"            case \"deadline\":","lastModifiedDate":"2023-09-09"},{"lineNumber":111,"author":{"gitId":"andrefoo"},"content":"                if (words.length \u003c 2 || words[1].trim().isEmpty()) {","lastModifiedDate":"2023-09-09"},{"lineNumber":112,"author":{"gitId":"andrefoo"},"content":"                    throw new DreException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-09-09"},{"lineNumber":113,"author":{"gitId":"andrefoo"},"content":"                }","lastModifiedDate":"2023-09-09"},{"lineNumber":114,"author":{"gitId":"andrefoo"},"content":"                String[] deadlineParts \u003d words[1].split(\"/by\", 2);","lastModifiedDate":"2023-09-09"},{"lineNumber":115,"author":{"gitId":"andrefoo"},"content":"                if (deadlineParts.length \u003c 2) {","lastModifiedDate":"2023-09-09"},{"lineNumber":116,"author":{"gitId":"andrefoo"},"content":"                    throw new DreException(\"Please specify the date using /by.\");","lastModifiedDate":"2023-09-09"},{"lineNumber":117,"author":{"gitId":"andrefoo"},"content":"                }","lastModifiedDate":"2023-09-09"},{"lineNumber":118,"author":{"gitId":"andrefoo"},"content":"                LocalDate byDate;","lastModifiedDate":"2023-09-09"},{"lineNumber":119,"author":{"gitId":"andrefoo"},"content":"                try {","lastModifiedDate":"2023-09-09"},{"lineNumber":120,"author":{"gitId":"andrefoo"},"content":"                    byDate \u003d LocalDate.parse(deadlineParts[1].trim());","lastModifiedDate":"2023-09-09"},{"lineNumber":121,"author":{"gitId":"andrefoo"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":122,"author":{"gitId":"andrefoo"},"content":"                    throw new DreException(\"Please use the correct date format: YYYY-MM-DD.\");","lastModifiedDate":"2023-09-09"},{"lineNumber":123,"author":{"gitId":"andrefoo"},"content":"                }","lastModifiedDate":"2023-09-09"},{"lineNumber":124,"author":{"gitId":"andrefoo"},"content":"                return new AddCommand(new Deadline(deadlineParts[0].trim(), byDate));","lastModifiedDate":"2023-09-09"},{"lineNumber":125,"author":{"gitId":"andrefoo"},"content":"            case \"event\":","lastModifiedDate":"2023-09-09"},{"lineNumber":126,"author":{"gitId":"andrefoo"},"content":"                if (words.length \u003c 2 || words[1].trim().isEmpty()) {","lastModifiedDate":"2023-09-09"},{"lineNumber":127,"author":{"gitId":"andrefoo"},"content":"                    throw new DreException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2023-09-09"},{"lineNumber":128,"author":{"gitId":"andrefoo"},"content":"                }","lastModifiedDate":"2023-09-09"},{"lineNumber":129,"author":{"gitId":"andrefoo"},"content":"                String[] eventParts \u003d words[1].split(\"/from | /to \", 3);","lastModifiedDate":"2023-09-09"},{"lineNumber":130,"author":{"gitId":"andrefoo"},"content":"                if (eventParts.length \u003c 3) {","lastModifiedDate":"2023-09-09"},{"lineNumber":131,"author":{"gitId":"andrefoo"},"content":"                    throw new DreException(\"Please specify the date range using /from and /to.\");","lastModifiedDate":"2023-09-09"},{"lineNumber":132,"author":{"gitId":"andrefoo"},"content":"                }","lastModifiedDate":"2023-09-09"},{"lineNumber":133,"author":{"gitId":"andrefoo"},"content":"                LocalDate fromDate, toDate;","lastModifiedDate":"2023-09-09"},{"lineNumber":134,"author":{"gitId":"andrefoo"},"content":"                try {","lastModifiedDate":"2023-09-09"},{"lineNumber":135,"author":{"gitId":"andrefoo"},"content":"                    fromDate \u003d LocalDate.parse(eventParts[1].trim());","lastModifiedDate":"2023-09-09"},{"lineNumber":136,"author":{"gitId":"andrefoo"},"content":"                    toDate \u003d LocalDate.parse(eventParts[2].trim());","lastModifiedDate":"2023-09-09"},{"lineNumber":137,"author":{"gitId":"andrefoo"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":138,"author":{"gitId":"andrefoo"},"content":"                    throw new DreException(\"Please use the correct date format: YYYY-MM-DD.\");","lastModifiedDate":"2023-09-09"},{"lineNumber":139,"author":{"gitId":"andrefoo"},"content":"                }","lastModifiedDate":"2023-09-09"},{"lineNumber":140,"author":{"gitId":"andrefoo"},"content":"                return new AddCommand(new Event(eventParts[0].trim(), fromDate, toDate));","lastModifiedDate":"2023-09-09"},{"lineNumber":141,"author":{"gitId":"andrefoo"},"content":"            case \"find\":","lastModifiedDate":"2023-09-09"},{"lineNumber":142,"author":{"gitId":"andrefoo"},"content":"                if (words.length \u003c 2 || words[1].isEmpty()) {","lastModifiedDate":"2023-09-09"},{"lineNumber":143,"author":{"gitId":"andrefoo"},"content":"                    throw new DreException(\"The search keyword cannot be empty.\");","lastModifiedDate":"2023-09-09"},{"lineNumber":144,"author":{"gitId":"andrefoo"},"content":"                }","lastModifiedDate":"2023-09-09"},{"lineNumber":145,"author":{"gitId":"andrefoo"},"content":"                return new FindCommand(words[1]);","lastModifiedDate":"2023-09-09"},{"lineNumber":146,"author":{"gitId":"andrefoo"},"content":"            default:","lastModifiedDate":"2023-09-04"},{"lineNumber":147,"author":{"gitId":"andrefoo"},"content":"                throw new DreException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-04"},{"lineNumber":148,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":149,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":150,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"andrefoo":150}},{"path":"src/main/java/dre/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import java.io.*;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"import java.util.List;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"import dre.task.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"import dre.parser.Parser;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"import dre.task.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":"import dre.exception.DreException;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":" * Manages loading and saving of tasks to a file.","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"public class Storage {","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"    private final String dataFilePath;","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"     * Creates a new storage manager.","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"     * @param filePath The path to the file for saving/loading tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"        this.dataFilePath \u003d filePath;","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"     * Loads tasks from the file.","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"     * @return A list of tasks loaded from the file.","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"    public List\u003cTask\u003e load() {","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"andrefoo"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"andrefoo"},"content":"            File file \u003d new File(dataFilePath);","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"andrefoo"},"content":"            if (file.exists()) {","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"andrefoo"},"content":"                try (BufferedReader reader \u003d new BufferedReader(new FileReader(dataFilePath))) {","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"andrefoo"},"content":"                    String line;","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"andrefoo"},"content":"                    while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"andrefoo"},"content":"                        Task task \u003d Parser.parseTask(line);","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"andrefoo"},"content":"                        if (task !\u003d null) list.add(task);","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"andrefoo"},"content":"                    }","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"andrefoo"},"content":"                }","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"andrefoo"},"content":"            } else {","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"andrefoo"},"content":"                System.out.println(\"No saved tasks found.\");","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"andrefoo"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"andrefoo"},"content":"        } catch (IOException | SecurityException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"andrefoo"},"content":"            System.out.println(\"Error saving tasks to the file.\");","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"andrefoo"},"content":"            throw new RuntimeException(","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"andrefoo"},"content":"                    \"This should never happen, I know this file exists\", e);","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"andrefoo"},"content":"        return list;","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"andrefoo"},"content":"     * Saves the given list of tasks to the file.","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"andrefoo"},"content":"     * @param taskList The list of tasks to save.","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"andrefoo"},"content":"    public void save(TaskList taskList) {","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"andrefoo"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(dataFilePath))) {","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"andrefoo"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"andrefoo"},"content":"                // since getTask uses an index starting from 1","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"andrefoo"},"content":"                Task task \u003d taskList.getTask(i + 1);","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"andrefoo"},"content":"                writer.write(task.fileSaveFormat());","lastModifiedDate":"2023-09-04"},{"lineNumber":66,"author":{"gitId":"andrefoo"},"content":"                writer.newLine();","lastModifiedDate":"2023-09-04"},{"lineNumber":67,"author":{"gitId":"andrefoo"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":68,"author":{"gitId":"andrefoo"},"content":"        } catch (IOException | DreException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"andrefoo"},"content":"            System.out.println(\"Error saving tasks to the file.\");","lastModifiedDate":"2023-09-04"},{"lineNumber":70,"author":{"gitId":"andrefoo"},"content":"            throw new RuntimeException(","lastModifiedDate":"2023-09-09"},{"lineNumber":71,"author":{"gitId":"andrefoo"},"content":"                    \"This should never happen, I know this file exists\", e);","lastModifiedDate":"2023-09-09"},{"lineNumber":72,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":74,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"andrefoo":74}},{"path":"src/main/java/dre/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.task;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":"    private final LocalDate by;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"     * Creates a new deadline task.","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"     * @param task The description of the task.","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"     * @param by The deadline of the task.","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"    public Deadline(String task, LocalDate by) {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"        super(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"     * Provides a formatted string for saving this deadline task to a file.","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"     * @return A formatted string suitable for file storage.","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"    public String fileSaveFormat() {","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"        return \"D|\" + super.fileSaveFormat() + \"|\" +","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"                by.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"andrefoo"},"content":"     * Converts the task to a string format for display.","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"andrefoo"},"content":"     * @return A formatted string representing this task.","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"andrefoo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"andrefoo"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formatDate(by) + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"andrefoo"},"content":"     * Formats the date for display purposes.","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"andrefoo"},"content":"     * @param date The date to be formatted.","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"andrefoo"},"content":"     * @return A string representing the formatted date in MMM dd yyyy format.","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"andrefoo"},"content":"    private String formatDate(LocalDate date) {","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"andrefoo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"andrefoo"},"content":"        return date.format(formatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"andrefoo":54}},{"path":"src/main/java/dre/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.task;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":" * Represents an event task.","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":"    private final LocalDate from;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"    private final LocalDate to;","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"    public Event(String task, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"        super(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"     * Provides a formatted string for saving this event task to a file.","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"     * @return A formatted string suitable for file storage.","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"    public String fileSaveFormat() {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"        return \"E|\" + super.fileSaveFormat() + \"|\" +","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"                from.format(formatter) + \"|\" + to.format(formatter);","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"     * Converts the event task to a string format for display.","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"andrefoo"},"content":"     * @return A formatted string representing this task.","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"andrefoo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"andrefoo"},"content":"        return \"[E]\" + super.toString() +","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"andrefoo"},"content":"                \" (from: \" + formatDate(from) + \" to: \" + formatDate(to) + \")\";","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"andrefoo"},"content":"     * Formats the date for display purposes.","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"andrefoo"},"content":"     * @param date The date to be formatted.","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"andrefoo"},"content":"     * @return A string representing the formatted date.","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"andrefoo"},"content":"    private String formatDate(LocalDate date) {","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"andrefoo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"andrefoo"},"content":"        return date.format(formatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"andrefoo":52}},{"path":"src/main/java/dre/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.task;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":" * Represents a generic task.","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":"    private String description;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":"    private boolean done;","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"     * Creates a default generic task.","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"    public Task() {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"        description \u003d \"default\";","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"        done \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"     * Creates a new generic task.","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"     * @param newTask The description of the task.","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"    public Task(String newTask){","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"        description \u003d newTask;","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"        done \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"     * Checks if the task is done.","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"     * @return true if the task is done, false otherwise.","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"andrefoo"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"andrefoo"},"content":"        return done;","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"andrefoo"},"content":"     * Marks the task as done, no matter the current status of task.","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"andrefoo"},"content":"    public void done() {","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"andrefoo"},"content":"        done \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"andrefoo"},"content":"     * Unmarks the task as not done, no matter the current status of task.","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"andrefoo"},"content":"    public void undo() {","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"andrefoo"},"content":"        done \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"andrefoo"},"content":"     * For display and saving purposes, shows whether the task is done.","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"andrefoo"},"content":"     * @return The status icon.","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"andrefoo"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"andrefoo"},"content":"        return (done ? \"X\" : \" \");","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"andrefoo"},"content":"     * Provides a formatted string for saving this task to a file.","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"andrefoo"},"content":"     * @return A formatted string suitable for file storage.","lastModifiedDate":"2023-09-09"},{"lineNumber":66,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"andrefoo"},"content":"    public String fileSaveFormat() {","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"andrefoo"},"content":"        return getStatusIcon() + \"|\" + description;","lastModifiedDate":"2023-09-09"},{"lineNumber":69,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":72,"author":{"gitId":"andrefoo"},"content":"     * Converts the task to a string format for display.","lastModifiedDate":"2023-09-09"},{"lineNumber":73,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":74,"author":{"gitId":"andrefoo"},"content":"     * @return A formatted string representing this task.","lastModifiedDate":"2023-09-09"},{"lineNumber":75,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":76,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"andrefoo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"andrefoo"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-09-09"},{"lineNumber":79,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":81,"author":{"gitId":"andrefoo"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-09"},{"lineNumber":82,"author":{"gitId":"andrefoo"},"content":"        return description;","lastModifiedDate":"2023-09-09"},{"lineNumber":83,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":84,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"andrefoo":84}},{"path":"src/main/java/dre/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.task;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"import java.util.List;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"import dre.exception.DreException;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":" * Represents a list of tasks, providing functionalities to manage and manipulate tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"public class TaskList {","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"     * Creates a new empty task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"     * Creates a new task list with the given initial tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"     * @param tasks A list of tasks to initialize the TaskList with.","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"     * Marks a task as done using its index.","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"andrefoo"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"andrefoo"},"content":"     * @throws DreException If the provided index is invalid.","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"andrefoo"},"content":"    public void mark(int index) throws DreException {","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"andrefoo"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"andrefoo"},"content":"            Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"andrefoo"},"content":"            task.done();","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"andrefoo"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"andrefoo"},"content":"            throw new DreException(\"Invalid dre.task index.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"andrefoo"},"content":"     * Unmarks a task as done using its index.","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"andrefoo"},"content":"     * @param index The index of the task to be unmarked.","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"andrefoo"},"content":"     * @throws DreException If the provided index is invalid.","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"andrefoo"},"content":"    public void unmark(int index) throws DreException {","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"andrefoo"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"andrefoo"},"content":"            Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"andrefoo"},"content":"            task.undo();","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"andrefoo"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"andrefoo"},"content":"            throw new DreException(\"Invalid dre.task index.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"andrefoo"},"content":"     * Retrieves a task from the list using its index.","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"andrefoo"},"content":"     * @param index The index of the task to be retrieved.","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"andrefoo"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-09-09"},{"lineNumber":66,"author":{"gitId":"andrefoo"},"content":"     * @throws DreException If the provided index is invalid.","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":68,"author":{"gitId":"andrefoo"},"content":"    public Task getTask(int index) throws DreException {","lastModifiedDate":"2023-09-04"},{"lineNumber":69,"author":{"gitId":"andrefoo"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":70,"author":{"gitId":"andrefoo"},"content":"            return tasks.get(index - 1);","lastModifiedDate":"2023-09-04"},{"lineNumber":71,"author":{"gitId":"andrefoo"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":72,"author":{"gitId":"andrefoo"},"content":"            throw new DreException(\"Invalid dre.task index.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":74,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":76,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":77,"author":{"gitId":"andrefoo"},"content":"     * Deletes a task from the list using its index.","lastModifiedDate":"2023-09-09"},{"lineNumber":78,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":79,"author":{"gitId":"andrefoo"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2023-09-09"},{"lineNumber":80,"author":{"gitId":"andrefoo"},"content":"     * @throws DreException If the provided index is invalid.","lastModifiedDate":"2023-09-09"},{"lineNumber":81,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":82,"author":{"gitId":"andrefoo"},"content":"    public void deleteTask(int index) throws DreException {","lastModifiedDate":"2023-09-04"},{"lineNumber":83,"author":{"gitId":"andrefoo"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":84,"author":{"gitId":"andrefoo"},"content":"            tasks.remove(index - 1);","lastModifiedDate":"2023-09-04"},{"lineNumber":85,"author":{"gitId":"andrefoo"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":86,"author":{"gitId":"andrefoo"},"content":"            throw new DreException(\"Invalid dre.task index.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":88,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":89,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":90,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":91,"author":{"gitId":"andrefoo"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":92,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":93,"author":{"gitId":"andrefoo"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-09-09"},{"lineNumber":94,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":95,"author":{"gitId":"andrefoo"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-04"},{"lineNumber":96,"author":{"gitId":"andrefoo"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-04"},{"lineNumber":97,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":98,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":99,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":100,"author":{"gitId":"andrefoo"},"content":"     * Finds task in the tasklist that contain the keyword.","lastModifiedDate":"2023-09-09"},{"lineNumber":101,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":102,"author":{"gitId":"andrefoo"},"content":"     * @param keyword The String used for search","lastModifiedDate":"2023-09-09"},{"lineNumber":103,"author":{"gitId":"andrefoo"},"content":"     * @return TaskList of tasks that match the search","lastModifiedDate":"2023-09-09"},{"lineNumber":104,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":105,"author":{"gitId":"andrefoo"},"content":"    public TaskList findTasksByKeyword(String keyword) {","lastModifiedDate":"2023-09-09"},{"lineNumber":106,"author":{"gitId":"andrefoo"},"content":"        List\u003cTask\u003e foundTasks \u003d this.tasks.stream()","lastModifiedDate":"2023-09-09"},{"lineNumber":107,"author":{"gitId":"andrefoo"},"content":"                .filter(task -\u003e task.getDescription().contains(keyword))","lastModifiedDate":"2023-09-09"},{"lineNumber":108,"author":{"gitId":"andrefoo"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-09-09"},{"lineNumber":109,"author":{"gitId":"andrefoo"},"content":"        return new TaskList(foundTasks);","lastModifiedDate":"2023-09-09"},{"lineNumber":110,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":111,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":112,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":113,"author":{"gitId":"andrefoo"},"content":"     * Retrieves the size (number of tasks) of the task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":114,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":115,"author":{"gitId":"andrefoo"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2023-09-09"},{"lineNumber":116,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":117,"author":{"gitId":"andrefoo"},"content":"    public int size() {","lastModifiedDate":"2023-09-04"},{"lineNumber":118,"author":{"gitId":"andrefoo"},"content":"        return tasks.size();","lastModifiedDate":"2023-09-04"},{"lineNumber":119,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":120,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"andrefoo":120}},{"path":"src/main/java/dre/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.task;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":" * Represents a simple to-do task.","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":"     * Creates a new to-do task.","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"     * @param task The description of the task.","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"    public ToDo(String task) {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"        super(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"     * Provides a formatted string for saving this to-do task to a file.","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"     * @return A formatted string suitable for file storage.","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"    public String fileSaveFormat() {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"        return \"T|\" + super.fileSaveFormat();","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"     * Converts the task to a string format for display.","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"     * @return A formatted string representing this task.","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"andrefoo"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"andrefoo":36}},{"path":"src/main/java/dre/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"import dre.task.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"import dre.exception.DreException;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"import dre.task.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":" * Represents the User Interface responsible for interactions between the user and the application.","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"public class Ui {","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"     * Displays an error message indicating issues with loading tasks from storage.","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"        System.out.println(\"Error reading tasks from file.\");","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"     * Displays a specified error message to the user.","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"    public void showError(String message) {","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"        System.out.println(message);","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"     * Displays a line separator in the user interface.","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"    public void showLine() {","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"andrefoo"},"content":"     * Displays the welcome message to the user upon starting the application.","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"andrefoo"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"andrefoo"},"content":"        showLine();","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"andrefoo"},"content":"        System.out.println(\"Hello! I\u0027m Dre\");","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"andrefoo"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"andrefoo"},"content":"        showLine();","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"andrefoo"},"content":"     * Displays the goodbye message to the user upon exiting the application.","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"andrefoo"},"content":"    public void showGoodbye() {","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"andrefoo"},"content":"        showLine();","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"andrefoo"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"andrefoo"},"content":"        showLine();","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"andrefoo"},"content":"     * Displays the tasks present in the user\u0027s task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"andrefoo"},"content":"     * @param tasks The task list to be displayed.","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"andrefoo"},"content":"     * @throws DreException If there is an error while processing the task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"andrefoo"},"content":"    public void showTasks(TaskList tasks) throws DreException {","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"andrefoo"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"andrefoo"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"andrefoo"},"content":"            System.out.println((i) + \". \" + tasks.getTask(i));","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":66,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":67,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":68,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":69,"author":{"gitId":"andrefoo"},"content":"     * Displays a message indicating a task has been unmarked.","lastModifiedDate":"2023-09-09"},{"lineNumber":70,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":71,"author":{"gitId":"andrefoo"},"content":"     * @param task The task that was unmarked.","lastModifiedDate":"2023-09-09"},{"lineNumber":72,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":73,"author":{"gitId":"andrefoo"},"content":"    public void showUnmarkedTask(Task task) {","lastModifiedDate":"2023-09-04"},{"lineNumber":74,"author":{"gitId":"andrefoo"},"content":"        System.out.println(\"Ok! I\u0027ve marked this task as undone:\");","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"andrefoo"},"content":"        System.out.println(task);","lastModifiedDate":"2023-09-04"},{"lineNumber":76,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":77,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":78,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":79,"author":{"gitId":"andrefoo"},"content":"     * Displays a message indicating a task has been deleted.","lastModifiedDate":"2023-09-09"},{"lineNumber":80,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":81,"author":{"gitId":"andrefoo"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2023-09-09"},{"lineNumber":82,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":83,"author":{"gitId":"andrefoo"},"content":"    public void showDeletedTask(Task task) {","lastModifiedDate":"2023-09-04"},{"lineNumber":84,"author":{"gitId":"andrefoo"},"content":"        System.out.println(\"Task deleted:\");","lastModifiedDate":"2023-09-04"},{"lineNumber":85,"author":{"gitId":"andrefoo"},"content":"        System.out.println(task);","lastModifiedDate":"2023-09-04"},{"lineNumber":86,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":87,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":88,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":89,"author":{"gitId":"andrefoo"},"content":"     * Displays a message indicating a task has been added.","lastModifiedDate":"2023-09-09"},{"lineNumber":90,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":91,"author":{"gitId":"andrefoo"},"content":"     * @param task The task that was added.","lastModifiedDate":"2023-09-09"},{"lineNumber":92,"author":{"gitId":"andrefoo"},"content":"     * @param totalTasks The total number of tasks in the task list after addition.","lastModifiedDate":"2023-09-09"},{"lineNumber":93,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":94,"author":{"gitId":"andrefoo"},"content":"    public void showAddedTask(Task task, int totalTasks) {","lastModifiedDate":"2023-09-04"},{"lineNumber":95,"author":{"gitId":"andrefoo"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-09-04"},{"lineNumber":96,"author":{"gitId":"andrefoo"},"content":"        System.out.println(task);","lastModifiedDate":"2023-09-04"},{"lineNumber":97,"author":{"gitId":"andrefoo"},"content":"        System.out.println(\"Now you have \" + totalTasks + \" tasks in the list.\");","lastModifiedDate":"2023-09-04"},{"lineNumber":98,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":99,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":100,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":101,"author":{"gitId":"andrefoo"},"content":"     * Displays a message indicating a task has been marked as done.","lastModifiedDate":"2023-09-09"},{"lineNumber":102,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":103,"author":{"gitId":"andrefoo"},"content":"     * @param task The task that was marked as done.","lastModifiedDate":"2023-09-09"},{"lineNumber":104,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":105,"author":{"gitId":"andrefoo"},"content":"    public void showMarkedTask(Task task) {","lastModifiedDate":"2023-09-04"},{"lineNumber":106,"author":{"gitId":"andrefoo"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-09-04"},{"lineNumber":107,"author":{"gitId":"andrefoo"},"content":"        System.out.println(task);","lastModifiedDate":"2023-09-04"},{"lineNumber":108,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":109,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":110,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":111,"author":{"gitId":"andrefoo"},"content":"     * Displays a message indicating the tasks that match the search.","lastModifiedDate":"2023-09-09"},{"lineNumber":112,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":113,"author":{"gitId":"andrefoo"},"content":"     * @param tasks The tasks that match the search description.","lastModifiedDate":"2023-09-09"},{"lineNumber":114,"author":{"gitId":"andrefoo"},"content":"     * @throws DreException If there is an error while processing the task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":115,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":116,"author":{"gitId":"andrefoo"},"content":"    public void showFoundTasks(TaskList tasks) throws DreException {","lastModifiedDate":"2023-09-09"},{"lineNumber":117,"author":{"gitId":"andrefoo"},"content":"        if (tasks.size() \u003c 1) {","lastModifiedDate":"2023-09-09"},{"lineNumber":118,"author":{"gitId":"andrefoo"},"content":"            System.out.println(\"Sorry, no tasks match that description.\");","lastModifiedDate":"2023-09-09"},{"lineNumber":119,"author":{"gitId":"andrefoo"},"content":"            return;","lastModifiedDate":"2023-09-09"},{"lineNumber":120,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":121,"author":{"gitId":"andrefoo"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-09-09"},{"lineNumber":122,"author":{"gitId":"andrefoo"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2023-09-09"},{"lineNumber":123,"author":{"gitId":"andrefoo"},"content":"            System.out.println((i) + \".\" + tasks.getTask(i));","lastModifiedDate":"2023-09-09"},{"lineNumber":124,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":125,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":126,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":127,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":128,"author":{"gitId":"andrefoo"},"content":"     * Reads the user\u0027s command input.","lastModifiedDate":"2023-09-09"},{"lineNumber":129,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":130,"author":{"gitId":"andrefoo"},"content":"     * @return The user\u0027s input as a string.","lastModifiedDate":"2023-09-09"},{"lineNumber":131,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":132,"author":{"gitId":"andrefoo"},"content":"    public String readCommand() {","lastModifiedDate":"2023-09-04"},{"lineNumber":133,"author":{"gitId":"andrefoo"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-04"},{"lineNumber":134,"author":{"gitId":"andrefoo"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-09-04"},{"lineNumber":135,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":136,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"andrefoo":136}},{"path":"src/test/java/dre/DreTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"public class DreTest {","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"andrefoo":4}},{"path":"src/test/java/dre/command/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.command;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"public class AddCommandTest {","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"andrefoo":4}},{"path":"src/test/java/dre/command/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.command;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"public class CommandTest {","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"andrefoo":4}},{"path":"src/test/java/dre/command/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.command;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"andrefoo":4}},{"path":"src/test/java/dre/command/ExitCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.command;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"public class ExitCommandTest {","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"andrefoo":4}},{"path":"src/test/java/dre/command/ListCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.command;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"public class ListCommandTest {","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"andrefoo":4}},{"path":"src/test/java/dre/command/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.command;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"public class MarkCommandTest {","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"andrefoo":4}},{"path":"src/test/java/dre/command/UnmarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.command;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"public class UnmarkCommandTest {","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"andrefoo":4}},{"path":"src/test/java/dre/exception/DreExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.exception;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"public class DreExceptionTest {","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"andrefoo":4}},{"path":"src/test/java/dre/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.parser;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"andrefoo":4}},{"path":"src/test/java/dre/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.storage;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"public class StorageTest {","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"andrefoo":4}},{"path":"src/test/java/dre/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.task;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"    public void testFileSaveFormat1() {","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"        Deadline testDeadline \u003d new Deadline(\"learn to fly plane\", LocalDate.parse(\"2001-09-11\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"        assertEquals(testDeadline.fileSaveFormat(), \"D| |learn to fly plane|2001-09-11\");","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"    public void testFileSaveFormat2() {","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"        Deadline testDeadline \u003d new Deadline(\"    extra spaces\", LocalDate.parse(\"2001-09-11\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"        assertEquals(testDeadline.fileSaveFormat(), \"D| |    extra spaces|2001-09-11\");","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"    public void testFileSaveFormat3() {","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"        Deadline testDeadline \u003d new Deadline(\"learn to fly plane\", LocalDate.parse(\"2001-01-31\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"        assertEquals(testDeadline.fileSaveFormat(), \"D| |learn to fly plane|2001-01-31\");","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"    public void testToString() {","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"        Deadline testDeadline \u003d new Deadline(\"learn to fly plane\", LocalDate.parse(\"2001-09-11\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"        assertEquals(testDeadline.toString(), \"[D][ ] learn to fly plane (by: Sep 11 2001)\");","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"andrefoo":34}},{"path":"src/test/java/dre/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.task;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":"public class EventTest {","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"    public void testFileSaveFormat1() {","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"        Event testEvent \u003d new Event(\"get blueprint\", LocalDate.parse(\"2001-09-11\"),","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"                LocalDate.parse(\"2001-09-11\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"        assertEquals(testEvent.fileSaveFormat(), \"E| |get blueprint|2001-09-11|2001-09-11\");","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"    public void testFileSaveFormat2() {","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"        //test space trim","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"        Event testEvent \u003d new Event(\"    extra spaces\", LocalDate.parse(\"2001-09-11\"),","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"                LocalDate.parse(\"2001-09-11\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"        assertEquals(testEvent.fileSaveFormat(), \"E| |    extra spaces|2001-09-11|2001-09-11\");","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"    public void testFileSaveFormat3() {","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"        //test different date format entry","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"        Event testEvent \u003d new Event(\"learn to fly plane\", LocalDate.parse(\"2001-01-31\"),","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"                LocalDate.parse(\"2001-01-31\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"        assertEquals(testEvent.fileSaveFormat(), \"E| |learn to fly plane|2001-01-31|2001-01-31\");","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"andrefoo"},"content":"    public void testToString() {","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"andrefoo"},"content":"        Event testEvent \u003d new Event(\"learn to fly plane\", LocalDate.parse(\"2001-09-01\"),","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"andrefoo"},"content":"                LocalDate.parse(\"2001-09-07\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"andrefoo"},"content":"        assertEquals(testEvent.toString(), \"[E][ ] learn to fly plane (from: Sep 01 2001 to: Sep 07 2001)\");","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"andrefoo":39}},{"path":"src/test/java/dre/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.task;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"andrefoo":4}},{"path":"src/test/java/dre/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.task;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"public class TaskTest {","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"    public void testInitialTaskStatus() {","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"        Task task \u003d new Task(\"Sample\");","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"        assertFalse(task.isDone(), \"New task should not be marked as done.\");","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"    public void testMarkTaskAsDone() {","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"        Task task \u003d new Task(\"Sample\");","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"        task.done();","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"        assertTrue(task.isDone(), \"Task should be marked as done after calling markAsDone().\");","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"    public void testFileSaveFormat() {","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"        Task task \u003d new Task(\"something something\");","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"        assertEquals(task.fileSaveFormat(), \" |something something\");","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"andrefoo":28}},{"path":"src/test/java/dre/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.task;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"public class TodoTest {","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"    public void testFileSaveFormat1() {","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":"        ToDo testDeadline \u003d new ToDo(\"find a boeing\");","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":"        assertEquals(testDeadline.fileSaveFormat(), \"T| |find a boeing\");","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"    public void testFileSaveFormat2() {","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"        //test space trim","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"        ToDo testDeadline \u003d new ToDo(\"    extra spaces\");","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"        assertEquals(testDeadline.fileSaveFormat(), \"T| |    extra spaces\");","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"    public void testFileSaveFormat3() {","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"        //test different date format entry","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"        ToDo testDeadline \u003d new ToDo(\"learn to fly plane\");","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"        assertEquals(testDeadline.fileSaveFormat(), \"T| |learn to fly plane\");","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"    public void testToString() {","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"        ToDo testDeadline \u003d new ToDo(\"learn to fly plane\");","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"        assertEquals(testDeadline.toString(), \"[T][ ] learn to fly plane\");","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"andrefoo":32}},{"path":"src/test/java/dre/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package dre.ui;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"public class UiTest {","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"andrefoo":4}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"todo one","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"deadline two /by time","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"list","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"mark 1","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"event three /from now /to later","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"bye","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"andrefoo":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"java -classpath ..\\bin Dre \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"andrefoo":1,"-":20}}]
