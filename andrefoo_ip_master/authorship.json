[{"path":"data/dre.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"T| |something","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"D|X|something|2023-12-31","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"E| |something else|1000-01-01|1000-10-10","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"andrefoo":3}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"    private LocalDate by;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"    public Deadline(String task, LocalDate by) {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"        super(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"    public String fileSaveFormat() {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"        return \"D|\" + super.fileSaveFormat() + \"|\" + by.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formatDate(by) + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"    private String formatDate(LocalDate date) {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"        return date.format(formatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"andrefoo":26}},{"path":"src/main/java/Dre.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"import java.io.*;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"import java.util.List;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":"public class Dre {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"    private List\u003cTask\u003e list;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"    private final String dataFilePath \u003d \"./data/dre.txt\";","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"    public Dre() {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"        list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"        loadTasks();","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"    private LocalDate parseDate(String dateString) {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"        DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"); // adjust format","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"        return LocalDate.parse(dateString, inputFormatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"    public void saveTasks() {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(dataFilePath))) {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"            for (Task task : list) {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"                // Write task details to the file","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"                writer.write(task.fileSaveFormat());","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"                writer.newLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"            System.out.println(\"Error saving tasks to the file.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"andrefoo"},"content":"    public void loadTasks() {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"andrefoo"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"andrefoo"},"content":"            File file \u003d new File(dataFilePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"andrefoo"},"content":"            if (file.exists()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"andrefoo"},"content":"                try (BufferedReader reader \u003d new BufferedReader(new FileReader(dataFilePath))) {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"andrefoo"},"content":"                    String line;","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"andrefoo"},"content":"                    while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"andrefoo"},"content":"                        parseTask(line);","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"andrefoo"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"andrefoo"},"content":"                } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"andrefoo"},"content":"                    System.out.println(\"Error reading tasks from file.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"andrefoo"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"andrefoo"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"andrefoo"},"content":"                System.out.println(\"No saved tasks found.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"andrefoo"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"andrefoo"},"content":"        } catch (SecurityException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"andrefoo"},"content":"            System.out.println(\"Access to file is denied.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"andrefoo"},"content":"    private void parseTask(String line) {","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"andrefoo"},"content":"        String type \u003d line.substring(0, 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"andrefoo"},"content":"        boolean isDone \u003d line.charAt(2) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"andrefoo"},"content":"        String description;","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"andrefoo"},"content":"        Task task \u003d null;","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"andrefoo"},"content":"        switch (type) {","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"andrefoo"},"content":"            case \"T\":","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"andrefoo"},"content":"                String[] todoInfo \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"andrefoo"},"content":"                task \u003d new ToDo(todoInfo[2]);","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"andrefoo"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"andrefoo"},"content":"            case \"D\":","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"andrefoo"},"content":"//                description \u003d description.substring(0, description.indexOf(\u0027(\u0027) - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"andrefoo"},"content":"//                String additionalInfo \u003d line.substring(line.indexOf(\u0027(\u0027) + 1, line.indexOf(\u0027)\u0027));","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"andrefoo"},"content":"//                String[] deadlineInfo \u003d additionalInfo.split(\": \");","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"andrefoo"},"content":"//                LocalDate byDate \u003d parseDate(deadlineInfo[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"andrefoo"},"content":"//                task \u003d new Deadline(description, byDate);","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"andrefoo"},"content":"//                break;","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"andrefoo"},"content":"                System.out.println(line);","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"andrefoo"},"content":"                String[] deadlineInfo \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"andrefoo"},"content":"                System.out.println(Arrays.toString(deadlineInfo));","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"andrefoo"},"content":"                description \u003d deadlineInfo[2].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"andrefoo"},"content":"                LocalDate byDate \u003d parseDate(deadlineInfo[3].trim());","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"andrefoo"},"content":"                task \u003d new Deadline(description, byDate);","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"andrefoo"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"andrefoo"},"content":"            case \"E\":","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"andrefoo"},"content":"//                description \u003d description.substring(0, description.indexOf(\u0027(\u0027) - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"andrefoo"},"content":"//                String addInfo \u003d line.substring(line.indexOf(\u0027(\u0027) + 1, line.indexOf(\u0027)\u0027));","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"andrefoo"},"content":"//                String[] eventInfo \u003d addInfo.split(\":\");","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"andrefoo"},"content":"//                LocalDate fromDate \u003d parseDate(eventInfo[1].substring(0, eventInfo[1].length() - 2).trim());","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"andrefoo"},"content":"//                LocalDate toDate \u003d parseDate(eventInfo[2].trim());","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"andrefoo"},"content":"//                task \u003d new Event(description, fromDate, toDate);","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"andrefoo"},"content":"//                break;","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"andrefoo"},"content":"                String[] eventInfo \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"andrefoo"},"content":"                description \u003d eventInfo[2];","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"andrefoo"},"content":"                LocalDate fromDate \u003d parseDate(eventInfo[3]);","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"andrefoo"},"content":"                LocalDate toDate \u003d parseDate(eventInfo[4]);","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"andrefoo"},"content":"                task \u003d new Event(description, fromDate, toDate);","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"andrefoo"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"andrefoo"},"content":"            if (isDone) {","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"andrefoo"},"content":"                task.done();","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"andrefoo"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"andrefoo"},"content":"            list.add(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"andrefoo"},"content":"    public void greet() {","lastModifiedDate":"2023-08-24"},{"lineNumber":107,"author":{"gitId":"andrefoo"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"andrefoo"},"content":"        System.out.println(\"Hello! I\u0027m Dre\");","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"andrefoo"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"andrefoo"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":112,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"andrefoo"},"content":"    public void exit() {","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"andrefoo"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"andrefoo"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"andrefoo"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":117,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":118,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":119,"author":{"gitId":"andrefoo"},"content":"    public void add(String next) {","lastModifiedDate":"2023-08-24"},{"lineNumber":120,"author":{"gitId":"andrefoo"},"content":"        if (next.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":121,"author":{"gitId":"andrefoo"},"content":"            String desc \u003d next.substring(4).trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"andrefoo"},"content":"            if (desc.isBlank()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":123,"author":{"gitId":"andrefoo"},"content":"                System.out.println(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":124,"author":{"gitId":"andrefoo"},"content":"                return;","lastModifiedDate":"2023-08-26"},{"lineNumber":125,"author":{"gitId":"andrefoo"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":126,"author":{"gitId":"andrefoo"},"content":"            ToDo task \u003d new ToDo(desc);","lastModifiedDate":"2023-08-26"},{"lineNumber":127,"author":{"gitId":"andrefoo"},"content":"            list.add(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":128,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":129,"author":{"gitId":"andrefoo"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":130,"author":{"gitId":"andrefoo"},"content":"            System.out.println(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"andrefoo"},"content":"        } else if (next.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":132,"author":{"gitId":"andrefoo"},"content":"            String desc \u003d next.substring(8, next.indexOf(\"/by\") - 1).trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"andrefoo"},"content":"            String by \u003d next.substring(next.indexOf(\"/by\") + 4);","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"andrefoo"},"content":"            if (desc.isBlank()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":135,"author":{"gitId":"andrefoo"},"content":"                System.out.println(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":136,"author":{"gitId":"andrefoo"},"content":"                return;","lastModifiedDate":"2023-08-26"},{"lineNumber":137,"author":{"gitId":"andrefoo"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":138,"author":{"gitId":"andrefoo"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"andrefoo"},"content":"                LocalDate byDate \u003d parseDate(by);","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"andrefoo"},"content":"                Deadline task \u003d new Deadline(desc, byDate);","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"andrefoo"},"content":"                list.add(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":142,"author":{"gitId":"andrefoo"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":143,"author":{"gitId":"andrefoo"},"content":"                System.out.println(task);","lastModifiedDate":"2023-08-26"},{"lineNumber":144,"author":{"gitId":"andrefoo"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":145,"author":{"gitId":"andrefoo"},"content":"                System.out.println(\"OOPS!!! Invalid date format for deadline. Use this format: yyyy-mm-dd\");","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"andrefoo"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":147,"author":{"gitId":"andrefoo"},"content":"        } else if (next.startsWith(\"event\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":148,"author":{"gitId":"andrefoo"},"content":"            String desc \u003d next.substring(5, next.indexOf(\"/from\") - 1).trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":149,"author":{"gitId":"andrefoo"},"content":"            String from \u003d next.substring(next.indexOf(\"/from\") + 6, next.indexOf(\"/to\") - 1);","lastModifiedDate":"2023-08-26"},{"lineNumber":150,"author":{"gitId":"andrefoo"},"content":"            String to \u003d next.substring(next.indexOf(\"/to\") + 4);","lastModifiedDate":"2023-08-26"},{"lineNumber":151,"author":{"gitId":"andrefoo"},"content":"            if (desc.isBlank()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":152,"author":{"gitId":"andrefoo"},"content":"                System.out.println(\"OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":153,"author":{"gitId":"andrefoo"},"content":"                return;","lastModifiedDate":"2023-08-26"},{"lineNumber":154,"author":{"gitId":"andrefoo"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":155,"author":{"gitId":"andrefoo"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":156,"author":{"gitId":"andrefoo"},"content":"                LocalDate fromDate \u003d parseDate(from);","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"andrefoo"},"content":"                LocalDate toDate \u003d parseDate(to);","lastModifiedDate":"2023-09-01"},{"lineNumber":158,"author":{"gitId":"andrefoo"},"content":"                Event task \u003d new Event(desc, fromDate, toDate);","lastModifiedDate":"2023-09-01"},{"lineNumber":159,"author":{"gitId":"andrefoo"},"content":"                list.add(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":160,"author":{"gitId":"andrefoo"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":161,"author":{"gitId":"andrefoo"},"content":"                System.out.println(task);","lastModifiedDate":"2023-08-26"},{"lineNumber":162,"author":{"gitId":"andrefoo"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":163,"author":{"gitId":"andrefoo"},"content":"            System.out.println(\"OOPS!!! Invalid date format for event. Use this format: yyyy-mm-dd\");","lastModifiedDate":"2023-09-01"},{"lineNumber":164,"author":{"gitId":"andrefoo"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":165,"author":{"gitId":"andrefoo"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":166,"author":{"gitId":"andrefoo"},"content":"            System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-26"},{"lineNumber":167,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":168,"author":{"gitId":"andrefoo"},"content":"        System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":169,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":170,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":171,"author":{"gitId":"andrefoo"},"content":"    public void list() {","lastModifiedDate":"2023-08-24"},{"lineNumber":172,"author":{"gitId":"andrefoo"},"content":"        for(int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-08-24"},{"lineNumber":173,"author":{"gitId":"andrefoo"},"content":"            System.out.println((i + 1) + \". \" + list.get(i).toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":174,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":175,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":176,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":177,"author":{"gitId":"andrefoo"},"content":"    public void mark(String next) {","lastModifiedDate":"2023-08-24"},{"lineNumber":178,"author":{"gitId":"andrefoo"},"content":"        int start \u003d next.lastIndexOf(\u0027 \u0027);","lastModifiedDate":"2023-08-24"},{"lineNumber":179,"author":{"gitId":"andrefoo"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":180,"author":{"gitId":"andrefoo"},"content":"            int taskIndex \u003d Integer.parseInt(next.substring(start + 1));","lastModifiedDate":"2023-08-24"},{"lineNumber":181,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":182,"author":{"gitId":"andrefoo"},"content":"            if (taskIndex \u003c\u003d 0 || taskIndex \u003e list.size()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":183,"author":{"gitId":"andrefoo"},"content":"                System.out.println(\"Invalid task index.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":184,"author":{"gitId":"andrefoo"},"content":"            } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":185,"author":{"gitId":"andrefoo"},"content":"                Task currTask \u003d list.get(taskIndex - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":186,"author":{"gitId":"andrefoo"},"content":"                currTask.done();","lastModifiedDate":"2023-08-24"},{"lineNumber":187,"author":{"gitId":"andrefoo"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":188,"author":{"gitId":"andrefoo"},"content":"                System.out.println(currTask);","lastModifiedDate":"2023-08-26"},{"lineNumber":189,"author":{"gitId":"andrefoo"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":190,"author":{"gitId":"andrefoo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":191,"author":{"gitId":"andrefoo"},"content":"            System.out.println(\"Invalid input. Task index must be an integer.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":192,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":193,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":194,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":195,"author":{"gitId":"andrefoo"},"content":"    public void unmark (String next) {","lastModifiedDate":"2023-08-24"},{"lineNumber":196,"author":{"gitId":"andrefoo"},"content":"        int start \u003d next.lastIndexOf(\u0027 \u0027);","lastModifiedDate":"2023-08-24"},{"lineNumber":197,"author":{"gitId":"andrefoo"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":198,"author":{"gitId":"andrefoo"},"content":"            int taskIndex \u003d Integer.parseInt(next.substring(start + 1));","lastModifiedDate":"2023-08-24"},{"lineNumber":199,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":200,"author":{"gitId":"andrefoo"},"content":"            if (taskIndex \u003c\u003d 0 || taskIndex \u003e list.size()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":201,"author":{"gitId":"andrefoo"},"content":"                System.out.println(\"Invalid task index.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":202,"author":{"gitId":"andrefoo"},"content":"            } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":203,"author":{"gitId":"andrefoo"},"content":"                Task currTask \u003d list.get(taskIndex - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":204,"author":{"gitId":"andrefoo"},"content":"                currTask.done();","lastModifiedDate":"2023-08-24"},{"lineNumber":205,"author":{"gitId":"andrefoo"},"content":"                System.out.println(\"Ok! I\u0027ve marked this task as undone:\");","lastModifiedDate":"2023-08-26"},{"lineNumber":206,"author":{"gitId":"andrefoo"},"content":"                System.out.println(currTask);","lastModifiedDate":"2023-08-26"},{"lineNumber":207,"author":{"gitId":"andrefoo"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":208,"author":{"gitId":"andrefoo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":209,"author":{"gitId":"andrefoo"},"content":"            System.out.println(\"Invalid input. Task index must be an integer.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":210,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":211,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":212,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":213,"author":{"gitId":"andrefoo"},"content":"    public void delete(String next) {","lastModifiedDate":"2023-08-26"},{"lineNumber":214,"author":{"gitId":"andrefoo"},"content":"        int start \u003d next.lastIndexOf(\u0027 \u0027);","lastModifiedDate":"2023-08-26"},{"lineNumber":215,"author":{"gitId":"andrefoo"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":216,"author":{"gitId":"andrefoo"},"content":"            int taskIndex \u003d Integer.parseInt(next.substring(start + 1));","lastModifiedDate":"2023-08-26"},{"lineNumber":217,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":218,"author":{"gitId":"andrefoo"},"content":"            if (taskIndex \u003c\u003d 0 || taskIndex \u003e list.size()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":219,"author":{"gitId":"andrefoo"},"content":"                System.out.println(\"Invalid task index.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":220,"author":{"gitId":"andrefoo"},"content":"            } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":221,"author":{"gitId":"andrefoo"},"content":"                Task deletedTask \u003d list.remove(taskIndex - 1);","lastModifiedDate":"2023-08-26"},{"lineNumber":222,"author":{"gitId":"andrefoo"},"content":"                System.out.println(\"Task deleted:\");","lastModifiedDate":"2023-08-26"},{"lineNumber":223,"author":{"gitId":"andrefoo"},"content":"                System.out.println(deletedTask.toString());","lastModifiedDate":"2023-08-26"},{"lineNumber":224,"author":{"gitId":"andrefoo"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":225,"author":{"gitId":"andrefoo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":226,"author":{"gitId":"andrefoo"},"content":"            System.out.println(\"Invalid input. Task index must be an integer.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":227,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":228,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":229,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":230,"author":{"gitId":"andrefoo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-24"},{"lineNumber":231,"author":{"gitId":"andrefoo"},"content":"        Dre dre \u003d new Dre();","lastModifiedDate":"2023-08-24"},{"lineNumber":232,"author":{"gitId":"andrefoo"},"content":"        dre.greet();","lastModifiedDate":"2023-08-24"},{"lineNumber":233,"author":{"gitId":"andrefoo"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-24"},{"lineNumber":234,"author":{"gitId":"andrefoo"},"content":"        String next \u003d sc.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":235,"author":{"gitId":"andrefoo"},"content":"        while (!next.equals(\"bye\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":236,"author":{"gitId":"andrefoo"},"content":"            if (next.equals(\"list\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":237,"author":{"gitId":"andrefoo"},"content":"                dre.list();","lastModifiedDate":"2023-08-24"},{"lineNumber":238,"author":{"gitId":"andrefoo"},"content":"            } else if (next.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":239,"author":{"gitId":"andrefoo"},"content":"                dre.mark(next);","lastModifiedDate":"2023-08-24"},{"lineNumber":240,"author":{"gitId":"andrefoo"},"content":"            } else if (next.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":241,"author":{"gitId":"andrefoo"},"content":"                dre.unmark(next);","lastModifiedDate":"2023-08-24"},{"lineNumber":242,"author":{"gitId":"andrefoo"},"content":"            } else if (next.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":243,"author":{"gitId":"andrefoo"},"content":"                dre.delete(next);","lastModifiedDate":"2023-08-26"},{"lineNumber":244,"author":{"gitId":"andrefoo"},"content":"            } else if (!next.trim().isEmpty()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":245,"author":{"gitId":"andrefoo"},"content":"                dre.add(next);","lastModifiedDate":"2023-08-24"},{"lineNumber":246,"author":{"gitId":"andrefoo"},"content":"            } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":247,"author":{"gitId":"andrefoo"},"content":"                System.out.println(\"Invalid input.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":248,"author":{"gitId":"andrefoo"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":249,"author":{"gitId":"andrefoo"},"content":"            next \u003d sc.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":250,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":251,"author":{"gitId":"andrefoo"},"content":"        sc.close();","lastModifiedDate":"2023-08-24"},{"lineNumber":252,"author":{"gitId":"andrefoo"},"content":"        dre.saveTasks();","lastModifiedDate":"2023-08-29"},{"lineNumber":253,"author":{"gitId":"andrefoo"},"content":"        dre.exit();","lastModifiedDate":"2023-08-24"},{"lineNumber":254,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":255,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"andrefoo":255}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"    private LocalDate from;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"    private LocalDate to;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"    public Event(String task, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":"        super(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"    public String fileSaveFormat() {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"        return \"E|\" + super.fileSaveFormat() + \"|\" + from.format(formatter) + \"|\" + to.format(formatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + formatDate(from) + \" to: \" + formatDate(to) + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"    private String formatDate(LocalDate date) {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"        return date.format(formatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"andrefoo":29}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"    private String task;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"    private boolean done;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"    private LocalDate deadlineDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"    public Task() {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":"        task \u003d \"default\";","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":"        done \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"    public Task(String newTask){","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"        task \u003d newTask;","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"        done \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"        return done;","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"    public void done() {","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"        done \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"    public void undo() {","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"        done \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"        return (done ? \"X\" : \" \");","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"    public String fileSaveFormat() {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"andrefoo"},"content":"        return getStatusIcon() + \"|\" + task;","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"andrefoo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"andrefoo"},"content":"        return \"[\" + getStatusIcon() + \"] \" + task;","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"andrefoo":41}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"public class ToDo extends Task{","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"    public ToDo(String task) {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"        super(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"    public String fileSaveFormat() {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"        return \"T|\" + super.fileSaveFormat();","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"andrefoo":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"todo one","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"deadline two /by time","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"list","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"mark 1","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"event three /from now /to later","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"bye","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"andrefoo":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"java -classpath ..\\bin Dre \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"andrefoo":1,"-":20}}]
