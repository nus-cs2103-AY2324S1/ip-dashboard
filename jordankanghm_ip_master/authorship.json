[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2023-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"jordankanghm"},"content":"    archiveFileName \u003d \"duke.jar\"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jordankanghm":1,"-":42}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"import java.util.Locale;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"    protected String type \u003d \"D\";","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"    protected LocalDateTime dateAndTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"    public Deadline(String name, LocalDateTime dateAndTime) {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"        this.dateAndTime \u003d dateAndTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"        return \"[\" + this.type + \"]\";","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"    public String getTimeInfo() {","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"        // Format month in words","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"jordankanghm"},"content":"        DateTimeFormatter monthFormatter \u003d DateTimeFormatter.ofPattern(\"MMMM\", Locale.ENGLISH);","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"        String monthInWords \u003d this.dateAndTime.format(monthFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"        // Format day of the month","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"jordankanghm"},"content":"        int dayOfMonth \u003d this.dateAndTime.getDayOfMonth();","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"jordankanghm"},"content":"        // Format year","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"jordankanghm"},"content":"        int year \u003d this.dateAndTime.getYear();","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"jordankanghm"},"content":"        // Format the time in AM/PM","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"jordankanghm"},"content":"        DateTimeFormatter amPmFormatter \u003d DateTimeFormatter.ofPattern(\"h:mm a\");","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"jordankanghm"},"content":"        LocalTime time \u003d this.dateAndTime.toLocalTime();","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"jordankanghm"},"content":"        String formattedTime \u003d time.format(amPmFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"jordankanghm"},"content":"        return \"(by: \" + monthInWords + \" \" + dayOfMonth + \" \" + year + \", \" + formattedTime + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jordankanghm":38}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"import java.io.*;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"    private Parser parser;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"            parser \u003d new Parser(storage, tasks, ui);","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"jordankanghm"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"jordankanghm"},"content":"    public void run() {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"jordankanghm"},"content":"        ui.printIntro();","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"jordankanghm"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"jordankanghm"},"content":"        // Get user command","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"jordankanghm"},"content":"        String cmd \u003d sc.nextLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"jordankanghm"},"content":"        // Parse the cmd as long as it is not \"bye\"","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"jordankanghm"},"content":"        while (!cmd.equals(\"bye\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"jordankanghm"},"content":"            parser.parse(cmd);","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"jordankanghm"},"content":"            cmd \u003d sc.nextLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"jordankanghm"},"content":"        ui.printExit();","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"jordankanghm"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jordankanghm":41,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jordankanghm":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"    protected String type \u003d \"E\";","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"    protected String start;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"    protected String end;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"    public Event(String name, String start, String end) {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"        return \"[\" + this.type + \"]\";","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"    public String getTimeInfo() {","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"        return \"(from: \" + this.start + \" to: \" + this.end + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jordankanghm":20}},{"path":"src/main/java/IncompleteDurationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"public class IncompleteDurationException extends DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"    public IncompleteDurationException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"        super(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"                \" ☹ OOPS!!! Deadline is not specified correctly.\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jordankanghm":7}},{"path":"src/main/java/InvalidDataFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"public class InvalidDataFormatException extends DukeException{","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"    public InvalidDataFormatException() {","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"        super(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"                \" ☹ OOPS!!! The saved data format is invalid!\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jordankanghm":7}},{"path":"src/main/java/InvalidDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"public class InvalidDeadlineException extends DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"    public InvalidDeadlineException(String deadline) {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"        super(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"                \" ☹ OOPS!!! \" + deadline + \" is not a valid deadline.\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jordankanghm":7}},{"path":"src/main/java/InvalidDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"public class InvalidDescriptionException extends DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"    public InvalidDescriptionException(String taskType) {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"        super(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"                \" ☹ OOPS!!! The description of a \" + taskType + \" cannot be empty.\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jordankanghm":7}},{"path":"src/main/java/InvalidDurationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"public class InvalidDurationException extends DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"    public InvalidDurationException(String duration) {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"        super(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"                \" ☹ OOPS!!! \" + duration + \" is not a valid duration.\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jordankanghm":7}},{"path":"src/main/java/InvalidIntegerException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"public class InvalidIntegerException extends DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"    public InvalidIntegerException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"        super(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"                \" ☹ OOPS!!! There is no such task.\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"                \" Please input an integer.\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jordankanghm":8}},{"path":"src/main/java/InvalidTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"public class InvalidTaskNumberException extends DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"    public InvalidTaskNumberException(int number) {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"        super(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"                \" ☹ OOPS!!! \" + number + \" is not a valid task number.\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jordankanghm":7}},{"path":"src/main/java/NoDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"public class NoDeadlineException extends DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"    public NoDeadlineException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"        super(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"                \" ☹ OOPS!!! There is no deadline given.\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jordankanghm":7}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"import java.io.StreamCorruptedException;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"public class Parser {","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"    public Parser(Storage storage, TaskList tasks, Ui ui) {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"    // Takes a command and executes it accordingly","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"    public void parse(String cmd) {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"        // Exit if command is \"bye\"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"                String type \u003d cmd.split(\" \", 2)[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"                // If cmd is \"list\", list items and wait for next command","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"jordankanghm"},"content":"                if (cmd.equals(\"list\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"                    ui.printListItems(tasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"jordankanghm"},"content":"                } else if (type.equals(\"todo\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"                    // Check if description is empty","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"jordankanghm"},"content":"                    if (descriptionIsEmpty(cmd)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"jordankanghm"},"content":"                        throw new InvalidDescriptionException(\"todo\");","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"jordankanghm"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"jordankanghm"},"content":"                    String taskName \u003d cmd.split(\" \", 2)[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"jordankanghm"},"content":"                    Task todo \u003d new ToDo(taskName);","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"jordankanghm"},"content":"                    tasks.addTask(todo);","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"jordankanghm"},"content":"                    ui.printAddTaskMessage(todo, tasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"jordankanghm"},"content":"                } else if (type.equals(\"deadline\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"jordankanghm"},"content":"                    if (descriptionIsEmpty(cmd)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"jordankanghm"},"content":"                        throw new InvalidDescriptionException(\"deadline\");","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"jordankanghm"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"jordankanghm"},"content":"                    String taskWithDeadline \u003d cmd.split(\" \", 2)[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"jordankanghm"},"content":"                    if (hasNoDeadline(taskWithDeadline)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"jordankanghm"},"content":"                        throw new NoDeadlineException();","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"jordankanghm"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"jordankanghm"},"content":"                    String taskName \u003d taskWithDeadline.split(\"/\", 2)[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"jordankanghm"},"content":"                    String deadlineDescription \u003d taskWithDeadline.split(\"/\", 2)[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"jordankanghm"},"content":"                    try {","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"jordankanghm"},"content":"                        Task deadline \u003d new Deadline(taskName, checkDeadline(deadlineDescription));","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"jordankanghm"},"content":"                        tasks.addTask(deadline);","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"jordankanghm"},"content":"                        ui.printAddTaskMessage(deadline, tasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"jordankanghm"},"content":"                    } catch(Exception e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"jordankanghm"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"jordankanghm"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"jordankanghm"},"content":"                } else if (type.equals(\"event\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"jordankanghm"},"content":"                    if (descriptionIsEmpty(cmd)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"jordankanghm"},"content":"                        throw new InvalidDescriptionException(\"event\");","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"jordankanghm"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"jordankanghm"},"content":"                    String taskWithDuration \u003d cmd.split(\" \", 2)[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"jordankanghm"},"content":"                    String[] time \u003d taskWithDuration.split(\"/\");","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"jordankanghm"},"content":"                    // Check if there is a valid duration","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"jordankanghm"},"content":"                    if (time.length !\u003d 3) {","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"jordankanghm"},"content":"                        throw new IncompleteDurationException();","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"jordankanghm"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"jordankanghm"},"content":"                    String taskName \u003d time[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"jordankanghm"},"content":"                    String starting \u003d time[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"jordankanghm"},"content":"                    String ending \u003d time[2];","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"jordankanghm"},"content":"                    // Assumes that starting and ending both start with \"from\" and \"to\" respectively","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"jordankanghm"},"content":"                    Task event \u003d new Event(taskName, starting.split(\" \", 2)[1].trim(), ending.split(\" \", 2)[1].trim());","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"jordankanghm"},"content":"                    tasks.addTask(event);","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"jordankanghm"},"content":"                    ui.printAddTaskMessage(event, tasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"jordankanghm"},"content":"                } else if (type.equals(\"delete\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"jordankanghm"},"content":"                    if (descriptionIsEmpty(cmd)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"jordankanghm"},"content":"                        throw new InvalidDescriptionException(\"delete\");","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"jordankanghm"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"jordankanghm"},"content":"                    int taskNumber \u003d -1;","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"jordankanghm"},"content":"                    String integer \u003d cmd.split(\" \", 2)[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"jordankanghm"},"content":"                    try {","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"jordankanghm"},"content":"                        taskNumber \u003d Integer.parseInt(integer);","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"jordankanghm"},"content":"                    } catch (Exception e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"jordankanghm"},"content":"                        throw new InvalidIntegerException();","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"jordankanghm"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"jordankanghm"},"content":"                    if (!isValidTaskNumber(taskNumber)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"jordankanghm"},"content":"                        throw new InvalidTaskNumberException(taskNumber);","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"jordankanghm"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"jordankanghm"},"content":"                    Task task \u003d tasks.markOrDelete(taskNumber - 1, \"delete\");","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"jordankanghm"},"content":"                    ui.printDeleteTaskMessage(task, new TaskList(storage.load()));","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"jordankanghm"},"content":"                } else if (type.equals(\"mark\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"jordankanghm"},"content":"                    if (descriptionIsEmpty(cmd)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"jordankanghm"},"content":"                        throw new InvalidDescriptionException(\"mark\");","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"jordankanghm"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"jordankanghm"},"content":"                    //EXCEPTION HANDLING!!","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"jordankanghm"},"content":"                    int taskNumber \u003d -1;","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"jordankanghm"},"content":"                    String integer \u003d cmd.split(\" \", 2)[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"jordankanghm"},"content":"                    try {","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"jordankanghm"},"content":"                        taskNumber \u003d Integer.parseInt(integer);","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"jordankanghm"},"content":"                    } catch (Exception e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"jordankanghm"},"content":"                        throw new InvalidIntegerException();","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"jordankanghm"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"jordankanghm"},"content":"                    if (!isValidTaskNumber(taskNumber)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"jordankanghm"},"content":"                        throw new InvalidTaskNumberException(taskNumber);","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"jordankanghm"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"jordankanghm"},"content":"                    Task task \u003d tasks.markOrDelete(taskNumber - 1, \"mark\");","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"jordankanghm"},"content":"                    ui.printMarkedTaskMessage(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"jordankanghm"},"content":"                } else if (type.equals(\"unmark\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"jordankanghm"},"content":"                    if (descriptionIsEmpty(cmd)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"jordankanghm"},"content":"                        throw new InvalidDescriptionException(\"unmark\");","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"jordankanghm"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"jordankanghm"},"content":"                    int taskNumber \u003d -1;","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"jordankanghm"},"content":"                    String integer \u003d cmd.split(\" \", 2)[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"jordankanghm"},"content":"                    try {","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"jordankanghm"},"content":"                        taskNumber \u003d Integer.parseInt(integer);","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"jordankanghm"},"content":"                    } catch (Exception e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"jordankanghm"},"content":"                        throw new InvalidIntegerException();","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"jordankanghm"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"jordankanghm"},"content":"                    if (!isValidTaskNumber(taskNumber)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"jordankanghm"},"content":"                        throw new InvalidTaskNumberException(taskNumber);","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"jordankanghm"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"jordankanghm"},"content":"                    Task task \u003d tasks.markOrDelete(taskNumber - 1, \"unmark\");","lastModifiedDate":"2023-08-29"},{"lineNumber":130,"author":{"gitId":"jordankanghm"},"content":"                    ui.printUnmarkedTaskMessage(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"jordankanghm"},"content":"                } else {  // If the inputted command is not valid, throw TaskTypeException","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"jordankanghm"},"content":"                    throw new TaskTypeException();","lastModifiedDate":"2023-08-29"},{"lineNumber":133,"author":{"gitId":"jordankanghm"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"jordankanghm"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"jordankanghm"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":139,"author":{"gitId":"jordankanghm"},"content":"    // Checks if an input task has a task title","lastModifiedDate":"2023-08-29"},{"lineNumber":140,"author":{"gitId":"jordankanghm"},"content":"    public boolean descriptionIsEmpty(String cmd) {","lastModifiedDate":"2023-08-29"},{"lineNumber":141,"author":{"gitId":"jordankanghm"},"content":"        return cmd.split(\" \").length \u003d\u003d 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":143,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":144,"author":{"gitId":"jordankanghm"},"content":"    // Checks whether the input task has no deadline","lastModifiedDate":"2023-08-29"},{"lineNumber":145,"author":{"gitId":"jordankanghm"},"content":"    // A task has no deadline if there is no \"/\" followed by at least one character","lastModifiedDate":"2023-08-29"},{"lineNumber":146,"author":{"gitId":"jordankanghm"},"content":"    public boolean hasNoDeadline(String taskWithDeadline) {","lastModifiedDate":"2023-08-29"},{"lineNumber":147,"author":{"gitId":"jordankanghm"},"content":"        return taskWithDeadline.split(\"/\").length \u003d\u003d 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":148,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":149,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":150,"author":{"gitId":"jordankanghm"},"content":"    // Checks whether the input deadline is a proper date and time","lastModifiedDate":"2023-08-29"},{"lineNumber":151,"author":{"gitId":"jordankanghm"},"content":"    // Returns a LocalDateTime containing the date and time given","lastModifiedDate":"2023-08-29"},{"lineNumber":152,"author":{"gitId":"jordankanghm"},"content":"    public LocalDateTime checkDeadline(String deadline) {","lastModifiedDate":"2023-08-29"},{"lineNumber":153,"author":{"gitId":"jordankanghm"},"content":"        String[] parts \u003d deadline.split(\" \");","lastModifiedDate":"2023-08-29"},{"lineNumber":154,"author":{"gitId":"jordankanghm"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":155,"author":{"gitId":"jordankanghm"},"content":"            // If there isn\u0027t exactly three components in the deadline, return false","lastModifiedDate":"2023-08-29"},{"lineNumber":156,"author":{"gitId":"jordankanghm"},"content":"            if (parts.length !\u003d 3) {","lastModifiedDate":"2023-08-29"},{"lineNumber":157,"author":{"gitId":"jordankanghm"},"content":"                throw new InvalidDeadlineException(deadline);","lastModifiedDate":"2023-08-29"},{"lineNumber":158,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":159,"author":{"gitId":"jordankanghm"},"content":"            String by \u003d parts[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":160,"author":{"gitId":"jordankanghm"},"content":"            String date \u003d parts[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":161,"author":{"gitId":"jordankanghm"},"content":"            String time \u003d parts[2];","lastModifiedDate":"2023-08-29"},{"lineNumber":162,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":163,"author":{"gitId":"jordankanghm"},"content":"            // If the first word is not \"by\", return false","lastModifiedDate":"2023-08-29"},{"lineNumber":164,"author":{"gitId":"jordankanghm"},"content":"            if (!by.equals(\"by\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":165,"author":{"gitId":"jordankanghm"},"content":"                throw new InvalidDeadlineException(deadline);","lastModifiedDate":"2023-08-29"},{"lineNumber":166,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":167,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":168,"author":{"gitId":"jordankanghm"},"content":"            String[] dateParts \u003d date.split(\"/\");","lastModifiedDate":"2023-08-29"},{"lineNumber":169,"author":{"gitId":"jordankanghm"},"content":"            // If the date does not have three components, return false","lastModifiedDate":"2023-08-29"},{"lineNumber":170,"author":{"gitId":"jordankanghm"},"content":"            if (dateParts.length !\u003d 3) {","lastModifiedDate":"2023-08-29"},{"lineNumber":171,"author":{"gitId":"jordankanghm"},"content":"                throw new InvalidDeadlineException(deadline);","lastModifiedDate":"2023-08-29"},{"lineNumber":172,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":173,"author":{"gitId":"jordankanghm"},"content":"            int day \u003d Integer.parseInt(dateParts[0]);","lastModifiedDate":"2023-08-29"},{"lineNumber":174,"author":{"gitId":"jordankanghm"},"content":"            int month \u003d Integer.parseInt(dateParts[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":175,"author":{"gitId":"jordankanghm"},"content":"            int year \u003d Integer.parseInt(dateParts[2]);","lastModifiedDate":"2023-08-29"},{"lineNumber":176,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":177,"author":{"gitId":"jordankanghm"},"content":"            // If time is not a four digit number, return false","lastModifiedDate":"2023-08-29"},{"lineNumber":178,"author":{"gitId":"jordankanghm"},"content":"            if (time.length() !\u003d 4) {","lastModifiedDate":"2023-08-29"},{"lineNumber":179,"author":{"gitId":"jordankanghm"},"content":"                throw new InvalidDeadlineException(deadline);","lastModifiedDate":"2023-08-29"},{"lineNumber":180,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":181,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":182,"author":{"gitId":"jordankanghm"},"content":"            int hour \u003d Integer.parseInt(time.substring(0, 2));","lastModifiedDate":"2023-08-29"},{"lineNumber":183,"author":{"gitId":"jordankanghm"},"content":"            int min \u003d Integer.parseInt(time.substring(2, 4));","lastModifiedDate":"2023-08-29"},{"lineNumber":184,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":185,"author":{"gitId":"jordankanghm"},"content":"            return LocalDateTime.of(year, month, day, hour, min);","lastModifiedDate":"2023-08-29"},{"lineNumber":186,"author":{"gitId":"jordankanghm"},"content":"        } catch (InvalidDeadlineException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":187,"author":{"gitId":"jordankanghm"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":188,"author":{"gitId":"jordankanghm"},"content":"            return null;","lastModifiedDate":"2023-08-29"},{"lineNumber":189,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":190,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":191,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":192,"author":{"gitId":"jordankanghm"},"content":"    // Checks whether a task with the given task number argument exists","lastModifiedDate":"2023-08-29"},{"lineNumber":193,"author":{"gitId":"jordankanghm"},"content":"    public boolean isValidTaskNumber(int number) {","lastModifiedDate":"2023-08-29"},{"lineNumber":194,"author":{"gitId":"jordankanghm"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":195,"author":{"gitId":"jordankanghm"},"content":"            int listSize \u003d storage.load().size();","lastModifiedDate":"2023-08-29"},{"lineNumber":196,"author":{"gitId":"jordankanghm"},"content":"            return number \u003e 0 \u0026\u0026 number \u003c\u003d listSize;","lastModifiedDate":"2023-08-29"},{"lineNumber":197,"author":{"gitId":"jordankanghm"},"content":"        } catch (InvalidDataFormatException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":198,"author":{"gitId":"jordankanghm"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":199,"author":{"gitId":"jordankanghm"},"content":"            return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":200,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":201,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":202,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jordankanghm":202}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"import java.io.*;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"public class Storage {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"    protected String filePath;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"    // Reads the data in the duke.txt file, unserializes it and returns an arraylist representing","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"    // the saved tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"    public ArrayList\u003cTask\u003e load() throws InvalidDataFormatException {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"        String folderPath \u003d \"./data/\";","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"        String filePath \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"jordankanghm"},"content":"            // Check if the folder exists, create if not","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"            Path folder \u003d Paths.get(folderPath);","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"jordankanghm"},"content":"            if (!Files.exists(folder)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"                Files.createDirectories(folder);","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"jordankanghm"},"content":"                System.out.println(\"Folder created: \" + folderPath);","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"jordankanghm"},"content":"            // Check if the file exists, create if not","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"jordankanghm"},"content":"            Path file \u003d Paths.get(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"jordankanghm"},"content":"            if (!Files.exists(file)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"jordankanghm"},"content":"                Files.createFile(file);","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"jordankanghm"},"content":"                System.out.println(\"File created: \" + filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"jordankanghm"},"content":"            // If the duke.txt file is empty, return an empty task arraylist","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"jordankanghm"},"content":"            if (Files.size(file) \u003d\u003d 0) {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"jordankanghm"},"content":"                return tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"jordankanghm"},"content":"            // Throws StreamCorruptedException when data format is unserializable","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"jordankanghm"},"content":"            ObjectInputStream inputStream \u003d new ObjectInputStream(new FileInputStream(filePath));","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"jordankanghm"},"content":"            tasks \u003d (ArrayList\u003cTask\u003e) inputStream.readObject();","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"jordankanghm"},"content":"            // Throws exception if data in duke.txt is not an ArrayList\u003cTask\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"jordankanghm"},"content":"            if (tasks instanceof ArrayList\u003c?\u003e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"jordankanghm"},"content":"                tasks \u003d (ArrayList\u003cTask\u003e) tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"jordankanghm"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"jordankanghm"},"content":"                throw new InvalidDataFormatException();","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"jordankanghm"},"content":"        } catch (StreamCorruptedException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"jordankanghm"},"content":"            throw new InvalidDataFormatException();","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"jordankanghm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"jordankanghm"},"content":"            throw new InvalidDataFormatException();","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"jordankanghm"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"jordankanghm"},"content":"            throw new InvalidDataFormatException();","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"jordankanghm"},"content":"        System.out.println(\"List has been updated\\n Updated list is: \");","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"jordankanghm"},"content":"        System.out.println(tasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"jordankanghm"},"content":"        return tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"jordankanghm"},"content":"    // Removes all data from the duke.txt file","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"jordankanghm"},"content":"    // Takes the task arraylist argument, serializes it and stores it in the duke.txt file","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"jordankanghm"},"content":"    public void save(ArrayList\u003cTask\u003e data) {","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"jordankanghm"},"content":"        // Delete all data from duke.txt file","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"jordankanghm"},"content":"        try (ObjectOutputStream outputStream \u003d new ObjectOutputStream(new FileOutputStream(\"./data/duke.txt\", false))) {","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"jordankanghm"},"content":"            outputStream.writeObject(data);","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"jordankanghm"},"content":"            System.out.println(\"Data saved to file.\\n Data is: \");","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"jordankanghm"},"content":"            System.out.println(data);","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"jordankanghm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"jordankanghm"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jordankanghm":76}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"class Task implements Serializable {","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"    protected String name \u003d \"\";","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"    public Task(String name) {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"        return isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"        return \"\";","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"    public String getTimeInfo() {","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"        return \"\";","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"jordankanghm"},"content":"    public void markTask() {","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"jordankanghm"},"content":"    public void unMarkTask() {","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"jordankanghm"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"jordankanghm":29}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"public class TaskList {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"    // Returns an ArrayList\u003cTask\u003e containing the current tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"        return this.tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"jordankanghm"},"content":"    // Adds the Task argument at the end of the list","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"    public ArrayList\u003cTask\u003e addTask(Task task) {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"jordankanghm"},"content":"        tasks.add(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"        new Storage(\"./data/duke.txt\").save(tasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"jordankanghm"},"content":"        return tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"jordankanghm"},"content":"    // Reads the duke.txt file, unserializes it and obtain the arraylist representing saved tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"jordankanghm"},"content":"    // Depending on the purpose, information in the arraylist is updated, and the whole arraylist is","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"jordankanghm"},"content":"    // serialized and saved again in the duke.txt file","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"jordankanghm"},"content":"    public Task markOrDelete(int index, String purpose) throws InvalidDataFormatException {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"jordankanghm"},"content":"        if (purpose.equals(\"mark\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"jordankanghm"},"content":"            this.tasks.get(index).markTask();","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"jordankanghm"},"content":"            new Storage(\"./data/duke.txt\").save(this.tasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"jordankanghm"},"content":"            return this.tasks.get(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"jordankanghm"},"content":"        } else if (purpose.equals(\"unmark\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"jordankanghm"},"content":"            this.tasks.get(index).unMarkTask();","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"jordankanghm"},"content":"            new Storage(\"./data/duke.txt\").save(this.tasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"jordankanghm"},"content":"            return this.tasks.get(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"jordankanghm"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"jordankanghm"},"content":"            Task deletedTask \u003d this.tasks.get(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"jordankanghm"},"content":"            this.tasks.remove(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"jordankanghm"},"content":"            new Storage(\"./data/duke.txt\").save(this.tasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"jordankanghm"},"content":"            return deletedTask;","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jordankanghm":48}},{"path":"src/main/java/TaskTypeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"public class TaskTypeException extends DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"    public TaskTypeException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"        super(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"                \" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jordankanghm":7}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"    protected String type \u003d \"T\";","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"    public ToDo(String name) {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"        return \"[\" + this.type + \"]\";","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jordankanghm":11}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"public class Ui {","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"    public Ui() {","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"    // Prints a data format error","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"        System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"                \" ☹ OOPS!!! The saved data format is invalid!\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"    // Prints the tasks in the taskList given","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"    public void printListItems(TaskList taskList) {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"            System.out.println(i+1 + \".\" + task.getTaskType() + task.getStatusIcon() + \" \" + task.name +","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"                    \" \" + task.getTimeInfo());","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"    // Prints the introduction message at the start of the program","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"jordankanghm"},"content":"    public void printIntro() {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"jordankanghm"},"content":"        String intro \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"jordankanghm"},"content":"                \" Hello! I\u0027m Dookie\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"jordankanghm"},"content":"                \" What can I do for you?\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"jordankanghm"},"content":"                \"____________________________________________________________\";","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"jordankanghm"},"content":"        System.out.println(intro);","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"jordankanghm"},"content":"    // Prints the message for when a new task is added","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"jordankanghm"},"content":"    public void printAddTaskMessage(Task task, TaskList tasks) {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"jordankanghm"},"content":"        int listSize \u003d tasks.getTasks().size();","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"jordankanghm"},"content":"        String message \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"jordankanghm"},"content":"                \" Got it. I\u0027ve added this task: \\n   \" +","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"jordankanghm"},"content":"                task.getTaskType() + task.getStatusIcon() + \" \" + task.name + task.getTimeInfo() + \"\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"jordankanghm"},"content":"                \" Now you have \" + listSize + \" tasks in the list.\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"jordankanghm"},"content":"                \"____________________________________________________________\";","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"jordankanghm"},"content":"        System.out.println(message);","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"jordankanghm"},"content":"    // Prints the message for when a task is deleted","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"jordankanghm"},"content":"    public void printDeleteTaskMessage(Task task, TaskList tasks){","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"jordankanghm"},"content":"        int listSize \u003d tasks.getTasks().size();","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"jordankanghm"},"content":"        String message \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"jordankanghm"},"content":"                \" Noted. I\u0027ve removed this task: \\n   \" +","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"jordankanghm"},"content":"                task.getTaskType() + task.getStatusIcon() + \" \" + task.name + task.getTimeInfo() + \"\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"jordankanghm"},"content":"                \" Now you have \" + listSize + \" tasks in the list.\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"jordankanghm"},"content":"                \"____________________________________________________________\";","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"jordankanghm"},"content":"        System.out.println(message);","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"jordankanghm"},"content":"    // Prints the message at the end of the program","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"jordankanghm"},"content":"    public void printExit() {","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"jordankanghm"},"content":"        String exitMessage \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"jordankanghm"},"content":"                \" Bye. Hope to see you again soon!\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"jordankanghm"},"content":"                \"____________________________________________________________\";","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"jordankanghm"},"content":"        System.out.println(exitMessage);","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"jordankanghm"},"content":"    // Prints the message when a task is marked","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"jordankanghm"},"content":"    public void printMarkedTaskMessage(Task task) {","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"jordankanghm"},"content":"        String message \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"jordankanghm"},"content":"                \" Nice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"jordankanghm"},"content":"                \"   \" + task.getStatusIcon() + \" \" + task.name + task.getTimeInfo() + \"\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"jordankanghm"},"content":"                \"____________________________________________________________\";","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"jordankanghm"},"content":"        System.out.println(message);","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"jordankanghm"},"content":"    // Prints the message when a task is unmarked","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"jordankanghm"},"content":"    public void printUnmarkedTaskMessage(Task task) {","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"jordankanghm"},"content":"        String message \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"jordankanghm"},"content":"                \" OK. I\u0027ve marked this task as not done yet:\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"jordankanghm"},"content":"                \"   \" + task.getStatusIcon() + \" \" + task.name + task.getTimeInfo() + \"\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"jordankanghm"},"content":"                \"____________________________________________________________\";","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"jordankanghm"},"content":"        System.out.println(message);","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jordankanghm":82}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"import java.util.Locale;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"    protected String type \u003d \"D\";","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"    protected LocalDateTime dateAndTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"    public Deadline(String name, LocalDateTime dateAndTime) {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"        super(name);","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"        this.dateAndTime \u003d dateAndTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"        return \"[\" + this.type + \"]\";","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"    public String getTimeInfo() {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"        // Format month in words","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"jordankanghm"},"content":"        DateTimeFormatter monthFormatter \u003d DateTimeFormatter.ofPattern(\"MMMM\", Locale.ENGLISH);","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"        String monthInWords \u003d this.dateAndTime.format(monthFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"        // Format day of the month","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"jordankanghm"},"content":"        int dayOfMonth \u003d this.dateAndTime.getDayOfMonth();","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"jordankanghm"},"content":"        // Format year","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"jordankanghm"},"content":"        int year \u003d this.dateAndTime.getYear();","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"jordankanghm"},"content":"        // Format the time in AM/PM","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"jordankanghm"},"content":"        DateTimeFormatter amPmFormatter \u003d DateTimeFormatter.ofPattern(\"h:mm a\");","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"jordankanghm"},"content":"        LocalTime time \u003d this.dateAndTime.toLocalTime();","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"jordankanghm"},"content":"        String formattedTime \u003d time.format(amPmFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"jordankanghm"},"content":"        return \"(by: \" + monthInWords + \" \" + dayOfMonth + \" \" + year + \", \" + formattedTime + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jordankanghm":38}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"import java.io.*;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"public class Duke {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"    private Parser parser;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"            parser \u003d new Parser(storage, tasks, ui);","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"jordankanghm"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"jordankanghm"},"content":"    public void run() {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"jordankanghm"},"content":"        ui.printIntro();","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"jordankanghm"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"jordankanghm"},"content":"        // Get user command","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"jordankanghm"},"content":"        String cmd \u003d sc.nextLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"jordankanghm"},"content":"        // Parse the cmd as long as it is not \"bye\"","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"jordankanghm"},"content":"        while (!cmd.equals(\"bye\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"jordankanghm"},"content":"            parser.parse(cmd);","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"jordankanghm"},"content":"            cmd \u003d sc.nextLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"jordankanghm"},"content":"        ui.printExit();","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"jordankanghm"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"jordankanghm"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jordankanghm":45}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"        super(message);","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jordankanghm":5}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"    protected String type \u003d \"E\";","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"    protected String start;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"    protected String end;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"    public Event(String name, String start, String end) {","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"        super(name);","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"        return \"[\" + this.type + \"]\";","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"    public String getTimeInfo() {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"        return \"(from: \" + this.start + \" to: \" + this.end + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jordankanghm":20}},{"path":"src/main/java/duke/IncompleteDurationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"public class IncompleteDurationException extends DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"    public IncompleteDurationException() {","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"        super(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"                \" ☹ OOPS!!! Deadline is not specified correctly.\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jordankanghm":7}},{"path":"src/main/java/duke/InvalidDataFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"public class InvalidDataFormatException extends DukeException{","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"    public InvalidDataFormatException() {","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"        super(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"                \" ☹ OOPS!!! The saved data format is invalid!\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jordankanghm":7}},{"path":"src/main/java/duke/InvalidDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"public class InvalidDeadlineException extends DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"    public InvalidDeadlineException(String deadline) {","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"        super(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"                \" ☹ OOPS!!! \" + deadline + \" is not a valid deadline.\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jordankanghm":7}},{"path":"src/main/java/duke/InvalidDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"public class InvalidDescriptionException extends DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"    public InvalidDescriptionException(String taskType) {","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"        super(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"                \" ☹ OOPS!!! The description of a \" + taskType + \" cannot be empty.\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jordankanghm":7}},{"path":"src/main/java/duke/InvalidDurationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"public class InvalidDurationException extends DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"    public InvalidDurationException(String duration) {","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"        super(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"                \" ☹ OOPS!!! \" + duration + \" is not a valid duration.\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jordankanghm":7}},{"path":"src/main/java/duke/InvalidIntegerException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"public class InvalidIntegerException extends DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"    public InvalidIntegerException() {","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"        super(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"                \" ☹ OOPS!!! There is no such task.\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"                \" Please input an integer.\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jordankanghm":8}},{"path":"src/main/java/duke/InvalidTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"public class InvalidTaskNumberException extends DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"    public InvalidTaskNumberException(int number) {","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"        super(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"                \" ☹ OOPS!!! \" + number + \" is not a valid task number.\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jordankanghm":7}},{"path":"src/main/java/duke/NoDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"public class NoDeadlineException extends DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"    public NoDeadlineException() {","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"        super(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"                \" ☹ OOPS!!! There is no deadline given.\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jordankanghm":7}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"import java.io.StreamCorruptedException;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"public class Parser {","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"    public Parser(Storage storage, TaskList tasks, Ui ui) {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"    // Takes a command and executes it accordingly","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"    public void parse(String cmd) {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"        // Exit if command is \"bye\"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"                String type \u003d cmd.split(\" \", 2)[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"                // If cmd is \"list\", list items and wait for next command","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"jordankanghm"},"content":"                if (cmd.equals(\"list\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"                    ui.printListItems(tasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"jordankanghm"},"content":"                } else if (type.equals(\"todo\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"                    // Check if description is empty","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"jordankanghm"},"content":"                    if (descriptionIsEmpty(cmd)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"jordankanghm"},"content":"                        throw new InvalidDescriptionException(\"todo\");","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"jordankanghm"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"jordankanghm"},"content":"                    String taskName \u003d cmd.split(\" \", 2)[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"jordankanghm"},"content":"                    Task todo \u003d new ToDo(taskName);","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"jordankanghm"},"content":"                    tasks.addTask(todo);","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"jordankanghm"},"content":"                    ui.printAddTaskMessage(todo, tasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"jordankanghm"},"content":"                } else if (type.equals(\"deadline\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"jordankanghm"},"content":"                    if (descriptionIsEmpty(cmd)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"jordankanghm"},"content":"                        throw new InvalidDescriptionException(\"deadline\");","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"jordankanghm"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"jordankanghm"},"content":"                    String taskWithDeadline \u003d cmd.split(\" \", 2)[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"jordankanghm"},"content":"                    if (hasNoDeadline(taskWithDeadline)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"jordankanghm"},"content":"                        throw new NoDeadlineException();","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"jordankanghm"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"jordankanghm"},"content":"                    String taskName \u003d taskWithDeadline.split(\"/\", 2)[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"jordankanghm"},"content":"                    String deadlineDescription \u003d taskWithDeadline.split(\"/\", 2)[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"jordankanghm"},"content":"                    try {","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"jordankanghm"},"content":"                        Task deadline \u003d new Deadline(taskName, checkDeadline(deadlineDescription));","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"jordankanghm"},"content":"                        tasks.addTask(deadline);","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"jordankanghm"},"content":"                        ui.printAddTaskMessage(deadline, tasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"jordankanghm"},"content":"                    } catch(Exception e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"jordankanghm"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"jordankanghm"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"jordankanghm"},"content":"                } else if (type.equals(\"event\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"jordankanghm"},"content":"                    if (descriptionIsEmpty(cmd)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"jordankanghm"},"content":"                        throw new InvalidDescriptionException(\"event\");","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"jordankanghm"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"jordankanghm"},"content":"                    String taskWithDuration \u003d cmd.split(\" \", 2)[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"jordankanghm"},"content":"                    String[] time \u003d taskWithDuration.split(\"/\");","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"jordankanghm"},"content":"                    // Check if there is a valid duration","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"jordankanghm"},"content":"                    if (time.length !\u003d 3) {","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"jordankanghm"},"content":"                        throw new IncompleteDurationException();","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"jordankanghm"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"jordankanghm"},"content":"                    String taskName \u003d time[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"jordankanghm"},"content":"                    String starting \u003d time[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"jordankanghm"},"content":"                    String ending \u003d time[2];","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"jordankanghm"},"content":"                    // Assumes that starting and ending both start with \"from\" and \"to\" respectively","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"jordankanghm"},"content":"                    Task event \u003d new Event(taskName, starting.split(\" \", 2)[1].trim(), ending.split(\" \", 2)[1].trim());","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"jordankanghm"},"content":"                    tasks.addTask(event);","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"jordankanghm"},"content":"                    ui.printAddTaskMessage(event, tasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"jordankanghm"},"content":"                } else if (type.equals(\"delete\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"jordankanghm"},"content":"                    if (descriptionIsEmpty(cmd)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"jordankanghm"},"content":"                        throw new InvalidDescriptionException(\"delete\");","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"jordankanghm"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"jordankanghm"},"content":"                    int taskNumber \u003d -1;","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"jordankanghm"},"content":"                    String integer \u003d cmd.split(\" \", 2)[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"jordankanghm"},"content":"                    try {","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"jordankanghm"},"content":"                        taskNumber \u003d Integer.parseInt(integer);","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"jordankanghm"},"content":"                    } catch (Exception e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"jordankanghm"},"content":"                        throw new InvalidIntegerException();","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"jordankanghm"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"jordankanghm"},"content":"                    if (!isValidTaskNumber(taskNumber)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"jordankanghm"},"content":"                        throw new InvalidTaskNumberException(taskNumber);","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"jordankanghm"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"jordankanghm"},"content":"                    Task task \u003d tasks.markOrDelete(taskNumber - 1, \"delete\");","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"jordankanghm"},"content":"                    ui.printDeleteTaskMessage(task, new TaskList(storage.load()));","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"jordankanghm"},"content":"                } else if (type.equals(\"mark\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"jordankanghm"},"content":"                    if (descriptionIsEmpty(cmd)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"jordankanghm"},"content":"                        throw new InvalidDescriptionException(\"mark\");","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"jordankanghm"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"jordankanghm"},"content":"                    //EXCEPTION HANDLING!!","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"jordankanghm"},"content":"                    int taskNumber \u003d -1;","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"jordankanghm"},"content":"                    String integer \u003d cmd.split(\" \", 2)[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"jordankanghm"},"content":"                    try {","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"jordankanghm"},"content":"                        taskNumber \u003d Integer.parseInt(integer);","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"jordankanghm"},"content":"                    } catch (Exception e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"jordankanghm"},"content":"                        throw new InvalidIntegerException();","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"jordankanghm"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"jordankanghm"},"content":"                    if (!isValidTaskNumber(taskNumber)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"jordankanghm"},"content":"                        throw new InvalidTaskNumberException(taskNumber);","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"jordankanghm"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"jordankanghm"},"content":"                    Task task \u003d tasks.markOrDelete(taskNumber - 1, \"mark\");","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"jordankanghm"},"content":"                    ui.printMarkedTaskMessage(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"jordankanghm"},"content":"                } else if (type.equals(\"unmark\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"jordankanghm"},"content":"                    if (descriptionIsEmpty(cmd)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"jordankanghm"},"content":"                        throw new InvalidDescriptionException(\"unmark\");","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"jordankanghm"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"jordankanghm"},"content":"                    int taskNumber \u003d -1;","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"jordankanghm"},"content":"                    String integer \u003d cmd.split(\" \", 2)[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"jordankanghm"},"content":"                    try {","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"jordankanghm"},"content":"                        taskNumber \u003d Integer.parseInt(integer);","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"jordankanghm"},"content":"                    } catch (Exception e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"jordankanghm"},"content":"                        throw new InvalidIntegerException();","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"jordankanghm"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"jordankanghm"},"content":"                    if (!isValidTaskNumber(taskNumber)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"jordankanghm"},"content":"                        throw new InvalidTaskNumberException(taskNumber);","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"jordankanghm"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"jordankanghm"},"content":"                    Task task \u003d tasks.markOrDelete(taskNumber - 1, \"unmark\");","lastModifiedDate":"2023-08-29"},{"lineNumber":130,"author":{"gitId":"jordankanghm"},"content":"                    ui.printUnmarkedTaskMessage(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"jordankanghm"},"content":"                } else {  // If the inputted command is not valid, throw TaskTypeException","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"jordankanghm"},"content":"                    throw new TaskTypeException();","lastModifiedDate":"2023-08-29"},{"lineNumber":133,"author":{"gitId":"jordankanghm"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"jordankanghm"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"jordankanghm"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":139,"author":{"gitId":"jordankanghm"},"content":"    // Checks if an input task has a task title","lastModifiedDate":"2023-08-29"},{"lineNumber":140,"author":{"gitId":"jordankanghm"},"content":"    public boolean descriptionIsEmpty(String cmd) {","lastModifiedDate":"2023-08-29"},{"lineNumber":141,"author":{"gitId":"jordankanghm"},"content":"        return cmd.split(\" \").length \u003d\u003d 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":143,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":144,"author":{"gitId":"jordankanghm"},"content":"    // Checks whether the input task has no deadline","lastModifiedDate":"2023-08-29"},{"lineNumber":145,"author":{"gitId":"jordankanghm"},"content":"    // A task has no deadline if there is no \"/\" followed by at least one character","lastModifiedDate":"2023-08-29"},{"lineNumber":146,"author":{"gitId":"jordankanghm"},"content":"    public boolean hasNoDeadline(String taskWithDeadline) {","lastModifiedDate":"2023-08-29"},{"lineNumber":147,"author":{"gitId":"jordankanghm"},"content":"        return taskWithDeadline.split(\"/\").length \u003d\u003d 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":148,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":149,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":150,"author":{"gitId":"jordankanghm"},"content":"    // Checks whether the input deadline is a proper date and time","lastModifiedDate":"2023-08-29"},{"lineNumber":151,"author":{"gitId":"jordankanghm"},"content":"    // Returns a LocalDateTime containing the date and time given","lastModifiedDate":"2023-08-29"},{"lineNumber":152,"author":{"gitId":"jordankanghm"},"content":"    public LocalDateTime checkDeadline(String deadline) {","lastModifiedDate":"2023-08-29"},{"lineNumber":153,"author":{"gitId":"jordankanghm"},"content":"        String[] parts \u003d deadline.split(\" \");","lastModifiedDate":"2023-08-29"},{"lineNumber":154,"author":{"gitId":"jordankanghm"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":155,"author":{"gitId":"jordankanghm"},"content":"            // If there isn\u0027t exactly three components in the deadline, return false","lastModifiedDate":"2023-08-29"},{"lineNumber":156,"author":{"gitId":"jordankanghm"},"content":"            if (parts.length !\u003d 3) {","lastModifiedDate":"2023-08-29"},{"lineNumber":157,"author":{"gitId":"jordankanghm"},"content":"                throw new InvalidDeadlineException(deadline);","lastModifiedDate":"2023-08-29"},{"lineNumber":158,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":159,"author":{"gitId":"jordankanghm"},"content":"            String by \u003d parts[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":160,"author":{"gitId":"jordankanghm"},"content":"            String date \u003d parts[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":161,"author":{"gitId":"jordankanghm"},"content":"            String time \u003d parts[2];","lastModifiedDate":"2023-08-29"},{"lineNumber":162,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":163,"author":{"gitId":"jordankanghm"},"content":"            // If the first word is not \"by\", return false","lastModifiedDate":"2023-08-29"},{"lineNumber":164,"author":{"gitId":"jordankanghm"},"content":"            if (!by.equals(\"by\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":165,"author":{"gitId":"jordankanghm"},"content":"                throw new InvalidDeadlineException(deadline);","lastModifiedDate":"2023-08-29"},{"lineNumber":166,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":167,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":168,"author":{"gitId":"jordankanghm"},"content":"            String[] dateParts \u003d date.split(\"/\");","lastModifiedDate":"2023-08-29"},{"lineNumber":169,"author":{"gitId":"jordankanghm"},"content":"            // If the date does not have three components, return false","lastModifiedDate":"2023-08-29"},{"lineNumber":170,"author":{"gitId":"jordankanghm"},"content":"            if (dateParts.length !\u003d 3) {","lastModifiedDate":"2023-08-29"},{"lineNumber":171,"author":{"gitId":"jordankanghm"},"content":"                throw new InvalidDeadlineException(deadline);","lastModifiedDate":"2023-08-29"},{"lineNumber":172,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":173,"author":{"gitId":"jordankanghm"},"content":"            int day \u003d Integer.parseInt(dateParts[0]);","lastModifiedDate":"2023-08-29"},{"lineNumber":174,"author":{"gitId":"jordankanghm"},"content":"            int month \u003d Integer.parseInt(dateParts[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":175,"author":{"gitId":"jordankanghm"},"content":"            int year \u003d Integer.parseInt(dateParts[2]);","lastModifiedDate":"2023-08-29"},{"lineNumber":176,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":177,"author":{"gitId":"jordankanghm"},"content":"            // If time is not a four digit number, return false","lastModifiedDate":"2023-08-29"},{"lineNumber":178,"author":{"gitId":"jordankanghm"},"content":"            if (time.length() !\u003d 4) {","lastModifiedDate":"2023-08-29"},{"lineNumber":179,"author":{"gitId":"jordankanghm"},"content":"                throw new InvalidDeadlineException(deadline);","lastModifiedDate":"2023-08-29"},{"lineNumber":180,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":181,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":182,"author":{"gitId":"jordankanghm"},"content":"            int hour \u003d Integer.parseInt(time.substring(0, 2));","lastModifiedDate":"2023-08-29"},{"lineNumber":183,"author":{"gitId":"jordankanghm"},"content":"            int min \u003d Integer.parseInt(time.substring(2, 4));","lastModifiedDate":"2023-08-29"},{"lineNumber":184,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":185,"author":{"gitId":"jordankanghm"},"content":"            return LocalDateTime.of(year, month, day, hour, min);","lastModifiedDate":"2023-08-29"},{"lineNumber":186,"author":{"gitId":"jordankanghm"},"content":"        } catch (InvalidDeadlineException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":187,"author":{"gitId":"jordankanghm"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":188,"author":{"gitId":"jordankanghm"},"content":"            return null;","lastModifiedDate":"2023-08-29"},{"lineNumber":189,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":190,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":191,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":192,"author":{"gitId":"jordankanghm"},"content":"    // Checks whether a task with the given task number argument exists","lastModifiedDate":"2023-08-29"},{"lineNumber":193,"author":{"gitId":"jordankanghm"},"content":"    public boolean isValidTaskNumber(int number) {","lastModifiedDate":"2023-08-29"},{"lineNumber":194,"author":{"gitId":"jordankanghm"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":195,"author":{"gitId":"jordankanghm"},"content":"            int listSize \u003d storage.load().size();","lastModifiedDate":"2023-08-29"},{"lineNumber":196,"author":{"gitId":"jordankanghm"},"content":"            return number \u003e 0 \u0026\u0026 number \u003c\u003d listSize;","lastModifiedDate":"2023-08-29"},{"lineNumber":197,"author":{"gitId":"jordankanghm"},"content":"        } catch (InvalidDataFormatException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":198,"author":{"gitId":"jordankanghm"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":199,"author":{"gitId":"jordankanghm"},"content":"            return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":200,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":201,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":202,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jordankanghm":202}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"import java.io.*;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"public class Storage {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"    protected String filePath;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"    // Reads the data in the duke.txt file, unserializes it and returns an arraylist representing","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"    // the saved tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"    public ArrayList\u003cTask\u003e load() throws InvalidDataFormatException {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"        String folderPath \u003d \"./data/\";","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"        String filePath \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"jordankanghm"},"content":"            // Check if the folder exists, create if not","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"            Path folder \u003d Paths.get(folderPath);","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"jordankanghm"},"content":"            if (!Files.exists(folder)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"                Files.createDirectories(folder);","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"jordankanghm"},"content":"                System.out.println(\"Folder created: \" + folderPath);","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"jordankanghm"},"content":"            // Check if the file exists, create if not","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"jordankanghm"},"content":"            Path file \u003d Paths.get(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"jordankanghm"},"content":"            if (!Files.exists(file)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"jordankanghm"},"content":"                Files.createFile(file);","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"jordankanghm"},"content":"                System.out.println(\"File created: \" + filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"jordankanghm"},"content":"            // If the duke.txt file is empty, return an empty task arraylist","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"jordankanghm"},"content":"            if (Files.size(file) \u003d\u003d 0) {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"jordankanghm"},"content":"                return tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"jordankanghm"},"content":"            // Throws StreamCorruptedException when data format is unserializable","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"jordankanghm"},"content":"            ObjectInputStream inputStream \u003d new ObjectInputStream(new FileInputStream(filePath));","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"jordankanghm"},"content":"            tasks \u003d (ArrayList\u003cTask\u003e) inputStream.readObject();","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"jordankanghm"},"content":"            // Throws exception if data in duke.txt is not an ArrayList\u003cTask\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"jordankanghm"},"content":"            if (tasks instanceof ArrayList\u003c?\u003e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"jordankanghm"},"content":"                tasks \u003d (ArrayList\u003cTask\u003e) tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"jordankanghm"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"jordankanghm"},"content":"                throw new InvalidDataFormatException();","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"jordankanghm"},"content":"        } catch (StreamCorruptedException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"jordankanghm"},"content":"            throw new InvalidDataFormatException();","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"jordankanghm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"jordankanghm"},"content":"            throw new InvalidDataFormatException();","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"jordankanghm"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"jordankanghm"},"content":"            throw new InvalidDataFormatException();","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"jordankanghm"},"content":"        System.out.println(\"List has been updated\\n Updated list is: \");","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"jordankanghm"},"content":"        System.out.println(tasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"jordankanghm"},"content":"        return tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"jordankanghm"},"content":"    // Removes all data from the duke.txt file","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"jordankanghm"},"content":"    // Takes the task arraylist argument, serializes it and stores it in the duke.txt file","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"jordankanghm"},"content":"    public void save(ArrayList\u003cTask\u003e data) {","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"jordankanghm"},"content":"        // Delete all data from duke.txt file","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"jordankanghm"},"content":"        try (ObjectOutputStream outputStream \u003d new ObjectOutputStream(new FileOutputStream(\"./data/duke.txt\", false))) {","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"jordankanghm"},"content":"            outputStream.writeObject(data);","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"jordankanghm"},"content":"            System.out.println(\"Data saved to file.\\n Data is: \");","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"jordankanghm"},"content":"            System.out.println(data);","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"jordankanghm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"jordankanghm"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jordankanghm":76}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"class Task implements Serializable {","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"    protected String name \u003d \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"    public Task(String name) {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"        return isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"        return \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"    public String getTimeInfo() {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"        return \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"jordankanghm"},"content":"    public void markTask() {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"jordankanghm"},"content":"    public void unMarkTask() {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"jordankanghm"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jordankanghm":29}},{"path":"src/main/java/duke/TaskTypeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"public class TaskTypeException extends DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"    public TaskTypeException() {","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"        super(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"                \" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jordankanghm":7}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"    protected String type \u003d \"T\";","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"    public ToDo(String name) {","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"        super(name);","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"        return \"[\" + this.type + \"]\";","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jordankanghm":11}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"public class Ui {","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"    public Ui() {","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"    // Prints a data format error","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"        System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"                \" ☹ OOPS!!! The saved data format is invalid!\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"    // Prints the tasks in the taskList given","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"    public void printListItems(TaskList taskList) {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"            System.out.println(i+1 + \".\" + task.getTaskType() + task.getStatusIcon() + \" \" + task.name +","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"                    \" \" + task.getTimeInfo());","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"    // Prints the introduction message at the start of the program","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"jordankanghm"},"content":"    public void printIntro() {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"jordankanghm"},"content":"        String intro \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"jordankanghm"},"content":"                \" Hello! I\u0027m Dookie\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"jordankanghm"},"content":"                \" What can I do for you?\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"jordankanghm"},"content":"                \"____________________________________________________________\";","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"jordankanghm"},"content":"        System.out.println(intro);","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"jordankanghm"},"content":"    // Prints the message for when a new task is added","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"jordankanghm"},"content":"    public void printAddTaskMessage(Task task, TaskList tasks) {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"jordankanghm"},"content":"        int listSize \u003d tasks.getTasks().size();","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"jordankanghm"},"content":"        String message \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"jordankanghm"},"content":"                \" Got it. I\u0027ve added this task: \\n   \" +","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"jordankanghm"},"content":"                task.getTaskType() + task.getStatusIcon() + \" \" + task.name + task.getTimeInfo() + \"\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"jordankanghm"},"content":"                \" Now you have \" + listSize + \" tasks in the list.\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"jordankanghm"},"content":"                \"____________________________________________________________\";","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"jordankanghm"},"content":"        System.out.println(message);","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"jordankanghm"},"content":"    // Prints the message for when a task is deleted","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"jordankanghm"},"content":"    public void printDeleteTaskMessage(Task task, TaskList tasks){","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"jordankanghm"},"content":"        int listSize \u003d tasks.getTasks().size();","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"jordankanghm"},"content":"        String message \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"jordankanghm"},"content":"                \" Noted. I\u0027ve removed this task: \\n   \" +","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"jordankanghm"},"content":"                task.getTaskType() + task.getStatusIcon() + \" \" + task.name + task.getTimeInfo() + \"\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"jordankanghm"},"content":"                \" Now you have \" + listSize + \" tasks in the list.\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"jordankanghm"},"content":"                \"____________________________________________________________\";","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"jordankanghm"},"content":"        System.out.println(message);","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"jordankanghm"},"content":"    // Prints the message at the end of the program","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"jordankanghm"},"content":"    public void printExit() {","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"jordankanghm"},"content":"        String exitMessage \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"jordankanghm"},"content":"                \" Bye. Hope to see you again soon!\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"jordankanghm"},"content":"                \"____________________________________________________________\";","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"jordankanghm"},"content":"        System.out.println(exitMessage);","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"jordankanghm"},"content":"    // Prints the message when a task is marked","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"jordankanghm"},"content":"    public void printMarkedTaskMessage(Task task) {","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"jordankanghm"},"content":"        String message \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"jordankanghm"},"content":"                \" Nice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"jordankanghm"},"content":"                \"   \" + task.getStatusIcon() + \" \" + task.name + task.getTimeInfo() + \"\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"jordankanghm"},"content":"                \"____________________________________________________________\";","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"jordankanghm"},"content":"        System.out.println(message);","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"jordankanghm"},"content":"    // Prints the message when a task is unmarked","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"jordankanghm"},"content":"    public void printUnmarkedTaskMessage(Task task) {","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"jordankanghm"},"content":"        String message \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"jordankanghm"},"content":"                \" OK. I\u0027ve marked this task as not done yet:\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"jordankanghm"},"content":"                \"   \" + task.getStatusIcon() + \" \" + task.name + task.getTimeInfo() + \"\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"jordankanghm"},"content":"                \"____________________________________________________________\";","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"jordankanghm"},"content":"        System.out.println(message);","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jordankanghm":82}},{"path":"src/main/java/seedu/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"import java.util.Locale;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the Deadline class.","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":" * Deadlines are tasks with a given deadline.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"    protected String type \u003d \"D\";","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"    protected LocalDateTime dateAndTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"     * Creates a new Deadline instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"     * @param name The name of the task given by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"     * @param dateAndTime The deadline of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"jordankanghm"},"content":"    public Deadline(String name, LocalDateTime dateAndTime) {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"        super(name);","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"jordankanghm"},"content":"        this.dateAndTime \u003d dateAndTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"jordankanghm"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"jordankanghm"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"jordankanghm"},"content":"        return \"[\" + this.type + \"]\";","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"jordankanghm"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"jordankanghm"},"content":"    public String getTimeInfo() {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"jordankanghm"},"content":"        // Format month in words","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"jordankanghm"},"content":"        DateTimeFormatter monthFormatter \u003d DateTimeFormatter.ofPattern(\"MMMM\", Locale.ENGLISH);","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"jordankanghm"},"content":"        String monthInWords \u003d this.dateAndTime.format(monthFormatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"jordankanghm"},"content":"        // Format day of the month","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"jordankanghm"},"content":"        int dayOfMonth \u003d this.dateAndTime.getDayOfMonth();","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"jordankanghm"},"content":"        // Format year","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"jordankanghm"},"content":"        int year \u003d this.dateAndTime.getYear();","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"jordankanghm"},"content":"        // Format the time in AM/PM","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"jordankanghm"},"content":"        DateTimeFormatter amPmFormatter \u003d DateTimeFormatter.ofPattern(\"h:mm a\");","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"jordankanghm"},"content":"        LocalTime time \u003d this.dateAndTime.toLocalTime();","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"jordankanghm"},"content":"        String formattedTime \u003d time.format(amPmFormatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"jordankanghm"},"content":"        return \"(by: \" + monthInWords + \" \" + dayOfMonth + \" \" + year + \", \" + formattedTime + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jordankanghm":49}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the Duke class","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":" * Duke is the chatbot that runs the program.","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"public class Duke {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"    private Parser parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"     * Creates a new Duke instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"     * @param filePath The relative path to the file used to store the saved data.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"jordankanghm"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"jordankanghm"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"jordankanghm"},"content":"            parser \u003d new Parser(storage, tasks, ui);","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"jordankanghm"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"jordankanghm"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"jordankanghm"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"jordankanghm"},"content":"     * Executes the chatbot program.","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"jordankanghm"},"content":"    public void run() {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"jordankanghm"},"content":"        ui.printIntro();","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"jordankanghm"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"jordankanghm"},"content":"        // Get user command","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"jordankanghm"},"content":"        String cmd \u003d sc.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"jordankanghm"},"content":"        // Parse the cmd as long as it is not \"bye\"","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"jordankanghm"},"content":"        while (!cmd.equals(\"bye\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"jordankanghm"},"content":"            parser.parse(cmd);","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"jordankanghm"},"content":"            cmd \u003d sc.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"jordankanghm"},"content":"        ui.printExit();","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"jordankanghm"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"jordankanghm"},"content":"        new Duke(\"./data/duke.txt\").run();","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jordankanghm":55}},{"path":"src/main/java/seedu/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the exceptions that are related to using the Duke Chatbot.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"     * Creates a new DukeException instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"     * @param message The message associated with the DukeException.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"        super(message);","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jordankanghm":15}},{"path":"src/main/java/seedu/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"import java.util.Locale;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the Event class.","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":" * An event is a Task with a start and end date.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"    protected String type \u003d \"E\";","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"     * Creates a new Event instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"     * @param name The name of the event given by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"     * @param start The start date of the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"jordankanghm"},"content":"     * @param end The end date of the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"jordankanghm"},"content":"    public Event(String name, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"        super(name);","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"jordankanghm"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"jordankanghm"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"jordankanghm"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"jordankanghm"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"jordankanghm"},"content":"        return \"[\" + this.type + \"]\";","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"jordankanghm"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"jordankanghm"},"content":"    public String getTimeInfo() {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"jordankanghm"},"content":"//        return \"hi\";","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"jordankanghm"},"content":"        // Format month in words","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"jordankanghm"},"content":"        DateTimeFormatter monthFormatter \u003d DateTimeFormatter.ofPattern(\"MMMM\", Locale.ENGLISH);","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"jordankanghm"},"content":"        String startMonthInWords \u003d this.start.format(monthFormatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"jordankanghm"},"content":"        String endMonthInWords \u003d this.end.format(monthFormatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"jordankanghm"},"content":"        // Format day of the month","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"jordankanghm"},"content":"        int startDayOfMonth \u003d this.start.getDayOfMonth();","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"jordankanghm"},"content":"        int endDayOfMonth \u003d this.end.getDayOfMonth();","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"jordankanghm"},"content":"        // Format year","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"jordankanghm"},"content":"        int startYear \u003d this.start.getYear();","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"jordankanghm"},"content":"        int endYear \u003d this.end.getYear();","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"jordankanghm"},"content":"        // Format the time in AM/PM","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"jordankanghm"},"content":"        DateTimeFormatter amPmFormatter \u003d DateTimeFormatter.ofPattern(\"h:mm a\");","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"jordankanghm"},"content":"        LocalTime startTime \u003d this.start.toLocalTime();","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"jordankanghm"},"content":"        String formattedStartTime \u003d startTime.format(amPmFormatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"jordankanghm"},"content":"        LocalTime endTime \u003d this.end.toLocalTime();","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"jordankanghm"},"content":"        String formattedEndTime \u003d endTime.format(amPmFormatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"jordankanghm"},"content":"        return \"(from: \" + startMonthInWords + \" \" + startDayOfMonth + \" \" + startYear + \", \" + formattedStartTime + \" \" +","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"jordankanghm"},"content":"                \"to: \" + endMonthInWords + \" \" + endDayOfMonth + \" \" + endYear + \", \" + formattedEndTime + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jordankanghm":61}},{"path":"src/main/java/seedu/duke/IncompleteDurationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the exception where event duration details are not inputted completely.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":" class IncompleteDurationException extends DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"    public IncompleteDurationException() {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"        super(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"                \" ☹ OOPS!!! Duration is not specified correctly.\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"                \"Please input the duration in the following format:\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"                \"/from DD-MM-YYYY TTTT /to DD-MM-YYYY TTTT\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jordankanghm":14}},{"path":"src/main/java/seedu/duke/InvalidDataFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the exception where the saved data in duke.txt is not formatted correctly.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"public class InvalidDataFormatException extends DukeException{","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"     * Creates an InvalidDataFormatException.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"    public InvalidDataFormatException() {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"        super(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"                \" ☹ OOPS!!! The saved data format is invalid!\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jordankanghm":15}},{"path":"src/main/java/seedu/duke/InvalidDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the exception where the deadline inputted does not contain a valid dead and/or time.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"public class InvalidDeadlineException extends DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"     * Creates a new InvalidDeadlineException instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"     * @param deadline The deadline given by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"    public InvalidDeadlineException(String deadline) {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"        super(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"                \" ☹ OOPS!!! \" + deadline + \" is not a valid deadline.\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"                \"Please input the deadline in the following format:\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"                \"/DD-MM-YYYY TTTT\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jordankanghm":19}},{"path":"src/main/java/seedu/duke/InvalidDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the exception where the name of the task inputted is not specified.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"public class InvalidDescriptionException extends DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"     * Creates an InvalidDescriptionException.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"     * @param taskType The type of task given by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"    public InvalidDescriptionException(String taskType) {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"        super(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"                \" ☹ OOPS!!! The description of a \" + taskType + \" cannot be empty.\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jordankanghm":17}},{"path":"src/main/java/seedu/duke/InvalidDurationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the exception where the event start and end dates are not correct dates.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"public class InvalidDurationException extends DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"     * Creates an InvalidDurationException.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"     * @param duration The duration given by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"    public InvalidDurationException(String duration) {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"        super(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"                \" ☹ OOPS!!! \" + duration + \" is not a valid duration.\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"                \"Please input the duration in the following format:\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"                \"/from DD-MM-YYYY TTTT /to DD-MM-YYYY TTTT\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jordankanghm":19}},{"path":"src/main/java/seedu/duke/InvalidIntegerException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the exception where the string that follows user\u0027s mark/delete operations is not","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":" * an integer.","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"public class InvalidIntegerException extends DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"     * Creates an InvalidIntegerException.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"    public InvalidIntegerException() {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"        super(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"                \" ☹ OOPS!!! There is no such task.\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"                \" Please input an integer.\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jordankanghm":17}},{"path":"src/main/java/seedu/duke/InvalidTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the exception where there is no such task in the task list from the","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":" * integer inputted by the user in mark/delete operations.","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"public class InvalidTaskNumberException extends DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"     * Creates an InvalidTaskNumberException.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"     * @param number The number given by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"    public InvalidTaskNumberException(int number) {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"        super(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"                \" ☹ OOPS!!! \" + number + \" is not a valid task number.\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jordankanghm":18}},{"path":"src/main/java/seedu/duke/NoDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the exception where the deadline for a Deadline event is not specified.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"public class NoDeadlineException extends DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"     * Creates a NoDeadlineException instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"    public NoDeadlineException() {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"        super(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"                \" ☹ OOPS!!! There is no deadline given.\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"                \"Please input the duration in the following format:\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"                \"/from DD-MM-YYYY TTTT /to DD-MM-YYYY TTTT\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jordankanghm":17}},{"path":"src/main/java/seedu/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the Parser class.","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":" * The Parser deals with the control flow of the program depending on the user\u0027s input command.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"public class Parser {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"     * Creates a Parser instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"     * @param storage The Storage used for the Duke program.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"     * @param tasks The TaskList created for the Duke program.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"     * @param ui The Ui used by the Duke program.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"jordankanghm"},"content":"    public Parser(Storage storage, TaskList tasks, Ui ui) {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"jordankanghm"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"jordankanghm"},"content":"     * Executes the necessary processes based on the command inputted by the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"jordankanghm"},"content":"     * @param cmd The command inputted by the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"jordankanghm"},"content":"    public void parse(String cmd) {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"jordankanghm"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"jordankanghm"},"content":"            String type \u003d cmd.split(\" \", 2)[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"jordankanghm"},"content":"            // If cmd is \"list\", list items and wait for next command","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"jordankanghm"},"content":"            if (cmd.equals(\"list\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"jordankanghm"},"content":"                ui.printListItems(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"jordankanghm"},"content":"            } else if (type.equals(\"todo\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"jordankanghm"},"content":"                // Check if description is empty","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"jordankanghm"},"content":"                if (descriptionIsEmpty(cmd)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"jordankanghm"},"content":"                    throw new InvalidDescriptionException(\"todo\");","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"jordankanghm"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"jordankanghm"},"content":"                String taskName \u003d cmd.split(\" \", 2)[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"jordankanghm"},"content":"                Task todo \u003d new ToDo(taskName);","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"jordankanghm"},"content":"                tasks.addTask(todo);","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"jordankanghm"},"content":"                ui.printAddTaskMessage(todo, tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"jordankanghm"},"content":"            } else if (type.equals(\"deadline\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"jordankanghm"},"content":"                if (descriptionIsEmpty(cmd)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"jordankanghm"},"content":"                    throw new InvalidDescriptionException(\"deadline\");","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"jordankanghm"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"jordankanghm"},"content":"                String taskWithDeadline \u003d cmd.split(\" \", 2)[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"jordankanghm"},"content":"                if (hasNoDeadline(taskWithDeadline)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"jordankanghm"},"content":"                    throw new NoDeadlineException();","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"jordankanghm"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"jordankanghm"},"content":"                String taskName \u003d taskWithDeadline.split(\"/\", 2)[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"jordankanghm"},"content":"                String deadlineDescription \u003d taskWithDeadline.split(\"/\", 2)[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"jordankanghm"},"content":"                try {","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"jordankanghm"},"content":"                    Task deadline \u003d new Deadline(taskName, checkDeadline(deadlineDescription));","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"jordankanghm"},"content":"                    tasks.addTask(deadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"jordankanghm"},"content":"                    ui.printAddTaskMessage(deadline, tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"jordankanghm"},"content":"                } catch(Exception e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"jordankanghm"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"jordankanghm"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"jordankanghm"},"content":"            } else if (type.equals(\"event\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"jordankanghm"},"content":"                if (descriptionIsEmpty(cmd)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"jordankanghm"},"content":"                    throw new InvalidDescriptionException(\"event\");","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"jordankanghm"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"jordankanghm"},"content":"                String taskWithDuration \u003d cmd.split(\" \", 2)[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"jordankanghm"},"content":"                String[] time \u003d taskWithDuration.split(\"/\");","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"jordankanghm"},"content":"                // Check if there is a valid duration","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"jordankanghm"},"content":"                if (time.length !\u003d 3) {","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"jordankanghm"},"content":"                    throw new IncompleteDurationException();","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"jordankanghm"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"jordankanghm"},"content":"                String taskName \u003d time[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"jordankanghm"},"content":"                String starting \u003d time[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"jordankanghm"},"content":"                String ending \u003d time[2];","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"jordankanghm"},"content":"                // Assumes that starting and ending both start with \"from\" and \"to\" respectively","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"jordankanghm"},"content":"                Task event \u003d new Event(taskName, checkStarting(starting), checkEnding(ending));","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"jordankanghm"},"content":"                tasks.addTask(event);","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"jordankanghm"},"content":"                ui.printAddTaskMessage(event, tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"jordankanghm"},"content":"            } else if (type.equals(\"delete\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"jordankanghm"},"content":"                if (descriptionIsEmpty(cmd)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"jordankanghm"},"content":"                    throw new InvalidDescriptionException(\"delete\");","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"jordankanghm"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"jordankanghm"},"content":"                int taskNumber \u003d -1;","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"jordankanghm"},"content":"                String integer \u003d cmd.split(\" \", 2)[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"jordankanghm"},"content":"                try {","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"jordankanghm"},"content":"                    taskNumber \u003d Integer.parseInt(integer);","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"jordankanghm"},"content":"                } catch (Exception e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"jordankanghm"},"content":"                    throw new InvalidIntegerException();","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"jordankanghm"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"jordankanghm"},"content":"                if (!isValidTaskNumber(taskNumber)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"jordankanghm"},"content":"                    throw new InvalidTaskNumberException(taskNumber);","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"jordankanghm"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"jordankanghm"},"content":"                Task task \u003d tasks.markOrDeleteTask(taskNumber - 1, \"delete\");","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"jordankanghm"},"content":"                ui.printDeleteTaskMessage(task, new TaskList(storage.load()));","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"jordankanghm"},"content":"            } else if (type.equals(\"mark\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"jordankanghm"},"content":"                if (descriptionIsEmpty(cmd)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"jordankanghm"},"content":"                    throw new InvalidDescriptionException(\"mark\");","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"jordankanghm"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"jordankanghm"},"content":"                int taskNumber \u003d -1;","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"jordankanghm"},"content":"                String integer \u003d cmd.split(\" \", 2)[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"jordankanghm"},"content":"                try {","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"jordankanghm"},"content":"                    taskNumber \u003d Integer.parseInt(integer);","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"jordankanghm"},"content":"                } catch (Exception e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"jordankanghm"},"content":"                    throw new InvalidIntegerException();","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"jordankanghm"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"jordankanghm"},"content":"                if (!isValidTaskNumber(taskNumber)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"jordankanghm"},"content":"                    throw new InvalidTaskNumberException(taskNumber);","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"jordankanghm"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"jordankanghm"},"content":"                Task task \u003d tasks.markOrDeleteTask(taskNumber - 1, \"mark\");","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"jordankanghm"},"content":"                ui.printMarkedTaskMessage(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"jordankanghm"},"content":"            } else if (type.equals(\"unmark\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"jordankanghm"},"content":"                if (descriptionIsEmpty(cmd)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"jordankanghm"},"content":"                    throw new InvalidDescriptionException(\"unmark\");","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"jordankanghm"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"jordankanghm"},"content":"                int taskNumber \u003d -1;","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"jordankanghm"},"content":"                String integer \u003d cmd.split(\" \", 2)[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"jordankanghm"},"content":"                try {","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"jordankanghm"},"content":"                    taskNumber \u003d Integer.parseInt(integer);","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"jordankanghm"},"content":"                } catch (Exception e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"jordankanghm"},"content":"                    throw new InvalidIntegerException();","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"jordankanghm"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"jordankanghm"},"content":"                if (!isValidTaskNumber(taskNumber)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"jordankanghm"},"content":"                    throw new InvalidTaskNumberException(taskNumber);","lastModifiedDate":"2023-08-30"},{"lineNumber":148,"author":{"gitId":"jordankanghm"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":149,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"jordankanghm"},"content":"                Task task \u003d tasks.markOrDeleteTask(taskNumber - 1, \"unmark\");","lastModifiedDate":"2023-08-30"},{"lineNumber":151,"author":{"gitId":"jordankanghm"},"content":"                ui.printUnmarkedTaskMessage(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":152,"author":{"gitId":"jordankanghm"},"content":"            } else if (type.equals(\"find\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":153,"author":{"gitId":"jordankanghm"},"content":"                if (descriptionIsEmpty(cmd)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":154,"author":{"gitId":"jordankanghm"},"content":"                    throw new InvalidDescriptionException(\"find\");","lastModifiedDate":"2023-08-30"},{"lineNumber":155,"author":{"gitId":"jordankanghm"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":157,"author":{"gitId":"jordankanghm"},"content":"                String keyword \u003d cmd.split(\" \", 2)[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"jordankanghm"},"content":"                ArrayList\u003cTask\u003e results \u003d tasks.find(keyword);","lastModifiedDate":"2023-08-30"},{"lineNumber":159,"author":{"gitId":"jordankanghm"},"content":"                ui.printFindResults(results);","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"jordankanghm"},"content":"            } else {  // If the inputted command is not valid, throw TaskTypeException","lastModifiedDate":"2023-08-30"},{"lineNumber":161,"author":{"gitId":"jordankanghm"},"content":"                throw new TaskTypeException();","lastModifiedDate":"2023-08-30"},{"lineNumber":162,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":163,"author":{"gitId":"jordankanghm"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":164,"author":{"gitId":"jordankanghm"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":165,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":166,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":167,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":168,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":169,"author":{"gitId":"jordankanghm"},"content":"     * Checks whether the task description has been specified.","lastModifiedDate":"2023-08-30"},{"lineNumber":170,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":171,"author":{"gitId":"jordankanghm"},"content":"     * @param cmd The command inputted by the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":172,"author":{"gitId":"jordankanghm"},"content":"     * @return True if there is no task description specified.","lastModifiedDate":"2023-08-30"},{"lineNumber":173,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":174,"author":{"gitId":"jordankanghm"},"content":"    public boolean descriptionIsEmpty(String cmd) {","lastModifiedDate":"2023-08-30"},{"lineNumber":175,"author":{"gitId":"jordankanghm"},"content":"        return cmd.split(\" \").length \u003d\u003d 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":176,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":177,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":178,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":179,"author":{"gitId":"jordankanghm"},"content":"     * Checks whether the input task has no deadline.","lastModifiedDate":"2023-08-30"},{"lineNumber":180,"author":{"gitId":"jordankanghm"},"content":"     * A task has no deadline if there is no \"/\" followed by at least one character.","lastModifiedDate":"2023-08-30"},{"lineNumber":181,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":182,"author":{"gitId":"jordankanghm"},"content":"     * @param taskWithDeadline The task name and deadline given by the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":183,"author":{"gitId":"jordankanghm"},"content":"     * @return True if the task has no specified deadline.","lastModifiedDate":"2023-08-30"},{"lineNumber":184,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":185,"author":{"gitId":"jordankanghm"},"content":"    public boolean hasNoDeadline(String taskWithDeadline) {","lastModifiedDate":"2023-08-30"},{"lineNumber":186,"author":{"gitId":"jordankanghm"},"content":"        return taskWithDeadline.split(\"/\").length \u003d\u003d 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":187,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":188,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":189,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":190,"author":{"gitId":"jordankanghm"},"content":"     * Checks whether the input deadline is a proper date and time.","lastModifiedDate":"2023-08-30"},{"lineNumber":191,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":192,"author":{"gitId":"jordankanghm"},"content":"     * @param deadline The deadline specified by the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":193,"author":{"gitId":"jordankanghm"},"content":"     * @return A LocalDateTime object containing the date and time given, if it is a valid deadline. Else, return null.","lastModifiedDate":"2023-08-30"},{"lineNumber":194,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":195,"author":{"gitId":"jordankanghm"},"content":"    public LocalDateTime checkDeadline(String deadline) {","lastModifiedDate":"2023-08-30"},{"lineNumber":196,"author":{"gitId":"jordankanghm"},"content":"        String[] parts \u003d deadline.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":197,"author":{"gitId":"jordankanghm"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":198,"author":{"gitId":"jordankanghm"},"content":"            // If there isn\u0027t exactly three components in the deadline, return false","lastModifiedDate":"2023-08-30"},{"lineNumber":199,"author":{"gitId":"jordankanghm"},"content":"            if (parts.length !\u003d 3) {","lastModifiedDate":"2023-08-30"},{"lineNumber":200,"author":{"gitId":"jordankanghm"},"content":"                throw new InvalidDeadlineException(deadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":201,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":202,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":203,"author":{"gitId":"jordankanghm"},"content":"            String by \u003d parts[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":204,"author":{"gitId":"jordankanghm"},"content":"            String date \u003d parts[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":205,"author":{"gitId":"jordankanghm"},"content":"            String time \u003d parts[2];","lastModifiedDate":"2023-08-30"},{"lineNumber":206,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":207,"author":{"gitId":"jordankanghm"},"content":"            // If the first word is not \"by\", return false","lastModifiedDate":"2023-08-30"},{"lineNumber":208,"author":{"gitId":"jordankanghm"},"content":"            if (!by.equals(\"by\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":209,"author":{"gitId":"jordankanghm"},"content":"                throw new InvalidDeadlineException(deadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":210,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":211,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":212,"author":{"gitId":"jordankanghm"},"content":"            String[] dateParts \u003d date.split(\"-\");","lastModifiedDate":"2023-09-01"},{"lineNumber":213,"author":{"gitId":"jordankanghm"},"content":"            // If the date does not have three components, return false","lastModifiedDate":"2023-08-30"},{"lineNumber":214,"author":{"gitId":"jordankanghm"},"content":"            if (dateParts.length !\u003d 3) {","lastModifiedDate":"2023-08-30"},{"lineNumber":215,"author":{"gitId":"jordankanghm"},"content":"                throw new InvalidDeadlineException(deadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":216,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":217,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":218,"author":{"gitId":"jordankanghm"},"content":"            int day \u003d Integer.parseInt(dateParts[0]);","lastModifiedDate":"2023-08-30"},{"lineNumber":219,"author":{"gitId":"jordankanghm"},"content":"            int month \u003d Integer.parseInt(dateParts[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":220,"author":{"gitId":"jordankanghm"},"content":"            int year \u003d Integer.parseInt(dateParts[2]);","lastModifiedDate":"2023-08-30"},{"lineNumber":221,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":222,"author":{"gitId":"jordankanghm"},"content":"            // If time is not a four digit number, return false","lastModifiedDate":"2023-08-30"},{"lineNumber":223,"author":{"gitId":"jordankanghm"},"content":"            if (time.length() !\u003d 4) {","lastModifiedDate":"2023-08-30"},{"lineNumber":224,"author":{"gitId":"jordankanghm"},"content":"                throw new InvalidDeadlineException(deadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":225,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":226,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":227,"author":{"gitId":"jordankanghm"},"content":"            int hour \u003d Integer.parseInt(time.substring(0, 2));","lastModifiedDate":"2023-08-30"},{"lineNumber":228,"author":{"gitId":"jordankanghm"},"content":"            int min \u003d Integer.parseInt(time.substring(2, 4));","lastModifiedDate":"2023-08-30"},{"lineNumber":229,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":230,"author":{"gitId":"jordankanghm"},"content":"            return LocalDateTime.of(year, month, day, hour, min);","lastModifiedDate":"2023-08-30"},{"lineNumber":231,"author":{"gitId":"jordankanghm"},"content":"        } catch (InvalidDeadlineException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":232,"author":{"gitId":"jordankanghm"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":233,"author":{"gitId":"jordankanghm"},"content":"            return null;","lastModifiedDate":"2023-08-30"},{"lineNumber":234,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":235,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":236,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":237,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":238,"author":{"gitId":"jordankanghm"},"content":"     * Checks whether the given start date and time for an event is valid.","lastModifiedDate":"2023-09-01"},{"lineNumber":239,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":240,"author":{"gitId":"jordankanghm"},"content":"     * @param starting The start date and time","lastModifiedDate":"2023-09-01"},{"lineNumber":241,"author":{"gitId":"jordankanghm"},"content":"     * @return A LocalDateTime representing the date and time","lastModifiedDate":"2023-09-01"},{"lineNumber":242,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":243,"author":{"gitId":"jordankanghm"},"content":"    public LocalDateTime checkStarting(String starting ){","lastModifiedDate":"2023-09-01"},{"lineNumber":244,"author":{"gitId":"jordankanghm"},"content":"        String[] parts \u003d starting.split(\" \");","lastModifiedDate":"2023-09-01"},{"lineNumber":245,"author":{"gitId":"jordankanghm"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":246,"author":{"gitId":"jordankanghm"},"content":"            // If there isn\u0027t exactly three components in the deadline, return false","lastModifiedDate":"2023-09-01"},{"lineNumber":247,"author":{"gitId":"jordankanghm"},"content":"            if (parts.length !\u003d 3) {","lastModifiedDate":"2023-09-01"},{"lineNumber":248,"author":{"gitId":"jordankanghm"},"content":"                throw new InvalidDurationException(starting);","lastModifiedDate":"2023-09-01"},{"lineNumber":249,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":250,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":251,"author":{"gitId":"jordankanghm"},"content":"            String from \u003d parts[0];","lastModifiedDate":"2023-09-01"},{"lineNumber":252,"author":{"gitId":"jordankanghm"},"content":"            String date \u003d parts[1];","lastModifiedDate":"2023-09-01"},{"lineNumber":253,"author":{"gitId":"jordankanghm"},"content":"            String time \u003d parts[2];","lastModifiedDate":"2023-09-01"},{"lineNumber":254,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":255,"author":{"gitId":"jordankanghm"},"content":"            // If the first word is not \"by\", return false","lastModifiedDate":"2023-09-01"},{"lineNumber":256,"author":{"gitId":"jordankanghm"},"content":"            if (!from.equals(\"from\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":257,"author":{"gitId":"jordankanghm"},"content":"                throw new InvalidDurationException(starting);","lastModifiedDate":"2023-09-01"},{"lineNumber":258,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":259,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":260,"author":{"gitId":"jordankanghm"},"content":"            String[] dateParts \u003d date.split(\"-\");","lastModifiedDate":"2023-09-01"},{"lineNumber":261,"author":{"gitId":"jordankanghm"},"content":"            // If the date does not have three components, return false","lastModifiedDate":"2023-09-01"},{"lineNumber":262,"author":{"gitId":"jordankanghm"},"content":"            if (dateParts.length !\u003d 3) {","lastModifiedDate":"2023-09-01"},{"lineNumber":263,"author":{"gitId":"jordankanghm"},"content":"                throw new InvalidDurationException(starting);","lastModifiedDate":"2023-09-01"},{"lineNumber":264,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":265,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":266,"author":{"gitId":"jordankanghm"},"content":"            int day \u003d Integer.parseInt(dateParts[0]);","lastModifiedDate":"2023-09-01"},{"lineNumber":267,"author":{"gitId":"jordankanghm"},"content":"            int month \u003d Integer.parseInt(dateParts[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":268,"author":{"gitId":"jordankanghm"},"content":"            int year \u003d Integer.parseInt(dateParts[2]);","lastModifiedDate":"2023-09-01"},{"lineNumber":269,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":270,"author":{"gitId":"jordankanghm"},"content":"            // If time is not a four digit number, return false","lastModifiedDate":"2023-09-01"},{"lineNumber":271,"author":{"gitId":"jordankanghm"},"content":"            if (time.length() !\u003d 4) {","lastModifiedDate":"2023-09-01"},{"lineNumber":272,"author":{"gitId":"jordankanghm"},"content":"                throw new InvalidDurationException(starting);","lastModifiedDate":"2023-09-01"},{"lineNumber":273,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":274,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":275,"author":{"gitId":"jordankanghm"},"content":"            int hour \u003d Integer.parseInt(time.substring(0, 2));","lastModifiedDate":"2023-09-01"},{"lineNumber":276,"author":{"gitId":"jordankanghm"},"content":"            int min \u003d Integer.parseInt(time.substring(2, 4));","lastModifiedDate":"2023-09-01"},{"lineNumber":277,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":278,"author":{"gitId":"jordankanghm"},"content":"            return LocalDateTime.of(year, month, day, hour, min);","lastModifiedDate":"2023-09-01"},{"lineNumber":279,"author":{"gitId":"jordankanghm"},"content":"        } catch (InvalidDurationException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":280,"author":{"gitId":"jordankanghm"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":281,"author":{"gitId":"jordankanghm"},"content":"            return null;","lastModifiedDate":"2023-09-01"},{"lineNumber":282,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":283,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":284,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":285,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":286,"author":{"gitId":"jordankanghm"},"content":"     * Checks whether the given end date and time for an event is valid.","lastModifiedDate":"2023-09-01"},{"lineNumber":287,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":288,"author":{"gitId":"jordankanghm"},"content":"     * @param ending The end date and time","lastModifiedDate":"2023-09-01"},{"lineNumber":289,"author":{"gitId":"jordankanghm"},"content":"     * @return A LocalDateTime representing the date and time","lastModifiedDate":"2023-09-01"},{"lineNumber":290,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":291,"author":{"gitId":"jordankanghm"},"content":"    public LocalDateTime checkEnding(String ending) {","lastModifiedDate":"2023-09-01"},{"lineNumber":292,"author":{"gitId":"jordankanghm"},"content":"        String[] parts \u003d ending.split(\" \");","lastModifiedDate":"2023-09-01"},{"lineNumber":293,"author":{"gitId":"jordankanghm"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":294,"author":{"gitId":"jordankanghm"},"content":"            // If there isn\u0027t exactly three components in the deadline, return false","lastModifiedDate":"2023-09-01"},{"lineNumber":295,"author":{"gitId":"jordankanghm"},"content":"            if (parts.length !\u003d 3) {","lastModifiedDate":"2023-09-01"},{"lineNumber":296,"author":{"gitId":"jordankanghm"},"content":"                throw new InvalidDurationException(ending);","lastModifiedDate":"2023-09-01"},{"lineNumber":297,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":298,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":299,"author":{"gitId":"jordankanghm"},"content":"            String to \u003d parts[0];","lastModifiedDate":"2023-09-01"},{"lineNumber":300,"author":{"gitId":"jordankanghm"},"content":"            String date \u003d parts[1];","lastModifiedDate":"2023-09-01"},{"lineNumber":301,"author":{"gitId":"jordankanghm"},"content":"            String time \u003d parts[2];","lastModifiedDate":"2023-09-01"},{"lineNumber":302,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":303,"author":{"gitId":"jordankanghm"},"content":"            // If the first word is not \"by\", return false","lastModifiedDate":"2023-09-01"},{"lineNumber":304,"author":{"gitId":"jordankanghm"},"content":"            if (!to.equals(\"to\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":305,"author":{"gitId":"jordankanghm"},"content":"                throw new InvalidDurationException(ending);","lastModifiedDate":"2023-09-01"},{"lineNumber":306,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":307,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":308,"author":{"gitId":"jordankanghm"},"content":"            String[] dateParts \u003d date.split(\"-\");","lastModifiedDate":"2023-09-01"},{"lineNumber":309,"author":{"gitId":"jordankanghm"},"content":"            // If the date does not have three components, return false","lastModifiedDate":"2023-09-01"},{"lineNumber":310,"author":{"gitId":"jordankanghm"},"content":"            if (dateParts.length !\u003d 3) {","lastModifiedDate":"2023-09-01"},{"lineNumber":311,"author":{"gitId":"jordankanghm"},"content":"                throw new InvalidDurationException(ending);","lastModifiedDate":"2023-09-01"},{"lineNumber":312,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":313,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":314,"author":{"gitId":"jordankanghm"},"content":"            int day \u003d Integer.parseInt(dateParts[0]);","lastModifiedDate":"2023-09-01"},{"lineNumber":315,"author":{"gitId":"jordankanghm"},"content":"            int month \u003d Integer.parseInt(dateParts[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":316,"author":{"gitId":"jordankanghm"},"content":"            int year \u003d Integer.parseInt(dateParts[2]);","lastModifiedDate":"2023-09-01"},{"lineNumber":317,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":318,"author":{"gitId":"jordankanghm"},"content":"            // If time is not a four digit number, return false","lastModifiedDate":"2023-09-01"},{"lineNumber":319,"author":{"gitId":"jordankanghm"},"content":"            if (time.length() !\u003d 4) {","lastModifiedDate":"2023-09-01"},{"lineNumber":320,"author":{"gitId":"jordankanghm"},"content":"                throw new InvalidDurationException(ending);","lastModifiedDate":"2023-09-01"},{"lineNumber":321,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":322,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":323,"author":{"gitId":"jordankanghm"},"content":"            int hour \u003d Integer.parseInt(time.substring(0, 2));","lastModifiedDate":"2023-09-01"},{"lineNumber":324,"author":{"gitId":"jordankanghm"},"content":"            int min \u003d Integer.parseInt(time.substring(2, 4));","lastModifiedDate":"2023-09-01"},{"lineNumber":325,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":326,"author":{"gitId":"jordankanghm"},"content":"            return LocalDateTime.of(year, month, day, hour, min);","lastModifiedDate":"2023-09-01"},{"lineNumber":327,"author":{"gitId":"jordankanghm"},"content":"        } catch (InvalidDurationException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":328,"author":{"gitId":"jordankanghm"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":329,"author":{"gitId":"jordankanghm"},"content":"            return null;","lastModifiedDate":"2023-09-01"},{"lineNumber":330,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":331,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":332,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":333,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":334,"author":{"gitId":"jordankanghm"},"content":"     * Checks whether a task with the given task number argument exists.","lastModifiedDate":"2023-08-30"},{"lineNumber":335,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":336,"author":{"gitId":"jordankanghm"},"content":"     * @param number The integer specified by the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":337,"author":{"gitId":"jordankanghm"},"content":"     * @return True if a task with that task number exists.","lastModifiedDate":"2023-08-30"},{"lineNumber":338,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":339,"author":{"gitId":"jordankanghm"},"content":"    //","lastModifiedDate":"2023-08-30"},{"lineNumber":340,"author":{"gitId":"jordankanghm"},"content":"    public boolean isValidTaskNumber(int number) {","lastModifiedDate":"2023-08-30"},{"lineNumber":341,"author":{"gitId":"jordankanghm"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":342,"author":{"gitId":"jordankanghm"},"content":"            int listSize \u003d storage.load().size();","lastModifiedDate":"2023-08-30"},{"lineNumber":343,"author":{"gitId":"jordankanghm"},"content":"            return number \u003e 0 \u0026\u0026 number \u003c\u003d listSize;","lastModifiedDate":"2023-08-30"},{"lineNumber":344,"author":{"gitId":"jordankanghm"},"content":"        } catch (InvalidDataFormatException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":345,"author":{"gitId":"jordankanghm"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":346,"author":{"gitId":"jordankanghm"},"content":"            return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":347,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":348,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":349,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jordankanghm":349}},{"path":"src/main/java/seedu/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"import java.io.*;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"import java.util.List;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the Storage class.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":" * The Storage class deals with saving and loading information to a specified file.","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"    protected String filePath;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"     * Creates a Storage instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"     * @param filePath The relative path to the file used to store data.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"jordankanghm"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"jordankanghm"},"content":"     * Reads the data in the duke.txt file, unserializes it and returns an arraylist representing","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"jordankanghm"},"content":"     * the saved tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"jordankanghm"},"content":"     * @return An ArrayList\u003cTask\u003e containing the saved tasks accumulated.","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"jordankanghm"},"content":"     * @throws InvalidDataFormatException if the format of the data in the saved file is incorrect.","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"jordankanghm"},"content":"    public ArrayList\u003cTask\u003e load() throws InvalidDataFormatException {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"jordankanghm"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"jordankanghm"},"content":"        String folderPath \u003d \"./data/\";","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"jordankanghm"},"content":"        String filePath \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"jordankanghm"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"jordankanghm"},"content":"            // Check if the folder exists, create if not","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"jordankanghm"},"content":"            Path folder \u003d Paths.get(folderPath);","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"jordankanghm"},"content":"            if (!Files.exists(folder)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"jordankanghm"},"content":"                Files.createDirectories(folder);","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"jordankanghm"},"content":"            // Check if the file exists, create if not","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"jordankanghm"},"content":"            Path file \u003d Paths.get(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"jordankanghm"},"content":"            if (!Files.exists(file)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"jordankanghm"},"content":"                Files.createFile(file);","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"jordankanghm"},"content":"            // If the duke.txt file is empty, return an empty task arraylist","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"jordankanghm"},"content":"            if (Files.size(file) \u003d\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"jordankanghm"},"content":"                return tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"jordankanghm"},"content":"            // Throws StreamCorruptedException when data format is unserializable","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"jordankanghm"},"content":"            ObjectInputStream inputStream \u003d new ObjectInputStream(new FileInputStream(filePath));","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"jordankanghm"},"content":"            tasks \u003d (ArrayList\u003cTask\u003e) inputStream.readObject();","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"jordankanghm"},"content":"            // Throws exception if data in duke.txt is not an ArrayList\u003cTask\u003e","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"jordankanghm"},"content":"            if (tasks instanceof ArrayList\u003c?\u003e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"jordankanghm"},"content":"                tasks \u003d (ArrayList\u003cTask\u003e) tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"jordankanghm"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"jordankanghm"},"content":"                throw new InvalidDataFormatException();","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"jordankanghm"},"content":"        } catch (StreamCorruptedException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"jordankanghm"},"content":"            throw new InvalidDataFormatException();","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"jordankanghm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"jordankanghm"},"content":"            throw new InvalidDataFormatException();","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"jordankanghm"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"jordankanghm"},"content":"            throw new InvalidDataFormatException();","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"jordankanghm"},"content":"        return tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"jordankanghm"},"content":"     * Removes all data from the duke.txt file. Takes the task arraylist argument, serializes it","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"jordankanghm"},"content":"     * and stores it in the duke.txt file.","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"jordankanghm"},"content":"     * @param data The new ArrayList of tasks to be overwritten in the duke.txt file.","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"jordankanghm"},"content":"    public void save(ArrayList\u003cTask\u003e data) {","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"jordankanghm"},"content":"        // Delete all data from duke.txt file","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"jordankanghm"},"content":"        try (ObjectOutputStream outputStream \u003d new ObjectOutputStream(new FileOutputStream(\"./data/duke.txt\", false))) {","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"jordankanghm"},"content":"            outputStream.writeObject(data);","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"jordankanghm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"jordankanghm"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jordankanghm":91}},{"path":"src/main/java/seedu/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the Task class.","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":" * A Task is an activity that the user must complete.","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"class Task implements Serializable {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"    protected String name \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"     * Creates a Task instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"     * @param name The name of the task given by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"    public Task(String name) {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"     * Obtains a String representing the completion status of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"     * @return [X] if the task has been completed and [ ] if it has not.","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"jordankanghm"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"jordankanghm"},"content":"        return isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"jordankanghm"},"content":"     * Obtains a string representing the type of task.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"jordankanghm"},"content":"     * @return [T], [D] or [E] for ToDos, Deadlines and Events respectively.","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"jordankanghm"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"jordankanghm"},"content":"        return \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"jordankanghm"},"content":"     * Obtains the time restriction details in a string format","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"jordankanghm"},"content":"     * @return A string containing the deadline/duration information for deadlines and events respectively.","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"jordankanghm"},"content":"     *         Returns an empty string for ToDos.","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"jordankanghm"},"content":"    public String getTimeInfo() {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"jordankanghm"},"content":"        return \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"jordankanghm"},"content":"     * Marks the task as completed.","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"jordankanghm"},"content":"    public void markTask() {","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"jordankanghm"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"jordankanghm"},"content":"     * Marks the task as incomplete.","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"jordankanghm"},"content":"    public void unMarkTask() {","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"jordankanghm"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jordankanghm":63}},{"path":"src/main/java/seedu/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the TaskList class.","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":" * A TaskList represents the user\u0027s accumulated tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"public class TaskList {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"     * Obtains the accumulated tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"     * @return An ArrayList\u003cTask\u003e containing the current tasks","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"jordankanghm"},"content":"        return this.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"jordankanghm"},"content":"     * Appends the new task at the end of the current ArrayList\u003cTask\u003e and saves it.","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"jordankanghm"},"content":"     * @param task The task to be appended.","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"jordankanghm"},"content":"     * @return The ArrayList\u003cTask\u003e containing the updated tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"jordankanghm"},"content":"    // Adds the Task argument at the end of the list","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"jordankanghm"},"content":"    public ArrayList\u003cTask\u003e addTask(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"jordankanghm"},"content":"        tasks.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"jordankanghm"},"content":"        new Storage(\"./data/duke.txt\").save(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"jordankanghm"},"content":"        return tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"jordankanghm"},"content":"     * Reads the duke.txt file, unserializes it and obtain the arraylist representing saved tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"jordankanghm"},"content":"     * Depending on the purpose, information in the arraylist is updated, and the whole arraylist is","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"jordankanghm"},"content":"     * serialized and saved again in the duke.txt file.","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"jordankanghm"},"content":"     * @param index The task number specified.","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"jordankanghm"},"content":"     * @param purpose The type of update: mark or delete.","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"jordankanghm"},"content":"     * @return The task which has been marked/deleted.","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"jordankanghm"},"content":"     * @throws InvalidDataFormatException if the data in the duke.txt file is not in the correct format.","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"jordankanghm"},"content":"    //","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"jordankanghm"},"content":"    public Task markOrDeleteTask(int index, String purpose) throws InvalidDataFormatException {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"jordankanghm"},"content":"        if (purpose.equals(\"mark\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"jordankanghm"},"content":"            this.tasks.get(index).markTask();","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"jordankanghm"},"content":"            new Storage(\"./data/duke.txt\").save(this.tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"jordankanghm"},"content":"            return this.tasks.get(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"jordankanghm"},"content":"        } else if (purpose.equals(\"unmark\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"jordankanghm"},"content":"            this.tasks.get(index).unMarkTask();","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"jordankanghm"},"content":"            new Storage(\"./data/duke.txt\").save(this.tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"jordankanghm"},"content":"            return this.tasks.get(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"jordankanghm"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"jordankanghm"},"content":"            Task deletedTask \u003d this.tasks.get(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"jordankanghm"},"content":"            this.tasks.remove(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"jordankanghm"},"content":"            new Storage(\"./data/duke.txt\").save(this.tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"jordankanghm"},"content":"            return deletedTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"jordankanghm"},"content":"     * Finds tasks in the accumulated tasks that contain the keyword specified.","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"jordankanghm"},"content":"     * @param keyword The string to be matched with the accumulated tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"jordankanghm"},"content":"     * @return An ArrayList\u003cTask\u003e containing the tasks that contain the keyword.","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"jordankanghm"},"content":"    public ArrayList\u003cTask\u003e find(String keyword) {","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"jordankanghm"},"content":"        ArrayList\u003cTask\u003e results \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"jordankanghm"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"jordankanghm"},"content":"            if (tasks.get(i).name.contains(keyword)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"jordankanghm"},"content":"                results.add(tasks.get(i));","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"jordankanghm"},"content":"        return results;","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jordankanghm":86}},{"path":"src/main/java/seedu/duke/TaskTypeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the exception where the task identifier command by the user is not specified.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"public class TaskTypeException extends DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"     * Creates a TaskTypeException instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"    public TaskTypeException() {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"        super(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"                \" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jordankanghm":15}},{"path":"src/main/java/seedu/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the ToDo class.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":" * A ToDo is a Task with a ToDo type.","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"    protected String type \u003d \"T\";","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"     * Creates a ToDo instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"     * @param name The name of the task given by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"    public ToDo(String name) {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"        super(name);","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"     * Obtains the task type in square brackets.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"jordankanghm"},"content":"     * @return A string containing the task type in square brackets.","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"jordankanghm"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"jordankanghm"},"content":"        return \"[\" + this.type + \"]\";","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jordankanghm":28}},{"path":"src/main/java/seedu/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the Ui class.","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":" * The Ui is responsible for the outputs printed to the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"public class Ui {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"     * Creates a Ui instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"    public Ui() {}","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"     * Prints a data format error.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"        System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"                \" ☹ OOPS!!! The saved data format is invalid!\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"jordankanghm"},"content":"     * Prints the tasks in the taskList given.","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"jordankanghm"},"content":"     * @param taskList The tasks accumulated.","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"jordankanghm"},"content":"    public void printListItems(TaskList taskList) {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"jordankanghm"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"jordankanghm"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"jordankanghm"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"jordankanghm"},"content":"            System.out.println(i+1 + \".\" + task.getTaskType() + task.getStatusIcon() + \" \" + task.name","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"jordankanghm"},"content":"                                    + \" \" + task.getTimeInfo());","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"jordankanghm"},"content":"     * Prints the introduction message at the start of the program.","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"jordankanghm"},"content":"    public void printIntro() {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"jordankanghm"},"content":"        String intro \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"jordankanghm"},"content":"                \" Hello! I\u0027m Dookie\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"jordankanghm"},"content":"                \" What can I do for you?\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"jordankanghm"},"content":"                \"____________________________________________________________\";","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"jordankanghm"},"content":"        System.out.println(intro);","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"jordankanghm"},"content":"     * Prints the message for when a new task is added.","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"jordankanghm"},"content":"     * @param task The newly added task.","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"jordankanghm"},"content":"     * @param tasks The current accumulated tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"jordankanghm"},"content":"    public void printAddTaskMessage(Task task, TaskList tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"jordankanghm"},"content":"        int listSize \u003d tasks.getTasks().size();","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"jordankanghm"},"content":"        String message \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"jordankanghm"},"content":"                \" Got it. I\u0027ve added this task: \\n   \" +","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"jordankanghm"},"content":"                task.getTaskType() + task.getStatusIcon() + \" \" + task.name + task.getTimeInfo() + \"\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"jordankanghm"},"content":"                \" Now you have \" + listSize + \" tasks in the list.\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"jordankanghm"},"content":"                \"____________________________________________________________\";","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"jordankanghm"},"content":"        System.out.println(message);","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"jordankanghm"},"content":"     * Prints the message for when a task is deleted.","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"jordankanghm"},"content":"     * @param task The newly deleted task.","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"jordankanghm"},"content":"     * @param tasks The current accumulated tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"jordankanghm"},"content":"    public void printDeleteTaskMessage(Task task, TaskList tasks){","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"jordankanghm"},"content":"        int listSize \u003d tasks.getTasks().size();","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"jordankanghm"},"content":"        String message \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"jordankanghm"},"content":"                \" Noted. I\u0027ve removed this task: \\n   \" +","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"jordankanghm"},"content":"                task.getTaskType() + task.getStatusIcon() + \" \" + task.name + task.getTimeInfo() + \"\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"jordankanghm"},"content":"                \" Now you have \" + listSize + \" tasks in the list.\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"jordankanghm"},"content":"                \"____________________________________________________________\";","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"jordankanghm"},"content":"        System.out.println(message);","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"jordankanghm"},"content":"     * Prints the message at the end of the program.","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"jordankanghm"},"content":"    public void printExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"jordankanghm"},"content":"        String exitMessage \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"jordankanghm"},"content":"                \" Bye. Hope to see you again soon!\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"jordankanghm"},"content":"                \"____________________________________________________________\";","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"jordankanghm"},"content":"        System.out.println(exitMessage);","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"jordankanghm"},"content":"     * Prints the message when a task is marked.","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"jordankanghm"},"content":"     * @param task The task which has been marked.","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"jordankanghm"},"content":"    public void printMarkedTaskMessage(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"jordankanghm"},"content":"        String message \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"jordankanghm"},"content":"                \" Nice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"jordankanghm"},"content":"                \"   \" + task.getStatusIcon() + \" \" + task.name + task.getTimeInfo() + \"\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"jordankanghm"},"content":"                \"____________________________________________________________\";","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"jordankanghm"},"content":"        System.out.println(message);","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"jordankanghm"},"content":"     * Prints the message when a task is marked.","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"jordankanghm"},"content":"     * @param task The task which has been marked.","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"jordankanghm"},"content":"    public void printUnmarkedTaskMessage(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"jordankanghm"},"content":"        String message \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"jordankanghm"},"content":"                \" OK. I\u0027ve marked this task as not done yet:\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"jordankanghm"},"content":"                \"   \" + task.getStatusIcon() + \" \" + task.name + task.getTimeInfo() + \"\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"jordankanghm"},"content":"                \"____________________________________________________________\";","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"jordankanghm"},"content":"        System.out.println(message);","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"jordankanghm"},"content":"     * Prints the results matching the keyword given by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"jordankanghm"},"content":"     * @param results The ArrayList\u003cTask\u003e containing Tasks that match the keyword given.","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"jordankanghm"},"content":"    public void printFindResults(ArrayList\u003cTask\u003e results) {","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"jordankanghm"},"content":"        String message \u003d \"    ____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"jordankanghm"},"content":"                \"     Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"jordankanghm"},"content":"        for (int i \u003d 0; i \u003c results.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"jordankanghm"},"content":"            Task task \u003d results.get(i);","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"jordankanghm"},"content":"            message +\u003d \"     \" + (i+1) + \".\" + task.getTaskType() + task.getStatusIcon() + \" \" + task.name +","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"jordankanghm"},"content":"                    \" \" + task.getTimeInfo() + \"\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"jordankanghm"},"content":"        message +\u003d \"    ____________________________________________________________\";","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"jordankanghm"},"content":"        System.out.println(message);","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jordankanghm":144}},{"path":"src/test/java/seedu/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"import java.io.*;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the StorageTest class.","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":" * The StorageTest class contains unit tests for methods in the Storage class.","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"public class StorageTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"     * Tests the save method in Storage.","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"jordankanghm"},"content":"    public void save_normalTaskArrayList_success(){","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"jordankanghm"},"content":"        taskList.add(new ToDo(\"borrow books\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"        taskList.add(new Deadline(\"read books\", LocalDateTime.of(2023, 8, 23, 18, 00)));","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"jordankanghm"},"content":"        taskList.add(new Event(\"return books\", \"12/8/2023\", \"28/8/2023\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"jordankanghm"},"content":"        new Storage(\"./data/duke.txt\").save(taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"jordankanghm"},"content":"        String correctList \u003d \"1.[T][ ] borrow books \\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"jordankanghm"},"content":"                \"2.[D][ ] read books (by: August 23 2023, 6:00 PM)\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"jordankanghm"},"content":"                \"3.[E][ ] return books (from: 12/8/2023 to: 28/8/2023)\";","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"jordankanghm"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"jordankanghm"},"content":"            ObjectInputStream inputStream \u003d new ObjectInputStream(new FileInputStream(\"./data/duke.txt\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"jordankanghm"},"content":"            ArrayList\u003cTask\u003e loadedTasks \u003d (ArrayList\u003cTask\u003e) inputStream.readObject();","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"jordankanghm"},"content":"            String currentList \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"jordankanghm"},"content":"            for (int i \u003d 0; i \u003c loadedTasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"jordankanghm"},"content":"                currentList +\u003d i+1 + \".\" + loadedTasks.get(i).getTaskType() + loadedTasks.get(i).getStatusIcon() + \" \" + loadedTasks.get(i).name +","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"jordankanghm"},"content":"                                \" \" + loadedTasks.get(i).getTimeInfo();","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"jordankanghm"},"content":"                if (i !\u003d loadedTasks.size() - 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"jordankanghm"},"content":"                    currentList +\u003d \"\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"jordankanghm"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"jordankanghm"},"content":"            assertEquals(correctList, currentList);","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"jordankanghm"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"jordankanghm"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"jordankanghm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"jordankanghm"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"jordankanghm"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"jordankanghm"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"jordankanghm"},"content":"     * Tests the load method in Storage.","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"jordankanghm"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"jordankanghm"},"content":"    public void load_normalTaskArrayList_success(){","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"jordankanghm"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"jordankanghm"},"content":"        taskList.add(new ToDo(\"borrow books\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"jordankanghm"},"content":"        taskList.add(new Deadline(\"read books\", LocalDateTime.of(2023, 8, 23, 18, 00)));","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"jordankanghm"},"content":"        taskList.add(new Event(\"return books\", \"12/8/2023\", \"28/8/2023\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"jordankanghm"},"content":"        try (ObjectOutputStream outputStream \u003d new ObjectOutputStream(new FileOutputStream(\"./data/duke.txt\", false))) {","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"jordankanghm"},"content":"            outputStream.writeObject(taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"jordankanghm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"jordankanghm"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"jordankanghm"},"content":"        String correctList \u003d \"1.[T][ ] borrow books \\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"jordankanghm"},"content":"                \"2.[D][ ] read books (by: August 23 2023, 6:00 PM)\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"jordankanghm"},"content":"                \"3.[E][ ] return books (from: 12/8/2023 to: 28/8/2023)\";","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"jordankanghm"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"jordankanghm"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new Storage(\"./data/duke.txt\").load();","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"jordankanghm"},"content":"            String currentList \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"jordankanghm"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"jordankanghm"},"content":"                currentList +\u003d i+1 + \".\" + tasks.get(i).getTaskType() + tasks.get(i).getStatusIcon() + \" \" + tasks.get(i).name +","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"jordankanghm"},"content":"                        \" \" + tasks.get(i).getTimeInfo();","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"jordankanghm"},"content":"                if (i !\u003d tasks.size() - 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"jordankanghm"},"content":"                    currentList +\u003d \"\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"jordankanghm"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"jordankanghm"},"content":"            assertEquals(correctList, currentList);","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"jordankanghm"},"content":"        } catch (InvalidDataFormatException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"jordankanghm"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jordankanghm":94}},{"path":"src/test/java/seedu/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"import java.io.*;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the TaskListTest class.","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":" * The TaskListTest class contains unit tests for methods in the TaskList class.","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"public class TaskListTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"     * Tests the addTask method in TaskList.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"    public void addTask_normalTask_success() {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"jordankanghm"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"        taskList.addTask(new ToDo(\"borrow books\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"jordankanghm"},"content":"            ArrayList\u003cTask\u003e currentTasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"jordankanghm"},"content":"            ObjectInputStream inputStream \u003d new ObjectInputStream(new FileInputStream(\"./data/duke.txt\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"jordankanghm"},"content":"            currentTasks \u003d (ArrayList\u003cTask\u003e) inputStream.readObject();","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"jordankanghm"},"content":"            String correctList \u003d \"1.[T][ ] borrow books \";","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"jordankanghm"},"content":"            String currentList \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"jordankanghm"},"content":"            for (int i \u003d 0; i \u003c currentTasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"jordankanghm"},"content":"                currentList +\u003d i + 1 + \".\" + currentTasks.get(i).getTaskType() + currentTasks.get(i).getStatusIcon() + \" \" + currentTasks.get(i).name +","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"jordankanghm"},"content":"                        \" \" + currentTasks.get(i).getTimeInfo();","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"jordankanghm"},"content":"            assertEquals(correctList, currentList);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"jordankanghm"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"jordankanghm"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"jordankanghm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"jordankanghm"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"jordankanghm"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"jordankanghm"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"jordankanghm"},"content":"     * Tests the markOrDeleteTask method in TaskList.","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"jordankanghm"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"jordankanghm"},"content":"    public void markOrDeleteTask_markOne_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"jordankanghm"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"jordankanghm"},"content":"        tasks.add(new ToDo(\"borrow books\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"jordankanghm"},"content":"        TaskList taskList \u003d new TaskList(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"jordankanghm"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"jordankanghm"},"content":"            taskList.markOrDeleteTask(0, \"mark\");","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"jordankanghm"},"content":"            ArrayList\u003cTask\u003e currentTasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"jordankanghm"},"content":"            ObjectInputStream inputStream \u003d new ObjectInputStream(new FileInputStream(\"./data/duke.txt\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"jordankanghm"},"content":"            currentTasks \u003d (ArrayList\u003cTask\u003e) inputStream.readObject();","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"jordankanghm"},"content":"            String correctList \u003d \"1.[T][X] borrow books \";","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"jordankanghm"},"content":"            String currentList \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"jordankanghm"},"content":"            for (int i \u003d 0; i \u003c currentTasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"jordankanghm"},"content":"                currentList +\u003d i + 1 + \".\" + currentTasks.get(i).getTaskType() + currentTasks.get(i).getStatusIcon() + \" \" + currentTasks.get(i).name +","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"jordankanghm"},"content":"                        \" \" + currentTasks.get(i).getTimeInfo();","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"jordankanghm"},"content":"            assertEquals(correctList, currentList);","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"jordankanghm"},"content":"        } catch (InvalidDataFormatException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"jordankanghm"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"jordankanghm"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"jordankanghm"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"jordankanghm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"jordankanghm"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"jordankanghm"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"jordankanghm"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jordankanghm":81}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jordankanghm":5}},{"path":"data/duke.txt","fileType":"txt","isBinary":true,"lines":[],"authorContributionMap":{"jordankanghm":0}}]
