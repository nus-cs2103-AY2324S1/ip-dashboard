[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"jordankanghm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"jordankanghm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"jordankanghm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"jordankanghm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"jordankanghm"},"content":"    mainClass.set(\"seedu.duke.Launcher\")","lastModifiedDate":"2023-09-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"jordankanghm"},"content":"    archiveFileName \u003d \"duke.jar\"","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"jordankanghm"},"content":"    enableAssertions \u003d true;","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jordankanghm":17,"-":41}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"Dookie is a chatbot that helps you **keep track of your tasks** and **update them seamlessly**.","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"View all tasks: `list`  ","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"Adding a task with no deadline: `todo`  ","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"Adding a task with a deadline: `deadline`  ","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"Adding a task with a duration: `event`  ","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"Mark a task as completed: `mark`  ","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"Mark a task as not completed: `unmark`  ","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"Delete a task: `delete`  ","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"Find a task by a keyword: `find`  ","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"Change the deadline/duration of a task: `postpone`  ","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"Exit the chatbot: `bye`","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"## Quick Start","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"1. Ensure you have Java 11 or above installed in your Computer.","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"2. Download the latest addressbook.jar from [here](https://github.com/jordankanghm/ip/releases).","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"3. Copy the file to the folder you want to use as the home folder for your AddressBook.","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"4. Open a command terminal, cd into the folder you put the jar file in, and use the java -jar addressbook.jar command to run the application.","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"Refer to the Features below for details of each command.","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"jordankanghm"},"content":"### View all tasks: `list`","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"jordankanghm"},"content":"Displays the accumulated tasks.  ","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"jordankanghm"},"content":"Format: `list`","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"jordankanghm"},"content":"### Adding a task with no deadline: `todo`","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"jordankanghm"},"content":"Adds a ToDo task into the current list of tasks.   ","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"jordankanghm"},"content":"Format: `todo TASKNAME`  ","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"jordankanghm"},"content":"* If there is no TASKNAME, no task will be added. ","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"jordankanghm"},"content":"Examples:  ","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"jordankanghm"},"content":"* `todo read books`","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"jordankanghm"},"content":"* `todo return books`","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"jordankanghm"},"content":"### Adding a task with a deadline: `deadline`","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"jordankanghm"},"content":"Adds a Deadline task into the current list of tasks.   ","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"jordankanghm"},"content":"Format: `deadline TASKNAME /by DD-MM-YYYY TTTT`","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"jordankanghm"},"content":"* The task will not be successfully added in the following cases.","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"jordankanghm"},"content":"  * There is nothing after the deadline command.","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"jordankanghm"},"content":"  * There is nothing after the TASKNAME.","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"jordankanghm"},"content":"  * /by is not specified explicitly.","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"jordankanghm"},"content":"  * The date provided is not in the given format.   ","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"jordankanghm"},"content":"Examples:","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"jordankanghm"},"content":"* `deadline return books /by 23-9-2023 1800`","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"jordankanghm"},"content":"  `deadline read books /by 24-9-2023 1900`","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"jordankanghm"},"content":"### Adding a task with a duration: `event`","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"jordankanghm"},"content":"Adds an Event task into the current list of tasks.   ","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"jordankanghm"},"content":"Format: `event TASKNAME /from DD-MM-YYYY TTTT /to DD-MM-YYYY TTTT`","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"jordankanghm"},"content":"* The task will not be successfully added in the following cases.","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"jordankanghm"},"content":"  * There is nothing after the event command.","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"jordankanghm"},"content":"  * There is nothing after the TASKNAME.","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"jordankanghm"},"content":"  * /from or /to are not specified explicitly","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"jordankanghm"},"content":"  * The dates provided are not in the given format ","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":62,"author":{"gitId":"jordankanghm"},"content":"Examples:","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"jordankanghm"},"content":"* `event read books /from 23-9-2023 1800 /to 24-9-2023 1900`","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"jordankanghm"},"content":"* `event return books /from 24-9-2023 1900 /to 25-9-2023 2000`","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"jordankanghm"},"content":"### Mark a task as completed: `mark`","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"jordankanghm"},"content":"Marks a task as completed.   ","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"jordankanghm"},"content":"Format:  `mark INTEGER`","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"jordankanghm"},"content":"* The task will not be marked successfully in the following cases.","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"jordankanghm"},"content":"  * There is nothing after the mark command.","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"jordankanghm"},"content":"  * There is no task number corresponding to the given integer.","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"jordankanghm"},"content":"Examples:","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"jordankanghm"},"content":"* `mark 1`","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"jordankanghm"},"content":"### Mark a task as not completed: `unmark`","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"jordankanghm"},"content":"Marks a task as not completed.   ","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"jordankanghm"},"content":"Format:  `unmark INTEGER`","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"jordankanghm"},"content":"* The task will not be unmarked successfully in the following cases.","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"jordankanghm"},"content":"    * There is nothing after the unmark command.","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"jordankanghm"},"content":"    * There is no task number corresponding to the given integer.","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"jordankanghm"},"content":"Examples:","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"jordankanghm"},"content":"* `unmark 1`","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":86,"author":{"gitId":"jordankanghm"},"content":"### Delete a task: `delete`","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"jordankanghm"},"content":"Deletes a task.  ","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"jordankanghm"},"content":"Format:  `delete INTEGER`","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"jordankanghm"},"content":"* The task will not be deleted successfully in the following cases.","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"jordankanghm"},"content":"    * There is nothing after the delete command","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"jordankanghm"},"content":"    * There is no task number corresponding to the given integer.","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"jordankanghm"},"content":"Examples:","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"jordankanghm"},"content":"* `delete 1`","lastModifiedDate":"2023-09-20"},{"lineNumber":95,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":96,"author":{"gitId":"jordankanghm"},"content":"### Find a task by a keyword: `find`","lastModifiedDate":"2023-09-20"},{"lineNumber":97,"author":{"gitId":"jordankanghm"},"content":"Finds all tasks that have the keyword argument within it.   ","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"jordankanghm"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2023-09-20"},{"lineNumber":99,"author":{"gitId":"jordankanghm"},"content":"* If there is nothing after the find command, no tasks will be returned.","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"jordankanghm"},"content":"Examples:","lastModifiedDate":"2023-09-20"},{"lineNumber":102,"author":{"gitId":"jordankanghm"},"content":"* `find borrow`","lastModifiedDate":"2023-09-20"},{"lineNumber":103,"author":{"gitId":"jordankanghm"},"content":"* `find return`","lastModifiedDate":"2023-09-20"},{"lineNumber":104,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":105,"author":{"gitId":"jordankanghm"},"content":"### Change the deadline/duration of a task: `postpone`","lastModifiedDate":"2023-09-20"},{"lineNumber":106,"author":{"gitId":"jordankanghm"},"content":"Changes the deadline or duration based on the user\u0027s input.   ","lastModifiedDate":"2023-09-20"},{"lineNumber":107,"author":{"gitId":"jordankanghm"},"content":"Format: `postpone INTEGER DEADLINE/DURATION`","lastModifiedDate":"2023-09-20"},{"lineNumber":108,"author":{"gitId":"jordankanghm"},"content":"* The deadline argument must follow the same format as the /by specifier when creating a Deadline task.","lastModifiedDate":"2023-09-20"},{"lineNumber":109,"author":{"gitId":"jordankanghm"},"content":"* The duration argument must follow the same format as the /from and /to specifiers when creating an Event task.","lastModifiedDate":"2023-09-20"},{"lineNumber":110,"author":{"gitId":"jordankanghm"},"content":"* The deadline/duration arguments must comply with the task at index INTEGER specified.","lastModifiedDate":"2023-09-20"},{"lineNumber":111,"author":{"gitId":"jordankanghm"},"content":"* If any of the arguments after the postpone command are missing or in the wrong format, the task will not be postponed.","lastModifiedDate":"2023-09-20"},{"lineNumber":112,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":113,"author":{"gitId":"jordankanghm"},"content":"Examples:","lastModifiedDate":"2023-09-20"},{"lineNumber":114,"author":{"gitId":"jordankanghm"},"content":"* `postpone 1 /by 23-9-2023 1800`","lastModifiedDate":"2023-09-20"},{"lineNumber":115,"author":{"gitId":"jordankanghm"},"content":"* `postpone 2 /from 23-9-2023 1800 /to 24-9-2023 1900`","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"jordankanghm":100,"-":15}},{"path":"src/main/java/seedu/dookie/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.dookie;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the possible user commands.","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"public class Command {","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"jordankanghm":7}},{"path":"src/main/java/seedu/dookie/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.dookie;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"import java.util.Locale;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the Deadline class.","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":" * Deadlines are tasks with a given deadline.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"    protected String type \u003d \"D\";","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"    protected LocalDateTime dateAndTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"     * Creates a new Deadline instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"     * @param name The name of the task given by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"     * @param dateAndTime The deadline of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"jordankanghm"},"content":"    public Deadline(String name, LocalDateTime dateAndTime) {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"        super(name);","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"jordankanghm"},"content":"        this.dateAndTime \u003d dateAndTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"jordankanghm"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"jordankanghm"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"jordankanghm"},"content":"        return \"[\" + this.type + \"]\";","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"jordankanghm"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"jordankanghm"},"content":"    public String getTimeInfo() {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"jordankanghm"},"content":"        // Format month in words","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"jordankanghm"},"content":"        DateTimeFormatter monthFormatter \u003d DateTimeFormatter.ofPattern(\"MMMM\", Locale.ENGLISH);","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"jordankanghm"},"content":"        String monthInWords \u003d this.dateAndTime.format(monthFormatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"jordankanghm"},"content":"        // Format day of the month","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"jordankanghm"},"content":"        int dayOfMonth \u003d this.dateAndTime.getDayOfMonth();","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"jordankanghm"},"content":"        // Format year","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"jordankanghm"},"content":"        int year \u003d this.dateAndTime.getYear();","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"jordankanghm"},"content":"        // Format the time in AM/PM","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"jordankanghm"},"content":"        DateTimeFormatter amPmFormatter \u003d DateTimeFormatter.ofPattern(\"h:mm a\");","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"jordankanghm"},"content":"        LocalTime time \u003d this.dateAndTime.toLocalTime();","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"jordankanghm"},"content":"        String formattedTime \u003d time.format(amPmFormatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"jordankanghm"},"content":"        return \"(by: \" + monthInWords + \" \" + dayOfMonth + \" \" + year + \", \" + formattedTime + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"jordankanghm"},"content":"     * Changes the deadline of the Deadline.","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"jordankanghm"},"content":"     * @param dateTime The new deadline.","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"jordankanghm"},"content":"    public void changeDeadline(LocalDateTime dateTime) {","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"jordankanghm"},"content":"        this.dateAndTime \u003d dateTime;","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jordankanghm":58}},{"path":"src/main/java/seedu/dookie/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.dookie;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the Deadline command.","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"    private Parser parser;","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"     * Creates a new DeadlineCommand instance.","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"     * @param parser The parser being used.","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"     * @param tasks The accumulated tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"     * @param ui The Ui being used.","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"    public DeadlineCommand(Parser parser, TaskList tasks, Ui ui) {","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"jordankanghm"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"jordankanghm"},"content":"     * Executes the code corresponding to a Deadline command.","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"jordankanghm"},"content":"     * @param cmd The user input.","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"jordankanghm"},"content":"     * @return A string containing the add task message.","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"jordankanghm"},"content":"     * @throws InvalidDescriptionException When there is only one word in the user input.","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"jordankanghm"},"content":"     * @throws NoDeadlineException When there is no deadline specified.","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"jordankanghm"},"content":"     * @throws InvalidDeadlineException When the deadline specified is not in the correct format.","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"jordankanghm"},"content":"    public String execute(String cmd) throws InvalidDescriptionException,","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"jordankanghm"},"content":"            NoDeadlineException,","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"jordankanghm"},"content":"            InvalidDeadlineException {","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"jordankanghm"},"content":"        if (parser.descriptionIsEmpty(cmd)) {","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"jordankanghm"},"content":"            throw new InvalidDescriptionException(\"deadline\");","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"jordankanghm"},"content":"        String taskWithDeadline \u003d cmd.split(\" \", 2)[1];","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"jordankanghm"},"content":"        if (parser.hasNoDeadline(taskWithDeadline)) {","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"jordankanghm"},"content":"            throw new NoDeadlineException();","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"jordankanghm"},"content":"        String taskName \u003d taskWithDeadline.split(\"/\", 2)[0];","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"jordankanghm"},"content":"        String deadlineDescription \u003d taskWithDeadline.split(\"/\", 2)[1];","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"jordankanghm"},"content":"        LocalDateTime dateTime \u003d parser.checkDeadline(deadlineDescription);","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"jordankanghm"},"content":"        if (dateTime \u003d\u003d null) {","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"jordankanghm"},"content":"            throw new InvalidDeadlineException(deadlineDescription);","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"jordankanghm"},"content":"        Task deadline \u003d new Deadline(taskName, dateTime);","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"jordankanghm"},"content":"        tasks.addTask(deadline);","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"jordankanghm"},"content":"        return ui.getAddTaskMessage(deadline, tasks);","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"jordankanghm":59}},{"path":"src/main/java/seedu/dookie/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.dookie;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the Delete Command.","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"    private Parser parser;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"     * Creates a new DeleteCommand instance.","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"     * @param parser The parser being used.","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"     * @param tasks The accumulated tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"     * @param ui The Ui being used.","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"    public DeleteCommand(Parser parser, TaskList tasks, Ui ui) {","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"     * Executes the code corresponding to a delete command.","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"jordankanghm"},"content":"     * @param cmd The user input.","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"jordankanghm"},"content":"     * @return A string containing the delete task message.","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"jordankanghm"},"content":"     * @throws InvalidDescriptionException When there is only one word in the user input.","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"jordankanghm"},"content":"     * @throws InvalidIntegerException When the argument specified is not an integer.","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"jordankanghm"},"content":"     * @throws InvalidTaskNumberException When the integer specified is not a task number.","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"jordankanghm"},"content":"     * @throws InvalidDataFormatException When the format dookie.txt file is incorrect.","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"jordankanghm"},"content":"    public String execute(String cmd) throws InvalidDescriptionException,","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"jordankanghm"},"content":"            InvalidIntegerException,","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"jordankanghm"},"content":"            InvalidTaskNumberException,","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"jordankanghm"},"content":"            InvalidDataFormatException {","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"jordankanghm"},"content":"        if (parser.descriptionIsEmpty(cmd)) {","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"jordankanghm"},"content":"            throw new InvalidDescriptionException(\"delete\");","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"jordankanghm"},"content":"        int taskNumber \u003d -1;","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"jordankanghm"},"content":"        String integer \u003d cmd.split(\" \", 2)[1];","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"jordankanghm"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"jordankanghm"},"content":"            taskNumber \u003d Integer.parseInt(integer);","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"jordankanghm"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"jordankanghm"},"content":"            throw new InvalidIntegerException();","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"jordankanghm"},"content":"        if (!parser.isValidTaskNumber(taskNumber)) {","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"jordankanghm"},"content":"            throw new InvalidTaskNumberException(taskNumber);","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"jordankanghm"},"content":"        Task task \u003d tasks.updateTasks(taskNumber - 1, \"DELETE\");","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"jordankanghm"},"content":"        return ui.getDeleteTaskMessage(task, tasks);","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"jordankanghm":58}},{"path":"src/main/java/seedu/dookie/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.dookie;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"jordankanghm"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"jordankanghm"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"jordankanghm"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"jordankanghm"},"content":"        dialog \u003d l;","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"jordankanghm"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"jordankanghm"},"content":"        dialog.setWrapText(true);","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"jordankanghm"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"jordankanghm"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"jordankanghm"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"jordankanghm"},"content":"        this.getChildren().addAll(dialog, displayPicture);","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"jordankanghm"},"content":"     * Creates a new dialog box with the text and image passed.","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"jordankanghm"},"content":"     * @param text The text to be shown.","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"jordankanghm"},"content":"     * @param img The image associated with either Dookie or the user.","lastModifiedDate":"2023-09-16"},{"lineNumber":44,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"jordankanghm"},"content":"    public DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"jordankanghm"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"jordankanghm"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"jordankanghm"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"jordankanghm"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"jordankanghm"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"jordankanghm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"jordankanghm"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"jordankanghm"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"jordankanghm"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"jordankanghm"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"jordankanghm"},"content":"    private void flip() {","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"jordankanghm"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"jordankanghm"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"jordankanghm"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"jordankanghm"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"jordankanghm"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"jordankanghm"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"jordankanghm"},"content":"    public static DialogBox getDookieDialog(String text, Image img) {","lastModifiedDate":"2023-09-16"},{"lineNumber":74,"author":{"gitId":"jordankanghm"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"jordankanghm"},"content":"        db.flip();","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"jordankanghm"},"content":"        return db;","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"jordankanghm":78}},{"path":"src/main/java/seedu/dookie/Dookie.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.dookie;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the Dookie class","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":" * Dookie is the chatbot that runs the program.","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"public class Dookie {","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"    private Parser parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"     * Creates a new Dookie instance.","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"    public Dookie() {","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"        storage \u003d new Storage(\"./data/dookie.txt\");","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"jordankanghm"},"content":"            parser \u003d new Parser(storage, tasks, ui);","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"        } catch (DookieException e) {","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"jordankanghm"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"jordankanghm"},"content":"     * Returns a string containing Dookie\u0027s response to the user input.","lastModifiedDate":"2023-09-16"},{"lineNumber":31,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"jordankanghm"},"content":"     * @param input The command given by the user.","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"jordankanghm"},"content":"     * @return The result of parsing that command.","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"jordankanghm"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"jordankanghm"},"content":"        return parser.parse(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":39,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jordankanghm":39}},{"path":"src/main/java/seedu/dookie/DookieException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.dookie;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the exceptions that are related to using the Dookie Chatbot.","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"public class DookieException extends Exception {","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"     * Creates a new DookieException instance.","lastModifiedDate":"2023-09-16"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-09-16"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"     * @param message The message associated with the DookieException.","lastModifiedDate":"2023-09-16"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"    public DookieException(String message) {","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"        super(message);","lastModifiedDate":"2023-09-16"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"jordankanghm":15}},{"path":"src/main/java/seedu/dookie/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.dookie;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"import java.util.Locale;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the Event class.","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":" * An event is a Task with a start and end date.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"    protected String type \u003d \"E\";","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"     * Creates a new Event instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"     * @param name The name of the event given by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"     * @param start The start date of the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"jordankanghm"},"content":"     * @param end The end date of the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"jordankanghm"},"content":"    public Event(String name, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"        super(name);","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"jordankanghm"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"jordankanghm"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"jordankanghm"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"jordankanghm"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"jordankanghm"},"content":"        return \"[\" + this.type + \"]\";","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"jordankanghm"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"jordankanghm"},"content":"    public String getTimeInfo() {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"jordankanghm"},"content":"        // Format month in words","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"jordankanghm"},"content":"        DateTimeFormatter monthFormatter \u003d DateTimeFormatter.ofPattern(\"MMMM\", Locale.ENGLISH);","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"jordankanghm"},"content":"        String startMonthInWords \u003d this.start.format(monthFormatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"jordankanghm"},"content":"        String endMonthInWords \u003d this.end.format(monthFormatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"jordankanghm"},"content":"        // Format day of the month","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"jordankanghm"},"content":"        int startDayOfMonth \u003d this.start.getDayOfMonth();","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"jordankanghm"},"content":"        int endDayOfMonth \u003d this.end.getDayOfMonth();","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"jordankanghm"},"content":"        // Format year","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"jordankanghm"},"content":"        int startYear \u003d this.start.getYear();","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"jordankanghm"},"content":"        int endYear \u003d this.end.getYear();","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"jordankanghm"},"content":"        // Format the time in AM/PM","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"jordankanghm"},"content":"        DateTimeFormatter amPmFormatter \u003d DateTimeFormatter.ofPattern(\"h:mm a\");","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"jordankanghm"},"content":"        LocalTime startTime \u003d this.start.toLocalTime();","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"jordankanghm"},"content":"        String formattedStartTime \u003d startTime.format(amPmFormatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"jordankanghm"},"content":"        LocalTime endTime \u003d this.end.toLocalTime();","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"jordankanghm"},"content":"        String formattedEndTime \u003d endTime.format(amPmFormatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"jordankanghm"},"content":"        return \"(from: \" + startMonthInWords + \" \" + startDayOfMonth + \" \" + startYear + \", \" + formattedStartTime + \" \" +","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"jordankanghm"},"content":"                \"to: \" + endMonthInWords + \" \" + endDayOfMonth + \" \" + endYear + \", \" + formattedEndTime + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"jordankanghm"},"content":"     * Changes the duration of the Event.","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"jordankanghm"},"content":"     * @param start The new start date and time.","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"jordankanghm"},"content":"     * @param end The new end date and time.","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"jordankanghm"},"content":"    public void changeDuration(LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"jordankanghm"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-09-12"},{"lineNumber":69,"author":{"gitId":"jordankanghm"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-09-12"},{"lineNumber":70,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":71,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jordankanghm":71}},{"path":"src/main/java/seedu/dookie/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.dookie;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the Event Command.","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"public class EventCommand extends Command{","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"    private Parser parser;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"     * Creates a new EventCommand instance.","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"     * @param parser The parser being used.","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"     * @param tasks The accumulated tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"     * @param ui The Ui being used.","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"    public EventCommand(Parser parser, TaskList tasks, Ui ui) {","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"jordankanghm"},"content":"     * Executes the code corresponding to a Deadline command.","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"jordankanghm"},"content":"     * @param cmd The user input.","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"jordankanghm"},"content":"     * @return A string containing the add task message.","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"jordankanghm"},"content":"     * @throws InvalidDescriptionException When there is only one word in the user input.","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"jordankanghm"},"content":"     * @throws IncompleteDurationException When the duration is not correctly specified.","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"jordankanghm"},"content":"    public String execute(String cmd) throws InvalidDescriptionException,","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"jordankanghm"},"content":"            IncompleteDurationException {","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"jordankanghm"},"content":"        if (parser.descriptionIsEmpty(cmd)) {","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"jordankanghm"},"content":"            throw new InvalidDescriptionException(\"event\");","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"jordankanghm"},"content":"        String taskWithDuration \u003d cmd.split(\" \", 2)[1];","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"jordankanghm"},"content":"        String[] time \u003d taskWithDuration.split(\"/\");","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"jordankanghm"},"content":"        // Check if there is a valid duration","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"jordankanghm"},"content":"        if (time.length !\u003d 3) {","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"jordankanghm"},"content":"            throw new IncompleteDurationException();","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"jordankanghm"},"content":"        String taskName \u003d time[0];","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"jordankanghm"},"content":"        String starting \u003d time[1];","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"jordankanghm"},"content":"        String ending \u003d time[2];","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"jordankanghm"},"content":"        // Assumes that starting and ending both start with \"from\" and \"to\" respectively","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"jordankanghm"},"content":"        Task event \u003d new Event(taskName, parser.checkStarting(starting), parser.checkEnding(ending));","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"jordankanghm"},"content":"        tasks.addTask(event);","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"jordankanghm"},"content":"        return ui.getAddTaskMessage(event, tasks);","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"jordankanghm":54}},{"path":"src/main/java/seedu/dookie/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.dookie;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":" * Encapsultes the Exit Command.","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"     * Creates a new ExitCommand instance.","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"     * @param ui The Ui being used.","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"    public ExitCommand(Ui ui) {","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"     * Returns a string containing the exit message.","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"     * @return A string containing the exit message.","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"    public String execute() {","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"jordankanghm"},"content":"        return ui.getExitMessage();","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"jordankanghm":26}},{"path":"src/main/java/seedu/dookie/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.dookie;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the Find Command.","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"    private Parser parser;","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"     * Creates a new FindCommand instance.","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"     * @param parser The parser being used.","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"     * @param tasks The accumulated tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"     * @param ui The Ui being used.","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"    public FindCommand(Parser parser, TaskList tasks, Ui ui) {","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"jordankanghm"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"jordankanghm"},"content":"     * Executes the code corresponding to a find command.","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"jordankanghm"},"content":"     * @param cmd The user input.","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"jordankanghm"},"content":"     * @return A string containing the found results.","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"jordankanghm"},"content":"     * @throws InvalidDescriptionException When there is only one word in the user input.","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"jordankanghm"},"content":"    public String execute(String cmd) throws InvalidDescriptionException {","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"jordankanghm"},"content":"        if (parser.descriptionIsEmpty(cmd)) {","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"jordankanghm"},"content":"            throw new InvalidDescriptionException(\"find\");","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"jordankanghm"},"content":"        String keyword \u003d cmd.split(\" \", 2)[1];","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"jordankanghm"},"content":"        ArrayList\u003cTask\u003e results \u003d tasks.find(keyword);","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"jordankanghm"},"content":"        return ui.getFindResults(results);","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"jordankanghm":42}},{"path":"src/main/java/seedu/dookie/IncompleteDurationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.dookie;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the exception where event duration details are not inputted completely.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":" class IncompleteDurationException extends DookieException {","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"    public IncompleteDurationException() {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"        super(\"\\u2639 OOPS!!! Duration is not specified correctly.\\n\" +","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"                \"Please input the duration in the following format:\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"                \"/from DD-MM-YYYY TTTT /to DD-MM-YYYY TTTT\");","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jordankanghm":12}},{"path":"src/main/java/seedu/dookie/InvalidDataFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.dookie;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the exception where the saved data in dookie.txt is not formatted correctly.","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"public class InvalidDataFormatException extends DookieException{","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"     * Creates an InvalidDataFormatException.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"    public InvalidDataFormatException() {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"        super(\"\\u2639 OOPS!!! The saved data format is invalid!\");","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jordankanghm":13}},{"path":"src/main/java/seedu/dookie/InvalidDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.dookie;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the exception where the deadline inputted does not contain a valid dead and/or time.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"public class InvalidDeadlineException extends DookieException {","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"     * Creates a new InvalidDeadlineException instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"     * @param deadline The deadline given by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"    public InvalidDeadlineException(String deadline) {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"        super(\"\\u2639 OOPS!!! \" + deadline + \" is not a valid deadline.\\n\" +","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"                \"Please input the deadline in the following format:\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"                \"/DD-MM-YYYY TTTT\");","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jordankanghm":17}},{"path":"src/main/java/seedu/dookie/InvalidDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.dookie;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the exception where the name of the task inputted is not specified.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"public class InvalidDescriptionException extends DookieException {","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"     * Creates an InvalidDescriptionException.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"     * @param taskType The type of task given by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"    public InvalidDescriptionException(String taskType) {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"        super(\"\\u2639 OOPS!!! The description of a \" + taskType + \" cannot be empty.\");","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jordankanghm":15}},{"path":"src/main/java/seedu/dookie/InvalidDurationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.dookie;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the exception where the event start and end dates are not correct dates.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"public class InvalidDurationException extends DookieException {","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"     * Creates an InvalidDurationException.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"     * @param duration The duration given by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"    public InvalidDurationException(String duration) {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"        super(\"\\u2639 OOPS!!! \" + duration + \" is not a valid duration.\\n\" +","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"                \"Please input the duration in the following format:\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"                \"/from DD-MM-YYYY TTTT /to DD-MM-YYYY TTTT\");","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jordankanghm":17}},{"path":"src/main/java/seedu/dookie/InvalidIntegerException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.dookie;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the exception where the string that follows user\u0027s mark/delete operations is not","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":" * an integer.","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"public class InvalidIntegerException extends DookieException {","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"     * Creates an InvalidIntegerException.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"    public InvalidIntegerException() {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"        super(\"\\u2639 OOPS!!! There is no such task.\\n\" +","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"                \" Please input an integer.\");","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jordankanghm":15}},{"path":"src/main/java/seedu/dookie/InvalidTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.dookie;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the exception where there is no such task in the task list from the","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":" * integer inputted by the user in mark/delete operations.","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"public class InvalidTaskNumberException extends DookieException {","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"     * Creates an InvalidTaskNumberException.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"     * @param number The number given by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"    public InvalidTaskNumberException(int number) {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"        super(\"\\u2639 OOPS!!! \" + number + \" is not a valid task number.\");","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jordankanghm":16}},{"path":"src/main/java/seedu/dookie/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.dookie;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"public class Launcher {","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"jordankanghm":12}},{"path":"src/main/java/seedu/dookie/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.dookie;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the List Command.","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"     * Creates a new ListCommand instance.","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"     * @param tasks The accumulated tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"     * @param ui The Ui being used.","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"    public ListCommand(TaskList tasks, Ui ui) {","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"jordankanghm"},"content":"     * Returns a string containing the current tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"jordankanghm"},"content":"     * @return A string containing the current tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"jordankanghm"},"content":"    public String execute() {","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"jordankanghm"},"content":"        return ui.getListItemsString(tasks);","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"jordankanghm":29}},{"path":"src/main/java/seedu/dookie/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.dookie;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":" * A GUI for Dookie using FXML.","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"    private Dookie dookie \u003d new Dookie();","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"jordankanghm"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"jordankanghm"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"jordankanghm"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"jordankanghm"},"content":"            stage.setTitle(\"Dookie\");","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"jordankanghm"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDookie(dookie);","lastModifiedDate":"2023-09-16"},{"lineNumber":29,"author":{"gitId":"jordankanghm"},"content":"            stage.show();","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"jordankanghm"},"content":"            // Display Dookie\u0027s welcome message in the GUI","lastModifiedDate":"2023-09-16"},{"lineNumber":32,"author":{"gitId":"jordankanghm"},"content":"            Label welcomeLabel \u003d new Label(\"Hello! I\u0027m Dookie.\\n\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"jordankanghm"},"content":"                    \"What can I do for you?\");","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"jordankanghm"},"content":"            Image dookieImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDookie.png\"));","lastModifiedDate":"2023-09-16"},{"lineNumber":35,"author":{"gitId":"jordankanghm"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().getDialogContainer().getChildren().add(DialogBox.getDookieDialog(welcomeLabel.getText(), dookieImage));","lastModifiedDate":"2023-09-16"},{"lineNumber":36,"author":{"gitId":"jordankanghm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"jordankanghm"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"jordankanghm":40}},{"path":"src/main/java/seedu/dookie/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.dookie;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"jordankanghm"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"    private Dookie dookie;","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"jordankanghm"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"jordankanghm"},"content":"    private Image dookieImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDookie.png\"));","lastModifiedDate":"2023-09-16"},{"lineNumber":29,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"jordankanghm"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"jordankanghm"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"jordankanghm"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"jordankanghm"},"content":"    public void setDookie(Dookie d) {","lastModifiedDate":"2023-09-16"},{"lineNumber":36,"author":{"gitId":"jordankanghm"},"content":"        dookie \u003d d;","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"jordankanghm"},"content":"    public VBox getDialogContainer() {","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"jordankanghm"},"content":"        return this.dialogContainer;","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"jordankanghm"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Dookie\u0027s reply and then appends them to","lastModifiedDate":"2023-09-16"},{"lineNumber":45,"author":{"gitId":"jordankanghm"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"jordankanghm"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"jordankanghm"},"content":"    private void handleUserInput() { // This method is called whenever a query is sent.","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"jordankanghm"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"jordankanghm"},"content":"        // Get response based on Dookie","lastModifiedDate":"2023-09-16"},{"lineNumber":51,"author":{"gitId":"jordankanghm"},"content":"        String response \u003d dookie.getResponse(input);","lastModifiedDate":"2023-09-15"},{"lineNumber":52,"author":{"gitId":"jordankanghm"},"content":"        appendDialog(input, response);","lastModifiedDate":"2023-09-11"},{"lineNumber":53,"author":{"gitId":"jordankanghm"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-11"},{"lineNumber":54,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":55,"author":{"gitId":"jordankanghm"},"content":"        exitIfBye(input);","lastModifiedDate":"2023-09-11"},{"lineNumber":56,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":57,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":58,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":59,"author":{"gitId":"jordankanghm"},"content":"     * Creates a DialogBox for the user and Dookie and appends them to the dialogContainer.","lastModifiedDate":"2023-09-16"},{"lineNumber":60,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":61,"author":{"gitId":"jordankanghm"},"content":"     * @param userText The input from the user.","lastModifiedDate":"2023-09-11"},{"lineNumber":62,"author":{"gitId":"jordankanghm"},"content":"     * @param dookieResponse The response from Dookie","lastModifiedDate":"2023-09-16"},{"lineNumber":63,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":64,"author":{"gitId":"jordankanghm"},"content":"    private void appendDialog(String userText, String dookieResponse) {","lastModifiedDate":"2023-09-16"},{"lineNumber":65,"author":{"gitId":"jordankanghm"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"jordankanghm"},"content":"                DialogBox.getUserDialog(userText, userImage),","lastModifiedDate":"2023-09-11"},{"lineNumber":67,"author":{"gitId":"jordankanghm"},"content":"                DialogBox.getDookieDialog(dookieResponse, dookieImage)","lastModifiedDate":"2023-09-16"},{"lineNumber":68,"author":{"gitId":"jordankanghm"},"content":"        );","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":70,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":72,"author":{"gitId":"jordankanghm"},"content":"     * Executes the exit animation if the user input is \"bye\".","lastModifiedDate":"2023-09-11"},{"lineNumber":73,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":74,"author":{"gitId":"jordankanghm"},"content":"     * @param input The user input","lastModifiedDate":"2023-09-11"},{"lineNumber":75,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":76,"author":{"gitId":"jordankanghm"},"content":"    private void exitIfBye(String input) {","lastModifiedDate":"2023-09-11"},{"lineNumber":77,"author":{"gitId":"jordankanghm"},"content":"        // Check if the user input is \"bye\"","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"jordankanghm"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"jordankanghm"},"content":"            // Create a PauseTransition to delay the exit","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"jordankanghm"},"content":"            PauseTransition pause \u003d new PauseTransition(Duration.seconds(0.5)); // Delay for 0.5 seconds","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"jordankanghm"},"content":"            // Set the action to be performed after the delay","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"jordankanghm"},"content":"            pause.setOnFinished(event -\u003e {","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"jordankanghm"},"content":"                Platform.exit(); // Exit the application after the delay","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"jordankanghm"},"content":"            });","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":87,"author":{"gitId":"jordankanghm"},"content":"            // Start the pause transition","lastModifiedDate":"2023-09-06"},{"lineNumber":88,"author":{"gitId":"jordankanghm"},"content":"            pause.play();","lastModifiedDate":"2023-09-06"},{"lineNumber":89,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":90,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":91,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"jordankanghm":91}},{"path":"src/main/java/seedu/dookie/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.dookie;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the Mark Command.","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"    private Parser parser;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"     * Creates a new MarkCommand instance.","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"     * @param parser The parser being used.","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"     * @param tasks The accumulated tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"     * @param ui The Ui being used.","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"    public MarkCommand(Parser parser, TaskList tasks, Ui ui) {","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"     * Executes the code corresponding to a mark command.","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"jordankanghm"},"content":"     * @param cmd The user input.","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"jordankanghm"},"content":"     * @return A string containing the mark task message.","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"jordankanghm"},"content":"     * @throws InvalidDescriptionException When there is only one word in the user input.","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"jordankanghm"},"content":"     * @throws InvalidIntegerException When the argument specified is not an integer.","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"jordankanghm"},"content":"     * @throws InvalidTaskNumberException When the integer specified is not a task number.","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"jordankanghm"},"content":"     * @throws InvalidDataFormatException When the format dookie.txt file is incorrect.","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"jordankanghm"},"content":"    public String execute(String cmd) throws InvalidDescriptionException,","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"jordankanghm"},"content":"            InvalidIntegerException,","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"jordankanghm"},"content":"            InvalidTaskNumberException,","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"jordankanghm"},"content":"            InvalidDataFormatException {","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"jordankanghm"},"content":"        if (parser.descriptionIsEmpty(cmd)) {","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"jordankanghm"},"content":"            throw new InvalidDescriptionException(\"mark\");","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"jordankanghm"},"content":"        int taskNumber \u003d -1;","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"jordankanghm"},"content":"        String integer \u003d cmd.split(\" \", 2)[1];","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"jordankanghm"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"jordankanghm"},"content":"            taskNumber \u003d Integer.parseInt(integer);","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"jordankanghm"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"jordankanghm"},"content":"            throw new InvalidIntegerException();","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"jordankanghm"},"content":"        if (!parser.isValidTaskNumber(taskNumber)) {","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"jordankanghm"},"content":"            throw new InvalidTaskNumberException(taskNumber);","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"jordankanghm"},"content":"        Task task \u003d tasks.updateTasks(taskNumber - 1, \"MARK\");","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"jordankanghm"},"content":"        return ui.getMarkedTaskMessage(task);","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"jordankanghm":58}},{"path":"src/main/java/seedu/dookie/NoDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.dookie;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the exception where the deadline for a Deadline event is not specified.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"public class NoDeadlineException extends DookieException {","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"     * Creates a NoDeadlineException instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"    public NoDeadlineException() {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"        super(\"\\u2639 OOPS!!! There is no deadline given.\\n\" +","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"                \"Please input the duration in the following format:\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"                \"/from DD-MM-YYYY TTTT /to DD-MM-YYYY TTTT\");","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jordankanghm":15}},{"path":"src/main/java/seedu/dookie/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.dookie;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the Parser class.","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":" * The Parser deals with the control flow of the program depending on the user\u0027s input command.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"public class Parser {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"    private enum TaskType {LIST, TODO, DEADLINE, EVENT, DELETE, MARK, UNMARK, FIND, POSTPONE, BYE};","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"     * Creates a Parser instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"     * @param storage The Storage used for the Dookie program.","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"     * @param tasks The TaskList created for the Dookie program.","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"jordankanghm"},"content":"     * @param ui The Ui used by the Dookie program.","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"jordankanghm"},"content":"    public Parser(Storage storage, TaskList tasks, Ui ui) {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"jordankanghm"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"jordankanghm"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"jordankanghm"},"content":"     * Executes the necessary processes based on the command inputted by the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"jordankanghm"},"content":"     * @param cmd The command inputted by the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"jordankanghm"},"content":"    public String parse(String cmd) {","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"jordankanghm"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"jordankanghm"},"content":"            // Try to convert the task type to an enum. If does not match, throw","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"jordankanghm"},"content":"            // InvocationTargetException.","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"jordankanghm"},"content":"            TaskType taskType \u003d TaskType.valueOf(getTaskType(cmd));","lastModifiedDate":"2023-09-11"},{"lineNumber":41,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":42,"author":{"gitId":"jordankanghm"},"content":"            switch (taskType) {","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"jordankanghm"},"content":"                case LIST:","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"jordankanghm"},"content":"                    return new ListCommand(tasks, ui).execute();","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"jordankanghm"},"content":"                case TODO:","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"jordankanghm"},"content":"                    return new ToDoCommand(this, tasks, ui).execute(cmd);","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"jordankanghm"},"content":"                case DEADLINE:","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"jordankanghm"},"content":"                    return new DeadlineCommand(this, tasks, ui).execute(cmd);","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"jordankanghm"},"content":"                case EVENT:","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"jordankanghm"},"content":"                    return new EventCommand(this, tasks, ui).execute(cmd);","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"jordankanghm"},"content":"                case DELETE:","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"jordankanghm"},"content":"                    return new DeleteCommand(this, tasks, ui).execute(cmd);","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"jordankanghm"},"content":"                case MARK:","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"jordankanghm"},"content":"                    return new MarkCommand(this, tasks, ui).execute(cmd);","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"jordankanghm"},"content":"                case UNMARK:","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"jordankanghm"},"content":"                    return new UnmarkCommand(this, tasks, ui).execute(cmd);","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"jordankanghm"},"content":"                case FIND:","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"jordankanghm"},"content":"                    return new FindCommand(this, tasks, ui).execute(cmd);","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"jordankanghm"},"content":"                case POSTPONE:","lastModifiedDate":"2023-09-13"},{"lineNumber":60,"author":{"gitId":"jordankanghm"},"content":"                    return new PostponeCommand(this, tasks, ui).execute(cmd);","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"jordankanghm"},"content":"                case BYE:","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"jordankanghm"},"content":"                    return new ExitCommand(ui).execute();","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-09-11"},{"lineNumber":64,"author":{"gitId":"jordankanghm"},"content":"        } catch (DookieException e) {","lastModifiedDate":"2023-09-16"},{"lineNumber":65,"author":{"gitId":"jordankanghm"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-11"},{"lineNumber":66,"author":{"gitId":"jordankanghm"},"content":"        } catch (AssertionError e) {","lastModifiedDate":"2023-09-11"},{"lineNumber":67,"author":{"gitId":"jordankanghm"},"content":"            return \"Assertion failed: \" + e.getMessage();","lastModifiedDate":"2023-09-11"},{"lineNumber":68,"author":{"gitId":"jordankanghm"},"content":"        } catch (Exception e) { // This catch block catches InvocationTargetException from the","lastModifiedDate":"2023-09-13"},{"lineNumber":69,"author":{"gitId":"jordankanghm"},"content":"                                // TaskType.valueOf() method","lastModifiedDate":"2023-09-13"},{"lineNumber":70,"author":{"gitId":"jordankanghm"},"content":"            return new TaskTypeException().getMessage();","lastModifiedDate":"2023-09-13"},{"lineNumber":71,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":72,"author":{"gitId":"jordankanghm"},"content":"        return null;","lastModifiedDate":"2023-09-13"},{"lineNumber":73,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":74,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":75,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":76,"author":{"gitId":"jordankanghm"},"content":"     * Returns a string representing the first word of the user input in uppercase.","lastModifiedDate":"2023-09-11"},{"lineNumber":77,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":78,"author":{"gitId":"jordankanghm"},"content":"     * @param cmd The user input.","lastModifiedDate":"2023-09-11"},{"lineNumber":79,"author":{"gitId":"jordankanghm"},"content":"     * @return A string representing the first word of the user input in uppercase.","lastModifiedDate":"2023-09-11"},{"lineNumber":80,"author":{"gitId":"jordankanghm"},"content":"     * @throws TaskTypeException if the user input is empty.","lastModifiedDate":"2023-09-11"},{"lineNumber":81,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":82,"author":{"gitId":"jordankanghm"},"content":"    private String getTaskType(String cmd) throws TaskTypeException {","lastModifiedDate":"2023-09-11"},{"lineNumber":83,"author":{"gitId":"jordankanghm"},"content":"        try {","lastModifiedDate":"2023-09-11"},{"lineNumber":84,"author":{"gitId":"jordankanghm"},"content":"            return cmd.split(\" \", 2)[0].toUpperCase();","lastModifiedDate":"2023-09-11"},{"lineNumber":85,"author":{"gitId":"jordankanghm"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-11"},{"lineNumber":86,"author":{"gitId":"jordankanghm"},"content":"            throw new TaskTypeException();","lastModifiedDate":"2023-09-11"},{"lineNumber":87,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":88,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":89,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":91,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"jordankanghm"},"content":"     * Checks whether the task description has been specified.","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"jordankanghm"},"content":"     * @param cmd The command inputted by the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"jordankanghm"},"content":"     * @return True if there is no task description specified.","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"jordankanghm"},"content":"    public boolean descriptionIsEmpty(String cmd) {","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"jordankanghm"},"content":"        return cmd.split(\" \").length \u003d\u003d 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"jordankanghm"},"content":"     * Checks whether the input task has no deadline.","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"jordankanghm"},"content":"     * A task has no deadline if there is no \"/\" followed by at least one character.","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"jordankanghm"},"content":"     * @param taskWithDeadline The task name and deadline given by the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"jordankanghm"},"content":"     * @return True if the task has no specified deadline.","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"jordankanghm"},"content":"    public boolean hasNoDeadline(String taskWithDeadline) {","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"jordankanghm"},"content":"        return taskWithDeadline.split(\"/\").length \u003d\u003d 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"jordankanghm"},"content":"     * Checks whether the input deadline is a proper date and time.","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"jordankanghm"},"content":"     * @param deadline The deadline specified by the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"jordankanghm"},"content":"     * @return A LocalDateTime object containing the date and time given, if it is a valid deadline. Else, return null.","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"jordankanghm"},"content":"    public LocalDateTime checkDeadline(String deadline) {","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"jordankanghm"},"content":"        String[] parts \u003d deadline.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"jordankanghm"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"jordankanghm"},"content":"            // If there isn\u0027t exactly three components in the deadline, return false","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"jordankanghm"},"content":"            if (parts.length !\u003d 3) {","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"jordankanghm"},"content":"                throw new InvalidDeadlineException(deadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"jordankanghm"},"content":"            String by \u003d parts[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"jordankanghm"},"content":"            String date \u003d parts[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"jordankanghm"},"content":"            String time \u003d parts[2];","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"jordankanghm"},"content":"            // If the first word is not \"by\", return false","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"jordankanghm"},"content":"            if (!by.equals(\"by\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"jordankanghm"},"content":"                throw new InvalidDeadlineException(deadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"jordankanghm"},"content":"            String[] dateParts \u003d date.split(\"-\");","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"jordankanghm"},"content":"            // If the date does not have three components, return false","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"jordankanghm"},"content":"            if (dateParts.length !\u003d 3) {","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"jordankanghm"},"content":"                throw new InvalidDeadlineException(deadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"jordankanghm"},"content":"            int day \u003d Integer.parseInt(dateParts[0]);","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"jordankanghm"},"content":"            int month \u003d Integer.parseInt(dateParts[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"jordankanghm"},"content":"            int year \u003d Integer.parseInt(dateParts[2]);","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"jordankanghm"},"content":"            // If time is not a four digit number, return false","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"jordankanghm"},"content":"            if (time.length() !\u003d 4) {","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"jordankanghm"},"content":"                throw new InvalidDeadlineException(deadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":148,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":149,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"jordankanghm"},"content":"            int hour \u003d Integer.parseInt(time.substring(0, 2));","lastModifiedDate":"2023-08-30"},{"lineNumber":151,"author":{"gitId":"jordankanghm"},"content":"            int min \u003d Integer.parseInt(time.substring(2, 4));","lastModifiedDate":"2023-08-30"},{"lineNumber":152,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":153,"author":{"gitId":"jordankanghm"},"content":"            return LocalDateTime.of(year, month, day, hour, min);","lastModifiedDate":"2023-08-30"},{"lineNumber":154,"author":{"gitId":"jordankanghm"},"content":"        } catch (InvalidDeadlineException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":155,"author":{"gitId":"jordankanghm"},"content":"            return null;","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":157,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":159,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":160,"author":{"gitId":"jordankanghm"},"content":"     * Checks whether the given start date and time for an event is valid.","lastModifiedDate":"2023-09-01"},{"lineNumber":161,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":162,"author":{"gitId":"jordankanghm"},"content":"     * @param starting The start date and time","lastModifiedDate":"2023-09-01"},{"lineNumber":163,"author":{"gitId":"jordankanghm"},"content":"     * @return A LocalDateTime representing the date and time","lastModifiedDate":"2023-09-01"},{"lineNumber":164,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":165,"author":{"gitId":"jordankanghm"},"content":"    public LocalDateTime checkStarting(String starting ){","lastModifiedDate":"2023-09-01"},{"lineNumber":166,"author":{"gitId":"jordankanghm"},"content":"        String[] parts \u003d starting.split(\" \");","lastModifiedDate":"2023-09-01"},{"lineNumber":167,"author":{"gitId":"jordankanghm"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":168,"author":{"gitId":"jordankanghm"},"content":"            // If there isn\u0027t exactly three components in the deadline, return false","lastModifiedDate":"2023-09-01"},{"lineNumber":169,"author":{"gitId":"jordankanghm"},"content":"            if (parts.length !\u003d 3) {","lastModifiedDate":"2023-09-01"},{"lineNumber":170,"author":{"gitId":"jordankanghm"},"content":"                throw new InvalidDurationException(starting);","lastModifiedDate":"2023-09-01"},{"lineNumber":171,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":172,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":173,"author":{"gitId":"jordankanghm"},"content":"            String from \u003d parts[0];","lastModifiedDate":"2023-09-01"},{"lineNumber":174,"author":{"gitId":"jordankanghm"},"content":"            String date \u003d parts[1];","lastModifiedDate":"2023-09-01"},{"lineNumber":175,"author":{"gitId":"jordankanghm"},"content":"            String time \u003d parts[2];","lastModifiedDate":"2023-09-01"},{"lineNumber":176,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":177,"author":{"gitId":"jordankanghm"},"content":"            // If the first word is not \"by\", return false","lastModifiedDate":"2023-09-01"},{"lineNumber":178,"author":{"gitId":"jordankanghm"},"content":"            if (!from.equals(\"from\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":179,"author":{"gitId":"jordankanghm"},"content":"                throw new InvalidDurationException(starting);","lastModifiedDate":"2023-09-01"},{"lineNumber":180,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":181,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":182,"author":{"gitId":"jordankanghm"},"content":"            String[] dateParts \u003d date.split(\"-\");","lastModifiedDate":"2023-09-01"},{"lineNumber":183,"author":{"gitId":"jordankanghm"},"content":"            // If the date does not have three components, return false","lastModifiedDate":"2023-09-01"},{"lineNumber":184,"author":{"gitId":"jordankanghm"},"content":"            if (dateParts.length !\u003d 3) {","lastModifiedDate":"2023-09-01"},{"lineNumber":185,"author":{"gitId":"jordankanghm"},"content":"                throw new InvalidDurationException(starting);","lastModifiedDate":"2023-09-01"},{"lineNumber":186,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":187,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":188,"author":{"gitId":"jordankanghm"},"content":"            int day \u003d Integer.parseInt(dateParts[0]);","lastModifiedDate":"2023-09-01"},{"lineNumber":189,"author":{"gitId":"jordankanghm"},"content":"            int month \u003d Integer.parseInt(dateParts[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":190,"author":{"gitId":"jordankanghm"},"content":"            int year \u003d Integer.parseInt(dateParts[2]);","lastModifiedDate":"2023-09-01"},{"lineNumber":191,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":192,"author":{"gitId":"jordankanghm"},"content":"            // If time is not a four digit number, return false","lastModifiedDate":"2023-09-01"},{"lineNumber":193,"author":{"gitId":"jordankanghm"},"content":"            if (time.length() !\u003d 4) {","lastModifiedDate":"2023-09-01"},{"lineNumber":194,"author":{"gitId":"jordankanghm"},"content":"                throw new InvalidDurationException(starting);","lastModifiedDate":"2023-09-01"},{"lineNumber":195,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":196,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":197,"author":{"gitId":"jordankanghm"},"content":"            int hour \u003d Integer.parseInt(time.substring(0, 2));","lastModifiedDate":"2023-09-01"},{"lineNumber":198,"author":{"gitId":"jordankanghm"},"content":"            int min \u003d Integer.parseInt(time.substring(2, 4));","lastModifiedDate":"2023-09-01"},{"lineNumber":199,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":200,"author":{"gitId":"jordankanghm"},"content":"            return LocalDateTime.of(year, month, day, hour, min);","lastModifiedDate":"2023-09-01"},{"lineNumber":201,"author":{"gitId":"jordankanghm"},"content":"        } catch (InvalidDurationException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":202,"author":{"gitId":"jordankanghm"},"content":"            return null;","lastModifiedDate":"2023-09-01"},{"lineNumber":203,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":204,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":205,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":206,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":207,"author":{"gitId":"jordankanghm"},"content":"     * Checks whether the given end date and time for an event is valid.","lastModifiedDate":"2023-09-01"},{"lineNumber":208,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":209,"author":{"gitId":"jordankanghm"},"content":"     * @param ending The end date and time","lastModifiedDate":"2023-09-01"},{"lineNumber":210,"author":{"gitId":"jordankanghm"},"content":"     * @return A LocalDateTime representing the date and time","lastModifiedDate":"2023-09-01"},{"lineNumber":211,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":212,"author":{"gitId":"jordankanghm"},"content":"    public LocalDateTime checkEnding(String ending) {","lastModifiedDate":"2023-09-01"},{"lineNumber":213,"author":{"gitId":"jordankanghm"},"content":"        String[] parts \u003d ending.split(\" \");","lastModifiedDate":"2023-09-01"},{"lineNumber":214,"author":{"gitId":"jordankanghm"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":215,"author":{"gitId":"jordankanghm"},"content":"            // If there isn\u0027t exactly three components in the deadline, return false","lastModifiedDate":"2023-09-01"},{"lineNumber":216,"author":{"gitId":"jordankanghm"},"content":"            if (parts.length !\u003d 3) {","lastModifiedDate":"2023-09-01"},{"lineNumber":217,"author":{"gitId":"jordankanghm"},"content":"                throw new InvalidDurationException(ending);","lastModifiedDate":"2023-09-01"},{"lineNumber":218,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":219,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":220,"author":{"gitId":"jordankanghm"},"content":"            String to \u003d parts[0];","lastModifiedDate":"2023-09-01"},{"lineNumber":221,"author":{"gitId":"jordankanghm"},"content":"            String date \u003d parts[1];","lastModifiedDate":"2023-09-01"},{"lineNumber":222,"author":{"gitId":"jordankanghm"},"content":"            String time \u003d parts[2];","lastModifiedDate":"2023-09-01"},{"lineNumber":223,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":224,"author":{"gitId":"jordankanghm"},"content":"            // If the first word is not \"by\", return false","lastModifiedDate":"2023-09-01"},{"lineNumber":225,"author":{"gitId":"jordankanghm"},"content":"            if (!to.equals(\"to\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":226,"author":{"gitId":"jordankanghm"},"content":"                throw new InvalidDurationException(ending);","lastModifiedDate":"2023-09-01"},{"lineNumber":227,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":228,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":229,"author":{"gitId":"jordankanghm"},"content":"            String[] dateParts \u003d date.split(\"-\");","lastModifiedDate":"2023-09-01"},{"lineNumber":230,"author":{"gitId":"jordankanghm"},"content":"            // If the date does not have three components, return false","lastModifiedDate":"2023-09-01"},{"lineNumber":231,"author":{"gitId":"jordankanghm"},"content":"            if (dateParts.length !\u003d 3) {","lastModifiedDate":"2023-09-01"},{"lineNumber":232,"author":{"gitId":"jordankanghm"},"content":"                throw new InvalidDurationException(ending);","lastModifiedDate":"2023-09-01"},{"lineNumber":233,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":234,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":235,"author":{"gitId":"jordankanghm"},"content":"            int day \u003d Integer.parseInt(dateParts[0]);","lastModifiedDate":"2023-09-01"},{"lineNumber":236,"author":{"gitId":"jordankanghm"},"content":"            int month \u003d Integer.parseInt(dateParts[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":237,"author":{"gitId":"jordankanghm"},"content":"            int year \u003d Integer.parseInt(dateParts[2]);","lastModifiedDate":"2023-09-01"},{"lineNumber":238,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":239,"author":{"gitId":"jordankanghm"},"content":"            // If time is not a four digit number, return false","lastModifiedDate":"2023-09-01"},{"lineNumber":240,"author":{"gitId":"jordankanghm"},"content":"            if (time.length() !\u003d 4) {","lastModifiedDate":"2023-09-01"},{"lineNumber":241,"author":{"gitId":"jordankanghm"},"content":"                throw new InvalidDurationException(ending);","lastModifiedDate":"2023-09-01"},{"lineNumber":242,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":243,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":244,"author":{"gitId":"jordankanghm"},"content":"            int hour \u003d Integer.parseInt(time.substring(0, 2));","lastModifiedDate":"2023-09-01"},{"lineNumber":245,"author":{"gitId":"jordankanghm"},"content":"            int min \u003d Integer.parseInt(time.substring(2, 4));","lastModifiedDate":"2023-09-01"},{"lineNumber":246,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":247,"author":{"gitId":"jordankanghm"},"content":"            return LocalDateTime.of(year, month, day, hour, min);","lastModifiedDate":"2023-09-01"},{"lineNumber":248,"author":{"gitId":"jordankanghm"},"content":"        } catch (InvalidDurationException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":249,"author":{"gitId":"jordankanghm"},"content":"            return null;","lastModifiedDate":"2023-09-01"},{"lineNumber":250,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":251,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":252,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":253,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":254,"author":{"gitId":"jordankanghm"},"content":"     * Checks whether a task with the given task number argument exists.","lastModifiedDate":"2023-08-30"},{"lineNumber":255,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":256,"author":{"gitId":"jordankanghm"},"content":"     * @param number The integer specified by the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":257,"author":{"gitId":"jordankanghm"},"content":"     * @return True if a task with that task number exists.","lastModifiedDate":"2023-08-30"},{"lineNumber":258,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":259,"author":{"gitId":"jordankanghm"},"content":"    //","lastModifiedDate":"2023-08-30"},{"lineNumber":260,"author":{"gitId":"jordankanghm"},"content":"    public boolean isValidTaskNumber(int number) {","lastModifiedDate":"2023-08-30"},{"lineNumber":261,"author":{"gitId":"jordankanghm"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":262,"author":{"gitId":"jordankanghm"},"content":"            int listSize \u003d storage.load().size();","lastModifiedDate":"2023-08-30"},{"lineNumber":263,"author":{"gitId":"jordankanghm"},"content":"            return number \u003e 0 \u0026\u0026 number \u003c\u003d listSize;","lastModifiedDate":"2023-08-30"},{"lineNumber":264,"author":{"gitId":"jordankanghm"},"content":"        } catch (InvalidDataFormatException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":265,"author":{"gitId":"jordankanghm"},"content":"            return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":266,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":267,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":268,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jordankanghm":268}},{"path":"src/main/java/seedu/dookie/PostponeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.dookie;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the Postpone Command.","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"public class PostponeCommand extends Command {","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"    private Parser parser;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"     * Creates a new PostponeCommand instance.","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"     * @param parser The parser being used.","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"     * @param tasks The accumulated tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"     * @param ui The Ui being used.","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"    public PostponeCommand(Parser parser, TaskList tasks, Ui ui) {","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"     * Executes the code corresponding to a postpone command.","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"jordankanghm"},"content":"     * @param cmd The user input.","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"jordankanghm"},"content":"     * @return A string containing the postpone task message.","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"jordankanghm"},"content":"     * @throws InvalidDescriptionException When there is only one word in the user input.","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"jordankanghm"},"content":"     * @throws InvalidIntegerException When the argument specified is not an integer.","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"jordankanghm"},"content":"     * @throws InvalidTaskNumberException When the integer specified is not a task number.","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"jordankanghm"},"content":"     * @throws InvalidDataFormatException When the format dookie.txt file is incorrect.","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"jordankanghm"},"content":"     * @throws NoDeadlineException When no new deadline is specified.","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"jordankanghm"},"content":"    public String execute(String cmd) throws InvalidDescriptionException,","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"jordankanghm"},"content":"            InvalidIntegerException,","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"jordankanghm"},"content":"            InvalidTaskNumberException,","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"jordankanghm"},"content":"            InvalidDataFormatException,","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"jordankanghm"},"content":"            NoDeadlineException {","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"jordankanghm"},"content":"        if (parser.descriptionIsEmpty(cmd)) {","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"jordankanghm"},"content":"            throw new InvalidDescriptionException(\"postpone\");","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"jordankanghm"},"content":"        int taskNumber \u003d -1;","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"jordankanghm"},"content":"        String integer \u003d cmd.split(\" \", 3)[1];","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"jordankanghm"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"jordankanghm"},"content":"            taskNumber \u003d Integer.parseInt(integer);","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"jordankanghm"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"jordankanghm"},"content":"            throw new InvalidIntegerException();","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"jordankanghm"},"content":"        if (!parser.isValidTaskNumber(taskNumber)) {","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"jordankanghm"},"content":"            throw new InvalidTaskNumberException(taskNumber);","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"jordankanghm"},"content":"        Task task \u003d tasks.postponeTask(cmd,(taskNumber - 1));","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"jordankanghm"},"content":"        return ui.getPostponeMessage(task);","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"jordankanghm":61}},{"path":"src/main/java/seedu/dookie/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.dookie;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"import java.io.*;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the Storage class.","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":" * The Storage class deals with saving and loading information to a specified file.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"    protected String filePath;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"     * Creates a Storage instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"     * @param filePath The relative path to the file used to store data.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"     * Reads the data in the dookie.txt file, unserializes it and returns an arraylist representing","lastModifiedDate":"2023-09-16"},{"lineNumber":26,"author":{"gitId":"jordankanghm"},"content":"     * the saved tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"jordankanghm"},"content":"     * @return An ArrayList\u003cTask\u003e containing the saved tasks accumulated.","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"jordankanghm"},"content":"     * @throws InvalidDataFormatException if the format of the data in the saved file is incorrect.","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"jordankanghm"},"content":"    public ArrayList\u003cTask\u003e load() throws InvalidDataFormatException {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"jordankanghm"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"jordankanghm"},"content":"        // Convert the filePath string to a Path object","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"jordankanghm"},"content":"        Path filePath \u003d Paths.get(this.filePath);","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"jordankanghm"},"content":"        // Get the folder path","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"jordankanghm"},"content":"        Path folderPath \u003d filePath.getParent();","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"jordankanghm"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"jordankanghm"},"content":"            // Check if the folder exists, create if not","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"jordankanghm"},"content":"            if (!Files.exists(folderPath)) {","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"jordankanghm"},"content":"                Files.createDirectories(folderPath);","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"jordankanghm"},"content":"            // Check if the file exists, create if not","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"jordankanghm"},"content":"            if (!Files.exists(filePath)) {","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"jordankanghm"},"content":"                Files.createFile(filePath);","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"jordankanghm"},"content":"            // If the dooike.txt file is empty, return an empty task arraylist","lastModifiedDate":"2023-09-16"},{"lineNumber":52,"author":{"gitId":"jordankanghm"},"content":"            if (Files.size(filePath) \u003d\u003d 0) {","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"jordankanghm"},"content":"                return tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"jordankanghm"},"content":"            // Throws StreamCorruptedException when data format is unserializable","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"jordankanghm"},"content":"            ObjectInputStream inputStream \u003d new ObjectInputStream(new FileInputStream(this.filePath));","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"jordankanghm"},"content":"            tasks \u003d (ArrayList\u003cTask\u003e) inputStream.readObject();","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"jordankanghm"},"content":"            // Throws exception if data in dookie.txt is not an ArrayList\u003cTask\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":61,"author":{"gitId":"jordankanghm"},"content":"            if (tasks instanceof ArrayList\u003c?\u003e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"jordankanghm"},"content":"                tasks \u003d (ArrayList\u003cTask\u003e) tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"jordankanghm"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"jordankanghm"},"content":"                throw new InvalidDataFormatException();","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"jordankanghm"},"content":"        } catch (StreamCorruptedException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"jordankanghm"},"content":"            throw new InvalidDataFormatException();","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"jordankanghm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"jordankanghm"},"content":"            throw new InvalidDataFormatException();","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"jordankanghm"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"jordankanghm"},"content":"            throw new InvalidDataFormatException();","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"jordankanghm"},"content":"        return tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"jordankanghm"},"content":"     * Removes all data from the dookie.txt file. Takes the task arraylist argument, serializes it","lastModifiedDate":"2023-09-16"},{"lineNumber":78,"author":{"gitId":"jordankanghm"},"content":"     * and stores it in the dookie.txt file.","lastModifiedDate":"2023-09-16"},{"lineNumber":79,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"jordankanghm"},"content":"     * @param data The new ArrayList of tasks to be overwritten in the dookie.txt file.","lastModifiedDate":"2023-09-16"},{"lineNumber":81,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"jordankanghm"},"content":"    public void save(ArrayList\u003cTask\u003e data) {","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"jordankanghm"},"content":"        // Delete all data from dookie.txt file","lastModifiedDate":"2023-09-16"},{"lineNumber":84,"author":{"gitId":"jordankanghm"},"content":"        try (ObjectOutputStream outputStream \u003d new ObjectOutputStream(new FileOutputStream(\"./data/dookie.txt\", false))) {","lastModifiedDate":"2023-09-16"},{"lineNumber":85,"author":{"gitId":"jordankanghm"},"content":"            outputStream.writeObject(data);","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"jordankanghm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"jordankanghm"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jordankanghm":90}},{"path":"src/main/java/seedu/dookie/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.dookie;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the Task class.","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":" * A Task is an activity that the user must complete.","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"class Task implements Serializable {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"    protected String name \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"     * Creates a Task instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"     * @param name The name of the task given by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"    public Task(String name) {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"     * Obtains a String representing the completion status of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"     * @return [X] if the task has been completed and [ ] if it has not.","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"jordankanghm"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"jordankanghm"},"content":"        return isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"jordankanghm"},"content":"     * Obtains a string representing the type of task.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"jordankanghm"},"content":"     * @return [T], [D] or [E] for ToDos, Deadlines and Events respectively.","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"jordankanghm"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"jordankanghm"},"content":"        return \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"jordankanghm"},"content":"     * Obtains the time restriction details in a string format","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"jordankanghm"},"content":"     * @return A string containing the deadline/duration information for deadlines and events respectively.","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"jordankanghm"},"content":"     *         Returns an empty string for ToDos.","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"jordankanghm"},"content":"    public String getTimeInfo() {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"jordankanghm"},"content":"        return \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"jordankanghm"},"content":"     * Marks the task as completed.","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"jordankanghm"},"content":"    public void markTask() {","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"jordankanghm"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"jordankanghm"},"content":"     * Marks the task as incomplete.","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"jordankanghm"},"content":"    public void unMarkTask() {","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"jordankanghm"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jordankanghm":63}},{"path":"src/main/java/seedu/dookie/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.dookie;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the TaskList class.","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":" * A TaskList represents the user\u0027s accumulated tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"public class TaskList {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"    private enum UpdateType {DELETE, MARK, UNMARK};","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"jordankanghm"},"content":"     * Obtains the accumulated tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"jordankanghm"},"content":"     * @return An ArrayList\u003cTask\u003e containing the current tasks","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"jordankanghm"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"jordankanghm"},"content":"        return this.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"jordankanghm"},"content":"     * Appends the new task at the end of the current ArrayList\u003cTask\u003e and saves it.","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"jordankanghm"},"content":"     * @param task The task to be appended.","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"jordankanghm"},"content":"     * @return The ArrayList\u003cTask\u003e containing the updated tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"jordankanghm"},"content":"    // Adds the Task argument at the end of the list","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"jordankanghm"},"content":"    public ArrayList\u003cTask\u003e addTask(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"jordankanghm"},"content":"        tasks.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"jordankanghm"},"content":"        new Storage(\"./data/dookie.txt\").save(tasks);","lastModifiedDate":"2023-09-16"},{"lineNumber":42,"author":{"gitId":"jordankanghm"},"content":"        return tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"jordankanghm"},"content":"    public void saveTasks() {","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"jordankanghm"},"content":"        new Storage(\"./data/dookie.txt\").save(this.tasks);","lastModifiedDate":"2023-09-16"},{"lineNumber":47,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"jordankanghm"},"content":"     * Depending on the purpose, information in the arraylist is updated, and the whole arraylist is","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"jordankanghm"},"content":"     * serialized and saved again in the dookie.txt file.","lastModifiedDate":"2023-09-16"},{"lineNumber":52,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"jordankanghm"},"content":"     * @param index The task number specified.","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"jordankanghm"},"content":"     * @param purpose The type of update: mark or delete.","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"jordankanghm"},"content":"     * @return The task which has been marked/deleted.","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"jordankanghm"},"content":"     * @throws InvalidDataFormatException if the data in the dookie.txt file is not in the correct format.","lastModifiedDate":"2023-09-16"},{"lineNumber":57,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"jordankanghm"},"content":"    //","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"jordankanghm"},"content":"    public Task updateTasks(int index, String purpose) throws InvalidDataFormatException {","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"jordankanghm"},"content":"        if (UpdateType.valueOf(purpose) \u003d\u003d UpdateType.DELETE) {","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"jordankanghm"},"content":"            Task deletedTask \u003d this.tasks.get(index);","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"jordankanghm"},"content":"            this.tasks.remove(index);","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"jordankanghm"},"content":"            saveTasks();","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"jordankanghm"},"content":"            return deletedTask;","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"jordankanghm"},"content":"        } else if (UpdateType.valueOf(purpose) \u003d\u003d UpdateType.MARK) {","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"jordankanghm"},"content":"            this.tasks.get(index).markTask();","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"jordankanghm"},"content":"            saveTasks();","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"jordankanghm"},"content":"            return this.tasks.get(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"jordankanghm"},"content":"        } else if (UpdateType.valueOf(purpose) \u003d\u003d UpdateType.UNMARK) {","lastModifiedDate":"2023-09-12"},{"lineNumber":70,"author":{"gitId":"jordankanghm"},"content":"            this.tasks.get(index).unMarkTask();","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"jordankanghm"},"content":"            saveTasks();","lastModifiedDate":"2023-09-12"},{"lineNumber":72,"author":{"gitId":"jordankanghm"},"content":"            return this.tasks.get(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"jordankanghm"},"content":"        return null;","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"jordankanghm"},"content":"     * Finds tasks in the accumulated tasks that contain the keyword specified.","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"jordankanghm"},"content":"     * @param keyword The string to be matched with the accumulated tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"jordankanghm"},"content":"     * @return An ArrayList\u003cTask\u003e containing the tasks that contain the keyword.","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"jordankanghm"},"content":"    public ArrayList\u003cTask\u003e find(String keyword) {","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"jordankanghm"},"content":"        ArrayList\u003cTask\u003e results \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"jordankanghm"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"jordankanghm"},"content":"            if (tasks.get(i).name.contains(keyword)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"jordankanghm"},"content":"                results.add(tasks.get(i));","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"jordankanghm"},"content":"        return results;","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":94,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":95,"author":{"gitId":"jordankanghm"},"content":"     * Postpones the task at the index specified.","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"jordankanghm"},"content":"     * @param cmd The user input.","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"jordankanghm"},"content":"     * @param index The index of the task in the arraylist.","lastModifiedDate":"2023-09-12"},{"lineNumber":99,"author":{"gitId":"jordankanghm"},"content":"     * @return The postponed task.","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"jordankanghm"},"content":"    public Task postponeTask(String cmd, int index) {","lastModifiedDate":"2023-09-12"},{"lineNumber":102,"author":{"gitId":"jordankanghm"},"content":"        Task snoozedTask \u003d this.tasks.get(index);","lastModifiedDate":"2023-09-12"},{"lineNumber":103,"author":{"gitId":"jordankanghm"},"content":"        if (snoozedTask instanceof Deadline) {","lastModifiedDate":"2023-09-12"},{"lineNumber":104,"author":{"gitId":"jordankanghm"},"content":"            if (hasValidDeadline(cmd)) {","lastModifiedDate":"2023-09-12"},{"lineNumber":105,"author":{"gitId":"jordankanghm"},"content":"                return postponeDeadline(snoozedTask, getDeadline(cmd));","lastModifiedDate":"2023-09-12"},{"lineNumber":106,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":107,"author":{"gitId":"jordankanghm"},"content":"        } else {","lastModifiedDate":"2023-09-12"},{"lineNumber":108,"author":{"gitId":"jordankanghm"},"content":"            if (hasValidDuration(cmd)) {","lastModifiedDate":"2023-09-12"},{"lineNumber":109,"author":{"gitId":"jordankanghm"},"content":"                return postponeEvent(snoozedTask, getStartDuration(cmd), getEndDuration(cmd));","lastModifiedDate":"2023-09-12"},{"lineNumber":110,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":111,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":112,"author":{"gitId":"jordankanghm"},"content":"        return null;","lastModifiedDate":"2023-09-12"},{"lineNumber":113,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":114,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":115,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":116,"author":{"gitId":"jordankanghm"},"content":"     * Checks if a valid deadline has been specified.","lastModifiedDate":"2023-09-12"},{"lineNumber":117,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":118,"author":{"gitId":"jordankanghm"},"content":"     * @param cmd The user input.","lastModifiedDate":"2023-09-12"},{"lineNumber":119,"author":{"gitId":"jordankanghm"},"content":"     * @return True if the deadline is valid and false otherwise.","lastModifiedDate":"2023-09-12"},{"lineNumber":120,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":121,"author":{"gitId":"jordankanghm"},"content":"    public boolean hasValidDeadline(String cmd) {","lastModifiedDate":"2023-09-12"},{"lineNumber":122,"author":{"gitId":"jordankanghm"},"content":"        String integerWithDeadline \u003d cmd.split(\" \", 2)[1];","lastModifiedDate":"2023-09-12"},{"lineNumber":123,"author":{"gitId":"jordankanghm"},"content":"        Parser parser \u003d new Parser(new Storage(\"\"), new TaskList(), new Ui());","lastModifiedDate":"2023-09-12"},{"lineNumber":124,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":125,"author":{"gitId":"jordankanghm"},"content":"        if (parser.hasNoDeadline(integerWithDeadline)) {","lastModifiedDate":"2023-09-12"},{"lineNumber":126,"author":{"gitId":"jordankanghm"},"content":"            return false;","lastModifiedDate":"2023-09-12"},{"lineNumber":127,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":128,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":129,"author":{"gitId":"jordankanghm"},"content":"        String deadlineDescription \u003d integerWithDeadline.split(\"/\", 2)[1];","lastModifiedDate":"2023-09-12"},{"lineNumber":130,"author":{"gitId":"jordankanghm"},"content":"        if (parser.checkDeadline(deadlineDescription) \u003d\u003d null) {","lastModifiedDate":"2023-09-12"},{"lineNumber":131,"author":{"gitId":"jordankanghm"},"content":"            return false;","lastModifiedDate":"2023-09-12"},{"lineNumber":132,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"jordankanghm"},"content":"        return true;","lastModifiedDate":"2023-09-12"},{"lineNumber":134,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":135,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":136,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":137,"author":{"gitId":"jordankanghm"},"content":"     * Converts the deadline provided by the user to a LocalDateTime.","lastModifiedDate":"2023-09-12"},{"lineNumber":138,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":139,"author":{"gitId":"jordankanghm"},"content":"     * @param cmd The user input.","lastModifiedDate":"2023-09-12"},{"lineNumber":140,"author":{"gitId":"jordankanghm"},"content":"     * @return The LocalDateTime representing the deadline given.","lastModifiedDate":"2023-09-12"},{"lineNumber":141,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":142,"author":{"gitId":"jordankanghm"},"content":"    public LocalDateTime getDeadline(String cmd) {","lastModifiedDate":"2023-09-12"},{"lineNumber":143,"author":{"gitId":"jordankanghm"},"content":"        String deadlineDescription \u003d cmd.split(\"/\")[1];","lastModifiedDate":"2023-09-12"},{"lineNumber":144,"author":{"gitId":"jordankanghm"},"content":"        Parser parser \u003d new Parser(new Storage(\"\"), new TaskList(), new Ui());","lastModifiedDate":"2023-09-12"},{"lineNumber":145,"author":{"gitId":"jordankanghm"},"content":"        return parser.checkDeadline(deadlineDescription);","lastModifiedDate":"2023-09-12"},{"lineNumber":146,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":147,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":148,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":149,"author":{"gitId":"jordankanghm"},"content":"     * Checks if a valid duration has been specified.","lastModifiedDate":"2023-09-12"},{"lineNumber":150,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":151,"author":{"gitId":"jordankanghm"},"content":"     * @param cmd The user input.","lastModifiedDate":"2023-09-12"},{"lineNumber":152,"author":{"gitId":"jordankanghm"},"content":"     * @return  True if the duration is valid and false otherwise.","lastModifiedDate":"2023-09-12"},{"lineNumber":153,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":154,"author":{"gitId":"jordankanghm"},"content":"    public boolean hasValidDuration(String cmd) {","lastModifiedDate":"2023-09-12"},{"lineNumber":155,"author":{"gitId":"jordankanghm"},"content":"        String taskWithDuration \u003d cmd.split(\" \", 2)[1];","lastModifiedDate":"2023-09-12"},{"lineNumber":156,"author":{"gitId":"jordankanghm"},"content":"        String[] time \u003d taskWithDuration.split(\"/\");","lastModifiedDate":"2023-09-12"},{"lineNumber":157,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":158,"author":{"gitId":"jordankanghm"},"content":"        // Check if there is a valid duration","lastModifiedDate":"2023-09-12"},{"lineNumber":159,"author":{"gitId":"jordankanghm"},"content":"        if (time.length !\u003d 3) {","lastModifiedDate":"2023-09-12"},{"lineNumber":160,"author":{"gitId":"jordankanghm"},"content":"            return false;","lastModifiedDate":"2023-09-12"},{"lineNumber":161,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":162,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":163,"author":{"gitId":"jordankanghm"},"content":"        String starting \u003d time[1];","lastModifiedDate":"2023-09-12"},{"lineNumber":164,"author":{"gitId":"jordankanghm"},"content":"        String ending \u003d time[2];","lastModifiedDate":"2023-09-12"},{"lineNumber":165,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":166,"author":{"gitId":"jordankanghm"},"content":"        Parser parser \u003d new Parser(new Storage(\"\"), new TaskList(), new Ui());","lastModifiedDate":"2023-09-12"},{"lineNumber":167,"author":{"gitId":"jordankanghm"},"content":"        if (parser.checkStarting(starting) \u003d\u003d null || parser.checkEnding(ending) \u003d\u003d null) {","lastModifiedDate":"2023-09-12"},{"lineNumber":168,"author":{"gitId":"jordankanghm"},"content":"            return false;","lastModifiedDate":"2023-09-12"},{"lineNumber":169,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":170,"author":{"gitId":"jordankanghm"},"content":"        return true;","lastModifiedDate":"2023-09-12"},{"lineNumber":171,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":172,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":173,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":174,"author":{"gitId":"jordankanghm"},"content":"     * Converts the start date and time to a LocalDateTime.","lastModifiedDate":"2023-09-12"},{"lineNumber":175,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":176,"author":{"gitId":"jordankanghm"},"content":"     * @param cmd The user input.","lastModifiedDate":"2023-09-12"},{"lineNumber":177,"author":{"gitId":"jordankanghm"},"content":"     * @return A LocalDateTime representing the start date and time.","lastModifiedDate":"2023-09-12"},{"lineNumber":178,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":179,"author":{"gitId":"jordankanghm"},"content":"    public LocalDateTime getStartDuration(String cmd) {","lastModifiedDate":"2023-09-12"},{"lineNumber":180,"author":{"gitId":"jordankanghm"},"content":"        String start \u003d cmd.split(\"/\")[1];","lastModifiedDate":"2023-09-12"},{"lineNumber":181,"author":{"gitId":"jordankanghm"},"content":"        Parser parser \u003d new Parser(new Storage(\"\"), new TaskList(), new Ui());","lastModifiedDate":"2023-09-12"},{"lineNumber":182,"author":{"gitId":"jordankanghm"},"content":"        return parser.checkStarting(start);","lastModifiedDate":"2023-09-12"},{"lineNumber":183,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":184,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":185,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":186,"author":{"gitId":"jordankanghm"},"content":"     * Converts the end date and time to a LocalDateTime.","lastModifiedDate":"2023-09-12"},{"lineNumber":187,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":188,"author":{"gitId":"jordankanghm"},"content":"     * @param cmd The user input.","lastModifiedDate":"2023-09-12"},{"lineNumber":189,"author":{"gitId":"jordankanghm"},"content":"     * @return A LocalDateTime representing the end date and time.","lastModifiedDate":"2023-09-12"},{"lineNumber":190,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":191,"author":{"gitId":"jordankanghm"},"content":"    public LocalDateTime getEndDuration(String cmd) {","lastModifiedDate":"2023-09-12"},{"lineNumber":192,"author":{"gitId":"jordankanghm"},"content":"        String end \u003d cmd.split(\"/\")[2];","lastModifiedDate":"2023-09-12"},{"lineNumber":193,"author":{"gitId":"jordankanghm"},"content":"        Parser parser \u003d new Parser(new Storage(\"\"), new TaskList(), new Ui());","lastModifiedDate":"2023-09-12"},{"lineNumber":194,"author":{"gitId":"jordankanghm"},"content":"        return parser.checkEnding(end);","lastModifiedDate":"2023-09-12"},{"lineNumber":195,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":196,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":197,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":198,"author":{"gitId":"jordankanghm"},"content":"     * Changes the deadline of a Deadline Task.","lastModifiedDate":"2023-09-12"},{"lineNumber":199,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":200,"author":{"gitId":"jordankanghm"},"content":"     * @param task The Deadline to be postponed.","lastModifiedDate":"2023-09-12"},{"lineNumber":201,"author":{"gitId":"jordankanghm"},"content":"     * @param dateTime The LocalDateTime to be postponed to.","lastModifiedDate":"2023-09-12"},{"lineNumber":202,"author":{"gitId":"jordankanghm"},"content":"     * @return The postponed task.","lastModifiedDate":"2023-09-12"},{"lineNumber":203,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":204,"author":{"gitId":"jordankanghm"},"content":"    public Task postponeDeadline(Task task, LocalDateTime dateTime) {","lastModifiedDate":"2023-09-12"},{"lineNumber":205,"author":{"gitId":"jordankanghm"},"content":"        Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2023-09-12"},{"lineNumber":206,"author":{"gitId":"jordankanghm"},"content":"        deadline.changeDeadline(dateTime);","lastModifiedDate":"2023-09-12"},{"lineNumber":207,"author":{"gitId":"jordankanghm"},"content":"        return deadline;","lastModifiedDate":"2023-09-12"},{"lineNumber":208,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":209,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":210,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":211,"author":{"gitId":"jordankanghm"},"content":"     * Changes the duration of an Event Task.","lastModifiedDate":"2023-09-12"},{"lineNumber":212,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":213,"author":{"gitId":"jordankanghm"},"content":"     * @param task The Event to be postponed.","lastModifiedDate":"2023-09-12"},{"lineNumber":214,"author":{"gitId":"jordankanghm"},"content":"     * @param start The new start LocalDateTime.","lastModifiedDate":"2023-09-12"},{"lineNumber":215,"author":{"gitId":"jordankanghm"},"content":"     * @param end The new end LocalDateTime.","lastModifiedDate":"2023-09-12"},{"lineNumber":216,"author":{"gitId":"jordankanghm"},"content":"     * @return The postponed task.","lastModifiedDate":"2023-09-12"},{"lineNumber":217,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":218,"author":{"gitId":"jordankanghm"},"content":"    public Task postponeEvent(Task task, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-09-12"},{"lineNumber":219,"author":{"gitId":"jordankanghm"},"content":"        Event event \u003d (Event) task;","lastModifiedDate":"2023-09-12"},{"lineNumber":220,"author":{"gitId":"jordankanghm"},"content":"        event.changeDuration(start, end);","lastModifiedDate":"2023-09-12"},{"lineNumber":221,"author":{"gitId":"jordankanghm"},"content":"        return event;","lastModifiedDate":"2023-09-12"},{"lineNumber":222,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jordankanghm":223}},{"path":"src/main/java/seedu/dookie/TaskTypeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.dookie;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the exception where the task identifier command by the user is not specified.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"public class TaskTypeException extends DookieException {","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"     * Creates a TaskTypeException instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"    public TaskTypeException() {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"        super(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jordankanghm":13}},{"path":"src/main/java/seedu/dookie/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.dookie;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the ToDo class.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":" * A ToDo is a Task with a ToDo type.","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"    protected String type \u003d \"T\";","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"     * Creates a ToDo instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"     * @param name The name of the task given by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"    public ToDo(String name) {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"        super(name);","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"     * Obtains the task type in square brackets.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"jordankanghm"},"content":"     * @return A string containing the task type in square brackets.","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"jordankanghm"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"jordankanghm"},"content":"        return \"[\" + this.type + \"]\";","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jordankanghm":28}},{"path":"src/main/java/seedu/dookie/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.dookie;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the ToDo Command.","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"    private Parser parser;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"     * Creates a new ToDoCommand instance.","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"     * @param parser The parser being used.","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"     * @param tasks The accumulated tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"     * @param ui The Ui being used.","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"    public ToDoCommand(Parser parser, TaskList tasks, Ui ui) {","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"     * Executes the code corresponding to a ToDo command.","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"jordankanghm"},"content":"     * @param cmd The user input.","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"jordankanghm"},"content":"     * @return A string containing the add task message.","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"jordankanghm"},"content":"     * @throws InvalidDescriptionException When there is only one word in the user input.","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"jordankanghm"},"content":"    public String execute(String cmd) throws InvalidDescriptionException {","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"jordankanghm"},"content":"        // Check if description is empty","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"jordankanghm"},"content":"        if (parser.descriptionIsEmpty(cmd)) {","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"jordankanghm"},"content":"            throw new InvalidDescriptionException(\"todo\");","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"jordankanghm"},"content":"        String taskName \u003d cmd.split(\" \", 2)[1];","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"jordankanghm"},"content":"        Task todo \u003d new ToDo(taskName);","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"jordankanghm"},"content":"        tasks.addTask(todo);","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"jordankanghm"},"content":"        return ui.getAddTaskMessage(todo, tasks);","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"jordankanghm":42}},{"path":"src/main/java/seedu/dookie/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.dookie;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the Ui class.","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":" * The Ui is responsible for the outputs printed to the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"public class Ui {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"     * Creates a Ui instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"    public Ui() {}","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"    public String showLoadingError() {","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"        return \"There was an error reading your dookie.txt file\";","lastModifiedDate":"2023-09-16"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"     * Returns a string containing the tasks in the taskList given.","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"     * @param taskList The tasks accumulated.","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"    public String getListItemsString(TaskList taskList) {","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"jordankanghm"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"        String message \u003d \"\";","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"jordankanghm"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"jordankanghm"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"jordankanghm"},"content":"            message +\u003d (i+1) + \".\" + task.getTaskType() + task.getStatusIcon() + \" \" + task.name","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"jordankanghm"},"content":"                                    + \" \" + task.getTimeInfo() + \"\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"jordankanghm"},"content":"        return message;","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"jordankanghm"},"content":"     * Returns a string containing the message for when a new task is added.","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"jordankanghm"},"content":"     * @param task The newly added task.","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"jordankanghm"},"content":"     * @param tasks The current accumulated tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"jordankanghm"},"content":"    public String getAddTaskMessage(Task task, TaskList tasks) {","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"jordankanghm"},"content":"        int listSize \u003d tasks.getTasks().size();","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"jordankanghm"},"content":"        String message \u003d \" Got it. I\u0027ve added this task: \\n   \" +","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"jordankanghm"},"content":"                task.getTaskType() + task.getStatusIcon() + \" \" + task.name + task.getTimeInfo() + \"\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"jordankanghm"},"content":"                \" Now you have \" + listSize + \" tasks in the list.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"jordankanghm"},"content":"        return message;","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"jordankanghm"},"content":"     * Returns a string containing the message for when a task is deleted.","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"jordankanghm"},"content":"     * @param task The newly deleted task.","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"jordankanghm"},"content":"     * @param tasks The current accumulated tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"jordankanghm"},"content":"    public String getDeleteTaskMessage(Task task, TaskList tasks){","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"jordankanghm"},"content":"        int listSize \u003d tasks.getTasks().size();","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"jordankanghm"},"content":"        String message \u003d \" Noted. I\u0027ve removed this task: \\n   \" +","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"jordankanghm"},"content":"                task.getTaskType() + task.getStatusIcon() + \" \" + task.name + task.getTimeInfo() + \"\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"jordankanghm"},"content":"                \" Now you have \" + listSize + \" tasks in the list.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"jordankanghm"},"content":"        return message;","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"jordankanghm"},"content":"     * Returns a string containing the message at the end of the program.","lastModifiedDate":"2023-09-13"},{"lineNumber":70,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"jordankanghm"},"content":"    public String getExitMessage() {","lastModifiedDate":"2023-09-13"},{"lineNumber":72,"author":{"gitId":"jordankanghm"},"content":"        String exitMessage \u003d \" Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"jordankanghm"},"content":"        return exitMessage;","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"jordankanghm"},"content":"     * Returns a string containing the message when a task is marked.","lastModifiedDate":"2023-09-13"},{"lineNumber":79,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"jordankanghm"},"content":"     * @param task The task which has been marked.","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"jordankanghm"},"content":"    public String getMarkedTaskMessage(Task task) {","lastModifiedDate":"2023-09-13"},{"lineNumber":83,"author":{"gitId":"jordankanghm"},"content":"        String message \u003d \" Nice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"jordankanghm"},"content":"                \"   \" + task.getStatusIcon() + \" \" + task.name + task.getTimeInfo();","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"jordankanghm"},"content":"        return message;","lastModifiedDate":"2023-09-06"},{"lineNumber":87,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"jordankanghm"},"content":"     * Returns a string containing the message when a task is marked.","lastModifiedDate":"2023-09-13"},{"lineNumber":91,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"jordankanghm"},"content":"     * @param task The task which has been marked.","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"jordankanghm"},"content":"    public String getUnmarkedTaskMessage(Task task) {","lastModifiedDate":"2023-09-13"},{"lineNumber":95,"author":{"gitId":"jordankanghm"},"content":"        String message \u003d \" OK. I\u0027ve marked this task as not done yet:\\n\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":96,"author":{"gitId":"jordankanghm"},"content":"                \"   \" + task.getStatusIcon() + \" \" + task.name + task.getTimeInfo();","lastModifiedDate":"2023-09-07"},{"lineNumber":97,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"jordankanghm"},"content":"        return message;","lastModifiedDate":"2023-09-06"},{"lineNumber":99,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"jordankanghm"},"content":"     * Returns a string containing the results matching the keyword given by the user.","lastModifiedDate":"2023-09-13"},{"lineNumber":103,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"jordankanghm"},"content":"     * @param results The ArrayList\u003cTask\u003e containing Tasks that match the keyword given.","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"jordankanghm"},"content":"    public String getFindResults(ArrayList\u003cTask\u003e results) {","lastModifiedDate":"2023-09-13"},{"lineNumber":107,"author":{"gitId":"jordankanghm"},"content":"        String message \u003d \" Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":108,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"jordankanghm"},"content":"        for (int i \u003d 0; i \u003c results.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"jordankanghm"},"content":"            Task task \u003d results.get(i);","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"jordankanghm"},"content":"            message +\u003d \"     \" + (i+1) + \".\" + task.getTaskType() + task.getStatusIcon() + \" \" + task.name +","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"jordankanghm"},"content":"                    \" \" + task.getTimeInfo() + \"\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"jordankanghm"},"content":"        return message;","lastModifiedDate":"2023-09-06"},{"lineNumber":116,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":118,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":119,"author":{"gitId":"jordankanghm"},"content":"     * Returns a string containing the message when a task is postponed.","lastModifiedDate":"2023-09-13"},{"lineNumber":120,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":121,"author":{"gitId":"jordankanghm"},"content":"     * @param task The postponed task.","lastModifiedDate":"2023-09-12"},{"lineNumber":122,"author":{"gitId":"jordankanghm"},"content":"     * @return A string representing hte postpone task message.","lastModifiedDate":"2023-09-12"},{"lineNumber":123,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":124,"author":{"gitId":"jordankanghm"},"content":"    public String getPostponeMessage(Task task) {","lastModifiedDate":"2023-09-13"},{"lineNumber":125,"author":{"gitId":"jordankanghm"},"content":"        String message \u003d \" OK. I\u0027ve changed the deadline of this task:\\n\" +","lastModifiedDate":"2023-09-12"},{"lineNumber":126,"author":{"gitId":"jordankanghm"},"content":"                \"   \" + task.getStatusIcon() + \" \" + task.name + task.getTimeInfo();","lastModifiedDate":"2023-09-12"},{"lineNumber":127,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":128,"author":{"gitId":"jordankanghm"},"content":"        return message;","lastModifiedDate":"2023-09-12"},{"lineNumber":129,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":130,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jordankanghm":130}},{"path":"src/main/java/seedu/dookie/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.dookie;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the Unmark Command.","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"    private Parser parser;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"     * Creates a new UnmarkCommand instance.","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"     * @param parser The parser being used.","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"     * @param tasks The accumulated tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"     * @param ui The Ui being used.","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"    public UnmarkCommand(Parser parser, TaskList tasks, Ui ui) {","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"     * Executes the code corresponding to an unmark command.","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"jordankanghm"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"jordankanghm"},"content":"     * @param cmd The user input.","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"jordankanghm"},"content":"     * @return A string containing the unmark task message.","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"jordankanghm"},"content":"     * @throws InvalidDescriptionException When there is only one word in the user input.","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"jordankanghm"},"content":"     * @throws InvalidIntegerException When the argument specified is not an integer.","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"jordankanghm"},"content":"     * @throws InvalidTaskNumberException When the integer specified is not a task number.","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"jordankanghm"},"content":"     * @throws InvalidDataFormatException When the format dookie.txt file is incorrect.","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"jordankanghm"},"content":"    public String execute(String cmd) throws InvalidDescriptionException,","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"jordankanghm"},"content":"            InvalidIntegerException,","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"jordankanghm"},"content":"            InvalidTaskNumberException,","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"jordankanghm"},"content":"            InvalidDataFormatException {","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"jordankanghm"},"content":"        if (parser.descriptionIsEmpty(cmd)) {","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"jordankanghm"},"content":"            throw new InvalidDescriptionException(\"unmark\");","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"jordankanghm"},"content":"        int taskNumber \u003d -1;","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"jordankanghm"},"content":"        String integer \u003d cmd.split(\" \", 2)[1];","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"jordankanghm"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"jordankanghm"},"content":"            taskNumber \u003d Integer.parseInt(integer);","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"jordankanghm"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"jordankanghm"},"content":"            throw new InvalidIntegerException();","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"jordankanghm"},"content":"        if (!parser.isValidTaskNumber(taskNumber)) {","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"jordankanghm"},"content":"            throw new InvalidTaskNumberException(taskNumber);","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"jordankanghm"},"content":"        Task task \u003d tasks.updateTasks(taskNumber - 1, \"UNMARK\");","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"jordankanghm"},"content":"        return ui.getUnmarkedTaskMessage(task);","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"jordankanghm":58}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"jordankanghm":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"seedu.dookie.MainWindow\"\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"jordankanghm":20}},{"path":"src/test/java/seedu/dookie/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.dookie;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"import java.io.*;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the StorageTest class.","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":" * The StorageTest class contains unit tests for methods in the Storage class.","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"public class StorageTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"     * Tests the save method in Storage.","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"jordankanghm"},"content":"    public void save_normalTaskArrayList_success(){","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"        // Create an arraylist to store dummy tasks","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"jordankanghm"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"        taskList.add(new ToDo(\"borrow books\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"jordankanghm"},"content":"        taskList.add(new Deadline(\"read books\",","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"jordankanghm"},"content":"                        LocalDateTime.of(2023, 8, 23, 18, 00)));","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"jordankanghm"},"content":"        taskList.add(new Event(\"return books\",","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"jordankanghm"},"content":"                        LocalDateTime.of(2023, 8, 23, 18, 00),","lastModifiedDate":"2023-09-11"},{"lineNumber":30,"author":{"gitId":"jordankanghm"},"content":"                        LocalDateTime.of(2023, 8, 23, 18, 01)));","lastModifiedDate":"2023-09-11"},{"lineNumber":31,"author":{"gitId":"jordankanghm"},"content":"        // Save the dummy array list into the file","lastModifiedDate":"2023-09-16"},{"lineNumber":32,"author":{"gitId":"jordankanghm"},"content":"        new Storage(\"./data/dookie.txt\").save(taskList);","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"jordankanghm"},"content":"        // The expected output","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"jordankanghm"},"content":"        String correctList \u003d \"1.[T][ ] borrow books \\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"jordankanghm"},"content":"                \"2.[D][ ] read books (by: August 23 2023, 6:00 PM)\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"jordankanghm"},"content":"                \"3.[E][ ] return books (from: August 23 2023, 6:00 PM to: August 23 2023, 6:01 PM)\";","lastModifiedDate":"2023-09-11"},{"lineNumber":38,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"jordankanghm"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"jordankanghm"},"content":"            // Load the tasks from the file","lastModifiedDate":"2023-09-16"},{"lineNumber":41,"author":{"gitId":"jordankanghm"},"content":"            ObjectInputStream inputStream \u003d new ObjectInputStream(new FileInputStream(\"./data/dookie.txt\"));","lastModifiedDate":"2023-09-16"},{"lineNumber":42,"author":{"gitId":"jordankanghm"},"content":"            ArrayList\u003cTask\u003e loadedTasks \u003d (ArrayList\u003cTask\u003e) inputStream.readObject();","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"jordankanghm"},"content":"            // Create a string to store the contents of the tasks","lastModifiedDate":"2023-09-16"},{"lineNumber":44,"author":{"gitId":"jordankanghm"},"content":"            String currentList \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"jordankanghm"},"content":"            for (int i \u003d 0; i \u003c loadedTasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"jordankanghm"},"content":"                currentList +\u003d i+1 + \".\" + loadedTasks.get(i).getTaskType() + loadedTasks.get(i).getStatusIcon() + \" \" +","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"jordankanghm"},"content":"                        loadedTasks.get(i).name + \" \" + loadedTasks.get(i).getTimeInfo();","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"jordankanghm"},"content":"                if (i !\u003d loadedTasks.size() - 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"jordankanghm"},"content":"                    currentList +\u003d \"\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"jordankanghm"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"jordankanghm"},"content":"            assertEquals(correctList, currentList);","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"jordankanghm"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"jordankanghm"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"jordankanghm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"jordankanghm"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"jordankanghm"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"jordankanghm"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"jordankanghm"},"content":"     * Tests the load method in Storage.","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"jordankanghm"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"jordankanghm"},"content":"    public void load_normalTaskArrayList_success(){","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"jordankanghm"},"content":"        // Create an arraylist of dummy tasks","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"jordankanghm"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"jordankanghm"},"content":"        taskList.add(new ToDo(\"borrow books\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"jordankanghm"},"content":"        taskList.add(new Deadline(\"read books\",","lastModifiedDate":"2023-09-11"},{"lineNumber":73,"author":{"gitId":"jordankanghm"},"content":"                        LocalDateTime.of(2023, 8, 23, 18, 00)));","lastModifiedDate":"2023-09-11"},{"lineNumber":74,"author":{"gitId":"jordankanghm"},"content":"        taskList.add(new Event(\"return books\",","lastModifiedDate":"2023-09-11"},{"lineNumber":75,"author":{"gitId":"jordankanghm"},"content":"                        LocalDateTime.of(2023, 8, 23, 18, 00),","lastModifiedDate":"2023-09-11"},{"lineNumber":76,"author":{"gitId":"jordankanghm"},"content":"                        LocalDateTime.of(2023, 8, 23, 18, 01)));","lastModifiedDate":"2023-09-11"},{"lineNumber":77,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"jordankanghm"},"content":"        // Save the list","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"jordankanghm"},"content":"        try (ObjectOutputStream outputStream \u003d new ObjectOutputStream(","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"jordankanghm"},"content":"                                                new FileOutputStream(\"./data/dookie.txt\", false))) {","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"jordankanghm"},"content":"            outputStream.writeObject(taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"jordankanghm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"jordankanghm"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"jordankanghm"},"content":"        // The expected output","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"jordankanghm"},"content":"        String correctList \u003d \"1.[T][ ] borrow books \\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"jordankanghm"},"content":"                \"2.[D][ ] read books (by: August 23 2023, 6:00 PM)\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"jordankanghm"},"content":"                \"3.[E][ ] return books (from: August 23 2023, 6:00 PM to: August 23 2023, 6:01 PM)\";","lastModifiedDate":"2023-09-11"},{"lineNumber":90,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"jordankanghm"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"jordankanghm"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new Storage(\"./data/dookie.txt\").load();","lastModifiedDate":"2023-09-16"},{"lineNumber":93,"author":{"gitId":"jordankanghm"},"content":"            String currentList \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"jordankanghm"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"jordankanghm"},"content":"                currentList +\u003d i+1 + \".\" + tasks.get(i).getTaskType() + tasks.get(i).getStatusIcon() + \" \" +","lastModifiedDate":"2023-09-20"},{"lineNumber":97,"author":{"gitId":"jordankanghm"},"content":"                        tasks.get(i).name + \" \" + tasks.get(i).getTimeInfo();","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"jordankanghm"},"content":"                if (i !\u003d tasks.size() - 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"jordankanghm"},"content":"                    currentList +\u003d \"\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"jordankanghm"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"jordankanghm"},"content":"            assertEquals(correctList, currentList);","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"jordankanghm"},"content":"        } catch (InvalidDataFormatException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"jordankanghm"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jordankanghm":109}},{"path":"src/test/java/seedu/dookie/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"package seedu.dookie;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"import java.io.*;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jordankanghm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"jordankanghm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"jordankanghm"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jordankanghm"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jordankanghm"},"content":" * Encapsulates the TaskListTest class.","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jordankanghm"},"content":" * The TaskListTest class contains unit tests for methods in the TaskList class.","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"jordankanghm"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"jordankanghm"},"content":"public class TaskListTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"jordankanghm"},"content":"     * Tests the addTask method in TaskList.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"jordankanghm"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"jordankanghm"},"content":"    public void addTask_normalTask_success() {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"jordankanghm"},"content":"        // Create a new Tasklist with a single task and save it.","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"jordankanghm"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"jordankanghm"},"content":"        taskList.addTask(new ToDo(\"borrow books\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"jordankanghm"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"jordankanghm"},"content":"            // Retrieve the tasklist from the saved file","lastModifiedDate":"2023-09-16"},{"lineNumber":28,"author":{"gitId":"jordankanghm"},"content":"            ArrayList\u003cTask\u003e currentTasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"jordankanghm"},"content":"            ObjectInputStream inputStream \u003d new ObjectInputStream(new FileInputStream(\"./data/dookie.txt\"));","lastModifiedDate":"2023-09-16"},{"lineNumber":30,"author":{"gitId":"jordankanghm"},"content":"            currentTasks \u003d (ArrayList\u003cTask\u003e) inputStream.readObject();","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"jordankanghm"},"content":"            // The expected output","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"jordankanghm"},"content":"            String correctList \u003d \"1.[T][ ] borrow books \";","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"jordankanghm"},"content":"            String currentList \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"jordankanghm"},"content":"            // Obtain the string representing the current tasks in the tasklist","lastModifiedDate":"2023-09-16"},{"lineNumber":37,"author":{"gitId":"jordankanghm"},"content":"            for (int i \u003d 0; i \u003c currentTasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"jordankanghm"},"content":"                currentList +\u003d i + 1 + \".\" + currentTasks.get(i).getTaskType() + currentTasks.get(i).getStatusIcon() +","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"jordankanghm"},"content":"                        \" \" + currentTasks.get(i).name + \" \" + currentTasks.get(i).getTimeInfo();","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"jordankanghm"},"content":"            assertEquals(correctList, currentList);","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"jordankanghm"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"jordankanghm"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"jordankanghm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"jordankanghm"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"jordankanghm"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"jordankanghm"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"jordankanghm"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"jordankanghm"},"content":"     * Tests the markOrDeleteTask method in TaskList.","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"jordankanghm"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"jordankanghm"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"jordankanghm"},"content":"    public void updateTasks_markOne_success() {","lastModifiedDate":"2023-09-16"},{"lineNumber":57,"author":{"gitId":"jordankanghm"},"content":"        // Create a new Tasklist with a single task","lastModifiedDate":"2023-09-16"},{"lineNumber":58,"author":{"gitId":"jordankanghm"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"jordankanghm"},"content":"        tasks.add(new ToDo(\"borrow books\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"jordankanghm"},"content":"        TaskList taskList \u003d new TaskList(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":62,"author":{"gitId":"jordankanghm"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"jordankanghm"},"content":"            // Try implementing the method","lastModifiedDate":"2023-09-16"},{"lineNumber":64,"author":{"gitId":"jordankanghm"},"content":"            taskList.updateTasks(0, \"MARK\");","lastModifiedDate":"2023-09-16"},{"lineNumber":65,"author":{"gitId":"jordankanghm"},"content":"            ArrayList\u003cTask\u003e currentTasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"jordankanghm"},"content":"            // Read the tasks saved from the method","lastModifiedDate":"2023-09-16"},{"lineNumber":67,"author":{"gitId":"jordankanghm"},"content":"            ObjectInputStream inputStream \u003d new ObjectInputStream(new FileInputStream(\"./data/dookie.txt\"));","lastModifiedDate":"2023-09-16"},{"lineNumber":68,"author":{"gitId":"jordankanghm"},"content":"            currentTasks \u003d (ArrayList\u003cTask\u003e) inputStream.readObject();","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"jordankanghm"},"content":"            // The expected output","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"jordankanghm"},"content":"            String correctList \u003d \"1.[T][X] borrow books \";","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"jordankanghm"},"content":"            String currentList \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"jordankanghm"},"content":"            // Obtain the string representing the current tasks in the tasklist","lastModifiedDate":"2023-09-16"},{"lineNumber":75,"author":{"gitId":"jordankanghm"},"content":"            for (int i \u003d 0; i \u003c currentTasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"jordankanghm"},"content":"                currentList +\u003d i + 1 + \".\" + currentTasks.get(i).getTaskType() + currentTasks.get(i).getStatusIcon() +","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"jordankanghm"},"content":"                        \" \" + currentTasks.get(i).name + \" \" + currentTasks.get(i).getTimeInfo();","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"jordankanghm"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"jordankanghm"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"jordankanghm"},"content":"            assertEquals(correctList, currentList);","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"jordankanghm"},"content":"        } catch (InvalidDataFormatException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"jordankanghm"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"jordankanghm"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"jordankanghm"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"jordankanghm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"jordankanghm"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"jordankanghm"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"jordankanghm"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"jordankanghm"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"jordankanghm"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"jordankanghm"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jordankanghm":91}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jordankanghm"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"jordankanghm"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"jordankanghm"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"jordankanghm"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"jordankanghm"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jordankanghm":5}},{"path":"data/dookie.txt","fileType":"txt","isBinary":true,"lines":[],"authorContributionMap":{"jordankanghm":0}}]
