[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Kevin-Liusx"},"content":"# Kevin project template","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Kevin-Liusx"},"content":"3. After that, locate the `src/main/java/Kevin.java` file, right-click it, and choose `Run Kevin.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Kevin-Liusx":2,"-":22}},{"path":"src/main/java/Database.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Kevin-Liusx"},"content":"[T][X] borrow book","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"Kevin-Liusx"},"content":"[E][ ] project meeting (from: Mon 2pm to: 4pm))","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"Kevin-Liusx"},"content":"[T][X] burn book","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"Kevin-Liusx"},"content":"[T][ ] Collect clothes","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"Kevin-Liusx":4}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kevin-Liusx"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Kevin-Liusx"},"content":"    private String day;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Kevin-Liusx"},"content":"    private Deadline(String description, String day) {","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Kevin-Liusx"},"content":"        super(description);","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Kevin-Liusx"},"content":"        this.day \u003d day;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Kevin-Liusx"},"content":"    public Deadline(String description, String day, boolean isDone) {","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"Kevin-Liusx"},"content":"        super(description);","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"Kevin-Liusx"},"content":"        this.day \u003d day;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"Kevin-Liusx"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"Kevin-Liusx"},"content":"    public static Deadline createNewDeadlineTask(String description) {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Kevin-Liusx"},"content":"        String[] splitMessage \u003d description.split(\" /by \");","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Kevin-Liusx"},"content":"        return new Deadline(splitMessage[0], splitMessage[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Kevin-Liusx"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Kevin-Liusx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Kevin-Liusx"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.day + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Kevin-Liusx"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Kevin-Liusx":25}},{"path":"src/main/java/DescriptionIncompleteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kevin-Liusx"},"content":"public class DescriptionIncompleteException extends Exception{","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Kevin-Liusx"},"content":"    public DescriptionIncompleteException(String errorMessage) {","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Kevin-Liusx"},"content":"        super(errorMessage);","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Kevin-Liusx"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Kevin-Liusx":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kevin-Liusx"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Kevin-Liusx"},"content":"    private String startTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Kevin-Liusx"},"content":"    private String endTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Kevin-Liusx"},"content":"    private Event(String description, String startTime, String endTime) {","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Kevin-Liusx"},"content":"        super(description);","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Kevin-Liusx"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Kevin-Liusx"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Kevin-Liusx"},"content":"    public Event(String description, String startTime, String endTime, boolean isDone) {","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"Kevin-Liusx"},"content":"        super(description);","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"Kevin-Liusx"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"Kevin-Liusx"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"Kevin-Liusx"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"Kevin-Liusx"},"content":"    public static Event createNewEventTask(String description) {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Kevin-Liusx"},"content":"        String[] splitMessage1 \u003d description.split(\" /from \");","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Kevin-Liusx"},"content":"        String[] splitMessage2 \u003d splitMessage1[1].split(\" /to \");","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Kevin-Liusx"},"content":"        return new Event(splitMessage1[0], splitMessage2[0], splitMessage2[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Kevin-Liusx"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Kevin-Liusx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Kevin-Liusx"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.startTime + \" to: \" + this.endTime + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Kevin-Liusx"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Kevin-Liusx":28}},{"path":"src/main/java/IllegalCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kevin-Liusx"},"content":"public class IllegalCommandException extends Exception{","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Kevin-Liusx"},"content":"    public IllegalCommandException(String errorMessage) {","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Kevin-Liusx"},"content":"        super(errorMessage);","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Kevin-Liusx"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Kevin-Liusx":5}},{"path":"src/main/java/Kevin.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kevin-Liusx"},"content":"import java.io.File;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"Kevin-Liusx"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"Kevin-Liusx"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"Kevin-Liusx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"Kevin-Liusx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"Kevin-Liusx"},"content":"import java.util.List;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"Kevin-Liusx"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Kevin-Liusx"},"content":"public class Kevin{","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"Kevin-Liusx"},"content":"    private  static final String filePath \u003d \"src/main/java/Database.txt\";","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"Kevin-Liusx"},"content":"    private static final List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"Kevin-Liusx"},"content":"    private static final String line \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"Kevin-Liusx"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"Kevin-Liusx"},"content":"        Kevin.printGreetMessage();","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"Kevin-Liusx"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"Kevin-Liusx"},"content":"            Kevin.loadData();","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"Kevin-Liusx"},"content":"        } catch (FileNotFoundException fileException) {","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"Kevin-Liusx"},"content":"            Kevin.createNewFile();","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"Kevin-Liusx"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"Kevin-Liusx"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"Kevin-Liusx"},"content":"        String userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"Kevin-Liusx"},"content":"        label:","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Kevin-Liusx"},"content":"        while (true) {","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"Kevin-Liusx"},"content":"            // Prints out the bye message","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"Kevin-Liusx"},"content":"            String[] splitMessage \u003d userInput.split(\" \");","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"Kevin-Liusx"},"content":"            String instruction \u003d splitMessage[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Kevin-Liusx"},"content":"            switch (instruction) {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Kevin-Liusx"},"content":"                case \"bye\":","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"Kevin-Liusx"},"content":"                    Kevin.printByeMessage();","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"Kevin-Liusx"},"content":"                    break label;","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"Kevin-Liusx"},"content":"                case \"list\":","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Kevin-Liusx"},"content":"                    // Prints out the list","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"Kevin-Liusx"},"content":"                    Kevin.listAllTasks();","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"Kevin-Liusx"},"content":"                    break;","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"Kevin-Liusx"},"content":"                case \"mark\": {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Kevin-Liusx"},"content":"                    Kevin.markTaskDone(splitMessage[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"Kevin-Liusx"},"content":"                    break;","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"Kevin-Liusx"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"Kevin-Liusx"},"content":"                case \"unmark\": {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"Kevin-Liusx"},"content":"                    Kevin.unmarkTaskDone(splitMessage[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"Kevin-Liusx"},"content":"                    break;","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"Kevin-Liusx"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"Kevin-Liusx"},"content":"                case \"delete\": {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"Kevin-Liusx"},"content":"                    try {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"Kevin-Liusx"},"content":"                        Kevin.deleteTask(splitMessage[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"Kevin-Liusx"},"content":"                    } catch (TaskListEmptyException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"Kevin-Liusx"},"content":"                        System.out.println(line);","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"Kevin-Liusx"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"Kevin-Liusx"},"content":"                        System.out.println(line);","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"Kevin-Liusx"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"Kevin-Liusx"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"Kevin-Liusx"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"Kevin-Liusx"},"content":"                default:","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"Kevin-Liusx"},"content":"                    // Add new tasks to the task list","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"Kevin-Liusx"},"content":"                    try {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"Kevin-Liusx"},"content":"                        Kevin.addNewTask(userInput);","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"Kevin-Liusx"},"content":"                    } catch (DescriptionIncompleteException | IllegalCommandException e1) {","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"Kevin-Liusx"},"content":"                        System.out.println(line);","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"Kevin-Liusx"},"content":"                        System.out.println(e1.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"Kevin-Liusx"},"content":"                        System.out.println(line);","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"Kevin-Liusx"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"Kevin-Liusx"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"Kevin-Liusx"},"content":"            userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"Kevin-Liusx"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"Kevin-Liusx"},"content":"        scanner.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"Kevin-Liusx"},"content":"    public static void printGreetMessage() {","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"Kevin-Liusx"},"content":"        String greet \u003d line + \"\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"Kevin-Liusx"},"content":"                + \"Hello! I\u0027m Kevin.\\n\"","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"Kevin-Liusx"},"content":"                + \"What can I do for you?\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"Kevin-Liusx"},"content":"                + line;","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"Kevin-Liusx"},"content":"        System.out.println(greet);","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"Kevin-Liusx"},"content":"    public static void printByeMessage() {","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"Kevin-Liusx"},"content":"        String bye \u003d line + \"\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"Kevin-Liusx"},"content":"                + \"Bye. Hope to see you again soon!\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"Kevin-Liusx"},"content":"                + line;","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"Kevin-Liusx"},"content":"        System.out.println(bye);","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"Kevin-Liusx"},"content":"    public static void listAllTasks() {","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"Kevin-Liusx"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"Kevin-Liusx"},"content":"        System.out.println(line + \"\\n\" + \"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"Kevin-Liusx"},"content":"        for (Task task: taskList) {","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"Kevin-Liusx"},"content":"            String string \u003d String.format(\"%d.%s\", count, task);","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"Kevin-Liusx"},"content":"            System.out.println(string);","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"Kevin-Liusx"},"content":"            count++;","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"Kevin-Liusx"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"Kevin-Liusx"},"content":"        System.out.println(line);","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"Kevin-Liusx"},"content":"    public static void markTaskDone(String taskNumber) {","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"Kevin-Liusx"},"content":"        Task currentTask \u003d taskList.get(Integer.parseInt(taskNumber) - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"Kevin-Liusx"},"content":"        currentTask.setIsDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"Kevin-Liusx"},"content":"        Kevin.rewriteFile();","lastModifiedDate":"2023-09-06"},{"lineNumber":99,"author":{"gitId":"Kevin-Liusx"},"content":"        System.out.println(line);","lastModifiedDate":"2023-09-06"},{"lineNumber":100,"author":{"gitId":"Kevin-Liusx"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + currentTask);","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"Kevin-Liusx"},"content":"        System.out.println(line);","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"Kevin-Liusx"},"content":"    public static void unmarkTaskDone(String taskNumber) {","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"Kevin-Liusx"},"content":"        Task currentTask \u003d taskList.get(Integer.parseInt(taskNumber) - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"Kevin-Liusx"},"content":"        currentTask.setNotDone();","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"Kevin-Liusx"},"content":"        System.out.println(line);","lastModifiedDate":"2023-09-06"},{"lineNumber":108,"author":{"gitId":"Kevin-Liusx"},"content":"        Kevin.rewriteFile();","lastModifiedDate":"2023-09-06"},{"lineNumber":109,"author":{"gitId":"Kevin-Liusx"},"content":"        System.out.println(\"Nice! I\u0027ve unmarked this task as done:\\n\" + currentTask);","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"Kevin-Liusx"},"content":"        System.out.println(line);","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"Kevin-Liusx"},"content":"    public static void addNewTask(String userInput) throws DescriptionIncompleteException, IllegalCommandException{","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"Kevin-Liusx"},"content":"        String[] splitMessage \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"Kevin-Liusx"},"content":"        String instruction \u003d splitMessage[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"Kevin-Liusx"},"content":"        Task task \u003d null;","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"Kevin-Liusx"},"content":"        if (!(instruction.equals(\"todo\")||instruction.equals(\"deadline\")||instruction.equals(\"event\"))) {","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"Kevin-Liusx"},"content":"            throw new IllegalCommandException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-()\");","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"Kevin-Liusx"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"Kevin-Liusx"},"content":"        if (splitMessage.length \u003c 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"Kevin-Liusx"},"content":"            throw new DescriptionIncompleteException(\"OOPS!!! The description of an instruction cannot be empty.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"Kevin-Liusx"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"Kevin-Liusx"},"content":"        switch (instruction) {","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"Kevin-Liusx"},"content":"            case \"todo\":","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"Kevin-Liusx"},"content":"                task \u003d Todo.createNewTodoTask(splitMessage[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"Kevin-Liusx"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"Kevin-Liusx"},"content":"            case \"deadline\":","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"Kevin-Liusx"},"content":"                task \u003d Deadline.createNewDeadlineTask(splitMessage[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"Kevin-Liusx"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"Kevin-Liusx"},"content":"            case \"event\":","lastModifiedDate":"2023-09-03"},{"lineNumber":134,"author":{"gitId":"Kevin-Liusx"},"content":"                task \u003d Event.createNewEventTask(splitMessage[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"Kevin-Liusx"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"Kevin-Liusx"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"Kevin-Liusx"},"content":"        taskList.add(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":139,"author":{"gitId":"Kevin-Liusx"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":140,"author":{"gitId":"Kevin-Liusx"},"content":"            Kevin.writeToFile(task.toString());","lastModifiedDate":"2023-09-06"},{"lineNumber":141,"author":{"gitId":"Kevin-Liusx"},"content":"        } catch (IOException error) {","lastModifiedDate":"2023-09-06"},{"lineNumber":142,"author":{"gitId":"Kevin-Liusx"},"content":"            System.out.println(error.getMessage());","lastModifiedDate":"2023-09-06"},{"lineNumber":143,"author":{"gitId":"Kevin-Liusx"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":144,"author":{"gitId":"Kevin-Liusx"},"content":"        System.out.println(line);","lastModifiedDate":"2023-08-29"},{"lineNumber":145,"author":{"gitId":"Kevin-Liusx"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + task);","lastModifiedDate":"2023-08-29"},{"lineNumber":146,"author":{"gitId":"Kevin-Liusx"},"content":"        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":147,"author":{"gitId":"Kevin-Liusx"},"content":"        System.out.println(line);","lastModifiedDate":"2023-08-29"},{"lineNumber":148,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":149,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"Kevin-Liusx"},"content":"    public static void deleteTask(String taskNumber) throws TaskListEmptyException {","lastModifiedDate":"2023-08-30"},{"lineNumber":151,"author":{"gitId":"Kevin-Liusx"},"content":"        if (taskList.size() \u003c 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":152,"author":{"gitId":"Kevin-Liusx"},"content":"            throw new TaskListEmptyException(\"OOPS!!! You cannot delete an empty list.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":153,"author":{"gitId":"Kevin-Liusx"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":154,"author":{"gitId":"Kevin-Liusx"},"content":"        int number \u003d Integer.parseInt(taskNumber);","lastModifiedDate":"2023-08-30"},{"lineNumber":155,"author":{"gitId":"Kevin-Liusx"},"content":"        System.out.println(line);","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"Kevin-Liusx"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":157,"author":{"gitId":"Kevin-Liusx"},"content":"        System.out.println(taskList.get(number - 1));","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"Kevin-Liusx"},"content":"        taskList.remove(number - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":159,"author":{"gitId":"Kevin-Liusx"},"content":"        // Update the file","lastModifiedDate":"2023-09-06"},{"lineNumber":160,"author":{"gitId":"Kevin-Liusx"},"content":"        Kevin.rewriteFile();","lastModifiedDate":"2023-09-06"},{"lineNumber":161,"author":{"gitId":"Kevin-Liusx"},"content":"        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":162,"author":{"gitId":"Kevin-Liusx"},"content":"        System.out.println(line);","lastModifiedDate":"2023-08-30"},{"lineNumber":163,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":164,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":165,"author":{"gitId":"Kevin-Liusx"},"content":"    public static void loadData() throws FileNotFoundException {","lastModifiedDate":"2023-09-06"},{"lineNumber":166,"author":{"gitId":"Kevin-Liusx"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-09-06"},{"lineNumber":167,"author":{"gitId":"Kevin-Liusx"},"content":"        Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-09-06"},{"lineNumber":168,"author":{"gitId":"Kevin-Liusx"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2023-09-06"},{"lineNumber":169,"author":{"gitId":"Kevin-Liusx"},"content":"            String nextLine \u003d scanner.nextLine();","lastModifiedDate":"2023-09-06"},{"lineNumber":170,"author":{"gitId":"Kevin-Liusx"},"content":"            Kevin.readString(nextLine);","lastModifiedDate":"2023-09-06"},{"lineNumber":171,"author":{"gitId":"Kevin-Liusx"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":172,"author":{"gitId":"Kevin-Liusx"},"content":"        scanner.close();","lastModifiedDate":"2023-09-06"},{"lineNumber":173,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":174,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":175,"author":{"gitId":"Kevin-Liusx"},"content":"    public static void readString(String string) {","lastModifiedDate":"2023-09-06"},{"lineNumber":176,"author":{"gitId":"Kevin-Liusx"},"content":"        String string1 \u003d string.substring(0,6);","lastModifiedDate":"2023-09-06"},{"lineNumber":177,"author":{"gitId":"Kevin-Liusx"},"content":"        char taskType \u003d string1.charAt(1);","lastModifiedDate":"2023-09-06"},{"lineNumber":178,"author":{"gitId":"Kevin-Liusx"},"content":"        boolean isDone \u003d string1.charAt(4) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2023-09-06"},{"lineNumber":179,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":180,"author":{"gitId":"Kevin-Liusx"},"content":"        if (taskType \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2023-09-06"},{"lineNumber":181,"author":{"gitId":"Kevin-Liusx"},"content":"            String description \u003d string.substring(7);","lastModifiedDate":"2023-09-06"},{"lineNumber":182,"author":{"gitId":"Kevin-Liusx"},"content":"            taskList.add(new Todo(description, isDone));","lastModifiedDate":"2023-09-06"},{"lineNumber":183,"author":{"gitId":"Kevin-Liusx"},"content":"        } else if (taskType \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2023-09-06"},{"lineNumber":184,"author":{"gitId":"Kevin-Liusx"},"content":"            String[] split \u003d string.split(\" \\\\(by: \");","lastModifiedDate":"2023-09-06"},{"lineNumber":185,"author":{"gitId":"Kevin-Liusx"},"content":"            String description \u003d split[0].substring(7);","lastModifiedDate":"2023-09-06"},{"lineNumber":186,"author":{"gitId":"Kevin-Liusx"},"content":"            String day \u003d split[1].substring(0, split[1].length() - 1);","lastModifiedDate":"2023-09-06"},{"lineNumber":187,"author":{"gitId":"Kevin-Liusx"},"content":"            taskList.add(new Deadline(description, day, isDone));","lastModifiedDate":"2023-09-06"},{"lineNumber":188,"author":{"gitId":"Kevin-Liusx"},"content":"        } else {","lastModifiedDate":"2023-09-06"},{"lineNumber":189,"author":{"gitId":"Kevin-Liusx"},"content":"            String[] split1 \u003d string.split(\" \\\\(from: \");","lastModifiedDate":"2023-09-06"},{"lineNumber":190,"author":{"gitId":"Kevin-Liusx"},"content":"            String[] split2 \u003d split1[1].split(\" to: \");","lastModifiedDate":"2023-09-06"},{"lineNumber":191,"author":{"gitId":"Kevin-Liusx"},"content":"            String description \u003d split1[0].substring(7);","lastModifiedDate":"2023-09-06"},{"lineNumber":192,"author":{"gitId":"Kevin-Liusx"},"content":"            String start \u003d split2[0];","lastModifiedDate":"2023-09-06"},{"lineNumber":193,"author":{"gitId":"Kevin-Liusx"},"content":"            String end \u003d split2[1];","lastModifiedDate":"2023-09-06"},{"lineNumber":194,"author":{"gitId":"Kevin-Liusx"},"content":"            taskList.add(new Event(description, start, end, isDone));","lastModifiedDate":"2023-09-06"},{"lineNumber":195,"author":{"gitId":"Kevin-Liusx"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":196,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":197,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":198,"author":{"gitId":"Kevin-Liusx"},"content":"    public static void writeToFile(String taskDetail) throws IOException {","lastModifiedDate":"2023-09-06"},{"lineNumber":199,"author":{"gitId":"Kevin-Liusx"},"content":"        FileWriter fileWriter \u003d new FileWriter(filePath, true);","lastModifiedDate":"2023-09-06"},{"lineNumber":200,"author":{"gitId":"Kevin-Liusx"},"content":"        fileWriter.write(taskDetail + \"\\n\");","lastModifiedDate":"2023-09-06"},{"lineNumber":201,"author":{"gitId":"Kevin-Liusx"},"content":"        fileWriter.close();","lastModifiedDate":"2023-09-06"},{"lineNumber":202,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":203,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":204,"author":{"gitId":"Kevin-Liusx"},"content":"    public static void createNewFile(){","lastModifiedDate":"2023-09-06"},{"lineNumber":205,"author":{"gitId":"Kevin-Liusx"},"content":"        System.out.println(\"We have detected that you\u0027re missing the database file\");","lastModifiedDate":"2023-09-06"},{"lineNumber":206,"author":{"gitId":"Kevin-Liusx"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-09-06"},{"lineNumber":207,"author":{"gitId":"Kevin-Liusx"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":208,"author":{"gitId":"Kevin-Liusx"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2023-09-06"},{"lineNumber":209,"author":{"gitId":"Kevin-Liusx"},"content":"                System.out.println(\"File created successfully\");","lastModifiedDate":"2023-09-06"},{"lineNumber":210,"author":{"gitId":"Kevin-Liusx"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":211,"author":{"gitId":"Kevin-Liusx"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2023-09-06"},{"lineNumber":212,"author":{"gitId":"Kevin-Liusx"},"content":"            System.out.println(exception.getMessage());","lastModifiedDate":"2023-09-06"},{"lineNumber":213,"author":{"gitId":"Kevin-Liusx"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":214,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":215,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":216,"author":{"gitId":"Kevin-Liusx"},"content":"    public static void rewriteFile() {","lastModifiedDate":"2023-09-06"},{"lineNumber":217,"author":{"gitId":"Kevin-Liusx"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":218,"author":{"gitId":"Kevin-Liusx"},"content":"            FileWriter fileWriter \u003d new FileWriter(filePath);","lastModifiedDate":"2023-09-06"},{"lineNumber":219,"author":{"gitId":"Kevin-Liusx"},"content":"            for (Task task: taskList) {","lastModifiedDate":"2023-09-06"},{"lineNumber":220,"author":{"gitId":"Kevin-Liusx"},"content":"                fileWriter.write(task.toString() + \"\\n\");","lastModifiedDate":"2023-09-06"},{"lineNumber":221,"author":{"gitId":"Kevin-Liusx"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":222,"author":{"gitId":"Kevin-Liusx"},"content":"            fileWriter.close();","lastModifiedDate":"2023-09-06"},{"lineNumber":223,"author":{"gitId":"Kevin-Liusx"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2023-09-06"},{"lineNumber":224,"author":{"gitId":"Kevin-Liusx"},"content":"            System.out.println(exception.getMessage());","lastModifiedDate":"2023-09-06"},{"lineNumber":225,"author":{"gitId":"Kevin-Liusx"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":226,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":227,"author":{"gitId":"Kevin-Liusx"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Kevin-Liusx":227}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kevin-Liusx"},"content":"public class Task {","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Kevin-Liusx"},"content":"    protected String description;","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Kevin-Liusx"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"Kevin-Liusx"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"Kevin-Liusx"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"Kevin-Liusx"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"Kevin-Liusx"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"Kevin-Liusx"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"Kevin-Liusx"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"Kevin-Liusx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"Kevin-Liusx"},"content":"        return \"[\" + this.getStatusIcon() + \"]\" + \" \" + this.description;","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"Kevin-Liusx"},"content":"    public void setIsDone() {","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"Kevin-Liusx"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"Kevin-Liusx"},"content":"    public void setNotDone() {","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"Kevin-Liusx"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"Kevin-Liusx"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Kevin-Liusx":27}},{"path":"src/main/java/TaskListEmptyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kevin-Liusx"},"content":"public class TaskListEmptyException extends Exception{","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Kevin-Liusx"},"content":"    public TaskListEmptyException(String errorMessage) {","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Kevin-Liusx"},"content":"        super(errorMessage);","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Kevin-Liusx"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Kevin-Liusx":5}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kevin-Liusx"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Kevin-Liusx"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Kevin-Liusx"},"content":"        super(description);","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Kevin-Liusx"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"Kevin-Liusx"},"content":"        super(description);","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"Kevin-Liusx"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"Kevin-Liusx"},"content":"    public static Todo createNewTodoTask(String description) {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Kevin-Liusx"},"content":"        return new Todo(description);","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Kevin-Liusx"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Kevin-Liusx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Kevin-Liusx"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Kevin-Liusx"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Kevin-Liusx":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Kevin-Liusx"},"content":"todo borrow book","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Kevin-Liusx"},"content":"list","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"Kevin-Liusx"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Kevin-Liusx"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Kevin-Liusx"},"content":"mark 1","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Kevin-Liusx"},"content":"unmark 1","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"Kevin-Liusx"},"content":"todo","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"Kevin-Liusx"},"content":"bye","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"Kevin-Liusx":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Kevin-Liusx"},"content":"java -classpath ..\\bin Kevin \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Kevin-Liusx":1,"-":20}}]
