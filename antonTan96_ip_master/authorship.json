[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"antonTan96"},"content":"# Cracker project template","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"antonTan96"},"content":"3. After that, locate the `src/main/java/Cracker.java` file, right-click it, and choose `Run Cracker.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"antonTan96":2,"-":22}},{"path":"src/main/java/Cracker.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antonTan96"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"antonTan96"},"content":"public class Cracker {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"antonTan96"},"content":"    private TodoList list \u003d new TodoList();","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"antonTan96"},"content":"    private Reply reply \u003d new Reply();","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"antonTan96"},"content":"    public void startService(){","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"antonTan96"},"content":"        boolean talking \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"antonTan96"},"content":"        reply.echo(\"What can I do for you?\");","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"antonTan96"},"content":"        while(talking){","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"antonTan96"},"content":"            Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"antonTan96"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"antonTan96"},"content":"            if(input.startsWith(\"mark\")){","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"antonTan96"},"content":"                int index \u003d Integer.parseInt(input.replace(\"mark\",\"\").trim()) - 1;","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"antonTan96"},"content":"                list.markDone(index);","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"antonTan96"},"content":"                reply.echo(\"Nice! I\u0027ve marked this task as done: \\n  \" + list.getTask(index));","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"antonTan96"},"content":"            } else if(input.startsWith(\"unmark\")){","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"antonTan96"},"content":"                int index \u003d Integer.parseInt(input.replace(\"unmark\",\"\").trim()) - 1;","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"antonTan96"},"content":"                list.markunDone(index);","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"antonTan96"},"content":"                reply.echo(\"Ok, I\u0027ve marked this task as not done yet: \\n  \" + list.getTask(index));","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"antonTan96"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"antonTan96"},"content":"            else {","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"antonTan96"},"content":"                switch (input){","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"antonTan96"},"content":"                    case \"bye\":","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"antonTan96"},"content":"                        sc.close();","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"antonTan96"},"content":"                        talking \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"antonTan96"},"content":"                        break;","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"antonTan96"},"content":"                    case \"list\":","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"antonTan96"},"content":"                        reply.iterate(list);","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"antonTan96"},"content":"                        break;","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"antonTan96"},"content":"                    default:","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"antonTan96"},"content":"                        list.store(input);","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"antonTan96"},"content":"                        reply.echo(\"added: \" + input);","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"antonTan96"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"antonTan96"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"antonTan96"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"antonTan96"},"content":"        reply.echo(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"antonTan96"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"antonTan96"},"content":"        Cracker bot \u003d new Cracker();","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"antonTan96"},"content":"        bot.startService();","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"antonTan96"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"antonTan96":55}},{"path":"src/main/java/Reply.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"antonTan96"},"content":"public class Reply {","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"antonTan96"},"content":"    private String line \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"antonTan96"},"content":"    public void echo(String content){","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"antonTan96"},"content":"        System.out.println(line);","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"antonTan96"},"content":"        System.out.println(content);","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"antonTan96"},"content":"        System.out.println(line);","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"antonTan96"},"content":"    public void iterate(TodoList list){","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"antonTan96"},"content":"        System.out.println(line);","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"antonTan96"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"antonTan96"},"content":"        list.iterate();","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"antonTan96"},"content":"        System.out.println(line);","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"antonTan96"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"antonTan96":19}},{"path":"src/main/java/TodoList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antonTan96"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"antonTan96"},"content":"public class TodoList {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"antonTan96"},"content":"    private class Task{","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"antonTan96"},"content":"        private boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"antonTan96"},"content":"        private String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"antonTan96"},"content":"        Task(String s){","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"antonTan96"},"content":"            this.description \u003d s;","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"antonTan96"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"antonTan96"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"antonTan96"},"content":"        public void markDone(){","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"antonTan96"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"antonTan96"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"antonTan96"},"content":"        public void markUndone(){","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"antonTan96"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"antonTan96"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"antonTan96"},"content":"        public String toString(){","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"antonTan96"},"content":"            return \"[\" + (isDone?\"X\":\" \") + \"] \" + description;","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"antonTan96"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"antonTan96"},"content":"    ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"antonTan96"},"content":"    TodoList(){","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"antonTan96"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"antonTan96"},"content":"    public void store(String s){","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"antonTan96"},"content":"        list.add(new Task(s));","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"antonTan96"},"content":"    public void iterate(){","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"antonTan96"},"content":"        for(int i \u003d 0; i \u003c list.size();i++){","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"antonTan96"},"content":"            int index \u003d i+1;","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"antonTan96"},"content":"            System.out.println(index + \". \" + list.get(i).toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"antonTan96"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"antonTan96"},"content":"    public void markDone(int index){","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"antonTan96"},"content":"        list.get(index).markDone();","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"antonTan96"},"content":"    public void markunDone(int index){","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"antonTan96"},"content":"        list.get(index).markUndone();","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"antonTan96"},"content":"    public String getTask(int index){","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"antonTan96"},"content":"        return list.get(index).toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"antonTan96"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"antonTan96":49}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"antonTan96"},"content":"java -classpath ..\\bin Cracker \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"antonTan96":1,"-":20}}]
