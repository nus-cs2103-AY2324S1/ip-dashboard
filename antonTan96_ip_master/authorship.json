[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"antonTan96"},"content":"# Cracker project template","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"antonTan96"},"content":"3. After that, locate the `src/main/java/Cracker.java` file, right-click it, and choose `Run Cracker.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"antonTan96":2,"-":22}},{"path":"src/main/java/Cracker.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antonTan96"},"content":"import Exceptions.*;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"antonTan96"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"antonTan96"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"antonTan96"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"antonTan96"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"antonTan96"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"antonTan96"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"antonTan96"},"content":"public class Cracker {","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"antonTan96"},"content":"    private TodoList list \u003d null;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"antonTan96"},"content":"    private Reply reply \u003d new Reply();","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"antonTan96"},"content":"    enum Type {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"antonTan96"},"content":"        MARK,","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"antonTan96"},"content":"        TASK,","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"antonTan96"},"content":"        DELETE","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"antonTan96"},"content":"    private static File getfile(){","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"antonTan96"},"content":"        File file \u003d new File(\"./data\");","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"antonTan96"},"content":"        try{","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"antonTan96"},"content":"            file.mkdirs();","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"antonTan96"},"content":"            file \u003d new File(\"./data/list.txt\");","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"antonTan96"},"content":"            file.createNewFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"antonTan96"},"content":"        } catch(Exception e){","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"antonTan96"},"content":"            System.out.println(e);","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"antonTan96"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"antonTan96"},"content":"        return file;","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"antonTan96"},"content":"    public void startService(){","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"antonTan96"},"content":"        boolean talking \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"antonTan96"},"content":"        FileWriter writer \u003d null;","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"antonTan96"},"content":"        try{","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"antonTan96"},"content":"            File taskFile \u003d Cracker.getfile();","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"antonTan96"},"content":"            Scanner setup \u003d new Scanner(taskFile);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"antonTan96"},"content":"            setup.hasNext();","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"antonTan96"},"content":"            writer \u003d new FileWriter(taskFile);","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"antonTan96"},"content":"            list \u003d new TodoList(writer);","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"antonTan96"},"content":"            while(setup.hasNext()){","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"antonTan96"},"content":"                String task \u003d setup.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"antonTan96"},"content":"                list.load(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"antonTan96"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"antonTan96"},"content":"            setup.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"antonTan96"},"content":"        } catch (Exception e){","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"antonTan96"},"content":"            System.out.println(\"This should not be triggered\");","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"antonTan96"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"antonTan96"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"antonTan96"},"content":"        reply.echo(\"What can I do for you?\");","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"antonTan96"},"content":"        ArrayList\u003cObject\u003e inLine \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"antonTan96"},"content":"        while(talking){","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"antonTan96"},"content":"            Type t \u003d null;","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"antonTan96"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"antonTan96"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":68,"author":{"gitId":"antonTan96"},"content":"                if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"antonTan96"},"content":"                    t \u003d Type.MARK;","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"antonTan96"},"content":"                    int index \u003d Integer.parseInt(input.replace(\"mark\", \"\").trim()) - 1;","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"antonTan96"},"content":"                    list.markDone(index);","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"antonTan96"},"content":"                    inLine.add(list.getTask(index));","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"antonTan96"},"content":"                } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"antonTan96"},"content":"                    t \u003d Type.MARK;","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"antonTan96"},"content":"                    int index \u003d Integer.parseInt(input.replace(\"unmark\", \"\").trim()) - 1;","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"antonTan96"},"content":"                    list.markUndone(index);","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"antonTan96"},"content":"                    inLine.add(list.getTask(index));","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"antonTan96"},"content":"                } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"antonTan96"},"content":"                    t \u003d Type.TASK;","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"antonTan96"},"content":"                    list.store(new Deadline(input.replace(\"deadline\", \"\").trim()));","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"antonTan96"},"content":"                    inLine.add(list.getTask(list.size() - 1));","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"antonTan96"},"content":"                } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"antonTan96"},"content":"                    t \u003d Type.TASK;","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"antonTan96"},"content":"                    list.store(new Event(input.replace(\"event\", \"\").trim()));","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"antonTan96"},"content":"                    inLine.add(list.getTask(list.size() - 1));","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"antonTan96"},"content":"                } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"antonTan96"},"content":"                    t \u003d Type.TASK;","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"antonTan96"},"content":"                    list.store(new Todo(input.replace(\"todo\", \"\").trim()));","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"antonTan96"},"content":"                    inLine.add(list.getTask(list.size() - 1));","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"antonTan96"},"content":"                } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"antonTan96"},"content":"                    t \u003d Type.DELETE;","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"antonTan96"},"content":"                    int index \u003d Integer.parseInt(input.replace(\"delete\", \"\").trim()) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"antonTan96"},"content":"                    inLine.add(list.getTask(index));","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"antonTan96"},"content":"                    list.deleteTask(index);","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"antonTan96"},"content":"                }else {","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":98,"author":{"gitId":"antonTan96"},"content":"                    switch (input) {","lastModifiedDate":"2023-08-23"},{"lineNumber":99,"author":{"gitId":"antonTan96"},"content":"                        case \"bye\":","lastModifiedDate":"2023-08-23"},{"lineNumber":100,"author":{"gitId":"antonTan96"},"content":"                            sc.close();","lastModifiedDate":"2023-08-23"},{"lineNumber":101,"author":{"gitId":"antonTan96"},"content":"                            talking \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":102,"author":{"gitId":"antonTan96"},"content":"                            try{","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"antonTan96"},"content":"                                list.saveToFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"antonTan96"},"content":"                            } catch (IOException e){","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"antonTan96"},"content":"                                System.out.println(\"Something wrong happened when saving your tasks\");","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"antonTan96"},"content":"                            }","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"antonTan96"},"content":"                            break;","lastModifiedDate":"2023-08-23"},{"lineNumber":108,"author":{"gitId":"antonTan96"},"content":"                        case \"list\":","lastModifiedDate":"2023-08-23"},{"lineNumber":109,"author":{"gitId":"antonTan96"},"content":"                            reply.iterate(list);","lastModifiedDate":"2023-08-23"},{"lineNumber":110,"author":{"gitId":"antonTan96"},"content":"                            break;","lastModifiedDate":"2023-08-23"},{"lineNumber":111,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":112,"author":{"gitId":"antonTan96"},"content":"                        default:","lastModifiedDate":"2023-08-23"},{"lineNumber":113,"author":{"gitId":"antonTan96"},"content":"                            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"antonTan96"},"content":"                                throw new UnknownCommandException();","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"antonTan96"},"content":"                            } catch (UnknownCommandException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"antonTan96"},"content":"                                reply.echo(e.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":117,"author":{"gitId":"antonTan96"},"content":"                            }","lastModifiedDate":"2023-08-24"},{"lineNumber":118,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":119,"author":{"gitId":"antonTan96"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":120,"author":{"gitId":"antonTan96"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":121,"author":{"gitId":"antonTan96"},"content":"                if(t \u003d\u003d Type.MARK){","lastModifiedDate":"2023-08-24"},{"lineNumber":122,"author":{"gitId":"antonTan96"},"content":"                    reply.add(\"Operation Successful: This is the current state of your task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":123,"author":{"gitId":"antonTan96"},"content":"                    for(int i \u003d 0; i \u003c inLine.size();i++){","lastModifiedDate":"2023-08-24"},{"lineNumber":124,"author":{"gitId":"antonTan96"},"content":"                        reply.add(inLine.get(i).toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":125,"author":{"gitId":"antonTan96"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":126,"author":{"gitId":"antonTan96"},"content":"                    reply.echo();","lastModifiedDate":"2023-08-24"},{"lineNumber":127,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":128,"author":{"gitId":"antonTan96"},"content":"                } else if(t \u003d\u003d Type.TASK){","lastModifiedDate":"2023-08-24"},{"lineNumber":129,"author":{"gitId":"antonTan96"},"content":"                    reply.add(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":130,"author":{"gitId":"antonTan96"},"content":"                    reply.add(inLine.get(0).toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":131,"author":{"gitId":"antonTan96"},"content":"                    reply.add(\"Now you have \" + list.size() + \" task(s) in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":132,"author":{"gitId":"antonTan96"},"content":"                    reply.echo();","lastModifiedDate":"2023-08-24"},{"lineNumber":133,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":134,"author":{"gitId":"antonTan96"},"content":"                } else if(t \u003d\u003d Type.DELETE){","lastModifiedDate":"2023-08-24"},{"lineNumber":135,"author":{"gitId":"antonTan96"},"content":"                    reply.add(\"Got it. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":136,"author":{"gitId":"antonTan96"},"content":"                    reply.add(inLine.get(0).toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":137,"author":{"gitId":"antonTan96"},"content":"                    reply.add(\"Now you have \" + list.size() + \" task(s) in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":138,"author":{"gitId":"antonTan96"},"content":"                    reply.echo();","lastModifiedDate":"2023-08-24"},{"lineNumber":139,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":140,"author":{"gitId":"antonTan96"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":141,"author":{"gitId":"antonTan96"},"content":"                inLine.removeAll(inLine);","lastModifiedDate":"2023-08-24"},{"lineNumber":142,"author":{"gitId":"antonTan96"},"content":"            } catch (EmptyDescriptionException e){","lastModifiedDate":"2023-08-24"},{"lineNumber":143,"author":{"gitId":"antonTan96"},"content":"                reply.echo(e.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":144,"author":{"gitId":"antonTan96"},"content":"            } catch (IndexOutOfBoundsException e){","lastModifiedDate":"2023-08-24"},{"lineNumber":145,"author":{"gitId":"antonTan96"},"content":"                reply.echo(\"The index you provided does not exist\");","lastModifiedDate":"2023-08-24"},{"lineNumber":146,"author":{"gitId":"antonTan96"},"content":"            } catch (IllegalFormatException e){","lastModifiedDate":"2023-08-24"},{"lineNumber":147,"author":{"gitId":"antonTan96"},"content":"                reply.echo(e.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":148,"author":{"gitId":"antonTan96"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":149,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":150,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":151,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":152,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":153,"author":{"gitId":"antonTan96"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":154,"author":{"gitId":"antonTan96"},"content":"        reply.echo(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-23"},{"lineNumber":155,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":156,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":157,"author":{"gitId":"antonTan96"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-23"},{"lineNumber":158,"author":{"gitId":"antonTan96"},"content":"        Cracker bot \u003d new Cracker();","lastModifiedDate":"2023-08-23"},{"lineNumber":159,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":161,"author":{"gitId":"antonTan96"},"content":"        bot.startService();","lastModifiedDate":"2023-08-23"},{"lineNumber":162,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":163,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":164,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":165,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":166,"author":{"gitId":"antonTan96"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"antonTan96":166}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antonTan96"},"content":"import Exceptions.EmptyDescriptionException;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"antonTan96"},"content":"import Exceptions.IllegalFormatException;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"antonTan96"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"antonTan96"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"antonTan96"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"antonTan96"},"content":"    private LocalDate deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"antonTan96"},"content":"    Deadline(String s) throws EmptyDescriptionException, IllegalFormatException {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"antonTan96"},"content":"        super(s.split(\"/by\",0)[0].trim());","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"antonTan96"},"content":"        if(!s.contains(\"/by\")){","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"antonTan96"},"content":"            throw new IllegalFormatException(\"Missing \\\"/by\\\" after task description\");","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"antonTan96"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"antonTan96"},"content":"        try{","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"antonTan96"},"content":"            this.deadline \u003d LocalDate.parse(s.split(\"/by\",0)[1].trim());","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"antonTan96"},"content":"        } catch (Exception e){","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"antonTan96"},"content":"            throw new IllegalFormatException(\"please enter date in yyyy-mm-dd format\");","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"antonTan96"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"antonTan96"},"content":"    Deadline(String desc,String deadline) throws EmptyDescriptionException {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"antonTan96"},"content":"        super(desc);","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"antonTan96"},"content":"            this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"antonTan96"},"content":"    public String toString(){","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"antonTan96"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + getDeadline() +\")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"antonTan96"},"content":"    public String getDeadline(){ return deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));}","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"antonTan96"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"antonTan96":30}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antonTan96"},"content":"import Exceptions.EmptyDescriptionException;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"antonTan96"},"content":"import Exceptions.IllegalFormatException;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"antonTan96"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"antonTan96"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"antonTan96"},"content":"public class Event extends Task{","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"antonTan96"},"content":"    private LocalDate from;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"antonTan96"},"content":"    private LocalDate to;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"antonTan96"},"content":"    Event(String s) throws EmptyDescriptionException, IllegalFormatException {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"antonTan96"},"content":"        super(s.split(\"/from\")[0]);","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"antonTan96"},"content":"        //Checking if format is correct","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"antonTan96"},"content":"        if(!s.contains(\"/from\")){","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"antonTan96"},"content":"            throw new IllegalFormatException(\"Missing \\\"/from\\\" after Event Description\");","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"antonTan96"},"content":"        } else if(!s.contains(\"/to\")){","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"antonTan96"},"content":"            throw new IllegalFormatException(\"Missing \\\"/to\\\" after Event Description\");","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"antonTan96"},"content":"        } else if(s.indexOf(\"/from\") \u003e s.indexOf(\"/to\")){","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"antonTan96"},"content":"            throw new IllegalFormatException(\"Format of Adding Event is: \\nevent eventDescription /from start /to end \");","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"antonTan96"},"content":"        } else if(s.split(\"/to\").length \u003c\u003d 1){","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"antonTan96"},"content":"            throw new IllegalFormatException(\"end time is empty\");","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"antonTan96"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"antonTan96"},"content":"        //initialize variables","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"antonTan96"},"content":"        try{","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"antonTan96"},"content":"            this.from \u003d  LocalDate.parse(s.split(\"/from\")[1].split(\"/to\")[0].trim());","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"antonTan96"},"content":"            this.to \u003d LocalDate.parse(s.split(\"/to\")[1].trim());","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"antonTan96"},"content":"            if(from.isAfter(to)){","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"antonTan96"},"content":"                throw new IllegalFormatException(\"end time is earlier than start time\");","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"antonTan96"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"antonTan96"},"content":"        } catch (IllegalFormatException e){","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"antonTan96"},"content":"            throw e;","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"antonTan96"},"content":"        } catch (Exception e){","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"antonTan96"},"content":"            throw new IllegalFormatException(\"please enter date in yyyy-mm-dd format\");","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"antonTan96"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"antonTan96"},"content":"        //check if they are empty strings","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"antonTan96"},"content":"        if(this.from.equals(\"\")){","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"antonTan96"},"content":"            throw new IllegalFormatException(\"Missing start time\");","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"antonTan96"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"antonTan96"},"content":"    public Event(String desc, String from, String to) throws EmptyDescriptionException{","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"antonTan96"},"content":"        super(desc);","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"antonTan96"},"content":"        this.from \u003d LocalDate.parse(from);","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"antonTan96"},"content":"        this.to \u003d LocalDate.parse(to);","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"antonTan96"},"content":"    public String getStart(){ return from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));}","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"antonTan96"},"content":"    public String getEnd(){return to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));}","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"antonTan96"},"content":"    public String toString(){","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"antonTan96"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + getStart() +\" to: \"+ getEnd() +\")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"antonTan96"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"antonTan96":57}},{"path":"src/main/java/Exceptions/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antonTan96"},"content":"package Exceptions;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"antonTan96"},"content":"public class EmptyDescriptionException extends Exception{","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"antonTan96"},"content":"    public String toString(){","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"antonTan96"},"content":"        return \"Description cannot be empty\";","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"antonTan96"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"antonTan96":7}},{"path":"src/main/java/Exceptions/IllegalFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antonTan96"},"content":"package Exceptions;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"antonTan96"},"content":"public class IllegalFormatException extends Exception{","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"antonTan96"},"content":"    String msg;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"antonTan96"},"content":"    public IllegalFormatException(String s){","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"antonTan96"},"content":"        msg \u003d s;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"antonTan96"},"content":"    public String toString(){","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"antonTan96"},"content":"        return msg;","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"antonTan96"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"antonTan96":12}},{"path":"src/main/java/Exceptions/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antonTan96"},"content":"package Exceptions;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"antonTan96"},"content":"public class UnknownCommandException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"antonTan96"},"content":"    public UnknownCommandException(){","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"antonTan96"},"content":"    public String toString(){","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"antonTan96"},"content":"        return \"I have no idea what that means\";","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"antonTan96"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"antonTan96":10}},{"path":"src/main/java/Reply.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antonTan96"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"antonTan96"},"content":"public class Reply {","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"antonTan96"},"content":"    private String line \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"antonTan96"},"content":"    private ArrayList\u003cString\u003e lines;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"antonTan96"},"content":"    Reply(){","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"antonTan96"},"content":"        this.lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"antonTan96"},"content":"    public void echo(String content){","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"antonTan96"},"content":"        System.out.println(line);","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"antonTan96"},"content":"        System.out.println(content);","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"antonTan96"},"content":"        System.out.println(line);","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"antonTan96"},"content":"    public void echo(){","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"antonTan96"},"content":"        System.out.println(line);","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"antonTan96"},"content":"        for(int i \u003d 0;i\u003c lines.size();i++){","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"antonTan96"},"content":"            System.out.println(lines.get(i));","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"antonTan96"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"antonTan96"},"content":"        System.out.println(line);","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"antonTan96"},"content":"        lines.removeAll(lines);","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"antonTan96"},"content":"    public void add(String s){","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"antonTan96"},"content":"        lines.add(s);","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"antonTan96"},"content":"    public void iterate(TodoList list){","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"antonTan96"},"content":"        this.add(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"antonTan96"},"content":"        for(int i \u003d 0 ; i\u003c list.size(); i++){","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"antonTan96"},"content":"            this.add((i+1) + \". \" + list.getTask(i));","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"antonTan96"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"antonTan96"},"content":"        echo();","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"antonTan96"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"antonTan96":38}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antonTan96"},"content":"import Exceptions.EmptyDescriptionException;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"antonTan96"},"content":"public class Task{","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"antonTan96"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"antonTan96"},"content":"    private String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"antonTan96"},"content":"    Task(String s) throws EmptyDescriptionException {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"antonTan96"},"content":"        if(s.isBlank()){","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"antonTan96"},"content":"            throw new EmptyDescriptionException();","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"antonTan96"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"antonTan96"},"content":"        this.description \u003d s;","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"antonTan96"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"antonTan96"},"content":"    public void markDone(){","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"antonTan96"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"antonTan96"},"content":"    public void markUndone(){","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"antonTan96"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"antonTan96"},"content":"    public String getDesc(){","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"antonTan96"},"content":"        return description;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"antonTan96"},"content":"    public boolean getStatus(){","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"antonTan96"},"content":"        return isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"antonTan96"},"content":"    public String toString(){","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"antonTan96"},"content":"        return \"[\" + (isDone?\"X\":\" \") + \"] \" + description;","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"antonTan96"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"antonTan96":29}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antonTan96"},"content":"import Exceptions.EmptyDescriptionException;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"antonTan96"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"antonTan96"},"content":"    Todo(String s) throws EmptyDescriptionException {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"antonTan96"},"content":"            super(s);","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"antonTan96"},"content":"    public String toString(){","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"antonTan96"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"antonTan96"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"antonTan96":11}},{"path":"src/main/java/TodoList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antonTan96"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"antonTan96"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"antonTan96"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"antonTan96"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"antonTan96"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"antonTan96"},"content":"public class TodoList {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"antonTan96"},"content":"    FileWriter writer;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"antonTan96"},"content":"    ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"antonTan96"},"content":"    TodoList(FileWriter f){","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"antonTan96"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"antonTan96"},"content":"        this.writer \u003d f;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"antonTan96"},"content":"    public void store(Task s){","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"antonTan96"},"content":"        list.add(s);","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"antonTan96"},"content":"    public void load(String taskString){","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"antonTan96"},"content":"        String[] arr \u003d taskString.split(\"\\\\|\");","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"antonTan96"},"content":"        try{","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"antonTan96"},"content":"            Task task \u003d null;","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"antonTan96"},"content":"            switch (taskString.charAt(0)){","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"antonTan96"},"content":"                case \u0027T\u0027 :","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"antonTan96"},"content":"                    task \u003d new Todo(arr[2]);","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"antonTan96"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"antonTan96"},"content":"                case \u0027E\u0027:","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"antonTan96"},"content":"                    task \u003d new Event(arr[2], arr[3], arr[4]);","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"antonTan96"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"antonTan96"},"content":"                case \u0027D\u0027:","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"antonTan96"},"content":"                    task \u003dnew Deadline(arr[2], arr[3]) ;","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"antonTan96"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"antonTan96"},"content":"                default :","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"antonTan96"},"content":"                    System.out.println(\"Corrupt file detected\");","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"antonTan96"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"antonTan96"},"content":"            if(Boolean.parseBoolean(arr[1])){","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"antonTan96"},"content":"                task.markDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"antonTan96"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"antonTan96"},"content":"            store(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"antonTan96"},"content":"        } catch (Exception e){","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"antonTan96"},"content":"            System.out.println(e);","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"antonTan96"},"content":"            System.out.println(\"something bad when loading\");","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"antonTan96"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"antonTan96"},"content":"    public void markDone(int index){","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"antonTan96"},"content":"        list.get(index).markDone();","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"antonTan96"},"content":"    public void markUndone(int index){","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"antonTan96"},"content":"        list.get(index).markUndone();","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"antonTan96"},"content":"    public void deleteTask(int index) {list.remove(index);}","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"antonTan96"},"content":"    public String getTask(int index){","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"antonTan96"},"content":"        return list.get(index).toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"antonTan96"},"content":"    public int size(){ return list.size();}","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"antonTan96"},"content":"    public void saveToFile() throws IOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"antonTan96"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"antonTan96"},"content":"        for(int i \u003d 0 ; i \u003c list.size();i++){","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"antonTan96"},"content":"            StringBuilder taskString \u003d new StringBuilder();","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"antonTan96"},"content":"            Task task \u003d list.get(i);","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"antonTan96"},"content":"            taskString.append(task.toString().charAt(1));","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"antonTan96"},"content":"            taskString.append(\u0027|\u0027);","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"antonTan96"},"content":"            taskString.append(task.getStatus());","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"antonTan96"},"content":"            taskString.append(\u0027|\u0027);","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"antonTan96"},"content":"            taskString.append(task.getDesc());","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"antonTan96"},"content":"            taskString.append(\u0027|\u0027);","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"antonTan96"},"content":"            if(task instanceof Event){","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"antonTan96"},"content":"                taskString.append(LocalDate.parse(((Event) task).getStart(), formatter));","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"antonTan96"},"content":"                taskString.append(\u0027|\u0027);","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"antonTan96"},"content":"                taskString.append(LocalDate.parse(((Event) task).getEnd(), formatter));","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"antonTan96"},"content":"                taskString.append(\u0027|\u0027);","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"antonTan96"},"content":"            } else if (task instanceof Deadline){","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"antonTan96"},"content":"                taskString.append(LocalDate.parse(((Deadline) task).getDeadline(), formatter));","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"antonTan96"},"content":"                taskString.append(\u0027|\u0027);","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"antonTan96"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"antonTan96"},"content":"            writer.write(taskString + System.lineSeparator());","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"antonTan96"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"antonTan96"},"content":"        writer.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"antonTan96"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"antonTan96":92}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"antonTan96"},"content":"event asd /from 123 /to 321","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"antonTan96"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"antonTan96"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"antonTan96":3}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"antonTan96"},"content":"java -classpath ..\\bin Cracker \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"antonTan96":1,"-":20}}]
