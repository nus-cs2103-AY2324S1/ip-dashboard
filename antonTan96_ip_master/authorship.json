[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"antonTan96"},"content":"# crackerpackage.Cracker project template","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"antonTan96"},"content":"3. After that, locate the `src/main/java/crackerpackage.Cracker.java` file, right-click it, and choose `Run crackerpackage.Cracker.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"antonTan96":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"antonTan96"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"antonTan96"},"content":"checkstyle {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"antonTan96"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"antonTan96"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"antonTan96"},"content":"    mainClass.set(\"crackerpackage.Cracker\")","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"antonTan96":5,"-":41}},{"path":"src/main/java/UIComponents/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antonTan96"},"content":"package uicomponents;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"antonTan96"},"content":"import crackerpackage.Cracker;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"antonTan96"},"content":"import crackerpackage.tasks.Deadline;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"antonTan96"},"content":"import crackerpackage.tasks.Event;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"antonTan96"},"content":"import crackerpackage.tasks.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"antonTan96"},"content":"import crackerpackage.tasks.Todo;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"antonTan96"},"content":"import exceptions.EmptyDescriptionException;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"antonTan96"},"content":"import exceptions.IllegalFormatException;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"antonTan96"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"antonTan96"},"content":" * A parser that extracts keywords from input text.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"antonTan96"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"antonTan96"},"content":" * @author Anton Tan Hong Zhi","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"antonTan96"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"antonTan96"},"content":"public class Parser {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"antonTan96"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"antonTan96"},"content":"     * parses the command header involved in the command.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"antonTan96"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"antonTan96"},"content":"     * @param input the command to be parsed","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"antonTan96"},"content":"     * @return type of header of the command","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"antonTan96"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"antonTan96"},"content":"    public static Cracker.Type parseCommand(String input) {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"antonTan96"},"content":"        switch(input.split(\" \")[0]) {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"antonTan96"},"content":"        case \"mark\":","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"antonTan96"},"content":"        case \"unmark\":","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"antonTan96"},"content":"            return Cracker.Type.MARK;","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"antonTan96"},"content":"        case \"todo\":","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"antonTan96"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"antonTan96"},"content":"        case \"event\":","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"antonTan96"},"content":"            return Cracker.Type.TASK;","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"antonTan96"},"content":"        case \"delete\":","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"antonTan96"},"content":"            return Cracker.Type.DELETE;","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"antonTan96"},"content":"        case \"list\":","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"antonTan96"},"content":"            return Cracker.Type.LIST;","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"antonTan96"},"content":"        case \"bye\":","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"antonTan96"},"content":"            return Cracker.Type.QUIT;","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"antonTan96"},"content":"        default:","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"antonTan96"},"content":"            return Cracker.Type.UNKNOWN;","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"antonTan96"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"antonTan96"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"antonTan96"},"content":"     * Returns a task based on the header of the command.","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"antonTan96"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"antonTan96"},"content":"     * @param input the command to be parsed","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"antonTan96"},"content":"     * @return a task extracted from the command","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"antonTan96"},"content":"     * @throws EmptyDescriptionException","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"antonTan96"},"content":"     * @throws IllegalFormatException","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"antonTan96"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"antonTan96"},"content":"    public static Task parseTask(String input) throws EmptyDescriptionException, IllegalFormatException {","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"antonTan96"},"content":"        String command \u003d input.split(\" \")[0];","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"antonTan96"},"content":"        switch (command.toLowerCase()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"antonTan96"},"content":"        case \"todo\":","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"antonTan96"},"content":"            return new Todo(input.replaceFirst(command, \"\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"antonTan96"},"content":"        case \"event\":","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"antonTan96"},"content":"            return new Event(input.replaceFirst(command, \"\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"antonTan96"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"antonTan96"},"content":"            return new Deadline(input.replaceFirst(command, \"\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"antonTan96"},"content":"        default:","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"antonTan96"},"content":"            System.out.println(\"should not be triggered\");","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"antonTan96"},"content":"            return null;","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"antonTan96"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"antonTan96"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"antonTan96"},"content":"     * Returns the number involved in the command.","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"antonTan96"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"antonTan96"},"content":"     * @param input the command to be parsed","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"antonTan96"},"content":"     * @return the index requested by the user","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"antonTan96"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"antonTan96"},"content":"    public static int parseIndex(String input) {","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"antonTan96"},"content":"        return Integer.parseInt(input.replace(input.split(\" \")[0], \"\").trim()) - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"antonTan96"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"antonTan96"},"content":"     * Returns the keyword from a find operation","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"antonTan96"},"content":"     * @param input","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"antonTan96"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"antonTan96"},"content":"    public static String parseKeyword(String input) {","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"antonTan96"},"content":"        String command \u003d input.split(\" \")[0];","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"antonTan96"},"content":"        return input.replaceFirst(command, \"\").trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"antonTan96"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"antonTan96":89}},{"path":"src/main/java/crackerpackage/Cracker.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antonTan96"},"content":"package crackerpackage;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"antonTan96"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"antonTan96"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"antonTan96"},"content":"import crackerpackage.tasks.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"antonTan96"},"content":"import exceptions.EmptyDescriptionException;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"antonTan96"},"content":"import exceptions.IllegalFormatException;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"antonTan96"},"content":"import exceptions.UnknownCommandException;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"antonTan96"},"content":"import uicomponents.Parser;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"antonTan96"},"content":"import uicomponents.Reply;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"antonTan96"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"antonTan96"},"content":" * A chatbot that manages tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"antonTan96"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"antonTan96"},"content":" * @author Anton Tan Hong Zhi","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"antonTan96"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"antonTan96"},"content":"public class Cracker {","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"antonTan96"},"content":"    private TodoList list \u003d null;","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"antonTan96"},"content":"    private Reply reply \u003d new Reply();","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"antonTan96"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"antonTan96"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"antonTan96"},"content":"     * The types of operations supported by the chatbot.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"antonTan96"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"antonTan96"},"content":"    public enum Type {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"antonTan96"},"content":"        MARK,","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"antonTan96"},"content":"        UNMARK,","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"antonTan96"},"content":"        TASK,","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"antonTan96"},"content":"        DELETE,","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"antonTan96"},"content":"        UNKNOWN,","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"antonTan96"},"content":"        LIST,","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"antonTan96"},"content":"        QUIT,","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"antonTan96"},"content":"        FIND","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"antonTan96"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"antonTan96"},"content":"     * Starts up the bot.","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"antonTan96"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"antonTan96"},"content":"    public void startService() {","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"antonTan96"},"content":"        boolean talking \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"antonTan96"},"content":"        storage \u003d new Storage(\"./data/list.txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"antonTan96"},"content":"        list \u003d storage.load();","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"antonTan96"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"antonTan96"},"content":"        reply.echo(\"What can I do for you?\");","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"antonTan96"},"content":"        while (talking) {","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"antonTan96"},"content":"            Type t \u003d null;","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"antonTan96"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"antonTan96"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"antonTan96"},"content":"                Type command \u003d Parser.parseCommand(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"antonTan96"},"content":"                switch (command) {","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"antonTan96"},"content":"                case MARK:","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"antonTan96"},"content":"                    list.markDone(Parser.parseIndex(input));","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"antonTan96"},"content":"                    reply.modifyTaskReply(list.getTask(Parser.parseIndex(input)));","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"antonTan96"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"antonTan96"},"content":"                case UNMARK:","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"antonTan96"},"content":"                    list.markUndone(Parser.parseIndex(input));","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"antonTan96"},"content":"                    reply.modifyTaskReply(list.getTask(Parser.parseIndex(input)));","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"antonTan96"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"antonTan96"},"content":"                case DELETE:","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"antonTan96"},"content":"                    reply.deleteTaskReply(list.getTask(Parser.parseIndex(input)), list.size());","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"antonTan96"},"content":"                    list.deleteTask(Parser.parseIndex(input));","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"antonTan96"},"content":"                    break;","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"antonTan96"},"content":"                case TASK:","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"antonTan96"},"content":"                    Task newTask \u003d Parser.parseTask(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"antonTan96"},"content":"                    list.store(newTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"antonTan96"},"content":"                    reply.storeTaskReply(newTask, list.size());","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"antonTan96"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"antonTan96"},"content":"                case UNKNOWN:","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"antonTan96"},"content":"                    try {","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"antonTan96"},"content":"                        throw new UnknownCommandException();","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"antonTan96"},"content":"                    } catch (UnknownCommandException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"antonTan96"},"content":"                        reply.echo(e.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"antonTan96"},"content":"                    }","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"antonTan96"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"antonTan96"},"content":"                case LIST:","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"antonTan96"},"content":"                    reply.iterate(list);","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"antonTan96"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"antonTan96"},"content":"                case FIND:","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"antonTan96"},"content":"                    reply.findTaskReply(list.filter(Parser.parseKeyword(input)));","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"antonTan96"},"content":"                    break;","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"antonTan96"},"content":"                case QUIT:","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"antonTan96"},"content":"                    sc.close();","lastModifiedDate":"2023-08-23"},{"lineNumber":90,"author":{"gitId":"antonTan96"},"content":"                    talking \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":91,"author":{"gitId":"antonTan96"},"content":"                    try {","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"antonTan96"},"content":"                        storage.save(list);","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"antonTan96"},"content":"                    } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"antonTan96"},"content":"                        System.out.println(\"Something wrong happened when saving your tasks\");","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"antonTan96"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"antonTan96"},"content":"                    break;","lastModifiedDate":"2023-08-23"},{"lineNumber":97,"author":{"gitId":"antonTan96"},"content":"                default:","lastModifiedDate":"2023-08-23"},{"lineNumber":98,"author":{"gitId":"antonTan96"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":100,"author":{"gitId":"antonTan96"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":101,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"antonTan96"},"content":"            } catch (EmptyDescriptionException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"antonTan96"},"content":"                reply.echo(e.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"antonTan96"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":105,"author":{"gitId":"antonTan96"},"content":"                reply.echo(\"The index you provided does not exist\");","lastModifiedDate":"2023-08-24"},{"lineNumber":106,"author":{"gitId":"antonTan96"},"content":"            } catch (IllegalFormatException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":107,"author":{"gitId":"antonTan96"},"content":"                reply.echo(e.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"antonTan96"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":110,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":111,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":112,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"antonTan96"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":114,"author":{"gitId":"antonTan96"},"content":"        reply.echo(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-23"},{"lineNumber":115,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":118,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":119,"author":{"gitId":"antonTan96"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-23"},{"lineNumber":120,"author":{"gitId":"antonTan96"},"content":"        Cracker bot \u003d new Cracker();","lastModifiedDate":"2023-08-23"},{"lineNumber":121,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"antonTan96"},"content":"        bot.startService();","lastModifiedDate":"2023-08-23"},{"lineNumber":124,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":125,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":126,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":127,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":128,"author":{"gitId":"antonTan96"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"antonTan96":128}},{"path":"src/main/java/crackerpackage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antonTan96"},"content":"package crackerpackage;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"antonTan96"},"content":"import java.io.File;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"antonTan96"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"antonTan96"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"antonTan96"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"antonTan96"},"content":"import java.nio.file.FileSystems;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"antonTan96"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"antonTan96"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"antonTan96"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"antonTan96"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"antonTan96"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"antonTan96"},"content":"import crackerpackage.tasks.Deadline;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"antonTan96"},"content":"import crackerpackage.tasks.Event;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"antonTan96"},"content":"import crackerpackage.tasks.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"antonTan96"},"content":"import crackerpackage.tasks.Todo;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"antonTan96"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"antonTan96"},"content":" * A Storage that stores tasks for the bot.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"antonTan96"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"antonTan96"},"content":" * @author Anton Tan Hong Zhi","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"antonTan96"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"antonTan96"},"content":"public class Storage {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"antonTan96"},"content":"    private File file;","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"antonTan96"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"antonTan96"},"content":"     * Creates a Storage object.","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"antonTan96"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"antonTan96"},"content":"     * @param fileString The path to the file","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"antonTan96"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"antonTan96"},"content":"    public Storage(String fileString) {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"antonTan96"},"content":"        this.file \u003d new File(fileString);","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"antonTan96"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"antonTan96"},"content":"     * Saves the content in the list to a file.","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"antonTan96"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"antonTan96"},"content":"     * @param list List of tasks to store","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"antonTan96"},"content":"     * @throws IOException","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"antonTan96"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"antonTan96"},"content":"    public void save(TodoList list) throws IOException {","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"antonTan96"},"content":"        FileWriter writer \u003d null;","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"antonTan96"},"content":"        if (!this.file.exists()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"antonTan96"},"content":"            Path path \u003d FileSystems.getDefault().getPath(\"data\");","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"antonTan96"},"content":"            Files.createDirectory(path);","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"antonTan96"},"content":"            this.file.createNewFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"antonTan96"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"antonTan96"},"content":"        writer \u003d new FileWriter(file);","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"antonTan96"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"antonTan96"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"antonTan96"},"content":"            StringBuilder taskString \u003d new StringBuilder();","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"antonTan96"},"content":"            Task task \u003d list.getTask(i);","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"antonTan96"},"content":"            taskString.append(list.getTaskString(i).charAt(1));","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"antonTan96"},"content":"            taskString.append(\u0027|\u0027);","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"antonTan96"},"content":"            taskString.append(task.getStatus());","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"antonTan96"},"content":"            taskString.append(\u0027|\u0027);","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"antonTan96"},"content":"            taskString.append(task.getDesc());","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"antonTan96"},"content":"            taskString.append(\u0027|\u0027);","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"antonTan96"},"content":"            if (task instanceof Event) {","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"antonTan96"},"content":"                taskString.append(LocalDate.parse(((Event) task).getStart(), formatter));","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"antonTan96"},"content":"                taskString.append(\u0027|\u0027);","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"antonTan96"},"content":"                taskString.append(LocalDate.parse(((Event) task).getEnd(), formatter));","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"antonTan96"},"content":"                taskString.append(\u0027|\u0027);","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"antonTan96"},"content":"            } else if (task instanceof Deadline) {","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"antonTan96"},"content":"                taskString.append(LocalDate.parse(((Deadline) task).getDeadline(), formatter));","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"antonTan96"},"content":"                taskString.append(\u0027|\u0027);","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"antonTan96"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"antonTan96"},"content":"            writer.write(taskString + System.lineSeparator());","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"antonTan96"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"antonTan96"},"content":"        writer.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"antonTan96"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"antonTan96"},"content":"     * Returns a TodoList based on the contents of the file stored.","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"antonTan96"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"antonTan96"},"content":"     * @return a TodoList based on the contents of the file stored","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"antonTan96"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"antonTan96"},"content":"    public TodoList load() {","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"antonTan96"},"content":"        TodoList list \u003d new TodoList();","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"antonTan96"},"content":"        Scanner sc \u003d null;","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"antonTan96"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"antonTan96"},"content":"            sc \u003d new Scanner(file);","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"antonTan96"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"antonTan96"},"content":"            return list;","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"antonTan96"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"antonTan96"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"antonTan96"},"content":"            String taskString \u003d sc.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"antonTan96"},"content":"            String[] arr \u003d taskString.split(\"\\\\|\");","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"antonTan96"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"antonTan96"},"content":"                Task task \u003d null;","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"antonTan96"},"content":"                switch (taskString.charAt(0)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"antonTan96"},"content":"                case \u0027T\u0027:","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"antonTan96"},"content":"                    task \u003d new Todo(arr[2]);","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"antonTan96"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"antonTan96"},"content":"                case \u0027E\u0027:","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"antonTan96"},"content":"                    task \u003d new Event(arr[2], arr[3], arr[4]);","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"antonTan96"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"antonTan96"},"content":"                case \u0027D\u0027:","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"antonTan96"},"content":"                    task \u003d new Deadline(arr[2], arr[3]);","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"antonTan96"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"antonTan96"},"content":"                default:","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"antonTan96"},"content":"                    System.out.println(\"Corrupt file detected\");","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"antonTan96"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"antonTan96"},"content":"                if (Boolean.parseBoolean(arr[1])) {","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"antonTan96"},"content":"                    task.markDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"antonTan96"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"antonTan96"},"content":"                list.store(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"antonTan96"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"antonTan96"},"content":"                System.out.println(e);","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"antonTan96"},"content":"                System.out.println(\"something bad when loading\");","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"antonTan96"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"antonTan96"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"antonTan96"},"content":"        return list;","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"antonTan96"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"antonTan96":126}},{"path":"src/main/java/crackerpackage/TodoList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antonTan96"},"content":"package crackerpackage;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"antonTan96"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"antonTan96"},"content":"import crackerpackage.tasks.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"antonTan96"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"antonTan96"},"content":" * A list that temporary stores tasks for the chatbot.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"antonTan96"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"antonTan96"},"content":" * @author Anton Tan Hong Zhi","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"antonTan96"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"antonTan96"},"content":"public class TodoList {","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"antonTan96"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"antonTan96"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"antonTan96"},"content":"     * Creates a TodoList.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"antonTan96"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"antonTan96"},"content":"    TodoList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"antonTan96"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"antonTan96"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"antonTan96"},"content":"     * Temporary stores the task into the TodoList.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"antonTan96"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"antonTan96"},"content":"     * @param s the task to be stored","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"antonTan96"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"antonTan96"},"content":"    public void store(Task s) {","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"antonTan96"},"content":"        list.add(s);","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"antonTan96"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"antonTan96"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"antonTan96"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"antonTan96"},"content":"     * @param index the index of the task in the list","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"antonTan96"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"antonTan96"},"content":"    public void markDone(int index) {","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"antonTan96"},"content":"        list.get(index).markDone();","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"antonTan96"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"antonTan96"},"content":"     * Marks the task as undone.","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"antonTan96"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"antonTan96"},"content":"     * @param index the index of the task in the list","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"antonTan96"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"antonTan96"},"content":"    public void markUndone(int index) {","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"antonTan96"},"content":"        list.get(index).markUndone();","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"antonTan96"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"antonTan96"},"content":"     * Removes the task from the list.","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"antonTan96"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"antonTan96"},"content":"     * @param index the index of the task in the list","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"antonTan96"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"antonTan96"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"antonTan96"},"content":"        list.remove(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"antonTan96"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"antonTan96"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"antonTan96"},"content":"     * @param index the index of the task in the list","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"antonTan96"},"content":"     * @return a string representing the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"antonTan96"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"antonTan96"},"content":"    public String getTaskString(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"antonTan96"},"content":"        return list.get(index).toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"antonTan96"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"antonTan96"},"content":"     * Returns the amount of elements in the list.","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"antonTan96"},"content":"     * @return the amount of elements in the list.","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"antonTan96"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"antonTan96"},"content":"    public int size() {","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"antonTan96"},"content":"        return list.size();","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"antonTan96"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"antonTan96"},"content":"     * Returns a task object","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"antonTan96"},"content":"     * @param i the index of the task to be recieved.","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"antonTan96"},"content":"     * @return a task in the list.","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"antonTan96"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"antonTan96"},"content":"    public Task getTask(int i) {","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"antonTan96"},"content":"        return list.get(i);","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"antonTan96"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"antonTan96"},"content":"     * Filters all the tasks that contain a keyword.","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"antonTan96"},"content":"     * @param keyword the word that must be in the task description","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"antonTan96"},"content":"     * @return a TodoList that contains all the tasks that contain the keyword","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"antonTan96"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"antonTan96"},"content":"    public TodoList filter(String keyword) {","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"antonTan96"},"content":"        TodoList filteredList \u003d new TodoList();","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"antonTan96"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"antonTan96"},"content":"            Task task \u003d list.get(i);","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"antonTan96"},"content":"            if (task.getDesc().contains(keyword)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"antonTan96"},"content":"                filteredList.store(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"antonTan96"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"antonTan96"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"antonTan96"},"content":"        return filteredList;","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"antonTan96"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"antonTan96":108}},{"path":"src/main/java/crackerpackage/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antonTan96"},"content":"package crackerpackage.tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"antonTan96"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"antonTan96"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"antonTan96"},"content":"import exceptions.EmptyDescriptionException;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"antonTan96"},"content":"import exceptions.IllegalFormatException;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"antonTan96"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"antonTan96"},"content":" * A task that has a date as a deadline.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"antonTan96"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"antonTan96"},"content":" * @author Anton Tan Hong Zhi","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"antonTan96"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"antonTan96"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"antonTan96"},"content":"    private LocalDate deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"antonTan96"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"antonTan96"},"content":"     * Creates a Deadline object with input from the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"antonTan96"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"antonTan96"},"content":"     * @param s A string containing the description and date of a Deadline object","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"antonTan96"},"content":"     * @throws EmptyDescriptionException","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"antonTan96"},"content":"     * @throws IllegalFormatException","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"antonTan96"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"antonTan96"},"content":"    public Deadline(String s) throws EmptyDescriptionException, IllegalFormatException {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"antonTan96"},"content":"        super(s.split(\"/by\", 0)[0].trim());","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"antonTan96"},"content":"        if (!s.contains(\"/by\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"antonTan96"},"content":"            throw new IllegalFormatException(\"Missing \\\"/by\\\" after task description\");","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"antonTan96"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"antonTan96"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"antonTan96"},"content":"            this.deadline \u003d LocalDate.parse(s.split(\"/by\", 0)[1].trim());","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"antonTan96"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"antonTan96"},"content":"            throw new IllegalFormatException(\"please enter date in yyyy-mm-dd format\");","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"antonTan96"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"antonTan96"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"antonTan96"},"content":"     * Creates a Deadline object with input from a file.","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"antonTan96"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"antonTan96"},"content":"     * @param desc The description of a Deadline Task","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"antonTan96"},"content":"     * @param deadline The date to complete before the Deadline","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"antonTan96"},"content":"     * @throws EmptyDescriptionException","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"antonTan96"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"antonTan96"},"content":"    public Deadline(String desc, String deadline) throws EmptyDescriptionException {","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"antonTan96"},"content":"        super(desc);","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"antonTan96"},"content":"        this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"antonTan96"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"antonTan96"},"content":"     * Returns the string representation of the Deadline.","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"antonTan96"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"antonTan96"},"content":"     * @return a string representing the Deadline.","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"antonTan96"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"antonTan96"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"antonTan96"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + getDeadline() + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"antonTan96"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"antonTan96"},"content":"     * Returns the string representation of the date of the Deadline.","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"antonTan96"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"antonTan96"},"content":"     * @return a string representing the date of the Deadline.","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"antonTan96"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"antonTan96"},"content":"    public String getDeadline() {","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"antonTan96"},"content":"        return deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"antonTan96"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"antonTan96":68}},{"path":"src/main/java/crackerpackage/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antonTan96"},"content":"package crackerpackage.tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"antonTan96"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"antonTan96"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"antonTan96"},"content":"import exceptions.EmptyDescriptionException;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"antonTan96"},"content":"import exceptions.IllegalFormatException;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"antonTan96"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"antonTan96"},"content":" * A task that has a starting date and an ending date.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"antonTan96"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"antonTan96"},"content":" * @author Anton Tan Hong Zhi","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"antonTan96"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"antonTan96"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"antonTan96"},"content":"    private LocalDate from;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"antonTan96"},"content":"    private LocalDate to;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"antonTan96"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"antonTan96"},"content":"     * Creates a Event object with input from the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"antonTan96"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"antonTan96"},"content":"     * @param s A string containing the description and starting/ending dates of a Event object","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"antonTan96"},"content":"     * @throws EmptyDescriptionException","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"antonTan96"},"content":"     * @throws IllegalFormatException","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"antonTan96"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"antonTan96"},"content":"    public Event(String s) throws EmptyDescriptionException, IllegalFormatException {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"antonTan96"},"content":"        super(s.split(\"/from\")[0]);","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"antonTan96"},"content":"        //Checking if format is correct","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"antonTan96"},"content":"        if (!s.contains(\"/from\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"antonTan96"},"content":"            throw new IllegalFormatException(\"Missing \\\"/from\\\" after CrackerPackage.tasks.Event Description\");","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"antonTan96"},"content":"        } else if (!s.contains(\"/to\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"antonTan96"},"content":"            throw new IllegalFormatException(\"Missing \\\"/to\\\" after CrackerPackage.tasks.Event Description\");","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"antonTan96"},"content":"        } else if (s.indexOf(\"/from\") \u003e s.indexOf(\"/to\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"antonTan96"},"content":"            throw new IllegalFormatException(\"Format of Adding CrackerPackage.tasks.Event is: \\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"antonTan96"},"content":"                    + \"event eventDescription /from start /to end \");","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"antonTan96"},"content":"        } else if (s.split(\"/to\").length \u003c\u003d 1) {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"antonTan96"},"content":"            throw new IllegalFormatException(\"end time is empty\");","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"antonTan96"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"antonTan96"},"content":"        //initialize variables","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"antonTan96"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"antonTan96"},"content":"            this.from \u003d LocalDate.parse(s.split(\"/from\")[1].split(\"/to\")[0].trim());","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"antonTan96"},"content":"            this.to \u003d LocalDate.parse(s.split(\"/to\")[1].trim());","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"antonTan96"},"content":"            if (from.isAfter(to)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"antonTan96"},"content":"                throw new IllegalFormatException(\"end time is earlier than start time\");","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"antonTan96"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"antonTan96"},"content":"        } catch (IllegalFormatException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"antonTan96"},"content":"            throw e;","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"antonTan96"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"antonTan96"},"content":"            throw new IllegalFormatException(\"please enter date in yyyy-mm-dd format\");","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"antonTan96"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"antonTan96"},"content":"        //check if they are empty strings","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"antonTan96"},"content":"        if (this.from.equals(\"\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"antonTan96"},"content":"            throw new IllegalFormatException(\"Missing start time\");","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"antonTan96"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"antonTan96"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"antonTan96"},"content":"     * Constructs a Deadline object with input from a file.","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"antonTan96"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"antonTan96"},"content":"     * @param desc Description of the Event object","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"antonTan96"},"content":"     * @param from Starting date of the Event object","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"antonTan96"},"content":"     * @param to   Ending date of the Event object","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"antonTan96"},"content":"     * @throws EmptyDescriptionException","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"antonTan96"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"antonTan96"},"content":"    public Event(String desc, String from, String to) throws EmptyDescriptionException {","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"antonTan96"},"content":"        super(desc);","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"antonTan96"},"content":"        this.from \u003d LocalDate.parse(from);","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"antonTan96"},"content":"        this.to \u003d LocalDate.parse(to);","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"antonTan96"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"antonTan96"},"content":"     * Returns the starting date of the object.","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"antonTan96"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"antonTan96"},"content":"     * @return a string representing the starting date of the object","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"antonTan96"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"antonTan96"},"content":"    public String getStart() {","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"antonTan96"},"content":"        return from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"antonTan96"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"antonTan96"},"content":"     * Returns the ending date of the object.","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"antonTan96"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"antonTan96"},"content":"     * @return a string representing the ending date of the object","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"antonTan96"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"antonTan96"},"content":"    public String getEnd() {","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"antonTan96"},"content":"        return to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"antonTan96"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"antonTan96"},"content":"     * Returns the string representation of the Event object.","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"antonTan96"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"antonTan96"},"content":"     * @return a string representing the Event object","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"antonTan96"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"antonTan96"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"antonTan96"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + getStart() + \" to: \" + getEnd() + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"antonTan96"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"antonTan96":104}},{"path":"src/main/java/crackerpackage/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antonTan96"},"content":"package crackerpackage.tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"antonTan96"},"content":"import exceptions.EmptyDescriptionException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"antonTan96"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"antonTan96"},"content":" * An abstract class that implements the basic functions of a Task","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"antonTan96"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"antonTan96"},"content":" * @author Anton Tan Hong Zhi","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"antonTan96"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"antonTan96"},"content":"public abstract class Task {","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"antonTan96"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"antonTan96"},"content":"    private String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"antonTan96"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"antonTan96"},"content":"     * Creates a Task object, called by subclasses.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"antonTan96"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"antonTan96"},"content":"     * @param s description of the Task","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"antonTan96"},"content":"     * @throws EmptyDescriptionException","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"antonTan96"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"antonTan96"},"content":"    Task(String s) throws EmptyDescriptionException {","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"antonTan96"},"content":"        if (s.isBlank()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"antonTan96"},"content":"            throw new EmptyDescriptionException();","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"antonTan96"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"antonTan96"},"content":"        this.description \u003d s;","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"antonTan96"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"antonTan96"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"antonTan96"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"antonTan96"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"antonTan96"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"antonTan96"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"antonTan96"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"antonTan96"},"content":"     * Marks the task as undone.","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"antonTan96"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"antonTan96"},"content":"    public void markUndone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"antonTan96"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"antonTan96"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"antonTan96"},"content":"     * Returns the description of the Task","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"antonTan96"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"antonTan96"},"content":"     * @return A string representing the description of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"antonTan96"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"antonTan96"},"content":"    public String getDesc() {","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"antonTan96"},"content":"        return description;","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"antonTan96"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"antonTan96"},"content":"     * Returns the status of the Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"antonTan96"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"antonTan96"},"content":"     * @return whether the task is done or not","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"antonTan96"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"antonTan96"},"content":"    public boolean getStatus() {","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"antonTan96"},"content":"        return isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"antonTan96"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"antonTan96"},"content":"     * Returns the string representation of the Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"antonTan96"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"antonTan96"},"content":"     * @return a string representing the Task","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"antonTan96"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"antonTan96"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"antonTan96"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + description;","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"antonTan96"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"antonTan96":70}},{"path":"src/main/java/crackerpackage/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antonTan96"},"content":"package crackerpackage.tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"antonTan96"},"content":"import exceptions.EmptyDescriptionException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"antonTan96"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"antonTan96"},"content":" * A normal task.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"antonTan96"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"antonTan96"},"content":" * @author Anton Tan Hong Zhi","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"antonTan96"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"antonTan96"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"antonTan96"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"antonTan96"},"content":"     * Creates a Todo object","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"antonTan96"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"antonTan96"},"content":"     * @param s description of the Task","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"antonTan96"},"content":"     * @throws EmptyDescriptionException","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"antonTan96"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"antonTan96"},"content":"    public Todo(String s) throws EmptyDescriptionException {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"antonTan96"},"content":"        super(s);","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"antonTan96"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"antonTan96"},"content":"     * Returns the String representation of the Todo object.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"antonTan96"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"antonTan96"},"content":"     * @return a string representing the Todo object.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"antonTan96"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"antonTan96"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"antonTan96"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"antonTan96"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"antonTan96":32}},{"path":"src/main/java/exceptions/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antonTan96"},"content":"package exceptions;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"antonTan96"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"antonTan96"},"content":" * An Exception to be thrown when the task description is not provided.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"antonTan96"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"antonTan96"},"content":" * @author Anton Tan Hong Zhi","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"antonTan96"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"antonTan96"},"content":"public class EmptyDescriptionException extends Exception {","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"antonTan96"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"antonTan96"},"content":"     * Returns the string representation of the Exception","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"antonTan96"},"content":"     * @return a String represnting the Exception","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"antonTan96"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"antonTan96"},"content":"    public String toString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"antonTan96"},"content":"        return \"Description cannot be empty\";","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"antonTan96"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"antonTan96":17}},{"path":"src/main/java/exceptions/IllegalFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antonTan96"},"content":"package exceptions;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"antonTan96"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"antonTan96"},"content":" * An Exception to be thrown when the command received by the chatbot has an illegal format","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"antonTan96"},"content":" * @author Anton Tan Hong Zhi","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"antonTan96"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"antonTan96"},"content":"public class IllegalFormatException extends Exception {","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"antonTan96"},"content":"    private String msg;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"antonTan96"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"antonTan96"},"content":"     * Creates an IllegalFormatException object","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"antonTan96"},"content":"     * @param s The message that contains the error","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"antonTan96"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"antonTan96"},"content":"    public IllegalFormatException(String s) {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"antonTan96"},"content":"        msg \u003d s;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"antonTan96"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"antonTan96"},"content":"     * Returns the message contained by the Exception.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"antonTan96"},"content":"     * @return a string containing the message","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"antonTan96"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"antonTan96"},"content":"    public String toString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"antonTan96"},"content":"        return msg;","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"antonTan96"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"antonTan96":25}},{"path":"src/main/java/exceptions/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antonTan96"},"content":"package exceptions;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"antonTan96"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"antonTan96"},"content":" * An Exception to be thrown when the command is unrecognizable by the chatbot.","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"antonTan96"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"antonTan96"},"content":" * @author Anton Tan Hong Zhi","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"antonTan96"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"antonTan96"},"content":"public class UnknownCommandException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"antonTan96"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"antonTan96"},"content":"     * Returns an error message.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"antonTan96"},"content":"     * @return a basic error message","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"antonTan96"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"antonTan96"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"antonTan96"},"content":"        return \"I have no idea what that means\";","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"antonTan96"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"antonTan96":18}},{"path":"src/main/java/uicomponents/Reply.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antonTan96"},"content":"package uicomponents;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"antonTan96"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"antonTan96"},"content":"import crackerpackage.TodoList;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"antonTan96"},"content":"import crackerpackage.tasks.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"antonTan96"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"antonTan96"},"content":" * The UI component of the chatbot.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"antonTan96"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"antonTan96"},"content":" * @author Anton Tan Hong Zhi","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"antonTan96"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"antonTan96"},"content":"public class Reply {","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"antonTan96"},"content":"    private String line \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"antonTan96"},"content":"    private ArrayList\u003cString\u003e lines;","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"antonTan96"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"antonTan96"},"content":"     * Creates a Reply for the chatbot.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"antonTan96"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"antonTan96"},"content":"    public Reply() {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"antonTan96"},"content":"        this.lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"antonTan96"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"antonTan96"},"content":"     * Prints out the content sandwiched by 2 lines.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"antonTan96"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"antonTan96"},"content":"     * @param content the string to be printed","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"antonTan96"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"antonTan96"},"content":"    public void echo(String content) {","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"antonTan96"},"content":"        System.out.println(line);","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"antonTan96"},"content":"        System.out.println(content);","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"antonTan96"},"content":"        System.out.println(line);","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"antonTan96"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"antonTan96"},"content":"     * Prints out all the stored strings in sequential order, sandwiched by 2 lines.","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"antonTan96"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"antonTan96"},"content":"    private void echo() {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"antonTan96"},"content":"        System.out.println(line);","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"antonTan96"},"content":"        for (int i \u003d 0; i \u003c lines.size(); i++) {","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"antonTan96"},"content":"            System.out.println(lines.get(i));","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"antonTan96"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"antonTan96"},"content":"        System.out.println(line);","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"antonTan96"},"content":"        lines.removeAll(lines);","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"antonTan96"},"content":"    private void add(String s) {","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"antonTan96"},"content":"        lines.add(s);","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"antonTan96"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"antonTan96"},"content":"     * Lists out all the tasks in the Todolist","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"antonTan96"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"antonTan96"},"content":"     * @param list a Todolist that stores tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"antonTan96"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"antonTan96"},"content":"    public void iterate(TodoList list) {","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"antonTan96"},"content":"        this.add(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"antonTan96"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"antonTan96"},"content":"            this.add((i + 1) + \". \" + list.getTaskString(i));","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"antonTan96"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"antonTan96"},"content":"        echo();","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"antonTan96"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"antonTan96"},"content":"     * Prints out the reply of a store task operation","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"antonTan96"},"content":"     * @param t The task to be stored","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"antonTan96"},"content":"     * @param size The size of the list","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"antonTan96"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"antonTan96"},"content":"    public void storeTaskReply(Task t, int size) {","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"antonTan96"},"content":"        this.add(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"antonTan96"},"content":"        this.add(t.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"antonTan96"},"content":"        this.add(\"Now you have \" + size + \" task(s) in the list.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"antonTan96"},"content":"        echo();","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"antonTan96"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"antonTan96"},"content":"     * Prints out the reply of a delete task operation.","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"antonTan96"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"antonTan96"},"content":"     * @param t The deleted task","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"antonTan96"},"content":"     * @param size The size of the list","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"antonTan96"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"antonTan96"},"content":"    public void deleteTaskReply(Task t, int size) {","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"antonTan96"},"content":"        this.add(\"Got it. I\u0027ve removed this task:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"antonTan96"},"content":"        this.add(t.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"antonTan96"},"content":"        this.add(\"Now you have \" + size + \" task(s) in the list.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"antonTan96"},"content":"        echo();","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"antonTan96"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"antonTan96"},"content":"     * Prints out the reply of a mark/unmark task operation.","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"antonTan96"},"content":"     * @param t The task that is modified","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"antonTan96"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"antonTan96"},"content":"    public void modifyTaskReply(Task t) {","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"antonTan96"},"content":"        this.add(\"Operation done. This is the current state of your task:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"antonTan96"},"content":"        this.add(t.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"antonTan96"},"content":"        echo();","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"antonTan96"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"antonTan96"},"content":"     * Prints out the reply of a find task operation.","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"antonTan96"},"content":"     * @param list The list of filtered tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"antonTan96"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"antonTan96"},"content":"    public void findTaskReply(TodoList list) {","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"antonTan96"},"content":"        this.add(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"antonTan96"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"antonTan96"},"content":"            this.add((i + 1) + \". \" + list.getTaskString(i));","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"antonTan96"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"antonTan96"},"content":"        echo();","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"antonTan96"},"content":"}","lastModifiedDate":"2023-08-23"},{"lineNumber":124,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"antonTan96":124}},{"path":"src/test/java/crackerpackage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antonTan96"},"content":"package crackerpackage;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"antonTan96"},"content":"import crackerpackage.tasks.*;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"antonTan96"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"antonTan96"},"content":"import java.nio.file.*;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"antonTan96"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"antonTan96"},"content":"public class StorageTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"antonTan96"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"antonTan96"},"content":"    public void testLoadNonExistentFile() {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"antonTan96"},"content":"            Storage s \u003d new Storage(\"./data/badPath.txt\");","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"antonTan96"},"content":"            TodoList td \u003d s.load();","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"antonTan96"},"content":"            assertEquals(0, td.size());","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"antonTan96"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"antonTan96"},"content":"    public void testStore(){","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"antonTan96"},"content":"        Storage s \u003d new Storage(\"./data/badPath.txt\");","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"antonTan96"},"content":"        TodoList td \u003d s.load();","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"antonTan96"},"content":"        try{","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"antonTan96"},"content":"            td.store(new Todo(\"asdasd\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"antonTan96"},"content":"        } catch (Exception e){","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"antonTan96"},"content":"            System.out.println(e);","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"antonTan96"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"antonTan96"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"antonTan96"},"content":"        assertEquals(1,1);","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"antonTan96"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"antonTan96"},"content":"    public void testSaveFile(){","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"antonTan96"},"content":"        Storage s \u003d new Storage(\"./data/list.txt\");","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"antonTan96"},"content":"        TodoList td \u003d s.load();","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"antonTan96"},"content":"        try{","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"antonTan96"},"content":"            td.store(new Todo(\"asdasd\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"antonTan96"},"content":"            s.save(td);","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"antonTan96"},"content":"        }  catch(Exception e){","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"antonTan96"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"antonTan96"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"antonTan96"},"content":"        assertEquals(1,1);","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"antonTan96"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"antonTan96":52}},{"path":"src/test/java/crackerpackage/tasks/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"antonTan96"},"content":"package crackerpackage.tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"antonTan96"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"antonTan96"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"antonTan96"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"antonTan96"},"content":"public class TodoTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"antonTan96"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"antonTan96"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"antonTan96"},"content":"    public void testToString(){","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"antonTan96"},"content":"        try{","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"antonTan96"},"content":"            Todo s \u003d new Todo(\"aaaaa\");","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"antonTan96"},"content":"            assertEquals(\"[T][ ] aaaaa\",s.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"antonTan96"},"content":"        } catch(Exception e){","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"antonTan96"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"antonTan96"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"antonTan96"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"antonTan96"},"content":"    public void testMarking(){","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"antonTan96"},"content":"        try{","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"antonTan96"},"content":"            Todo s \u003d new Todo(\"aaaaa\");","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"antonTan96"},"content":"            s.markDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"antonTan96"},"content":"            assertEquals(\"[T][X] aaaaa\",s.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"antonTan96"},"content":"        } catch(Exception e){","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"antonTan96"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"antonTan96"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"antonTan96"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"antonTan96"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"antonTan96":30}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"antonTan96"},"content":"event asd /from 123 /to 321","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"antonTan96"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"antonTan96"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"antonTan96":3}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"antonTan96"},"content":"java -classpath ..\\bin crackerpackage.Cracker \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"antonTan96":1,"-":20}}]
