[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shuenj"},"content":"# duke.Duke project template","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"shuenj"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"shuenj":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"shuenj"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"shuenj"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"shuenj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"shuenj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"shuenj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"shuenj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"shuenj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"shuenj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"shuenj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"shuenj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"shuenj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"shuenj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"shuenj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"shuenj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"shuenj"},"content":"    mainClass.set(\"duke/Duke\")","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"shuenj":16,"-":41}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shuenj"},"content":"E | X | asdlkj | 20/12/2020 1800 | 5/5/2023 1900","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"shuenj"},"content":"D |   |  asad | 20/12/2020 1800","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"shuenj"},"content":"T |   | salkdjlkj","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"shuenj"},"content":"E |   | asdlkj | 20/12/2020 1800 | 5/5/2023 1900","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"shuenj"},"content":"D |   |  asad | 20/12/2020 1800","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"shuenj":5}},{"path":"src/main/java/commands/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuenj"},"content":"package commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"shuenj"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"shuenj"},"content":"import io.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"shuenj"},"content":"import tasks.DeadlineTask;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"shuenj"},"content":"import tasks.EventTask;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"shuenj"},"content":"import tasks.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"shuenj"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"shuenj"},"content":"import tasks.TodoTask;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"shuenj"},"content":"import ui.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"shuenj"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"shuenj"},"content":" * Represents a command to add a task to the list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"shuenj"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"shuenj"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"shuenj"},"content":"     * Constructor for AddCommand","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"shuenj"},"content":"     * @param fullCommand The command to be executed","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"shuenj"},"content":"    public AddTaskCommand(String fullCommand) {","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"shuenj"},"content":"        super(fullCommand);","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"shuenj"},"content":"     * Enum for the different types of tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"shuenj"},"content":"    public enum TaskType {","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"shuenj"},"content":"        TODO,","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"shuenj"},"content":"        DEADLINE,","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"shuenj"},"content":"        EVENT","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"shuenj"},"content":"     * Executes the AddCommand, adding the task to the list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"shuenj"},"content":"     * @param taskList The TaskList object that stores the list of tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"shuenj"},"content":"     * @param ui The Ui object that handles the user interface","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"shuenj"},"content":"     * @param storage The Storage object that handles the saving and loading of tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"shuenj"},"content":"     * @throws DukeException If the command is invalid","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"shuenj"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"shuenj"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"shuenj"},"content":"        String input \u003d getFullCommand();","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"shuenj"},"content":"        String[] inputArray \u003d input.split(\" \");","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"shuenj"},"content":"        String taskType \u003d inputArray[0];","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"shuenj"},"content":"        String[] inputSplit;","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"shuenj"},"content":"        Task newTask;","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"shuenj"},"content":"        switch (TaskType.valueOf(taskType.toUpperCase())) {","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"shuenj"},"content":"        case TODO:","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"shuenj"},"content":"            try {","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"shuenj"},"content":"                newTask \u003d new TodoTask(inputArray[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"shuenj"},"content":"                taskList.add(newTask);","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"shuenj"},"content":"                ui.showTaskAdded(newTask, taskList.size());","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"shuenj"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"shuenj"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"shuenj"},"content":"                throw new DukeException(\"Description of todo cannot be empty.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"shuenj"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"shuenj"},"content":"        case DEADLINE:","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"shuenj"},"content":"            try {","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"shuenj"},"content":"                inputSplit \u003d input.split(\" /by \");","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"shuenj"},"content":"                newTask \u003d new DeadlineTask(inputSplit[0].substring(9), inputSplit[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"shuenj"},"content":"                taskList.add(newTask);","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"shuenj"},"content":"                ui.showTaskAdded(newTask, taskList.size());","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"shuenj"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"shuenj"},"content":"            } catch (ArrayIndexOutOfBoundsException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"shuenj"},"content":"                throw new DukeException(\"Deadline should follow the format deadline \u003cdescription\u003e /by \u003cdate and time\u003e\");","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"shuenj"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"shuenj"},"content":"        case EVENT:","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"shuenj"},"content":"            try {","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"shuenj"},"content":"                inputSplit \u003d input.split(\" /\");","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"shuenj"},"content":"                newTask \u003d new EventTask(inputSplit[0].substring(6),","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"shuenj"},"content":"                        inputSplit[1].substring(5),","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"shuenj"},"content":"                        inputSplit[2].substring(3));","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"shuenj"},"content":"                taskList.add(newTask);","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"shuenj"},"content":"                ui.showTaskAdded(newTask, taskList.size());","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"shuenj"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"shuenj"},"content":"            } catch (StringIndexOutOfBoundsException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"shuenj"},"content":"                throw new DukeException(\"Event should follow the format event \u003cdescription\u003e \"","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"shuenj"},"content":"                        + \"/from \u003cstart date and time\u003e /to \u003cend date and time\u003e\");","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"shuenj"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"shuenj"},"content":"        default:","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"shuenj"},"content":"            throw new DukeException(\"Task type is not recognised. Please use todo, deadline or event.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":86,"author":{"gitId":"shuenj"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"shuenj":86}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuenj"},"content":"package commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"shuenj"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"shuenj"},"content":"import io.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"shuenj"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"shuenj"},"content":"import ui.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"shuenj"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"shuenj"},"content":" * Represents a command to be executed.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"shuenj"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"shuenj"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"shuenj"},"content":"    /** Command by a user in a line. */","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"shuenj"},"content":"    private String fullCommand;","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"shuenj"},"content":"    /** Indicate if command is terminal. */","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"shuenj"},"content":"    private boolean isExit;","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"shuenj"},"content":"     * Constructor for Command.","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"shuenj"},"content":"     * @param fullCommand","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"shuenj"},"content":"    public Command(String fullCommand) {","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"shuenj"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"shuenj"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"shuenj"},"content":"     * Constructor for Command.","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"shuenj"},"content":"    public Command() {","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"shuenj"},"content":"        this.fullCommand \u003d \"\";","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"shuenj"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"shuenj"},"content":"     * Returns true if command is terminal.","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"shuenj"},"content":"     * @return isExit","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"shuenj"},"content":"    public boolean canExit() {","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"shuenj"},"content":"        return this.isExit;","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"shuenj"},"content":"     * Sets command to be terminal.","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"shuenj"},"content":"    public void setExit() {","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"shuenj"},"content":"        this.isExit \u003d true;","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"shuenj"},"content":"     * Returns the command.","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"shuenj"},"content":"     * @return fullCommand","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"shuenj"},"content":"    public String getFullCommand() {","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"shuenj"},"content":"        return this.fullCommand;","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"shuenj"},"content":"     * Sets the command.","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"shuenj"},"content":"     * @param fullCommand","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"shuenj"},"content":"    public void setCommand(String fullCommand) {","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"shuenj"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"shuenj"},"content":"     * Executes the command.","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"shuenj"},"content":"     * @param taskList","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"shuenj"},"content":"     * @param ui","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"shuenj"},"content":"     * @param storage","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"shuenj"},"content":"     * @throws DukeException","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"shuenj"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"shuenj"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"shuenj":75}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuenj"},"content":"package commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"shuenj"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"shuenj"},"content":"import io.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"shuenj"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"shuenj"},"content":"import ui.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"shuenj"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"shuenj"},"content":" * Represents a command that delete a task.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"shuenj"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"shuenj"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"shuenj"},"content":"     * Constructor for DeleteCommand.","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"shuenj"},"content":"     * @param fullCommand","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"shuenj"},"content":"    public DeleteCommand(String fullCommand) {","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"shuenj"},"content":"        super(fullCommand);","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"shuenj"},"content":"     * Executes the DeleteCommand, deleting the task from the list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"shuenj"},"content":"     * @param taskList The TaskList object that stores the list of tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"shuenj"},"content":"     * @param ui The Ui object that handles the user interface","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"shuenj"},"content":"     * @param storage The Storage object that handles the saving and loading of tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"shuenj"},"content":"     * @throws DukeException If the command is invalid","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"shuenj"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"shuenj"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"shuenj"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"shuenj"},"content":"            int taskId \u003d Integer.parseInt(getFullCommand().substring(7)) - 1;","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"shuenj"},"content":"            assert getFullCommand().substring(0, 6).equals(\"delete\") : \"delete not in command\";","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"shuenj"},"content":"            ui.showTaskDeleted(taskList.getTask(taskId), taskList.size());","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"shuenj"},"content":"            taskList.delete(taskId);","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"shuenj"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"shuenj"},"content":"            throw new DukeException(\"Please enter a valid task number.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"shuenj"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"shuenj"},"content":"            throw new DukeException(\"Please ensure task exists.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"shuenj"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"shuenj":41}},{"path":"src/main/java/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuenj"},"content":"package commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"shuenj"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"shuenj"},"content":"import io.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"shuenj"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"shuenj"},"content":"import ui.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"shuenj"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"shuenj"},"content":" * Represents a command that exits the program.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"shuenj"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"shuenj"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"shuenj"},"content":"     * Constructor for ExitCommand.","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"shuenj"},"content":"    public ExitCommand() {","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"shuenj"},"content":"        super(\"bye\");","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"shuenj"},"content":"     * Executes the ExitCommand, exiting the program.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"shuenj"},"content":"     * @param taskList The TaskList object that stores the list of tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"shuenj"},"content":"     * @param ui The Ui object that handles the user interface","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"shuenj"},"content":"     * @param storage The Storage object that handles the saving and loading of tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"shuenj"},"content":"     * @throws DukeException If the command is invalid","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"shuenj"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"shuenj"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"shuenj"},"content":"        ui.showGoodbye();","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"shuenj"},"content":"        setExit();","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"shuenj"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"shuenj":31}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuenj"},"content":"package commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"shuenj"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"shuenj"},"content":"import io.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"shuenj"},"content":"import tasks.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"shuenj"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"shuenj"},"content":"import ui.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"shuenj"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"shuenj"},"content":" * Represents a command to be executed that finds tasks with a keyword.","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"shuenj"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"shuenj"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"shuenj"},"content":"     * Constructor for FindCommand.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"shuenj"},"content":"    public FindCommand(String command) {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"shuenj"},"content":"        super(command);","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"shuenj"},"content":"     * Executes the FindCommand, finding tasks with a keyword.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"shuenj"},"content":"     * @param taskList The TaskList object that stores the list of tasks","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"shuenj"},"content":"     * @param ui The Ui object that handles the user interface","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"shuenj"},"content":"     * @param storage The Storage object that handles the saving and loading of tasks","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"shuenj"},"content":"     * @throws DukeException If the command is invalid","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"shuenj"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"shuenj"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"shuenj"},"content":"        String input \u003d getFullCommand();","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"shuenj"},"content":"        String[] inputArray \u003d input.split(\" \");","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"shuenj"},"content":"        String keyword \u003d inputArray[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"shuenj"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"shuenj"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"shuenj"},"content":"            Task task \u003d taskList.getTask(i);","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"shuenj"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"shuenj"},"content":"                output +\u003d (i + 1) + \". \" + task.toString() + \"\\n\";","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"shuenj"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"shuenj"},"content":"        ui.showFind(output);","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"shuenj"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"shuenj":41}},{"path":"src/main/java/commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuenj"},"content":"package commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"shuenj"},"content":"import io.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"shuenj"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"shuenj"},"content":"import ui.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"shuenj"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"shuenj"},"content":" * Represents a command to be executed that is invalid.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"shuenj"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"shuenj"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"shuenj"},"content":"     * Executes the InvalidCommand, showing an error message.","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"shuenj"},"content":"     * @param taskList The TaskList object that stores the list of tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"shuenj"},"content":"     * @param ui The Ui object that handles the user interface","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"shuenj"},"content":"     * @param storage The Storage object that handles the saving and loading of tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"shuenj"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"shuenj"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"shuenj"},"content":"        ui.showInvalidCommandMessage();","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"shuenj"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"shuenj":22}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuenj"},"content":"package commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"shuenj"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"shuenj"},"content":"import io.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"shuenj"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"shuenj"},"content":"import ui.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"shuenj"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"shuenj"},"content":" * Represents a command that executes displaying the tasklist.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"shuenj"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"shuenj"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"shuenj"},"content":"     * Executes the ListCommand, displaying the tasklist.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"shuenj"},"content":"     * @param taskList The TaskList object that stores the list of tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"shuenj"},"content":"     * @param ui The Ui object that handles the user interface","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"shuenj"},"content":"     * @param storage The Storage object that handles the saving and loading of tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"shuenj"},"content":"     * @throws DukeException If the command is invalid","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"shuenj"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"shuenj"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"shuenj"},"content":"        ui.showList(taskList);","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"shuenj"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"shuenj":22}},{"path":"src/main/java/commands/LoadCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuenj"},"content":"package commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"shuenj"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"shuenj"},"content":"import io.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"shuenj"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"shuenj"},"content":"import ui.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"shuenj"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"shuenj"},"content":" * Represents a command to be executed that loads tasklist from storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"shuenj"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"shuenj"},"content":"public class LoadCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"shuenj"},"content":"     * Executes the LoadCommand, loading the tasklist from storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"shuenj"},"content":"     * @param taskList The TaskList object that stores the list of tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"shuenj"},"content":"     * @param ui The Ui object that handles the user interface","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"shuenj"},"content":"     * @param storage The Storage object that handles the saving and loading of tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"shuenj"},"content":"     * @throws DukeException If the command is invalid","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"shuenj"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"shuenj"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"shuenj"},"content":"        storage.load(taskList);","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"shuenj"},"content":"        ui.showLoad();","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"shuenj"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"shuenj":24}},{"path":"src/main/java/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuenj"},"content":"package commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"shuenj"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"shuenj"},"content":"import io.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"shuenj"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"shuenj"},"content":"import ui.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"shuenj"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"shuenj"},"content":" * Represents a command to be executed that marks a task as done.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"shuenj"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"shuenj"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"shuenj"},"content":"     * Constructor for MarkCommand.","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"shuenj"},"content":"     * @param fullCommand","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"shuenj"},"content":"    public MarkCommand(String fullCommand) {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"shuenj"},"content":"        super(fullCommand);","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"shuenj"},"content":"     * Executes the MarkCommand, marking a task as done.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"shuenj"},"content":"     * @param taskList The TaskList object that stores the list of tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"shuenj"},"content":"     * @param ui The Ui object that handles the user interface","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"shuenj"},"content":"     * @param storage The Storage object that handles the saving and loading of tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"shuenj"},"content":"     * @throws DukeException If the command is invalid","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"shuenj"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"shuenj"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"shuenj"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"shuenj"},"content":"            int taskId \u003d Integer.parseInt(getFullCommand().substring(5)) - 1;","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"shuenj"},"content":"            taskList.mark(taskId);","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"shuenj"},"content":"            ui.showTaskMarked(taskList.getTask(taskId));","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"shuenj"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"shuenj"},"content":"            throw new DukeException(\"Please enter a valid task number.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"shuenj"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"shuenj"},"content":"            throw new DukeException(\"Please ensure task exists.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"shuenj"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"shuenj":39}},{"path":"src/main/java/commands/SaveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuenj"},"content":"package commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"shuenj"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"shuenj"},"content":"import io.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"shuenj"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"shuenj"},"content":"import ui.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"shuenj"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"shuenj"},"content":" * Represents a command to be executed.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"shuenj"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"shuenj"},"content":"public class SaveCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"shuenj"},"content":"     * Executes the SaveCommand, saving the tasklist.","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"shuenj"},"content":"     * @param taskList The TaskList object that stores the list of tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"shuenj"},"content":"     * @param ui The Ui object that handles the user interface","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"shuenj"},"content":"     * @param storage The Storage object that handles the saving and loading of tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"shuenj"},"content":"     * @throws DukeException If the command is invalid","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"shuenj"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"shuenj"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"shuenj"},"content":"        storage.save(taskList);","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"shuenj"},"content":"        ui.showSave();","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"shuenj"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"shuenj":24}},{"path":"src/main/java/commands/ScheduleCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuenj"},"content":"package commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"shuenj"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"shuenj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"shuenj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"shuenj"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"shuenj"},"content":"import io.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"shuenj"},"content":"import tasks.DeadlineTask;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"shuenj"},"content":"import tasks.EventTask;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"shuenj"},"content":"import tasks.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"shuenj"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"shuenj"},"content":"import ui.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"shuenj"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"shuenj"},"content":" * Represents a command that executes displaying tasks on a specific date.","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"shuenj"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"shuenj"},"content":"public class ScheduleCommand extends Command {","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"shuenj"},"content":"    /** Output format for date */","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"shuenj"},"content":"    protected static final DateTimeFormatter DATE_FORMAT_OUTPUT \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"shuenj"},"content":"    /** Output String */","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"shuenj"},"content":"    private String output \u003d \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"shuenj"},"content":"     * Constructor for ScheduleCommand.","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"shuenj"},"content":"     * @param fullCommand","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"shuenj"},"content":"    public ScheduleCommand(String fullCommand) {","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"shuenj"},"content":"        super(fullCommand);","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"shuenj"},"content":"     * Executes the ScheduleCommand, displaying tasks on a specific date.","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"shuenj"},"content":"     * @param taskList The TaskList object that stores the list of tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"shuenj"},"content":"     * @param ui The Ui object that handles the user interface","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"shuenj"},"content":"     * @param storage The Storage object that handles the saving and loading of tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"shuenj"},"content":"     * @throws DukeException If the command is invalid","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"shuenj"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"shuenj"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"shuenj"},"content":"        String input \u003d getFullCommand();","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"shuenj"},"content":"        LocalDate queryDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"shuenj"},"content":"        System.out.println(input.substring(9));","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"shuenj"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"shuenj"},"content":"            queryDateTime \u003d LocalDate.parse(input.substring(9), DATE_FORMAT_OUTPUT);","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"shuenj"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"shuenj"},"content":"            throw new DukeException(\"Date should follow the format d/M/yyyy\");","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"shuenj"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"shuenj"},"content":"            Task task \u003d taskList.getTask(i);","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"shuenj"},"content":"            if (task instanceof DeadlineTask) {","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"shuenj"},"content":"                DeadlineTask deadline \u003d (DeadlineTask) task;","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"shuenj"},"content":"                if (deadline.getByDateTime().toLocalDate().equals(queryDateTime)) {","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"shuenj"},"content":"                    output +\u003d (i + 1) + \". \" + deadline.toString() + \"\\n\";","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"shuenj"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"shuenj"},"content":"            } else if (task instanceof EventTask) {","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"shuenj"},"content":"                EventTask event \u003d (EventTask) task;","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"shuenj"},"content":"                if (!event.getStartDate().toLocalDate().isAfter(queryDateTime)","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"shuenj"},"content":"                        \u0026 !event.getEndDate().toLocalDate().isBefore(queryDateTime)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"shuenj"},"content":"                    output +\u003d (i + 1) + \". \" + event.toString() + \"\\n\";","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"shuenj"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"shuenj"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"shuenj"},"content":"        ui.showSchedule(output);","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"shuenj"},"content":"    public String getOutput() {","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"shuenj"},"content":"        return output;","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"shuenj"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"shuenj":71}},{"path":"src/main/java/commands/SnoozeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuenj"},"content":"package commands;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"shuenj"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"shuenj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"shuenj"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"shuenj"},"content":"import io.Storage;","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"shuenj"},"content":"import tasks.DeadlineTask;","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"shuenj"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"shuenj"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"shuenj"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"shuenj"},"content":"/**","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"shuenj"},"content":" * Represents a command that executes snoozing a task.","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"shuenj"},"content":" */","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"shuenj"},"content":"public class SnoozeCommand extends Command {","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"shuenj"},"content":"     * Constructor for SnoozeCommand.","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"shuenj"},"content":"     * @param fullCommand The command to be executed","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"shuenj"},"content":"    public SnoozeCommand(String fullCommand) {","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"shuenj"},"content":"        super(fullCommand);","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"shuenj"},"content":"     * Executes the SnoozeCommand, snoozing a task.","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"shuenj"},"content":"     * @param taskList The TaskList object that stores the list of tasks","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"shuenj"},"content":"     * @param ui The Ui object that handles the user interface","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"shuenj"},"content":"     * @param storage The Storage object that handles the saving and loading of tasks","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"shuenj"},"content":"     * @throws DukeException If the command is invalid","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"shuenj"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"shuenj"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"shuenj"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"shuenj"},"content":"            String[] commandArray \u003d getFullCommand().split(\" \");","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"shuenj"},"content":"            int taskNumber \u003d Integer.parseInt(commandArray[1]);","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"shuenj"},"content":"            // snooze 1 /by 2/12/2019 1800","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"shuenj"},"content":"            String[] commandArrayBy \u003d getFullCommand().split(\" /by \");","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"shuenj"},"content":"            String dataString \u003d commandArrayBy[1];","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"shuenj"},"content":"            System.out.println(dataString);","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"shuenj"},"content":"            LocalDateTime byDateTime;","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"shuenj"},"content":"            try {","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"shuenj"},"content":"                byDateTime \u003d LocalDateTime.parse(dataString, Task.getDateFormat());","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"shuenj"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"shuenj"},"content":"                throw new DukeException(\"Date should follow the format d/M/yyyy HHmm\");","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"shuenj"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"shuenj"},"content":"            try {","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"shuenj"},"content":"                DeadlineTask task \u003d (DeadlineTask) taskList.getTask(taskNumber);","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"shuenj"},"content":"                task.setByDateTime(byDateTime);","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"shuenj"},"content":"                ui.showsnoozeTask(task);","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"shuenj"},"content":"            } catch (ClassCastException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"shuenj"},"content":"                throw new DukeException(\"Task is not a deadline task\");","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"shuenj"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"shuenj"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"shuenj"},"content":"            throw new DukeException(\"Please enter a valid date in the format: dd/mm/yyyy\");","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"shuenj"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"shuenj"},"content":"            throw new DukeException(\"Please enter a valid task number\");","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"shuenj"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"shuenj"},"content":"            throw new DukeException(\"Please enter a valid date\");","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"shuenj"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"shuenj":61}},{"path":"src/main/java/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuenj"},"content":"package commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"shuenj"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"shuenj"},"content":"import io.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"shuenj"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"shuenj"},"content":"import ui.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"shuenj"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"shuenj"},"content":" * Represents a command to be executed that unmarks a task.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"shuenj"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"shuenj"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"shuenj"},"content":"     * Constructor for UnmarkCommand.","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"shuenj"},"content":"     * @param fullCommand  The command to be executed","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"shuenj"},"content":"    public UnmarkCommand(String fullCommand) {","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"shuenj"},"content":"        super(fullCommand);","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"shuenj"},"content":"     * Executes the UnmarkCommand, unmarking a task.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"shuenj"},"content":"     * @param taskList The TaskList object that stores the list of tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"shuenj"},"content":"     * @param ui The Ui object that handles the user interface","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"shuenj"},"content":"     * @param storage The Storage object that handles the saving and loading of tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"shuenj"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"shuenj"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"shuenj"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"shuenj"},"content":"            int taskId \u003d Integer.parseInt(getFullCommand().substring(7)) - 1;","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"shuenj"},"content":"            taskList.unmark(taskId);","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"shuenj"},"content":"            ui.showTaskUnmarked(taskList.getTask(taskId));","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"shuenj"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"shuenj"},"content":"            throw new DukeException(\"Please enter a valid task number.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"shuenj"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"shuenj"},"content":"            throw new DukeException(\"Please ensure task exists.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"shuenj"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"shuenj":38}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuenj"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"shuenj"},"content":"import commands.Command;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"shuenj"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"shuenj"},"content":"import io.Parser;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"shuenj"},"content":"import io.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"shuenj"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"shuenj"},"content":"import ui.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"shuenj"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"shuenj"},"content":" * Chatbot to interact and manage tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"shuenj"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"shuenj"},"content":"    /** Storage to save and load from local. */","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"shuenj"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"shuenj"},"content":"    /** List of tasks. */","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"shuenj"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"shuenj"},"content":"    /** User interface */","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"shuenj"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"shuenj"},"content":"     * Constructor for Duke.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"shuenj"},"content":"     * @param filePath","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"shuenj"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"shuenj"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"shuenj"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"shuenj"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"shuenj"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"shuenj"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"shuenj"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"shuenj"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"shuenj"},"content":"     * Constructor for Duke","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"shuenj"},"content":"    public Duke() {","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"shuenj"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"shuenj"},"content":"        storage \u003d new Storage(\"data/tasks.txt\");","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"shuenj"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"shuenj"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"shuenj"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"shuenj"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"shuenj"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"shuenj"},"content":"     * Runs the chatbot.","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"shuenj"},"content":"    public void run() {","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"shuenj"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"shuenj"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"shuenj"},"content":"        while (!isExit) {","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"shuenj"},"content":"            try {","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"shuenj"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"shuenj"},"content":"                System.out.println(\"Your command: \" + fullCommand);","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"shuenj"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"shuenj"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"shuenj"},"content":"                isExit \u003d c.canExit();","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"shuenj"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"shuenj"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"shuenj"},"content":"            } finally {","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"shuenj"},"content":"                ui.showLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"shuenj"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"shuenj"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"shuenj"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"shuenj"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"shuenj"},"content":"            c.execute(tasks, ui, storage);","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"shuenj"},"content":"            return ui.getOutput(\"Dude says:\");","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"shuenj"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"shuenj"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"shuenj"},"content":"    // public static void main(String[] args) {","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"shuenj"},"content":"    //     new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"shuenj"},"content":"    // }","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"shuenj":82,"-":2}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuenj"},"content":"package exceptions;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"shuenj"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"shuenj"},"content":" * Represents a DukeException.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"shuenj"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"shuenj"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"shuenj"},"content":"     * Constructor for DukeException.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"shuenj"},"content":"     * @param message","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"shuenj"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"shuenj"},"content":"        super(message);","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"shuenj"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"shuenj":14}},{"path":"src/main/java/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuenj"},"content":"package gui;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"shuenj"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"shuenj"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"shuenj"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"shuenj"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"shuenj"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"shuenj"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"shuenj"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"shuenj"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"shuenj"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"shuenj"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"shuenj"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"shuenj"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"shuenj"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"shuenj"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"shuenj"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"shuenj"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"shuenj"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"shuenj"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"shuenj"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"shuenj"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"shuenj"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"shuenj"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"shuenj"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"shuenj"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"shuenj"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"shuenj"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"shuenj"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"shuenj"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"shuenj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"shuenj"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"shuenj"},"content":"        dialog.setWrapText(true); // Enable text wrapping","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"shuenj"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"shuenj"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"shuenj"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"shuenj"},"content":"    private void flip() {","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"shuenj"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"shuenj"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"shuenj"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"shuenj"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"shuenj"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"shuenj"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"shuenj"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"shuenj"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"shuenj"},"content":"        db.flip();","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"shuenj"},"content":"        return db;","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"shuenj"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"shuenj":61}},{"path":"src/main/java/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuenj"},"content":"package gui;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"shuenj"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"shuenj"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"shuenj"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"shuenj"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"shuenj"},"content":"public class Launcher {","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"shuenj"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"shuenj"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"shuenj"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"shuenj":11}},{"path":"src/main/java/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuenj"},"content":"package gui;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"shuenj"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"shuenj"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"shuenj"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"shuenj"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"shuenj"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"shuenj"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"shuenj"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"shuenj"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"shuenj"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"shuenj"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"shuenj"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"shuenj"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"shuenj"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"shuenj"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"shuenj"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"shuenj"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"shuenj"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"shuenj"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"shuenj"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"shuenj"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"shuenj"},"content":"            stage.show();","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"shuenj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"shuenj"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"shuenj"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"shuenj":31}},{"path":"src/main/java/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuenj"},"content":"package gui;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"shuenj"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"shuenj"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"shuenj"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"shuenj"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"shuenj"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"shuenj"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"shuenj"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"shuenj"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"shuenj"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"shuenj"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"shuenj"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"shuenj"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"shuenj"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"shuenj"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"shuenj"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"shuenj"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"shuenj"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"shuenj"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"shuenj"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"shuenj"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"shuenj"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"shuenj"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/doggo.jpg\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"shuenj"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/cat.jpg\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"shuenj"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"shuenj"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"shuenj"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"shuenj"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"shuenj"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"shuenj"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"shuenj"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"shuenj"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"shuenj"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"shuenj"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"shuenj"},"content":"        if (input.equals(\"\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"shuenj"},"content":"            return;","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"shuenj"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"shuenj"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"shuenj"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"shuenj"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"shuenj"},"content":"        );","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"shuenj"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"shuenj"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"shuenj":54}},{"path":"src/main/java/io/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuenj"},"content":"package io;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"shuenj"},"content":"import commands.AddTaskCommand;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"shuenj"},"content":"import commands.Command;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"shuenj"},"content":"import commands.DeleteCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"shuenj"},"content":"import commands.ExitCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"shuenj"},"content":"import commands.FindCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"shuenj"},"content":"import commands.InvalidCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"shuenj"},"content":"import commands.ListCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"shuenj"},"content":"import commands.LoadCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"shuenj"},"content":"import commands.MarkCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"shuenj"},"content":"import commands.SaveCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"shuenj"},"content":"import commands.ScheduleCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"shuenj"},"content":"import commands.SnoozeCommand;","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"shuenj"},"content":"import commands.UnmarkCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"shuenj"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"shuenj"},"content":" * Represents a parser that parses the user input.","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"shuenj"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"shuenj"},"content":"public class Parser {","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"shuenj"},"content":"     * Parses the user input and returns the corresponding command.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"shuenj"},"content":"     * @param fullCommand","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"shuenj"},"content":"     * @return Command","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"shuenj"},"content":"    public static Command parse(String fullCommand) {","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"shuenj"},"content":"        String[] commandArray \u003d fullCommand.split(\" \");","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"shuenj"},"content":"        assert commandArray.length \u003e 0 : \"commandArray should not be empty\";","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"shuenj"},"content":"        String commandType \u003d commandArray[0];","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"shuenj"},"content":"        Command command;","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"shuenj"},"content":"        switch (commandType) {","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"shuenj"},"content":"        case \"bye\":","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"shuenj"},"content":"            command \u003d new ExitCommand();","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"shuenj"},"content":"            break;","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"shuenj"},"content":"        case \"list\":","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"shuenj"},"content":"            command \u003d new ListCommand();","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"shuenj"},"content":"            break;","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"shuenj"},"content":"        case \"save\":","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"shuenj"},"content":"            command \u003d new SaveCommand();","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"shuenj"},"content":"            break;","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"shuenj"},"content":"        case \"load\":","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"shuenj"},"content":"            command \u003d new LoadCommand();","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"shuenj"},"content":"            break;","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"shuenj"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"shuenj"},"content":"            command \u003d new MarkCommand(fullCommand);","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"shuenj"},"content":"            break;","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"shuenj"},"content":"        case \"unmark\":","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"shuenj"},"content":"            command \u003d new UnmarkCommand(fullCommand);","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"shuenj"},"content":"            break;","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"shuenj"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"shuenj"},"content":"            command \u003d new AddTaskCommand(fullCommand);","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"shuenj"},"content":"            break;","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"shuenj"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"shuenj"},"content":"            command \u003d new AddTaskCommand(fullCommand);","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"shuenj"},"content":"            break;","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"shuenj"},"content":"        case \"event\":","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"shuenj"},"content":"            command \u003d new AddTaskCommand(fullCommand);","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"shuenj"},"content":"            break;","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"shuenj"},"content":"        case \"delete\":","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"shuenj"},"content":"            command \u003d new DeleteCommand(fullCommand);","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"shuenj"},"content":"            break;","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"shuenj"},"content":"        case \"schedule\":","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"shuenj"},"content":"            command \u003d new ScheduleCommand(fullCommand);","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"shuenj"},"content":"            break;","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"shuenj"},"content":"        case \"find\":","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"shuenj"},"content":"            command \u003d new FindCommand(fullCommand);","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"shuenj"},"content":"            break;","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"shuenj"},"content":"        case \"snooze\":","lastModifiedDate":"2023-09-12"},{"lineNumber":70,"author":{"gitId":"shuenj"},"content":"            command \u003d new SnoozeCommand(fullCommand);","lastModifiedDate":"2023-09-12"},{"lineNumber":71,"author":{"gitId":"shuenj"},"content":"            break;","lastModifiedDate":"2023-09-12"},{"lineNumber":72,"author":{"gitId":"shuenj"},"content":"        default:","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"shuenj"},"content":"            command \u003d new InvalidCommand();","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"shuenj"},"content":"            break;","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"shuenj"},"content":"        return command;","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"shuenj"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"shuenj":79}},{"path":"src/main/java/io/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuenj"},"content":"package io;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"shuenj"},"content":"import java.io.File;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"shuenj"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"shuenj"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"shuenj"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"shuenj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"shuenj"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"shuenj"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"shuenj"},"content":"import tasks.DeadlineTask;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"shuenj"},"content":"import tasks.EventTask;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"shuenj"},"content":"import tasks.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"shuenj"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"shuenj"},"content":"import tasks.TodoTask;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"shuenj"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"shuenj"},"content":" * Represents a storage object that handles the saving and loading of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"shuenj"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"shuenj"},"content":"public class Storage {","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"shuenj"},"content":"    /** The filepath to load and save the file */","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"shuenj"},"content":"    private String filepath \u003d \"data/tasks.txt\";","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"shuenj"},"content":"     * Constructor for Storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"shuenj"},"content":"     * @param filePath","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"shuenj"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"shuenj"},"content":"        this.filepath \u003d filePath;","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"shuenj"},"content":"     * Loads the tasks from the file.","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"shuenj"},"content":"     * @return The list of tasks","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"shuenj"},"content":"     * @throws DukeException","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"shuenj"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"shuenj"},"content":"        ArrayList\u003cTask\u003e userTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"shuenj"},"content":"        String fileString \u003d \"\";","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"shuenj"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"shuenj"},"content":"            File file \u003d new File(filepath);","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"shuenj"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"shuenj"},"content":"                throw new DukeException(\"File does not exist.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"shuenj"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"shuenj"},"content":"            Scanner s \u003d new Scanner(file);","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"shuenj"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"shuenj"},"content":"                fileString +\u003d s.nextLine() + \"\\n\";","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"shuenj"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"shuenj"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"shuenj"},"content":"            throw new DukeException(\"Loading failed: \" + e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"shuenj"},"content":"        String[] fileStringArray \u003d fileString.split(\"\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"shuenj"},"content":"        for (int i \u003d 0; i \u003c fileStringArray.length; i++) {","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"shuenj"},"content":"            String[] taskStringArray \u003d fileStringArray[i].split(\" \\\\| \");","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"shuenj"},"content":"            String taskType \u003d taskStringArray[0];","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"shuenj"},"content":"            Task task;","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"shuenj"},"content":"            switch (taskType) {","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"shuenj"},"content":"            case \"T\":","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"shuenj"},"content":"                task \u003d new TodoTask();","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"shuenj"},"content":"                break;","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"shuenj"},"content":"            case \"D\":","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"shuenj"},"content":"                task \u003d new DeadlineTask();","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"shuenj"},"content":"                break;","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"shuenj"},"content":"            case \"E\":","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"shuenj"},"content":"                task \u003d new EventTask();","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"shuenj"},"content":"                break;","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"shuenj"},"content":"            default:","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"shuenj"},"content":"                throw new DukeException(\"Corrupted file, ensure content is in format.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"shuenj"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"shuenj"},"content":"            task.fromFileString(fileStringArray[i]);","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"shuenj"},"content":"            userTasks.add(task);","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"shuenj"},"content":"        return userTasks;","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"shuenj"},"content":"     * Loads the tasks from the file and sets it to the taskList.","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"shuenj"},"content":"     * @param taskList","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"shuenj"},"content":"     * @throws DukeException","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"shuenj"},"content":"    public void load(TaskList taskList) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"shuenj"},"content":"        ArrayList\u003cTask\u003e userTasks \u003d this.load();","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"shuenj"},"content":"        taskList.setTasks(userTasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"shuenj"},"content":"     * Saves the tasks to the file.","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"shuenj"},"content":"     * @param taskList","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"shuenj"},"content":"     * @throws DukeException","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"shuenj"},"content":"    public void save(TaskList taskList) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"shuenj"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"shuenj"},"content":"            File file \u003d new File(filepath);","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"shuenj"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"shuenj"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"shuenj"},"content":"                file.createNewFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"shuenj"},"content":"                System.out.println(\"File created: \" + file.getName());","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"shuenj"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"shuenj"},"content":"            FileWriter fw \u003d new FileWriter(filepath);","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"shuenj"},"content":"            taskList.getTasks().forEach(task -\u003e {","lastModifiedDate":"2023-09-10"},{"lineNumber":100,"author":{"gitId":"shuenj"},"content":"                try {","lastModifiedDate":"2023-09-10"},{"lineNumber":101,"author":{"gitId":"shuenj"},"content":"                    fw.write(task.toFileString() + \"\\n\");","lastModifiedDate":"2023-09-10"},{"lineNumber":102,"author":{"gitId":"shuenj"},"content":"                } catch (IOException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":103,"author":{"gitId":"shuenj"},"content":"                    e.printStackTrace();","lastModifiedDate":"2023-09-10"},{"lineNumber":104,"author":{"gitId":"shuenj"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"shuenj"},"content":"            });","lastModifiedDate":"2023-09-10"},{"lineNumber":106,"author":{"gitId":"shuenj"},"content":"            fw.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":107,"author":{"gitId":"shuenj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":108,"author":{"gitId":"shuenj"},"content":"            throw new DukeException(\"Saving failed: \" + e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":110,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":111,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":112,"author":{"gitId":"shuenj"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"shuenj":112}},{"path":"src/main/java/tasks/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuenj"},"content":"package tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"shuenj"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"shuenj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"shuenj"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"shuenj"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"shuenj"},"content":" * Represents a deadline task.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"shuenj"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"shuenj"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"shuenj"},"content":"    /** Datetime of deadline of task */","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"shuenj"},"content":"    protected LocalDateTime byDateTime;","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"shuenj"},"content":"     * Constructor for DeadlineTask.","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"shuenj"},"content":"     * @param description","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"shuenj"},"content":"     * @param byDateTime","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"shuenj"},"content":"     * @throws DukeException","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"shuenj"},"content":"    public DeadlineTask(String description, String byDateTime) throws DukeException {","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"shuenj"},"content":"        super(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"shuenj"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"shuenj"},"content":"            this.byDateTime \u003d LocalDateTime.parse(byDateTime, Task.getDateFormat());","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"shuenj"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"shuenj"},"content":"            throw new DukeException(\"Date should follow the format d/M/yyyy HHmm\");","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"shuenj"},"content":"     * Constructor for DeadlineTask.","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"shuenj"},"content":"    public DeadlineTask() {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"shuenj"},"content":"        super(\"\");","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"shuenj"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"shuenj"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"shuenj"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.byDateTime.format(Task.getDateFormatOutput()) + \")\";","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":42,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"shuenj"},"content":"     * Returns the string representation of the deadline task to be saved in a file.","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"shuenj"},"content":"     * @return LocalDateTime byDateTime","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"shuenj"},"content":"    public LocalDateTime getByDateTime() {","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"shuenj"},"content":"        return this.byDateTime;","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"shuenj"},"content":"     * Sets the deadline of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"shuenj"},"content":"     * @param by LocalDateTime of deadline","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"shuenj"},"content":"    public void setByDateTime(LocalDateTime by) {","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"shuenj"},"content":"        this.byDateTime \u003d by;","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"shuenj"},"content":"     * Returns the string representation of the deadline task to be saved in a file.","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"shuenj"},"content":"     * @return String to be saved in a file","lastModifiedDate":"2023-09-10"},{"lineNumber":62,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"shuenj"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":64,"author":{"gitId":"shuenj"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"shuenj"},"content":"        return \"D | \" + super.getStatusIcon() + \" | \" + getDescription() + \" | \"","lastModifiedDate":"2023-09-10"},{"lineNumber":66,"author":{"gitId":"shuenj"},"content":"                + byDateTime.format(Task.getDateFormat());","lastModifiedDate":"2023-09-10"},{"lineNumber":67,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"shuenj"},"content":"     * Sets the deadline task from a string representation of the deadline task in a file.","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"shuenj"},"content":"     * @param fileString Stored list in String format within the file.","lastModifiedDate":"2023-09-10"},{"lineNumber":72,"author":{"gitId":"shuenj"},"content":"     * @throws DukeException","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"shuenj"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":75,"author":{"gitId":"shuenj"},"content":"    public void fromFileString(String fileString) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"shuenj"},"content":"        String[] fileStringArray \u003d fileString.split(\" \\\\| \");","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"shuenj"},"content":"        setStatusIcon(fileStringArray[1]);","lastModifiedDate":"2023-09-10"},{"lineNumber":78,"author":{"gitId":"shuenj"},"content":"        setDescription(fileStringArray[2]);","lastModifiedDate":"2023-09-10"},{"lineNumber":79,"author":{"gitId":"shuenj"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"shuenj"},"content":"            this.byDateTime \u003d LocalDateTime.parse(fileStringArray[3], Task.getDateFormat());","lastModifiedDate":"2023-09-10"},{"lineNumber":81,"author":{"gitId":"shuenj"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"shuenj"},"content":"            throw new DukeException(\"Date should follow the format d/M/yyyy HHmm\");","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"shuenj"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"shuenj":86}},{"path":"src/main/java/tasks/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuenj"},"content":"package tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"shuenj"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"shuenj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"shuenj"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"shuenj"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"shuenj"},"content":" * Represents an event task.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"shuenj"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"shuenj"},"content":"public class EventTask extends Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"shuenj"},"content":"    /** Date time of start of task */","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"shuenj"},"content":"    protected LocalDateTime startDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"shuenj"},"content":"    /** Date time of end of task */","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"shuenj"},"content":"    protected LocalDateTime endDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"shuenj"},"content":"     * Constructor for EventTask.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"shuenj"},"content":"     * @param description","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"shuenj"},"content":"     * @param startDate","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"shuenj"},"content":"     * @param endDate","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"shuenj"},"content":"     * @throws DukeException","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"shuenj"},"content":"    public EventTask(String description, String startDate, String endDate) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"shuenj"},"content":"        super(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"shuenj"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"shuenj"},"content":"            this.startDate \u003d LocalDateTime.parse(startDate, Task.getDateFormat());","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"shuenj"},"content":"            this.endDate \u003d LocalDateTime.parse(endDate, Task.getDateFormat());","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"shuenj"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"shuenj"},"content":"            throw new DukeException(\"Date should follow the format d/M/yyyy HHmm\");","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":35,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"shuenj"},"content":"     * Constructor for EventTask.","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"shuenj"},"content":"    public EventTask() {","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"shuenj"},"content":"        super(\"\");","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"shuenj"},"content":"     * Returns the string representation of the event task.","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"shuenj"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":47,"author":{"gitId":"shuenj"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":48,"author":{"gitId":"shuenj"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + startDate.format(Task.getDateFormatOutput())","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"shuenj"},"content":"                + \" to: \" + endDate.format(Task.getDateFormatOutput()) + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":51,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"shuenj"},"content":"     * Returns the string representation of the event task to be saved in a file.","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"shuenj"},"content":"     * @return LocalDateTime startDate","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"shuenj"},"content":"    public LocalDateTime getStartDate() {","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"shuenj"},"content":"        return this.startDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"shuenj"},"content":"     * Returns the string representation of the event task to be saved in a file.","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"shuenj"},"content":"     * @return LocalDateTime endDate","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"shuenj"},"content":"    public LocalDateTime getEndDate() {","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"shuenj"},"content":"        return this.endDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"shuenj"},"content":"     * Convert the event task to a string to be saved in a file.","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"shuenj"},"content":"     * @return String representation of the event task","lastModifiedDate":"2023-09-10"},{"lineNumber":70,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"shuenj"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":72,"author":{"gitId":"shuenj"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"shuenj"},"content":"        return \"E | \" + super.getStatusIcon() + \" | \" + getDescription() + \" | \"","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"shuenj"},"content":"                + startDate.format(Task.getDateFormat()) + \" | \" + endDate.format(Task.getDateFormat());","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"shuenj"},"content":"     * Convert from a string to a event task.","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"shuenj"},"content":"     * @param fileString Stored list in String format within the file","lastModifiedDate":"2023-09-10"},{"lineNumber":80,"author":{"gitId":"shuenj"},"content":"     * @throws DukeException","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"shuenj"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":83,"author":{"gitId":"shuenj"},"content":"    public void fromFileString(String fileString) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"shuenj"},"content":"        String[] fileStringArray \u003d fileString.split(\" \\\\| \");","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"shuenj"},"content":"        setStatusIcon(fileStringArray[1]);","lastModifiedDate":"2023-09-10"},{"lineNumber":86,"author":{"gitId":"shuenj"},"content":"        setDescription(fileStringArray[2]);","lastModifiedDate":"2023-09-10"},{"lineNumber":87,"author":{"gitId":"shuenj"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"shuenj"},"content":"            this.startDate \u003d LocalDateTime.parse(fileStringArray[3], Task.getDateFormat());","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"shuenj"},"content":"            this.endDate \u003d LocalDateTime.parse(fileStringArray[4], Task.getDateFormat());","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"shuenj"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"shuenj"},"content":"            throw new DukeException(\"Date should follow the format d/M/yyyy HHmm\");","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":93,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"shuenj"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"shuenj":94}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuenj"},"content":"package tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"shuenj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"shuenj"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"shuenj"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"shuenj"},"content":" * Represents a task.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"shuenj"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"shuenj"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"shuenj"},"content":"    /** Datetime format for storage and input */","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"shuenj"},"content":"    protected static final DateTimeFormatter DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"shuenj"},"content":"    /** Datetime format for output */","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"shuenj"},"content":"    protected static final DateTimeFormatter DATE_FORMAT_OUTPUT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"shuenj"},"content":"    /** Description of the task */","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"shuenj"},"content":"    private String description;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"shuenj"},"content":"    /** Indicator if task is done */","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"shuenj"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"shuenj"},"content":"     * Constructor for Task.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"shuenj"},"content":"     * @param description","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"shuenj"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"shuenj"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"shuenj"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"shuenj"},"content":"     * Constructor for Task.","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"shuenj"},"content":"     * @return String if task is done","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"shuenj"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"shuenj"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":38,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"shuenj"},"content":"     * Sets the status of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"shuenj"},"content":"     * @param statusIcon \"X\" if task is done, \" \" if task is not done","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"shuenj"},"content":"    public void setStatusIcon(String statusIcon) {","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"shuenj"},"content":"        this.isDone \u003d statusIcon.equals(\"X\");","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"shuenj"},"content":"     * Returns the description of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"shuenj"},"content":"     * @return String description","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"shuenj"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-20"},{"lineNumber":51,"author":{"gitId":"shuenj"},"content":"        return description;","lastModifiedDate":"2023-08-20"},{"lineNumber":52,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":53,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":54,"author":{"gitId":"shuenj"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"shuenj"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"shuenj"},"content":"    public static DateTimeFormatter getDateFormat() {","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"shuenj"},"content":"        return DATE_FORMAT;","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"shuenj"},"content":"    public static DateTimeFormatter getDateFormatOutput() {","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"shuenj"},"content":"        return DATE_FORMAT_OUTPUT;","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"shuenj"},"content":"     * Marks task as done.","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"shuenj"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-20"},{"lineNumber":69,"author":{"gitId":"shuenj"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-08-20"},{"lineNumber":70,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":71,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":72,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"shuenj"},"content":"     * Marks task as undone.","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"shuenj"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-20"},{"lineNumber":76,"author":{"gitId":"shuenj"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":77,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":78,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":79,"author":{"gitId":"shuenj"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":80,"author":{"gitId":"shuenj"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":81,"author":{"gitId":"shuenj"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-08-20"},{"lineNumber":82,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":83,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":84,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"shuenj"},"content":"     * Returns the string representation of the task to be saved in a file.","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"shuenj"},"content":"     * @return String representation of the task","lastModifiedDate":"2023-09-10"},{"lineNumber":87,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"shuenj"},"content":"    public abstract String toFileString();","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"shuenj"},"content":"     * Convert from a string to a task.","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"shuenj"},"content":"     * @param fileString Stored list in String format within the file","lastModifiedDate":"2023-09-10"},{"lineNumber":93,"author":{"gitId":"shuenj"},"content":"     * @throws DukeException","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"shuenj"},"content":"    public abstract void fromFileString(String fileString) throws DukeException;","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"shuenj"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"shuenj":96}},{"path":"src/main/java/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuenj"},"content":"package tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"shuenj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"shuenj"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"shuenj"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"shuenj"},"content":" * Represents a list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"shuenj"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"shuenj"},"content":"public class TaskList {","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"shuenj"},"content":"    /** List of tasks */","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"shuenj"},"content":"    private ArrayList\u003cTask\u003e userTasks;","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"shuenj"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"shuenj"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"shuenj"},"content":"        this.userTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"shuenj"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"shuenj"},"content":"     * @param userTasks List of tasks.","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"shuenj"},"content":"    public TaskList(ArrayList\u003cTask\u003e userTasks) {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"shuenj"},"content":"        this.userTasks \u003d userTasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"shuenj"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"shuenj"},"content":"     * @return userTasks List of tasks.","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"shuenj"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"shuenj"},"content":"        return this.userTasks;","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"shuenj"},"content":"     * Set the list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"shuenj"},"content":"     * @param userTasks List of tasks.","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"shuenj"},"content":"    public void setTasks(ArrayList\u003cTask\u003e userTasks) {","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"shuenj"},"content":"        this.userTasks \u003d userTasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"shuenj"},"content":"     * Adds a task to list.","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"shuenj"},"content":"     * @param task Task to be added.","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"shuenj"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-08-20"},{"lineNumber":48,"author":{"gitId":"shuenj"},"content":"        this.userTasks.add(task);","lastModifiedDate":"2023-08-20"},{"lineNumber":49,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":51,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":52,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"shuenj"},"content":"     * Deletes a task from list.","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"shuenj"},"content":"     * @param taskId TaskID to be deleted.","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"shuenj"},"content":"    public void delete(int taskId) {","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"shuenj"},"content":"        this.userTasks.remove(taskId);","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":59,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":60,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"shuenj"},"content":"     * Clears the list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"shuenj"},"content":"    public void clear() {","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"shuenj"},"content":"        this.userTasks.clear();","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"shuenj"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"shuenj"},"content":"     * @param taskId TaskID to be marked.","lastModifiedDate":"2023-09-10"},{"lineNumber":70,"author":{"gitId":"shuenj"},"content":"     * @throws DukeException","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"shuenj"},"content":"    public void mark(int taskId) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"shuenj"},"content":"        this.userTasks.get(taskId).markAsDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":75,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":76,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"shuenj"},"content":"     * Marks a task as undone.","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"shuenj"},"content":"     * @param taskId TaskID to be unmarked.","lastModifiedDate":"2023-09-10"},{"lineNumber":79,"author":{"gitId":"shuenj"},"content":"     * @throws DukeException","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"shuenj"},"content":"    public void unmark(int taskId) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"shuenj"},"content":"        this.userTasks.get(taskId).markAsUndone();","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":84,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":85,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"shuenj"},"content":"     * Returns the specified task.","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"shuenj"},"content":"     * @param taskID TaskID to be returned.","lastModifiedDate":"2023-09-10"},{"lineNumber":88,"author":{"gitId":"shuenj"},"content":"     * @return Specified task","lastModifiedDate":"2023-09-10"},{"lineNumber":89,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"shuenj"},"content":"    public Task getTask(int taskID) {","lastModifiedDate":"2023-09-10"},{"lineNumber":91,"author":{"gitId":"shuenj"},"content":"        return this.userTasks.get(taskID);","lastModifiedDate":"2023-08-20"},{"lineNumber":92,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":93,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":94,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"shuenj"},"content":"     * Returns the size of the list.","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"shuenj"},"content":"     * @return int size","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"shuenj"},"content":"    public int size() {","lastModifiedDate":"2023-08-20"},{"lineNumber":99,"author":{"gitId":"shuenj"},"content":"        return this.userTasks.size();","lastModifiedDate":"2023-08-20"},{"lineNumber":100,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":101,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":102,"author":{"gitId":"shuenj"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":103,"author":{"gitId":"shuenj"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":104,"author":{"gitId":"shuenj"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-08-21"},{"lineNumber":105,"author":{"gitId":"shuenj"},"content":"        for (int i \u003d 0; i \u003c userTasks.size(); i++) {","lastModifiedDate":"2023-08-21"},{"lineNumber":106,"author":{"gitId":"shuenj"},"content":"            output +\u003d (i + 1) + \". \" + userTasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2023-08-21"},{"lineNumber":107,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":108,"author":{"gitId":"shuenj"},"content":"        return output;","lastModifiedDate":"2023-08-21"},{"lineNumber":109,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":110,"author":{"gitId":"shuenj"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"shuenj":110}},{"path":"src/main/java/tasks/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuenj"},"content":"package tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"shuenj"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"shuenj"},"content":" * Represents a todo task.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"shuenj"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"shuenj"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"shuenj"},"content":"     * Constructor for TodoTask.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"shuenj"},"content":"     * @param description Description of the task","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"shuenj"},"content":"    public TodoTask(String description) {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"shuenj"},"content":"        super(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"shuenj"},"content":"     * Constructor for TodoTask.","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"shuenj"},"content":"    public TodoTask() {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"shuenj"},"content":"        super(\"\");","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"shuenj"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"shuenj"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"shuenj"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"shuenj"},"content":"     * Returns the string representation of the todo task to be saved in a file.","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"shuenj"},"content":"     * @return String","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"shuenj"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"shuenj"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"shuenj"},"content":"        return \"T | \" + super.getStatusIcon() + \" | \" + this.getDescription();","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"shuenj"},"content":"     * Convert from a string to a todo task.","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"shuenj"},"content":"     * @param fileString Stored list in String format within the file","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"shuenj"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"shuenj"},"content":"    public void fromFileString(String fileString) {","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"shuenj"},"content":"        String[] fileStringArray \u003d fileString.split(\" \\\\| \");","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"shuenj"},"content":"        setStatusIcon(fileStringArray[1]);","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"shuenj"},"content":"        setDescription(fileStringArray[2]);","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"shuenj"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"shuenj":46}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuenj"},"content":"package ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"shuenj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"shuenj"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"shuenj"},"content":"import tasks.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"shuenj"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"shuenj"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"shuenj"},"content":" * Represents the user interface.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"shuenj"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"shuenj"},"content":"public class Ui {","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"shuenj"},"content":"    /** Scanner to handle user input. */","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"shuenj"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"shuenj"},"content":"    /** UI stored responses */","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"shuenj"},"content":"    private ArrayList\u003cString\u003e responses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"shuenj"},"content":"     * Constructor for Ui.","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"shuenj"},"content":"    public Ui() {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"shuenj"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"shuenj"},"content":"     * Shows the error message when loading file.","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"shuenj"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"shuenj"},"content":"        responses.add(\"Error loading file\");","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"shuenj"},"content":"     * Shows the welcome message.","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"shuenj"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"shuenj"},"content":"        String botName \u003d \"Dude\";","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"shuenj"},"content":"        responses.add(\"Hello! I\u0027m \" + botName);","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"shuenj"},"content":"        responses.add(\"What can I do for you?\");","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"shuenj"},"content":"     * Shows a line.","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"shuenj"},"content":"    public void showLine() {","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"shuenj"},"content":"        responses.add(\"____________________________________________________________\");","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"shuenj"},"content":"     * Reads the command from the user.","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"shuenj"},"content":"     * @return String fullCommand","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"shuenj"},"content":"    public String readCommand() {","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"shuenj"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"shuenj"},"content":"     * Add the error message to responses.","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"shuenj"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"shuenj"},"content":"        responses.add(errorMessage);","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"shuenj"},"content":"     * Add the task added message to responses.","lastModifiedDate":"2023-09-10"},{"lineNumber":62,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"shuenj"},"content":"    public void showTaskAdded(Task task, int taskCount) {","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"shuenj"},"content":"        responses.add(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"shuenj"},"content":"        responses.add(task.toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"shuenj"},"content":"        responses.add(\"Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"shuenj"},"content":"     * Add the task deleted message to responses.","lastModifiedDate":"2023-09-10"},{"lineNumber":71,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"shuenj"},"content":"    public void showTaskDeleted(Task task, int taskCount) {","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"shuenj"},"content":"        responses.add(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"shuenj"},"content":"        responses.add(task.toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"shuenj"},"content":"        responses.add(\"Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"shuenj"},"content":"     * Add the schedule on specific date message to responses.","lastModifiedDate":"2023-09-10"},{"lineNumber":80,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"shuenj"},"content":"    public void showSchedule(String output) {","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"shuenj"},"content":"        if (output.equals(\"\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"shuenj"},"content":"            responses.add(\"There are no tasks on this date.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"shuenj"},"content":"        } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"shuenj"},"content":"            responses.add(\"Here are the tasks on this date:\");","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"shuenj"},"content":"            responses.add(output);","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":88,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"shuenj"},"content":"     * Add the list of tasks to responses.","lastModifiedDate":"2023-09-10"},{"lineNumber":92,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"shuenj"},"content":"    public void showList(TaskList userTasks) {","lastModifiedDate":"2023-08-28"},{"lineNumber":94,"author":{"gitId":"shuenj"},"content":"        if (userTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-28"},{"lineNumber":95,"author":{"gitId":"shuenj"},"content":"            responses.add(\"You have no tasks.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"shuenj"},"content":"        } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":97,"author":{"gitId":"shuenj"},"content":"            responses.add(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"shuenj"},"content":"            responses.add(userTasks.toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":100,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":101,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":102,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"shuenj"},"content":"     * Add the goodbye message to responses.","lastModifiedDate":"2023-09-10"},{"lineNumber":104,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"shuenj"},"content":"    public void showGoodbye() {","lastModifiedDate":"2023-08-28"},{"lineNumber":106,"author":{"gitId":"shuenj"},"content":"        responses.add(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":108,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":109,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"shuenj"},"content":"     * Add the invalid command message to responses.","lastModifiedDate":"2023-09-10"},{"lineNumber":111,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"shuenj"},"content":"    public void showInvalidCommandMessage() {","lastModifiedDate":"2023-08-28"},{"lineNumber":113,"author":{"gitId":"shuenj"},"content":"        responses.add(\"Command is invalid. Please try again.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":114,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":115,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"shuenj"},"content":"     * Add the task marked message to responses.","lastModifiedDate":"2023-09-10"},{"lineNumber":118,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"shuenj"},"content":"    public void showTaskMarked(Task task) {","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"shuenj"},"content":"        responses.add(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-09-03"},{"lineNumber":121,"author":{"gitId":"shuenj"},"content":"        responses.add(task.toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":122,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"shuenj"},"content":"     * Add the task unmarked message to responses.","lastModifiedDate":"2023-09-10"},{"lineNumber":126,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"shuenj"},"content":"    public void showTaskUnmarked(Task task) {","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"shuenj"},"content":"        responses.add(\"Nice! I\u0027ve marked this task as undone:\");","lastModifiedDate":"2023-09-03"},{"lineNumber":129,"author":{"gitId":"shuenj"},"content":"        responses.add(task.toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":130,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":133,"author":{"gitId":"shuenj"},"content":"     * Add the tasklist saved message to responses.","lastModifiedDate":"2023-09-10"},{"lineNumber":134,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"shuenj"},"content":"    public void showSave() {","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"shuenj"},"content":"        responses.add(\"Tasks saved to file.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":137,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":139,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":140,"author":{"gitId":"shuenj"},"content":"     * Add the tasklist loaded message to responses.","lastModifiedDate":"2023-09-10"},{"lineNumber":141,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"shuenj"},"content":"    public void showLoad() {","lastModifiedDate":"2023-08-29"},{"lineNumber":143,"author":{"gitId":"shuenj"},"content":"        responses.add(\"Tasks loaded from file.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":144,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":145,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":146,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":147,"author":{"gitId":"shuenj"},"content":"     * Add the tasklist to responses.","lastModifiedDate":"2023-09-10"},{"lineNumber":148,"author":{"gitId":"shuenj"},"content":"     * @param output The list of matching tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":149,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":150,"author":{"gitId":"shuenj"},"content":"    public void showFind(String output) {","lastModifiedDate":"2023-08-29"},{"lineNumber":151,"author":{"gitId":"shuenj"},"content":"        responses.add(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-09-03"},{"lineNumber":152,"author":{"gitId":"shuenj"},"content":"        responses.add(output);","lastModifiedDate":"2023-09-03"},{"lineNumber":153,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":154,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":155,"author":{"gitId":"shuenj"},"content":"     * Add snooze response to responses.","lastModifiedDate":"2023-09-12"},{"lineNumber":156,"author":{"gitId":"shuenj"},"content":"     * @param task The task to snooze.","lastModifiedDate":"2023-09-12"},{"lineNumber":157,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":158,"author":{"gitId":"shuenj"},"content":"    public void showsnoozeTask(Task task) {","lastModifiedDate":"2023-09-12"},{"lineNumber":159,"author":{"gitId":"shuenj"},"content":"        responses.add(\"Noted. I\u0027ve snoozed this task:\");","lastModifiedDate":"2023-09-12"},{"lineNumber":160,"author":{"gitId":"shuenj"},"content":"        responses.add(task.toString());","lastModifiedDate":"2023-09-12"},{"lineNumber":161,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":162,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":163,"author":{"gitId":"shuenj"},"content":"     * Combines the stored responses and prestring into a string for output, then","lastModifiedDate":"2023-09-10"},{"lineNumber":164,"author":{"gitId":"shuenj"},"content":"     * clears the stored responses.","lastModifiedDate":"2023-09-10"},{"lineNumber":165,"author":{"gitId":"shuenj"},"content":"     * @param preStrings The prestring to be added to the output.","lastModifiedDate":"2023-09-10"},{"lineNumber":166,"author":{"gitId":"shuenj"},"content":"     * @return output String to be printed as a response to user.","lastModifiedDate":"2023-09-10"},{"lineNumber":167,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":168,"author":{"gitId":"shuenj"},"content":"    public String getOutput(String... preStrings) {","lastModifiedDate":"2023-09-03"},{"lineNumber":169,"author":{"gitId":"shuenj"},"content":"        //convert output to string","lastModifiedDate":"2023-09-03"},{"lineNumber":170,"author":{"gitId":"shuenj"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-09-03"},{"lineNumber":171,"author":{"gitId":"shuenj"},"content":"        for (String preString : preStrings) {","lastModifiedDate":"2023-09-03"},{"lineNumber":172,"author":{"gitId":"shuenj"},"content":"            output +\u003d preString + \"\\n\";","lastModifiedDate":"2023-09-03"},{"lineNumber":173,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":174,"author":{"gitId":"shuenj"},"content":"        for (String response : responses) {","lastModifiedDate":"2023-09-03"},{"lineNumber":175,"author":{"gitId":"shuenj"},"content":"            output +\u003d response + \"\\n\";","lastModifiedDate":"2023-09-03"},{"lineNumber":176,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":177,"author":{"gitId":"shuenj"},"content":"        responses.clear();","lastModifiedDate":"2023-09-03"},{"lineNumber":178,"author":{"gitId":"shuenj"},"content":"        return output;","lastModifiedDate":"2023-09-03"},{"lineNumber":179,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":180,"author":{"gitId":"shuenj"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"shuenj":180}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"shuenj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"shuenj"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"shuenj"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"shuenj"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"shuenj"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"shuenj"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1000\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"shuenj"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"shuenj"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"shuenj"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"40.0\" fitWidth\u003d\"45.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"shuenj"},"content":"  \u003c/children\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"shuenj"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"shuenj"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"shuenj"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"shuenj"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"shuenj":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"shuenj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"shuenj"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"shuenj"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"shuenj"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"shuenj"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"shuenj"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"shuenj"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"gui.MainWindow\"\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"shuenj"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"shuenj"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"shuenj"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"shuenj"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"shuenj"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"shuenj"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"shuenj"},"content":"      \u003c/content\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"shuenj"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"shuenj"},"content":"  \u003c/children\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"shuenj"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"shuenj":19}},{"path":"src/test/java/tasks/DeadlineTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuenj"},"content":"package tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"shuenj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"shuenj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"shuenj"},"content":"public class DeadlineTaskTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"shuenj"},"content":"     * Test for fromFileStringTest method for DeadlineTask.","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"shuenj"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"shuenj"},"content":"    public void fromFileStringTest() {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"shuenj"},"content":"        DeadlineTask deadlineTask \u003d new DeadlineTask();","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"shuenj"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"shuenj"},"content":"            deadlineTask.fromFileString(\"D | 0 | return book | 2/12/2019 1800\");","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"shuenj"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"shuenj"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"shuenj"},"content":"        assertEquals(\"[D][ ] return book (by: Dec 02 2019 1800)\", deadlineTask.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"shuenj"},"content":"     * Test for toFileString method for DeadlineTask.","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"shuenj"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"shuenj"},"content":"    public void toFileStringTest() {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"shuenj"},"content":"        DeadlineTask deadlineTask \u003d new DeadlineTask();","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"shuenj"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"shuenj"},"content":"            deadlineTask \u003d new DeadlineTask(\"return book\", \"2/12/2019 1800\");","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"shuenj"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"shuenj"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"shuenj"},"content":"        assertEquals(\"D |   | return book | 2/12/2019 1800\", deadlineTask.toFileString());","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"shuenj"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"shuenj":35}},{"path":"src/test/java/tasks/ScheduleCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuenj"},"content":"package tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"shuenj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"shuenj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"shuenj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"shuenj"},"content":"import commands.ScheduleCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"shuenj"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"shuenj"},"content":"import io.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"shuenj"},"content":"import ui.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"shuenj"},"content":"public class ScheduleCommandTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"shuenj"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"shuenj"},"content":"     * Test for execute method for ScheduleCommand.","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"shuenj"},"content":"     * @throws DukeException","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"shuenj"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"shuenj"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"shuenj"},"content":"    public void executeTest() throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"shuenj"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"shuenj"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"shuenj"},"content":"        Storage storage \u003d new Storage(\"data/tasks.txt\");","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"shuenj"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"shuenj"},"content":"            taskList.add(new DeadlineTask(\"return book\", \"2/12/2019 1800\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"shuenj"},"content":"            taskList.add(new EventTask(\"project meeting\",","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"shuenj"},"content":"                    \"1/12/2019 1400\", \"1/12/2019 1600\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"shuenj"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"shuenj"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"shuenj"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"shuenj"},"content":"        ScheduleCommand scheduleCommand \u003d new ScheduleCommand(\"schedule 1/12/2019\");","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"shuenj"},"content":"        scheduleCommand.execute(taskList, ui, storage);","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"shuenj"},"content":"        assertEquals(\"2. [E][ ] project meeting (from: Dec 01 2019 1400 to: Dec 01 2019 1600)\\n\",","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"shuenj"},"content":"                scheduleCommand.getOutput());","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"shuenj"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"shuenj"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"shuenj":33}},{"path":"text-ui-test/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shuenj"},"content":"T | X | for","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"shuenj"},"content":"E |   | asdlkj | 20/12/2020 1800 | 5/5/2023 1900","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"shuenj"},"content":"D |   |  asad | 20/12/2020 1800","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"shuenj"},"content":"T |   | for","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"shuenj"},"content":"E |   | asdlkj | 20/12/2020 1800 | 5/5/2023 1900","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"shuenj"},"content":"D |   |  asad | 20/12/2020 1800","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"shuenj"},"content":"T |   | for","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"shuenj"},"content":"E |   | asdlkj | 20/12/2020 1800 | 5/5/2023 1900","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"shuenj"},"content":"D |   |  asad | 20/12/2020 1800","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"shuenj"},"content":"T |   | for","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"shuenj"},"content":"E |   | asdlkj | 20/12/2020 1800 | 5/5/2023 1900","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"shuenj"},"content":"D |   |  asad | 20/12/2020 1800","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"shuenj"},"content":"T |   | for","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"shuenj"},"content":"E |   | asdlkj | 20/12/2020 1800 | 5/5/2023 1900","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"shuenj"},"content":"D |   |  asad | 20/12/2020 1800","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"shuenj"},"content":"T |   | for","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"shuenj"},"content":"E |   | asdlkj | 20/12/2020 1800 | 5/5/2023 1900","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"shuenj"},"content":"D |   |  asad | 20/12/2020 1800","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"shuenj"},"content":"T |   | for","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"shuenj"},"content":"E |   | asdlkj | 20/12/2020 1800 | 5/5/2023 1900","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"shuenj"},"content":"D |   |  asad | 20/12/2020 1800","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"shuenj":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shuenj"},"content":"event lsjlk\\","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"shuenj"},"content":"deadline kjlkjl","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"shuenj"},"content":"testagain","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"shuenj"},"content":"todo for","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"shuenj"},"content":"asdas","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"shuenj"},"content":"event asdlkj /from 20/12/2020 1800 /to 5/5/2023 1900","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"shuenj"},"content":"deadline  asad /by 20/12/2020 1800","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"shuenj"},"content":"schedule 31/12/2020","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"shuenj"},"content":"schedule 20/12/2020","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"shuenj"},"content":"mark 1","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"shuenj"},"content":"save","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"shuenj"},"content":"load","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"shuenj"},"content":"list","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"shuenj"},"content":"bye","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"shuenj":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"shuenj"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"shuenj":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"shuenj"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin/ ../src/main/java/duke/*.java","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"shuenj"},"content":"java -classpath ../bin/ duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"shuenj":2,"-":36}}]
