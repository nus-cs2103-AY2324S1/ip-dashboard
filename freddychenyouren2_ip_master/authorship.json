[{"path":"src/main/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"T | 1 | Todo try | null | null \\esrftgyhuj |yrfvftgbyhn | gybuhj | corrupted line","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"D | 0 | Deadline Task yo | ASAP | null | null | null | corrupted line","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"E | 0 | event test | 1pm | yeet","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":"T | 1 | new new new todo | null | null","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":"D | 0 | new deadline | deadth | null","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":"E | 0 | second event | from | totototo","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":"D | 0 | test dates correct deadline | 2023-10-21 | null","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"freddychenyouren2"},"content":"E | 0 | correct event timings | 2222-11-11 | 2222-11-13","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"freddychenyouren2":8}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":"    private LocalDate by;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"freddychenyouren2"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"freddychenyouren2"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"freddychenyouren2"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"freddychenyouren2"},"content":"    private LocalDate getDeadlineDate() {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"freddychenyouren2"},"content":"        return this.by;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"freddychenyouren2"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"freddychenyouren2"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"freddychenyouren2"},"content":"        //return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"freddychenyouren2"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(),","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"freddychenyouren2"},"content":"                getDeadlineDate().format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"freddychenyouren2"},"content":"    public LocalDate getDueDate() {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"freddychenyouren2"},"content":"        return this.by;","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"freddychenyouren2"},"content":"     * Function to handle a Deadline Task. If it\u0027s inputs are valid, create a Deadline Task.","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"freddychenyouren2"},"content":"     * Otherwise, print an error message in the console.","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"freddychenyouren2"},"content":"     * @param userInput a valid user input for a Deadline Task.","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"freddychenyouren2"},"content":"    public static void handleDeadlineTask(String userInput) throws IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"freddychenyouren2"},"content":"        String[] details \u003d userInput.split(\"/by\");","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"freddychenyouren2"},"content":"        //details[0] contains \"deadline\" plus task description, need to erase \"deadline\". details[1] contains deadline timing","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"freddychenyouren2"},"content":"        if (details.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"freddychenyouren2"},"content":"            String taskDescription \u003d details[0].trim().replaceFirst(\"deadline\", \"\").trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"freddychenyouren2"},"content":"            String deadline \u003d details[1].trim();","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"freddychenyouren2"},"content":"            //Check if input date is valid.","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"freddychenyouren2"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"freddychenyouren2"},"content":"                if (Duke.isValidDate(deadline)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"freddychenyouren2"},"content":"                    Deadline deadlineTask \u003d new Deadline(taskDescription, LocalDate.parse(deadline));","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"freddychenyouren2"},"content":"                    Duke.saveTask(deadlineTask, true);","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"freddychenyouren2"},"content":"                    Duke.taskList.add(deadlineTask); //Deadline \u003c: Task","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"freddychenyouren2"},"content":"                    //Print details in the console","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"freddychenyouren2"},"content":"                    System.out.println(Duke.HORIZONTAL_LINE);","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"freddychenyouren2"},"content":"                    System.out.println(\"     Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"freddychenyouren2"},"content":"                    System.out.printf(\"       %s\\n\", deadlineTask.toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"freddychenyouren2"},"content":"                    System.out.printf(\"     Now you have %d tasks in the list.\\n\", Duke.taskList.size());","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"freddychenyouren2"},"content":"                    System.out.println(Duke.HORIZONTAL_LINE);","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"freddychenyouren2"},"content":"                } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"freddychenyouren2"},"content":"                    throw new InvalidDateException();","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"freddychenyouren2"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"freddychenyouren2"},"content":"            } catch (InvalidDateException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"freddychenyouren2"},"content":"                System.out.println(e.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"freddychenyouren2"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"freddychenyouren2"},"content":"        } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(Duke.HORIZONTAL_LINE);","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(\"     Invalid Deadline Task input.\\n\"","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"freddychenyouren2"},"content":"                    + \"     Please input in the following format:\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"freddychenyouren2"},"content":"                    + \"     deadline \u003cTask Description\u003e /by \u003cdeadline timing\u003e\");","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(Duke.HORIZONTAL_LINE);","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":68,"author":{"gitId":"freddychenyouren2"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"freddychenyouren2":68}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"import java.io.*;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"freddychenyouren2"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"freddychenyouren2"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"freddychenyouren2"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"freddychenyouren2"},"content":" * Duke","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"freddychenyouren2"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"freddychenyouren2"},"content":" * CS2103T AY23/24 Semester 1","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"freddychenyouren2"},"content":" * iP - Individual Project","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"freddychenyouren2"},"content":" * Duke Project","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"freddychenyouren2"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"freddychenyouren2"},"content":" * @author Freddy Chen You Ren","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"freddychenyouren2"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"freddychenyouren2"},"content":"    static String HORIZONTAL_LINE \u003d \"    ____________________________________________________________\"; //60 underscores.","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"freddychenyouren2"},"content":"    static String INDENT \u003d \"    \"; //4 spaces.","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"freddychenyouren2"},"content":"    static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"freddychenyouren2"},"content":"    enum Command {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"freddychenyouren2"},"content":"        BYE, LIST, MARK, UNMARK, DELETE, DEADLINE, TODO, EVENT, UNKNOWN","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"freddychenyouren2"},"content":"     * Function to greet the User.","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"freddychenyouren2"},"content":"    public static void greet() {","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(\"\\nStarting SeeWhyAre Bot...\");","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-20"},{"lineNumber":34,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(\"    Hello! I\u0027m SeeWhyAre Bot!\");","lastModifiedDate":"2023-08-20"},{"lineNumber":35,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(\"    What can I do for you?\");","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":38,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"freddychenyouren2"},"content":"     * Function to say goodbye to the User and end the program.","lastModifiedDate":"2023-08-20"},{"lineNumber":41,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":42,"author":{"gitId":"freddychenyouren2"},"content":"    public static void farewell() {","lastModifiedDate":"2023-08-20"},{"lineNumber":43,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(\"    You are closing the SeeWhyAre chat bot.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(\"    Bye bye. Please use me again soon!\");","lastModifiedDate":"2023-08-21"},{"lineNumber":46,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":50,"author":{"gitId":"freddychenyouren2"},"content":"     * Function to add any given input into our taskList.","lastModifiedDate":"2023-08-21"},{"lineNumber":51,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"freddychenyouren2"},"content":"    public static void addTask(String description) {","lastModifiedDate":"2023-08-21"},{"lineNumber":53,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-21"},{"lineNumber":54,"author":{"gitId":"freddychenyouren2"},"content":"        Task task \u003d new Task(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":55,"author":{"gitId":"freddychenyouren2"},"content":"        taskList.add(task);","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.printf(\"    added: %s%n\", description);","lastModifiedDate":"2023-08-21"},{"lineNumber":57,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-21"},{"lineNumber":58,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":59,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":60,"author":{"gitId":"freddychenyouren2"},"content":"    public static void deleteTask(String deleteInput)","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"freddychenyouren2"},"content":"            throws EmptyDescriptionException, IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"freddychenyouren2"},"content":"        String[] words \u003d deleteInput.split(\"\\\\s+\"); // Split input by space, put into array","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"freddychenyouren2"},"content":"        //Check for valid length","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"freddychenyouren2"},"content":"        if (words.length \u003c\u003d 1) {","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"freddychenyouren2"},"content":"            throw new EmptyDescriptionException(\"Please provide the task index to be deleted.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"freddychenyouren2"},"content":"        //Try parsing into integer to get deleteIndex","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"freddychenyouren2"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"freddychenyouren2"},"content":"            int deleteIndex \u003d Integer.parseInt(words[1]) - 1; // Potential Error cannot parse to integer","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"freddychenyouren2"},"content":"            if (deleteIndex \u003e\u003d 0 \u0026\u0026 deleteIndex \u003c taskList.size()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"freddychenyouren2"},"content":"                Task removedTask \u003d taskList.remove(deleteIndex); //Actual task can be todo, deadline, or event","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"freddychenyouren2"},"content":"                System.out.println(\"     Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"freddychenyouren2"},"content":"                System.out.printf(\"       %s\\n\", removedTask.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"freddychenyouren2"},"content":"                System.out.printf(\"     Now you have %d task(s) in the list.\\n\", taskList.size());","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"freddychenyouren2"},"content":"            } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":79,"author":{"gitId":"freddychenyouren2"},"content":"                System.out.println(\"     OOPS!!! The task index is invalid.\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"freddychenyouren2"},"content":"                System.out.printf(\"    You currently have %d task(s).\\n\", taskList.size());","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"freddychenyouren2"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-23"},{"lineNumber":83,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":84,"author":{"gitId":"freddychenyouren2"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":85,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-23"},{"lineNumber":86,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(\"     OOPS!!! Please enter the index after \u0027delete\u0027 command.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(\"     For example: delete 5\");","lastModifiedDate":"2023-08-23"},{"lineNumber":88,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(\"     This will remove Task 5 from your Task List, assuming you have at least 5 tasks.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":89,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-23"},{"lineNumber":90,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":91,"author":{"gitId":"freddychenyouren2"},"content":"        clearAllData();","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"freddychenyouren2"},"content":"        updateData();","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":94,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":95,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":96,"author":{"gitId":"freddychenyouren2"},"content":"     * Function to mark a given task as done.","lastModifiedDate":"2023-08-21"},{"lineNumber":97,"author":{"gitId":"freddychenyouren2"},"content":"     * @param taskIndex the index of the task to be marked as done.","lastModifiedDate":"2023-08-21"},{"lineNumber":98,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":99,"author":{"gitId":"freddychenyouren2"},"content":"    public static void markTask(int taskIndex) throws IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-21"},{"lineNumber":101,"author":{"gitId":"freddychenyouren2"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d taskList.size()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":102,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.printf(\"     Invalid Index of Task. You currently have %d Task(s)\\n\", taskList.size());","lastModifiedDate":"2023-08-23"},{"lineNumber":103,"author":{"gitId":"freddychenyouren2"},"content":"        } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":104,"author":{"gitId":"freddychenyouren2"},"content":"            Task task \u003d taskList.get(taskIndex);","lastModifiedDate":"2023-08-21"},{"lineNumber":105,"author":{"gitId":"freddychenyouren2"},"content":"            task.markAsDone();","lastModifiedDate":"2023-08-21"},{"lineNumber":106,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(\"     Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":107,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.printf(\"       [%s] %s\\n\", task.getStatusIcon(), task.description);","lastModifiedDate":"2023-08-21"},{"lineNumber":108,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":109,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-21"},{"lineNumber":110,"author":{"gitId":"freddychenyouren2"},"content":"        clearAllData();","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"freddychenyouren2"},"content":"        updateData();","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":113,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":114,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":115,"author":{"gitId":"freddychenyouren2"},"content":"     * Function to mark a given task as done.","lastModifiedDate":"2023-08-21"},{"lineNumber":116,"author":{"gitId":"freddychenyouren2"},"content":"     * @param taskIndex the index of the task to be marked as not done yet.","lastModifiedDate":"2023-08-21"},{"lineNumber":117,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":118,"author":{"gitId":"freddychenyouren2"},"content":"    public static void unmarkTask(int taskIndex) throws IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-21"},{"lineNumber":120,"author":{"gitId":"freddychenyouren2"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d taskList.size()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":121,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.printf(\"    Invalid Index of Task. You currently have %d Task(s)\\n\", taskList.size());","lastModifiedDate":"2023-08-23"},{"lineNumber":122,"author":{"gitId":"freddychenyouren2"},"content":"        } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":123,"author":{"gitId":"freddychenyouren2"},"content":"            Task task \u003d taskList.get(taskIndex);","lastModifiedDate":"2023-08-21"},{"lineNumber":124,"author":{"gitId":"freddychenyouren2"},"content":"            task.markAsNotDone();","lastModifiedDate":"2023-08-21"},{"lineNumber":125,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(\"     OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":126,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.printf(\"       [%s] %s\\n\", task.getStatusIcon(), task.description);","lastModifiedDate":"2023-08-21"},{"lineNumber":127,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":128,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-21"},{"lineNumber":129,"author":{"gitId":"freddychenyouren2"},"content":"        clearAllData();","lastModifiedDate":"2023-08-29"},{"lineNumber":130,"author":{"gitId":"freddychenyouren2"},"content":"        updateData();","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":132,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":133,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":134,"author":{"gitId":"freddychenyouren2"},"content":"     * Function to list out all tasks.","lastModifiedDate":"2023-08-21"},{"lineNumber":135,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":136,"author":{"gitId":"freddychenyouren2"},"content":"    public static void listAllTasks() {","lastModifiedDate":"2023-08-21"},{"lineNumber":137,"author":{"gitId":"freddychenyouren2"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":138,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-21"},{"lineNumber":139,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(\"    No tasks for now!\");","lastModifiedDate":"2023-08-21"},{"lineNumber":140,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-21"},{"lineNumber":141,"author":{"gitId":"freddychenyouren2"},"content":"        } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":142,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-21"},{"lineNumber":143,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(\"    Your current task list:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"freddychenyouren2"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-08-21"},{"lineNumber":145,"author":{"gitId":"freddychenyouren2"},"content":"                System.out.printf(\"     %d.%s\\n\", i + 1, taskList.get(i).toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":146,"author":{"gitId":"freddychenyouren2"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":147,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-21"},{"lineNumber":148,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":149,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":150,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":151,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":152,"author":{"gitId":"freddychenyouren2"},"content":"     * Save a Task after it has been successfully inputted by user.","lastModifiedDate":"2023-08-29"},{"lineNumber":153,"author":{"gitId":"freddychenyouren2"},"content":"     * @param task the Task that is to be saved.","lastModifiedDate":"2023-08-29"},{"lineNumber":154,"author":{"gitId":"freddychenyouren2"},"content":"     * @param isAppend a Boolean to determine if we should add a new line in the saved text file.","lastModifiedDate":"2023-08-29"},{"lineNumber":155,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":156,"author":{"gitId":"freddychenyouren2"},"content":"    public static void saveTask(Task task, boolean isAppend) throws IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":157,"author":{"gitId":"freddychenyouren2"},"content":"        // Format of saving tasks follow CS2103T Website:","lastModifiedDate":"2023-08-29"},{"lineNumber":158,"author":{"gitId":"freddychenyouren2"},"content":"        // T | 1 | read book","lastModifiedDate":"2023-08-29"},{"lineNumber":159,"author":{"gitId":"freddychenyouren2"},"content":"        // D | 0 | return book | June 6th","lastModifiedDate":"2023-08-29"},{"lineNumber":160,"author":{"gitId":"freddychenyouren2"},"content":"        // E | 0 | project meeting | Aug 6th 2pm | Aug 6th 4pm","lastModifiedDate":"2023-08-29"},{"lineNumber":161,"author":{"gitId":"freddychenyouren2"},"content":"        FileOutputStream outputStream \u003d new FileOutputStream(\"src/main/data/duke.txt\", isAppend);","lastModifiedDate":"2023-08-29"},{"lineNumber":162,"author":{"gitId":"freddychenyouren2"},"content":"        //Use a BufferedWriter","lastModifiedDate":"2023-08-29"},{"lineNumber":163,"author":{"gitId":"freddychenyouren2"},"content":"        BufferedWriter bufferedWriter \u003d new BufferedWriter(new OutputStreamWriter(outputStream));","lastModifiedDate":"2023-08-29"},{"lineNumber":164,"author":{"gitId":"freddychenyouren2"},"content":"        String[] saved \u003d new String[5]; // Cannot be more than 5 separate parts. 5th part is only for Event","lastModifiedDate":"2023-08-29"},{"lineNumber":165,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":166,"author":{"gitId":"freddychenyouren2"},"content":"        //saved[0]","lastModifiedDate":"2023-08-29"},{"lineNumber":167,"author":{"gitId":"freddychenyouren2"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2023-08-29"},{"lineNumber":168,"author":{"gitId":"freddychenyouren2"},"content":"            saved[0] \u003d \"D\";","lastModifiedDate":"2023-08-29"},{"lineNumber":169,"author":{"gitId":"freddychenyouren2"},"content":"            saved[3] \u003d ((Deadline) task).getDueDate().toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":170,"author":{"gitId":"freddychenyouren2"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2023-08-29"},{"lineNumber":171,"author":{"gitId":"freddychenyouren2"},"content":"            saved[0] \u003d \"E\";","lastModifiedDate":"2023-08-29"},{"lineNumber":172,"author":{"gitId":"freddychenyouren2"},"content":"            saved[3] \u003d ((Event) task).getStartTime().toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":173,"author":{"gitId":"freddychenyouren2"},"content":"            saved[4] \u003d ((Event) task).getEndTime().toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":174,"author":{"gitId":"freddychenyouren2"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":175,"author":{"gitId":"freddychenyouren2"},"content":"            //Todo task","lastModifiedDate":"2023-08-29"},{"lineNumber":176,"author":{"gitId":"freddychenyouren2"},"content":"            saved[0] \u003d \"T\";","lastModifiedDate":"2023-08-29"},{"lineNumber":177,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":178,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":179,"author":{"gitId":"freddychenyouren2"},"content":"        //saved[1] and saved[2]","lastModifiedDate":"2023-08-29"},{"lineNumber":180,"author":{"gitId":"freddychenyouren2"},"content":"        saved[1] \u003d task.isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-08-29"},{"lineNumber":181,"author":{"gitId":"freddychenyouren2"},"content":"        saved[2] \u003d task.getDescription();","lastModifiedDate":"2023-08-29"},{"lineNumber":182,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":183,"author":{"gitId":"freddychenyouren2"},"content":"        if (isAppend) {","lastModifiedDate":"2023-08-29"},{"lineNumber":184,"author":{"gitId":"freddychenyouren2"},"content":"            bufferedWriter.newLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":185,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":186,"author":{"gitId":"freddychenyouren2"},"content":"        bufferedWriter.write(String.join(\" | \", saved));","lastModifiedDate":"2023-08-29"},{"lineNumber":187,"author":{"gitId":"freddychenyouren2"},"content":"        bufferedWriter.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":188,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":189,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":190,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":191,"author":{"gitId":"freddychenyouren2"},"content":"     * Loads tasks saved previously from Hard Disk.","lastModifiedDate":"2023-08-29"},{"lineNumber":192,"author":{"gitId":"freddychenyouren2"},"content":"     * @throws IOException throws an IO Exception if the file is corrupted or invalid.","lastModifiedDate":"2023-08-29"},{"lineNumber":193,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":194,"author":{"gitId":"freddychenyouren2"},"content":"    private static void loadTasks() throws IOException, InvalidDateException {","lastModifiedDate":"2023-08-30"},{"lineNumber":195,"author":{"gitId":"freddychenyouren2"},"content":"        //Use FileInputStream and BufferedReader, opposite of saveTask()","lastModifiedDate":"2023-08-29"},{"lineNumber":196,"author":{"gitId":"freddychenyouren2"},"content":"        // try-catch to check if file exists or if file is correct format","lastModifiedDate":"2023-08-29"},{"lineNumber":197,"author":{"gitId":"freddychenyouren2"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":198,"author":{"gitId":"freddychenyouren2"},"content":"            Path directory \u003d Path.of(\"./data\");","lastModifiedDate":"2023-08-29"},{"lineNumber":199,"author":{"gitId":"freddychenyouren2"},"content":"            if (!Files.exists(directory)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":200,"author":{"gitId":"freddychenyouren2"},"content":"                System.out.println(\"System Message: Directory \u0027data\u0027 does not exist. Creating one...\");","lastModifiedDate":"2023-08-29"},{"lineNumber":201,"author":{"gitId":"freddychenyouren2"},"content":"                Files.createDirectories(directory); // Create the directory if it doesn\u0027t exist","lastModifiedDate":"2023-08-29"},{"lineNumber":202,"author":{"gitId":"freddychenyouren2"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":203,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(\"System Message: Directory \u0027data\u0027 exists!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":204,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":205,"author":{"gitId":"freddychenyouren2"},"content":"            Path file \u003d Path.of(\"./data/duke.txt\");","lastModifiedDate":"2023-08-29"},{"lineNumber":206,"author":{"gitId":"freddychenyouren2"},"content":"            if (!Files.exists(file)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":207,"author":{"gitId":"freddychenyouren2"},"content":"                System.out.println(\"System Message: File \u0027duke.txt\u0027 does not exist. Creating one...\");","lastModifiedDate":"2023-08-29"},{"lineNumber":208,"author":{"gitId":"freddychenyouren2"},"content":"                Files.createFile(file); // Create the file if it doesn\u0027t exist","lastModifiedDate":"2023-08-29"},{"lineNumber":209,"author":{"gitId":"freddychenyouren2"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":210,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(\"System Message: File \u0027duke.txt\u0027 exists! Loading past data...\");","lastModifiedDate":"2023-08-29"},{"lineNumber":211,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":212,"author":{"gitId":"freddychenyouren2"},"content":"            FileInputStream inputStream \u003d new FileInputStream(\"src/main/data/duke.txt\");","lastModifiedDate":"2023-08-29"},{"lineNumber":213,"author":{"gitId":"freddychenyouren2"},"content":"            BufferedReader bufferedReader \u003d new BufferedReader(new InputStreamReader((inputStream)));","lastModifiedDate":"2023-08-29"},{"lineNumber":214,"author":{"gitId":"freddychenyouren2"},"content":"            String currentLine;","lastModifiedDate":"2023-08-29"},{"lineNumber":215,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":216,"author":{"gitId":"freddychenyouren2"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":217,"author":{"gitId":"freddychenyouren2"},"content":"                //Recall delimiter \"|\" and get details of the tasks and add tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":218,"author":{"gitId":"freddychenyouren2"},"content":"                while ((currentLine \u003d bufferedReader.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":219,"author":{"gitId":"freddychenyouren2"},"content":"                    if (isValidTaskLine(currentLine)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":220,"author":{"gitId":"freddychenyouren2"},"content":"                        // Parse the line and create tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":221,"author":{"gitId":"freddychenyouren2"},"content":"                        String[] content \u003d currentLine.split(\" \\\\| \");","lastModifiedDate":"2023-08-29"},{"lineNumber":222,"author":{"gitId":"freddychenyouren2"},"content":"                        //System.out.printf(\"Content: %s\", content);","lastModifiedDate":"2023-08-29"},{"lineNumber":223,"author":{"gitId":"freddychenyouren2"},"content":"                        String taskDescription \u003d content[2];","lastModifiedDate":"2023-08-29"},{"lineNumber":224,"author":{"gitId":"freddychenyouren2"},"content":"                        //System.out.printf(\"Event details: %s\\n\", currentLine);","lastModifiedDate":"2023-08-29"},{"lineNumber":225,"author":{"gitId":"freddychenyouren2"},"content":"                        Task taskFromHardDisk;","lastModifiedDate":"2023-08-29"},{"lineNumber":226,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":227,"author":{"gitId":"freddychenyouren2"},"content":"                        // Now check which type of task it belongs to","lastModifiedDate":"2023-08-29"},{"lineNumber":228,"author":{"gitId":"freddychenyouren2"},"content":"                        // Create the task and add task to taskList","lastModifiedDate":"2023-08-29"},{"lineNumber":229,"author":{"gitId":"freddychenyouren2"},"content":"                        switch(content[0]) {","lastModifiedDate":"2023-08-29"},{"lineNumber":230,"author":{"gitId":"freddychenyouren2"},"content":"                        case \"E\":","lastModifiedDate":"2023-08-29"},{"lineNumber":231,"author":{"gitId":"freddychenyouren2"},"content":"                            if (!isValidDate(content[3]) || !isValidDate(content[4])) {","lastModifiedDate":"2023-08-30"},{"lineNumber":232,"author":{"gitId":"freddychenyouren2"},"content":"                                System.out.printf(\"Skipping line with invalid date: %s\\n\", currentLine);","lastModifiedDate":"2023-08-30"},{"lineNumber":233,"author":{"gitId":"freddychenyouren2"},"content":"                            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":234,"author":{"gitId":"freddychenyouren2"},"content":"                                taskFromHardDisk \u003d new Event(taskDescription, LocalDate.parse(content[3]), LocalDate.parse(content[4]));","lastModifiedDate":"2023-08-30"},{"lineNumber":235,"author":{"gitId":"freddychenyouren2"},"content":"                                //Check if task is done","lastModifiedDate":"2023-08-30"},{"lineNumber":236,"author":{"gitId":"freddychenyouren2"},"content":"                                if (content[1].equals(\"1\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":237,"author":{"gitId":"freddychenyouren2"},"content":"                                    taskFromHardDisk.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":238,"author":{"gitId":"freddychenyouren2"},"content":"                                } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":239,"author":{"gitId":"freddychenyouren2"},"content":"                                    taskFromHardDisk.markAsNotDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":240,"author":{"gitId":"freddychenyouren2"},"content":"                                }","lastModifiedDate":"2023-08-30"},{"lineNumber":241,"author":{"gitId":"freddychenyouren2"},"content":"                                taskList.add(taskFromHardDisk);","lastModifiedDate":"2023-08-30"},{"lineNumber":242,"author":{"gitId":"freddychenyouren2"},"content":"                                //Potential error for content[3]","lastModifiedDate":"2023-08-29"},{"lineNumber":243,"author":{"gitId":"freddychenyouren2"},"content":"                            }","lastModifiedDate":"2023-08-30"},{"lineNumber":244,"author":{"gitId":"freddychenyouren2"},"content":"                            break;","lastModifiedDate":"2023-08-29"},{"lineNumber":245,"author":{"gitId":"freddychenyouren2"},"content":"                        case \"D\":","lastModifiedDate":"2023-08-29"},{"lineNumber":246,"author":{"gitId":"freddychenyouren2"},"content":"                            if (!isValidDate(content[3])) {","lastModifiedDate":"2023-08-30"},{"lineNumber":247,"author":{"gitId":"freddychenyouren2"},"content":"                                System.out.printf(\"Skipping line with invalid date: %s\\n\", currentLine);","lastModifiedDate":"2023-08-30"},{"lineNumber":248,"author":{"gitId":"freddychenyouren2"},"content":"                            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":249,"author":{"gitId":"freddychenyouren2"},"content":"                                taskFromHardDisk \u003d new Deadline(taskDescription, LocalDate.parse(content[3]));","lastModifiedDate":"2023-08-30"},{"lineNumber":250,"author":{"gitId":"freddychenyouren2"},"content":"                                //Check if task is done","lastModifiedDate":"2023-08-30"},{"lineNumber":251,"author":{"gitId":"freddychenyouren2"},"content":"                                if (content[1].equals(\"1\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":252,"author":{"gitId":"freddychenyouren2"},"content":"                                    taskFromHardDisk.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":253,"author":{"gitId":"freddychenyouren2"},"content":"                                } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":254,"author":{"gitId":"freddychenyouren2"},"content":"                                    taskFromHardDisk.markAsNotDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":255,"author":{"gitId":"freddychenyouren2"},"content":"                                }","lastModifiedDate":"2023-08-30"},{"lineNumber":256,"author":{"gitId":"freddychenyouren2"},"content":"                                taskList.add(taskFromHardDisk);","lastModifiedDate":"2023-08-30"},{"lineNumber":257,"author":{"gitId":"freddychenyouren2"},"content":"                                //Potential error for content[3]","lastModifiedDate":"2023-08-29"},{"lineNumber":258,"author":{"gitId":"freddychenyouren2"},"content":"                            }","lastModifiedDate":"2023-08-30"},{"lineNumber":259,"author":{"gitId":"freddychenyouren2"},"content":"                            break;","lastModifiedDate":"2023-08-29"},{"lineNumber":260,"author":{"gitId":"freddychenyouren2"},"content":"                        default:","lastModifiedDate":"2023-08-29"},{"lineNumber":261,"author":{"gitId":"freddychenyouren2"},"content":"                            taskFromHardDisk \u003d new Todo(taskDescription);","lastModifiedDate":"2023-08-29"},{"lineNumber":262,"author":{"gitId":"freddychenyouren2"},"content":"                            //Check if task is done","lastModifiedDate":"2023-08-29"},{"lineNumber":263,"author":{"gitId":"freddychenyouren2"},"content":"                            if (content[1].equals(\"1\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":264,"author":{"gitId":"freddychenyouren2"},"content":"                                taskFromHardDisk.markAsDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":265,"author":{"gitId":"freddychenyouren2"},"content":"                            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":266,"author":{"gitId":"freddychenyouren2"},"content":"                                taskFromHardDisk.markAsNotDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":267,"author":{"gitId":"freddychenyouren2"},"content":"                            }","lastModifiedDate":"2023-08-29"},{"lineNumber":268,"author":{"gitId":"freddychenyouren2"},"content":"                            taskList.add(taskFromHardDisk);","lastModifiedDate":"2023-08-29"},{"lineNumber":269,"author":{"gitId":"freddychenyouren2"},"content":"                            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":270,"author":{"gitId":"freddychenyouren2"},"content":"                        }","lastModifiedDate":"2023-08-30"},{"lineNumber":271,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":272,"author":{"gitId":"freddychenyouren2"},"content":"                    } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":273,"author":{"gitId":"freddychenyouren2"},"content":"                        System.out.printf(\"Skipping corrupted line: %s\\n\", currentLine);","lastModifiedDate":"2023-08-29"},{"lineNumber":274,"author":{"gitId":"freddychenyouren2"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":275,"author":{"gitId":"freddychenyouren2"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":276,"author":{"gitId":"freddychenyouren2"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":277,"author":{"gitId":"freddychenyouren2"},"content":"                // Handle exception while reading the file","lastModifiedDate":"2023-08-29"},{"lineNumber":278,"author":{"gitId":"freddychenyouren2"},"content":"                System.out.printf(\"Error while reading file: %s\", e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":279,"author":{"gitId":"freddychenyouren2"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":280,"author":{"gitId":"freddychenyouren2"},"content":"            bufferedReader.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":281,"author":{"gitId":"freddychenyouren2"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":282,"author":{"gitId":"freddychenyouren2"},"content":"            // Handle exception while creating directory or file","lastModifiedDate":"2023-08-29"},{"lineNumber":283,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.printf(\"Error while creating directory: %s\", e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":284,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":285,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":286,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":287,"author":{"gitId":"freddychenyouren2"},"content":"    public static boolean isValidTaskLine(String line) {","lastModifiedDate":"2023-08-29"},{"lineNumber":288,"author":{"gitId":"freddychenyouren2"},"content":"        String[] tokens \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-08-29"},{"lineNumber":289,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":290,"author":{"gitId":"freddychenyouren2"},"content":"        if (tokens.length \u003e\u003d 3 \u0026\u0026 tokens.length \u003c\u003d 5) { // Valid number of segments: 3-5 (Todo-Event)","lastModifiedDate":"2023-08-29"},{"lineNumber":291,"author":{"gitId":"freddychenyouren2"},"content":"            String taskType \u003d tokens[0].trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":292,"author":{"gitId":"freddychenyouren2"},"content":"            String completionStatus \u003d tokens[1].trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":293,"author":{"gitId":"freddychenyouren2"},"content":"            String description \u003d tokens[2].trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":294,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":295,"author":{"gitId":"freddychenyouren2"},"content":"            return taskType.matches(\"[TDE]\") \u0026\u0026 completionStatus.matches(\"[01]\") \u0026\u0026 !description.isEmpty(); // Line matches expected format","lastModifiedDate":"2023-08-30"},{"lineNumber":296,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":297,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":298,"author":{"gitId":"freddychenyouren2"},"content":"        return false; // Line is not valid","lastModifiedDate":"2023-08-29"},{"lineNumber":299,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":300,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":301,"author":{"gitId":"freddychenyouren2"},"content":"    public static boolean isValidDate(String testDate) {","lastModifiedDate":"2023-08-30"},{"lineNumber":302,"author":{"gitId":"freddychenyouren2"},"content":"        SimpleDateFormat simpleDate \u003d new SimpleDateFormat(\"yyyy-MM-dd\");","lastModifiedDate":"2023-08-30"},{"lineNumber":303,"author":{"gitId":"freddychenyouren2"},"content":"        simpleDate.setLenient(false);","lastModifiedDate":"2023-08-30"},{"lineNumber":304,"author":{"gitId":"freddychenyouren2"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":305,"author":{"gitId":"freddychenyouren2"},"content":"            simpleDate.parse(testDate);","lastModifiedDate":"2023-08-30"},{"lineNumber":306,"author":{"gitId":"freddychenyouren2"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-08-30"},{"lineNumber":307,"author":{"gitId":"freddychenyouren2"},"content":"            return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":308,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":309,"author":{"gitId":"freddychenyouren2"},"content":"        return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":310,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":311,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":312,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":313,"author":{"gitId":"freddychenyouren2"},"content":"     * Clears lines of task status in Hard Disk.","lastModifiedDate":"2023-08-29"},{"lineNumber":314,"author":{"gitId":"freddychenyouren2"},"content":"     * @throws IOException throws IO Exception if file format is invalid or currupted.","lastModifiedDate":"2023-08-29"},{"lineNumber":315,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":316,"author":{"gitId":"freddychenyouren2"},"content":"    private static void clearAllData() throws IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":317,"author":{"gitId":"freddychenyouren2"},"content":"        FileOutputStream outputStream \u003d new FileOutputStream(\"src/main/data/duke.txt\");","lastModifiedDate":"2023-08-29"},{"lineNumber":318,"author":{"gitId":"freddychenyouren2"},"content":"        BufferedWriter bufferedWriter \u003d new BufferedWriter(new OutputStreamWriter((outputStream)));","lastModifiedDate":"2023-08-29"},{"lineNumber":319,"author":{"gitId":"freddychenyouren2"},"content":"        bufferedWriter.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":320,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":321,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":322,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":323,"author":{"gitId":"freddychenyouren2"},"content":"     * Updates all lines of task status in Hard Disk.","lastModifiedDate":"2023-08-29"},{"lineNumber":324,"author":{"gitId":"freddychenyouren2"},"content":"     * @throws IOException throws IO Exception if file format is invalid or currupted.","lastModifiedDate":"2023-08-29"},{"lineNumber":325,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":326,"author":{"gitId":"freddychenyouren2"},"content":"    private static void updateData() throws IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":327,"author":{"gitId":"freddychenyouren2"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":328,"author":{"gitId":"freddychenyouren2"},"content":"            if (i !\u003d 0) {","lastModifiedDate":"2023-08-29"},{"lineNumber":329,"author":{"gitId":"freddychenyouren2"},"content":"                saveTask(taskList.get(i), true);","lastModifiedDate":"2023-08-29"},{"lineNumber":330,"author":{"gitId":"freddychenyouren2"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":331,"author":{"gitId":"freddychenyouren2"},"content":"                saveTask(taskList.get(i), false);","lastModifiedDate":"2023-08-29"},{"lineNumber":332,"author":{"gitId":"freddychenyouren2"},"content":"            } //BUG FOR EVENT TASK, End Time get erased, Type kept getting changed to Deadline","lastModifiedDate":"2023-08-29"},{"lineNumber":333,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":334,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":335,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":336,"author":{"gitId":"freddychenyouren2"},"content":"    public static void main(String[] args)","lastModifiedDate":"2023-08-30"},{"lineNumber":337,"author":{"gitId":"freddychenyouren2"},"content":"            throws InvalidCommandException, IOException, InvalidDateException {","lastModifiedDate":"2023-08-30"},{"lineNumber":338,"author":{"gitId":"freddychenyouren2"},"content":"        Boolean repeatFlag \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":339,"author":{"gitId":"freddychenyouren2"},"content":"        loadTasks();","lastModifiedDate":"2023-08-29"},{"lineNumber":340,"author":{"gitId":"freddychenyouren2"},"content":"        greet();","lastModifiedDate":"2023-08-29"},{"lineNumber":341,"author":{"gitId":"freddychenyouren2"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-23"},{"lineNumber":342,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":343,"author":{"gitId":"freddychenyouren2"},"content":"        while (repeatFlag) {","lastModifiedDate":"2023-08-21"},{"lineNumber":344,"author":{"gitId":"freddychenyouren2"},"content":"            try {","lastModifiedDate":"2023-08-23"},{"lineNumber":345,"author":{"gitId":"freddychenyouren2"},"content":"                System.out.println(\"Enter Command: \");","lastModifiedDate":"2023-08-29"},{"lineNumber":346,"author":{"gitId":"freddychenyouren2"},"content":"                String userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-08-21"},{"lineNumber":347,"author":{"gitId":"freddychenyouren2"},"content":"                //Level-4 Inrement: Use userInput.startWith() to check first word before splitting","lastModifiedDate":"2023-08-22"},{"lineNumber":348,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":349,"author":{"gitId":"freddychenyouren2"},"content":"                String[] words \u003d userInput.split(\"\\\\s+\"); // Split input by space, put into array","lastModifiedDate":"2023-08-21"},{"lineNumber":350,"author":{"gitId":"freddychenyouren2"},"content":"                String formattedInput \u003d userInput.toLowerCase();","lastModifiedDate":"2023-08-21"},{"lineNumber":351,"author":{"gitId":"freddychenyouren2"},"content":"                String firstWord \u003d words[0].toUpperCase();","lastModifiedDate":"2023-08-24"},{"lineNumber":352,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":353,"author":{"gitId":"freddychenyouren2"},"content":"                Command command; //Use enum","lastModifiedDate":"2023-08-24"},{"lineNumber":354,"author":{"gitId":"freddychenyouren2"},"content":"                try {","lastModifiedDate":"2023-08-24"},{"lineNumber":355,"author":{"gitId":"freddychenyouren2"},"content":"                    command \u003d Command.valueOf(firstWord);","lastModifiedDate":"2023-08-24"},{"lineNumber":356,"author":{"gitId":"freddychenyouren2"},"content":"                } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":357,"author":{"gitId":"freddychenyouren2"},"content":"                    command \u003d Command.UNKNOWN;","lastModifiedDate":"2023-08-24"},{"lineNumber":358,"author":{"gitId":"freddychenyouren2"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":359,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":360,"author":{"gitId":"freddychenyouren2"},"content":"                //A-Enum: Use switch-case instead of if-else for neater code","lastModifiedDate":"2023-08-24"},{"lineNumber":361,"author":{"gitId":"freddychenyouren2"},"content":"                switch (command) {","lastModifiedDate":"2023-08-24"},{"lineNumber":362,"author":{"gitId":"freddychenyouren2"},"content":"                case BYE:","lastModifiedDate":"2023-08-24"},{"lineNumber":363,"author":{"gitId":"freddychenyouren2"},"content":"                    farewell();","lastModifiedDate":"2023-08-20"},{"lineNumber":364,"author":{"gitId":"freddychenyouren2"},"content":"                    repeatFlag \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":365,"author":{"gitId":"freddychenyouren2"},"content":"                    break;","lastModifiedDate":"2023-08-24"},{"lineNumber":366,"author":{"gitId":"freddychenyouren2"},"content":"                case LIST:","lastModifiedDate":"2023-08-24"},{"lineNumber":367,"author":{"gitId":"freddychenyouren2"},"content":"                    listAllTasks();","lastModifiedDate":"2023-08-21"},{"lineNumber":368,"author":{"gitId":"freddychenyouren2"},"content":"                    break;","lastModifiedDate":"2023-08-24"},{"lineNumber":369,"author":{"gitId":"freddychenyouren2"},"content":"                case MARK:","lastModifiedDate":"2023-08-24"},{"lineNumber":370,"author":{"gitId":"freddychenyouren2"},"content":"                    int taskIndex \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":371,"author":{"gitId":"freddychenyouren2"},"content":"                    markTask(taskIndex);","lastModifiedDate":"2023-08-21"},{"lineNumber":372,"author":{"gitId":"freddychenyouren2"},"content":"                    break;","lastModifiedDate":"2023-08-24"},{"lineNumber":373,"author":{"gitId":"freddychenyouren2"},"content":"                case UNMARK:","lastModifiedDate":"2023-08-24"},{"lineNumber":374,"author":{"gitId":"freddychenyouren2"},"content":"                    taskIndex \u003d Integer.parseInt(words[1]) - 1; //Same variable name taskIndex as above","lastModifiedDate":"2023-08-24"},{"lineNumber":375,"author":{"gitId":"freddychenyouren2"},"content":"                    unmarkTask(taskIndex);","lastModifiedDate":"2023-08-21"},{"lineNumber":376,"author":{"gitId":"freddychenyouren2"},"content":"                    break;","lastModifiedDate":"2023-08-24"},{"lineNumber":377,"author":{"gitId":"freddychenyouren2"},"content":"                case DELETE:","lastModifiedDate":"2023-08-24"},{"lineNumber":378,"author":{"gitId":"freddychenyouren2"},"content":"                    deleteTask(userInput);","lastModifiedDate":"2023-08-23"},{"lineNumber":379,"author":{"gitId":"freddychenyouren2"},"content":"                    break;","lastModifiedDate":"2023-08-24"},{"lineNumber":380,"author":{"gitId":"freddychenyouren2"},"content":"                case DEADLINE:","lastModifiedDate":"2023-08-24"},{"lineNumber":381,"author":{"gitId":"freddychenyouren2"},"content":"                    Deadline.handleDeadlineTask(userInput);","lastModifiedDate":"2023-08-22"},{"lineNumber":382,"author":{"gitId":"freddychenyouren2"},"content":"                    break;","lastModifiedDate":"2023-08-24"},{"lineNumber":383,"author":{"gitId":"freddychenyouren2"},"content":"                case TODO:","lastModifiedDate":"2023-08-24"},{"lineNumber":384,"author":{"gitId":"freddychenyouren2"},"content":"                    Todo.handleTodoTask(userInput);","lastModifiedDate":"2023-08-22"},{"lineNumber":385,"author":{"gitId":"freddychenyouren2"},"content":"                    break;","lastModifiedDate":"2023-08-24"},{"lineNumber":386,"author":{"gitId":"freddychenyouren2"},"content":"                case EVENT:","lastModifiedDate":"2023-08-24"},{"lineNumber":387,"author":{"gitId":"freddychenyouren2"},"content":"                    Event.handleEventTask(userInput);","lastModifiedDate":"2023-08-22"},{"lineNumber":388,"author":{"gitId":"freddychenyouren2"},"content":"                    break;","lastModifiedDate":"2023-08-24"},{"lineNumber":389,"author":{"gitId":"freddychenyouren2"},"content":"                case UNKNOWN:","lastModifiedDate":"2023-08-24"},{"lineNumber":390,"author":{"gitId":"freddychenyouren2"},"content":"                    throw new InvalidCommandException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-23"},{"lineNumber":391,"author":{"gitId":"freddychenyouren2"},"content":"                }","lastModifiedDate":"2023-08-21"},{"lineNumber":392,"author":{"gitId":"freddychenyouren2"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":393,"author":{"gitId":"freddychenyouren2"},"content":"                System.err.println(HORIZONTAL_LINE + \"\\n\" + e.toString() + HORIZONTAL_LINE);","lastModifiedDate":"2023-08-29"},{"lineNumber":394,"author":{"gitId":"freddychenyouren2"},"content":"            } catch (EmptyDescriptionException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":395,"author":{"gitId":"freddychenyouren2"},"content":"                e.printExceptionMessage();","lastModifiedDate":"2023-08-23"},{"lineNumber":396,"author":{"gitId":"freddychenyouren2"},"content":"            } catch (InvalidCommandException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":397,"author":{"gitId":"freddychenyouren2"},"content":"                e.printExceptionMessage();","lastModifiedDate":"2023-08-23"},{"lineNumber":398,"author":{"gitId":"freddychenyouren2"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":399,"author":{"gitId":"freddychenyouren2"},"content":"                System.out.println(\"     Please enter valid Integer index!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":400,"author":{"gitId":"freddychenyouren2"},"content":"                System.out.printf(\"     You currently have %d tasks\", taskList.size());","lastModifiedDate":"2023-08-24"},{"lineNumber":401,"author":{"gitId":"freddychenyouren2"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-08-21"},{"lineNumber":402,"author":{"gitId":"freddychenyouren2"},"content":"                System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-20"},{"lineNumber":403,"author":{"gitId":"freddychenyouren2"},"content":"                System.out.println(\"     Very Invalid command! Please enter valid commands\");","lastModifiedDate":"2023-08-23"},{"lineNumber":404,"author":{"gitId":"freddychenyouren2"},"content":"                System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-23"},{"lineNumber":405,"author":{"gitId":"freddychenyouren2"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":406,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":407,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":408,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":409,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":410,"author":{"gitId":"freddychenyouren2"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":411,"author":{"gitId":"freddychenyouren2"},"content":" * String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-08-20"},{"lineNumber":412,"author":{"gitId":"freddychenyouren2"},"content":" *                 + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-08-20"},{"lineNumber":413,"author":{"gitId":"freddychenyouren2"},"content":" *                 + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-08-20"},{"lineNumber":414,"author":{"gitId":"freddychenyouren2"},"content":" *                 + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-08-20"},{"lineNumber":415,"author":{"gitId":"freddychenyouren2"},"content":" *                 + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-08-20"},{"lineNumber":416,"author":{"gitId":"freddychenyouren2"},"content":" *         System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-08-20"},{"lineNumber":417,"author":{"gitId":"freddychenyouren2"},"content":" */","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"-":3,"freddychenyouren2":414}},{"path":"src/main/java/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"class EmptyDescriptionException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"    public EmptyDescriptionException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":"    public void printExceptionMessage() {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(Duke.HORIZONTAL_LINE);","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(\"     OOPS!!! \" + this.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(Duke.HORIZONTAL_LINE);","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"freddychenyouren2"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"freddychenyouren2":11}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":"    protected LocalDate startTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"freddychenyouren2"},"content":"    protected LocalDate endTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"freddychenyouren2"},"content":"    public Event(String description, LocalDate startTime, LocalDate endTime) {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"freddychenyouren2"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"freddychenyouren2"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"freddychenyouren2"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"freddychenyouren2"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"freddychenyouren2"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"freddychenyouren2"},"content":"//        return \"[E]\" + super.toString() + \" (from: \" + startTime + \" to: \" + endTime + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"freddychenyouren2"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(),","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"freddychenyouren2"},"content":"                getStartTime().format(DateTimeFormatter.ofPattern(\"MMM d yyy\")),","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"freddychenyouren2"},"content":"                getEndTime().format(DateTimeFormatter.ofPattern(\"MMM d yyy\")));","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"freddychenyouren2"},"content":"    public LocalDate getStartTime() {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"freddychenyouren2"},"content":"        return this.startTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"freddychenyouren2"},"content":"    public LocalDate getEndTime() {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"freddychenyouren2"},"content":"        return this.endTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"freddychenyouren2"},"content":"    public String getSchedule() {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"freddychenyouren2"},"content":"        return String.format(\"From %s to %s\", getStartTime(), getEndTime());","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"freddychenyouren2"},"content":"     * Function to handle an Event Task. If it\u0027s inputs are valid, create an Event Task.","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"freddychenyouren2"},"content":"     * Otherwise, print an error message in the console.","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"freddychenyouren2"},"content":"     * @param userInput a valid user input for an Event Task.","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"freddychenyouren2"},"content":"    public static void handleEventTask(String userInput) throws IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"freddychenyouren2"},"content":"        String[] details \u003d userInput.split(\"/from | /to\");","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"freddychenyouren2"},"content":"        //details[0] contains \"deadline\" plus task description, need to erase \"deadline\". details[1] contains String deadline timing","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"freddychenyouren2"},"content":"        if (details.length \u003d\u003d 3) {","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"freddychenyouren2"},"content":"            String taskDescription \u003d details[0].trim().replaceFirst(\"event\", \"\").trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"freddychenyouren2"},"content":"            String startTime \u003d details[1].trim();","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"freddychenyouren2"},"content":"            String endTime \u003d details[2].trim();","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"freddychenyouren2"},"content":"            //Check if input date is valid.","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"freddychenyouren2"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"freddychenyouren2"},"content":"                if (Duke.isValidDate(startTime)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"freddychenyouren2"},"content":"                    Event eventTask \u003d new Event(taskDescription,","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"freddychenyouren2"},"content":"                            LocalDate.parse(startTime),","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"freddychenyouren2"},"content":"                            LocalDate.parse(endTime));","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"freddychenyouren2"},"content":"                    Duke.saveTask(eventTask, true);","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"freddychenyouren2"},"content":"                    Duke.taskList.add(eventTask); //Deadline \u003c: Task","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"freddychenyouren2"},"content":"                    //Print details in the console","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"freddychenyouren2"},"content":"                    System.out.println(Duke.HORIZONTAL_LINE);","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"freddychenyouren2"},"content":"                    System.out.println(\"     Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"freddychenyouren2"},"content":"                    System.out.printf(\"       %s\\n\", eventTask.toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"freddychenyouren2"},"content":"                    System.out.printf(\"     Now you have %d tasks in the list.\\n\", Duke.taskList.size());","lastModifiedDate":"2023-08-22"},{"lineNumber":62,"author":{"gitId":"freddychenyouren2"},"content":"                    System.out.println(Duke.HORIZONTAL_LINE);","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"freddychenyouren2"},"content":"                } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"freddychenyouren2"},"content":"                    throw new InvalidDateException();","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"freddychenyouren2"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"freddychenyouren2"},"content":"            } catch (InvalidDateException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"freddychenyouren2"},"content":"                System.out.println(e.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"freddychenyouren2"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":72,"author":{"gitId":"freddychenyouren2"},"content":"        } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":73,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(Duke.HORIZONTAL_LINE);","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(\"     Invalid Event Task input.\\n\"","lastModifiedDate":"2023-08-22"},{"lineNumber":75,"author":{"gitId":"freddychenyouren2"},"content":"                    + \"     Please input in the following format:\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"freddychenyouren2"},"content":"                    + \"     event \u003cTask Description\u003e /from \u003cstart time\u003e /to \u003cend time\u003e\");","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(Duke.HORIZONTAL_LINE);","lastModifiedDate":"2023-08-23"},{"lineNumber":78,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":79,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":80,"author":{"gitId":"freddychenyouren2"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"freddychenyouren2":80}},{"path":"src/main/java/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"class InvalidCommandException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":"    public void printExceptionMessage() {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(Duke.HORIZONTAL_LINE);","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(\"     OOPS!!! \" + this.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(\"     Please input valid commands. Currently SeeWhyAre bot supports:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(\"     todo\\n     deadline\\n     event\\n     list\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"freddychenyouren2"},"content":"                + \"     mark\\n     unmark\\n     delete\\n     bye\");","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(Duke.HORIZONTAL_LINE);","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"freddychenyouren2"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"freddychenyouren2":14}},{"path":"src/main/java/InvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"public class InvalidDateException extends Exception {","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"    public String toString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":"        return \"     Yoho! The date provided is invalid. Ensure all dates are of the format YYYY-MM-DD. Thanks!\";","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"freddychenyouren2":6}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"public class Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"    protected String description;","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"freddychenyouren2"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"freddychenyouren2"},"content":"        return this.description;","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"freddychenyouren2"},"content":"    public boolean getStatus() {","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"freddychenyouren2"},"content":"        return this.isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"freddychenyouren2"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"freddychenyouren2"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"freddychenyouren2"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.getDescription());","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"freddychenyouren2"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"freddychenyouren2"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"freddychenyouren2"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"freddychenyouren2"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"freddychenyouren2"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"freddychenyouren2"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"freddychenyouren2"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"freddychenyouren2":36}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"// Attempt to solve Merge Conflict 30 Aug 12:25am. This was only a difference in comments in the same line under different branches.","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"freddychenyouren2"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"freddychenyouren2"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"freddychenyouren2"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"freddychenyouren2"},"content":"     * Function to handle a To-do Task. If it\u0027s inputs are valid, create a To-do Task.","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"freddychenyouren2"},"content":"     * Otherwise, print an error message in the console.","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"freddychenyouren2"},"content":"     * @param userInput a valid user input for a To-do Task.","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"freddychenyouren2"},"content":"    public static void handleTodoTask(String userInput) throws EmptyDescriptionException, IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"freddychenyouren2"},"content":"        // use \\u2639 or U+2639 to insert the sad face icon","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"freddychenyouren2"},"content":"        String taskDescription \u003d userInput.trim().replaceFirst(\"todo\", \"\").trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"freddychenyouren2"},"content":"        if (taskDescription.isEmpty()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"freddychenyouren2"},"content":"            throw new EmptyDescriptionException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"freddychenyouren2"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"freddychenyouren2"},"content":"            Todo todoTask \u003d new Todo(taskDescription);","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"freddychenyouren2"},"content":"            Duke.saveTask(todoTask, true);","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"freddychenyouren2"},"content":"            Duke.taskList.add(todoTask); //Todo \u003c: Task","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"freddychenyouren2"},"content":"            //Print details in the console","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(Duke.HORIZONTAL_LINE);","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(\"     Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.printf(\"       %s\\n\", todoTask.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.printf(\"     Now you have %d tasks in the list.\\n\", Duke.taskList.size());","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(Duke.HORIZONTAL_LINE);","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"freddychenyouren2"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"freddychenyouren2":39}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"todo borrow book","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"deadline URGENT TASK! /by Saturday","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"event NUSCO Welcome Tea /from 11am /to 4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":"mark 3","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":"unmark 3","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"freddychenyouren2"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"freddychenyouren2"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"freddychenyouren2"},"content":"deadline erroneous deadline by now","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"freddychenyouren2"},"content":"event wrong event input from 6pm to 8pm","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"freddychenyouren2"},"content":"invalid input","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"freddychenyouren2"},"content":"todo finish CS2103T ip ASAP BRUH","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"freddychenyouren2"},"content":"delete non-Number","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"freddychenyouren2"},"content":"delete 1234.98765","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"freddychenyouren2"},"content":"delete 2","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"freddychenyouren2"},"content":"list","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"freddychenyouren2"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"freddychenyouren2":18}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"freddychenyouren2"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT, use -Dfile.encoding\u003dUTF-8 to account for the OOPS icon","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"freddychenyouren2":1}}]
