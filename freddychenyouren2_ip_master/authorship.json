[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"    protected String by;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"freddychenyouren2"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"freddychenyouren2"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"freddychenyouren2"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"freddychenyouren2"},"content":"     * Function to handle a Deadline Task. If it\u0027s inputs are valid, create a Deadline Task.","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"freddychenyouren2"},"content":"     * Otherwise, print an error message in the console.","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"freddychenyouren2"},"content":"     * @param userInput a valid user input for a Deadline Task.","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"freddychenyouren2"},"content":"    public static void handleDeadlineTask(String userInput) {","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"freddychenyouren2"},"content":"        String[] details \u003d userInput.split(\"/by\");","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"freddychenyouren2"},"content":"        //details[0] contains \"deadline\" plus task description, need to erase \"deadline\". details[1] contains String deadline timing","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"freddychenyouren2"},"content":"        if (details.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"freddychenyouren2"},"content":"            String taskDescription \u003d details[0].trim().replaceFirst(\"deadline\", \"\").trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"freddychenyouren2"},"content":"            String deadline \u003d details[1].trim();","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"freddychenyouren2"},"content":"            Deadline deadlineTask \u003d new Deadline(taskDescription, deadline);","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"freddychenyouren2"},"content":"            Duke.taskList.add(deadlineTask); //Deadline \u003c: Task","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"freddychenyouren2"},"content":"            //Print details in the console","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(Duke.HORIZONTAL_LINE);","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(\"     Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.printf(\"       %s\\n\", deadlineTask.toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.printf(\"     Now you have %d tasks in the list.\\n\", Duke.taskList.size());","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(Duke.HORIZONTAL_LINE);","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"freddychenyouren2"},"content":"        } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(Duke.HORIZONTAL_LINE);","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(\"     Invalid Deadline Task input.\\n\"","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"freddychenyouren2"},"content":"                    + \"     Please input in the following format:\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"freddychenyouren2"},"content":"                    + \"     deadline \u003cTask Description\u003e /by \u003cdeadline timing\u003e\");","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(Duke.HORIZONTAL_LINE);","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"freddychenyouren2"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"freddychenyouren2":44}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":"    static String HORIZONTAL_LINE \u003d \"    ____________________________________________________________\"; //60 underscores.","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":"    static String INDENT \u003d \"    \"; //4 spaces.","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":"    static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":"    enum Command {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"freddychenyouren2"},"content":"        BYE, LIST, MARK, UNMARK, DELETE, DEADLINE, TODO, EVENT, UNKNOWN","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"freddychenyouren2"},"content":"     * Function to greet the User.","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"freddychenyouren2"},"content":"    public static void greet() {","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(\"    Hello! I\u0027m SeeWhyAre Bot!\");","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(\"    What can I do for you?\");","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"freddychenyouren2"},"content":"     * Function to say goodbye to the User and end the program.","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"freddychenyouren2"},"content":"    public static void farewell() {","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(\"    You are closing the SeeWhyAre chat bot.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(\"    Bye bye. Please use me again soon!\");","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"freddychenyouren2"},"content":"     * Function to add any given input into our taskList.","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"freddychenyouren2"},"content":"    public static void addTask(String description) {","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"freddychenyouren2"},"content":"        Task task \u003d new Task(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"freddychenyouren2"},"content":"        taskList.add(task);","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.printf(\"    added: %s%n\", description);","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"freddychenyouren2"},"content":"    public static void deleteTask(String deleteInput) throws EmptyDescriptionException {","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"freddychenyouren2"},"content":"        String[] words \u003d deleteInput.split(\"\\\\s+\"); // Split input by space, put into array","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"freddychenyouren2"},"content":"        //Check for valid length","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"freddychenyouren2"},"content":"        if (words.length \u003c\u003d 1) {","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"freddychenyouren2"},"content":"            throw new EmptyDescriptionException(\"Please provide the task index to be deleted.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"freddychenyouren2"},"content":"        //Try parsing into integer to get deleteIndex","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"freddychenyouren2"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"freddychenyouren2"},"content":"            int deleteIndex \u003d Integer.parseInt(words[1]) - 1; // Potential Error cannot parse to integer","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"freddychenyouren2"},"content":"            if (deleteIndex \u003e\u003d 0 \u0026\u0026 deleteIndex \u003c taskList.size()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"freddychenyouren2"},"content":"                Task removedTask \u003d taskList.remove(deleteIndex); //Actual task can be todo, deadline, or event","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"freddychenyouren2"},"content":"                System.out.println(\"     Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"freddychenyouren2"},"content":"                System.out.printf(\"       %s\\n\", removedTask.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"freddychenyouren2"},"content":"                System.out.printf(\"     Now you have %d tasks in the list.\\n\", taskList.size());","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"freddychenyouren2"},"content":"            } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"freddychenyouren2"},"content":"                System.out.println(\"     ☹ OOPS!!! The task index is invalid.\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"freddychenyouren2"},"content":"                System.out.printf(\"    You currently have %d Task(s).\\n\", taskList.size());","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"freddychenyouren2"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"freddychenyouren2"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(\"     ☹ OOPS!!! Please enter the index after \u0027delete\u0027 command.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(\"     For example: delete 5\");","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(\"     This will remove Task 5 from your Task List, assuming you have at least 5 tasks.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":75,"author":{"gitId":"freddychenyouren2"},"content":"     * Function to mark a given task as done.","lastModifiedDate":"2023-08-21"},{"lineNumber":76,"author":{"gitId":"freddychenyouren2"},"content":"     * @param taskIndex the index of the task to be marked as done.","lastModifiedDate":"2023-08-21"},{"lineNumber":77,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":78,"author":{"gitId":"freddychenyouren2"},"content":"    public static void markTask(int taskIndex) {","lastModifiedDate":"2023-08-21"},{"lineNumber":79,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-21"},{"lineNumber":80,"author":{"gitId":"freddychenyouren2"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d taskList.size()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":81,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.printf(\"     Invalid Index of Task. You currently have %d Task(s)\\n\", taskList.size());","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"freddychenyouren2"},"content":"        } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":83,"author":{"gitId":"freddychenyouren2"},"content":"            Task task \u003d taskList.get(taskIndex);","lastModifiedDate":"2023-08-21"},{"lineNumber":84,"author":{"gitId":"freddychenyouren2"},"content":"            task.markAsDone();","lastModifiedDate":"2023-08-21"},{"lineNumber":85,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(\"     Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":86,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.printf(\"       [%s] %s\\n\", task.getStatusIcon(), task.description);","lastModifiedDate":"2023-08-21"},{"lineNumber":87,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":88,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-21"},{"lineNumber":89,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":90,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":91,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":92,"author":{"gitId":"freddychenyouren2"},"content":"     * Function to mark a given task as done.","lastModifiedDate":"2023-08-21"},{"lineNumber":93,"author":{"gitId":"freddychenyouren2"},"content":"     * @param taskIndex the index of the task to be marked as not done yet.","lastModifiedDate":"2023-08-21"},{"lineNumber":94,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":95,"author":{"gitId":"freddychenyouren2"},"content":"    public static void unmarkTask(int taskIndex) {","lastModifiedDate":"2023-08-21"},{"lineNumber":96,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-21"},{"lineNumber":97,"author":{"gitId":"freddychenyouren2"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d taskList.size()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":98,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.printf(\"    Invalid Index of Task. You currently have %d Task(s)\\n\", taskList.size());","lastModifiedDate":"2023-08-23"},{"lineNumber":99,"author":{"gitId":"freddychenyouren2"},"content":"        } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":100,"author":{"gitId":"freddychenyouren2"},"content":"            Task task \u003d taskList.get(taskIndex);","lastModifiedDate":"2023-08-21"},{"lineNumber":101,"author":{"gitId":"freddychenyouren2"},"content":"            task.markAsNotDone();","lastModifiedDate":"2023-08-21"},{"lineNumber":102,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(\"     OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":103,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.printf(\"       [%s] %s\\n\", task.getStatusIcon(), task.description);","lastModifiedDate":"2023-08-21"},{"lineNumber":104,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":105,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-21"},{"lineNumber":106,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":107,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":108,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":109,"author":{"gitId":"freddychenyouren2"},"content":"     * Function to list out all tasks.","lastModifiedDate":"2023-08-21"},{"lineNumber":110,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":111,"author":{"gitId":"freddychenyouren2"},"content":"    public static void listAllTasks() {","lastModifiedDate":"2023-08-21"},{"lineNumber":112,"author":{"gitId":"freddychenyouren2"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":113,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-21"},{"lineNumber":114,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(\"    No tasks for now!\");","lastModifiedDate":"2023-08-21"},{"lineNumber":115,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-21"},{"lineNumber":116,"author":{"gitId":"freddychenyouren2"},"content":"        } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":117,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-21"},{"lineNumber":118,"author":{"gitId":"freddychenyouren2"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-08-21"},{"lineNumber":119,"author":{"gitId":"freddychenyouren2"},"content":"                System.out.printf(\"     %d.%s\\n\", i + 1, taskList.get(i).toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":120,"author":{"gitId":"freddychenyouren2"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":121,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-21"},{"lineNumber":122,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":123,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":124,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":125,"author":{"gitId":"freddychenyouren2"},"content":"    public static void main(String[] args) throws InvalidCommandException {","lastModifiedDate":"2023-08-23"},{"lineNumber":126,"author":{"gitId":"freddychenyouren2"},"content":"        Boolean repeatFlag \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":127,"author":{"gitId":"freddychenyouren2"},"content":"        greet();","lastModifiedDate":"2023-08-23"},{"lineNumber":128,"author":{"gitId":"freddychenyouren2"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-23"},{"lineNumber":129,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":130,"author":{"gitId":"freddychenyouren2"},"content":"        while (repeatFlag) {","lastModifiedDate":"2023-08-21"},{"lineNumber":131,"author":{"gitId":"freddychenyouren2"},"content":"            try {","lastModifiedDate":"2023-08-23"},{"lineNumber":132,"author":{"gitId":"freddychenyouren2"},"content":"                String userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-08-21"},{"lineNumber":133,"author":{"gitId":"freddychenyouren2"},"content":"                //Level-4 Inrement: Use userInput.startWith() to check first word before splitting","lastModifiedDate":"2023-08-22"},{"lineNumber":134,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":135,"author":{"gitId":"freddychenyouren2"},"content":"                String[] words \u003d userInput.split(\"\\\\s+\"); // Split input by space, put into array","lastModifiedDate":"2023-08-21"},{"lineNumber":136,"author":{"gitId":"freddychenyouren2"},"content":"                String formattedInput \u003d userInput.toLowerCase();","lastModifiedDate":"2023-08-21"},{"lineNumber":137,"author":{"gitId":"freddychenyouren2"},"content":"                String firstWord \u003d words[0].toUpperCase();","lastModifiedDate":"2023-08-24"},{"lineNumber":138,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":139,"author":{"gitId":"freddychenyouren2"},"content":"                Command command; //Use enum","lastModifiedDate":"2023-08-24"},{"lineNumber":140,"author":{"gitId":"freddychenyouren2"},"content":"                try {","lastModifiedDate":"2023-08-24"},{"lineNumber":141,"author":{"gitId":"freddychenyouren2"},"content":"                    command \u003d Command.valueOf(firstWord);","lastModifiedDate":"2023-08-24"},{"lineNumber":142,"author":{"gitId":"freddychenyouren2"},"content":"                } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":143,"author":{"gitId":"freddychenyouren2"},"content":"                    command \u003d Command.UNKNOWN;","lastModifiedDate":"2023-08-24"},{"lineNumber":144,"author":{"gitId":"freddychenyouren2"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":145,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":146,"author":{"gitId":"freddychenyouren2"},"content":"                //A-Enum: Use switch-case instead of if-else for neater code","lastModifiedDate":"2023-08-24"},{"lineNumber":147,"author":{"gitId":"freddychenyouren2"},"content":"                switch (command) {","lastModifiedDate":"2023-08-24"},{"lineNumber":148,"author":{"gitId":"freddychenyouren2"},"content":"                    case BYE:","lastModifiedDate":"2023-08-24"},{"lineNumber":149,"author":{"gitId":"freddychenyouren2"},"content":"                        farewell();","lastModifiedDate":"2023-08-20"},{"lineNumber":150,"author":{"gitId":"freddychenyouren2"},"content":"                        repeatFlag \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":151,"author":{"gitId":"freddychenyouren2"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":152,"author":{"gitId":"freddychenyouren2"},"content":"                    case LIST:","lastModifiedDate":"2023-08-24"},{"lineNumber":153,"author":{"gitId":"freddychenyouren2"},"content":"                        listAllTasks();","lastModifiedDate":"2023-08-21"},{"lineNumber":154,"author":{"gitId":"freddychenyouren2"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":155,"author":{"gitId":"freddychenyouren2"},"content":"                    case MARK:","lastModifiedDate":"2023-08-24"},{"lineNumber":156,"author":{"gitId":"freddychenyouren2"},"content":"                        int taskIndex \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":157,"author":{"gitId":"freddychenyouren2"},"content":"                        markTask(taskIndex);","lastModifiedDate":"2023-08-21"},{"lineNumber":158,"author":{"gitId":"freddychenyouren2"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":159,"author":{"gitId":"freddychenyouren2"},"content":"                    case UNMARK:","lastModifiedDate":"2023-08-24"},{"lineNumber":160,"author":{"gitId":"freddychenyouren2"},"content":"                        taskIndex \u003d Integer.parseInt(words[1]) - 1; //Same variable name taskIndex as above","lastModifiedDate":"2023-08-24"},{"lineNumber":161,"author":{"gitId":"freddychenyouren2"},"content":"                        unmarkTask(taskIndex);","lastModifiedDate":"2023-08-21"},{"lineNumber":162,"author":{"gitId":"freddychenyouren2"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":163,"author":{"gitId":"freddychenyouren2"},"content":"                    case DELETE:","lastModifiedDate":"2023-08-24"},{"lineNumber":164,"author":{"gitId":"freddychenyouren2"},"content":"                        deleteTask(userInput);","lastModifiedDate":"2023-08-23"},{"lineNumber":165,"author":{"gitId":"freddychenyouren2"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":166,"author":{"gitId":"freddychenyouren2"},"content":"                    case DEADLINE:","lastModifiedDate":"2023-08-24"},{"lineNumber":167,"author":{"gitId":"freddychenyouren2"},"content":"                        Deadline.handleDeadlineTask(userInput);","lastModifiedDate":"2023-08-22"},{"lineNumber":168,"author":{"gitId":"freddychenyouren2"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":169,"author":{"gitId":"freddychenyouren2"},"content":"                    case TODO:","lastModifiedDate":"2023-08-24"},{"lineNumber":170,"author":{"gitId":"freddychenyouren2"},"content":"                        Todo.handleTodoTask(userInput);","lastModifiedDate":"2023-08-22"},{"lineNumber":171,"author":{"gitId":"freddychenyouren2"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":172,"author":{"gitId":"freddychenyouren2"},"content":"                    case EVENT:","lastModifiedDate":"2023-08-24"},{"lineNumber":173,"author":{"gitId":"freddychenyouren2"},"content":"                        Event.handleEventTask(userInput);","lastModifiedDate":"2023-08-22"},{"lineNumber":174,"author":{"gitId":"freddychenyouren2"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":175,"author":{"gitId":"freddychenyouren2"},"content":"                    case UNKNOWN:","lastModifiedDate":"2023-08-24"},{"lineNumber":176,"author":{"gitId":"freddychenyouren2"},"content":"                        throw new InvalidCommandException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-23"},{"lineNumber":177,"author":{"gitId":"freddychenyouren2"},"content":"                }","lastModifiedDate":"2023-08-21"},{"lineNumber":178,"author":{"gitId":"freddychenyouren2"},"content":"            } catch (EmptyDescriptionException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":179,"author":{"gitId":"freddychenyouren2"},"content":"                e.printExceptionMessage();","lastModifiedDate":"2023-08-23"},{"lineNumber":180,"author":{"gitId":"freddychenyouren2"},"content":"            } catch (InvalidCommandException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":181,"author":{"gitId":"freddychenyouren2"},"content":"                e.printExceptionMessage();","lastModifiedDate":"2023-08-23"},{"lineNumber":182,"author":{"gitId":"freddychenyouren2"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":183,"author":{"gitId":"freddychenyouren2"},"content":"                System.out.println(\"     Please enter valid Integer index!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":184,"author":{"gitId":"freddychenyouren2"},"content":"                System.out.printf(\"     You currently have %d tasks\", taskList.size());","lastModifiedDate":"2023-08-24"},{"lineNumber":185,"author":{"gitId":"freddychenyouren2"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-08-21"},{"lineNumber":186,"author":{"gitId":"freddychenyouren2"},"content":"                System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-20"},{"lineNumber":187,"author":{"gitId":"freddychenyouren2"},"content":"                System.out.println(\"     Very Invalid command! Please enter valid commands\");","lastModifiedDate":"2023-08-23"},{"lineNumber":188,"author":{"gitId":"freddychenyouren2"},"content":"                System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-23"},{"lineNumber":189,"author":{"gitId":"freddychenyouren2"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":190,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":193,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":194,"author":{"gitId":"freddychenyouren2"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":195,"author":{"gitId":"freddychenyouren2"},"content":" * String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-08-20"},{"lineNumber":196,"author":{"gitId":"freddychenyouren2"},"content":" *                 + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-08-20"},{"lineNumber":197,"author":{"gitId":"freddychenyouren2"},"content":" *                 + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-08-20"},{"lineNumber":198,"author":{"gitId":"freddychenyouren2"},"content":" *                 + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-08-20"},{"lineNumber":199,"author":{"gitId":"freddychenyouren2"},"content":" *                 + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-08-20"},{"lineNumber":200,"author":{"gitId":"freddychenyouren2"},"content":" *         System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-08-20"},{"lineNumber":201,"author":{"gitId":"freddychenyouren2"},"content":" */","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"-":3,"freddychenyouren2":198}},{"path":"src/main/java/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"class EmptyDescriptionException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"    public EmptyDescriptionException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":"    public void printExceptionMessage() {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(Duke.HORIZONTAL_LINE);","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(\"     ☹ OOPS!!! \" + this.getMessage());","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(Duke.HORIZONTAL_LINE);","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"freddychenyouren2"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"freddychenyouren2":11}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"    protected String startTime;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":"    protected String endTime;","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":"    public Event(String description, String startTime, String endTime) {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"freddychenyouren2"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"freddychenyouren2"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"freddychenyouren2"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"freddychenyouren2"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"freddychenyouren2"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + startTime + \" to: \" + endTime + \")\";","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"freddychenyouren2"},"content":"     * Function to handle an Event Task. If it\u0027s inputs are valid, create an Event Task.","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"freddychenyouren2"},"content":"     * Otherwise, print an error message in the console.","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"freddychenyouren2"},"content":"     * @param userInput a valid user input for an Event Task.","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"freddychenyouren2"},"content":"    public static void handleEventTask(String userInput) {","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"freddychenyouren2"},"content":"        String[] details \u003d userInput.split(\"/from | /to\");","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"freddychenyouren2"},"content":"        //details[0] contains \"deadline\" plus task description, need to erase \"deadline\". details[1] contains String deadline timing","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"freddychenyouren2"},"content":"        if (details.length \u003d\u003d 3) {","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"freddychenyouren2"},"content":"            String taskDescription \u003d details[0].trim().replaceFirst(\"event\", \"\").trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"freddychenyouren2"},"content":"            String startTime \u003d details[1].trim();","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"freddychenyouren2"},"content":"            String endTime \u003d details[2].trim();","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"freddychenyouren2"},"content":"            Event eventTask \u003d new Event(taskDescription, startTime, endTime);","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"freddychenyouren2"},"content":"            Duke.taskList.add(eventTask); //Deadline \u003c: Task","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"freddychenyouren2"},"content":"            //Print details in the console","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(Duke.HORIZONTAL_LINE);","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(\"     Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.printf(\"       %s\\n\", eventTask.toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.printf(\"     Now you have %d tasks in the list.\\n\", Duke.taskList.size());","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(Duke.HORIZONTAL_LINE);","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"freddychenyouren2"},"content":"        } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(Duke.HORIZONTAL_LINE);","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(\"     Invalid Event Task input.\\n\"","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"freddychenyouren2"},"content":"                    + \"     Please input in the following format:\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"freddychenyouren2"},"content":"                    + \"     event \u003cTask Description\u003e /from \u003cstart time\u003e /to \u003cend time\u003e\");","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(Duke.HORIZONTAL_LINE);","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"freddychenyouren2"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"freddychenyouren2":48}},{"path":"src/main/java/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"class InvalidCommandException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":"    public void printExceptionMessage() {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(Duke.HORIZONTAL_LINE);","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(\"     ☹ OOPS!!! \" + this.getMessage());","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(\"     Please input valid commands. Currently SeeWhyAre bot supports:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(\"     todo \\n     deadline \\n     event \\n     list\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"freddychenyouren2"},"content":"                + \"     mark\\n     unmark\\n     delete\\n     bye\");","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(Duke.HORIZONTAL_LINE);","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"freddychenyouren2"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"freddychenyouren2":14}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"public class Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"    protected String description;","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"freddychenyouren2"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"freddychenyouren2"},"content":"        return this.description;","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"freddychenyouren2"},"content":"    public boolean getStatus() {","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"freddychenyouren2"},"content":"        return this.isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"freddychenyouren2"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"freddychenyouren2"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"freddychenyouren2"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.getDescription());","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"freddychenyouren2"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"freddychenyouren2"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"freddychenyouren2"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"freddychenyouren2"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"freddychenyouren2"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"freddychenyouren2"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"freddychenyouren2"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"freddychenyouren2":36}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"freddychenyouren2"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"freddychenyouren2"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"freddychenyouren2"},"content":"     * Function to handle a To-do Task. If it\u0027s inputs are valid, create a To-do Task.","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"freddychenyouren2"},"content":"     * Otherwise, print an error message in the console.","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"freddychenyouren2"},"content":"     * @param userInput a valid user input for a To-do Task.","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"freddychenyouren2"},"content":"    public static void handleTodoTask(String userInput) throws EmptyDescriptionException {","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"freddychenyouren2"},"content":"        // use \\u2639 or U+2639 to insert the sad face icon","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"freddychenyouren2"},"content":"        String taskDescription \u003d userInput.trim().replaceFirst(\"todo\", \"\").trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"freddychenyouren2"},"content":"        if (taskDescription.isEmpty()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"freddychenyouren2"},"content":"            throw new EmptyDescriptionException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"freddychenyouren2"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"freddychenyouren2"},"content":"            Todo TodoTask \u003d new Todo(taskDescription);","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"freddychenyouren2"},"content":"            Duke.taskList.add(TodoTask); //Todo \u003c: Task","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"freddychenyouren2"},"content":"            //Print details in the console","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(Duke.HORIZONTAL_LINE);","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(\"     Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.printf(\"       %s\\n\", TodoTask.toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.printf(\"     Now you have %d tasks in the list.\\n\", Duke.taskList.size());","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(Duke.HORIZONTAL_LINE);","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"freddychenyouren2"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"freddychenyouren2":35}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"todo borrow book","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"deadline URGENT TASK! /by Saturday","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"event NUSCO Welcome Tea /from 11am /to 4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":"mark 3","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":"unmark 3","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"freddychenyouren2"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"freddychenyouren2"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"freddychenyouren2"},"content":"deadline erroneous deadline by now","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"freddychenyouren2"},"content":"event wrong event input from 6pm to 8pm","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"freddychenyouren2"},"content":"invalid input","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"freddychenyouren2"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"freddychenyouren2":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"freddychenyouren2"},"content":"java -classpath ..\\bin Duke \u003c dos2unix input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"freddychenyouren2":1}}]
