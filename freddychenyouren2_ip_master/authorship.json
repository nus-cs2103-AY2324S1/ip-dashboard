[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"# duke.Duke project template","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"freddychenyouren2"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"freddychenyouren2":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"freddychenyouren2"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":41,"freddychenyouren2":1}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"D | 0 | test dates correct deadline | 2023-10-21 | null","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"E | 1 | correct event timings | 2222-11-11 | 2222-11-13","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"T | 1 | again todo | null | null","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":"T | 0 | Packaged stuff | null | null","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":"D | 1 | Dead Package bruh | 1111-11-11 | null","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":"T | 0 | yes again | null | null","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":"T | 1 | From Gradle | null | null","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"freddychenyouren2"},"content":"T | 0 | Immediate Updte?! | null | null","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"freddychenyouren2"},"content":"T | 0 | feimkds | null | null","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"freddychenyouren2":9}},{"path":"src/main/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"T | 1 | new new new todo | null | null","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"D | 0 | test dates correct deadline | 2023-10-21 | null","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"E | 0 | correct event timings | 2222-11-11 | 2222-11-13","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":"T | 0 | yes todo | null | null","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":"E | 1 | lalalalla | 2020-10-10 | 2019-02-01","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"freddychenyouren2":5}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"import duke.exception.EmptyDescriptionException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":"import duke.exception.InvalidDateException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":"import duke.util.Parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"freddychenyouren2"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"freddychenyouren2"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"freddychenyouren2"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"freddychenyouren2"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"freddychenyouren2"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"freddychenyouren2"},"content":" * Represents the bot SeeWhyAre.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"freddychenyouren2"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"freddychenyouren2"},"content":" * \u003cp\u003eCS2103T AY23/24 Semester 1","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"freddychenyouren2"},"content":" * Individual Project","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"freddychenyouren2"},"content":" * SeeWhyAre Bot","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"freddychenyouren2"},"content":" * 31 Aug 2023","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"freddychenyouren2"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"freddychenyouren2"},"content":" * @author Freddy Chen You Ren","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"freddychenyouren2"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"freddychenyouren2"},"content":"    // HORIZONTAL_LINE","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"freddychenyouren2"},"content":"    public static String HORIZONTAL_LINE \u003d \"    ____________________________________________________________\"; //60 underscores.","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"freddychenyouren2"},"content":"    private static Parser parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"freddychenyouren2"},"content":"    private static Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"freddychenyouren2"},"content":"    private static TaskList listOfTasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"freddychenyouren2"},"content":"    private static Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"freddychenyouren2"},"content":"    public static boolean isFinished \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"freddychenyouren2"},"content":"     * Constructs a new instance of the chat bot.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"freddychenyouren2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"freddychenyouren2"},"content":"     * @param filePath The file path for storing and loading tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"freddychenyouren2"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"freddychenyouren2"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"freddychenyouren2"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"freddychenyouren2"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"freddychenyouren2"},"content":"            listOfTasks \u003d new TaskList(storage);","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"freddychenyouren2"},"content":"            parser \u003d new Parser(listOfTasks, ui);","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"freddychenyouren2"},"content":"            storage.loadTasks();","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"freddychenyouren2"},"content":"            start();","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"freddychenyouren2"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"freddychenyouren2"},"content":"            System.err.println(e);","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"freddychenyouren2"},"content":"        } catch (InvalidDateException | InvalidCommandException | EmptyDescriptionException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"freddychenyouren2"},"content":"     * Starts the SeeWhyAre bot.","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"freddychenyouren2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"freddychenyouren2"},"content":"     * @throws IOException if there are issues with file handling.","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"freddychenyouren2"},"content":"     * @throws InvalidCommandException if there are invalid commands entered by users.","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"freddychenyouren2"},"content":"     * @throws EmptyDescriptionException if users attempt to create tasks with empty descriptions.","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"freddychenyouren2"},"content":"    private static void start() throws IOException,","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"freddychenyouren2"},"content":"            InvalidCommandException, EmptyDescriptionException {","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"freddychenyouren2"},"content":"        ui.greet();","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"freddychenyouren2"},"content":"        while (!isFinished) {","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"freddychenyouren2"},"content":"            parser.parseInput(ui.getUserInput());","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"freddychenyouren2"},"content":"     * Driver method for CLI version of Duke.","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"freddychenyouren2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"freddychenyouren2"},"content":"     * @param args not used.","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"freddychenyouren2"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"freddychenyouren2"},"content":"        new Duke(\"./data/duke.txt\");","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":79,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"-":2,"freddychenyouren2":77}},{"path":"src/main/java/duke/exception/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"package duke.exception;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":" * Represents an Empty Description Exception","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":" *","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":" * \u003cp\u003eCS2103T AY23/24 Semester 1","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":" * Individual Project","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"freddychenyouren2"},"content":" * SeeWhyAre Bot","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"freddychenyouren2"},"content":" * 31 Aug 2023","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"freddychenyouren2"},"content":" *","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"freddychenyouren2"},"content":" * @author Freddy Chen You Ren","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"freddychenyouren2"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"freddychenyouren2"},"content":"public class EmptyDescriptionException extends Exception {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"freddychenyouren2"},"content":"    protected static String HORIZONTAL_LINE \u003d \"    ____________________________________________________________\"; //60 underscores.","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"freddychenyouren2"},"content":"    public EmptyDescriptionException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"freddychenyouren2"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"freddychenyouren2"},"content":"     * Prints the exception message, giving us the reason for the error.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"freddychenyouren2"},"content":"    public void printExceptionMessage() {","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(\"     OOPS!!! \" + this.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"freddychenyouren2"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"freddychenyouren2":28}},{"path":"src/main/java/duke/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"package duke.exception;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"import duke.util.Parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":" * Represents an Invalid Command Exception","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":" *","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"freddychenyouren2"},"content":" * \u003cp\u003eCS2103T AY23/24 Semester 1","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"freddychenyouren2"},"content":" * Individual Project","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"freddychenyouren2"},"content":" * SeeWhyAre Bot","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"freddychenyouren2"},"content":" * 31 Aug 2023","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"freddychenyouren2"},"content":" *","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"freddychenyouren2"},"content":" * @author Freddy Chen You Ren","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"freddychenyouren2"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"freddychenyouren2"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"freddychenyouren2"},"content":"    protected static String HORIZONTAL_LINE \u003d \"    ____________________________________________________________\"; //60 underscores.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"freddychenyouren2"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"freddychenyouren2"},"content":"        super(message);","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"freddychenyouren2"},"content":"     * Prints the exception message, giving us the reason for the error.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"freddychenyouren2"},"content":"     * Includes the list of commands that the current version of SeeWhyAre bot supports.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"freddychenyouren2"},"content":"    public void printExceptionMessage() {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(\"     OOPS!!! \" + this.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(\"     Please input valid commands. Currently SeeWhyAre bot supports:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"freddychenyouren2"},"content":"        for (Parser.Command c : Parser.Command.values()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(\"     \" + c);","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"freddychenyouren2"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"freddychenyouren2":34}},{"path":"src/main/java/duke/exception/InvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"package duke.exception;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":" * Represents an Invalid Date Exception","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":" *","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":" * \u003cp\u003eCS2103T AY23/24 Semester 1","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":" * Individual Project","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"freddychenyouren2"},"content":" * SeeWhyAre Bot","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"freddychenyouren2"},"content":" * 31 Aug 2023","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"freddychenyouren2"},"content":" *","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"freddychenyouren2"},"content":" * @author Freddy Chen You Ren","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"freddychenyouren2"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"freddychenyouren2"},"content":"public class InvalidDateException extends Exception {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"freddychenyouren2"},"content":"     * Overrides the Exception Object\u0027s toString method and contains an error message.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"freddychenyouren2"},"content":"     * @return The error messsage String with a correction of Date input format.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"freddychenyouren2"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"freddychenyouren2"},"content":"    public String toString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"freddychenyouren2"},"content":"        return \"     Yoho! The date provided is invalid. \" +","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"freddychenyouren2"},"content":"                \"Ensure all dates are of the format YYYY-MM-DD. Thanks!\";","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"freddychenyouren2"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"freddychenyouren2":23}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"import duke.Duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":"import duke.exception.InvalidDateException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"freddychenyouren2"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"freddychenyouren2"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"freddychenyouren2"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"freddychenyouren2"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"freddychenyouren2"},"content":" * Represents a Deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"freddychenyouren2"},"content":" *","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"freddychenyouren2"},"content":" * \u003cp\u003eCS2103T AY23/24 Semester 1","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"freddychenyouren2"},"content":" * Individual Project","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"freddychenyouren2"},"content":" * SeeWhyAre Bot","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"freddychenyouren2"},"content":" * 31 Aug 2023","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"freddychenyouren2"},"content":" *","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"freddychenyouren2"},"content":" * @author Freddy Chen You Ren","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"freddychenyouren2"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"freddychenyouren2"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"freddychenyouren2"},"content":"    private LocalDate by;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"freddychenyouren2"},"content":"     * Constructs a Deadline task with the given description and deadline date.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"freddychenyouren2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"freddychenyouren2"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"freddychenyouren2"},"content":"     * @param by          The deadline date.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"freddychenyouren2"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"freddychenyouren2"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"freddychenyouren2"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"freddychenyouren2"},"content":"    private LocalDate getDeadlineDate() {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"freddychenyouren2"},"content":"        return this.by;","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"freddychenyouren2"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"freddychenyouren2"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"freddychenyouren2"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(),","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"freddychenyouren2"},"content":"                getDeadlineDate().format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"freddychenyouren2"},"content":"    public LocalDate getDueDate() {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"freddychenyouren2"},"content":"        return this.by;","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"freddychenyouren2"},"content":"     * Handles the creation of a Deadline task based on user input.","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"freddychenyouren2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"freddychenyouren2"},"content":"     * @param userInput A valid user input for a Deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"freddychenyouren2"},"content":"     * @throws IOException If there is an error with the storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"freddychenyouren2"},"content":"    public static void handleDeadlineTask(String userInput) throws IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"freddychenyouren2"},"content":"        String[] details \u003d userInput.split(\"/by\");","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"freddychenyouren2"},"content":"        //details[0] contains \"deadline\" plus duke.task description, need to erase \"deadline\". details[1] contains deadline timing","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"freddychenyouren2"},"content":"        if (details.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"freddychenyouren2"},"content":"            String taskDescription \u003d details[0].trim().replaceFirst(\"deadline\", \"\").trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"freddychenyouren2"},"content":"            String deadline \u003d details[1].trim();","lastModifiedDate":"2023-08-22"},{"lineNumber":62,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"freddychenyouren2"},"content":"            //Check if input date is valid.","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"freddychenyouren2"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"freddychenyouren2"},"content":"                if (TaskList.isValidDate(deadline)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"freddychenyouren2"},"content":"                    Deadline deadlineTask \u003d new Deadline(taskDescription, LocalDate.parse(deadline));","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"freddychenyouren2"},"content":"                    Storage.saveTask(deadlineTask, true);","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"freddychenyouren2"},"content":"                    Storage.listOfTasks.add(deadlineTask); //duke.task.Deadline \u003c: duke.task.Task","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":70,"author":{"gitId":"freddychenyouren2"},"content":"                    //Print details in the console","lastModifiedDate":"2023-08-22"},{"lineNumber":71,"author":{"gitId":"freddychenyouren2"},"content":"                    System.out.println(Duke.HORIZONTAL_LINE);","lastModifiedDate":"2023-08-22"},{"lineNumber":72,"author":{"gitId":"freddychenyouren2"},"content":"                    System.out.println(\"     Got it. I\u0027ve added this Task:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"freddychenyouren2"},"content":"                    System.out.printf(\"       %s\\n\", deadlineTask.toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":74,"author":{"gitId":"freddychenyouren2"},"content":"                    System.out.printf(\"     Now you have %d task(s) in the list.\\n\", Storage.listOfTasks.size());","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"freddychenyouren2"},"content":"                    System.out.println(Duke.HORIZONTAL_LINE);","lastModifiedDate":"2023-08-22"},{"lineNumber":76,"author":{"gitId":"freddychenyouren2"},"content":"                } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"freddychenyouren2"},"content":"                    throw new InvalidDateException();","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"freddychenyouren2"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"freddychenyouren2"},"content":"            } catch (InvalidDateException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"freddychenyouren2"},"content":"                System.out.println(e.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"freddychenyouren2"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":83,"author":{"gitId":"freddychenyouren2"},"content":"        } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":84,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(Duke.HORIZONTAL_LINE);","lastModifiedDate":"2023-08-23"},{"lineNumber":85,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(\"     Invalid Deadline Task input.\\n\"","lastModifiedDate":"2023-08-22"},{"lineNumber":86,"author":{"gitId":"freddychenyouren2"},"content":"                    + \"     Please input in the following format:\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":87,"author":{"gitId":"freddychenyouren2"},"content":"                    + \"     deadline \u003cTask Description\u003e /by \u003cdeadline timing\u003e\");","lastModifiedDate":"2023-08-23"},{"lineNumber":88,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(Duke.HORIZONTAL_LINE);","lastModifiedDate":"2023-08-23"},{"lineNumber":89,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":90,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":91,"author":{"gitId":"freddychenyouren2"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"freddychenyouren2":91}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"import duke.exception.InvalidDateException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"freddychenyouren2"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"freddychenyouren2"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"freddychenyouren2"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"freddychenyouren2"},"content":" * Represents an Event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"freddychenyouren2"},"content":" *","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"freddychenyouren2"},"content":" * \u003cp\u003eCS2103T AY23/24 Semester 1","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"freddychenyouren2"},"content":" * Individual Project","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"freddychenyouren2"},"content":" * SeeWhyAre Bot","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"freddychenyouren2"},"content":" * 31 Aug 2023","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"freddychenyouren2"},"content":" *","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"freddychenyouren2"},"content":" * @author Freddy Chen You Ren","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"freddychenyouren2"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"freddychenyouren2"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"freddychenyouren2"},"content":"    protected LocalDate startTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"freddychenyouren2"},"content":"    protected LocalDate endTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"freddychenyouren2"},"content":"    protected static String HORIZONTAL_LINE \u003d \"    ____________________________________________________________\"; //60 underscores.","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"freddychenyouren2"},"content":"     * Constructs a Event task with the given description, start date and end date.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"freddychenyouren2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"freddychenyouren2"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"freddychenyouren2"},"content":"     * @param startTime   The starting date of the Event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"freddychenyouren2"},"content":"     * @param endTime     The end date of the Event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"freddychenyouren2"},"content":"    public Event(String description, LocalDate startTime, LocalDate endTime) {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"freddychenyouren2"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"freddychenyouren2"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"freddychenyouren2"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"freddychenyouren2"},"content":"    protected static void printHorizontalLine() {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"freddychenyouren2"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"freddychenyouren2"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"freddychenyouren2"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(),","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"freddychenyouren2"},"content":"                getStartTime().format(DateTimeFormatter.ofPattern(\"MMM d yyy\")),","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"freddychenyouren2"},"content":"                getEndTime().format(DateTimeFormatter.ofPattern(\"MMM d yyy\")));","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"freddychenyouren2"},"content":"    public LocalDate getStartTime() {","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"freddychenyouren2"},"content":"        return this.startTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"freddychenyouren2"},"content":"    public LocalDate getEndTime() {","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"freddychenyouren2"},"content":"        return this.endTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"freddychenyouren2"},"content":"     * Handles the creation of a Deadline task based on user input.","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"freddychenyouren2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"freddychenyouren2"},"content":"     * @param userInput A valid user input for a Deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"freddychenyouren2"},"content":"     * @throws IOException If there is an error with the storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":65,"author":{"gitId":"freddychenyouren2"},"content":"    public static void handleEventTask(String userInput) throws IOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"freddychenyouren2"},"content":"        String[] details \u003d userInput.split(\"/from | /to\");","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"freddychenyouren2"},"content":"        //details[0] contains \"deadline\" plus duke.task description, need to erase \"deadline\". details[1] contains String deadline timing","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"freddychenyouren2"},"content":"        if (details.length \u003d\u003d 3) {","lastModifiedDate":"2023-08-22"},{"lineNumber":69,"author":{"gitId":"freddychenyouren2"},"content":"            String taskDescription \u003d details[0].trim().replaceFirst(\"event\", \"\").trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"freddychenyouren2"},"content":"            String startTime \u003d details[1].trim();","lastModifiedDate":"2023-08-22"},{"lineNumber":71,"author":{"gitId":"freddychenyouren2"},"content":"            String endTime \u003d details[2].trim();","lastModifiedDate":"2023-08-22"},{"lineNumber":72,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"freddychenyouren2"},"content":"            //Check if input date is valid.","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"freddychenyouren2"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"freddychenyouren2"},"content":"                if (TaskList.isValidDate(startTime)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"freddychenyouren2"},"content":"                    Event eventTask \u003d new Event(taskDescription,","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"freddychenyouren2"},"content":"                            LocalDate.parse(startTime),","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"freddychenyouren2"},"content":"                            LocalDate.parse(endTime));","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"freddychenyouren2"},"content":"                    Storage.saveTask(eventTask, true);","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"freddychenyouren2"},"content":"                    Storage.listOfTasks.add(eventTask); //duke.task.Deadline \u003c: duke.task.Task","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":83,"author":{"gitId":"freddychenyouren2"},"content":"                    //Print details in the console","lastModifiedDate":"2023-08-22"},{"lineNumber":84,"author":{"gitId":"freddychenyouren2"},"content":"                    printHorizontalLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"freddychenyouren2"},"content":"                    System.out.println(\"     Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":86,"author":{"gitId":"freddychenyouren2"},"content":"                    System.out.printf(\"       %s\\n\", eventTask.toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":87,"author":{"gitId":"freddychenyouren2"},"content":"                    System.out.printf(\"     Now you have %d task(s) in the list.\\n\", Storage.listOfTasks.size());","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"freddychenyouren2"},"content":"                    printHorizontalLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"freddychenyouren2"},"content":"                } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"freddychenyouren2"},"content":"                    throw new InvalidDateException();","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"freddychenyouren2"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"freddychenyouren2"},"content":"            } catch (InvalidDateException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"freddychenyouren2"},"content":"                System.out.println(e.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"freddychenyouren2"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"freddychenyouren2"},"content":"        } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":97,"author":{"gitId":"freddychenyouren2"},"content":"            printHorizontalLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(\"     Invalid Event Task input.\\n\"","lastModifiedDate":"2023-08-22"},{"lineNumber":99,"author":{"gitId":"freddychenyouren2"},"content":"                    + \"     Please input in the following format:\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":100,"author":{"gitId":"freddychenyouren2"},"content":"                    + \"     event \u003cTask Description\u003e /from \u003cstart time\u003e /to \u003cend time\u003e\");","lastModifiedDate":"2023-08-23"},{"lineNumber":101,"author":{"gitId":"freddychenyouren2"},"content":"            printHorizontalLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":103,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":104,"author":{"gitId":"freddychenyouren2"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"freddychenyouren2":104}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":" * Represents a Task in the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":" *","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":" * \u003cp\u003eCS2103T AY23/24 Semester 1","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":" * Individual Project","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"freddychenyouren2"},"content":" * SeeWhyAre Bot","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"freddychenyouren2"},"content":" * 31 Aug 2023","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"freddychenyouren2"},"content":" *","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"freddychenyouren2"},"content":" * @author Freddy Chen You Ren","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"freddychenyouren2"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"freddychenyouren2"},"content":"public class Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"freddychenyouren2"},"content":"    public String description;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"freddychenyouren2"},"content":"    public boolean isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"freddychenyouren2"},"content":"     * Constructs a task with the given description.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"freddychenyouren2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"freddychenyouren2"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"freddychenyouren2"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"freddychenyouren2"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"freddychenyouren2"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"freddychenyouren2"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"freddychenyouren2"},"content":"        return this.description;","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"freddychenyouren2"},"content":"     * Gets the status of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"freddychenyouren2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"freddychenyouren2"},"content":"     * @return True if the task is done, false otherwise.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"freddychenyouren2"},"content":"    public boolean getStatus() {","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"freddychenyouren2"},"content":"        return this.isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"freddychenyouren2"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"freddychenyouren2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"freddychenyouren2"},"content":"     * @return A string with the status icon and description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"freddychenyouren2"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"freddychenyouren2"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"freddychenyouren2"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.getDescription());","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"freddychenyouren2"},"content":"     * Gets the status icon of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"freddychenyouren2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"freddychenyouren2"},"content":"     * @return The status icon as a String (\"X\" if done, \" \" if not done).","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"freddychenyouren2"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"freddychenyouren2"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":58,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":59,"author":{"gitId":"freddychenyouren2"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":60,"author":{"gitId":"freddychenyouren2"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":61,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":62,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":63,"author":{"gitId":"freddychenyouren2"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":64,"author":{"gitId":"freddychenyouren2"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":65,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":66,"author":{"gitId":"freddychenyouren2"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"freddychenyouren2":66}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"//test","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":"import duke.Duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":"import duke.exception.EmptyDescriptionException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"freddychenyouren2"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"freddychenyouren2"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"freddychenyouren2"},"content":" * Represents a Todo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"freddychenyouren2"},"content":" *","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"freddychenyouren2"},"content":" * \u003cp\u003eCS2103T AY23/24 Semester 1","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"freddychenyouren2"},"content":" * Individual Project","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"freddychenyouren2"},"content":" * SeeWhyAre Bot","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"freddychenyouren2"},"content":" * 31 Aug 2023","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"freddychenyouren2"},"content":" *","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"freddychenyouren2"},"content":" * @author Freddy Chen You Ren","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"freddychenyouren2"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"freddychenyouren2"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"freddychenyouren2"},"content":"     * Constructs a todo task with the given description.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"freddychenyouren2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"freddychenyouren2"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"freddychenyouren2"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"freddychenyouren2"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"freddychenyouren2"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"freddychenyouren2"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"freddychenyouren2"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"freddychenyouren2"},"content":"     * Handles the creation of a todo task based on user input.","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"freddychenyouren2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"freddychenyouren2"},"content":"     * @param userInput A valid user input for a todo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"freddychenyouren2"},"content":"     * @throws EmptyDescriptionException If the description of the todo task is empty.","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"freddychenyouren2"},"content":"     * @throws IOException If there is an issue with saving the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"freddychenyouren2"},"content":"    public static void handleTodoTask(String userInput) throws EmptyDescriptionException, IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"freddychenyouren2"},"content":"        // use \\u2639 or U+2639 to insert the sad face icon","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"freddychenyouren2"},"content":"        String taskDescription \u003d userInput.trim().replaceFirst(\"todo\", \"\").trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"freddychenyouren2"},"content":"        if (taskDescription.isEmpty()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"freddychenyouren2"},"content":"            throw new EmptyDescriptionException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"freddychenyouren2"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"freddychenyouren2"},"content":"            Todo todoTask \u003d new Todo(taskDescription);","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"freddychenyouren2"},"content":"            Storage.saveTask(todoTask, true);","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"freddychenyouren2"},"content":"            Storage.listOfTasks.add(todoTask); //duke.task.Todo \u003c: duke.task.Task","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"freddychenyouren2"},"content":"            //Print details in the console","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(Duke.HORIZONTAL_LINE);","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(\"     Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.printf(\"       %s\\n\", todoTask.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.printf(\"     Now you have %d task(s) in the list.\\n\", Storage.listOfTasks.size());","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(Duke.HORIZONTAL_LINE);","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":62,"author":{"gitId":"freddychenyouren2"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"freddychenyouren2":62}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"package duke.util;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"import duke.Duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":"import duke.exception.EmptyDescriptionException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"freddychenyouren2"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"freddychenyouren2"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"freddychenyouren2"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"freddychenyouren2"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"freddychenyouren2"},"content":" * Represents a Parser that parses user input for SeeWhyAre bot to perform corresponding actions.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"freddychenyouren2"},"content":" *","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"freddychenyouren2"},"content":" * \u003cp\u003eCS2103T AY23/24 Semester 1","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"freddychenyouren2"},"content":" * Individual Project","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"freddychenyouren2"},"content":" * SeeWhyAre Bot","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"freddychenyouren2"},"content":" * 31 Aug 2023","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"freddychenyouren2"},"content":" *","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"freddychenyouren2"},"content":" * @author Freddy Chen You Ren","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"freddychenyouren2"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"freddychenyouren2"},"content":"public class Parser {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"freddychenyouren2"},"content":"    private static String HORIZONTAL_LINE \u003d \"    ____________________________________________________________\"; //60 underscores.","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"freddychenyouren2"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"freddychenyouren2"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"freddychenyouren2"},"content":"    public enum Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"freddychenyouren2"},"content":"        BYE, LIST, MARK, UNMARK, DELETE, FIND, DEADLINE, TODO, EVENT, UNKNOWN","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"freddychenyouren2"},"content":"     * Constructs a Parser with the specified task list and CLI user interface.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"freddychenyouren2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"freddychenyouren2"},"content":"     * @param taskList The task list to work with.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"freddychenyouren2"},"content":"     * @param ui The CLI user interface to display messages.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"freddychenyouren2"},"content":"    public Parser(TaskList taskList, Ui ui) {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"freddychenyouren2"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"freddychenyouren2"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"freddychenyouren2"},"content":"    private void printHorizontalLine() {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"freddychenyouren2"},"content":"     * Retrieves the command keyword from the user input.","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"freddychenyouren2"},"content":"     * The command keyword is the first word from the user input.","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"freddychenyouren2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"freddychenyouren2"},"content":"     * @param line The user input to be parsed.","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"freddychenyouren2"},"content":"     * @return The command keyword extracted from the user input.","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"freddychenyouren2"},"content":"    private String getCommand(String line) {","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"freddychenyouren2"},"content":"        return line.trim().split(\"\\\\s+\")[0].toUpperCase();","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"freddychenyouren2"},"content":"     * Parses user input and performs the corresponding action.","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"freddychenyouren2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"freddychenyouren2"},"content":"     * @param userInput The user\u0027s input to be parsed.","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"freddychenyouren2"},"content":"     * @throws IOException If there is an issue with I/O operations.","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"freddychenyouren2"},"content":"     * @throws EmptyDescriptionException If a description is required but not provided.","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"freddychenyouren2"},"content":"     * @throws InvalidCommandException If an invalid command is entered.","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"freddychenyouren2"},"content":"    public void parseInput(String userInput)","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"freddychenyouren2"},"content":"            throws IOException, EmptyDescriptionException, InvalidCommandException {","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"freddychenyouren2"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"freddychenyouren2"},"content":"            String firstWord \u003d getCommand(userInput);","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"freddychenyouren2"},"content":"            String[] words \u003d userInput.split(\"\\\\s+\"); // Split input by space, put into array","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"freddychenyouren2"},"content":"            Command command; //Use enum","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"freddychenyouren2"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"freddychenyouren2"},"content":"                command \u003d Command.valueOf(firstWord);","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"freddychenyouren2"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"freddychenyouren2"},"content":"                command \u003d Command.UNKNOWN;","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"freddychenyouren2"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"freddychenyouren2"},"content":"            //A-Enum: Use switch-case instead of if-else for neater code","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"freddychenyouren2"},"content":"            switch (command) {","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"freddychenyouren2"},"content":"            case BYE:","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"freddychenyouren2"},"content":"                ui.farewell();","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"freddychenyouren2"},"content":"                Duke.isFinished \u003d true;","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"freddychenyouren2"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"freddychenyouren2"},"content":"            case LIST:","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"freddychenyouren2"},"content":"                taskList.listAllTasks();","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"freddychenyouren2"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"freddychenyouren2"},"content":"            case MARK:","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"freddychenyouren2"},"content":"                int taskIndex \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"freddychenyouren2"},"content":"                taskList.markTask(taskIndex);","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"freddychenyouren2"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"freddychenyouren2"},"content":"            case UNMARK:","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"freddychenyouren2"},"content":"                taskIndex \u003d Integer.parseInt(words[1]) - 1; //Same variable name taskIndex as above","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"freddychenyouren2"},"content":"                taskList.unmarkTask(taskIndex);","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"freddychenyouren2"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"freddychenyouren2"},"content":"            case DELETE:","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"freddychenyouren2"},"content":"                taskList.deleteTask(userInput);","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"freddychenyouren2"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"freddychenyouren2"},"content":"            case FIND:","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"freddychenyouren2"},"content":"                String keyword \u003d userInput.trim().replaceFirst(\"find\", \"\").trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"freddychenyouren2"},"content":"                taskList.findTask(keyword);","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"freddychenyouren2"},"content":"                break;","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"freddychenyouren2"},"content":"            case DEADLINE:","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"freddychenyouren2"},"content":"                Deadline.handleDeadlineTask(userInput);","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"freddychenyouren2"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"freddychenyouren2"},"content":"            case TODO:","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"freddychenyouren2"},"content":"                Todo.handleTodoTask(userInput);","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"freddychenyouren2"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"freddychenyouren2"},"content":"            case EVENT:","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"freddychenyouren2"},"content":"                Event.handleEventTask(userInput);","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"freddychenyouren2"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"freddychenyouren2"},"content":"            case UNKNOWN:","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"freddychenyouren2"},"content":"                throw new InvalidCommandException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"freddychenyouren2"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"freddychenyouren2"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"freddychenyouren2"},"content":"            System.err.println(HORIZONTAL_LINE + \"\\n\" + e.toString() + HORIZONTAL_LINE);","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"freddychenyouren2"},"content":"        } catch (EmptyDescriptionException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"freddychenyouren2"},"content":"            e.printExceptionMessage();","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"freddychenyouren2"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"freddychenyouren2"},"content":"            e.printExceptionMessage();","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"freddychenyouren2"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(\"     Please enter valid Integer index!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.printf(\"     You currently have %d tasks\", taskList.listOfTasks.size());","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"freddychenyouren2"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(\"     Very Invalid command! Please enter valid commands\");","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"freddychenyouren2"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"freddychenyouren2":129}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"package duke.util;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"import duke.exception.InvalidDateException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"freddychenyouren2"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"freddychenyouren2"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"freddychenyouren2"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"freddychenyouren2"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"freddychenyouren2"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"freddychenyouren2"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"freddychenyouren2"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"freddychenyouren2"},"content":"import java.io.OutputStreamWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"freddychenyouren2"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"freddychenyouren2"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"freddychenyouren2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"freddychenyouren2"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"freddychenyouren2"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"freddychenyouren2"},"content":" * Represents a Storage to store the list of tasks of a user into a file in hard disk.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"freddychenyouren2"},"content":" *","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"freddychenyouren2"},"content":" * \u003cp\u003eCS2103T AY23/24 Semester 1","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"freddychenyouren2"},"content":" * Individual Project","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"freddychenyouren2"},"content":" * SeeWhyAre Bot","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"freddychenyouren2"},"content":" * 31 Aug 2023","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"freddychenyouren2"},"content":" *","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"freddychenyouren2"},"content":" * @author Freddy Chen You Ren","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"freddychenyouren2"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"freddychenyouren2"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"freddychenyouren2"},"content":"    protected static String filePath;","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"freddychenyouren2"},"content":"    public static ArrayList\u003cTask\u003e listOfTasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"freddychenyouren2"},"content":"     * Constructs a Storage with the specified file path","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"freddychenyouren2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"freddychenyouren2"},"content":"     * @param filePath the file path to create a file to store user data.","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"freddychenyouren2"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"freddychenyouren2"},"content":"        Storage.filePath \u003d filePath;","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"freddychenyouren2"},"content":"        listOfTasks \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"freddychenyouren2"},"content":"     * Saves a Task into Hard Disk after it has been successfully inputted by user.","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"freddychenyouren2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"freddychenyouren2"},"content":"     * @param task the Task that is to be saved.","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"freddychenyouren2"},"content":"     * @param isAppend a Boolean to determine if we should add a new line in the saved text file.","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"freddychenyouren2"},"content":"     * @throws IOException if there are errors while saving the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"freddychenyouren2"},"content":"    public static void saveTask(Task task, boolean isAppend) throws IOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"freddychenyouren2"},"content":"        FileOutputStream outputStream \u003d new FileOutputStream(new File(filePath), isAppend);","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"freddychenyouren2"},"content":"        //Use a BufferedWriter","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"freddychenyouren2"},"content":"        BufferedWriter bufferedWriter \u003d new BufferedWriter(new OutputStreamWriter(outputStream));","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"freddychenyouren2"},"content":"        String[] saved \u003d new String[5]; // Cannot be more than 5 separate parts. 5th part is only for Event","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"freddychenyouren2"},"content":"        //saved[0]","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"freddychenyouren2"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"freddychenyouren2"},"content":"            saved[0] \u003d \"D\";","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"freddychenyouren2"},"content":"            saved[3] \u003d ((Deadline) task).getDueDate().toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"freddychenyouren2"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"freddychenyouren2"},"content":"            saved[0] \u003d \"E\";","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"freddychenyouren2"},"content":"            saved[3] \u003d ((Event) task).getStartTime().toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"freddychenyouren2"},"content":"            saved[4] \u003d ((Event) task).getEndTime().toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"freddychenyouren2"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"freddychenyouren2"},"content":"            //duke.task.Todo duke.task","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"freddychenyouren2"},"content":"            saved[0] \u003d \"T\";","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"freddychenyouren2"},"content":"        //saved[1] and saved[2]","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"freddychenyouren2"},"content":"        saved[1] \u003d task.isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"freddychenyouren2"},"content":"        saved[2] \u003d task.getDescription();","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"freddychenyouren2"},"content":"        if (isAppend) {","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"freddychenyouren2"},"content":"            bufferedWriter.newLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"freddychenyouren2"},"content":"        bufferedWriter.write(String.join(\" | \", saved));","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"freddychenyouren2"},"content":"        bufferedWriter.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"freddychenyouren2"},"content":"     * Loads tasks saved previously from Hard Disk.","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"freddychenyouren2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"freddychenyouren2"},"content":"     * @throws IOException if the file is corrupted or invalid.","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"freddychenyouren2"},"content":"     * @throws InvalidDateException if the date format or content in the file is corrupted or invalid.","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"freddychenyouren2"},"content":"    public void loadTasks() throws IOException, InvalidDateException {","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"freddychenyouren2"},"content":"        // Use FileInputStream and BufferedReader, opposite of saveTask()","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"freddychenyouren2"},"content":"        // try-catch to check if file exists or if file is correct format","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"freddychenyouren2"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"freddychenyouren2"},"content":"            Path directory \u003d Path.of(\"./data\");","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"freddychenyouren2"},"content":"            if (!Files.exists(directory)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"freddychenyouren2"},"content":"                System.out.println(\"System Message: Directory \u0027data\u0027 does not exist. Creating one...\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"freddychenyouren2"},"content":"                        \"You can view it under root directory after exiting the program this time.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"freddychenyouren2"},"content":"                Files.createDirectories(directory); // Create the directory if it doesn\u0027t exist","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"freddychenyouren2"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"freddychenyouren2"},"content":"                System.out.println(\"System Message: Directory \u0027data\u0027 exists!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"freddychenyouren2"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"freddychenyouren2"},"content":"            Path file \u003d Path.of(\"./data/duke.txt\");","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"freddychenyouren2"},"content":"            if (!Files.exists(file)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"freddychenyouren2"},"content":"                System.out.println(\"System Message: File \u0027duke.txt\u0027 does not exist. Creating one...\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"freddychenyouren2"},"content":"                        \"You can view it under \u0027data\u0027 directory after exiting the program this time.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"freddychenyouren2"},"content":"                Files.createFile(file); // Create the file if it doesn\u0027t exist","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"freddychenyouren2"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"freddychenyouren2"},"content":"                System.out.println(\"System Message: File \u0027duke.txt\u0027 exists! Loading past data...\");","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"freddychenyouren2"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"freddychenyouren2"},"content":"            FileInputStream inputStream \u003d new FileInputStream(new File(filePath));","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"freddychenyouren2"},"content":"            BufferedReader bufferedReader \u003d new BufferedReader(new InputStreamReader((inputStream)));","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"freddychenyouren2"},"content":"            String currentLine;","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"freddychenyouren2"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"freddychenyouren2"},"content":"                //Recall delimiter \"|\" and get details of the tasks and add tasks","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"freddychenyouren2"},"content":"                while ((currentLine \u003d bufferedReader.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"freddychenyouren2"},"content":"                    if (TaskList.isValidTaskLine(currentLine)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"freddychenyouren2"},"content":"                        // Parse the line and create tasks","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"freddychenyouren2"},"content":"                        String[] content \u003d currentLine.split(\" \\\\| \"); // System.out.printf(\"Content: %s\", content);","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"freddychenyouren2"},"content":"                        String taskDescription \u003d content[2]; // System.out.printf(\"Event details: %s\\n\", currentLine);","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"freddychenyouren2"},"content":"                        Task taskFromHardDisk;","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"freddychenyouren2"},"content":"                        // Now check which type of task it belongs to. Create the task and add task to taskList.","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"freddychenyouren2"},"content":"                        switch(content[0]) {","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"freddychenyouren2"},"content":"                        case \"E\":","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"freddychenyouren2"},"content":"                            if (!TaskList.isValidDate(content[3]) || !TaskList.isValidDate(content[4])) {","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"freddychenyouren2"},"content":"                                System.out.printf(\"Skipping line with invalid date: %s\\n\", currentLine);","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"freddychenyouren2"},"content":"                            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"freddychenyouren2"},"content":"                                taskFromHardDisk \u003d new Event(taskDescription, LocalDate.parse(content[3]), LocalDate.parse(content[4]));","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"freddychenyouren2"},"content":"                                checkCompletionStatus(taskFromHardDisk, content[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"freddychenyouren2"},"content":"                                listOfTasks.add(taskFromHardDisk);","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"freddychenyouren2"},"content":"                                //Potential error for content[3]","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"freddychenyouren2"},"content":"                            }","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"freddychenyouren2"},"content":"                            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"freddychenyouren2"},"content":"                        case \"D\":","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"freddychenyouren2"},"content":"                            if (!TaskList.isValidDate(content[3])) {","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"freddychenyouren2"},"content":"                                System.out.printf(\"Skipping line with invalid date: %s\\n\", currentLine);","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"freddychenyouren2"},"content":"                            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"freddychenyouren2"},"content":"                                taskFromHardDisk \u003d new Deadline(taskDescription, LocalDate.parse(content[3]));","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"freddychenyouren2"},"content":"                                checkCompletionStatus(taskFromHardDisk, content[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"freddychenyouren2"},"content":"                                listOfTasks.add(taskFromHardDisk);","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"freddychenyouren2"},"content":"                                //Potential error for content[3]","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"freddychenyouren2"},"content":"                            }","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"freddychenyouren2"},"content":"                            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"freddychenyouren2"},"content":"                        default:","lastModifiedDate":"2023-08-30"},{"lineNumber":148,"author":{"gitId":"freddychenyouren2"},"content":"                            taskFromHardDisk \u003d new Todo(taskDescription);","lastModifiedDate":"2023-08-30"},{"lineNumber":149,"author":{"gitId":"freddychenyouren2"},"content":"                            checkCompletionStatus(taskFromHardDisk, content[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"freddychenyouren2"},"content":"                            listOfTasks.add(taskFromHardDisk);","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"freddychenyouren2"},"content":"                            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":152,"author":{"gitId":"freddychenyouren2"},"content":"                        }","lastModifiedDate":"2023-08-30"},{"lineNumber":153,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":154,"author":{"gitId":"freddychenyouren2"},"content":"                    } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":155,"author":{"gitId":"freddychenyouren2"},"content":"                        System.out.printf(\"Skipping corrupted line: %s\\n\", currentLine);","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"freddychenyouren2"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":157,"author":{"gitId":"freddychenyouren2"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"freddychenyouren2"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":159,"author":{"gitId":"freddychenyouren2"},"content":"                // Handle duke.exception while reading the file","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"freddychenyouren2"},"content":"                System.out.printf(\"Error while reading file: %s\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":161,"author":{"gitId":"freddychenyouren2"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":162,"author":{"gitId":"freddychenyouren2"},"content":"            bufferedReader.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":163,"author":{"gitId":"freddychenyouren2"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":164,"author":{"gitId":"freddychenyouren2"},"content":"            // Handle duke.exception while creating directory or file","lastModifiedDate":"2023-08-30"},{"lineNumber":165,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.printf(\"Error while creating directory: %s\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":166,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":167,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":168,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":169,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":170,"author":{"gitId":"freddychenyouren2"},"content":"     * Checks whether a Task has already been done.","lastModifiedDate":"2023-08-30"},{"lineNumber":171,"author":{"gitId":"freddychenyouren2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"freddychenyouren2"},"content":"     * @param task The task whose completion status is to be checked.","lastModifiedDate":"2023-08-30"},{"lineNumber":173,"author":{"gitId":"freddychenyouren2"},"content":"     * @param completionStatus The completion status read from memory. 0 means not done, 1 means done.","lastModifiedDate":"2023-08-30"},{"lineNumber":174,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":175,"author":{"gitId":"freddychenyouren2"},"content":"    protected void checkCompletionStatus(Task task, String completionStatus) {","lastModifiedDate":"2023-08-30"},{"lineNumber":176,"author":{"gitId":"freddychenyouren2"},"content":"        if (completionStatus.equals(\"1\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":177,"author":{"gitId":"freddychenyouren2"},"content":"            task.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":178,"author":{"gitId":"freddychenyouren2"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":179,"author":{"gitId":"freddychenyouren2"},"content":"            task.markAsNotDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":180,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":181,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":182,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":183,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":184,"author":{"gitId":"freddychenyouren2"},"content":"     * Clears lines of task in Hard Disk.","lastModifiedDate":"2023-08-30"},{"lineNumber":185,"author":{"gitId":"freddychenyouren2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":186,"author":{"gitId":"freddychenyouren2"},"content":"     * @throws IOException throws IO Exception if file format is invalid or corrupted.","lastModifiedDate":"2023-08-30"},{"lineNumber":187,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":188,"author":{"gitId":"freddychenyouren2"},"content":"    protected void clearAllData() throws IOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":189,"author":{"gitId":"freddychenyouren2"},"content":"        FileOutputStream outputStream \u003d new FileOutputStream(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":190,"author":{"gitId":"freddychenyouren2"},"content":"        BufferedWriter bufferedWriter \u003d new BufferedWriter(new OutputStreamWriter((outputStream)));","lastModifiedDate":"2023-08-30"},{"lineNumber":191,"author":{"gitId":"freddychenyouren2"},"content":"        bufferedWriter.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":192,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":193,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":194,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":195,"author":{"gitId":"freddychenyouren2"},"content":"     * Updates all lines of task status in Hard Disk.","lastModifiedDate":"2023-08-30"},{"lineNumber":196,"author":{"gitId":"freddychenyouren2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":197,"author":{"gitId":"freddychenyouren2"},"content":"     * @throws IOException throws IO Exception if file format is invalid or corrupted.","lastModifiedDate":"2023-08-30"},{"lineNumber":198,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":199,"author":{"gitId":"freddychenyouren2"},"content":"    protected void updateData() throws IOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":200,"author":{"gitId":"freddychenyouren2"},"content":"        for (int i \u003d 0; i \u003c listOfTasks.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":201,"author":{"gitId":"freddychenyouren2"},"content":"            saveTask(listOfTasks.get(i), i !\u003d 0);","lastModifiedDate":"2023-08-31"},{"lineNumber":202,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":203,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":204,"author":{"gitId":"freddychenyouren2"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"freddychenyouren2":204}},{"path":"src/main/java/duke/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"package duke.util;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"import duke.exception.EmptyDescriptionException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"freddychenyouren2"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"freddychenyouren2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"freddychenyouren2"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"freddychenyouren2"},"content":" * Represents a Task List which is just a list of Tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"freddychenyouren2"},"content":" *","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"freddychenyouren2"},"content":" * \u003cp\u003eCS2103T AY23/24 Semester 1","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"freddychenyouren2"},"content":" * Individual Project","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"freddychenyouren2"},"content":" * SeeWhyAre Bot","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"freddychenyouren2"},"content":" * 31 Aug 2023","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"freddychenyouren2"},"content":" *","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"freddychenyouren2"},"content":" * @author Freddy Chen You Ren","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"freddychenyouren2"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"freddychenyouren2"},"content":"public class TaskList {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"freddychenyouren2"},"content":"    protected Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"freddychenyouren2"},"content":"    protected ArrayList\u003cTask\u003e listOfTasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"freddychenyouren2"},"content":"    protected static String HORIZONTAL_LINE \u003d \"    ____________________________________________________________\"; //60 underscores.","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"freddychenyouren2"},"content":"     * Constructs a TaskList with the given Storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"freddychenyouren2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"freddychenyouren2"},"content":"     * @param storage the storage from which the list of tasks is to be created.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"freddychenyouren2"},"content":"    public TaskList(Storage storage) {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"freddychenyouren2"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"freddychenyouren2"},"content":"        this.listOfTasks \u003d storage.listOfTasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"freddychenyouren2"},"content":"    protected void printHorizontalLine() {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"freddychenyouren2"},"content":"     * List out all tasks available for the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"freddychenyouren2"},"content":"    protected void listAllTasks() {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"freddychenyouren2"},"content":"        if (listOfTasks.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"freddychenyouren2"},"content":"            printHorizontalLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(\"    No tasks for now!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"freddychenyouren2"},"content":"            printHorizontalLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"freddychenyouren2"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"freddychenyouren2"},"content":"            printHorizontalLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(\"    Your current task list:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"freddychenyouren2"},"content":"            for (int i \u003d 0; i \u003c listOfTasks.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"freddychenyouren2"},"content":"                System.out.printf(\"     %d.%s\\n\", i + 1, listOfTasks.get(i).toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"freddychenyouren2"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"freddychenyouren2"},"content":"            printHorizontalLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"freddychenyouren2"},"content":"     * Delete a Task when given valid task index.","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"freddychenyouren2"},"content":"    public void deleteTask(String deleteInput)","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"freddychenyouren2"},"content":"            throws EmptyDescriptionException, IOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"freddychenyouren2"},"content":"        String[] words \u003d deleteInput.split(\"\\\\s+\"); // Split input by space, put into array","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"freddychenyouren2"},"content":"        //Check for valid length","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"freddychenyouren2"},"content":"        if (words.length \u003c\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"freddychenyouren2"},"content":"            throw new EmptyDescriptionException(\"Please provide the ask index to be deleted.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"freddychenyouren2"},"content":"        //Try parsing into integer to get deleteIndex","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"freddychenyouren2"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"freddychenyouren2"},"content":"            int deleteIndex \u003d Integer.parseInt(words[1]) - 1; // Potential Error cannot parse to integer","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"freddychenyouren2"},"content":"            printHorizontalLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"freddychenyouren2"},"content":"            if (deleteIndex \u003e\u003d 0 \u0026\u0026 deleteIndex \u003c listOfTasks.size()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"freddychenyouren2"},"content":"                Task removedTask \u003d listOfTasks.remove(deleteIndex); //Actual ask can be todo, deadline, or event","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"freddychenyouren2"},"content":"                System.out.println(\"     Noted. I\u0027ve removed this Task:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"freddychenyouren2"},"content":"                System.out.printf(\"       %s\\n\", removedTask.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"freddychenyouren2"},"content":"                System.out.printf(\"     Now you have %d task(s) in the list.\\n\", listOfTasks.size());","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"freddychenyouren2"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"freddychenyouren2"},"content":"                System.out.println(\"     OOPS!!! The task index is invalid.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"freddychenyouren2"},"content":"                System.out.printf(\"     You currently have %d task(s).\\n\", listOfTasks.size());","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"freddychenyouren2"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"freddychenyouren2"},"content":"            printHorizontalLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"freddychenyouren2"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"freddychenyouren2"},"content":"            printHorizontalLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(\"     OOPS!!! Please enter the index after \u0027delete\u0027 command.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(\"     For example: delete 5\");","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(\"     This will remove Task 5 from your Task List, assuming you have at least 5 tasks.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"freddychenyouren2"},"content":"            printHorizontalLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"freddychenyouren2"},"content":"        storage.clearAllData();","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"freddychenyouren2"},"content":"        storage.updateData();","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"freddychenyouren2"},"content":"     * Marks a given Task as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"freddychenyouren2"},"content":"     * Updates the list of tasks in the storage file.","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"freddychenyouren2"},"content":"     * Prints out an error message if index of the task given is out of range or invalid.","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"freddychenyouren2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"freddychenyouren2"},"content":"     * @param taskIndex the index of the Task to be marked as done.","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"freddychenyouren2"},"content":"     * @throws IOException if there is an issue with updating the data in the storage file.","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"freddychenyouren2"},"content":"    protected void markTask(int taskIndex) throws IOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"freddychenyouren2"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"freddychenyouren2"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d listOfTasks.size()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.printf(\"     Invalid Index of Task. You currently have %d Task(s)\\n\", listOfTasks.size());","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"freddychenyouren2"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"freddychenyouren2"},"content":"            Task task \u003d listOfTasks.get(taskIndex);","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"freddychenyouren2"},"content":"            task.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(\"     Nice! I\u0027ve marked this Task as done:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.printf(\"       [%s] %s\\n\", task.getStatusIcon(), task.description);","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"freddychenyouren2"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"freddychenyouren2"},"content":"        storage.clearAllData();","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"freddychenyouren2"},"content":"        storage.updateData();","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"freddychenyouren2"},"content":"     * Marks a given Task as NOT done.","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"freddychenyouren2"},"content":"     * Updates the list of tasks in the storage file.","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"freddychenyouren2"},"content":"     * Prints out an error message if index of the task given is out of range or invalid.","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"freddychenyouren2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"freddychenyouren2"},"content":"     * @param taskIndex the index of the Task to be marked as not done yet.","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"freddychenyouren2"},"content":"     * @throws IOException if there is an issue with updating the data in the storage file.","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"freddychenyouren2"},"content":"    protected void unmarkTask(int taskIndex) throws IOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"freddychenyouren2"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"freddychenyouren2"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d listOfTasks.size()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.printf(\"    Invalid Index of task. You currently have %d Task(s)\\n\", listOfTasks.size());","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"freddychenyouren2"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"freddychenyouren2"},"content":"            Task task \u003d listOfTasks.get(taskIndex);","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"freddychenyouren2"},"content":"            task.markAsNotDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.println(\"     OK, I\u0027ve marked this Task as not done yet:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"freddychenyouren2"},"content":"            System.out.printf(\"       [%s] %s\\n\", task.getStatusIcon(), task.description);","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"freddychenyouren2"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"freddychenyouren2"},"content":"        storage.clearAllData();","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"freddychenyouren2"},"content":"        storage.updateData();","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"freddychenyouren2"},"content":"     * Checks if the line representing task details saved in memory is valid.","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"freddychenyouren2"},"content":"     * This is used when we are loading the list of tasks from user\u0027s past data.","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"freddychenyouren2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"freddychenyouren2"},"content":"     * @param line The String representing one task that we are checking.","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"freddychenyouren2"},"content":"     * @return True if this line is a valid Task, False otherwise.","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"freddychenyouren2"},"content":"    protected static boolean isValidTaskLine(String line) {","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"freddychenyouren2"},"content":"        String[] tokens \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-08-30"},{"lineNumber":151,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":152,"author":{"gitId":"freddychenyouren2"},"content":"        if (tokens.length \u003e\u003d 3 \u0026\u0026 tokens.length \u003c\u003d 5) { // Valid number of segments: 3-5 (Todo-Event)","lastModifiedDate":"2023-08-30"},{"lineNumber":153,"author":{"gitId":"freddychenyouren2"},"content":"            String taskType \u003d tokens[0].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":154,"author":{"gitId":"freddychenyouren2"},"content":"            String completionStatus \u003d tokens[1].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":155,"author":{"gitId":"freddychenyouren2"},"content":"            String description \u003d tokens[2].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":157,"author":{"gitId":"freddychenyouren2"},"content":"            return taskType.matches(\"[TDE]\") \u0026\u0026 completionStatus.matches(\"[01]\") \u0026\u0026 !description.isEmpty(); // Line matches expected format","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":159,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"freddychenyouren2"},"content":"        return false; // Line is not valid","lastModifiedDate":"2023-08-30"},{"lineNumber":161,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":162,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":163,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"freddychenyouren2"},"content":"     * Checks if the date provided is a valid date and in the correct date format.","lastModifiedDate":"2023-08-31"},{"lineNumber":165,"author":{"gitId":"freddychenyouren2"},"content":"     * This is used during task creation and task loading from storage file.","lastModifiedDate":"2023-08-31"},{"lineNumber":166,"author":{"gitId":"freddychenyouren2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"freddychenyouren2"},"content":"     * @param testDate The Date from a task that we are checking","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"freddychenyouren2"},"content":"     * @return True if this Date is a valid Date with the correct date Format \"yyyy-MM-dd\", False otherwise.","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":170,"author":{"gitId":"freddychenyouren2"},"content":"    public static boolean isValidDate(String testDate) {","lastModifiedDate":"2023-08-30"},{"lineNumber":171,"author":{"gitId":"freddychenyouren2"},"content":"        SimpleDateFormat simpleDate \u003d new SimpleDateFormat(\"yyyy-MM-dd\");","lastModifiedDate":"2023-08-30"},{"lineNumber":172,"author":{"gitId":"freddychenyouren2"},"content":"        simpleDate.setLenient(false);","lastModifiedDate":"2023-08-30"},{"lineNumber":173,"author":{"gitId":"freddychenyouren2"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":174,"author":{"gitId":"freddychenyouren2"},"content":"            simpleDate.parse(testDate);","lastModifiedDate":"2023-08-30"},{"lineNumber":175,"author":{"gitId":"freddychenyouren2"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-08-30"},{"lineNumber":176,"author":{"gitId":"freddychenyouren2"},"content":"            return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":177,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":178,"author":{"gitId":"freddychenyouren2"},"content":"        return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":179,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":180,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":181,"author":{"gitId":"freddychenyouren2"},"content":"    // Find task","lastModifiedDate":"2023-09-01"},{"lineNumber":182,"author":{"gitId":"freddychenyouren2"},"content":"    // Get keyword from user. Use StringBuilder: use contains(), for loop all available tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":183,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":184,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":185,"author":{"gitId":"freddychenyouren2"},"content":"     * Finds all tasks that contain a given keyword.","lastModifiedDate":"2023-09-01"},{"lineNumber":186,"author":{"gitId":"freddychenyouren2"},"content":"     * ","lastModifiedDate":"2023-09-01"},{"lineNumber":187,"author":{"gitId":"freddychenyouren2"},"content":"     * @param matchingKeyword The keyword given by the user to find all tasks containing it.","lastModifiedDate":"2023-09-01"},{"lineNumber":188,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":189,"author":{"gitId":"freddychenyouren2"},"content":"    protected void findTask(String matchingKeyword) {","lastModifiedDate":"2023-09-01"},{"lineNumber":190,"author":{"gitId":"freddychenyouren2"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":191,"author":{"gitId":"freddychenyouren2"},"content":"            printHorizontalLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":192,"author":{"gitId":"freddychenyouren2"},"content":"            if (listOfTasks.isEmpty()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":193,"author":{"gitId":"freddychenyouren2"},"content":"                System.out.println(\"\\t You currently have no tasks so I can\u0027t find any matching tasks :/.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":194,"author":{"gitId":"freddychenyouren2"},"content":"                return;","lastModifiedDate":"2023-09-01"},{"lineNumber":195,"author":{"gitId":"freddychenyouren2"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":196,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":197,"author":{"gitId":"freddychenyouren2"},"content":"            int taskCount \u003d 0;","lastModifiedDate":"2023-09-01"},{"lineNumber":198,"author":{"gitId":"freddychenyouren2"},"content":"            StringBuilder matchingTasks \u003d new StringBuilder(String.format(","lastModifiedDate":"2023-09-01"},{"lineNumber":199,"author":{"gitId":"freddychenyouren2"},"content":"                    \"\\t Here are your tasks that contains \u0027%s\u0027:\", matchingKeyword));","lastModifiedDate":"2023-09-01"},{"lineNumber":200,"author":{"gitId":"freddychenyouren2"},"content":"            for (int i \u003d 0; i \u003c listOfTasks.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":201,"author":{"gitId":"freddychenyouren2"},"content":"                if (listOfTasks.get(i).getDescription().contains(matchingKeyword)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":202,"author":{"gitId":"freddychenyouren2"},"content":"                    matchingTasks.append(\"\\n\\t \").append(listOfTasks.get(i));","lastModifiedDate":"2023-09-01"},{"lineNumber":203,"author":{"gitId":"freddychenyouren2"},"content":"                    taskCount++;","lastModifiedDate":"2023-09-01"},{"lineNumber":204,"author":{"gitId":"freddychenyouren2"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":205,"author":{"gitId":"freddychenyouren2"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":206,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":207,"author":{"gitId":"freddychenyouren2"},"content":"            //Output matching tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":208,"author":{"gitId":"freddychenyouren2"},"content":"            if (taskCount \u003e 0) {","lastModifiedDate":"2023-09-01"},{"lineNumber":209,"author":{"gitId":"freddychenyouren2"},"content":"                String output \u003d matchingTasks.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":210,"author":{"gitId":"freddychenyouren2"},"content":"                System.out.println(output);","lastModifiedDate":"2023-09-01"},{"lineNumber":211,"author":{"gitId":"freddychenyouren2"},"content":"            } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":212,"author":{"gitId":"freddychenyouren2"},"content":"                String output \u003d String.format(\"\\t Hm there are no matching tasks with \u0027%s\u0027. \" +","lastModifiedDate":"2023-09-01"},{"lineNumber":213,"author":{"gitId":"freddychenyouren2"},"content":"                        \"Try with another keyword.\", matchingKeyword);","lastModifiedDate":"2023-09-01"},{"lineNumber":214,"author":{"gitId":"freddychenyouren2"},"content":"                System.out.println(output);","lastModifiedDate":"2023-09-01"},{"lineNumber":215,"author":{"gitId":"freddychenyouren2"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":216,"author":{"gitId":"freddychenyouren2"},"content":"        } finally {","lastModifiedDate":"2023-09-01"},{"lineNumber":217,"author":{"gitId":"freddychenyouren2"},"content":"            printHorizontalLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":218,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":219,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":220,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":221,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":222,"author":{"gitId":"freddychenyouren2"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"freddychenyouren2":222}},{"path":"src/main/java/duke/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"package duke.util;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":"// Test merge branch for A-Packages","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"freddychenyouren2"},"content":" * Represents a user interface for SeeWhyAre bot.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"freddychenyouren2"},"content":" *","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"freddychenyouren2"},"content":" * \u003cp\u003eCS2103T AY23/24 Semester 1","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"freddychenyouren2"},"content":" * Individual Project","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"freddychenyouren2"},"content":" * SeeWhyAre Bot","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"freddychenyouren2"},"content":" * 31 Aug 2023","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"freddychenyouren2"},"content":" *","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"freddychenyouren2"},"content":" * @author Freddy Chen You Ren","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"freddychenyouren2"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"freddychenyouren2"},"content":"public class Ui {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"freddychenyouren2"},"content":"    public String HORIZONTAL_LINE \u003d \"    ____________________________________________________________\"; //60 underscores.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"freddychenyouren2"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"freddychenyouren2"},"content":"     * Constructs a new Ui instance and initializes the scanner for user input.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"freddychenyouren2"},"content":"    public Ui() {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"freddychenyouren2"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"freddychenyouren2"},"content":"    protected void printHorizontalLine() {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"freddychenyouren2"},"content":"     * Displays a greeting message to the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"freddychenyouren2"},"content":"    public void greet() {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(\"\\nStarting SeeWhyAre Bot...\");","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"freddychenyouren2"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(\"    Hello! I\u0027m SeeWhyAre Bot!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(\"    What can I do for you?\");","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"freddychenyouren2"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"freddychenyouren2"},"content":"     * Retrieves user input from the console.","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"freddychenyouren2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"freddychenyouren2"},"content":"     * @return The user\u0027s input command.","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"freddychenyouren2"},"content":"    public String getUserInput() {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(\"Enter your Command:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"freddychenyouren2"},"content":"        return this.scanner.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"freddychenyouren2"},"content":"     * Displays a farewell message to the user and closes the scanner.","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"freddychenyouren2"},"content":"    protected void farewell() {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"freddychenyouren2"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(\"    You are closing the SeeWhyAre chat bot.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"freddychenyouren2"},"content":"        System.out.println(\"    Bye bye. Please use me again soon!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"freddychenyouren2"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"freddychenyouren2"},"content":"        scanner.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"freddychenyouren2"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"freddychenyouren2":63}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"public class DukeTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"freddychenyouren2":2}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"freddychenyouren2"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"freddychenyouren2"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"freddychenyouren2"},"content":"    void testGetDueDate() {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"freddychenyouren2"},"content":"        Deadline deadline \u003d new Deadline(\"test deadline getting date\", LocalDate.parse(\"2023-08-30\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"freddychenyouren2"},"content":"        assertEquals(deadline.getDueDate(), LocalDate.parse(\"2023-08-30\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"freddychenyouren2"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"freddychenyouren2"},"content":"    void testToString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"freddychenyouren2"},"content":"        Deadline deadline \u003d  new Deadline(\"test deadline\", LocalDate.parse(\"2023-08-30\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"freddychenyouren2"},"content":"        assertEquals(deadline.toString(), \"[D][ ] test deadline (by: Aug 30 2023)\");","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"freddychenyouren2"},"content":"//    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"freddychenyouren2"},"content":"//    void handleDeadlineTask_excessInputs_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"freddychenyouren2"},"content":"//","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"freddychenyouren2"},"content":"//    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"freddychenyouren2"},"content":"//    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"freddychenyouren2"},"content":"//    void handleDeadlineTask_invalidDateInput_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"freddychenyouren2"},"content":"//","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"freddychenyouren2"},"content":"//    }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"freddychenyouren2"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"freddychenyouren2":30}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":"public class EventTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"freddychenyouren2"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"freddychenyouren2"},"content":"    void testGetStartTime() {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"freddychenyouren2"},"content":"        Event event \u003d new Event(\"test event getting start time\", LocalDate.parse(\"2023-08-30\"), LocalDate.parse(\"2023-08-31\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"freddychenyouren2"},"content":"        assertEquals(event.getStartTime(), LocalDate.parse(\"2023-08-30\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"freddychenyouren2"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"freddychenyouren2"},"content":"    void testGetEndTime() {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"freddychenyouren2"},"content":"        Event event \u003d new Event(\"test event getting start time\", LocalDate.parse(\"2023-08-30\"), LocalDate.parse(\"2023-08-31\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"freddychenyouren2"},"content":"        assertEquals(event.getEndTime(), LocalDate.parse(\"2023-08-31\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"freddychenyouren2"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"freddychenyouren2"},"content":"    void testToString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"freddychenyouren2"},"content":"        Event event \u003d  new Event(\"test event\", LocalDate.parse(\"2023-08-30\"), LocalDate.parse(\"2023-08-31\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"freddychenyouren2"},"content":"        assertEquals(event.toString(), \"[E][ ] test event (from: Aug 30 2023 to: Aug 31 2023)\");","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"freddychenyouren2"},"content":"//    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"freddychenyouren2"},"content":"//    void handleEventTask_excessInputs_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"freddychenyouren2"},"content":"//","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"freddychenyouren2"},"content":"//    }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"freddychenyouren2"},"content":"//    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"freddychenyouren2"},"content":"//    void handleEventTask_invalidDateInput_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"freddychenyouren2"},"content":"//","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"freddychenyouren2"},"content":"//    }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"freddychenyouren2"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"freddychenyouren2":36}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"freddychenyouren2"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"freddychenyouren2"},"content":"public class TaskTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"freddychenyouren2"},"content":"    Task testTask \u003d new Task(\"Task Description\");","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"freddychenyouren2"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"freddychenyouren2"},"content":"    void testGetDescription() {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"freddychenyouren2"},"content":"        assertEquals(testTask.getDescription(), \"Task Description\");","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"freddychenyouren2"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"freddychenyouren2"},"content":"    void testToString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"freddychenyouren2"},"content":"        Task task \u003d new Task(\"To test description\");","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"freddychenyouren2"},"content":"        assertEquals(task.toString(), \"[ ] To test description\");","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"freddychenyouren2"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"freddychenyouren2"},"content":"    void testGetStatusIcon() {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"freddychenyouren2"},"content":"        assertEquals(testTask.getStatusIcon(), \" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"freddychenyouren2"},"content":"        testTask.markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"freddychenyouren2"},"content":"        assertEquals(testTask.getStatusIcon(), \"X\");","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"freddychenyouren2"},"content":"        testTask.markAsNotDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"freddychenyouren2"},"content":"        assertEquals(testTask.getStatusIcon(), \" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"freddychenyouren2"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"freddychenyouren2"},"content":"    void markAsDone_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"freddychenyouren2"},"content":"        Task task \u003d new Task(\"Second Task Description\");","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"freddychenyouren2"},"content":"        assertFalse(task.isDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"freddychenyouren2"},"content":"        task.markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"freddychenyouren2"},"content":"        assertTrue(task.isDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"freddychenyouren2"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"freddychenyouren2":40}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":"public class TodoTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"freddychenyouren2"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"freddychenyouren2"},"content":"    void testToString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"freddychenyouren2"},"content":"        Todo todo \u003d new Todo(\"test todo\");","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"freddychenyouren2"},"content":"        assertEquals(todo.getDescription(), \"test todo\");","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"freddychenyouren2"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"freddychenyouren2":13}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"T | 1 | borrow book | null | null","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"T | 0 | finish CS2103T ip ASAP BRUH | null | null","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"E | 0 | ip discussion | 2023-09-05 | 2023-09-06","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":"D | 0 | Deadline Task 2 | 2022-01-01 | null","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"freddychenyouren2":4}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"todo borrow book","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"deadline URGENT TASK wrong date format! /by Saturday","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"event NUSCO Welcome Tea /from 2022-08-31 /to 2022-08-31","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":"mark 3","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":"unmark 3","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"freddychenyouren2"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"freddychenyouren2"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"freddychenyouren2"},"content":"deadline erroneous deadline by now","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"freddychenyouren2"},"content":"event wrong event input from 6pm to 8pm","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"freddychenyouren2"},"content":"invalid input","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"freddychenyouren2"},"content":"todo finish CS2103T ip ASAP BRUH","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"freddychenyouren2"},"content":"event ip discussion /from 2023-09-05 /to 2023-09-06","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"freddychenyouren2"},"content":"deadline Deadline Task 2 /by 2022-01-01","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"freddychenyouren2"},"content":"dElEte non-Number and case-insensitive","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"freddychenyouren2"},"content":"delete 1234.98765","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"freddychenyouren2"},"content":"delete 2","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"freddychenyouren2"},"content":"find ip","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"freddychenyouren2"},"content":"liST","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"freddychenyouren2"},"content":"bYE","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"freddychenyouren2":21}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":"del ACTUAL.TXT","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"freddychenyouren2"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"freddychenyouren2"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT, use -Dfile.encoding\u003dUTF-8 to account for the OOPS icon","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"freddychenyouren2"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":17,"freddychenyouren2":4}}]
