[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"wujy28"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wujy28":1,"-":41}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wujy28"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wujy28"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"wujy28"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"wujy28"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"wujy28"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"wujy28"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"wujy28"},"content":" * Personal assistant chatbot that can help you manage a task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"wujy28"},"content":" * This is the main class of the program.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"wujy28"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"wujy28"},"content":" * @author Wu Jingya","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"wujy28"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"wujy28"},"content":"    private static String name \u003d \"Moira\";","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"wujy28"},"content":"    /** Whether the chatbot is currently accepting user input */","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"wujy28"},"content":"    private static boolean isReceivingInput \u003d false;","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"wujy28"},"content":"    private static TaskList tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"wujy28"},"content":"    private static Scanner scanner;","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"wujy28"},"content":"    private static Storage storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"wujy28"},"content":"    private static Ui ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"wujy28"},"content":"    private static Parser parser;","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"wujy28"},"content":"    private static String filePath \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"wujy28"},"content":"     * The main method.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"wujy28"},"content":"     * Initializes chatbot components and runs the main program.","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"wujy28"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"wujy28"},"content":"     * @param args The command line arguments.","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"wujy28"},"content":"     **/","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"wujy28"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"wujy28"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"wujy28"},"content":"        storage \u003d new Storage(tasks, filePath);","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"wujy28"},"content":"        ui \u003d new Ui(name);","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"wujy28"},"content":"        parser \u003d new Parser(ui);","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"wujy28"},"content":"        run();","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"wujy28"},"content":"    private static void run() {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"wujy28"},"content":"        isReceivingInput \u003d true;","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"wujy28"},"content":"        ui.playGreeting();","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"wujy28"},"content":"        while (isReceivingInput) {","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"wujy28"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"wujy28"},"content":"            parser.parse(userInput);","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"wujy28"},"content":"        exit();","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"wujy28"},"content":"        scanner.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"wujy28"},"content":"    private static void exit() {","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"wujy28"},"content":"        isReceivingInput \u003d false;","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"wujy28"},"content":"        storage.saveData();","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"wujy28"},"content":"        ui.playGoodbye();","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"wujy28"},"content":"     * Stops the chatbot from receiving user input.","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"wujy28"},"content":"    public static void stopReceivingInput() {","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"wujy28"},"content":"        isReceivingInput \u003d false;","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"wujy28"},"content":"     * Returns the TaskList stored by the chatbot.","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"wujy28"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"wujy28"},"content":"     * @return The TaskList stored by the chatbot.","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"wujy28"},"content":"     * @see TaskList","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"wujy28"},"content":"    public static TaskList getTaskList() {","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"wujy28"},"content":"        return tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"wujy28"},"content":"    //For testing purposes","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"wujy28"},"content":"     * Changes the path of the file storing TaskList data to the specified path.","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"wujy28"},"content":"     * This method should only be used for testing purposes.","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"wujy28"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"wujy28"},"content":"     * @param path The intended path of the data file as a string.","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"wujy28"},"content":"    public static void changeFilePath(String path) {","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"wujy28"},"content":"        filePath \u003d path;","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"wujy28"},"content":"    //For testing purposes","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"wujy28"},"content":"    public static boolean getIsReceivingInput() {","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"wujy28"},"content":"        return isReceivingInput;","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"wujy28"},"content":"    //For testing purposes","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"wujy28"},"content":"    public static void setIsReceivingInput(boolean isReceivingInput) {","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"wujy28"},"content":"        Duke.isReceivingInput \u003d isReceivingInput;","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"wujy28":93,"-":3}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wujy28"},"content":"package duke.parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wujy28"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"wujy28"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"wujy28"},"content":"import duke.tasks.DeadlineTask;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"wujy28"},"content":"import duke.tasks.EventTask;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"wujy28"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":"import duke.tasks.ToDoTask;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"wujy28"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"wujy28"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"wujy28"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"wujy28"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"wujy28"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"wujy28"},"content":" * Encapsulates the parser that parses through the user input received by the chatbot.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"wujy28"},"content":" * Handles the main logic of the chatbot, and communicates with the main class Duke and","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"wujy28"},"content":" * its UI component to respond to user commands.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"wujy28"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"wujy28"},"content":" * @author Wu Jingya","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"wujy28"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"wujy28"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"wujy28"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"wujy28"},"content":"     * Constructs a Parser object connected to the specified Ui object.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"wujy28"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"wujy28"},"content":"     * @param ui The Ui object the Parser is connected to.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"wujy28"},"content":"     * @see Ui","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"wujy28"},"content":"    public Parser(Ui ui) {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"wujy28"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"wujy28"},"content":"     * Parses through the given user input string.","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"wujy28"},"content":"     * Calls other class methods to respond to the user input accordingly.","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"wujy28"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"wujy28"},"content":"     * @param userInput The user input string.","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"wujy28"},"content":"    public void parse(String userInput) {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"wujy28"},"content":"        String[] words \u003d userInput.split(\" \");","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"wujy28"},"content":"        if (words \u003d\u003d null || words.length \u003c 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"wujy28"},"content":"            handleInvalidInput();","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"wujy28"},"content":"            return;","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"wujy28"},"content":"        String prefix \u003d words[0];","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"wujy28"},"content":"        switch (prefix) {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"wujy28"},"content":"        case \"bye\":","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"wujy28"},"content":"            handleExit(userInput);","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"wujy28"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"wujy28"},"content":"        case \"list\":","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"wujy28"},"content":"            handleList(userInput);","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"wujy28"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"wujy28"},"content":"        case \"unmark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"wujy28"},"content":"            //Fallthrough","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"wujy28"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"wujy28"},"content":"            handleMarkOrUnmark(userInput);","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"wujy28"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"wujy28"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"wujy28"},"content":"            handleAddToDoTask(userInput);","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"wujy28"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"wujy28"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"wujy28"},"content":"            handleAddDeadlineTask(userInput);","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"wujy28"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"wujy28"},"content":"        case \"event\":","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"wujy28"},"content":"            handleAddEventTask(userInput);","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"wujy28"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"wujy28"},"content":"        case \"delete\":","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"wujy28"},"content":"            handleDeleteTask(userInput);","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"wujy28"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"wujy28"},"content":"        case \"find\":","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"wujy28"},"content":"            handleFind(userInput);","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"wujy28"},"content":"            break;","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"wujy28"},"content":"        default:","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"wujy28"},"content":"            handleInvalidInput();","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"wujy28"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"wujy28"},"content":"    private void handleExit(String userInput) {","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"wujy28"},"content":"        String[] wordsInInput \u003d userInput.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"wujy28"},"content":"        if (wordsInInput.length \u003e 1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"wujy28"},"content":"            handleInvalidInput();","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"wujy28"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"wujy28"},"content":"            Duke.stopReceivingInput();","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"wujy28"},"content":"    private void handleList(String userInput) {","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"wujy28"},"content":"        String[] wordsInInput \u003d userInput.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"wujy28"},"content":"        if (wordsInInput.length \u003e 1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"wujy28"},"content":"            handleInvalidInput();","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"wujy28"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"wujy28"},"content":"            ui.printTaskList(Duke.getTaskList());","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"wujy28"},"content":"    private void handleMarkOrUnmark(String userInput) {","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"wujy28"},"content":"        String[] wordsInInput \u003d userInput.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"wujy28"},"content":"        if (wordsInInput.length \u003e 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"wujy28"},"content":"            handleInvalidInput();","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"wujy28"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"wujy28"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"wujy28"},"content":"                TaskList taskList \u003d Duke.getTaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"wujy28"},"content":"                int index \u003d Integer.parseInt(wordsInInput[1]) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"wujy28"},"content":"                if (wordsInInput[0].equals(\"mark\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"wujy28"},"content":"                    taskList.markTaskAsDone(index, true);","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"wujy28"},"content":"                    ui.playTaskComplete(taskList.getTaskAsString(index));","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"wujy28"},"content":"                } else if (wordsInInput[0].equals(\"unmark\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"wujy28"},"content":"                    taskList.markTaskAsDone(index, false);","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"wujy28"},"content":"                    ui.playTaskIncomplete(taskList.getTaskAsString(index));","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"wujy28"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"wujy28"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"wujy28"},"content":"                ui.playExceptionMessage(Ui.ExceptionMessage.MarkCommand_NumberFormatException);","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"wujy28"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"wujy28"},"content":"                ui.playExceptionMessage(Ui.ExceptionMessage.TaskList_IndexOutOfBoundsException);","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"wujy28"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"wujy28"},"content":"    private void handleAddToDoTask(String userInput) {","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"wujy28"},"content":"        if (!userInput.startsWith(\"todo \")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"wujy28"},"content":"            handleInvalidInput();","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"wujy28"},"content":"            return;","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"wujy28"},"content":"        String taskDescription \u003d userInput.substring(5);","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"wujy28"},"content":"        if (!taskDescription.isBlank()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"wujy28"},"content":"            ToDoTask newToDoTask \u003d new ToDoTask(taskDescription);","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"wujy28"},"content":"            handleAddTask(newToDoTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"wujy28"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"wujy28"},"content":"            ui.playExceptionMessage(Ui.ExceptionMessage.AddTask_MissingDescription);","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"wujy28"},"content":"    private void handleAddDeadlineTask(String userInput) {","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"wujy28"},"content":"        if (!userInput.startsWith(\"deadline \")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"wujy28"},"content":"            handleInvalidInput();","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"wujy28"},"content":"            return;","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"wujy28"},"content":"        String taskDescriptionAndDeadline \u003d userInput.substring(9);","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"wujy28"},"content":"        if (!taskDescriptionAndDeadline.isBlank()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"wujy28"},"content":"            String[] taskDescriptionSections \u003d taskDescriptionAndDeadline.split(\" /\");","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"wujy28"},"content":"            if (taskDescriptionSections.length !\u003d 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"wujy28"},"content":"                handleInvalidInput();","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"wujy28"},"content":"            } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"wujy28"},"content":"                String taskDescription \u003d taskDescriptionSections[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"wujy28"},"content":"                if (taskDescription.isBlank()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"wujy28"},"content":"                    ui.playExceptionMessage(Ui.ExceptionMessage.AddTask_MissingDescription);","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"wujy28"},"content":"                    return;","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"wujy28"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"wujy28"},"content":"                String taskDeadlineSegment \u003d taskDescriptionSections[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"wujy28"},"content":"                if (taskDeadlineSegment.startsWith(\"by \")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"wujy28"},"content":"                    String taskDeadline \u003d taskDeadlineSegment.substring(3);","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"wujy28"},"content":"                    if (!taskDeadline.isBlank()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"wujy28"},"content":"                        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"wujy28"},"content":"                            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"wujy28"},"content":"                            LocalDateTime deadline \u003d LocalDateTime.parse(taskDeadline, formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"wujy28"},"content":"                            DeadlineTask newDeadlineTask \u003d new DeadlineTask(taskDescription, deadline);","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"wujy28"},"content":"                            handleAddTask(newDeadlineTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"wujy28"},"content":"                        } catch (DateTimeParseException e){","lastModifiedDate":"2023-08-31"},{"lineNumber":165,"author":{"gitId":"wujy28"},"content":"                            ui.playExceptionMessage(Ui.ExceptionMessage.AddTask_DateTimeParseException);","lastModifiedDate":"2023-08-31"},{"lineNumber":166,"author":{"gitId":"wujy28"},"content":"                        }","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"wujy28"},"content":"                    } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"wujy28"},"content":"                        ui.playExceptionMessage(Ui.ExceptionMessage.AddTask_MissingDeadline);","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"wujy28"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":170,"author":{"gitId":"wujy28"},"content":"                } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":171,"author":{"gitId":"wujy28"},"content":"                    handleInvalidInput();","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"wujy28"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":173,"author":{"gitId":"wujy28"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":174,"author":{"gitId":"wujy28"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":175,"author":{"gitId":"wujy28"},"content":"            handleInvalidInput();","lastModifiedDate":"2023-08-31"},{"lineNumber":176,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":177,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":178,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":179,"author":{"gitId":"wujy28"},"content":"    private void handleAddEventTask(String userInput) {","lastModifiedDate":"2023-08-31"},{"lineNumber":180,"author":{"gitId":"wujy28"},"content":"        if (!userInput.startsWith(\"event \")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":181,"author":{"gitId":"wujy28"},"content":"            handleInvalidInput();","lastModifiedDate":"2023-08-31"},{"lineNumber":182,"author":{"gitId":"wujy28"},"content":"            return;","lastModifiedDate":"2023-08-31"},{"lineNumber":183,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":184,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":185,"author":{"gitId":"wujy28"},"content":"        String taskDescriptionAndDuration \u003d userInput.substring(6);","lastModifiedDate":"2023-08-31"},{"lineNumber":186,"author":{"gitId":"wujy28"},"content":"        if (!taskDescriptionAndDuration.isBlank()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":187,"author":{"gitId":"wujy28"},"content":"            String[] taskDescriptionSections \u003d taskDescriptionAndDuration.split(\" /\");","lastModifiedDate":"2023-08-31"},{"lineNumber":188,"author":{"gitId":"wujy28"},"content":"            if (taskDescriptionSections.length !\u003d 3) {","lastModifiedDate":"2023-08-31"},{"lineNumber":189,"author":{"gitId":"wujy28"},"content":"                handleInvalidInput();","lastModifiedDate":"2023-08-31"},{"lineNumber":190,"author":{"gitId":"wujy28"},"content":"            } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":191,"author":{"gitId":"wujy28"},"content":"                String taskDescription \u003d taskDescriptionSections[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":192,"author":{"gitId":"wujy28"},"content":"                if (taskDescription.isBlank()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":193,"author":{"gitId":"wujy28"},"content":"                    ui.playExceptionMessage(Ui.ExceptionMessage.AddTask_MissingDescription);","lastModifiedDate":"2023-08-31"},{"lineNumber":194,"author":{"gitId":"wujy28"},"content":"                    return;","lastModifiedDate":"2023-08-31"},{"lineNumber":195,"author":{"gitId":"wujy28"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":196,"author":{"gitId":"wujy28"},"content":"                String taskFromSegment \u003d taskDescriptionSections[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":197,"author":{"gitId":"wujy28"},"content":"                String taskToSegment \u003d taskDescriptionSections[2];","lastModifiedDate":"2023-08-31"},{"lineNumber":198,"author":{"gitId":"wujy28"},"content":"                if (taskFromSegment.startsWith(\"from \") \u0026\u0026 taskToSegment.startsWith(\"to \")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":199,"author":{"gitId":"wujy28"},"content":"                    String taskFrom \u003d taskFromSegment.substring(5);","lastModifiedDate":"2023-08-31"},{"lineNumber":200,"author":{"gitId":"wujy28"},"content":"                    String taskTo \u003d taskToSegment.substring(3);","lastModifiedDate":"2023-08-31"},{"lineNumber":201,"author":{"gitId":"wujy28"},"content":"                    if (!taskFrom.isBlank() \u0026\u0026 !taskTo.isBlank()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":202,"author":{"gitId":"wujy28"},"content":"                        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":203,"author":{"gitId":"wujy28"},"content":"                            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":204,"author":{"gitId":"wujy28"},"content":"                            LocalDateTime from \u003d LocalDateTime.parse(taskFrom, formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":205,"author":{"gitId":"wujy28"},"content":"                            LocalDateTime to \u003d LocalDateTime.parse(taskTo, formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":206,"author":{"gitId":"wujy28"},"content":"                            EventTask newEventTask \u003d new EventTask(taskDescription, from, to);","lastModifiedDate":"2023-08-31"},{"lineNumber":207,"author":{"gitId":"wujy28"},"content":"                            handleAddTask(newEventTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":208,"author":{"gitId":"wujy28"},"content":"                        } catch (DateTimeParseException e){","lastModifiedDate":"2023-08-31"},{"lineNumber":209,"author":{"gitId":"wujy28"},"content":"                            ui.playExceptionMessage(Ui.ExceptionMessage.AddTask_DateTimeParseException);","lastModifiedDate":"2023-08-31"},{"lineNumber":210,"author":{"gitId":"wujy28"},"content":"                        }","lastModifiedDate":"2023-08-31"},{"lineNumber":211,"author":{"gitId":"wujy28"},"content":"                    } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":212,"author":{"gitId":"wujy28"},"content":"                        ui.playExceptionMessage(Ui.ExceptionMessage.AddTask_MissingStartEndDate);","lastModifiedDate":"2023-08-31"},{"lineNumber":213,"author":{"gitId":"wujy28"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":214,"author":{"gitId":"wujy28"},"content":"                } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":215,"author":{"gitId":"wujy28"},"content":"                    handleInvalidInput();","lastModifiedDate":"2023-08-31"},{"lineNumber":216,"author":{"gitId":"wujy28"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":217,"author":{"gitId":"wujy28"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":218,"author":{"gitId":"wujy28"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":219,"author":{"gitId":"wujy28"},"content":"            handleInvalidInput();","lastModifiedDate":"2023-08-31"},{"lineNumber":220,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":221,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":222,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":223,"author":{"gitId":"wujy28"},"content":"    private void handleAddTask(Task newTask) {","lastModifiedDate":"2023-08-31"},{"lineNumber":224,"author":{"gitId":"wujy28"},"content":"        Duke.getTaskList().addTask(newTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":225,"author":{"gitId":"wujy28"},"content":"        ui.playAddTask(newTask.toString(), Duke.getTaskList().getTaskCount());","lastModifiedDate":"2023-08-31"},{"lineNumber":226,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":227,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":228,"author":{"gitId":"wujy28"},"content":"    private void handleDeleteTask(String userInput) {","lastModifiedDate":"2023-08-31"},{"lineNumber":229,"author":{"gitId":"wujy28"},"content":"        String[] wordsInInput \u003d userInput.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":230,"author":{"gitId":"wujy28"},"content":"        if (wordsInInput.length \u003e 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":231,"author":{"gitId":"wujy28"},"content":"            handleInvalidInput();","lastModifiedDate":"2023-08-31"},{"lineNumber":232,"author":{"gitId":"wujy28"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":233,"author":{"gitId":"wujy28"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":234,"author":{"gitId":"wujy28"},"content":"                TaskList taskList \u003d Duke.getTaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":235,"author":{"gitId":"wujy28"},"content":"                int index \u003d Integer.parseInt(wordsInInput[1]) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":236,"author":{"gitId":"wujy28"},"content":"                if (wordsInInput[0].equals(\"delete\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":237,"author":{"gitId":"wujy28"},"content":"                    Task deletedTask \u003d taskList.getTask(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":238,"author":{"gitId":"wujy28"},"content":"                    taskList.removeTask(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":239,"author":{"gitId":"wujy28"},"content":"                    ui.playRemoveTask(deletedTask.toString(), taskList.getTaskCount());","lastModifiedDate":"2023-08-31"},{"lineNumber":240,"author":{"gitId":"wujy28"},"content":"                } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":241,"author":{"gitId":"wujy28"},"content":"                    handleInvalidInput();","lastModifiedDate":"2023-08-31"},{"lineNumber":242,"author":{"gitId":"wujy28"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":243,"author":{"gitId":"wujy28"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":244,"author":{"gitId":"wujy28"},"content":"                ui.playExceptionMessage(Ui.ExceptionMessage.DeleteCommand_NumberFormatException);","lastModifiedDate":"2023-08-31"},{"lineNumber":245,"author":{"gitId":"wujy28"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":246,"author":{"gitId":"wujy28"},"content":"                ui.playExceptionMessage(Ui.ExceptionMessage.TaskList_IndexOutOfBoundsException);","lastModifiedDate":"2023-08-31"},{"lineNumber":247,"author":{"gitId":"wujy28"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":248,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":249,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":250,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":251,"author":{"gitId":"wujy28"},"content":"    private void handleFind(String userInput) {","lastModifiedDate":"2023-09-02"},{"lineNumber":252,"author":{"gitId":"wujy28"},"content":"        String[] wordsInInput \u003d userInput.split(\" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":253,"author":{"gitId":"wujy28"},"content":"        if (wordsInInput.length !\u003d 2) {","lastModifiedDate":"2023-09-02"},{"lineNumber":254,"author":{"gitId":"wujy28"},"content":"            handleInvalidInput();","lastModifiedDate":"2023-09-02"},{"lineNumber":255,"author":{"gitId":"wujy28"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":256,"author":{"gitId":"wujy28"},"content":"            TaskList tasks \u003d Duke.getTaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":257,"author":{"gitId":"wujy28"},"content":"            TaskList matchingTasks \u003d tasks.findTasksByKeyword(wordsInInput[1]);","lastModifiedDate":"2023-09-02"},{"lineNumber":258,"author":{"gitId":"wujy28"},"content":"            ui.printKeywordSearchResults(matchingTasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":259,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":260,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":261,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":262,"author":{"gitId":"wujy28"},"content":"    private void handleInvalidInput() {","lastModifiedDate":"2023-08-31"},{"lineNumber":263,"author":{"gitId":"wujy28"},"content":"        ui.playExceptionMessage(Ui.ExceptionMessage.InvalidInput);","lastModifiedDate":"2023-08-31"},{"lineNumber":264,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":265,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"wujy28":265}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wujy28"},"content":"package duke.storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wujy28"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"wujy28"},"content":"import duke.tasks.DeadlineTask;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"wujy28"},"content":"import duke.tasks.EventTask;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"wujy28"},"content":"import duke.tasks.ToDoTask;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"wujy28"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"wujy28"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"wujy28"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"wujy28"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"wujy28"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"wujy28"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"wujy28"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"wujy28"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"wujy28"},"content":" * Encapsulates the storage system that handles the loading and saving of user data stored by the chatbot.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"wujy28"},"content":" * Handles the reading of data files and writing of saved data to hard drive to save the user\u0027s task list","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"wujy28"},"content":" * across sessions.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"wujy28"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"wujy28"},"content":" * @author Wu Jingya","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"wujy28"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"wujy28"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"wujy28"},"content":"    /** The TaskList to be saved and loaded into */","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"wujy28"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"wujy28"},"content":"    /** The string specifying the path of the text file to store the TaskList data */","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"wujy28"},"content":"    private String path;","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"wujy28"},"content":"     * Constructs a Storage object using the specified TaskList object and data file path.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"wujy28"},"content":"     * Initializes loading of data during object creation; in other words, this constructor","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"wujy28"},"content":"     * loads the TaskList data from the specified file during the construction of the object.","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"wujy28"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"wujy28"},"content":"     * @param taskList The TaskList to be saved and loaded.","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"wujy28"},"content":"     * @param path The file path as a string.","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"wujy28"},"content":"     * @see TaskList","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"wujy28"},"content":"    public Storage(TaskList taskList, String path) {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"wujy28"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"wujy28"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"wujy28"},"content":"        initialize();","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"wujy28"},"content":"    //For testing purposes only","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"wujy28"},"content":"     * Constructs a Storage object using the specified TaskList object.","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"wujy28"},"content":"     * This constructor does not initialize the loading of data from the file into the TaskList","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"wujy28"},"content":"     * during object creation. This constructor is to be used for testing purposes only.","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"wujy28"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"wujy28"},"content":"     * @param taskList The TaskList to be saved and loaded.","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"wujy28"},"content":"     * @see TaskList","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"wujy28"},"content":"    public Storage(TaskList taskList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"wujy28"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"wujy28"},"content":"        this.path \u003d \"\";","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"wujy28"},"content":"    private void initialize() {","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"wujy28"},"content":"        File savedData \u003d new File(path);","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"wujy28"},"content":"        if (savedData.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"wujy28"},"content":"            loadTasksFromFile(savedData, taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"wujy28"},"content":"     * Loads the TaskList data recorded in the specified file into the target TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"wujy28"},"content":"     * Shows an error message if the file cannot be found.","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"wujy28"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"wujy28"},"content":"     * @param file The File storing TaskList data.","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"wujy28"},"content":"     * @param taskList The TaskList object to be loaded into.","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"wujy28"},"content":"     * @see File","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"wujy28"},"content":"     * @see TaskList","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"wujy28"},"content":"    public void loadTasksFromFile(File file, TaskList taskList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"wujy28"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"wujy28"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"wujy28"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"wujy28"},"content":"                String taskData \u003d scanner.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"wujy28"},"content":"                String[] dataSegments \u003d taskData.split(\"[|]\");","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"wujy28"},"content":"                switch (dataSegments.length) {","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"wujy28"},"content":"                    case 3:","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"wujy28"},"content":"                        if (dataSegments[0].equals(\"T\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"wujy28"},"content":"                            String description \u003d dataSegments[2];","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"wujy28"},"content":"                            Boolean done \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"wujy28"},"content":"                            if (dataSegments[1].equals(\"1\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"wujy28"},"content":"                                done \u003d true;","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"wujy28"},"content":"                            } else if (!dataSegments[1].equals(\"0\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"wujy28"},"content":"                                System.out.println(\"Task formatting error: \" + taskData + \" not loaded\");","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"wujy28"},"content":"                                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"wujy28"},"content":"                            }","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"wujy28"},"content":"                            ToDoTask newToDo \u003d new ToDoTask(description, done);","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"wujy28"},"content":"                            taskList.addTask(newToDo);","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"wujy28"},"content":"                        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"wujy28"},"content":"                            System.out.println(\"Task formatting error: \" + taskData + \" not loaded\");","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"wujy28"},"content":"                        }","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"wujy28"},"content":"                        break;","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"wujy28"},"content":"                    case 4:","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"wujy28"},"content":"                        if (dataSegments[0].equals(\"D\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"wujy28"},"content":"                            String description \u003d dataSegments[2];","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"wujy28"},"content":"                            Boolean done \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"wujy28"},"content":"                            LocalDateTime by \u003d LocalDateTime.parse(dataSegments[3]);","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"wujy28"},"content":"                            if (dataSegments[1].equals(\"1\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"wujy28"},"content":"                                done \u003d true;","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"wujy28"},"content":"                            } else if (!dataSegments[1].equals(\"0\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"wujy28"},"content":"                                System.out.println(\"Task formatting error: \" + taskData + \" not loaded\");","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"wujy28"},"content":"                                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"wujy28"},"content":"                            }","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"wujy28"},"content":"                            DeadlineTask newDeadline \u003d new DeadlineTask(description, by, done);","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"wujy28"},"content":"                            taskList.addTask(newDeadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"wujy28"},"content":"                        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"wujy28"},"content":"                            System.out.println(\"Task formatting error: \" + taskData + \" not loaded\");","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"wujy28"},"content":"                        }","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"wujy28"},"content":"                        break;","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"wujy28"},"content":"                    case 5:","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"wujy28"},"content":"                        if (dataSegments[0].equals(\"E\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"wujy28"},"content":"                            String description \u003d dataSegments[2];","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"wujy28"},"content":"                            Boolean done \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"wujy28"},"content":"                            LocalDateTime from \u003d LocalDateTime.parse(dataSegments[3]);","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"wujy28"},"content":"                            LocalDateTime to \u003d LocalDateTime.parse(dataSegments[4]);","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"wujy28"},"content":"                            if (dataSegments[1].equals(\"1\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"wujy28"},"content":"                                done \u003d true;","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"wujy28"},"content":"                            } else if (!dataSegments[1].equals(\"0\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"wujy28"},"content":"                                System.out.println(\"Task formatting error: \" + taskData + \" not loaded\");","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"wujy28"},"content":"                                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"wujy28"},"content":"                            }","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"wujy28"},"content":"                            EventTask newEvent \u003d new EventTask(description, from, to, done);","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"wujy28"},"content":"                            taskList.addTask(newEvent);","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"wujy28"},"content":"                        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"wujy28"},"content":"                            System.out.println(\"Task formatting error: \" + taskData + \" not loaded\");","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"wujy28"},"content":"                        }","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"wujy28"},"content":"                        break;","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"wujy28"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"wujy28"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"wujy28"},"content":"            scanner.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"wujy28"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"wujy28"},"content":"            System.out.println(\"Error scanning file!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":141,"author":{"gitId":"wujy28"},"content":"     * Saves the TaskList stored by the Storage object into the text file specified by the path field.","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"wujy28"},"content":"     * Shows an error message if an error occurs when saving, and data will, as a result, not be saved.","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"wujy28"},"content":"    public void saveData() {","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"wujy28"},"content":"        /* Tasks are saved in the following format:","lastModifiedDate":"2023-09-02"},{"lineNumber":146,"author":{"gitId":"wujy28"},"content":"        {TaskType: T/D/E} | {Done: 0/1} | Description | from/by date | to date */","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"wujy28"},"content":"        File dataFolder \u003d new File(\"./data\");","lastModifiedDate":"2023-08-30"},{"lineNumber":148,"author":{"gitId":"wujy28"},"content":"        if (!dataFolder.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":149,"author":{"gitId":"wujy28"},"content":"            if (dataFolder.mkdir()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"wujy28"},"content":"                // System.out.println(\"Data folder created successfully!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":151,"author":{"gitId":"wujy28"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":152,"author":{"gitId":"wujy28"},"content":"                System.out.println(\"Error creating data folder... Tasks not saved.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":153,"author":{"gitId":"wujy28"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":154,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":155,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"wujy28"},"content":"        File savedData \u003d new File(path);","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"wujy28"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"wujy28"},"content":"            FileWriter writer \u003d new FileWriter(savedData, false);","lastModifiedDate":"2023-08-30"},{"lineNumber":159,"author":{"gitId":"wujy28"},"content":"            savedData.createNewFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"wujy28"},"content":"            writer.write(taskList.getTaskListData());","lastModifiedDate":"2023-08-30"},{"lineNumber":161,"author":{"gitId":"wujy28"},"content":"            writer.flush();","lastModifiedDate":"2023-08-30"},{"lineNumber":162,"author":{"gitId":"wujy28"},"content":"            writer.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":163,"author":{"gitId":"wujy28"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":164,"author":{"gitId":"wujy28"},"content":"            System.out.println(\"Error saving data... Tasks not saved.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":165,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":166,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":167,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":168,"author":{"gitId":"wujy28"},"content":"    //For testing purposes","lastModifiedDate":"2023-09-02"},{"lineNumber":169,"author":{"gitId":"wujy28"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":170,"author":{"gitId":"wujy28"},"content":"        return taskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":171,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":172,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"wujy28":172}},{"path":"src/main/java/duke/tasks/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wujy28"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wujy28"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"wujy28"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"wujy28"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"wujy28"},"content":" * Encapsulates a task with a deadline.","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":" * Inherits from Task class.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"wujy28"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"wujy28"},"content":" * @author Wu Jingya","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"wujy28"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"wujy28"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"wujy28"},"content":"    private LocalDateTime by;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"wujy28"},"content":"     * Constructs a DeadlineTask object with the specified description and deadline.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"wujy28"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"wujy28"},"content":"     * @param description The task\u0027s description.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"wujy28"},"content":"     * @param by The task\u0027s deadline.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"wujy28"},"content":"    public DeadlineTask(String description, LocalDateTime by) {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"wujy28"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"wujy28"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"wujy28"},"content":"     * Constructs a DeadlineTask object with the specified description, deadline and completion status.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"wujy28"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"wujy28"},"content":"     * @param description The task\u0027s description.","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"wujy28"},"content":"     * @param by The task\u0027s deadline.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"wujy28"},"content":"     * @param done Whether the task is completed.","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"wujy28"},"content":"    public DeadlineTask(String description, LocalDateTime by, Boolean done) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"wujy28"},"content":"        super(description, done);","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"wujy28"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"wujy28"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"wujy28"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"wujy28"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\")) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"wujy28"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"wujy28"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"wujy28"},"content":"    public String toData() {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"wujy28"},"content":"        return \"D|\" + super.toData() + \"|\" + by;","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"wujy28"},"content":"    //For testing purposes only","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"wujy28"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"wujy28"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"wujy28"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"wujy28"},"content":"            return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"wujy28"},"content":"        if (obj instanceof DeadlineTask) {","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"wujy28"},"content":"            return super.equals(obj) \u0026\u0026","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"wujy28"},"content":"                    ((DeadlineTask) obj).by.equals(this.by);","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"wujy28"},"content":"        return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"wujy28":63}},{"path":"src/main/java/duke/tasks/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wujy28"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wujy28"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"wujy28"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"wujy28"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"wujy28"},"content":" * Encapsulates an event with a start and end date and time.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":" * Inherits from Task class.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"wujy28"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"wujy28"},"content":" * @author Wu Jingya","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"wujy28"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"wujy28"},"content":"public class EventTask extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"wujy28"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"wujy28"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"wujy28"},"content":"     * Constructs an EventTask with the specified description and start and end date and time.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"wujy28"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"wujy28"},"content":"     * @param description The task\u0027s description.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"wujy28"},"content":"     * @param from The task\u0027s starting date and time.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"wujy28"},"content":"     * @param to The task\u0027s ending date and time.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"wujy28"},"content":"    public EventTask(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"wujy28"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"wujy28"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"wujy28"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"wujy28"},"content":"     * Constructs an EventTask with the specified description, start and end date and time and completion status.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"wujy28"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"wujy28"},"content":"     * @param description The task\u0027s description.","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"wujy28"},"content":"     * @param from The task\u0027s starting date and time.","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"wujy28"},"content":"     * @param to The task\u0027s ending date and time.","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"wujy28"},"content":"     * @param done Whether the task is completed.","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"wujy28"},"content":"    public EventTask(String description, LocalDateTime from, LocalDateTime to, Boolean done) {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"wujy28"},"content":"        super(description, done);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"wujy28"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"wujy28"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"wujy28"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"wujy28"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"wujy28"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\")) ","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"wujy28"},"content":"                + \" \" + \"to: \" + to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\")) + \")\";","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"wujy28"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"wujy28"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"wujy28"},"content":"    public String toData() {","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"wujy28"},"content":"        return \"E|\" + super.toData() + \"|\" + from + \"|\" + to;","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"wujy28"},"content":"    //For testing purposes only","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"wujy28"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"wujy28"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"wujy28"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"wujy28"},"content":"            return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"wujy28"},"content":"        if (obj instanceof EventTask) {","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"wujy28"},"content":"            return super.equals(obj) \u0026\u0026","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"wujy28"},"content":"                    ((EventTask) obj).from.equals(this.from) \u0026\u0026","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"wujy28"},"content":"                    ((EventTask) obj).to.equals(this.to);","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"wujy28"},"content":"        return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"wujy28":70}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wujy28"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wujy28"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"wujy28"},"content":" * Encapsulates a task to be stored in the task list of the Duke chatbot.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"wujy28"},"content":" * This is an abstract class meant to be inherited by concrete subclasses,","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"wujy28"},"content":" * e.g. ToDoTask, DeadlineTask, and EventTask.","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"wujy28"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":" * @author Wu Jingya","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"wujy28"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"wujy28"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"wujy28"},"content":"    private String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"wujy28"},"content":"    private boolean done;","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"wujy28"},"content":"     * Constructs a Task object with the specified description.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"wujy28"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"wujy28"},"content":"     * @param description The task\u0027s description.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"wujy28"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"wujy28"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"wujy28"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"wujy28"},"content":"     * Constructs a Task object with the specified description and completion status.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"wujy28"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"wujy28"},"content":"     * @param description The task\u0027s description.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"wujy28"},"content":"     * @param done Whether the task is completed.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"wujy28"},"content":"    public Task(String description, Boolean done) {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"wujy28"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"wujy28"},"content":"        this.done \u003d done;","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"wujy28"},"content":"     * Marks or unmarks the task as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"wujy28"},"content":"     * Marks the task as done if the specified boolean is true, and unmarks the task as done if otherwise.","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"wujy28"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"wujy28"},"content":"     * @param done Whether the task has been completed.","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"wujy28"},"content":"    public void markTaskCompleted(boolean done) {","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"wujy28"},"content":"        this.done \u003d done;","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"wujy28"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"wujy28"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"wujy28"},"content":"        String checkbox \u003d \"\";","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"wujy28"},"content":"        if (this.done) {","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"wujy28"},"content":"            checkbox \u003d \"[X]\";","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"wujy28"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"wujy28"},"content":"            checkbox \u003d \"[ ]\";","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"wujy28"},"content":"        return checkbox + \" \" + this.description;","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"wujy28"},"content":"     * Returns the string representation of the task\u0027s data to be saved into a text file.","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"wujy28"},"content":"     * This formatting is consistent and understood by the chatbot\u0027s Storage component in charge","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"wujy28"},"content":"     * of reading and writing all the tasks\u0027 data to hard drive.","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"wujy28"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"wujy28"},"content":"     * @return The string representation of the task\u0027s data.","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"wujy28"},"content":"    public String toData() {","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"wujy28"},"content":"        if (done) {","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"wujy28"},"content":"            return \"1|\" + this.description;","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"wujy28"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"wujy28"},"content":"            return \"0|\" + this.description;","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"wujy28"},"content":"    //For testing purposes only","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"wujy28"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"wujy28"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"wujy28"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"wujy28"},"content":"            return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"wujy28"},"content":"        if (obj instanceof Task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"wujy28"},"content":"            return ((Task) obj).description.equals(this.description) \u0026\u0026 ((Task) obj).done \u003d\u003d this.done;","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"wujy28"},"content":"        return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"wujy28"},"content":"     * Checks whether the Task\u0027s description contains the specified keyword.","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"wujy28"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"wujy28"},"content":"     * @param keyword The keyword.","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"wujy28"},"content":"     * @return Whether the Task\u0027s description contains the keyword.","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"wujy28"},"content":"    public boolean containsWord(String keyword) {","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"wujy28"},"content":"        String[] words \u003d this.description.split(\" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"wujy28"},"content":"        for (String word : words) {","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"wujy28"},"content":"            if (word.equalsIgnoreCase(keyword)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"wujy28"},"content":"                return true;","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"wujy28"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"wujy28"},"content":"        return false;","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"wujy28":98}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wujy28"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wujy28"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"wujy28"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"wujy28"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"wujy28"},"content":" * Encapsulates a task list to be managed by the chatbot.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":" * Utilizes an ArrayList to store the Tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"wujy28"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"wujy28"},"content":" * @author Wu Jingya","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"wujy28"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"wujy28"},"content":"public class TaskList {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"wujy28"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"wujy28"},"content":"     * Creates an empty TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"wujy28"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"wujy28"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"wujy28"},"content":"     * Returns the string representation of the Task at the specified index in the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"wujy28"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"wujy28"},"content":"     * @param index The index of the Task in the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"wujy28"},"content":"     * @return The string representation of the Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"wujy28"},"content":"    public String getTaskAsString(int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"wujy28"},"content":"        return tasks.get(index).toString();","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"wujy28"},"content":"     * Prints the entire TaskList to console as a numbered list.","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"wujy28"},"content":"    public void printTasksAsList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"wujy28"},"content":"        int index \u003d 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"wujy28"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"wujy28"},"content":"            System.out.println(index + \".\" + task.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"wujy28"},"content":"            index++;","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"wujy28"},"content":"     * Adds the specified Task to the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"wujy28"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"wujy28"},"content":"     * @param newTask The Task to be added.","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"wujy28"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"wujy28"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"wujy28"},"content":"     * Removes the Task at the specified index from the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"wujy28"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"wujy28"},"content":"     * @param index The index of the Task to be removed.","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"wujy28"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"wujy28"},"content":"        tasks.remove(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"wujy28"},"content":"     * Returns the Task at the specified index in the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"wujy28"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"wujy28"},"content":"     * @param index The index of the Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"wujy28"},"content":"     * @return The Task at the specified index.","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"wujy28"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"wujy28"},"content":"        return tasks.get(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"wujy28"},"content":"     * Returns the total number of Tasks in the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"wujy28"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"wujy28"},"content":"     * @return The size of the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"wujy28"},"content":"    public int getTaskCount() {","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"wujy28"},"content":"        return tasks.size();","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"wujy28"},"content":"     * Marks or unmarks the Task at the specified index as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"wujy28"},"content":"     * Marks the Task as done if the argument done is true, and unmarks the Task as done if otherwise.","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"wujy28"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"wujy28"},"content":"     * @param index The index of the Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"wujy28"},"content":"     * @param done Whether the Task has been completed.","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"wujy28"},"content":"    public void markTaskAsDone(int index, boolean done) {","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"wujy28"},"content":"        getTask(index).markTaskCompleted(done);","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"wujy28"},"content":"     * Returns the string representation of the data of all the Tasks in the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"wujy28"},"content":"     * This string contains all the data that is written to hard drive when the TaskList","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"wujy28"},"content":"     * is saved.","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"wujy28"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"wujy28"},"content":"     * @return The string representation of the TaskList data.","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"wujy28"},"content":"    public String getTaskListData() {","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"wujy28"},"content":"        String data \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"wujy28"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"wujy28"},"content":"            data \u003d data.concat(task.toData() + \"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"wujy28"},"content":"        return data;","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"wujy28"},"content":"     * Returns a TaskList only containing Tasks whose descriptions contain the specified keyword.","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"wujy28"},"content":"     * Search ignores the case of the keyword.","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"wujy28"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"wujy28"},"content":"     * @param keyword The keyword.","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"wujy28"},"content":"     * @return A TaskList containing Tasks with the keyword.","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"wujy28"},"content":"    public TaskList findTasksByKeyword(String keyword) {","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"wujy28"},"content":"        TaskList output \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"wujy28"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"wujy28"},"content":"            if (task.containsWord(keyword)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"wujy28"},"content":"                output.addTask(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"wujy28"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"wujy28"},"content":"        return output;","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"wujy28":122}},{"path":"src/main/java/duke/tasks/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wujy28"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wujy28"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"wujy28"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"wujy28"},"content":" * Encapsulates a task without any time/date attached.","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"wujy28"},"content":" * Inherits from Task class.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"wujy28"},"content":" * @author Wu Jingya","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"wujy28"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"wujy28"},"content":"public class ToDoTask extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"wujy28"},"content":"     * Constructs a ToDoTask with the specified description.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"wujy28"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"wujy28"},"content":"     * @param description The task\u0027s description.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"wujy28"},"content":"    public ToDoTask(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"wujy28"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"wujy28"},"content":"     * Constructs a ToDoTask with the specified description and completion status.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"wujy28"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"wujy28"},"content":"     * @param description The task\u0027s description.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"wujy28"},"content":"     * @param done Whether the task is completed.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"wujy28"},"content":"    public ToDoTask(String description, Boolean done) {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"wujy28"},"content":"        super(description, done);","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"wujy28"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"wujy28"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"wujy28"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"wujy28"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"wujy28"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"wujy28"},"content":"    public String toData() {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"wujy28"},"content":"        return \"T|\" + super.toData();","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"wujy28"},"content":"    //For testing purposes only","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"wujy28"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"wujy28"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"wujy28"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"wujy28"},"content":"            return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"wujy28"},"content":"        if (obj instanceof ToDoTask) {","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"wujy28"},"content":"            return super.equals(((ToDoTask) obj));","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"wujy28"},"content":"        return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"wujy28":56}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wujy28"},"content":"package duke.ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wujy28"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"wujy28"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"wujy28"},"content":" * Encapsulates the user interface of the chatbot.","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"wujy28"},"content":" * This class is mainly responsible for the printing of messages and responses to the console","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":" * according to the user\u0027s input. What is printed (i.e. the logic behind determining what to","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"wujy28"},"content":" * print given a user input) is handled by the Parser class.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"wujy28"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"wujy28"},"content":" * @author Wu Jingya","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"wujy28"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"wujy28"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"wujy28"},"content":"    private String botName;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"wujy28"},"content":"    private final static String SPACER \u003d \"--------------------------------------------------------------------------\";","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"wujy28"},"content":"     * Constructs an Ui object with the specified chatbot name.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"wujy28"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"wujy28"},"content":"     * @param botName The chatbot\u0027s name.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"wujy28"},"content":"    public Ui(String botName) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"wujy28"},"content":"        this.botName \u003d botName;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"wujy28"},"content":"     * Plays the chatbot\u0027s greeting message.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"wujy28"},"content":"    public void playGreeting() {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"wujy28"},"content":"        System.out.println(SPACER);","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"wujy28"},"content":"        System.out.println(\"Howdy, I\u0027m \" + botName + \", your friendly personal assistant!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"wujy28"},"content":"        System.out.println(\"What can I do for you today?\");","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"wujy28"},"content":"        System.out.println(SPACER);","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"wujy28"},"content":"     * Plays the chatbot\u0027s goodbye message.","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"wujy28"},"content":"    public void playGoodbye() {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"wujy28"},"content":"        System.out.println(SPACER);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"wujy28"},"content":"        System.out.println(\"See ya later, alligator! I\u0027m waiting here if you need anything :\u003e\");","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"wujy28"},"content":"        System.out.println(SPACER);","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"wujy28"},"content":"     * Plays the message after a task has been marked as completed.","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"wujy28"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"wujy28"},"content":"     * @param taskDescription The description of the Task marked.","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"wujy28"},"content":"    public void playTaskComplete(String taskDescription) {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"wujy28"},"content":"        System.out.println(SPACER);","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"wujy28"},"content":"        System.out.println(\"Good job on completing this task! You are an awesome possum!!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"wujy28"},"content":"        System.out.println(taskDescription);","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"wujy28"},"content":"        System.out.println(SPACER);","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"wujy28"},"content":"     * Plays the message after a task has been unmarked as completed.","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"wujy28"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"wujy28"},"content":"     * @param taskDescription The description of the Task unmarked.","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"wujy28"},"content":"    public void playTaskIncomplete(String taskDescription) {","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"wujy28"},"content":"        System.out.println(SPACER);","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"wujy28"},"content":"        System.out.println(\"Man, you\u0027ve got this extra thing to do now...\");","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"wujy28"},"content":"        System.out.println(taskDescription);","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"wujy28"},"content":"        System.out.println(SPACER);","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"wujy28"},"content":"     * Plays the message after a task has been removed from the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"wujy28"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"wujy28"},"content":"     * @param taskDescription The description of the Task removed.","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"wujy28"},"content":"     * @param taskCount The total number of Tasks in the TaskList after removal.","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"wujy28"},"content":"    public void playRemoveTask(String taskDescription, int taskCount) {","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"wujy28"},"content":"        System.out.println(SPACER);","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"wujy28"},"content":"        System.out.println(\"Guess you\u0027ve got one less thing to do now.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"wujy28"},"content":"        System.out.println(taskDescription);","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"wujy28"},"content":"        System.out.println(\"Get going! You have \" + taskCount + \" tasks on record!!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"wujy28"},"content":"        System.out.println(SPACER);","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"wujy28"},"content":"     * Plays the message after a task has been added to the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"wujy28"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"wujy28"},"content":"     * @param taskDescription The description of the Task added.","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"wujy28"},"content":"     * @param taskCount The total number of Tasks in the TaskList after addition.","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"wujy28"},"content":"    public void playAddTask(String taskDescription, int taskCount) {","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"wujy28"},"content":"        System.out.println(SPACER);","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"wujy28"},"content":"        System.out.println(\"Okay, so here is the new thing to keep you occupied:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"wujy28"},"content":"        System.out.println(taskDescription);","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"wujy28"},"content":"        System.out.println(\"Get going! You have \" + taskCount + \" tasks on record!!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"wujy28"},"content":"        System.out.println(SPACER);","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"wujy28"},"content":"     * Plays a message and prints the specified TaskList as a numbered list.","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"wujy28"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"wujy28"},"content":"     * @param taskList The TaskList to be printed.","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"wujy28"},"content":"    public void printTaskList(TaskList taskList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"wujy28"},"content":"        System.out.println(SPACER);","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"wujy28"},"content":"        System.out.println(\"Hey buddy, here\u0027s the stuff you need to do:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"wujy28"},"content":"        taskList.printTasksAsList();","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"wujy28"},"content":"        System.out.println(SPACER);","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"wujy28"},"content":"     * Plays a message and prints the specified task list of search results from find to console.","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"wujy28"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"wujy28"},"content":"     * @param searchResults The TaskList containing the search results.","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"wujy28"},"content":"    public void printKeywordSearchResults(TaskList searchResults) {","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"wujy28"},"content":"        System.out.println(SPACER);","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"wujy28"},"content":"        System.out.println(\"Alright buddy, here are the matching tasks I dug up:\");","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"wujy28"},"content":"        searchResults.printTasksAsList();","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"wujy28"},"content":"        System.out.println(SPACER);","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"wujy28"},"content":"     * Plays an error message with the specified exception message.","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"wujy28"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"wujy28"},"content":"     * @param exceptionMessage The ExceptionMessage to be shown.","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"wujy28"},"content":"    public void playExceptionMessage(ExceptionMessage exceptionMessage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"wujy28"},"content":"        System.out.println(SPACER);","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"wujy28"},"content":"        System.out.println(exceptionMessage.message);","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"wujy28"},"content":"        System.out.println(SPACER);","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"wujy28"},"content":"    public enum ExceptionMessage {","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"wujy28"},"content":"        MarkCommand_NumberFormatException(","lastModifiedDate":"2023-09-02"},{"lineNumber":135,"author":{"gitId":"wujy28"},"content":"                \"HOLD UP! Invalid input for mark/unmark command. Input must be a positive non-zero integer.\"),","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"wujy28"},"content":"        DeleteCommand_NumberFormatException(","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"wujy28"},"content":"                \"HOLD UP! Invalid input for delete command. Input must be a positive non-zero integer.\"),","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"wujy28"},"content":"        TaskList_IndexOutOfBoundsException(","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"wujy28"},"content":"                \"HOLD UP! There is no such task in your list!\"),","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"wujy28"},"content":"        AddTask_MissingDescription(","lastModifiedDate":"2023-09-02"},{"lineNumber":141,"author":{"gitId":"wujy28"},"content":"                \"HOLD UP! So... what is this task about??\"),","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"wujy28"},"content":"        AddTask_DateTimeParseException(","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"wujy28"},"content":"                \"HOLD UP! You are not formatting your dates right! Use \\\"yyyy-MM-dd HH:mm\\\" \u003e:(\"),","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"wujy28"},"content":"        AddTask_MissingDeadline(","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"wujy28"},"content":"                \"HOLD UP! C\u0027mon, what\u0027s the deadline?\"),","lastModifiedDate":"2023-09-02"},{"lineNumber":146,"author":{"gitId":"wujy28"},"content":"        AddTask_MissingStartEndDate(","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"wujy28"},"content":"                \"HOLD UP! C\u0027mon, when does it start and end?\"),","lastModifiedDate":"2023-09-02"},{"lineNumber":148,"author":{"gitId":"wujy28"},"content":"        InvalidInput(","lastModifiedDate":"2023-09-02"},{"lineNumber":149,"author":{"gitId":"wujy28"},"content":"                \"HOLD UP! What on earth do you mean??\");","lastModifiedDate":"2023-09-02"},{"lineNumber":150,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"wujy28"},"content":"        public String message;","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"wujy28"},"content":"        ExceptionMessage(String message) {","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"wujy28"},"content":"            this.message \u003d message;","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"wujy28":157}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wujy28"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wujy28"},"content":"public class DukeTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"wujy28":4}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wujy28"},"content":"package duke.parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wujy28"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"wujy28"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"wujy28"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"wujy28"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"wujy28"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"wujy28"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"wujy28"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"wujy28"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"wujy28"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"wujy28"},"content":"    private final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"wujy28"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"wujy28"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"wujy28"},"content":"    public void setUp() {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"wujy28"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"wujy28"},"content":"        Duke.changeFilePath(\"./data/duketest.txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"wujy28"},"content":"    @AfterEach","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"wujy28"},"content":"    public void tearDown() {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"wujy28"},"content":"        System.setOut(standardOut);","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"wujy28"},"content":"        Duke.changeFilePath(\"./data/duke.txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"wujy28"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"wujy28"},"content":"    public void parse_invalidInput_invalidInputMessageShown(){","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"wujy28"},"content":"        Parser parser \u003d new Parser(new Ui(\"Moira\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"wujy28"},"content":"        parser.parse(\" \");","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"wujy28"},"content":"        parser.parse(\"bleh\");","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"wujy28"},"content":"        parser.parse(\"sdaf sd asdd\");","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"wujy28"},"content":"        assertEquals(\"--------------------------------------------------------------------------\"","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"wujy28"},"content":"                + \"\\nHOLD UP! What on earth do you mean??\"","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"wujy28"},"content":"                + \"\\n--------------------------------------------------------------------------\"","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"wujy28"},"content":"                + \"\\n--------------------------------------------------------------------------\"","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"wujy28"},"content":"                + \"\\nHOLD UP! What on earth do you mean??\"","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"wujy28"},"content":"                + \"\\n--------------------------------------------------------------------------\"","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"wujy28"},"content":"                + \"\\n--------------------------------------------------------------------------\"","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"wujy28"},"content":"                + \"\\nHOLD UP! What on earth do you mean??\"","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"wujy28"},"content":"                + \"\\n--------------------------------------------------------------------------\",","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"wujy28"},"content":"                outputStreamCaptor.toString().trim());","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"wujy28"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"wujy28"},"content":"    public void parse_byeCommandVariations_isReceivingInputChangeAccordingly(){","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"wujy28"},"content":"        Parser parser \u003d new Parser(new Ui(\"Moira\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"wujy28"},"content":"        Duke.setIsReceivingInput(true);","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"wujy28"},"content":"        parser.parse(\"bye s\");","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"wujy28"},"content":"        assertEquals(true, Duke.getIsReceivingInput());","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"wujy28"},"content":"        parser.parse(\"by\");","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"wujy28"},"content":"        assertEquals(true, Duke.getIsReceivingInput());","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"wujy28"},"content":"        parser.parse(\"bye \");","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"wujy28"},"content":"        assertEquals(false, Duke.getIsReceivingInput());","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"wujy28":60}},{"path":"src/test/java/duke/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wujy28"},"content":"package duke.storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wujy28"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"wujy28"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"wujy28"},"content":"import duke.tasks.DeadlineTask;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"wujy28"},"content":"import duke.tasks.EventTask;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"wujy28"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":"import duke.tasks.ToDoTask;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"wujy28"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"wujy28"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"wujy28"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"wujy28"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"wujy28"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"wujy28"},"content":"import java.io.File;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"wujy28"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"wujy28"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"wujy28"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"wujy28"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"wujy28"},"content":"public class StorageTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"wujy28"},"content":"    private final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"wujy28"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"wujy28"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"wujy28"},"content":"    public void setUp() {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"wujy28"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"wujy28"},"content":"    @AfterEach","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"wujy28"},"content":"    public void tearDown() {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"wujy28"},"content":"        System.setOut(standardOut);","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"wujy28"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"wujy28"},"content":"    public void loadTasksFromFile_fileNotFound_errorMessageShown(){","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"wujy28"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"wujy28"},"content":"        Storage storage \u003d new Storage(taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"wujy28"},"content":"        storage.loadTasksFromFile(new File(\"./data/storage.txt\"), taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"wujy28"},"content":"        assertEquals(\"Error scanning file!\", outputStreamCaptor.toString().trim());","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"wujy28"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"wujy28"},"content":"    public void loadTasksFromFile_fileWithMixedInput_tasksLoadedAccordingly(){","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"wujy28"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"wujy28"},"content":"        Storage storage \u003d new Storage(taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"wujy28"},"content":"        storage.loadTasksFromFile(new File(\"./data/storagetest.txt\"), taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"wujy28"},"content":"        TaskList expectedList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"wujy28"},"content":"        expectedList.addTask(new ToDoTask(\"read book\", true));","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"wujy28"},"content":"        LocalDateTime by \u003d LocalDateTime.parse(\"2023-01-01T18:00\");","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"wujy28"},"content":"        expectedList.addTask(new DeadlineTask(\"do homework\", by, false));","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"wujy28"},"content":"        LocalDateTime from \u003d LocalDateTime.parse(\"2023-01-01T12:00\");","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"wujy28"},"content":"        LocalDateTime to \u003d LocalDateTime.parse(\"2023-01-01T14:00\");","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"wujy28"},"content":"        expectedList.addTask(new EventTask(\"dance class\", from, to, false));","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"wujy28"},"content":"        assertEquals(expectedList.getTaskListData(), taskList.getTaskListData());","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"wujy28":61}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wujy28"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"wujy28"},"content":"todo   ","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"wujy28"},"content":"todo","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"wujy28"},"content":"todo bake bread","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"wujy28"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"wujy28"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"wujy28"},"content":"mark ssssss","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"wujy28"},"content":"deadline make kimchi","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"wujy28"},"content":"deadline make kimchi /by Wed","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"wujy28"},"content":"deadline    /by Tmr","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"wujy28"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"wujy28"},"content":"unmark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"wujy28"},"content":"event a /from b /to c","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"wujy28"},"content":"event a /from   /to c","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"wujy28"},"content":"event /from b /to c","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"wujy28"},"content":"event a /from b to c","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"wujy28"},"content":"event a /to b","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"wujy28"},"content":"event a /from /to","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"wujy28"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"wujy28"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"wujy28":21}}]
