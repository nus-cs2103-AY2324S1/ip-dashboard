[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"weeweh"},"content":"# BanterBot project template","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"weeweh"},"content":"3. After that, locate the `src/main/java/BanterBot.java` file, right-click it, and choose `Run BanterBot.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"weeweh":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"weeweh"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"weeweh"},"content":"checkstyle {","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"weeweh"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"weeweh"},"content":"}","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2023-08-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"weeweh":5,"-":42}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"weeweh"},"content":"T | 1 | test","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"weeweh"},"content":"T | 0 | test 2","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"weeweh"},"content":"D | 0 | test 3 | 2023-08-31","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"weeweh"},"content":"D | 0 | test 4 | 2023-08-31","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"weeweh":4}},{"path":"src/main/java/BanterBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weeweh"},"content":"import command.Command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"weeweh"},"content":"import exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"weeweh"},"content":"import helper.Parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"weeweh"},"content":"import helper.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"weeweh"},"content":"import helper.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"weeweh"},"content":"import task.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"weeweh"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"weeweh"},"content":" * Represents the ChatBot the User interacts with.","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"weeweh"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"weeweh"},"content":"public class BanterBot {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"weeweh"},"content":"    /** A Storage that handles the reading and writing of local files. */","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"weeweh"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"weeweh"},"content":"    /** The list of Tasks a User has. */","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"weeweh"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"weeweh"},"content":"    /** The User Interface the ChatBot uses to interact with the User. */","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"weeweh"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"weeweh"},"content":"     * Constructs a BanterBot with a filePath leading to the local .txt file.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"weeweh"},"content":"     * @param filePath","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"weeweh"},"content":"    public BanterBot(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"weeweh"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"weeweh"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"weeweh"},"content":"        tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"weeweh"},"content":"     * Starts the ChatBot and allows the User to start interacting with it.","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"weeweh"},"content":"    public void run() {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"weeweh"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"weeweh"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"weeweh"},"content":"        while (!isExit) {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"weeweh"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"weeweh"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"weeweh"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"weeweh"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"weeweh"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"weeweh"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"weeweh"},"content":"                ui.print(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"weeweh"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"weeweh"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":46,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"weeweh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"weeweh"},"content":"        new BanterBot(\"data/tasks.txt\").run();","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"weeweh"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"weeweh":49,"-":1}},{"path":"src/main/java/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weeweh"},"content":"package command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"weeweh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"weeweh"},"content":"import exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"weeweh"},"content":"import exception.InvalidCommandException;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"weeweh"},"content":"import helper.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"weeweh"},"content":"import helper.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"weeweh"},"content":"import task.Deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"weeweh"},"content":"import task.Event;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"weeweh"},"content":"import task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"weeweh"},"content":"import task.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"weeweh"},"content":"import task.ToDo;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"weeweh"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"weeweh"},"content":" * Represents a Command that specifically adds a Task to the TaskList.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"weeweh"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"weeweh"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"weeweh"},"content":"    /** Task to be parsed into Command. */","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"weeweh"},"content":"    private String task;","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"weeweh"},"content":"     * Constructs an AddCommand with a task and an index.","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"weeweh"},"content":"     * @param index","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"weeweh"},"content":"     * @param task","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"weeweh"},"content":"    public AddCommand(int index, String task) {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"weeweh"},"content":"        super(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"weeweh"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"weeweh"},"content":"     * Takes in the input given by the User and wraps the task details in","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"weeweh"},"content":"     * a Task Object.","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"weeweh"},"content":"     * @param input","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"weeweh"},"content":"     * @return a Task","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"weeweh"},"content":"     * @throws InvalidCommandException","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"weeweh"},"content":"    private Task parseTask(String input) throws InvalidCommandException {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"weeweh"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"weeweh"},"content":"            if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"weeweh"},"content":"                String description \u003d input.split(\"todo\", 2)[1].strip();","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"weeweh"},"content":"                ToDo todo \u003d new ToDo(description);","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"weeweh"},"content":"                return todo;","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"weeweh"},"content":"            } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"weeweh"},"content":"                String[] parts \u003d input.split(\"deadline\", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"weeweh"},"content":"                String description \u003d parts[1].split(\"/by\", 2)[0].strip();","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"weeweh"},"content":"                String by \u003d parts[1].split(\"/by\", 2)[1].strip();","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"weeweh"},"content":"                LocalDate date \u003d LocalDate.parse(by);","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"weeweh"},"content":"                Deadline deadline \u003d new Deadline(description, date);","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"weeweh"},"content":"                return deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"weeweh"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"weeweh"},"content":"                String[] parts \u003d input.split(\"event\", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"weeweh"},"content":"                String description \u003d parts[1].split(\"/from\", 2)[0].strip();","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"weeweh"},"content":"                String time \u003d parts[1].split(\"/from\", 2)[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"weeweh"},"content":"                String from \u003d time.split(\"/to\", 2)[0].strip();","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"weeweh"},"content":"                String to \u003d time.split(\"/to\", 2)[1].strip();","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"weeweh"},"content":"                Event event \u003d new Event(description, from, to);","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"weeweh"},"content":"                return event;","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"weeweh"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"weeweh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"weeweh"},"content":"            throw new InvalidCommandException(\"Wrong way to use the command bruv!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"weeweh"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"weeweh"},"content":"     * Add a Task to the TaskList and prints a message through the UI.","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"weeweh"},"content":"     * @param list","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"weeweh"},"content":"     * @param ui","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"weeweh"},"content":"     * @param storage","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"weeweh"},"content":"     * @throws DukeException","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"weeweh"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"weeweh"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"weeweh"},"content":"        String message \u003d list.add(parseTask(this.task));","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"weeweh"},"content":"        ui.print(message);","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"weeweh"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"weeweh":82}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weeweh"},"content":"package command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"weeweh"},"content":"import exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"weeweh"},"content":"import helper.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"weeweh"},"content":"import helper.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"weeweh"},"content":"import task.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"weeweh"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"weeweh"},"content":" * Represents a Command that the User has entered through the Command Line Interface.","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"weeweh"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"weeweh"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"weeweh"},"content":"    /** Index in the TaskList. Default is set to -1. */","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"weeweh"},"content":"    private int index \u003d -1;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"weeweh"},"content":"     * Constructs a Command with an Index.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"weeweh"},"content":"     * @param index","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"weeweh"},"content":"    protected Command(int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"weeweh"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"weeweh"},"content":"     * Returns if the Command is exiting the ChatBot.","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"weeweh"},"content":"     * @return False","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"weeweh"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"weeweh"},"content":"        return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"weeweh"},"content":"     * Returns the index given by the User to change in the TaskList.","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"weeweh"},"content":"     * @return index in TaskList","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"weeweh"},"content":"    public int getIndex() {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"weeweh"},"content":"        return this.index;","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"weeweh"},"content":"     * Executes the command demanded by the User through the Command Line Interface.","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"weeweh"},"content":"     * @param list","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"weeweh"},"content":"     * @param ui","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"weeweh"},"content":"     * @param storage","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"weeweh"},"content":"     * @throws DukeException","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"weeweh"},"content":"    public abstract void execute(TaskList list, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"weeweh"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"weeweh":47}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weeweh"},"content":"package command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"weeweh"},"content":"import exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"weeweh"},"content":"import helper.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"weeweh"},"content":"import helper.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"weeweh"},"content":"import task.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"weeweh"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"weeweh"},"content":" * Represents a Command that specifically deletes a Task in the TaskList.","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"weeweh"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"weeweh"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"weeweh"},"content":"    /** Command the user starts with to activate the DeleteCommand. */","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"weeweh"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"weeweh"},"content":"     * Constructs a DeleteCommand with an Index.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"weeweh"},"content":"     * @param index","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"weeweh"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"weeweh"},"content":"        super(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"weeweh"},"content":"     * Deletes the Task at the given Index in the TaskList.","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"weeweh"},"content":"     * Throws a DukeException if Index is incorrect.","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"weeweh"},"content":"     * @param list","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"weeweh"},"content":"     * @param ui","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"weeweh"},"content":"     * @param storage","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"weeweh"},"content":"     * @throws DukeException","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"weeweh"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"weeweh"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"weeweh"},"content":"        String message \u003d list.delete(this.getIndex());","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"weeweh"},"content":"        ui.print(message);","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"weeweh"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"weeweh":36}},{"path":"src/main/java/command/DueCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weeweh"},"content":"package command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"weeweh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"weeweh"},"content":"import helper.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"weeweh"},"content":"import helper.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"weeweh"},"content":"import task.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"weeweh"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"weeweh"},"content":" * Represents a Command specifically returns Tasks due on a LocalDate.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"weeweh"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"weeweh"},"content":"public class DueCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"weeweh"},"content":"    /** Command the user starts with to activate the DueCommand. */","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"weeweh"},"content":"    public static final String COMMAND_WORD \u003d \"due\";","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"weeweh"},"content":"    /** A LocalDate a Deadline is supposed to be due on. */","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"weeweh"},"content":"    private LocalDate dueDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"weeweh"},"content":"     * Constructs a DueCommand with an Index and a DueDate.","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"weeweh"},"content":"     * @param index","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"weeweh"},"content":"     * @param dueDate","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"weeweh"},"content":"    public DueCommand(int index, LocalDate dueDate) {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"weeweh"},"content":"        super(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"weeweh"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"weeweh"},"content":"     * Prints out all Tasks that are due on the LocalDate specified by the User.","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"weeweh"},"content":"     * @param list","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"weeweh"},"content":"     * @param ui","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"weeweh"},"content":"     * @param storage","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"weeweh"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"weeweh"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"weeweh"},"content":"        String message \u003d list.dueOn(dueDate);","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"weeweh"},"content":"        ui.print(message);","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"weeweh"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"weeweh":39}},{"path":"src/main/java/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weeweh"},"content":"package command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"weeweh"},"content":"import helper.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"weeweh"},"content":"import helper.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"weeweh"},"content":"import task.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"weeweh"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"weeweh"},"content":" * Represents a Command that specifically exits the ChatBot.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"weeweh"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"weeweh"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"weeweh"},"content":"    /** Command the user starts with to activate the ExitCommand. */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"weeweh"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"weeweh"},"content":"     * Constructs an ExitCommand with an Index.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"weeweh"},"content":"     * @param index","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"weeweh"},"content":"    public ExitCommand(int index) {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"weeweh"},"content":"        super(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"weeweh"},"content":"     * Returns if the Command is exiting the ChatBot","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"weeweh"},"content":"     * @return True","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"weeweh"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"weeweh"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"weeweh"},"content":"        return true;","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"weeweh"},"content":"     * Exits the ChatBot.","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"weeweh"},"content":"     * @param list","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"weeweh"},"content":"     * @param ui","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"weeweh"},"content":"     * @param storage","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"weeweh"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"weeweh"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"weeweh"},"content":"        ui.print(\"Bye. Hope to see you again soon lol!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"weeweh"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"weeweh":41}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weeweh"},"content":"package command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"weeweh"},"content":"import helper.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"weeweh"},"content":"import helper.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"weeweh"},"content":"import task.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"weeweh"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"weeweh"},"content":" * Represents a Command that specifically finds a Task by a substring.","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"weeweh"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"weeweh"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"weeweh"},"content":"    /** Command the user starts with to activate the FindCommand. */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"weeweh"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"weeweh"},"content":"    /** Substring to find in description of Task. */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"weeweh"},"content":"    private String substring;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"weeweh"},"content":"     * Constructs a FindCommand that finds a List of Tasks with description","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"weeweh"},"content":"     * containing the substring.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"weeweh"},"content":"     * @param index","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"weeweh"},"content":"     * @param substring","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"weeweh"},"content":"    public FindCommand(int index, String substring) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"weeweh"},"content":"        super(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"weeweh"},"content":"        this.substring \u003d substring;","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"weeweh"},"content":"     * Prints out all Tasks that contain the substring specified by the User in its description.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"weeweh"},"content":"     * @param list","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"weeweh"},"content":"     * @param ui","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"weeweh"},"content":"     * @param storage","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"weeweh"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"weeweh"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"weeweh"},"content":"        String message \u003d list.find(substring);","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"weeweh"},"content":"        ui.print(message);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"weeweh"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"weeweh":38}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weeweh"},"content":"package command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"weeweh"},"content":"import helper.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"weeweh"},"content":"import helper.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"weeweh"},"content":"import task.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"weeweh"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"weeweh"},"content":" * Represents a Command that specifically lists out all Tasks in the Tasklist.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"weeweh"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"weeweh"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"weeweh"},"content":"    /** Command the user starts with to activate the ListCommand. */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"weeweh"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"weeweh"},"content":"     * Constructs a ListCommand with an Index.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"weeweh"},"content":"     * @param index","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"weeweh"},"content":"    public ListCommand(int index) {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"weeweh"},"content":"        super(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"weeweh"},"content":"     * Prints out all Tasks in the TaskList.","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"weeweh"},"content":"     * @param list","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"weeweh"},"content":"     * @param ui","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"weeweh"},"content":"     * @param storage","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"weeweh"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"weeweh"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"weeweh"},"content":"        ui.print(list.print());","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"weeweh"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"weeweh":32}},{"path":"src/main/java/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weeweh"},"content":"package command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"weeweh"},"content":"import exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"weeweh"},"content":"import helper.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"weeweh"},"content":"import helper.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"weeweh"},"content":"import task.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"weeweh"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"weeweh"},"content":" * Represents a Command that specifically marks a Task at a given Index in the TaskList","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"weeweh"},"content":" * to be completed.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"weeweh"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"weeweh"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"weeweh"},"content":"    /** Command the user starts with to activate the MarkCommand. */","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"weeweh"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"weeweh"},"content":"     * Constructs a MarkCommand with an Index.","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"weeweh"},"content":"     * @param index","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"weeweh"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"weeweh"},"content":"        super(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"weeweh"},"content":"     * Marks the Task at the given Index in the TaskList to be completed.","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"weeweh"},"content":"     * @param list","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"weeweh"},"content":"     * @param ui","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"weeweh"},"content":"     * @param storage","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"weeweh"},"content":"     * @throws DukeException","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"weeweh"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"weeweh"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"weeweh"},"content":"        String message \u003d list.mark(this.getIndex());","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"weeweh"},"content":"        ui.print(message);","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"weeweh"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"weeweh":36}},{"path":"src/main/java/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weeweh"},"content":"package command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"weeweh"},"content":"import exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"weeweh"},"content":"import helper.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"weeweh"},"content":"import helper.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"weeweh"},"content":"import task.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"weeweh"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"weeweh"},"content":" * Represents a Command that specifically marks a Task at a given Index in the TaskList","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"weeweh"},"content":" * to be uncompleted.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"weeweh"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"weeweh"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"weeweh"},"content":"    /** Command the user starts with to activate the UnmarkCommand. */","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"weeweh"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"weeweh"},"content":"     * Constructs a UnmarkCommand with an Index.","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"weeweh"},"content":"     * @param index","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"weeweh"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"weeweh"},"content":"        super(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"weeweh"},"content":"     * Marks the Task at the given Index in the TaskList to be uncompleted.","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"weeweh"},"content":"     * @param list","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"weeweh"},"content":"     * @param ui","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"weeweh"},"content":"     * @param storage","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"weeweh"},"content":"     * @throws DukeException","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"weeweh"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"weeweh"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"weeweh"},"content":"        String message \u003d list.unmark(this.getIndex());","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"weeweh"},"content":"        ui.print(message);","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"weeweh"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"weeweh":36}},{"path":"src/main/java/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weeweh"},"content":"package exception;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"weeweh"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"weeweh"},"content":" * Represents an Exception for the chatbot.","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"weeweh"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"weeweh"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"weeweh"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"weeweh"},"content":"        super(message);","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"weeweh"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"weeweh":10}},{"path":"src/main/java/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weeweh"},"content":"package exception;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"weeweh"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"weeweh"},"content":" * Represents an Exception where an invalid command was given.","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"weeweh"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"weeweh"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"weeweh"},"content":"    public InvalidCommandException(String command) {","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"weeweh"},"content":"        super(\"No such command bruh: \" + command);","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"weeweh"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"weeweh":10}},{"path":"src/main/java/exception/MissingIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weeweh"},"content":"package exception;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"weeweh"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"weeweh"},"content":" * Represents an Exception where an index is missing when expected.","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"weeweh"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"weeweh"},"content":"public class MissingIndexException extends DukeException {","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"weeweh"},"content":"    public MissingIndexException(String command) {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"weeweh"},"content":"        super(command + \" needs an index after it...\");","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"weeweh"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"weeweh":10}},{"path":"src/main/java/exception/MissingTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weeweh"},"content":"package exception;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"weeweh"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"weeweh"},"content":" * Represents an Exception where a task is missing when expected.","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"weeweh"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"weeweh"},"content":"public class MissingTaskException extends DukeException {","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"weeweh"},"content":"    public MissingTaskException(String command) {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"weeweh"},"content":"        super(command + \" needs a task after it...\");","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"weeweh"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"weeweh":10}},{"path":"src/main/java/exception/WrongUseOfCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weeweh"},"content":"package exception;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"weeweh"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"weeweh"},"content":" * Represents an Exception where a command is used in the wrong context.","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"weeweh"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"weeweh"},"content":"public class WrongUseOfCommandException extends DukeException {","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"weeweh"},"content":"    public WrongUseOfCommandException() {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"weeweh"},"content":"        super(\"No extra text after this command bro..\");","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"weeweh"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"weeweh":10}},{"path":"src/main/java/helper/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weeweh"},"content":"package helper;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"weeweh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"weeweh"},"content":"import command.AddCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"weeweh"},"content":"import command.Command;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"weeweh"},"content":"import command.DeleteCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"weeweh"},"content":"import command.DueCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"weeweh"},"content":"import command.ExitCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"weeweh"},"content":"import command.FindCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"weeweh"},"content":"import command.ListCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"weeweh"},"content":"import command.MarkCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"weeweh"},"content":"import command.UnmarkCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"weeweh"},"content":"import exception.InvalidCommandException;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"weeweh"},"content":"import exception.MissingIndexException;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"weeweh"},"content":"import exception.MissingTaskException;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"weeweh"},"content":"import exception.WrongUseOfCommandException;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"weeweh"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"weeweh"},"content":" * Represents a Parser that takes in the User input and returns a Command object.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"weeweh"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"weeweh"},"content":"public class Parser {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"weeweh"},"content":"     * Takes in the input given by the User and wraps it in a Command based on the command specified.","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"weeweh"},"content":"     * @param fullCommand","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"weeweh"},"content":"     * @return a Command","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"weeweh"},"content":"     * @throws WrongUseOfCommandException","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"weeweh"},"content":"     * @throws MissingIndexException","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"weeweh"},"content":"     * @throws InvalidCommandException","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"weeweh"},"content":"     * @throws MissingTaskException","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"weeweh"},"content":"    public static Command parse(String fullCommand) throws WrongUseOfCommandException, MissingIndexException,","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"weeweh"},"content":"            InvalidCommandException, MissingTaskException {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"weeweh"},"content":"        fullCommand \u003d fullCommand.trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"weeweh"},"content":"        if (fullCommand.startsWith(\"bye\") || fullCommand.startsWith(\"list\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"weeweh"},"content":"            if (fullCommand.equals(ExitCommand.COMMAND_WORD)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"weeweh"},"content":"                return new ExitCommand(-1);","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"weeweh"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"weeweh"},"content":"            if (fullCommand.equals(ListCommand.COMMAND_WORD)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"weeweh"},"content":"                return new ListCommand(-1);","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"weeweh"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"weeweh"},"content":"            throw new WrongUseOfCommandException();","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"weeweh"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"weeweh"},"content":"        if (fullCommand.startsWith(\"mark\") || fullCommand.startsWith(\"unmark\")","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"weeweh"},"content":"                || fullCommand.startsWith(\"delete\") || fullCommand.startsWith(\"due\")","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"weeweh"},"content":"                || fullCommand.startsWith(\"find\")) {","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"weeweh"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"weeweh"},"content":"                String[] res \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"weeweh"},"content":"                String taskType \u003d res[0].strip();","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"weeweh"},"content":"                if (taskType.equals(DueCommand.COMMAND_WORD)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"weeweh"},"content":"                    return new DueCommand(-1, LocalDate.parse(res[1].strip()));","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"weeweh"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"weeweh"},"content":"                if (taskType.equals(FindCommand.COMMAND_WORD)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"weeweh"},"content":"                    return new FindCommand(-1, res[1].strip());","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"weeweh"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"weeweh"},"content":"                int index \u003d Integer.parseInt(res[1].strip());","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"weeweh"},"content":"                switch (taskType) {","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"weeweh"},"content":"                case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"weeweh"},"content":"                    return new MarkCommand(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"weeweh"},"content":"                case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"weeweh"},"content":"                    return new UnmarkCommand(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"weeweh"},"content":"                case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"weeweh"},"content":"                    return new DeleteCommand(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"weeweh"},"content":"                default:","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"weeweh"},"content":"                    break;","lastModifiedDate":"2023-09-04"},{"lineNumber":74,"author":{"gitId":"weeweh"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"weeweh"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"weeweh"},"content":"                throw new MissingIndexException(fullCommand);","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"weeweh"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"weeweh"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"weeweh"},"content":"        if (fullCommand.startsWith(\"todo\") || fullCommand.startsWith(\"deadline\") || fullCommand.startsWith(\"event\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"weeweh"},"content":"            if (fullCommand.equals(\"todo\") || fullCommand.equals(\"deadline\") || fullCommand.equals(\"event\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"weeweh"},"content":"                throw new MissingTaskException(fullCommand);","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"weeweh"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"weeweh"},"content":"            return new AddCommand(-1, fullCommand);","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"weeweh"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"weeweh"},"content":"        throw new InvalidCommandException(fullCommand);","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"weeweh"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"weeweh":90}},{"path":"src/main/java/helper/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weeweh"},"content":"package helper;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"weeweh"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"weeweh"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"weeweh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"weeweh"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"weeweh"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"weeweh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"weeweh"},"content":"import java.util.List;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"weeweh"},"content":"import task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"weeweh"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"weeweh"},"content":" * Represents a Storage to handle Files found in the User\u0027s local storage.","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"weeweh"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"weeweh"},"content":"public class Storage {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"weeweh"},"content":"    /** The relative path to the local .txt file. */","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"weeweh"},"content":"    private String filePath;","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"weeweh"},"content":"     * Constructs a Storage with a filePath.","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"weeweh"},"content":"     * @param filePath","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"weeweh"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"weeweh"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"weeweh"},"content":"     * Attempts to load the User\u0027s TaskList in a local .txt file into a TaskList.","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"weeweh"},"content":"     * If no such file or path is found, a directory and .txt file will be made.","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"weeweh"},"content":"     * @return TaskList","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"weeweh"},"content":"    public List\u003cTask\u003e load() {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"weeweh"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"weeweh"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"weeweh"},"content":"            FileReader fileReader \u003d new FileReader(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"weeweh"},"content":"            BufferedReader bufferedReader \u003d new BufferedReader(fileReader);","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"weeweh"},"content":"            String line;","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"weeweh"},"content":"            while ((line \u003d bufferedReader.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"weeweh"},"content":"                Task task \u003d Task.fromString(line);","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"weeweh"},"content":"                list.add(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"weeweh"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"weeweh"},"content":"            bufferedReader.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"weeweh"},"content":"            fileReader.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"weeweh"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"weeweh"},"content":"            String directoryPath \u003d \"./data\";","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"weeweh"},"content":"            File directory \u003d new File(directoryPath);","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"weeweh"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"weeweh"},"content":"                directory.mkdirs();","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"weeweh"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"weeweh"},"content":"                File file \u003d new File(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"weeweh"},"content":"                try {","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"weeweh"},"content":"                    file.createNewFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"weeweh"},"content":"                } catch (IOException e1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"weeweh"},"content":"                    System.out.println(e1.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"weeweh"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"weeweh"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"weeweh"},"content":"            System.out.println(\"File created at \" + filePath + \"^.^\");","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"weeweh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"weeweh"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"weeweh"},"content":"        } finally {","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"weeweh"},"content":"            return list;","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"weeweh"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"weeweh"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"weeweh":69}},{"path":"src/main/java/helper/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weeweh"},"content":"package helper;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"weeweh"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"weeweh"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"weeweh"},"content":" * Represents a User Interface that receives the User input and prints out the outputs.","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"weeweh"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"weeweh"},"content":"public class Ui {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"weeweh"},"content":"     * A line to divide responses. */","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"weeweh"},"content":"    public static final String DIVIDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"weeweh"},"content":"     * Prints out a welcome message to the User to signal the ChatBot has started up.","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"weeweh"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"weeweh"},"content":"        showLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"weeweh"},"content":"        System.out.println(\"Hello! I\u0027m BanterBot\");","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"weeweh"},"content":"        System.out.println(\"What can I do for you lmao?\");","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"weeweh"},"content":"        showLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"weeweh"},"content":"     * Prints out a dividing line.","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"weeweh"},"content":"    public void showLine() {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"weeweh"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"weeweh"},"content":"     * Wraps a message between two dividing lines and prints out the message.","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"weeweh"},"content":"     * @param message","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"weeweh"},"content":"    public void print(String message) {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"weeweh"},"content":"        showLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"weeweh"},"content":"        System.out.println(message);","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"weeweh"},"content":"        showLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"weeweh"},"content":"     * Reads the User input through the Command Line Interface.","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"weeweh"},"content":"     * @return String of User input","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"weeweh"},"content":"    public String readCommand() {","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"weeweh"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"weeweh"},"content":"        String input \u003d scanner.nextLine().trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"weeweh"},"content":"        return input;","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"weeweh"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"weeweh":50}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weeweh"},"content":"package task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"weeweh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"weeweh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"weeweh"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"weeweh"},"content":" * Represents a Task that has a LocalDate it us due by.","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"weeweh"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"weeweh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"weeweh"},"content":"    /** A LocalDate which the Deadline is due by. */","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"weeweh"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"weeweh"},"content":"     * Constructs a Deadline with a description and a LocalDate it is due by.","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"weeweh"},"content":"     * @param description","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"weeweh"},"content":"     * @param by","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"weeweh"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"weeweh"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"weeweh"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"weeweh"},"content":"     * Returns a String representation of the Deadline.","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"weeweh"},"content":"     * @return a String representation","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"weeweh"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"weeweh"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"weeweh"},"content":"        String date \u003d by.format(DateTimeFormatter.ofPattern(\"MMM d YYYY\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"weeweh"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + date + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"weeweh"},"content":"     * Returns a String representation of the Deadline for the .txt file.","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"weeweh"},"content":"     * @return a String representation","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"weeweh"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"weeweh"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"weeweh"},"content":"        int bool \u003d this.isDone ? 1 : 0;","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"weeweh"},"content":"        return \"D | \" + bool + \" | \" + this.description + \" | \" + by + \"\\n\";","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"weeweh"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"weeweh":42}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weeweh"},"content":"package task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"weeweh"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"weeweh"},"content":" * Represents a Task that has a start and end time.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"weeweh"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"weeweh"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"weeweh"},"content":"    /** The start time for an Event. */","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"weeweh"},"content":"    protected String start;","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"weeweh"},"content":"    /** The end time for an Event. */","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"weeweh"},"content":"    protected String end;","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"weeweh"},"content":"     * Constructs an Event with a description, a start and end time.","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"weeweh"},"content":"     * @param description","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"weeweh"},"content":"     * @param start","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"weeweh"},"content":"     * @param end","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"weeweh"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"weeweh"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"weeweh"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"weeweh"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"weeweh"},"content":"     * Returns a String representation of the Event.","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"weeweh"},"content":"     * @return a String representation","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"weeweh"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"weeweh"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"weeweh"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + start + \" to: \" + end + \")\";","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"weeweh"},"content":"     * Returns a String representation of the Event for the .txt file.","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"weeweh"},"content":"     * @return a String representation","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"weeweh"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"weeweh"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"weeweh"},"content":"        int bool \u003d this.isDone ? 1 : 0;","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"weeweh"},"content":"        return \"E | \" + bool + \" | \" + this.description + \" | \" + this.start + \"-\" + this.end + \"\\n\";","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"weeweh"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"weeweh":42}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weeweh"},"content":"package task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"weeweh"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"weeweh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"weeweh"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"weeweh"},"content":" * Represents a Task that a User can see in a TaskList.","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"weeweh"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"weeweh"},"content":"public class Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"weeweh"},"content":"    /** The description detailing the Task. */","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"weeweh"},"content":"    protected String description;","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"weeweh"},"content":"    /** Describes whether the Task is completed. */","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"weeweh"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"weeweh"},"content":"     * Constructs a Task with a description and is set to be not done.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"weeweh"},"content":"     * @param description","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"weeweh"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"weeweh"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"weeweh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"weeweh"},"content":"     * Takes in a String that was read through a .txt file and wraps in a Task object.","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"weeweh"},"content":"     * @param line","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"weeweh"},"content":"     * @return a Task","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"weeweh"},"content":"     * @throws IOException","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"weeweh"},"content":"    public static Task fromString(String line) throws IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"weeweh"},"content":"        if (line.startsWith(\"T\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"weeweh"},"content":"            String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"weeweh"},"content":"            boolean isCompleted \u003d parts[1].trim().equals(\"1\");","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"weeweh"},"content":"            String description \u003d parts[2].trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"weeweh"},"content":"            Task task \u003d new ToDo(description);","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"weeweh"},"content":"            task.toggleIsDone(isCompleted);","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"weeweh"},"content":"            return task;","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"weeweh"},"content":"        } else if (line.startsWith(\"D\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"weeweh"},"content":"            String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"weeweh"},"content":"            boolean isCompleted \u003d parts[1].trim().equals(\"1\");","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"weeweh"},"content":"            String description \u003d parts[2].trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"weeweh"},"content":"            String by \u003d parts[3].trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"weeweh"},"content":"            LocalDate date \u003d LocalDate.parse(by);","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"weeweh"},"content":"            Task task \u003d new Deadline(description, date);","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"weeweh"},"content":"            task.toggleIsDone(isCompleted);","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"weeweh"},"content":"            return task;","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"weeweh"},"content":"        } else if (line.startsWith(\"E\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"weeweh"},"content":"            String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"weeweh"},"content":"            boolean isCompleted \u003d parts[1].trim().equals(\"1\");","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"weeweh"},"content":"            String description \u003d parts[2].trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"weeweh"},"content":"            String[] time \u003d parts[3].trim().split(\"-\");","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"weeweh"},"content":"            Task task \u003d new Event(description, time[0].trim(), time[1].trim());","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"weeweh"},"content":"            task.toggleIsDone(isCompleted);","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"weeweh"},"content":"            return task;","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"weeweh"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"weeweh"},"content":"            throw new IOException(\"Corrupted File. What you doin\u0027 bruh...\");","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"weeweh"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"weeweh"},"content":"     * Sets the Task isDone boolean to be isDone.","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"weeweh"},"content":"     * @param isDone","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"weeweh"},"content":"    public void toggleIsDone(boolean isDone) {","lastModifiedDate":"2023-08-21"},{"lineNumber":71,"author":{"gitId":"weeweh"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-21"},{"lineNumber":72,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":73,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":74,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"weeweh"},"content":"     * Returns a String representation of the isDone of the Task.","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"weeweh"},"content":"     * @return a String representation","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"weeweh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-21"},{"lineNumber":79,"author":{"gitId":"weeweh"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":81,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":82,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"weeweh"},"content":"     * Returns a String representation of the Task.","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"weeweh"},"content":"     * @return a String representation","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"weeweh"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":87,"author":{"gitId":"weeweh"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":88,"author":{"gitId":"weeweh"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-21"},{"lineNumber":89,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":90,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"weeweh"},"content":"     * Returns a String representation of the Task for the .txt file.","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"weeweh"},"content":"     * @return a String representation","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"weeweh"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"weeweh"},"content":"        return description;","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"weeweh"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"weeweh":98}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weeweh"},"content":"package task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"weeweh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"weeweh"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"weeweh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"weeweh"},"content":"import java.util.List;","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"weeweh"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"weeweh"},"content":"import exception.DukeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"weeweh"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"weeweh"},"content":" * Represents a list of Tasks a User can interact with.","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"weeweh"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"weeweh"},"content":"public class TaskList {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"weeweh"},"content":"    /** A list containing all the User\u0027s tasks. */","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"weeweh"},"content":"    private List\u003cTask\u003e list;","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"weeweh"},"content":"     * Constructs a TaskList using a list of Tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"weeweh"},"content":"     * @param list","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"weeweh"},"content":"    public TaskList(List\u003cTask\u003e list) {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"weeweh"},"content":"        this.list \u003d list;","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"weeweh"},"content":"     * Adds a Task to the list and writes the change into the local .txt file.","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"weeweh"},"content":"     * Returns a message to be printed by the UI.","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"weeweh"},"content":"     * @param task","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"weeweh"},"content":"     * @return message","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"weeweh"},"content":"    public String add(Task task) {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"weeweh"},"content":"        list.add(task);","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"weeweh"},"content":"        updateFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"weeweh"},"content":"        return \"I Gotchu. This task added successfully:\\n\" + task.toString()","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"weeweh"},"content":"                + \"\\nYeaboi only \" + list.size() + \" in the list.\";","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"weeweh"},"content":"     * Marks a Task as completed in the list and writes the change into the local .txt file.","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"weeweh"},"content":"     * Returns a message to be printed by the UI.","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"weeweh"},"content":"     * Throws a DukeException if index is out of bounds.","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"weeweh"},"content":"     * @param idx","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"weeweh"},"content":"     * @return message","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"weeweh"},"content":"     * @throws DukeException","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"weeweh"},"content":"    public String mark(int idx) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"weeweh"},"content":"        if (idx \u003e this.list.size()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"weeweh"},"content":"            throw new DukeException(\"Out of bounds..\");","lastModifiedDate":"2023-08-21"},{"lineNumber":50,"author":{"gitId":"weeweh"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":51,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"weeweh"},"content":"        Task task \u003d this.list.get(idx - 1);","lastModifiedDate":"2023-08-21"},{"lineNumber":53,"author":{"gitId":"weeweh"},"content":"        task.toggleIsDone(true);","lastModifiedDate":"2023-08-21"},{"lineNumber":54,"author":{"gitId":"weeweh"},"content":"        updateFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"weeweh"},"content":"        return \"Noice! I\u0027ve marked this task as donezo:\\n\" + task;","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":58,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":59,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"weeweh"},"content":"     * Deletes a Task in the list and writes the change into the local .txt file.","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"weeweh"},"content":"     * Returns a message to be printed by the UI.","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"weeweh"},"content":"     * Throws a DukeException if index is out of bounds.","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"weeweh"},"content":"     * @param idx","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"weeweh"},"content":"     * @return message","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"weeweh"},"content":"     * @throws DukeException","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"weeweh"},"content":"    public String delete(int idx) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"weeweh"},"content":"        if (idx \u003e this.list.size()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":69,"author":{"gitId":"weeweh"},"content":"            throw new DukeException(\"Out of bounds..\");","lastModifiedDate":"2023-08-21"},{"lineNumber":70,"author":{"gitId":"weeweh"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":71,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"weeweh"},"content":"        Task task \u003d this.list.remove(idx - 1);","lastModifiedDate":"2023-08-21"},{"lineNumber":73,"author":{"gitId":"weeweh"},"content":"        updateFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"weeweh"},"content":"        return \"Task remove UwU:\\n\" + task.toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":77,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":78,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"weeweh"},"content":"     * Marks a Task as uncompleted in the list and writes the change into the local .txt file.","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"weeweh"},"content":"     * Returns a message to be printed by the UI.","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"weeweh"},"content":"     * Throws a DukeException if index is out of bounds.","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"weeweh"},"content":"     * @param idx","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"weeweh"},"content":"     * @return message","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"weeweh"},"content":"     * @throws DukeException","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"weeweh"},"content":"    public String unmark(int idx) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"weeweh"},"content":"        if (idx \u003e this.list.size()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":88,"author":{"gitId":"weeweh"},"content":"            throw new DukeException(\"Out of bounds..\");","lastModifiedDate":"2023-08-21"},{"lineNumber":89,"author":{"gitId":"weeweh"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":90,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":91,"author":{"gitId":"weeweh"},"content":"        Task task \u003d this.list.get(idx - 1);","lastModifiedDate":"2023-08-21"},{"lineNumber":92,"author":{"gitId":"weeweh"},"content":"        task.toggleIsDone(false);","lastModifiedDate":"2023-08-21"},{"lineNumber":93,"author":{"gitId":"weeweh"},"content":"        updateFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"weeweh"},"content":"        return \"OK, I\u0027ve marked this task as not done yet bruh:\\n\" + task;","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":97,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":98,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"weeweh"},"content":"     * Returns a String representation of the list of Task due on the","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"weeweh"},"content":"     * LocalDate specified by the User.","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"weeweh"},"content":"     * @param due","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"weeweh"},"content":"     * @return a String representation of the list of Task due","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"weeweh"},"content":"    public String dueOn(LocalDate due) {","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"weeweh"},"content":"        List\u003cTask\u003e dueList \u003d list.stream()","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"weeweh"},"content":"                .filter(task -\u003e (task instanceof Deadline))","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"weeweh"},"content":"                .filter(deadline -\u003e ((Deadline) deadline).by.equals(due))","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"weeweh"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"weeweh"},"content":"        if (dueList.isEmpty()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"weeweh"},"content":"            return \"Nothing to see here...\";","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"weeweh"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"weeweh"},"content":"            StringBuilder s \u003d new StringBuilder(\"ALERT!! Due on \" + due);","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"weeweh"},"content":"            for (Task t : dueList) {","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"weeweh"},"content":"                s.append(\"\\n\" + t.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"weeweh"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"weeweh"},"content":"            return s.toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"weeweh"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"weeweh"},"content":"     * Returns a String representation of the list of Task containing the","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"weeweh"},"content":"     * substring in its description specified by the User.","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"weeweh"},"content":"     * @param substring","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"weeweh"},"content":"     * @return a String representation of the list of Task found","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"weeweh"},"content":"    public String find(String substring) {","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"weeweh"},"content":"        List\u003cTask\u003e subList \u003d list.stream()","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"weeweh"},"content":"                .filter(task -\u003e task.description.contains(substring))","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"weeweh"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"weeweh"},"content":"        if (subList.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"weeweh"},"content":"            return \"No such Task...\";","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"weeweh"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"weeweh"},"content":"            StringBuilder s \u003d new StringBuilder(\"Do this:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"weeweh"},"content":"            for (Task t : subList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"weeweh"},"content":"                s.append(\"\\n\" + t.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"weeweh"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":143,"author":{"gitId":"weeweh"},"content":"            return s.toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":144,"author":{"gitId":"weeweh"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":145,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":146,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":147,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":148,"author":{"gitId":"weeweh"},"content":"     * Returns a String representation of the Tasks in the list.","lastModifiedDate":"2023-08-30"},{"lineNumber":149,"author":{"gitId":"weeweh"},"content":"     * @return a String representation of the TaskList.","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":151,"author":{"gitId":"weeweh"},"content":"    public String print() {","lastModifiedDate":"2023-08-29"},{"lineNumber":152,"author":{"gitId":"weeweh"},"content":"        StringBuilder s \u003d new StringBuilder(\"\");","lastModifiedDate":"2023-08-29"},{"lineNumber":153,"author":{"gitId":"weeweh"},"content":"        s.append(\"Here yo tasks in your list my g:\");","lastModifiedDate":"2023-08-29"},{"lineNumber":154,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":155,"author":{"gitId":"weeweh"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-08-21"},{"lineNumber":156,"author":{"gitId":"weeweh"},"content":"            Task task \u003d list.get(i);","lastModifiedDate":"2023-08-21"},{"lineNumber":157,"author":{"gitId":"weeweh"},"content":"            s.append(\"\\n\" + (i + 1) + \".\" + task.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":158,"author":{"gitId":"weeweh"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":159,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"weeweh"},"content":"        return s.toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":161,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":162,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":163,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":164,"author":{"gitId":"weeweh"},"content":"     * Returns a String representation of the TaskList for the .txt file.","lastModifiedDate":"2023-08-30"},{"lineNumber":165,"author":{"gitId":"weeweh"},"content":"     * @return a String representation","lastModifiedDate":"2023-08-30"},{"lineNumber":166,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":167,"author":{"gitId":"weeweh"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":168,"author":{"gitId":"weeweh"},"content":"        StringBuilder res \u003d new StringBuilder(\"\");","lastModifiedDate":"2023-08-29"},{"lineNumber":169,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":170,"author":{"gitId":"weeweh"},"content":"        for (Task t : list) {","lastModifiedDate":"2023-08-29"},{"lineNumber":171,"author":{"gitId":"weeweh"},"content":"            res.append(t.toFileString());","lastModifiedDate":"2023-08-29"},{"lineNumber":172,"author":{"gitId":"weeweh"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":173,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":174,"author":{"gitId":"weeweh"},"content":"        return res.toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":175,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":176,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":177,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":178,"author":{"gitId":"weeweh"},"content":"     * Writes the current String representation of the TaskList","lastModifiedDate":"2023-08-30"},{"lineNumber":179,"author":{"gitId":"weeweh"},"content":"     * into the local .txt file.","lastModifiedDate":"2023-08-30"},{"lineNumber":180,"author":{"gitId":"weeweh"},"content":"     * Throws an IOException if it fails.","lastModifiedDate":"2023-08-30"},{"lineNumber":181,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":182,"author":{"gitId":"weeweh"},"content":"    public void updateFile() {","lastModifiedDate":"2023-08-29"},{"lineNumber":183,"author":{"gitId":"weeweh"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":184,"author":{"gitId":"weeweh"},"content":"            String filePath \u003d \"./data/tasks.txt\";","lastModifiedDate":"2023-08-30"},{"lineNumber":185,"author":{"gitId":"weeweh"},"content":"            FileWriter fileWriter \u003d new FileWriter(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":186,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":187,"author":{"gitId":"weeweh"},"content":"            String newContent \u003d toFileString();","lastModifiedDate":"2023-08-29"},{"lineNumber":188,"author":{"gitId":"weeweh"},"content":"            fileWriter.write(newContent);","lastModifiedDate":"2023-08-29"},{"lineNumber":189,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":190,"author":{"gitId":"weeweh"},"content":"            fileWriter.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":191,"author":{"gitId":"weeweh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":192,"author":{"gitId":"weeweh"},"content":"            System.out.println(\"oops i done goofed\");","lastModifiedDate":"2023-08-29"},{"lineNumber":193,"author":{"gitId":"weeweh"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":194,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":195,"author":{"gitId":"weeweh"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"weeweh":195}},{"path":"src/main/java/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weeweh"},"content":"package task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"weeweh"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"weeweh"},"content":" * Represents a Task that just has a description.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"weeweh"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"weeweh"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"weeweh"},"content":"     * Constucts a ToDo with a description.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"weeweh"},"content":"     * @param description","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"weeweh"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"weeweh"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"weeweh"},"content":"     * Returns a String representation of the ToDo.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"weeweh"},"content":"     * @return a String representation","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"weeweh"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"weeweh"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"weeweh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"weeweh"},"content":"     * Returns a String representation of the ToDo for the .txt file.","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"weeweh"},"content":"     * @return a String representation","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"weeweh"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"weeweh"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"weeweh"},"content":"        int bool \u003d this.isDone ? 1 : 0;","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"weeweh"},"content":"        return \"T | \" + bool + \" | \" + this.description + \"\\n\";","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"weeweh"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"weeweh":33}},{"path":"src/test/java/helper/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weeweh"},"content":"package helper;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"weeweh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"weeweh"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"weeweh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"weeweh"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"weeweh"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"weeweh"},"content":"    public void parse_withNoSecondArgument_missingIndexExceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"weeweh"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"weeweh"},"content":"            Parser.parse(\"mark \");","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"weeweh"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"weeweh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"weeweh"},"content":"            assertEquals(\"mark needs an index after it...\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"weeweh"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"weeweh"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"weeweh":17}},{"path":"src/test/java/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weeweh"},"content":"package task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"weeweh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"weeweh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"weeweh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"weeweh"},"content":"import exception.DukeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"weeweh"},"content":"class TaskListTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"weeweh"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"weeweh"},"content":"    public void mark_withinBound_isDone() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"weeweh"},"content":"        TaskList list \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"weeweh"},"content":"        Task test \u003d new ToDo(\"test\");","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"weeweh"},"content":"        list.add(test);","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"weeweh"},"content":"        int idx \u003d 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"weeweh"},"content":"        list.mark(idx);","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"weeweh"},"content":"        assertTrue(test.isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"weeweh"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"weeweh":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"weeweh"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"weeweh"},"content":"todo return book","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"weeweh"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"weeweh"},"content":"mark 1","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"weeweh"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"weeweh"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"weeweh"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"weeweh"},"content":"mark 3","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"weeweh"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"weeweh"},"content":"unmark 3","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"weeweh"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"weeweh"},"content":"bye","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"weeweh":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"weeweh"},"content":"java -classpath ..\\bin BanterBot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"weeweh":2,"-":20}}]
