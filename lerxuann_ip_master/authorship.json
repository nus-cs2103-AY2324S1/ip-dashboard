[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"lerxuann"},"content":"# duke.Duke project template","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"lerxuann"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lerxuann":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"lerxuann"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"lerxuann"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"lerxuann"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"lerxuann"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"lerxuann"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"lerxuann"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"lerxuann"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"lerxuann"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"lerxuann"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"lerxuann"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"lerxuann"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"lerxuann"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"lerxuann"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"lerxuann"},"content":"    mainClass.set(\"duke.gui.Launcher\")","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":53,"author":{"gitId":"lerxuann"},"content":"    archiveFileName \u003d \"chatty.jar\"","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lerxuann":17,"-":41}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"lerxuann"},"content":"# Chatty User Guide","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"lerxuann"},"content":"### Task Management","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":6,"author":{"gitId":"lerxuann"},"content":"Chatty is your new personal assistant, helping you manage tasks by adding todos, setting deadlines, and scheduling events. Chatty also lists out all your tasks, and can help you mark them as complete/incomplete, delete any task, and search for specific tasks with keywords.","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"lerxuann"},"content":"### Save Tasks Locally","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"lerxuann"},"content":"Chatty remembers everything. At the end of every session, your tasks will be saved locally, allowing you to access them again the next time you open up Chatty.","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"lerxuann"},"content":"### Viewing list of commands - `help`","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"lerxuann"},"content":"Provides a list of all possible commands.","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"lerxuann"},"content":"`help`","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"lerxuann"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"lerxuann"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"lerxuann"},"content":"I\u0027m Chatty, here to help you with your ever-growing list of things to do. I have a list of pretty handy commands:","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"lerxuann"},"content":"help: displays the list of commands available, as well as how to use them.","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"lerxuann"},"content":"list: lists all the tasks you currently have recorded here.","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"lerxuann"},"content":"add todo \u003cdescription\u003e: create a new Todo task.","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"lerxuann"},"content":"add event \u003cdescription\u003e /from \u003cyyyy-mm-dd HHMM\u003e /to \u003cyyyy-mm-dd HHMM\u003e: create a new Event task from \u003ctime\u003e to \u003ctime\u003e.","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"lerxuann"},"content":"add deadline \u003cdescription\u003e /by \u003cyyyy-mm-dd HHMM\u003e: create a new Deadline task to do by \u003ctime\u003e.","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"lerxuann"},"content":"mark \u003cnumber\u003e: mark the task \u003cnumber\u003e as done.","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"lerxuann"},"content":"unmark \u003cnumber\u003e: mark the task \u003cnumber\u003e as incomplete.","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"lerxuann"},"content":"delete \u003cnumber\u003e: delete task \u003cnumber\u003e on your list.","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"lerxuann"},"content":"find \u003cdescription\u003e: fetches all tasks that match the specified \u003cdescription\u003e given. It\u0027s just a search function.","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"lerxuann"},"content":"You\u0027ll forget this, so just type \u0027help\u0027 whenever you need it.","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"lerxuann"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"lerxuann"},"content":"### Adding a Todo task - `todo`","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"lerxuann"},"content":"Adds a Todo task to the tasklist","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"lerxuann"},"content":"Command format: ","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"lerxuann"},"content":"`todo DESCRIPTION`","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"lerxuann"},"content":"- DESCRIPTION is a description of your todo task","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"lerxuann"},"content":"Example Input:","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"lerxuann"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"lerxuann"},"content":"todo return book","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"lerxuann"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"lerxuann"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"lerxuann"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"lerxuann"},"content":"Ok. Your tasklist has grown longer with this addition:","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"lerxuann"},"content":"\t[T][ ] return book","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"lerxuann"},"content":"You now have 1 things to do.","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"lerxuann"},"content":"I\u0027m sure you\u0027re dying to finish them.","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"lerxuann"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"lerxuann"},"content":"### Adding a Deadline task - `deadline`","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"lerxuann"},"content":"Adds a Deadline task to the tasklist","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"lerxuann"},"content":"Command format: ","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"lerxuann"},"content":"`deadline DESCRIPTION /by DATETIME`","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"lerxuann"},"content":"- DESCRIPTION is a description of your deadline task","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"lerxuann"},"content":"- DATETIME is the date and time your deadline task is due, in the YYYY-MM-DD HHMM format.","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"lerxuann"},"content":"Example input:","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"lerxuann"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"lerxuann"},"content":"deadline assignment /by 2023-09-22 2359","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"lerxuann"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"lerxuann"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"lerxuann"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"lerxuann"},"content":"Ok. Your tasklist has grown longer with this addition:","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"lerxuann"},"content":"\t[D][ ] assignment (by: Sep 22 2023 2359)","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"lerxuann"},"content":"You now have 1 things to do.","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"lerxuann"},"content":"I\u0027m sure you\u0027re dying to finish them.","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"lerxuann"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":86,"author":{"gitId":"lerxuann"},"content":"### Adding an Event task - `event`","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"lerxuann"},"content":"Adds an event task to the tasklist","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"lerxuann"},"content":"Command format: ","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"lerxuann"},"content":"`event DESCRIPTION /from DATETIME /to DATETIME`","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"lerxuann"},"content":"- DESCRIPTION is a description of your event task","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"lerxuann"},"content":"- DATETIME is the date and time your deadline task is due, in the YYYY-MM-DD HHMM format.","lastModifiedDate":"2023-09-20"},{"lineNumber":95,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":96,"author":{"gitId":"lerxuann"},"content":"Example input:","lastModifiedDate":"2023-09-20"},{"lineNumber":97,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"lerxuann"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":99,"author":{"gitId":"lerxuann"},"content":"event holiday /from 2023-09-22 0600 /to 2023-09-30 1800","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"lerxuann"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":102,"author":{"gitId":"lerxuann"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":103,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":104,"author":{"gitId":"lerxuann"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":105,"author":{"gitId":"lerxuann"},"content":"Ok. Your tasklist has grown longer with this addition:","lastModifiedDate":"2023-09-20"},{"lineNumber":106,"author":{"gitId":"lerxuann"},"content":"\t[E][ ] holiday (from: Sep 22 2023 0600 to: Sep 30 2023 1800)","lastModifiedDate":"2023-09-20"},{"lineNumber":107,"author":{"gitId":"lerxuann"},"content":"You now have 1 things to do.","lastModifiedDate":"2023-09-20"},{"lineNumber":108,"author":{"gitId":"lerxuann"},"content":"I\u0027m sure you\u0027re dying to finish them.","lastModifiedDate":"2023-09-20"},{"lineNumber":109,"author":{"gitId":"lerxuann"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":110,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":111,"author":{"gitId":"lerxuann"},"content":"### Listing all tasks - `list`","lastModifiedDate":"2023-09-20"},{"lineNumber":112,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":113,"author":{"gitId":"lerxuann"},"content":"Lists all tasks in the tasklist","lastModifiedDate":"2023-09-20"},{"lineNumber":114,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":115,"author":{"gitId":"lerxuann"},"content":"Command format: ","lastModifiedDate":"2023-09-20"},{"lineNumber":116,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":117,"author":{"gitId":"lerxuann"},"content":"`list`","lastModifiedDate":"2023-09-20"},{"lineNumber":118,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":119,"author":{"gitId":"lerxuann"},"content":"Example input:","lastModifiedDate":"2023-09-20"},{"lineNumber":120,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":121,"author":{"gitId":"lerxuann"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":122,"author":{"gitId":"lerxuann"},"content":"list","lastModifiedDate":"2023-09-20"},{"lineNumber":123,"author":{"gitId":"lerxuann"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":124,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":125,"author":{"gitId":"lerxuann"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":126,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":127,"author":{"gitId":"lerxuann"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":128,"author":{"gitId":"lerxuann"},"content":"Looking at your tasks again to remind yourself is good, but remember to actually do them:","lastModifiedDate":"2023-09-20"},{"lineNumber":129,"author":{"gitId":"lerxuann"},"content":"1. [E][ ] holiday (from: Sep 22 2023 0600 to: Sep 30 2023 1800)","lastModifiedDate":"2023-09-20"},{"lineNumber":130,"author":{"gitId":"lerxuann"},"content":"2. [D][ ] assignment (by: Sep 22 2023 2359)","lastModifiedDate":"2023-09-20"},{"lineNumber":131,"author":{"gitId":"lerxuann"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":132,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":133,"author":{"gitId":"lerxuann"},"content":"### Marking a task as completed - `mark`","lastModifiedDate":"2023-09-20"},{"lineNumber":134,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":135,"author":{"gitId":"lerxuann"},"content":"Marks a task as completed","lastModifiedDate":"2023-09-20"},{"lineNumber":136,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":137,"author":{"gitId":"lerxuann"},"content":"Command format: ","lastModifiedDate":"2023-09-20"},{"lineNumber":138,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":139,"author":{"gitId":"lerxuann"},"content":"`mark INDEX`","lastModifiedDate":"2023-09-20"},{"lineNumber":140,"author":{"gitId":"lerxuann"},"content":"- INDEX is the index of the specified task in the displayed task list","lastModifiedDate":"2023-09-20"},{"lineNumber":141,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":142,"author":{"gitId":"lerxuann"},"content":"Example input:","lastModifiedDate":"2023-09-20"},{"lineNumber":143,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":144,"author":{"gitId":"lerxuann"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":145,"author":{"gitId":"lerxuann"},"content":"mark 1","lastModifiedDate":"2023-09-20"},{"lineNumber":146,"author":{"gitId":"lerxuann"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":147,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":148,"author":{"gitId":"lerxuann"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":149,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":150,"author":{"gitId":"lerxuann"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":151,"author":{"gitId":"lerxuann"},"content":"Someone\u0027s productive. Marked it done for you:","lastModifiedDate":"2023-09-20"},{"lineNumber":152,"author":{"gitId":"lerxuann"},"content":"\t[X] cs2103t assignment","lastModifiedDate":"2023-09-20"},{"lineNumber":153,"author":{"gitId":"lerxuann"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":154,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":155,"author":{"gitId":"lerxuann"},"content":"### Marking a task as incomplete - `unmark`","lastModifiedDate":"2023-09-20"},{"lineNumber":156,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":157,"author":{"gitId":"lerxuann"},"content":"Marks a task as incomplete by removing any mark that marks it as \u0027complete\u0027","lastModifiedDate":"2023-09-20"},{"lineNumber":158,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":159,"author":{"gitId":"lerxuann"},"content":"Command format: ","lastModifiedDate":"2023-09-20"},{"lineNumber":160,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":161,"author":{"gitId":"lerxuann"},"content":"`unmark INDEX`","lastModifiedDate":"2023-09-20"},{"lineNumber":162,"author":{"gitId":"lerxuann"},"content":"- INDEX is the index of the specified task in the displayed task list","lastModifiedDate":"2023-09-20"},{"lineNumber":163,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":164,"author":{"gitId":"lerxuann"},"content":"Example input:","lastModifiedDate":"2023-09-20"},{"lineNumber":165,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":166,"author":{"gitId":"lerxuann"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":167,"author":{"gitId":"lerxuann"},"content":"unmark 1","lastModifiedDate":"2023-09-20"},{"lineNumber":168,"author":{"gitId":"lerxuann"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":169,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":170,"author":{"gitId":"lerxuann"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":171,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":172,"author":{"gitId":"lerxuann"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":173,"author":{"gitId":"lerxuann"},"content":"What happened to being productive? Marked it as not done yet:","lastModifiedDate":"2023-09-20"},{"lineNumber":174,"author":{"gitId":"lerxuann"},"content":"\t[] cs2103t assignment","lastModifiedDate":"2023-09-20"},{"lineNumber":175,"author":{"gitId":"lerxuann"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":176,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":177,"author":{"gitId":"lerxuann"},"content":"### Deleting a task - `delete`","lastModifiedDate":"2023-09-20"},{"lineNumber":178,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":179,"author":{"gitId":"lerxuann"},"content":"Deletes a task from the tasklist","lastModifiedDate":"2023-09-20"},{"lineNumber":180,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":181,"author":{"gitId":"lerxuann"},"content":"Command format: ","lastModifiedDate":"2023-09-20"},{"lineNumber":182,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":183,"author":{"gitId":"lerxuann"},"content":"`delete INDEX`","lastModifiedDate":"2023-09-20"},{"lineNumber":184,"author":{"gitId":"lerxuann"},"content":"- INDEX is the index of the specified task in the displayed task list","lastModifiedDate":"2023-09-20"},{"lineNumber":185,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":186,"author":{"gitId":"lerxuann"},"content":"Example input:","lastModifiedDate":"2023-09-20"},{"lineNumber":187,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":188,"author":{"gitId":"lerxuann"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":189,"author":{"gitId":"lerxuann"},"content":"delete 1","lastModifiedDate":"2023-09-20"},{"lineNumber":190,"author":{"gitId":"lerxuann"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":191,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":192,"author":{"gitId":"lerxuann"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":193,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":194,"author":{"gitId":"lerxuann"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":195,"author":{"gitId":"lerxuann"},"content":"Looks like you have more time to sleep now. Deleted this for you:","lastModifiedDate":"2023-09-20"},{"lineNumber":196,"author":{"gitId":"lerxuann"},"content":"  [] cs2103t assignment","lastModifiedDate":"2023-09-20"},{"lineNumber":197,"author":{"gitId":"lerxuann"},"content":"You now have 2 things to do.","lastModifiedDate":"2023-09-20"},{"lineNumber":198,"author":{"gitId":"lerxuann"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":199,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":200,"author":{"gitId":"lerxuann"},"content":"### Finding a task - `find`","lastModifiedDate":"2023-09-20"},{"lineNumber":201,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":202,"author":{"gitId":"lerxuann"},"content":"Finds tasks with a description containing any of the given keywords","lastModifiedDate":"2023-09-20"},{"lineNumber":203,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":204,"author":{"gitId":"lerxuann"},"content":"Command format: ","lastModifiedDate":"2023-09-20"},{"lineNumber":205,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":206,"author":{"gitId":"lerxuann"},"content":"`find DESCRIPTION`","lastModifiedDate":"2023-09-20"},{"lineNumber":207,"author":{"gitId":"lerxuann"},"content":"- DESCRIPTION is a description of your event task","lastModifiedDate":"2023-09-20"},{"lineNumber":208,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":209,"author":{"gitId":"lerxuann"},"content":"Example input:","lastModifiedDate":"2023-09-20"},{"lineNumber":210,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":211,"author":{"gitId":"lerxuann"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":212,"author":{"gitId":"lerxuann"},"content":"find assignment","lastModifiedDate":"2023-09-20"},{"lineNumber":213,"author":{"gitId":"lerxuann"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":217,"author":{"gitId":"lerxuann"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":218,"author":{"gitId":"lerxuann"},"content":"Why can\u0027t you find them yourself? Here, the matching tasks:","lastModifiedDate":"2023-09-20"},{"lineNumber":219,"author":{"gitId":"lerxuann"},"content":"1. [T][ ] japanese assignment","lastModifiedDate":"2023-09-20"},{"lineNumber":220,"author":{"gitId":"lerxuann"},"content":"2. [D][ ] cs2103t assignment (by: Sep 22 2023 2359)","lastModifiedDate":"2023-09-20"},{"lineNumber":221,"author":{"gitId":"lerxuann"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":222,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":223,"author":{"gitId":"lerxuann"},"content":"### Exiting the program - `bye`","lastModifiedDate":"2023-09-20"},{"lineNumber":224,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":225,"author":{"gitId":"lerxuann"},"content":"Exits the program","lastModifiedDate":"2023-09-20"},{"lineNumber":226,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":227,"author":{"gitId":"lerxuann"},"content":"Command format: ","lastModifiedDate":"2023-09-20"},{"lineNumber":228,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":229,"author":{"gitId":"lerxuann"},"content":"`bye`","lastModifiedDate":"2023-09-20"},{"lineNumber":230,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":231,"author":{"gitId":"lerxuann"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":233,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":234,"author":{"gitId":"lerxuann"},"content":"Finally. Don\u0027t come back!","lastModifiedDate":"2023-09-20"},{"lineNumber":235,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"lerxuann":217,"-":18}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lerxuann"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"lerxuann"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"lerxuann"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"lerxuann"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"lerxuann"},"content":" * Overall Duke class encapsulating the duke bot, Chatty.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"lerxuann"},"content":" * @author Goh Ler Xuan","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"lerxuann"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"lerxuann"},"content":"public class Duke {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"lerxuann"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"lerxuann"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"lerxuann"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"lerxuann"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"lerxuann"},"content":"     * Constructor for the Duke bot.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"lerxuann"},"content":"     * @param filePath Path to data file with saved tasks from user\u0027s previous sessions","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"lerxuann"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"lerxuann"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"lerxuann"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"lerxuann"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"lerxuann"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"lerxuann"},"content":"            tasks \u003d new TaskList(storage.loadData());","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"lerxuann"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"lerxuann"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"lerxuann"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"lerxuann"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"lerxuann"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"lerxuann"},"content":"     * Parses input commands and returns corresponding responses.","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"lerxuann"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"lerxuann"},"content":"     * @param input command","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"lerxuann"},"content":"     * @return response to input command","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"lerxuann"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"lerxuann"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"lerxuann"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"lerxuann"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"lerxuann"},"content":"            return c.execute(tasks, ui, storage);","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"lerxuann"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"lerxuann"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"lerxuann"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"lerxuann"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"lerxuann":45}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lerxuann"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"lerxuann"},"content":"import duke.command.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"lerxuann"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"lerxuann"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"lerxuann"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"lerxuann"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"lerxuann"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"lerxuann"},"content":" * Parses user\u0027s commands.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"lerxuann"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"lerxuann"},"content":"public class Parser {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"lerxuann"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"lerxuann"},"content":"     * Adds user\u0027s inputs into the task list and throws any errors encountered.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"lerxuann"},"content":"     * @param str User\u0027s command","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"lerxuann"},"content":"     * @return Command","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"lerxuann"},"content":"     * @throws DukeException incorrect user inputs","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"lerxuann"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"lerxuann"},"content":"    public static Command addToList(String str) throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"lerxuann"},"content":"        if (str.startsWith(\"todo \")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"lerxuann"},"content":"            if (str.length() \u003c\u003d 5) {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"lerxuann"},"content":"                throw new DukeException(\"So um, what exactly do you need to do?\"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"lerxuann"},"content":"                        + \"Add it as the description of the todo.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"lerxuann"},"content":"            } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"lerxuann"},"content":"                return new AddToDoCommand(str.substring(5));","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"lerxuann"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"lerxuann"},"content":"        } else if (str.startsWith(\"event \")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"lerxuann"},"content":"            if (str.length() \u003c\u003d 47) {","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"lerxuann"},"content":"                throw new DukeException(\"So um, what exactly do you have?\"","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"lerxuann"},"content":"                        + \" I need a description and the /from /to dates, please.\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"lerxuann"},"content":"                        + \"(eg. Holiday /from 2023-12-07 1800 /to 2023-12-20 1800)\");","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"lerxuann"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"lerxuann"},"content":"            if (!str.contains(\" /from \") || !str.contains(\" /to \")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"lerxuann"},"content":"                throw new DukeException(\"When\u0027s the event? Write it explicitly. \"","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"lerxuann"},"content":"                        + \"(eg. Holiday /from 2023-12-07 1800 /to 2023-12-20 1800)\");","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"lerxuann"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"lerxuann"},"content":"            int indexFrom \u003d str.lastIndexOf(\"/from\");","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"lerxuann"},"content":"            int indexTo \u003d str.lastIndexOf(\"/to\");","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"lerxuann"},"content":"            if (indexTo \u003c indexFrom) {","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"lerxuann"},"content":"                throw new DukeException(\"\u0027from\u0027 comes before \u0027to\u0027... \"","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"lerxuann"},"content":"                        + \"(eg. Holiday /from 2023-12-07 1800 /to 2023-12-20 1800)\");","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"lerxuann"},"content":"            }","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"lerxuann"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"lerxuann"},"content":"                return new AddEventCommand(str.substring(6, indexFrom - 1),","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"lerxuann"},"content":"                        LocalDateTime.parse(str.substring(indexFrom + 6, indexTo - 1),","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"lerxuann"},"content":"                                DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")),","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"lerxuann"},"content":"                        LocalDateTime.parse(str.substring(indexTo + 4),","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"lerxuann"},"content":"                                DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")));","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"lerxuann"},"content":"            } catch (DateTimeParseException parseError) {","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"lerxuann"},"content":"                throw new DukeException(\"Enter a proper date in the YYYY-MM-DD format.\"","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"lerxuann"},"content":"                        + \"(eg. Holiday /from 2023-12-07 1800 /to 2023-12-20 1800)\");","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"lerxuann"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"lerxuann"},"content":"        } else if (str.startsWith(\"deadline \")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"lerxuann"},"content":"            if (str.length() \u003c\u003d 28) {","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"lerxuann"},"content":"                throw new DukeException(\"What are your task details? I need a description and a /by date, please.\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"lerxuann"},"content":"                        + \"(eg. Assignment /by 2023-12-12 1800)\");","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"lerxuann"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"lerxuann"},"content":"            if (!str.contains(\" /by \")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"lerxuann"},"content":"                throw new DukeException(\"When\u0027s the deadline? Write it explicitly.\"","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"lerxuann"},"content":"                        + \"(eg. Assignment /by 2023-12-12 1800)\");","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"lerxuann"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"lerxuann"},"content":"            int indexBy \u003d str.lastIndexOf(\"/by\");","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"lerxuann"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"lerxuann"},"content":"                return new AddDeadlineCommand(str.substring(9, indexBy - 1),","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"lerxuann"},"content":"                        LocalDateTime.parse(str.substring(indexBy + 4),","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"lerxuann"},"content":"                                DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")));","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"lerxuann"},"content":"            } catch (DateTimeParseException parseError) {","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"lerxuann"},"content":"                throw new DukeException(\"Enter a proper date in the YYYY-MM-DD format.\"","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"lerxuann"},"content":"                        + \"(eg. Assignment /by 2023-12-12 1800)\");","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"lerxuann"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"lerxuann"},"content":"        } else if (str.startsWith(\"mark\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"lerxuann"},"content":"            throw new DukeException(\"Specify the task number after the word \u0027mark\u0027, please. I can\u0027t read minds.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"lerxuann"},"content":"        } else if (str.startsWith(\"unmark\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"lerxuann"},"content":"            throw new DukeException(\"Specify the task number after the word \u0027unmark\u0027, please. I can\u0027t read minds.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"lerxuann"},"content":"        } else if (str.startsWith(\"delete\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"lerxuann"},"content":"            throw new DukeException(\"Specify the task number after the word \u0027delete\u0027, please. I can\u0027t read minds.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"lerxuann"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"lerxuann"},"content":"            throw new DukeException(\"Uncivilised speech. Please try again with words I can understand.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"lerxuann"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"lerxuann"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"lerxuann"},"content":"     * Parses user inputs and produces the respective result.","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"lerxuann"},"content":"     * @param command user input","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"lerxuann"},"content":"     * @return Command","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"lerxuann"},"content":"     * @throws DukeException incorrect user input","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"lerxuann"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"lerxuann"},"content":"    public static Command parse(String command) throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"lerxuann"},"content":"        assert (command !\u003d null) : \"command should not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":91,"author":{"gitId":"lerxuann"},"content":"        assert (command.length() \u003e 0) : \"command should not be empty\";","lastModifiedDate":"2023-09-14"},{"lineNumber":92,"author":{"gitId":"lerxuann"},"content":"        if (command.equals(\"bye\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"lerxuann"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"lerxuann"},"content":"        } else if (command.equals(\"help\")) {","lastModifiedDate":"2023-09-15"},{"lineNumber":95,"author":{"gitId":"lerxuann"},"content":"            return new HelpCommand();","lastModifiedDate":"2023-09-15"},{"lineNumber":96,"author":{"gitId":"lerxuann"},"content":"        } else if (command.equals(\"list\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"lerxuann"},"content":"            return new ListCommand();","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"lerxuann"},"content":"        } else if (command.startsWith(\"mark \") \u0026\u0026 command.length() \u003e 5) {","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"lerxuann"},"content":"            return new MarkCommand(command.substring(5));","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"lerxuann"},"content":"        } else if (command.startsWith(\"unmark \") \u0026\u0026 command.length() \u003e 7) {","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"lerxuann"},"content":"            return new UnmarkCommand(command.substring(7));","lastModifiedDate":"2023-09-20"},{"lineNumber":102,"author":{"gitId":"lerxuann"},"content":"        } else if (command.startsWith(\"delete \") \u0026\u0026 command.length() \u003e 7) {","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"lerxuann"},"content":"            return new DeleteCommand(command.substring(7));","lastModifiedDate":"2023-09-20"},{"lineNumber":104,"author":{"gitId":"lerxuann"},"content":"        } else if (command.startsWith(\"find \") \u0026\u0026 command.length() \u003e 5) {","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"lerxuann"},"content":"            return new FindCommand(command.substring(5));","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"lerxuann"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"lerxuann"},"content":"            return addToList(command);","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"lerxuann"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"lerxuann"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"lerxuann":110}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lerxuann"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"lerxuann"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"lerxuann"},"content":"import java.io.File;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"lerxuann"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"lerxuann"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"lerxuann"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"lerxuann"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"lerxuann"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"lerxuann"},"content":" * Writes and reads from the bot\u0027s save files.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"lerxuann"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"lerxuann"},"content":"public class Storage {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"lerxuann"},"content":"    /** Contains path to save file **/","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"lerxuann"},"content":"    private File saveFile;","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"lerxuann"},"content":"    private String filePath;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"lerxuann"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"lerxuann"},"content":"     * Constructor for Storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"lerxuann"},"content":"     * @param filePath path to save file","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"lerxuann"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"lerxuann"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"lerxuann"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"lerxuann"},"content":"        this.saveFile \u003d new File(filePath);","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"lerxuann"},"content":"        if (!saveFile.exists()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"lerxuann"},"content":"            try {","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"lerxuann"},"content":"                saveFile.getParentFile().mkdirs();","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"lerxuann"},"content":"                saveFile.createNewFile();","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"lerxuann"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"lerxuann"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"lerxuann"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"lerxuann"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"lerxuann"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"lerxuann"},"content":"     * Reads data of tasks from save file.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"lerxuann"},"content":"     * @return ArrayList containing all tasks in a String array","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"lerxuann"},"content":"     * @throws DukeException for errors that occur while reading from save file","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"lerxuann"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"lerxuann"},"content":"    public ArrayList\u003cString[]\u003e loadData() throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"lerxuann"},"content":"        ArrayList\u003cString[]\u003e stringList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"lerxuann"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"lerxuann"},"content":"            Scanner sc \u003d new Scanner(new File(this.filePath));","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"lerxuann"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"lerxuann"},"content":"                String[] line \u003d sc.nextLine().split(\"\\\\|\");","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"lerxuann"},"content":"                for (int i \u003d 0; i \u003c line.length; i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"lerxuann"},"content":"                    line[i] \u003d line[i].strip();","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"lerxuann"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"lerxuann"},"content":"                stringList.add(line);","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"lerxuann"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"lerxuann"},"content":"            sc.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"lerxuann"},"content":"            return stringList;","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"lerxuann"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"lerxuann"},"content":"            throw new DukeException(\"Error loading tasks from data file.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"lerxuann"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"lerxuann"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"lerxuann"},"content":"     * Writes list of tasks into a save file.","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"lerxuann"},"content":"     * @param inputList tasks to be written to file","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"lerxuann"},"content":"     * @throws DukeException for errors that occur while writing to save file","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"lerxuann"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"lerxuann"},"content":"    public void writeData(String[] inputList) throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"lerxuann"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"lerxuann"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"lerxuann"},"content":"            assert (fw !\u003d null) : \"Filewriter should not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":68,"author":{"gitId":"lerxuann"},"content":"            for (String t: inputList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"lerxuann"},"content":"                fw.write(t.strip() + \"\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"lerxuann"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"lerxuann"},"content":"            fw.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"lerxuann"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"lerxuann"},"content":"            throw new DukeException(\"Error writing tasks to file.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"lerxuann"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"lerxuann"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"lerxuann":76}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lerxuann"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"lerxuann"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"lerxuann"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"lerxuann"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"lerxuann"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"lerxuann"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"lerxuann"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"lerxuann"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"lerxuann"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"lerxuann"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"lerxuann"},"content":" * Data structure that stores the bot\u0027s tasks,","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"lerxuann"},"content":" * along with its operations to manipulate the data structure.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"lerxuann"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"lerxuann"},"content":"public class TaskList {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"lerxuann"},"content":"    /** ArrayList stores bot\u0027s tasks. **/","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"lerxuann"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"lerxuann"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"lerxuann"},"content":"     * Constructor for Tasklist with initial tasks read from saved file.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"lerxuann"},"content":"     * @param inputList String array containing tasks from saved file","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"lerxuann"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"lerxuann"},"content":"    public TaskList(ArrayList\u003cString[]\u003e inputList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"lerxuann"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"lerxuann"},"content":"        for (String[] line : inputList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"lerxuann"},"content":"            assert (line[0].equals(\"T\") || line[0].equals(\"D\") || line[0].equals(\"E\")) : \"save file in incorrect format\";","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"lerxuann"},"content":"            switch (line[0]) {","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"lerxuann"},"content":"            case \"T\":","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"lerxuann"},"content":"                ToDo t \u003d new ToDo(line[2]);","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"lerxuann"},"content":"                if (line[1].equals(\"1\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"lerxuann"},"content":"                    t.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"lerxuann"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"lerxuann"},"content":"                tasks.add(t);","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"lerxuann"},"content":"                break;","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"lerxuann"},"content":"            case \"D\":","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"lerxuann"},"content":"                Deadline d \u003d new Deadline(line[2],","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"lerxuann"},"content":"                        LocalDateTime.parse(line[3], DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")));","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"lerxuann"},"content":"                if (line[1].equals(\"1\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"lerxuann"},"content":"                    d.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"lerxuann"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"lerxuann"},"content":"                tasks.add(d);","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"lerxuann"},"content":"                break;","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"lerxuann"},"content":"            case \"E\":","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"lerxuann"},"content":"                Event e \u003d new Event(line[2],","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"lerxuann"},"content":"                        LocalDateTime.parse(line[3], DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")),","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"lerxuann"},"content":"                        LocalDateTime.parse(line[4], DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")));","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"lerxuann"},"content":"                if (line[1].equals(\"1\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"lerxuann"},"content":"                    e.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"lerxuann"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"lerxuann"},"content":"                tasks.add(e);","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"lerxuann"},"content":"                break;","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"lerxuann"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"lerxuann"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"lerxuann"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"lerxuann"},"content":"     * Constructor for empty tasklist.","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"lerxuann"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"lerxuann"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"lerxuann"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"lerxuann"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"lerxuann"},"content":"     * Deletes specified task from memory.","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"lerxuann"},"content":"     * @param index Task number to be deleted","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"lerxuann"},"content":"     * @throws DukeException errors that occur due to invalid user input","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"lerxuann"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"lerxuann"},"content":"    public String delete(int index) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"lerxuann"},"content":"        if (index \u003c 0 || index \u003e tasks.size()-1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"lerxuann"},"content":"            throw new DukeException(\"Wow, deleting a nonexistent task? Check your tasks again with \u0027list\u0027.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"lerxuann"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"lerxuann"},"content":"        Task t \u003d tasks.get(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"lerxuann"},"content":"        tasks.remove(t);","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"lerxuann"},"content":"        String returnLine \u003d \"Looks like you have more time to sleep now. Deleted this for you:\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"lerxuann"},"content":"                + t.toString()","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"lerxuann"},"content":"                + \"\\nYou now have \" + tasks.size() + \" things to do.\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"lerxuann"},"content":"        return returnLine;","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"lerxuann"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"lerxuann"},"content":"     * Adds a new Deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"lerxuann"},"content":"     * @param task Deadline to be added","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"lerxuann"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"lerxuann"},"content":"    public void addDeadline(Deadline task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"lerxuann"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"lerxuann"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"lerxuann"},"content":"     * Adds a new Event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"lerxuann"},"content":"     * @param task Event to be added","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"lerxuann"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"lerxuann"},"content":"    public void addEvent(Event task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"lerxuann"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"lerxuann"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"lerxuann"},"content":"     * Adds a new ToDo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"lerxuann"},"content":"     * @param task ToDo to be added","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"lerxuann"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"lerxuann"},"content":"    public void addToDo(ToDo task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"lerxuann"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"lerxuann"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"lerxuann"},"content":"     * Adds a new Task into the tasklist.","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"lerxuann"},"content":"     * @param task Task to be added","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"lerxuann"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"lerxuann"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"lerxuann"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"lerxuann"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"lerxuann"},"content":"     * Retrieves specified task from tasklist","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"lerxuann"},"content":"     * @param index task number to be retrieved","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"lerxuann"},"content":"     * @return task specified","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"lerxuann"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"lerxuann"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"lerxuann"},"content":"        return tasks.get(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"lerxuann"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"lerxuann"},"content":"     * Returns number of tasks in tasklist","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"lerxuann"},"content":"     * @return number of tasks in tasklist","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"lerxuann"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"lerxuann"},"content":"    public int getLength() {","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"lerxuann"},"content":"        return tasks.size();","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"lerxuann"},"content":"    @Override","lastModifiedDate":"2023-09-20"},{"lineNumber":132,"author":{"gitId":"lerxuann"},"content":"    public String toString() {","lastModifiedDate":"2023-09-20"},{"lineNumber":133,"author":{"gitId":"lerxuann"},"content":"        StringBuilder returnMessage \u003d new StringBuilder();","lastModifiedDate":"2023-09-20"},{"lineNumber":134,"author":{"gitId":"lerxuann"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2023-09-20"},{"lineNumber":135,"author":{"gitId":"lerxuann"},"content":"            Task t \u003d tasks.get(i-1);","lastModifiedDate":"2023-09-20"},{"lineNumber":136,"author":{"gitId":"lerxuann"},"content":"            returnMessage.append(i).append(\". \").append(t.toString()).append(\"\\n\");","lastModifiedDate":"2023-09-20"},{"lineNumber":137,"author":{"gitId":"lerxuann"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":138,"author":{"gitId":"lerxuann"},"content":"        return returnMessage.toString().trim();","lastModifiedDate":"2023-09-20"},{"lineNumber":139,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":140,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":141,"author":{"gitId":"lerxuann"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":142,"author":{"gitId":"lerxuann"},"content":"     * Returns a string representation of the tasks in the tasklist.","lastModifiedDate":"2023-09-01"},{"lineNumber":143,"author":{"gitId":"lerxuann"},"content":"     * @return Tasks to write into save file","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"lerxuann"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":145,"author":{"gitId":"lerxuann"},"content":"    public String[] toWriteString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"lerxuann"},"content":"        String[] writtenTasks \u003d new String[tasks.size()];","lastModifiedDate":"2023-09-01"},{"lineNumber":147,"author":{"gitId":"lerxuann"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":148,"author":{"gitId":"lerxuann"},"content":"            writtenTasks[i] \u003d tasks.get(i).toWriteString();","lastModifiedDate":"2023-09-01"},{"lineNumber":149,"author":{"gitId":"lerxuann"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":150,"author":{"gitId":"lerxuann"},"content":"        return writtenTasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":151,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":152,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":153,"author":{"gitId":"lerxuann"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"lerxuann":153}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lerxuann"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"lerxuann"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"lerxuann"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"lerxuann"},"content":" * Interface that users interact with.","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"lerxuann"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"lerxuann"},"content":"public class Ui {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"lerxuann"},"content":"    private final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"lerxuann"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"lerxuann"},"content":"     * Prints a goodbye message when users close the bot.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"lerxuann"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"lerxuann"},"content":"    public String bidGoodbye() {","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"lerxuann"},"content":"        return \"Finally. Don\u0027t come back!\";","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"lerxuann"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"lerxuann"},"content":"     * Prints lines to inform user that there are no saved tasks in the data.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"lerxuann"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"lerxuann"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"lerxuann"},"content":"        System.out.println(\"Unable to find tasks in saved data.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"lerxuann"},"content":"        System.out.println(\"Creating new data file with empty list of tasks.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"lerxuann"},"content":"        System.out.println(\"Aren\u0027t you glad you have me to keep track of everything your tiny mind can\u0027t?\");","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"lerxuann"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"lerxuann":27}},{"path":"src/main/java/duke/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lerxuann"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"lerxuann"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"lerxuann"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"lerxuann"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"lerxuann"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"lerxuann"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"lerxuann"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"lerxuann"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"lerxuann"},"content":"    String description;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"lerxuann"},"content":"    LocalDateTime by;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"lerxuann"},"content":"    public AddDeadlineCommand(String description, LocalDateTime by) {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"lerxuann"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"lerxuann"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"lerxuann"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"lerxuann"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"lerxuann"},"content":"        Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"lerxuann"},"content":"        tasks.addDeadline(deadline);","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"lerxuann"},"content":"        storage.writeData(tasks.toWriteString());","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"lerxuann"},"content":"        String returnMessage \u003d \"Ok. Your tasklist has grown longer with this addition:\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"lerxuann"},"content":"                + deadline.toString()","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"lerxuann"},"content":"                + \"\\nYou now have \" + tasks.getLength() + \" things to do.\"","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"lerxuann"},"content":"                + \"\\nI\u0027m sure you\u0027re dying to finish them.\";","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"lerxuann"},"content":"        return returnMessage;","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"lerxuann"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"lerxuann":30}},{"path":"src/main/java/duke/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lerxuann"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"lerxuann"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"lerxuann"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"lerxuann"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"lerxuann"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"lerxuann"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"lerxuann"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"lerxuann"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"lerxuann"},"content":"    String description;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"lerxuann"},"content":"    LocalDateTime from;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"lerxuann"},"content":"    LocalDateTime to;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"lerxuann"},"content":"    public AddEventCommand(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"lerxuann"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"lerxuann"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"lerxuann"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"lerxuann"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"lerxuann"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"lerxuann"},"content":"        Event event \u003d new Event(description, from, to);","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"lerxuann"},"content":"        tasks.addEvent(event);","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"lerxuann"},"content":"        storage.writeData(tasks.toWriteString());","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"lerxuann"},"content":"        String returnMessage \u003d \"Ok. Your tasklist has grown longer with this addition:\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"lerxuann"},"content":"                + event.toString()","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"lerxuann"},"content":"                + \"\\nYou now have \" + tasks.getLength() + \" things to do.\"","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"lerxuann"},"content":"                + \"\\nI\u0027m sure you\u0027re dying to finish them.\";","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"lerxuann"},"content":"        return returnMessage;","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"lerxuann"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"lerxuann":32}},{"path":"src/main/java/duke/command/AddToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lerxuann"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"lerxuann"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"lerxuann"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"lerxuann"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"lerxuann"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"lerxuann"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"lerxuann"},"content":"public class AddToDoCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"lerxuann"},"content":"    String description;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"lerxuann"},"content":"    public AddToDoCommand(String description) {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"lerxuann"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"lerxuann"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"lerxuann"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"lerxuann"},"content":"        ToDo todo \u003d new ToDo(description);","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"lerxuann"},"content":"        tasks.addToDo(todo);","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"lerxuann"},"content":"        storage.writeData(tasks.toWriteString());","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"lerxuann"},"content":"        String returnMessage \u003d \"Ok. Your tasklist has grown longer with this addition:\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"lerxuann"},"content":"                + todo.toString()","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"lerxuann"},"content":"                + \"\\nYou now have \" + tasks.getLength() + \" things to do.\"","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"lerxuann"},"content":"                + \"\\nI\u0027m sure you\u0027re dying to finish them.\";","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"lerxuann"},"content":"        return returnMessage;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"lerxuann"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"lerxuann":26}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lerxuann"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"lerxuann"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"lerxuann"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"lerxuann"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"lerxuann"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"lerxuann"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"lerxuann"},"content":" * Abstract class for Duke commands.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"lerxuann"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"lerxuann"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"lerxuann"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"lerxuann"},"content":"     * Executes the user command.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"lerxuann"},"content":"     * @param taskList TaskList of the session","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"lerxuann"},"content":"     * @param ui Ui of the session","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"lerxuann"},"content":"     * @param storage Storage of the session","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"lerxuann"},"content":"     * @throws DukeException if errors occur","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"lerxuann"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"lerxuann"},"content":"    public abstract String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"lerxuann"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"lerxuann"},"content":"     * Returns if app should quit after executing this command.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"lerxuann"},"content":"     * @return true if user inputs \"bye\", false otherwise","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"lerxuann"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"lerxuann"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-14"},{"lineNumber":26,"author":{"gitId":"lerxuann"},"content":"        return false;","lastModifiedDate":"2023-09-14"},{"lineNumber":27,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":28,"author":{"gitId":"lerxuann"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"lerxuann":28}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lerxuann"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"lerxuann"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"lerxuann"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"lerxuann"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"lerxuann"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"lerxuann"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"lerxuann"},"content":"    int index;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"lerxuann"},"content":"    public DeleteCommand(String cmd) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"lerxuann"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"lerxuann"},"content":"            int index \u003d Integer.parseInt(cmd);","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"lerxuann"},"content":"            this.index \u003d index-1;","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"lerxuann"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"lerxuann"},"content":"            throw new DukeException(\"Specify your task number clearly. (eg. delete 1)\");","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"lerxuann"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"lerxuann"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"lerxuann"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"lerxuann"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"lerxuann"},"content":"            String deleteMessage \u003d tasks.delete(index);","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"lerxuann"},"content":"            storage.writeData(tasks.toWriteString());","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"lerxuann"},"content":"            return deleteMessage;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"lerxuann"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"lerxuann"},"content":"            throw new DukeException(\"Wow, that\u0027s a nonexistent task. Knew I shouldn\u0027t have put it past you. \"","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"lerxuann"},"content":"                    + \"Check your tasks again with \u0027list\u0027.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"lerxuann"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"lerxuann"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"lerxuann":30}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lerxuann"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"lerxuann"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"lerxuann"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"lerxuann"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"lerxuann"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"lerxuann"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"lerxuann"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"lerxuann"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"lerxuann"},"content":"        return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"lerxuann"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"lerxuann"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"lerxuann"},"content":"        return ui.bidGoodbye();","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"lerxuann"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"lerxuann":18}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lerxuann"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"lerxuann"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"lerxuann"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"lerxuann"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"lerxuann"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"lerxuann"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"lerxuann"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"lerxuann"},"content":"    String word;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"lerxuann"},"content":"    public FindCommand(String word) {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"lerxuann"},"content":"        this.word \u003d word;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"lerxuann"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"lerxuann"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"lerxuann"},"content":"        TaskList newList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"lerxuann"},"content":"        for (int i \u003d 0; i \u003c tasks.getLength(); i++) {","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"lerxuann"},"content":"            Task t \u003d tasks.getTask(i);","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"lerxuann"},"content":"            if (t.getDescription().contains(word)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"lerxuann"},"content":"                newList.addTask(t);","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"lerxuann"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"lerxuann"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"lerxuann"},"content":"        String returnMessage \u003d \"Why can\u0027t you find them yourself? Here, the matching tasks:\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"lerxuann"},"content":"                + newList.toString();","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"lerxuann"},"content":"        return returnMessage;","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"lerxuann"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"lerxuann":29}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lerxuann"},"content":"package duke.command;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"lerxuann"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"lerxuann"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"lerxuann"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"lerxuann"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"lerxuann"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"lerxuann"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"lerxuann"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"lerxuann"},"content":"        return \"I\u0027m Chatty, here to help you with your ever-growing list of things to do. \"","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"lerxuann"},"content":"                + \"I have a list of pretty handy commands:\\n\"","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"lerxuann"},"content":"                + \"help: displays the list of commands available, as well as how to use them\\n\"","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"lerxuann"},"content":"                + \"list: lists all the tasks you currently have recorded here\\n\"","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"lerxuann"},"content":"                + \"todo \u003cdescription\u003e: create a new Todo task\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"lerxuann"},"content":"                + \"event \u003cdescription\u003e /from \u003cyyyy-mm-dd HHMM\u003e /to \u003cyyyy-mm-dd HHMM\u003e: \"","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"lerxuann"},"content":"                + \"create a new Event task from \u003ctime\u003e to \u003ctime\u003e\\n\"","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"lerxuann"},"content":"                + \"deadline \u003cdescription\u003e /by \u003cyyyy-mm-dd HHMM\u003e: create a new Deadline task to do by \u003ctime\u003e\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"lerxuann"},"content":"                + \"mark \u003cnumber\u003e: mark the task \u003cnumber\u003e as done\\n\"","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"lerxuann"},"content":"                + \"unmark \u003cnumber\u003e: mark the task \u003cnumber\u003e as incomplete\\n\"","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"lerxuann"},"content":"                + \"delete \u003cnumber\u003e: delete task \u003cnumber\u003e on your list\\n\"","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"lerxuann"},"content":"                + \"find \u003cdescription\u003e: fetches all tasks that match the specified \u003cdescription\u003e given. \"","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"lerxuann"},"content":"                + \"It\u0027s just a search function.\\n\"","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"lerxuann"},"content":"                + \"You\u0027ll forget this, so just type \u0027help\u0027 whenever you need it.\";","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"lerxuann"},"content":"}","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"lerxuann":27}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lerxuann"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"lerxuann"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"lerxuann"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"lerxuann"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"lerxuann"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"lerxuann"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"lerxuann"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"lerxuann"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"lerxuann"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"lerxuann"},"content":"        String returnMessage \u003d \"Looking at your tasks again to remind yourself is good,\"","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"lerxuann"},"content":"                + \" but remember to actually do them:\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"lerxuann"},"content":"                + tasks.toString();","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"lerxuann"},"content":"        return returnMessage;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"lerxuann"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"lerxuann":18}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lerxuann"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"lerxuann"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"lerxuann"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"lerxuann"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"lerxuann"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"lerxuann"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"lerxuann"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"lerxuann"},"content":"    int index;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"lerxuann"},"content":"    public MarkCommand(String cmd) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"lerxuann"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"lerxuann"},"content":"            int idx \u003d Integer.parseInt(cmd);","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"lerxuann"},"content":"            this.index \u003d idx-1;","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"lerxuann"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"lerxuann"},"content":"            throw new DukeException(\"Specify your task number clearly. (eg. mark 1)\");","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"lerxuann"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"lerxuann"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"lerxuann"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"lerxuann"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"lerxuann"},"content":"            String returnMessage \u003d tasks.getTask(index).markAsDone();","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"lerxuann"},"content":"            storage.writeData(tasks.toWriteString());","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"lerxuann"},"content":"            return returnMessage;","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"lerxuann"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"lerxuann"},"content":"            throw new DukeException(\"Nonexistent task, though I wouldn\u0027t be surprised if you did something \"","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"lerxuann"},"content":"                    + \"you didn\u0027t need to do all this time. \"","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"lerxuann"},"content":"                    + \"Check your tasks again with \u0027list\u0027.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"lerxuann"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"lerxuann"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"lerxuann":33}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lerxuann"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"lerxuann"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"lerxuann"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"lerxuann"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"lerxuann"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"lerxuann"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"lerxuann"},"content":"    int index;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"lerxuann"},"content":"    public UnmarkCommand(String cmd) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"lerxuann"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"lerxuann"},"content":"            int index \u003d Integer.parseInt(cmd);","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"lerxuann"},"content":"            this.index \u003d index-1;","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"lerxuann"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"lerxuann"},"content":"            throw new DukeException(\"Specify your task number clearly. (eg. unmark 1)\");","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"lerxuann"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"lerxuann"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"lerxuann"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"lerxuann"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"lerxuann"},"content":"            String returnMessage \u003d tasks.getTask(index).markAsUndone();","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"lerxuann"},"content":"            storage.writeData(tasks.toWriteString());","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"lerxuann"},"content":"            return returnMessage;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"lerxuann"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"lerxuann"},"content":"            throw new DukeException(\"Wow, that\u0027s a nonexistent task. Check your tasks again with \u0027list\u0027.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"lerxuann"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"lerxuann"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"lerxuann":29}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lerxuann"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"lerxuann"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"lerxuann"},"content":" * General Exception of the chat bot.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"lerxuann"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"lerxuann"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"lerxuann"},"content":"    private String message;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"lerxuann"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"lerxuann"},"content":"     * Constructor for DukeException.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"lerxuann"},"content":"     * @param message error message for the exception","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"lerxuann"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"lerxuann"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"lerxuann"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"lerxuann"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"lerxuann":18}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lerxuann"},"content":"package duke.gui;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"lerxuann"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"lerxuann"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"lerxuann"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"lerxuann"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"lerxuann"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"lerxuann"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"lerxuann"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"lerxuann"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"lerxuann"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"lerxuann"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"lerxuann"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"lerxuann"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"lerxuann"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"lerxuann"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"lerxuann"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"lerxuann"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"lerxuann"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"lerxuann"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"lerxuann"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"lerxuann"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"lerxuann"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"lerxuann"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"lerxuann"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"lerxuann"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"lerxuann"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"lerxuann"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"lerxuann"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"lerxuann"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"lerxuann"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"lerxuann"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"lerxuann"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"lerxuann"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"lerxuann"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"lerxuann"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"lerxuann"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"lerxuann"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"lerxuann"},"content":"    private void flip() {","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"lerxuann"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"lerxuann"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"lerxuann"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"lerxuann"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"lerxuann"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"lerxuann"},"content":"        DialogBox dialogBox \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"lerxuann"},"content":"        dialogBox.setStyle(\"-fx-background-color: #91DCEE;\"","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"lerxuann"},"content":"                + \"-fx-background-radius: 20px;\" + \"-fx-background-radius: 30px;\");","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"lerxuann"},"content":"        return dialogBox;","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"lerxuann"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"lerxuann"},"content":"        DialogBox dialogBox \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"lerxuann"},"content":"        dialogBox.setStyle(\"-fx-background-color: #F2BBE2;\"","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"lerxuann"},"content":"                + \"-fx-background-radius: 20px;\" + \"-fx-background-radius: 30px;\");","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"lerxuann"},"content":"        dialogBox.flip();","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"lerxuann"},"content":"        return dialogBox;","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"lerxuann"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"lerxuann":66}},{"path":"src/main/java/duke/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lerxuann"},"content":"package duke.gui;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"lerxuann"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"lerxuann"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"lerxuann"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"lerxuann"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"lerxuann"},"content":"public class Launcher {","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"lerxuann"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"lerxuann"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"lerxuann"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"lerxuann":12}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lerxuann"},"content":"package duke.gui;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"lerxuann"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"lerxuann"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"lerxuann"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"lerxuann"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"lerxuann"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"lerxuann"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"lerxuann"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"lerxuann"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"lerxuann"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"lerxuann"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"lerxuann"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"lerxuann"},"content":"    private Duke duke \u003d new Duke(\"./data/tasks.txt\");","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"lerxuann"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"lerxuann"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"lerxuann"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"lerxuann"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"lerxuann"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"lerxuann"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"lerxuann"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"lerxuann"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"lerxuann"},"content":"            stage.show();","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"lerxuann"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"lerxuann"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"lerxuann"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"lerxuann"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"lerxuann":32}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lerxuann"},"content":"package duke.gui;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"lerxuann"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"lerxuann"},"content":"import duke.gui.DialogBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"lerxuann"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"lerxuann"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"lerxuann"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"lerxuann"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"lerxuann"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"lerxuann"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"lerxuann"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"lerxuann"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"lerxuann"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"lerxuann"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"lerxuann"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"lerxuann"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"lerxuann"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"lerxuann"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"lerxuann"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"lerxuann"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"lerxuann"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"lerxuann"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"lerxuann"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"lerxuann"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"lerxuann"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"lerxuann"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"lerxuann"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"lerxuann"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"lerxuann"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"lerxuann"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"lerxuann"},"content":"                DialogBox.getDukeDialog(\"Hi, I\u0027m Chatty!\\nIf you\u0027re new, type \u0027help\u0027 to get started.\", dukeImage)","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"lerxuann"},"content":"        );","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"lerxuann"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"lerxuann"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"lerxuann"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"lerxuann"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"lerxuann"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"lerxuann"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"lerxuann"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"lerxuann"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"lerxuann"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"lerxuann"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"lerxuann"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"lerxuann"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"lerxuann"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"lerxuann"},"content":"        );","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"lerxuann"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"lerxuann"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"lerxuann":56}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lerxuann"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"lerxuann"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"lerxuann"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"lerxuann"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"lerxuann"},"content":" * A Deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"lerxuann"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"lerxuann"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"lerxuann"},"content":"    /** The datetime of the deadline of the task **/","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"lerxuann"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"lerxuann"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"lerxuann"},"content":"     * Constructor for Deadline instance.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"lerxuann"},"content":"     * @param description String description of deadline","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"lerxuann"},"content":"     * @param by datetime of the deadline","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"lerxuann"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"lerxuann"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"lerxuann"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"lerxuann"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"lerxuann"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"lerxuann"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"lerxuann"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\")) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"lerxuann"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"lerxuann"},"content":"     * Returns string representation of task to be written into save file.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"lerxuann"},"content":"     * @return string representation of task","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"lerxuann"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"lerxuann"},"content":"    public String toWriteString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"lerxuann"},"content":"        return \"D | \" + super.toWriteString() + \" | \" + this.by.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"lerxuann"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"lerxuann":35}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lerxuann"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"lerxuann"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"lerxuann"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"lerxuann"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"lerxuann"},"content":" * An Event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"lerxuann"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"lerxuann"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"lerxuann"},"content":"    /** Datetime of start and end of Event. **/","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"lerxuann"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"lerxuann"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"lerxuann"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"lerxuann"},"content":"     * Constructor of the Event instance.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"lerxuann"},"content":"     * @param description string description","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"lerxuann"},"content":"     * @param from Datetime of start of event","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"lerxuann"},"content":"     * @param to Datetime of end of event","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"lerxuann"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"lerxuann"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"lerxuann"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"lerxuann"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"lerxuann"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"lerxuann"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"lerxuann"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"lerxuann"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\"))","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"lerxuann"},"content":"                + \" to: \" + this.to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\")) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"lerxuann"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"lerxuann"},"content":"     * Returns string representation of task to be written into save file.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"lerxuann"},"content":"     * @return string representation of task","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"lerxuann"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"lerxuann"},"content":"    public String toWriteString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"lerxuann"},"content":"        return \"E | \" + super.toWriteString() + \" | \"","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"lerxuann"},"content":"                + this.from.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")) + \" | \"","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"lerxuann"},"content":"                + this.to.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"lerxuann"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"lerxuann":41}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lerxuann"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"lerxuann"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"lerxuann"},"content":" * A task, its description and its done status.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"lerxuann"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"lerxuann"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"lerxuann"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"lerxuann"},"content":"     * Stores description and done status of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"lerxuann"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"lerxuann"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"lerxuann"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"lerxuann"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"lerxuann"},"content":"     * Constructor for a new Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"lerxuann"},"content":"     * @param description Description of a task","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"lerxuann"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"lerxuann"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"lerxuann"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"lerxuann"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"lerxuann"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"lerxuann"},"content":"     * Returns a string representation of the task\u0027s done status","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"lerxuann"},"content":"     * @return \"X\" if done, \" \" if not done","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"lerxuann"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"lerxuann"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"lerxuann"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"lerxuann"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"lerxuann"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"lerxuann"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"lerxuann"},"content":"    public String markAsDone() {","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"lerxuann"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"lerxuann"},"content":"        return \"Someone\u0027s productive. Marked it done for you:\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"lerxuann"},"content":"                + \" [\" + this.getStatusIcon() + \"] \" + this.description + \"\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"lerxuann"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"lerxuann"},"content":"     * Marks the task as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"lerxuann"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"lerxuann"},"content":"    public String markAsUndone() {","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"lerxuann"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"lerxuann"},"content":"        return \"What happened to being productive? Marked it as not done yet:\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"lerxuann"},"content":"                + \" [\" + this.getStatusIcon() + \"] \" + this.description + \"\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"lerxuann"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"lerxuann"},"content":"     * Returns a string representation of the task description.","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"lerxuann"},"content":"     * @return string representation of task description","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"lerxuann"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"lerxuann"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"lerxuann"},"content":"        return this.description;","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"lerxuann"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"lerxuann"},"content":"     * Returns a string representation of a task\u0027s done status and its description.","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"lerxuann"},"content":"     * @return string representation of task","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"lerxuann"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"lerxuann"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"lerxuann"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"lerxuann"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"lerxuann"},"content":"     * Returns string representation of task to be written into save file.","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"lerxuann"},"content":"     * @return string representation of task","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"lerxuann"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"lerxuann"},"content":"    public String toWriteString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"lerxuann"},"content":"        int mark \u003d (this.isDone ? 1 : 0);","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"lerxuann"},"content":"        return mark + \" | \" + this.description;","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"lerxuann"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"lerxuann":72}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lerxuann"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"lerxuann"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"lerxuann"},"content":" * A ToDo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"lerxuann"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"lerxuann"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"lerxuann"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"lerxuann"},"content":"     * Constructor for ToDo instance.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"lerxuann"},"content":"     * @param description string description","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"lerxuann"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"lerxuann"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"lerxuann"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"lerxuann"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"lerxuann"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"lerxuann"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"lerxuann"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"lerxuann"},"content":"     * Returns string representation of task to be written into save file.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"lerxuann"},"content":"     * @return string representation of task","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"lerxuann"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"lerxuann"},"content":"    public String toWriteString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"lerxuann"},"content":"        return \"T | \" + super.toWriteString();","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"lerxuann"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"lerxuann":28}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lerxuann"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"lerxuann"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"lerxuann"},"content":"\u003c?import javafx.scene.control.Accordion?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"lerxuann"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"lerxuann"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"lerxuann"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"lerxuann"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"lerxuann"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"lerxuann"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"lerxuann"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"77.0\" fitWidth\u003d\"81.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"lerxuann"},"content":"      \u003cAccordion /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"lerxuann"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"lerxuann"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"lerxuann"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"lerxuann"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"lerxuann"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"lerxuann":18}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lerxuann"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"lerxuann"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"lerxuann"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"lerxuann"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"lerxuann"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"lerxuann"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"lerxuann"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"lerxuann"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"lerxuann"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"lerxuann"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"lerxuann"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"lerxuann"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"lerxuann"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"lerxuann"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"lerxuann"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"lerxuann"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"lerxuann"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"lerxuann":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lerxuann"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"lerxuann"},"content":"import duke.command.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"lerxuann"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"lerxuann"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"lerxuann"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"lerxuann"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"lerxuann"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"lerxuann"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"lerxuann"},"content":"    void testParser() throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"lerxuann"},"content":"        assertTrue(Parser.parse(\"bye\") instanceof ExitCommand);","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"lerxuann"},"content":"        assertTrue(Parser.parse(\"list\") instanceof ListCommand);","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"lerxuann"},"content":"        assertTrue(Parser.parse(\"delete 1\") instanceof DeleteCommand);","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"lerxuann"},"content":"        assertTrue(Parser.parse(\"mark 2\") instanceof MarkCommand);","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"lerxuann"},"content":"        assertTrue(Parser.parse(\"unmark 4\") instanceof UnmarkCommand);","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"lerxuann"},"content":"        assertTrue(Parser.parse(\"todo CS2103 iP\") instanceof AddToDoCommand);","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"lerxuann"},"content":"        assertTrue(Parser.parse(\"deadline ST2334 tutorial /by 2023-09-01 1400\") instanceof AddDeadlineCommand);","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"lerxuann"},"content":"        assertTrue(Parser.parse(\"event Mom\u0027s birthday /from 2023-08-17 0000 /to 2023-08-17 2359\") instanceof AddEventCommand);","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"lerxuann"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"lerxuann":21}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lerxuann"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"lerxuann"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"lerxuann"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"lerxuann"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"lerxuann"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"lerxuann"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"lerxuann"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"lerxuann"},"content":"    public void testTaskListInitialisation() {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"lerxuann"},"content":"        ArrayList\u003cString[]\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"lerxuann"},"content":"        list.add(new String[]{\"T\", \"0\", \"CS2103 iP\"});","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"lerxuann"},"content":"        list.add(new String[]{\"E\", \"0\", \"Mom\u0027s birthday\", \"2023-08-17 0000\", \"2023-08-17 2359\"});","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"lerxuann"},"content":"        list.add(new String[]{\"D\", \"1\", \"ST2334 Tutorial\", \"2023-09-01 1400\"});","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"lerxuann"},"content":"        TaskList taskList \u003d new TaskList(list);","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"lerxuann"},"content":"        assertEquals(taskList.getLength(), 3);","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"lerxuann"},"content":"        assertEquals(taskList.getTask(0).toString(), \"[T][ ] CS2103 iP\");","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"lerxuann"},"content":"        assertEquals(taskList.getTask(2).toString(), \"[D][X] ST2334 Tutorial (by: Sep 1 2023 1400)\");","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"lerxuann"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"lerxuann"},"content":"    public void testDeleteTask() throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"lerxuann"},"content":"        ArrayList\u003cString[]\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"lerxuann"},"content":"        list.add(new String[]{\"T\", \"0\", \"CS2103 iP\"});","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"lerxuann"},"content":"        list.add(new String[]{\"E\", \"0\", \"Mom\u0027s birthday\", \"2023-08-17 0000\", \"2023-08-17 2359\"});","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"lerxuann"},"content":"        list.add(new String[]{\"D\", \"1\", \"ST2334 Tutorial\", \"2023-09-01 1400\"});","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"lerxuann"},"content":"        TaskList taskList \u003d new TaskList(list);","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"lerxuann"},"content":"        assertEquals(taskList.getTask(1).toString(),","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"lerxuann"},"content":"                \"[E][ ] Mom\u0027s birthday (from: Aug 17 2023 0000 to: Aug 17 2023 2359)\");","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"lerxuann"},"content":"        taskList.delete(1);","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"lerxuann"},"content":"        assertEquals(taskList.getLength(), 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"lerxuann"},"content":"        assertEquals(taskList.getTask(1).toString(), \"[D][X] ST2334 Tutorial (by: Sep 1 2023 1400)\");","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"lerxuann"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"lerxuann":35}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lerxuann"},"content":"todo sleep","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"lerxuann"},"content":"event slept /from 5pm /to 9am","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"lerxuann"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"lerxuann"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"lerxuann"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"lerxuann"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"lerxuann"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"lerxuann":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"lerxuann"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lerxuann":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"lerxuann"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lerxuann":1,"-":33}}]
