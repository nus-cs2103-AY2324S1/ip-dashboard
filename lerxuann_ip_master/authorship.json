[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lerxuann"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"lerxuann"},"content":"    protected String by;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"lerxuann"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"lerxuann"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"lerxuann"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"lerxuann"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"lerxuann"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"lerxuann"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"lerxuann"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"lerxuann":12}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lerxuann"},"content":"import java.util.*;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"lerxuann"},"content":"    static boolean isEnd \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"lerxuann"},"content":"    static List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"lerxuann"},"content":"    static String greeting \u003d \"______________________________________\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"lerxuann"},"content":"            + \"Hi, I\u0027m Chatty\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"lerxuann"},"content":"            + \"What do you need to do today?\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"lerxuann"},"content":"            + \"______________________________________\";","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"lerxuann"},"content":"    static String goodbye \u003d \"______________________________________\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"lerxuann"},"content":"            + \"Bye. Don\u0027t come back!\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"lerxuann"},"content":"            + \"______________________________________\";","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"lerxuann"},"content":"    static void removeFromList(int index) throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"lerxuann"},"content":"        if (index \u003c 0 || index \u003e taskList.size()-1) {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"lerxuann"},"content":"            throw new DukeException(\"Wow, deleting a nonexistent task? Check your tasks again with \u0027list\u0027.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"lerxuann"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"lerxuann"},"content":"        Task t \u003d taskList.get(index);","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"lerxuann"},"content":"        taskList.remove(t);","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"lerxuann"},"content":"        String returnLine \u003d \"______________________________________\\n\"","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"lerxuann"},"content":"                + \"Looks like you have more time to sleep now. Deleted this for you:\\n\"","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"lerxuann"},"content":"                + t.toString()","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"lerxuann"},"content":"                + \"\\nYou now have \" + taskList.size() + \" things to do.\\n\"","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"lerxuann"},"content":"                + \"______________________________________\\n\";","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"lerxuann"},"content":"        System.out.println(returnLine);","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"lerxuann"},"content":"    static void addToList(String str) throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"lerxuann"},"content":"        Task t \u003d null;","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"lerxuann"},"content":"        if (str.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"lerxuann"},"content":"            if (str.length() \u003c\u003d 5) {","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"lerxuann"},"content":"                throw new DukeException(\"So um, what exactly do you need to do? Add it as the description of the todo.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"lerxuann"},"content":"            } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"lerxuann"},"content":"                t \u003d new ToDo(str.substring(5));","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"lerxuann"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"lerxuann"},"content":"        } else if (str.startsWith(\"event\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"lerxuann"},"content":"            if (str.length() \u003c\u003d 6) {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"lerxuann"},"content":"                throw new DukeException(\"So um, what exactly do you have? Add it as the description of the event.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"lerxuann"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"lerxuann"},"content":"            int indexFrom \u003d str.lastIndexOf(\"/from\");","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"lerxuann"},"content":"            int indexTo \u003d str.lastIndexOf(\"/to\");","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"lerxuann"},"content":"            t \u003d new Event(str.substring(6, indexFrom-1),","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"lerxuann"},"content":"                    str.substring(indexFrom+6, indexTo-1), str.substring(indexTo+4));","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"lerxuann"},"content":"        } else if (str.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"lerxuann"},"content":"            if (str.length() \u003c\u003d 9) {","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"lerxuann"},"content":"                throw new DukeException(\"So um, what exactly do you need to do? Add it as the description of the deadline.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"lerxuann"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"lerxuann"},"content":"            int indexBy \u003d str.lastIndexOf(\"/by\");","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"lerxuann"},"content":"            t \u003d new Deadline(str.substring(9, indexBy-1), str.substring(indexBy+4));","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"lerxuann"},"content":"        } else if (str.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"lerxuann"},"content":"            throw new DukeException(\"Specify the task number after the word \u0027mark\u0027, please. I can\u0027t read minds.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"lerxuann"},"content":"        } else if (str.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"lerxuann"},"content":"            throw new DukeException(\"Specify the task number after the word \u0027unmark\u0027, please. I can\u0027t read minds.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"lerxuann"},"content":"        } else if (str.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"lerxuann"},"content":"            throw new DukeException(\"Specify the task number after the word \u0027delete\u0027, please. I can\u0027t read minds.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"lerxuann"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"lerxuann"},"content":"        if (t \u003d\u003d null) {","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"lerxuann"},"content":"            throw new DukeException(\"Uncivilised speech. Please try again with words I can understand.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"lerxuann"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"lerxuann"},"content":"            taskList.add(t);","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"lerxuann"},"content":"            String returnLine \u003d \"______________________________________\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"lerxuann"},"content":"                    + \"Ok. Your tasklist has grown longer with this addition:\\n\"","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"lerxuann"},"content":"                    + t.toString()","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"lerxuann"},"content":"                    + \"\\nYou now have \" + taskList.size() + \" things to do.\\n\"","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"lerxuann"},"content":"                    + \"______________________________________\\n\";","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"lerxuann"},"content":"            System.out.println(returnLine);","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"lerxuann"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"lerxuann"},"content":"    static void listTasks() {","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"lerxuann"},"content":"        System.out.println(\"______________________________________\");","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"lerxuann"},"content":"        for (int i\u003d1; i\u003c\u003dtaskList.size(); i++) {","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"lerxuann"},"content":"            Task t \u003d taskList.get((i-1));","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"lerxuann"},"content":"            System.out.format(\"%d. \" + t.toString() + \"\\n\", i);","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"lerxuann"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"lerxuann"},"content":"        System.out.println(\"______________________________________\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":78,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":79,"author":{"gitId":"lerxuann"},"content":"    static boolean awaitCommand(String command) {","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"lerxuann"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"lerxuann"},"content":"            if (command.equals(\"bye\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"lerxuann"},"content":"                isEnd \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":83,"author":{"gitId":"lerxuann"},"content":"            } else if (command.equals(\"list\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":84,"author":{"gitId":"lerxuann"},"content":"                listTasks();","lastModifiedDate":"2023-08-23"},{"lineNumber":85,"author":{"gitId":"lerxuann"},"content":"            } else if (command.startsWith(\"mark\") \u0026\u0026 command.length() \u003e 5) {","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"lerxuann"},"content":"                int index \u003d Integer.parseInt(command.substring(5));","lastModifiedDate":"2023-08-23"},{"lineNumber":87,"author":{"gitId":"lerxuann"},"content":"                if (index \u003c\u003d 0 || index \u003e taskList.size()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"lerxuann"},"content":"                    throw new DukeException(\"Wow, that\u0027s a nonexistent task. Check your tasks again with \u0027list\u0027.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"lerxuann"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"lerxuann"},"content":"                taskList.get(index-1).markAsDone();","lastModifiedDate":"2023-08-23"},{"lineNumber":91,"author":{"gitId":"lerxuann"},"content":"            } else if (command.startsWith(\"unmark\") \u0026\u0026 command.length() \u003e 7) {","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"lerxuann"},"content":"                int index \u003d Integer.parseInt(command.substring(7));","lastModifiedDate":"2023-08-23"},{"lineNumber":93,"author":{"gitId":"lerxuann"},"content":"                if (index \u003c\u003d 0 || index \u003e taskList.size()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"lerxuann"},"content":"                    throw new DukeException(\"Wow, that\u0027s a nonexistent task. Check your tasks again with \u0027list\u0027.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"lerxuann"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"lerxuann"},"content":"                taskList.get(index-1).markAsUndone();","lastModifiedDate":"2023-08-23"},{"lineNumber":97,"author":{"gitId":"lerxuann"},"content":"            } else if (command.startsWith(\"delete\") \u0026\u0026 command.length() \u003e 7) {","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"lerxuann"},"content":"                int index \u003d Integer.parseInt(command.substring(7));","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"lerxuann"},"content":"                removeFromList(index-1);","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"lerxuann"},"content":"            } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":101,"author":{"gitId":"lerxuann"},"content":"                addToList(command);","lastModifiedDate":"2023-08-23"},{"lineNumber":102,"author":{"gitId":"lerxuann"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":103,"author":{"gitId":"lerxuann"},"content":"            return true;","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"lerxuann"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":105,"author":{"gitId":"lerxuann"},"content":"            System.out.println(\"______________________________________\\n\");","lastModifiedDate":"2023-08-24"},{"lineNumber":106,"author":{"gitId":"lerxuann"},"content":"            e.printMessage();","lastModifiedDate":"2023-08-24"},{"lineNumber":107,"author":{"gitId":"lerxuann"},"content":"            System.out.println(\"______________________________________\\n\");","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"lerxuann"},"content":"        } finally {","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"lerxuann"},"content":"            return true;","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"lerxuann"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":112,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"lerxuann"},"content":"        System.out.println(greeting);","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"lerxuann"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"lerxuann"},"content":"        while (isEnd \u003d\u003d false) {","lastModifiedDate":"2023-08-24"},{"lineNumber":117,"author":{"gitId":"lerxuann"},"content":"            String command \u003d sc.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":118,"author":{"gitId":"lerxuann"},"content":"            awaitCommand(command);","lastModifiedDate":"2023-08-24"},{"lineNumber":119,"author":{"gitId":"lerxuann"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":120,"author":{"gitId":"lerxuann"},"content":"        System.out.println(goodbye);","lastModifiedDate":"2023-08-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"lerxuann":118,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lerxuann"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"lerxuann"},"content":"    private String message;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"lerxuann"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"lerxuann"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"lerxuann"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"lerxuann"},"content":"    public void printMessage() {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"lerxuann"},"content":"        System.out.println(this.message);","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"lerxuann"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"lerxuann":11}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lerxuann"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"lerxuann"},"content":"    protected String from;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"lerxuann"},"content":"    protected String to;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"lerxuann"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"lerxuann"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"lerxuann"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"lerxuann"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"lerxuann"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"lerxuann"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"lerxuann"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"lerxuann"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"lerxuann":14}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lerxuann"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"lerxuann"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"lerxuann"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"lerxuann"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"lerxuann"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"lerxuann"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"lerxuann"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"lerxuann"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"lerxuann"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"lerxuann"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"lerxuann"},"content":"        System.out.format(\"______________________________________\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"lerxuann"},"content":"        + \"Someone\u0027s productive. Marked it done for you:\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"lerxuann"},"content":"        + \" [%s]\" + \" %s\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"lerxuann"},"content":"        + \"______________________________________\\n\", this.getStatusIcon(), this.description);","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"lerxuann"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"lerxuann"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"lerxuann"},"content":"        System.out.format(\"______________________________________\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"lerxuann"},"content":"                + \"What happened to being productive? Marked it as not done yet:\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"lerxuann"},"content":"                + \" [%s]\" + \" %s\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"lerxuann"},"content":"                + \"______________________________________\\n\", this.getStatusIcon(), this.description);","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"lerxuann"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"lerxuann"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"lerxuann"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"lerxuann":33}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lerxuann"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"lerxuann"},"content":"    protected String by;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"lerxuann"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"lerxuann"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"lerxuann"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"lerxuann"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"lerxuann"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"lerxuann"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"lerxuann":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lerxuann"},"content":"todo sleep","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"lerxuann"},"content":"event slept /from 5pm /to 9am","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"lerxuann"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"lerxuann"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"lerxuann"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"lerxuann"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"lerxuann"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"lerxuann":7}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"lerxuann"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lerxuann":1,"-":33}}]
