[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"inezkok"},"content":"# duke.Duke project template","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"inezkok"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"inezkok":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"inezkok"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"inezkok"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"inezkok":2,"-":41}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"inezkok"},"content":"[T] [X] read book","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"inezkok"},"content":"[D] [ ] return book (by: Jun 06 2023)","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"inezkok"},"content":"[E] [X] orientation week (from: Jul 31 2023 to: Aug 04 2023)","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"inezkok"},"content":"[T] [ ] create new study playlist","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"inezkok":4}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"inezkok"},"content":"package duke;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"inezkok"},"content":"import duke.command.Command;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"inezkok"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"inezkok"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"inezkok"},"content":" * The Duke program is a chatbot named Beep Boop Bot that","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"inezkok"},"content":" * executes commands to create and edit a tasklist.","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"inezkok"},"content":" *","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"inezkok"},"content":" * @author Inez Kok","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"inezkok"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"inezkok"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"inezkok"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"inezkok"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"inezkok"},"content":"     * This is the constructor for a Duke.","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"inezkok"},"content":"     * @param filePath This is the string representaion of the file path used to store the TaskList.","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"inezkok"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"inezkok"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"inezkok"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"inezkok"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"inezkok"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"inezkok"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"inezkok"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"inezkok"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"inezkok"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"inezkok"},"content":"     * This method is used to run the Duke program.","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"inezkok"},"content":"     * @return Nothing.","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"inezkok"},"content":"    public void run() {","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"inezkok"},"content":"        ui.printGreetingMessage();","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":41,"author":{"gitId":"inezkok"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"inezkok"},"content":"        while(!isExit) {","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"inezkok"},"content":"            try {","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"inezkok"},"content":"                String input \u003d ui.readCommand();","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"inezkok"},"content":"                Command c \u003d Parser.parse(input, tasks.size());","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"inezkok"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"inezkok"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"inezkok"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-20"},{"lineNumber":49,"author":{"gitId":"inezkok"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"inezkok"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":51,"author":{"gitId":"inezkok"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":52,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":53,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"inezkok"},"content":"     * This is the main method which makes use of the run method.","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"inezkok"},"content":"     * @param args Unused.","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"inezkok"},"content":"     * @return Nothing.","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"inezkok"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"inezkok":59,"-":4}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"inezkok"},"content":"package duke;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"inezkok"},"content":"import duke.command.*;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"inezkok"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"inezkok"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"inezkok"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"inezkok"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"inezkok"},"content":" * The Parser class deals with making sense of the user command.","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"inezkok"},"content":" *","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"inezkok"},"content":" * @author Inez Kok","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"inezkok"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"inezkok"},"content":"public class Parser {","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"inezkok"},"content":"     * This method is used to parse through user command and make sense of it.","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"inezkok"},"content":"     * @param input This is the user input.","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"inezkok"},"content":"     * @param size This is the size of the current task list.","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"inezkok"},"content":"     * @return Command This returns the respective command based on user input.","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"inezkok"},"content":"     * @throws DukeException On input error.","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"inezkok"},"content":"    public static Command parse(String input, int size) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"inezkok"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"inezkok"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"inezkok"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"inezkok"},"content":"            return new ListCommand();","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"inezkok"},"content":"        } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"inezkok"},"content":"            String number \u003d input.replaceFirst(\"mark\", \"\").trim();","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"inezkok"},"content":"            validateMarkOrUnmarkorDelete(number, size);","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"inezkok"},"content":"            int index \u003d Integer.parseInt(number);","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"inezkok"},"content":"            return new MarkDoneCommand(index);","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"inezkok"},"content":"        } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"inezkok"},"content":"            String number \u003d input.replaceFirst(\"unmark\", \"\").trim();","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"inezkok"},"content":"            validateMarkOrUnmarkorDelete(number, size);","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"inezkok"},"content":"            int index \u003d Integer.parseInt(number);","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"inezkok"},"content":"            return new UnmarkDoneCommand(index);","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"inezkok"},"content":"        } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"inezkok"},"content":"            String description \u003d input.replaceFirst(\"todo\", \"\").trim();","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"inezkok"},"content":"            validateToDo(description);","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"inezkok"},"content":"            return new AddToDoCommand(description);","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"inezkok"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"inezkok"},"content":"            String[] deadlineString \u003d input.replaceFirst(\"deadline\", \"\")","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"inezkok"},"content":"                    .split(\"/\", 2);","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"inezkok"},"content":"            validateDeadline(deadlineString);","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"inezkok"},"content":"            String deadlineDate \u003d deadlineString[1].replaceFirst(\"by\", \"\").trim();","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"inezkok"},"content":"            validateDate(deadlineDate);","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"inezkok"},"content":"            String description \u003d deadlineString[0].trim();","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"inezkok"},"content":"            LocalDate d \u003d LocalDate.parse(deadlineDate);","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"inezkok"},"content":"            return new AddDeadlineCommand(description, d);","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"inezkok"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"inezkok"},"content":"            String[] eventString \u003d input.replaceFirst(\"event\", \"\").split(\"/\", 3);","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"inezkok"},"content":"            validateEvent(eventString);","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"inezkok"},"content":"            String start \u003d eventString[1].replaceFirst(\"from\", \"\").trim();","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"inezkok"},"content":"            String end \u003d eventString[2].replaceFirst(\"to\", \"\").trim();","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"inezkok"},"content":"            validateDate(start);","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"inezkok"},"content":"            validateDate(end);","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"inezkok"},"content":"            String description \u003d eventString[0].trim();","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"inezkok"},"content":"            LocalDate d1 \u003d LocalDate.parse(start);","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"inezkok"},"content":"            LocalDate d2 \u003d LocalDate.parse(end);","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"inezkok"},"content":"            return new AddEventCommand(description, d1, d2);","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"inezkok"},"content":"        } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"inezkok"},"content":"            String number \u003d input.replaceFirst(\"delete\", \"\").trim();","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"inezkok"},"content":"            validateMarkOrUnmarkorDelete(number, size);","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"inezkok"},"content":"            int index \u003d Integer.parseInt(number);","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"inezkok"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"inezkok"},"content":"        } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"inezkok"},"content":"            String keyword \u003d input.replaceFirst(\"find\", \"\").trim();","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"inezkok"},"content":"            validateFind(keyword);","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"inezkok"},"content":"            return new FindCommand(keyword);","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"inezkok"},"content":"        } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"inezkok"},"content":"            throw new DukeException(\"Boop Beep OOPS! I\u0027m sorry, but I don\u0027t know what that means :(\");","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"inezkok"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":86,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"inezkok"},"content":"     * This method is used to check whether the user input for mark,","lastModifiedDate":"2023-08-28"},{"lineNumber":88,"author":{"gitId":"inezkok"},"content":"     * unmark or delete commands is valid.","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"inezkok"},"content":"     * @param number The string representation of the one-based index of task.","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"inezkok"},"content":"     * @param size The size of the current task list.","lastModifiedDate":"2023-08-28"},{"lineNumber":92,"author":{"gitId":"inezkok"},"content":"     * @throws DukeException On input error.","lastModifiedDate":"2023-08-28"},{"lineNumber":93,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":94,"author":{"gitId":"inezkok"},"content":"    private static void validateMarkOrUnmarkorDelete(String number, int size) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":95,"author":{"gitId":"inezkok"},"content":"        if (number.isBlank()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":96,"author":{"gitId":"inezkok"},"content":"            throw new DukeException(\"Boop Beep OOPS! Please make sure that the index of the task is not empty.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":97,"author":{"gitId":"inezkok"},"content":"        } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":98,"author":{"gitId":"inezkok"},"content":"            try {","lastModifiedDate":"2023-08-28"},{"lineNumber":99,"author":{"gitId":"inezkok"},"content":"                int numberInt \u003d Integer.parseInt(number);","lastModifiedDate":"2023-08-28"},{"lineNumber":100,"author":{"gitId":"inezkok"},"content":"                if (numberInt \u003c\u003d 0 || numberInt \u003e size) {","lastModifiedDate":"2023-08-28"},{"lineNumber":101,"author":{"gitId":"inezkok"},"content":"                    throw new DukeException(\"Boop Beep OOPS! Please make sure that\"","lastModifiedDate":"2023-08-28"},{"lineNumber":102,"author":{"gitId":"inezkok"},"content":"                            + \" the index of the task is within range.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":103,"author":{"gitId":"inezkok"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":104,"author":{"gitId":"inezkok"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":105,"author":{"gitId":"inezkok"},"content":"                throw new DukeException(\"Boop Beep OOPS! Please make sure that the index of the task is an integer.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":106,"author":{"gitId":"inezkok"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":107,"author":{"gitId":"inezkok"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":108,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":109,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":110,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":111,"author":{"gitId":"inezkok"},"content":"     * This method is used to check whether the user input for creating a todo is valid.","lastModifiedDate":"2023-08-28"},{"lineNumber":112,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":113,"author":{"gitId":"inezkok"},"content":"     * @param description The string representation of the todo description.","lastModifiedDate":"2023-08-28"},{"lineNumber":114,"author":{"gitId":"inezkok"},"content":"     * @throws DukeException On input error.","lastModifiedDate":"2023-08-28"},{"lineNumber":115,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":116,"author":{"gitId":"inezkok"},"content":"    private static void validateToDo(String description) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":117,"author":{"gitId":"inezkok"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":118,"author":{"gitId":"inezkok"},"content":"            throw new DukeException(\"Boop Beep OOPS! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":119,"author":{"gitId":"inezkok"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":120,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":121,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":122,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":123,"author":{"gitId":"inezkok"},"content":"     * This method is used to check whether the user input for creating a deadline is valid.","lastModifiedDate":"2023-08-28"},{"lineNumber":124,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":125,"author":{"gitId":"inezkok"},"content":"     * @param deadlineString The array of string representations of the parameters of a Deadline.","lastModifiedDate":"2023-08-28"},{"lineNumber":126,"author":{"gitId":"inezkok"},"content":"     * @throws DukeException On input error.","lastModifiedDate":"2023-08-28"},{"lineNumber":127,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":128,"author":{"gitId":"inezkok"},"content":"    private static void validateDeadline(String[] deadlineString) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":129,"author":{"gitId":"inezkok"},"content":"        if (deadlineString.length !\u003d 2 || deadlineString[0].isBlank() || deadlineString[1].isBlank()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":130,"author":{"gitId":"inezkok"},"content":"            throw new DukeException(\"Boop Beep OOPS! Please make sure that\"","lastModifiedDate":"2023-08-28"},{"lineNumber":131,"author":{"gitId":"inezkok"},"content":"                    + \" the description and date of the deadline is not empty.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":132,"author":{"gitId":"inezkok"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":133,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":134,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":135,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":136,"author":{"gitId":"inezkok"},"content":"     * This method is used to check whether the user input for creating a event is valid.","lastModifiedDate":"2023-08-28"},{"lineNumber":137,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":138,"author":{"gitId":"inezkok"},"content":"     * @param eventString The array of string representations of the parameters of an Event.","lastModifiedDate":"2023-08-28"},{"lineNumber":139,"author":{"gitId":"inezkok"},"content":"     * @throws DukeException On input error.","lastModifiedDate":"2023-08-28"},{"lineNumber":140,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":141,"author":{"gitId":"inezkok"},"content":"    private static void validateEvent(String[] eventString) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":142,"author":{"gitId":"inezkok"},"content":"        if (eventString.length !\u003d 3 || eventString[0].isBlank() || eventString[1].isBlank() ||","lastModifiedDate":"2023-08-28"},{"lineNumber":143,"author":{"gitId":"inezkok"},"content":"                eventString[2].isBlank()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":144,"author":{"gitId":"inezkok"},"content":"            throw new DukeException(\"Boop Beep OOPS! Please make sure that\"","lastModifiedDate":"2023-08-28"},{"lineNumber":145,"author":{"gitId":"inezkok"},"content":"                    + \" the description and dates of the event is not empty.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":146,"author":{"gitId":"inezkok"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":147,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":148,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":149,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":150,"author":{"gitId":"inezkok"},"content":"     * This method is used to check whether the user input for a Date is valid.","lastModifiedDate":"2023-08-28"},{"lineNumber":151,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":152,"author":{"gitId":"inezkok"},"content":"     * @param date The string representation of the date.","lastModifiedDate":"2023-08-28"},{"lineNumber":153,"author":{"gitId":"inezkok"},"content":"     * @throws DukeException On format error of String date.","lastModifiedDate":"2023-08-28"},{"lineNumber":154,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":155,"author":{"gitId":"inezkok"},"content":"    private static void validateDate(String date) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":156,"author":{"gitId":"inezkok"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":157,"author":{"gitId":"inezkok"},"content":"            LocalDate d \u003d LocalDate.parse(date);","lastModifiedDate":"2023-08-28"},{"lineNumber":158,"author":{"gitId":"inezkok"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":159,"author":{"gitId":"inezkok"},"content":"            throw new DukeException(\"Boop Beep OOPS! Please check that the date is in YYYY-MM-DD format.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":160,"author":{"gitId":"inezkok"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":161,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":162,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":163,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":164,"author":{"gitId":"inezkok"},"content":"     * This method is used to check whether the keyword for the find command is valid.","lastModifiedDate":"2023-08-28"},{"lineNumber":165,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":166,"author":{"gitId":"inezkok"},"content":"     * @param keyword The keyword to be searched for.","lastModifiedDate":"2023-08-28"},{"lineNumber":167,"author":{"gitId":"inezkok"},"content":"     * @throws DukeException When keyword is blank.","lastModifiedDate":"2023-08-28"},{"lineNumber":168,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":169,"author":{"gitId":"inezkok"},"content":"    private static void validateFind(String keyword) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":170,"author":{"gitId":"inezkok"},"content":"        if (keyword.isBlank()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":171,"author":{"gitId":"inezkok"},"content":"            throw new DukeException(\"Boop Beep OOPS! Please check that you have entered a keyword.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":172,"author":{"gitId":"inezkok"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":173,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":174,"author":{"gitId":"inezkok"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"inezkok":174}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"inezkok"},"content":"package duke;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"inezkok"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"inezkok"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"inezkok"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"inezkok"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"inezkok"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"inezkok"},"content":"import java.io.File;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"inezkok"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"inezkok"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"inezkok"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"inezkok"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"inezkok"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"inezkok"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"inezkok"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"inezkok"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"inezkok"},"content":" * The Storage class deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"inezkok"},"content":" *","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"inezkok"},"content":" * @author Inez Kok","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"inezkok"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"inezkok"},"content":"public class Storage {","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"inezkok"},"content":"    private String filePath;","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"inezkok"},"content":"     * This is the constructor for a Storage.","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"inezkok"},"content":"     * @param filePath The string representation of the file path.","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"inezkok"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"inezkok"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"inezkok"},"content":"     * This method is used to check whether the string representation of a date is valid.","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"inezkok"},"content":"     * @param date The string representation of the date.","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"inezkok"},"content":"     * @throws DukeException On format error.","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"inezkok"},"content":"    private void validateDate(String date) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"inezkok"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"inezkok"},"content":"            LocalDate d \u003d LocalDate.parse(date);","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"inezkok"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"inezkok"},"content":"            throw new DukeException(\"Boop Beep OOPS! Please check that the date is in YYYY-MM-DD format.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"inezkok"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"inezkok"},"content":"     * This method is used to format the string representation of a date YYYY-MM-DD.","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"inezkok"},"content":"     * @param date The string representation of the date MMM DD YYYY.","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"inezkok"},"content":"     * @return Returns the string representation of a date YYYY-MM-DD.","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"inezkok"},"content":"    private String formatDate(String date) {","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"inezkok"},"content":"        String dateString \u003d date;","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"inezkok"},"content":"        String month \u003d dateString.substring(0, 3);","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"inezkok"},"content":"        String day \u003d dateString.substring(4, 6);","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"inezkok"},"content":"        String year \u003d dateString.substring(7, 11);","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"inezkok"},"content":"        if (month.equals(\"Jan\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"inezkok"},"content":"            month \u003d \"01\";","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"inezkok"},"content":"        } else if (month.equals(\"Feb\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"inezkok"},"content":"            month \u003d \"02\";","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"inezkok"},"content":"        } else if (month.equals(\"Mar\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"inezkok"},"content":"            month \u003d \"03\";","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"inezkok"},"content":"        } else if (month.equals(\"Apr\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"inezkok"},"content":"            month \u003d \"04\";","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"inezkok"},"content":"        } else if (month.equals(\"May\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"inezkok"},"content":"            month \u003d \"05\";","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"inezkok"},"content":"        } else if (month.equals(\"Jun\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"inezkok"},"content":"            month \u003d \"06\";","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"inezkok"},"content":"        } else if (month.equals(\"Jul\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"inezkok"},"content":"            month \u003d \"07\";","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"inezkok"},"content":"        } else if (month.equals(\"Aug\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"inezkok"},"content":"            month \u003d \"08\";","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"inezkok"},"content":"        } else if (month.equals(\"Sep\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"inezkok"},"content":"            month \u003d \"09\";","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"inezkok"},"content":"        } else if (month.equals(\"Oct\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"inezkok"},"content":"            month \u003d \"10\";","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"inezkok"},"content":"        } else if (month.equals(\"Nov\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"inezkok"},"content":"            month \u003d \"11\";","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"inezkok"},"content":"        } else if (month.equals(\"Dec\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"inezkok"},"content":"            month \u003d \"12\";","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"inezkok"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":86,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"inezkok"},"content":"        return String.format(\"%s-%s-%s\", year, month, day);","lastModifiedDate":"2023-08-28"},{"lineNumber":88,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"inezkok"},"content":"     * This method is used to load the list of tasks in the file.","lastModifiedDate":"2023-08-28"},{"lineNumber":92,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":93,"author":{"gitId":"inezkok"},"content":"     * @return Returns an array list of tasks.","lastModifiedDate":"2023-08-28"},{"lineNumber":94,"author":{"gitId":"inezkok"},"content":"     * @throws DukeException On corrupted values in file.","lastModifiedDate":"2023-08-28"},{"lineNumber":95,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":96,"author":{"gitId":"inezkok"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":97,"author":{"gitId":"inezkok"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":98,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":99,"author":{"gitId":"inezkok"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":100,"author":{"gitId":"inezkok"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2023-08-28"},{"lineNumber":101,"author":{"gitId":"inezkok"},"content":"            if (!f.exists()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":102,"author":{"gitId":"inezkok"},"content":"                return tasks;","lastModifiedDate":"2023-08-28"},{"lineNumber":103,"author":{"gitId":"inezkok"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":104,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":105,"author":{"gitId":"inezkok"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-08-28"},{"lineNumber":106,"author":{"gitId":"inezkok"},"content":"            int i \u003d 0;","lastModifiedDate":"2023-08-28"},{"lineNumber":107,"author":{"gitId":"inezkok"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":108,"author":{"gitId":"inezkok"},"content":"                String line \u003d s.nextLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":109,"author":{"gitId":"inezkok"},"content":"                String taskType \u003d line.substring(0, 3);","lastModifiedDate":"2023-08-28"},{"lineNumber":110,"author":{"gitId":"inezkok"},"content":"                String done \u003d line.substring(4, 7);","lastModifiedDate":"2023-08-28"},{"lineNumber":111,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":112,"author":{"gitId":"inezkok"},"content":"                if (taskType.equals(\"[T]\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":113,"author":{"gitId":"inezkok"},"content":"                    String description \u003d line.substring(8);","lastModifiedDate":"2023-08-28"},{"lineNumber":114,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":115,"author":{"gitId":"inezkok"},"content":"                    ToDo toDo \u003d new ToDo(description);","lastModifiedDate":"2023-08-28"},{"lineNumber":116,"author":{"gitId":"inezkok"},"content":"                    tasks.add(toDo);","lastModifiedDate":"2023-08-28"},{"lineNumber":117,"author":{"gitId":"inezkok"},"content":"                } else if (taskType.equals(\"[D]\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":118,"author":{"gitId":"inezkok"},"content":"                    String[] fullLine \u003d line.substring(8).split(\":\", 2);","lastModifiedDate":"2023-08-28"},{"lineNumber":119,"author":{"gitId":"inezkok"},"content":"                    String description \u003d fullLine[0];","lastModifiedDate":"2023-08-28"},{"lineNumber":120,"author":{"gitId":"inezkok"},"content":"                    String date \u003d fullLine[1];","lastModifiedDate":"2023-08-28"},{"lineNumber":121,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":122,"author":{"gitId":"inezkok"},"content":"                    String taskDate \u003d formatDate(date.substring(0, date.length()).trim());","lastModifiedDate":"2023-08-28"},{"lineNumber":123,"author":{"gitId":"inezkok"},"content":"                    validateDate(taskDate);","lastModifiedDate":"2023-08-28"},{"lineNumber":124,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":125,"author":{"gitId":"inezkok"},"content":"                    String taskDescription \u003d description.substring(0, description.length() - 3).trim();","lastModifiedDate":"2023-08-28"},{"lineNumber":126,"author":{"gitId":"inezkok"},"content":"                    LocalDate d \u003d LocalDate.parse(taskDate);","lastModifiedDate":"2023-08-28"},{"lineNumber":127,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":128,"author":{"gitId":"inezkok"},"content":"                    Deadline deadline \u003d new Deadline(taskDescription, d);","lastModifiedDate":"2023-08-28"},{"lineNumber":129,"author":{"gitId":"inezkok"},"content":"                    tasks.add(deadline);","lastModifiedDate":"2023-08-28"},{"lineNumber":130,"author":{"gitId":"inezkok"},"content":"                } else if (taskType.equals(\"[E]\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":131,"author":{"gitId":"inezkok"},"content":"                    String[] fullLine \u003d line.substring(8).split(\":\", 3);","lastModifiedDate":"2023-08-28"},{"lineNumber":132,"author":{"gitId":"inezkok"},"content":"                    String description \u003d fullLine[0];","lastModifiedDate":"2023-08-28"},{"lineNumber":133,"author":{"gitId":"inezkok"},"content":"                    String start \u003d fullLine[1];","lastModifiedDate":"2023-08-28"},{"lineNumber":134,"author":{"gitId":"inezkok"},"content":"                    String end \u003d fullLine[2];","lastModifiedDate":"2023-08-28"},{"lineNumber":135,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":136,"author":{"gitId":"inezkok"},"content":"                    String taskStart \u003d formatDate(start.substring(0, start.length() - 2).trim());","lastModifiedDate":"2023-08-28"},{"lineNumber":137,"author":{"gitId":"inezkok"},"content":"                    String taskEnd \u003d formatDate(end.substring(0, end.length() - 1).trim());","lastModifiedDate":"2023-08-28"},{"lineNumber":138,"author":{"gitId":"inezkok"},"content":"                    validateDate(taskStart);","lastModifiedDate":"2023-08-28"},{"lineNumber":139,"author":{"gitId":"inezkok"},"content":"                    validateDate(taskEnd);","lastModifiedDate":"2023-08-28"},{"lineNumber":140,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":141,"author":{"gitId":"inezkok"},"content":"                    String taskDescription \u003d description.substring(0, description.length() - 5).trim();","lastModifiedDate":"2023-08-28"},{"lineNumber":142,"author":{"gitId":"inezkok"},"content":"                    LocalDate d1 \u003d LocalDate.parse(taskStart);","lastModifiedDate":"2023-08-28"},{"lineNumber":143,"author":{"gitId":"inezkok"},"content":"                    LocalDate d2 \u003d LocalDate.parse(taskEnd);","lastModifiedDate":"2023-08-28"},{"lineNumber":144,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":145,"author":{"gitId":"inezkok"},"content":"                    Event event \u003d new Event(taskDescription, d1, d2);","lastModifiedDate":"2023-08-28"},{"lineNumber":146,"author":{"gitId":"inezkok"},"content":"                    tasks.add(event);","lastModifiedDate":"2023-08-28"},{"lineNumber":147,"author":{"gitId":"inezkok"},"content":"                } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":148,"author":{"gitId":"inezkok"},"content":"                    throw new DukeException(\"Boop Beep OOPS! File has unexpected task type :(\");","lastModifiedDate":"2023-08-28"},{"lineNumber":149,"author":{"gitId":"inezkok"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":150,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":151,"author":{"gitId":"inezkok"},"content":"                if (done.equals(\"[X]\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":152,"author":{"gitId":"inezkok"},"content":"                    tasks.get(i).markDone();","lastModifiedDate":"2023-08-28"},{"lineNumber":153,"author":{"gitId":"inezkok"},"content":"                } else if (done.equals(\"[ ]\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":154,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":155,"author":{"gitId":"inezkok"},"content":"                } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":156,"author":{"gitId":"inezkok"},"content":"                    throw new DukeException(\"Boop Beep OOPS! File has unexpected done value :(\");","lastModifiedDate":"2023-08-28"},{"lineNumber":157,"author":{"gitId":"inezkok"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":158,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":159,"author":{"gitId":"inezkok"},"content":"                i++;","lastModifiedDate":"2023-08-28"},{"lineNumber":160,"author":{"gitId":"inezkok"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":161,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":162,"author":{"gitId":"inezkok"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":163,"author":{"gitId":"inezkok"},"content":"            throw new DukeException(\"Boop Beep OOPS! \" + e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":164,"author":{"gitId":"inezkok"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":165,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":166,"author":{"gitId":"inezkok"},"content":"        return tasks;","lastModifiedDate":"2023-08-28"},{"lineNumber":167,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":168,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":169,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":170,"author":{"gitId":"inezkok"},"content":"     * This method is used to save changes made to the task list in the file.","lastModifiedDate":"2023-08-28"},{"lineNumber":171,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":172,"author":{"gitId":"inezkok"},"content":"     * @param list The array list of tasks.","lastModifiedDate":"2023-08-28"},{"lineNumber":173,"author":{"gitId":"inezkok"},"content":"     * @throws DukeException On IO exceptions.","lastModifiedDate":"2023-08-28"},{"lineNumber":174,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":175,"author":{"gitId":"inezkok"},"content":"    public void save(ArrayList\u003cTask\u003e list) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":176,"author":{"gitId":"inezkok"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":177,"author":{"gitId":"inezkok"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2023-08-28"},{"lineNumber":178,"author":{"gitId":"inezkok"},"content":"            if (!f.exists()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":179,"author":{"gitId":"inezkok"},"content":"                try {","lastModifiedDate":"2023-08-28"},{"lineNumber":180,"author":{"gitId":"inezkok"},"content":"                    f.getParentFile().mkdirs();","lastModifiedDate":"2023-08-28"},{"lineNumber":181,"author":{"gitId":"inezkok"},"content":"                    f.createNewFile();","lastModifiedDate":"2023-08-28"},{"lineNumber":182,"author":{"gitId":"inezkok"},"content":"                } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":183,"author":{"gitId":"inezkok"},"content":"                    System.out.println(\"Boop Beep OOPS! \" + e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":184,"author":{"gitId":"inezkok"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":185,"author":{"gitId":"inezkok"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":186,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":187,"author":{"gitId":"inezkok"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-08-28"},{"lineNumber":188,"author":{"gitId":"inezkok"},"content":"            String stringList \u003d \"\";","lastModifiedDate":"2023-08-28"},{"lineNumber":189,"author":{"gitId":"inezkok"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-08-28"},{"lineNumber":190,"author":{"gitId":"inezkok"},"content":"                stringList \u003d stringList + list.get(i) + System.lineSeparator();","lastModifiedDate":"2023-08-28"},{"lineNumber":191,"author":{"gitId":"inezkok"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":192,"author":{"gitId":"inezkok"},"content":"            fw.write(stringList);","lastModifiedDate":"2023-08-28"},{"lineNumber":193,"author":{"gitId":"inezkok"},"content":"            fw.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":194,"author":{"gitId":"inezkok"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":195,"author":{"gitId":"inezkok"},"content":"            throw new DukeException(\"Boop Beep OOPS! \"+ e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":196,"author":{"gitId":"inezkok"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":197,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":198,"author":{"gitId":"inezkok"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"inezkok":198}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"inezkok"},"content":"package duke;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"inezkok"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"inezkok"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"inezkok"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"inezkok"},"content":" * The TaskList class contains the task list and the related operations.","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"inezkok"},"content":" *","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"inezkok"},"content":" * @author Inez Kok","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"inezkok"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"inezkok"},"content":"public class TaskList {","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"inezkok"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"inezkok"},"content":"     * The constructor for an empty TaskList.","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"inezkok"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"inezkok"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"inezkok"},"content":"     * The constructor for a TaskList.","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"inezkok"},"content":"     * @param tasks The array list of tasks.","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"inezkok"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"inezkok"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"inezkok"},"content":"     * This method is used to get the list of tasks.","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"inezkok"},"content":"     * @return Returns the array list of tasks.","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"inezkok"},"content":"    public ArrayList\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"inezkok"},"content":"        return tasks;","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"inezkok"},"content":"     * This method is used to get the specific task in the task list.","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"inezkok"},"content":"     * @param index The zero-based index of the task.","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"inezkok"},"content":"     * @return Returns the task with that index.","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"inezkok"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"inezkok"},"content":"        return tasks.get(index);","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"inezkok"},"content":"     * This method is used to mark the specific task in the task list as done.","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"inezkok"},"content":"     * @param index The zero-based index of the task.","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"inezkok"},"content":"    public void markTask(int index) {","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"inezkok"},"content":"        tasks.get(index).markDone();","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"inezkok"},"content":"     * This method is used to mark the specific task in the task list as not done.","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"inezkok"},"content":"     * @param index The zero-based index of the task.","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"inezkok"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"inezkok"},"content":"        tasks.get(index).markNotDone();","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"inezkok"},"content":"     * This method is used to add a task into the task list.","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"inezkok"},"content":"     * @param task The task being added.","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"inezkok"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"inezkok"},"content":"        tasks.add(task);","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"inezkok"},"content":"     * This method is used to delete a task from the task list.","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"inezkok"},"content":"     * @param index The zero-based index of the task.","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"inezkok"},"content":"    public void delete(int index) {","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"inezkok"},"content":"        tasks.remove(index);","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":86,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"inezkok"},"content":"     * This method is used to retrieve the number of tasks in the task list.","lastModifiedDate":"2023-08-28"},{"lineNumber":88,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"inezkok"},"content":"     * @return The number of tasks in the task lists.","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"inezkok"},"content":"    public int size() {","lastModifiedDate":"2023-08-28"},{"lineNumber":92,"author":{"gitId":"inezkok"},"content":"        return tasks.size();","lastModifiedDate":"2023-08-28"},{"lineNumber":93,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":94,"author":{"gitId":"inezkok"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"inezkok":94}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"inezkok"},"content":"package duke;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"inezkok"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"inezkok"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"inezkok"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"inezkok"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"inezkok"},"content":" * The Ui class deals wuthe interactions with the user.","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"inezkok"},"content":" *","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"inezkok"},"content":" * @author Inez Kok","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"inezkok"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"inezkok"},"content":"public class Ui {","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"inezkok"},"content":"    private static final String NAME \u003d \"Beep Boop Bot\";","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"inezkok"},"content":"    private Scanner sc;","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"inezkok"},"content":"     * The constructor for a Ui.","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"inezkok"},"content":"    public Ui() {","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"inezkok"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"inezkok"},"content":"     * This method is used to print the line separator.","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"inezkok"},"content":"    public void printLine() {","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"inezkok"},"content":"        System.out.println(\"─\".repeat(100));","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"inezkok"},"content":"     * This method is used to print the message and a line separator.","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"inezkok"},"content":"     * @param message The string representation of the message to be printed.","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"inezkok"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"inezkok"},"content":"        System.out.printf(\"\\t%s\\n\", message);","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"inezkok"},"content":"        printLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"inezkok"},"content":"     * This method is used to print the greeting message.","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"inezkok"},"content":"    public void printGreetingMessage() {","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"inezkok"},"content":"        printLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"inezkok"},"content":"        String greetingMessage \u003d String.format(\"Hello! I\u0027m %s!\\n\\tHow can I help you?\\n\", NAME);","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"inezkok"},"content":"        printMessage(greetingMessage);","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"inezkok"},"content":"     * This method is used to print the exit message.","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"inezkok"},"content":"    public void printExitMessage() {","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"inezkok"},"content":"        String exitMessage \u003d \"Bye Bye! Hope to see you again soon! Beep Boop!\";","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"inezkok"},"content":"        printMessage(exitMessage);","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"inezkok"},"content":"     * This method is used to print the list of tasks.","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"inezkok"},"content":"     * @param list The array list of tasks.","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"inezkok"},"content":"    public void printList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"inezkok"},"content":"        System.out.println(\"\\tHere are the tasks in your list:\");","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"inezkok"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"inezkok"},"content":"            System.out.printf(\"\\t\\t%d. %s\\n\", i + 1, list.get(i));","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"inezkok"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"inezkok"},"content":"        printLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"inezkok"},"content":"     * This method is used to print the message that should appear when a task is successfully added.","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"inezkok"},"content":"     * @param task The task that was successfully added.","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"inezkok"},"content":"     * @param list The updated list of tasks.","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"inezkok"},"content":"    public void printAddSuccessMessage(Task task, ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"inezkok"},"content":"        System.out.println(\"\\tGot it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"inezkok"},"content":"        System.out.printf(\"\\t\\t%s\\n\\tNow you have %d tasks in the list.\\n\", task.toString(), list.size());","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"inezkok"},"content":"        printLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"inezkok"},"content":"     * This method is used to print the message that should appear when a task is successfully deleted.","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":86,"author":{"gitId":"inezkok"},"content":"     * @param index The zero-based index of the task that was successfully deleted.","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"inezkok"},"content":"     * @param list The list of tasks before being updated.","lastModifiedDate":"2023-08-28"},{"lineNumber":88,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"inezkok"},"content":"    public void printDeleteSuccessMessage(int index, ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"inezkok"},"content":"        System.out.println(\"\\tNoted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"inezkok"},"content":"        System.out.printf(\"\\t\\t%s\\n\\tNow you have %d tasks in the list.\\n\",","lastModifiedDate":"2023-08-28"},{"lineNumber":92,"author":{"gitId":"inezkok"},"content":"                list.get(index).toString(), list.size() - 1);","lastModifiedDate":"2023-08-28"},{"lineNumber":93,"author":{"gitId":"inezkok"},"content":"        printLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":94,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":95,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":96,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":97,"author":{"gitId":"inezkok"},"content":"     * This method is used to print the error message that show appearing when there is an error loading the tasks.","lastModifiedDate":"2023-08-28"},{"lineNumber":98,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":99,"author":{"gitId":"inezkok"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-08-28"},{"lineNumber":100,"author":{"gitId":"inezkok"},"content":"        printMessage(\"Boop Beep OOPS! I seem to have troubles loading the file :(\");","lastModifiedDate":"2023-08-28"},{"lineNumber":101,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":102,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":103,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":104,"author":{"gitId":"inezkok"},"content":"     * This method is used to print error messages.","lastModifiedDate":"2023-08-28"},{"lineNumber":105,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":106,"author":{"gitId":"inezkok"},"content":"     * @param error The error message to be printed.","lastModifiedDate":"2023-08-28"},{"lineNumber":107,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":108,"author":{"gitId":"inezkok"},"content":"    public void showError(String error) {","lastModifiedDate":"2023-08-28"},{"lineNumber":109,"author":{"gitId":"inezkok"},"content":"        printMessage(error);","lastModifiedDate":"2023-08-28"},{"lineNumber":110,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":111,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":112,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":113,"author":{"gitId":"inezkok"},"content":"     * This method is used to read the next line of the input.","lastModifiedDate":"2023-08-28"},{"lineNumber":114,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":115,"author":{"gitId":"inezkok"},"content":"     * @return Returns the string representation of the next line.","lastModifiedDate":"2023-08-28"},{"lineNumber":116,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":117,"author":{"gitId":"inezkok"},"content":"    public String readCommand() {","lastModifiedDate":"2023-08-28"},{"lineNumber":118,"author":{"gitId":"inezkok"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":119,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":120,"author":{"gitId":"inezkok"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"inezkok":120}},{"path":"src/main/java/duke/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"inezkok"},"content":"package duke.command;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"inezkok"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"inezkok"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"inezkok"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"inezkok"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"inezkok"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"inezkok"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"inezkok"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"inezkok"},"content":" * The AddDeadlineCommand class is the command for adding a Deadline into the task list.","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"inezkok"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"inezkok"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"inezkok"},"content":"    private String description;","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"inezkok"},"content":"    private LocalDate deadlineDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"inezkok"},"content":"     * The constructor for an AddDeadlineCommand.","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"inezkok"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"inezkok"},"content":"     * @param deadlineDate The due date of the deadline.","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"inezkok"},"content":"    public AddDeadlineCommand(String description, LocalDate deadlineDate) {","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"inezkok"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"inezkok"},"content":"        this.deadlineDate \u003d deadlineDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"inezkok"},"content":"     * This method is used to execute the AddDeadlineCommand.","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"inezkok"},"content":"     * @param tasks The TaskList to be worked on.","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"inezkok"},"content":"     * @param ui The Ui to be worked on.","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"inezkok"},"content":"     * @param storage The Storage to be worked on.","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"inezkok"},"content":"     * @throws DukeException On input or file error.","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"inezkok"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"inezkok"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"inezkok"},"content":"        Deadline deadline \u003d new Deadline(description, deadlineDate);","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"inezkok"},"content":"        tasks.add(deadline);","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"inezkok"},"content":"        ui.printAddSuccessMessage(deadline, tasks.getAllTasks());","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"inezkok"},"content":"        storage.save(tasks.getAllTasks());","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"inezkok"},"content":"     * This method is used to check whether this is an Exit command.","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"inezkok"},"content":"     * @return Returns false.","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"inezkok"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"inezkok"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"inezkok"},"content":"        return false;","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"inezkok"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"inezkok":54}},{"path":"src/main/java/duke/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"inezkok"},"content":"package duke.command;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"inezkok"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"inezkok"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"inezkok"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"inezkok"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"inezkok"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"inezkok"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"inezkok"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"inezkok"},"content":" * The AddEventCommand is the command for adding an Event into the task list.","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"inezkok"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"inezkok"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"inezkok"},"content":"    private String description;","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"inezkok"},"content":"    private LocalDate start;","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"inezkok"},"content":"    private LocalDate end;","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"inezkok"},"content":"     * The constructor for an AddEventCommand.","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"inezkok"},"content":"     * @param description The description of the event.","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"inezkok"},"content":"     * @param start The start date of the event.","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"inezkok"},"content":"     * @param end The end date of the event.","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"inezkok"},"content":"    public AddEventCommand(String description, LocalDate start, LocalDate end) {","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"inezkok"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"inezkok"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"inezkok"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"inezkok"},"content":"     * This method is used to execute the AddEventCommand.","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"inezkok"},"content":"     * @param tasks The TaskList to be worked on.","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"inezkok"},"content":"     * @param ui The Ui to be worked on.","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"inezkok"},"content":"     * @param storage The Storage to be worked on.","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"inezkok"},"content":"     * @throws DukeException On input or file error.","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"inezkok"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"inezkok"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"inezkok"},"content":"        Event event \u003d new Event(description, start, end);","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"inezkok"},"content":"        tasks.add(event);","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"inezkok"},"content":"        ui.printAddSuccessMessage(event, tasks.getAllTasks());","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"inezkok"},"content":"        storage.save(tasks.getAllTasks());","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"inezkok"},"content":"     * This method is used to check whether the command is an Exit command.","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"inezkok"},"content":"     * @return Returns false.","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"inezkok"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"inezkok"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"inezkok"},"content":"        return false;","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"inezkok"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"inezkok":57}},{"path":"src/main/java/duke/command/AddToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"inezkok"},"content":"package duke.command;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"inezkok"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"inezkok"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"inezkok"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"inezkok"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"inezkok"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"inezkok"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"inezkok"},"content":" * The AddToDoCommand is the command for adding a ToDo to the task list.","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"inezkok"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"inezkok"},"content":"public class AddToDoCommand extends Command {","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"inezkok"},"content":"    private String description;","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"inezkok"},"content":"     * The constructor for an AddToDoCommand.","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"inezkok"},"content":"     * @param description The description of the ToDo.","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"inezkok"},"content":"    public AddToDoCommand(String description) {","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"inezkok"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"inezkok"},"content":"     * This method is used to execute the AddToDoCommand.","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"inezkok"},"content":"     * @param tasks The TaskList to be worked on.","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"inezkok"},"content":"     * @param ui The Ui to be worked on.","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"inezkok"},"content":"     * @param storage The Storage to be worked on.","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"inezkok"},"content":"     * @throws DukeException On input or file error.","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"inezkok"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"inezkok"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"inezkok"},"content":"        ToDo todo \u003d new ToDo(description);","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"inezkok"},"content":"        tasks.add(todo);","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"inezkok"},"content":"        ui.printAddSuccessMessage(todo, tasks.getAllTasks());","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"inezkok"},"content":"        storage.save(tasks.getAllTasks());","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"inezkok"},"content":"     * This method is used to check whether it is an Exit command.","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"inezkok"},"content":"     * @return Returns false.","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"inezkok"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"inezkok"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"inezkok"},"content":"        return false;","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"inezkok"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"inezkok":49}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"inezkok"},"content":"package duke.command;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"inezkok"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"inezkok"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"inezkok"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"inezkok"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"inezkok"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"inezkok"},"content":" * The Command class is an abstract class for commands.","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"inezkok"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"inezkok"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"inezkok"},"content":"     * This method is used to execute the command.","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"inezkok"},"content":"     * @param tasks The TaskList to be worked on.","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"inezkok"},"content":"     * @param ui The Ui to be worked on.","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"inezkok"},"content":"     * @param storage The Storage to be worked on.","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"inezkok"},"content":"     * @throws DukeException On input or file error.","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"inezkok"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"inezkok"},"content":"     * This method is used to check whether it is an Exit command.","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"inezkok"},"content":"     * @return Returns whether it is an Exit command.","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"inezkok"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"inezkok"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"inezkok":28}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"inezkok"},"content":"package duke.command;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"inezkok"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"inezkok"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"inezkok"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"inezkok"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"inezkok"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"inezkok"},"content":" * The DeleteCommand class is for the command to delete tasks.","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"inezkok"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"inezkok"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"inezkok"},"content":"    private int index;","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"inezkok"},"content":"     * The constructor for a DeleteCommand.","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"inezkok"},"content":"     * @param index The one-based index of the task to be deleted.","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"inezkok"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"inezkok"},"content":"        this.index \u003d index - 1;","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"inezkok"},"content":"     * This method is used to execute the delete command.","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"inezkok"},"content":"     * @param tasks The TaskList to be worked on.","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"inezkok"},"content":"     * @param ui The Ui to be worked on.","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"inezkok"},"content":"     * @param storage The Storage to be worked on.","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"inezkok"},"content":"     * @throws DukeException","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"inezkok"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"inezkok"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"inezkok"},"content":"        ui.printDeleteSuccessMessage(index, tasks.getAllTasks());","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"inezkok"},"content":"        tasks.delete(index);","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"inezkok"},"content":"        storage.save(tasks.getAllTasks());","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"inezkok"},"content":"     * This method is used to check whether it is an Exit command.","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"inezkok"},"content":"     * @return Returns false.","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"inezkok"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"inezkok"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"inezkok"},"content":"        return false;","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"inezkok"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"inezkok":47}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"inezkok"},"content":"package duke.command;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"inezkok"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"inezkok"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"inezkok"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"inezkok"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"inezkok"},"content":" * The ExitCommand class is for the command \"bye\".","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"inezkok"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"inezkok"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"inezkok"},"content":"     * This method is used to execute the exit command.","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"inezkok"},"content":"     * @param tasks The TaskList to be worked on.","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"inezkok"},"content":"     * @param ui The Ui to be worked on.","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"inezkok"},"content":"     * @param storage The Storage to be worked on.","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"inezkok"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"inezkok"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"inezkok"},"content":"        ui.printExitMessage();","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"inezkok"},"content":"     * This method is used to check whether it is an exit command.","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"inezkok"},"content":"     * @return Returns true.","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"inezkok"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"inezkok"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"inezkok"},"content":"        return true;","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"inezkok"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"inezkok":32}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"inezkok"},"content":"package duke.command;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"inezkok"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"inezkok"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"inezkok"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"inezkok"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"inezkok"},"content":" * The FindCommand is for \"find\" command.","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"inezkok"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"inezkok"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"inezkok"},"content":"    private String keyword;","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"inezkok"},"content":"     * The constructor for a FindCommand.","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"inezkok"},"content":"     * @param keyword The string representation of the keyword.","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"inezkok"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"inezkok"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"inezkok"},"content":"     * This method is used to execute the find command.","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"inezkok"},"content":"     * @param tasks The TaskList to be worked on.","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"inezkok"},"content":"     * @param ui The Ui to be worked on.","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"inezkok"},"content":"     * @param storage The Storage to be worked on.","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"inezkok"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"inezkok"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"inezkok"},"content":"        int newIndex \u003d 0;","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"inezkok"},"content":"        System.out.println(\"\\tHere are the matching tasks in your list:\");","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"inezkok"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"inezkok"},"content":"            if (tasks.get(i).toString().contains(keyword)) {","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"inezkok"},"content":"                System.out.printf(\"\\t\\t%d. %s\\n\", newIndex + 1, tasks.get(i));","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"inezkok"},"content":"                newIndex++;","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"inezkok"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"inezkok"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"inezkok"},"content":"        ui.printLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"inezkok"},"content":"     * This method is used to check whether it is an exit command.","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"inezkok"},"content":"     * @return Returns false.","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"inezkok"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"inezkok"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"inezkok"},"content":"        return false;","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"inezkok"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"inezkok":51}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"inezkok"},"content":"package duke.command;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"inezkok"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"inezkok"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"inezkok"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"inezkok"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"inezkok"},"content":" * The ListCommmand class is for the \"list\" command.","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"inezkok"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"inezkok"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"inezkok"},"content":"     * This method is used to execute the list command.","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"inezkok"},"content":"     * @param tasks The TaskList to be worked on.","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"inezkok"},"content":"     * @param ui The Ui to be worked on.","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"inezkok"},"content":"     * @param storage The Storage to be worked on.","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"inezkok"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"inezkok"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"inezkok"},"content":"        ui.printList(tasks.getAllTasks());","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"inezkok"},"content":"     * This method is used to check whether it is an exit command.","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"inezkok"},"content":"     * @return Returns false.","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"inezkok"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"inezkok"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"inezkok"},"content":"        return false;","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"inezkok"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"inezkok":32}},{"path":"src/main/java/duke/command/MarkDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"inezkok"},"content":"package duke.command;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"inezkok"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"inezkok"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"inezkok"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"inezkok"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"inezkok"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"inezkok"},"content":" * The MarkDoneCommand is for the \"mark\" command.","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"inezkok"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"inezkok"},"content":"public class MarkDoneCommand extends Command {","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"inezkok"},"content":"    private int index;","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"inezkok"},"content":"     * The constructor for a MarkDoneCommand.","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"inezkok"},"content":"     * @param index The one-based index of the task to be marked.","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"inezkok"},"content":"    public MarkDoneCommand(int index) {","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"inezkok"},"content":"        this.index \u003d index - 1;","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"inezkok"},"content":"     * This method is used to execute the mark done command.","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"inezkok"},"content":"     * @param tasks The TaskList to be worked on.","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"inezkok"},"content":"     * @param ui The Ui to be worked on.","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"inezkok"},"content":"     * @param storage The Storage to be worked on.","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"inezkok"},"content":"     * @throws DukeException","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"inezkok"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"inezkok"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"inezkok"},"content":"        tasks.markTask(index);","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"inezkok"},"content":"        ui.printMessage(\"Beep Boop NICE! I\u0027ve marked this task as done:\\n\\t\\t\" +","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"inezkok"},"content":"                tasks.get(index));","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"inezkok"},"content":"        storage.save(tasks.getAllTasks());","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"inezkok"},"content":"     * This method is used to check whether it is an exit command.","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"inezkok"},"content":"     * @return Returns false.","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"inezkok"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"inezkok"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"inezkok"},"content":"        return false;","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"inezkok"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"inezkok":48}},{"path":"src/main/java/duke/command/UnmarkDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"inezkok"},"content":"package duke.command;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"inezkok"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"inezkok"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"inezkok"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"inezkok"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"inezkok"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"inezkok"},"content":" * The UnmarkDoneCommand is for the \"unmark\" command.","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"inezkok"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"inezkok"},"content":"public class UnmarkDoneCommand extends Command {","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"inezkok"},"content":"    private int index;","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"inezkok"},"content":"     * The constructor for an UnmarkDoneCommand.","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"inezkok"},"content":"     * @param index The one-based index of the task to be unmarked.","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"inezkok"},"content":"    public UnmarkDoneCommand(int index) {","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"inezkok"},"content":"        this.index \u003d index - 1;","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"inezkok"},"content":"     * This method is used to execute the unmark done command.","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"inezkok"},"content":"     * @param tasks The TaskList to be worked on.","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"inezkok"},"content":"     * @param ui The Ui to be worked on.","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"inezkok"},"content":"     * @param storage The Storage to be worked on.","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"inezkok"},"content":"     * @throws DukeException","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"inezkok"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"inezkok"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"inezkok"},"content":"        tasks.unmarkTask(index);","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"inezkok"},"content":"        ui.printMessage(\"Beep Boop NICE! I\u0027ve unmarked this task as done:\\n\\t\\t\" +","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"inezkok"},"content":"                tasks.get(index));","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"inezkok"},"content":"        storage.save(tasks.getAllTasks());","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"inezkok"},"content":"     * This method is used to check whether it is an exit command.","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"inezkok"},"content":"     * @return Returns false.","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"inezkok"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"inezkok"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"inezkok"},"content":"        return false;","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"inezkok"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"inezkok":48}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"inezkok"},"content":"package duke.exception;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"inezkok"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"inezkok"},"content":" * The DukeException is an exception that occurs while running the Duke program.","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"inezkok"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"inezkok"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"inezkok"},"content":"     * The constructor of a DukeException.","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"inezkok"},"content":"     * @param message The error message of the DukeException.","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"inezkok"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"inezkok"},"content":"        super(message);","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"inezkok"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"inezkok":15}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"inezkok"},"content":"package duke.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"inezkok"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"inezkok"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"inezkok"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"inezkok"},"content":" * The Deadline class is a type of Task with a due date.","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"inezkok"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"inezkok"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"inezkok"},"content":"    private static final DateTimeFormatter FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"inezkok"},"content":"    LocalDate deadline;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"inezkok"},"content":"     * The constructor for a Deadline.","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"inezkok"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"inezkok"},"content":"     * @param deadline The due date of the task.","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"inezkok"},"content":"    public Deadline(String description, LocalDate deadline) {","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"inezkok"},"content":"        super(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"inezkok"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"inezkok"},"content":"     * This method is used to return the string representation of a Deadline.","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"inezkok"},"content":"     * @return Returns the string representation of a Deadline.","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"inezkok"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"inezkok"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"inezkok"},"content":"        return String.format(\"[D] %s (by: %s)\", super.toString(), deadline.format(FORMAT));","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":33,"author":{"gitId":"inezkok"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"inezkok":33}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"inezkok"},"content":"package duke.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"inezkok"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"inezkok"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"inezkok"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"inezkok"},"content":" * The Event class is a task that has a start and end date.","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"inezkok"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"inezkok"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"inezkok"},"content":"    private static final DateTimeFormatter FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"inezkok"},"content":"    LocalDate start;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"inezkok"},"content":"    LocalDate end;","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"inezkok"},"content":"     * The constructor for an Event.","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"inezkok"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"inezkok"},"content":"     * @param start The start date of the task.","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"inezkok"},"content":"     * @param end The end date of the task.","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"inezkok"},"content":"    public Event(String description, LocalDate start, LocalDate end) {","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"inezkok"},"content":"        super(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"inezkok"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"inezkok"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"inezkok"},"content":"     * This method is used to return the string representation of an Event.","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"inezkok"},"content":"     * @return Returns the string representation of an Event.","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"inezkok"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":33,"author":{"gitId":"inezkok"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":34,"author":{"gitId":"inezkok"},"content":"        return String.format(\"[E] %s (from: %s to: %s)\", super.toString(), start.format(FORMAT), end.format(FORMAT));","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"inezkok"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"inezkok":36}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"inezkok"},"content":"package duke.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"inezkok"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"inezkok"},"content":" * The Task class is used to represent a task.","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"inezkok"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"inezkok"},"content":"public class Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"inezkok"},"content":"    private String description;","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"inezkok"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"inezkok"},"content":"     * The constructor for a Task.","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"inezkok"},"content":"     * @param description","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"inezkok"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"inezkok"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"inezkok"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"inezkok"},"content":"     * This method is used to mark the task as done.","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"inezkok"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"inezkok"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"inezkok"},"content":"     * This method is used to mark the task as not done.","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"inezkok"},"content":"    public void markNotDone() {","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"inezkok"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":33,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"inezkok"},"content":"     * This method is used to return the string representation of a Task.","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"inezkok"},"content":"     * @return Returns the string represenation of a Task.","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"inezkok"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"inezkok"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"inezkok"},"content":"        if (isDone) {","lastModifiedDate":"2023-08-20"},{"lineNumber":41,"author":{"gitId":"inezkok"},"content":"            return String.format(\"[X] %s\", description);","lastModifiedDate":"2023-08-20"},{"lineNumber":42,"author":{"gitId":"inezkok"},"content":"        } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":43,"author":{"gitId":"inezkok"},"content":"            return String.format(\"[ ] %s\", description);","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"inezkok"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":45,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":46,"author":{"gitId":"inezkok"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"inezkok":46}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"inezkok"},"content":"package duke.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"inezkok"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"inezkok"},"content":" * The ToDo class is a task without a due date.","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"inezkok"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"inezkok"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"inezkok"},"content":"     * The constructor for a ToDo.","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"inezkok"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"inezkok"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"inezkok"},"content":"        super(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"inezkok"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"inezkok"},"content":"     * This method is used to return the string representation of the ToDo.","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"inezkok"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"inezkok"},"content":"     * @return Returns the string representation of the ToDo.","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"inezkok"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"inezkok"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"inezkok"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"inezkok"},"content":"        return String.format(\"[T] %s\", super.toString());","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"inezkok"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"inezkok":25}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"inezkok"},"content":"package duke;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"inezkok"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"inezkok"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"inezkok"},"content":"public class DukeTest {","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"inezkok"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"inezkok"},"content":"    public void dummyTest(){","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"inezkok"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"inezkok"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"inezkok"},"content":"    public void anotherDummyTest(){","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"inezkok"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"inezkok"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"inezkok":16}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"inezkok"},"content":"package duke;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"inezkok"},"content":"import duke.command.*;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"inezkok"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"inezkok"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"inezkok"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"inezkok"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"inezkok"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"inezkok"},"content":"    public void parser_success() throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"inezkok"},"content":"        assertTrue(Parser.parse(\"bye\", 4) instanceof ExitCommand);","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"inezkok"},"content":"        assertTrue(Parser.parse(\"list\", 4) instanceof ListCommand);","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"inezkok"},"content":"        assertTrue(Parser.parse(\"mark 2\", 4) instanceof MarkDoneCommand);","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"inezkok"},"content":"        assertTrue(Parser.parse(\"unmark 2\", 4) instanceof UnmarkDoneCommand);","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"inezkok"},"content":"        assertTrue(Parser.parse(\"delete 2\", 4) instanceof DeleteCommand);","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"inezkok"},"content":"        assertTrue(Parser.parse(\"todo read book\", 4) instanceof AddToDoCommand);","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"inezkok"},"content":"        assertTrue(Parser.parse(\"deadline return book /by 2023-06-06\", 4) instanceof AddDeadlineCommand);","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"inezkok"},"content":"        assertTrue(Parser.parse(\"event orientation week /from 2023-07-31 /to 2023-08-04\", 4)","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"inezkok"},"content":"                instanceof AddEventCommand);","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"inezkok"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"inezkok"},"content":"    public void parser_outOfRange_exceptionThrown() {","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"inezkok"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"inezkok"},"content":"            assertTrue(Parser.parse(\"blah\", 4) instanceof Command);","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"inezkok"},"content":"            fail();","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"inezkok"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"inezkok"},"content":"            assertEquals(\"Boop Beep OOPS! I\u0027m sorry, but I don\u0027t know what that means :(\", e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"inezkok"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"inezkok"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"inezkok"},"content":"            assertTrue(Parser.parse(\"mark 0\", 4) instanceof MarkDoneCommand);","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"inezkok"},"content":"            fail();","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"inezkok"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"inezkok"},"content":"            assertEquals(\"Boop Beep OOPS! Please make sure that the index of the task is within range.\",","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"inezkok"},"content":"                    e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"inezkok"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"inezkok"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"inezkok"},"content":"            assertTrue(Parser.parse(\"unmark 5\", 4) instanceof UnmarkDoneCommand);","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"inezkok"},"content":"            fail();","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"inezkok"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"inezkok"},"content":"            assertEquals(\"Boop Beep OOPS! Please make sure that the index of the task is within range.\",","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"inezkok"},"content":"                    e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"inezkok"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"inezkok"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"inezkok"},"content":"            assertTrue(Parser.parse(\"delete 7\", 4) instanceof DeleteCommand);","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"inezkok"},"content":"            fail();","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"inezkok"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"inezkok"},"content":"            assertEquals(\"Boop Beep OOPS! Please make sure that the index of the task is within range.\",","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"inezkok"},"content":"                    e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"inezkok"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"inezkok"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"inezkok"},"content":"    public void parser_invalidDate_exceptionThrow() {","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"inezkok"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"inezkok"},"content":"            assertTrue(Parser.parse(\"deadline return book /by June 6th 2023\", 1)","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"inezkok"},"content":"                    instanceof AddDeadlineCommand);","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"inezkok"},"content":"            fail();","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"inezkok"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"inezkok"},"content":"            assertEquals(\"Boop Beep OOPS! Please check that the date is in YYYY-MM-DD format.\", e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"inezkok"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"inezkok"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"inezkok"},"content":"    public void parser_emptyDescriptionOrDate_exceptionThrown() {","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"inezkok"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"inezkok"},"content":"            assertTrue(Parser.parse(\"todo\", 1) instanceof AddToDoCommand);","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"inezkok"},"content":"            fail();","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"inezkok"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"inezkok"},"content":"            assertEquals(\"Boop Beep OOPS! The description of a todo cannot be empty.\", e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"inezkok"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"inezkok"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"inezkok"},"content":"            assertTrue(Parser.parse(\"deadline\", 1) instanceof AddDeadlineCommand);","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"inezkok"},"content":"            fail();","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"inezkok"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"inezkok"},"content":"            assertEquals(\"Boop Beep OOPS! Please make sure that the description\" +","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"inezkok"},"content":"                    \" and date of the deadline is not empty.\", e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"inezkok"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"inezkok"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":86,"author":{"gitId":"inezkok"},"content":"            assertTrue(Parser.parse(\"event\", 1) instanceof AddEventCommand);","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"inezkok"},"content":"            fail();","lastModifiedDate":"2023-08-28"},{"lineNumber":88,"author":{"gitId":"inezkok"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"inezkok"},"content":"            assertEquals(\"Boop Beep OOPS! Please make sure that the description\" +","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"inezkok"},"content":"                    \" and dates of the event is not empty.\", e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"inezkok"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":92,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":93,"author":{"gitId":"inezkok"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"inezkok":93}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"inezkok"},"content":"package duke;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"inezkok"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"inezkok"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"inezkok"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"inezkok"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"inezkok"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"inezkok"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"inezkok"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"inezkok"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"inezkok"},"content":"public class TaskListTest {","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"inezkok"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"inezkok"},"content":"    public void TaskListConstructorTest() {","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"inezkok"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"inezkok"},"content":"        assertEquals(0, tasks.size(), \"Test initialisation of empty TaskList\");","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"inezkok"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"inezkok"},"content":"    public void TaskListOverloadedConstructorTest() {","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"inezkok"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"inezkok"},"content":"        ToDo todo \u003d new ToDo(\"read book\");","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"inezkok"},"content":"        tasks.add(todo);","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"inezkok"},"content":"        TaskList taskList \u003d new TaskList(tasks);","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"inezkok"},"content":"        assertEquals(1, taskList.size(), \"Test initialisation of TaskList\");","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"inezkok"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"inezkok"},"content":"    public void TaskListMethodsTest() {","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"inezkok"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"inezkok"},"content":"        ToDo todo \u003d new ToDo(\"read book\");","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"inezkok"},"content":"        tasks.add(todo);","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"inezkok"},"content":"        assertEquals(1, tasks.size(), \"Test addition of task\");","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"inezkok"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", LocalDate.parse(\"2023-06-06\"));","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"inezkok"},"content":"        tasks.add(deadline);","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"inezkok"},"content":"        Event event \u003d new Event(\"orientation week\", LocalDate.parse(\"2023-07-31\"),","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"inezkok"},"content":"                LocalDate.parse(\"2023-08-04\"));","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"inezkok"},"content":"        tasks.add(event);","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"inezkok"},"content":"        tasks.delete(0);","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"inezkok"},"content":"        assertEquals(2, tasks.size(), \"Test deletion of task\");","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"inezkok"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"inezkok":48}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"inezkok"},"content":"package duke.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"inezkok"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"inezkok"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"inezkok"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"inezkok"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"inezkok"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"inezkok"},"content":"    public void DeadlineTest() {","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"inezkok"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", LocalDate.parse(\"2023-06-06\"));","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"inezkok"},"content":"        assertEquals(\"[D] [ ] return book (by: Jun 06 2023)\", deadline.toString());","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"inezkok"},"content":"        deadline.markDone();","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"inezkok"},"content":"        assertEquals(\"[D] [X] return book (by: Jun 06 2023)\", deadline.toString());","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"inezkok"},"content":"        deadline.markNotDone();","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"inezkok"},"content":"        assertEquals(\"[D] [ ] return book (by: Jun 06 2023)\", deadline.toString());","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"inezkok"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"inezkok":21}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"inezkok"},"content":"package duke.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"inezkok"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"inezkok"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"inezkok"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"inezkok"},"content":"public class EventTest {","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"inezkok"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"inezkok"},"content":"    public void EventTest() {","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"inezkok"},"content":"        Event event \u003d new Event(\"orientation week\", LocalDate.parse(\"2023-07-31\"),","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"inezkok"},"content":"                LocalDate.parse(\"2023-08-04\"));","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"inezkok"},"content":"        assertEquals(\"[E] [ ] orientation week (from: Jul 31 2023 to: Aug 04 2023)\", event.toString());","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"inezkok"},"content":"        event.markDone();","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"inezkok"},"content":"        assertEquals(\"[E] [X] orientation week (from: Jul 31 2023 to: Aug 04 2023)\", event.toString());","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"inezkok"},"content":"        event.markNotDone();","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"inezkok"},"content":"        assertEquals(\"[E] [ ] orientation week (from: Jul 31 2023 to: Aug 04 2023)\", event.toString());","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"inezkok"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"inezkok":22}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"inezkok"},"content":"package duke.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"inezkok"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"inezkok"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"inezkok"},"content":"public class ToDoTest {","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"inezkok"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"inezkok"},"content":"    public void ToDoTest() {","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"inezkok"},"content":"        ToDo todo \u003d new ToDo(\"read book\");","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"inezkok"},"content":"        assertEquals(\"[T] [ ] read book\", todo.toString());","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"inezkok"},"content":"        todo.markDone();","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"inezkok"},"content":"        assertEquals(\"[T] [X] read book\", todo.toString());","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"inezkok"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"inezkok"},"content":"        todo.markNotDone();","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"inezkok"},"content":"        assertEquals(\"[T] [ ] read book\", todo.toString());","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"inezkok"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"inezkok"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"inezkok":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"inezkok"},"content":"todo borrow book","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"inezkok"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"inezkok"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"inezkok"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"inezkok"},"content":"mark 2","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"inezkok"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"inezkok"},"content":"unmark 2","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"inezkok"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"inezkok"},"content":"bye","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"inezkok":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"inezkok"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"inezkok":1,"-":20}}]
