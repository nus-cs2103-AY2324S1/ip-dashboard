[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"coderhuang559"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"coderhuang559"},"content":"    protected String by;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"coderhuang559"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"coderhuang559"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"coderhuang559"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"coderhuang559"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"coderhuang559"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"coderhuang559"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"coderhuang559"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"coderhuang559":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"coderhuang559"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"coderhuang559"},"content":"import java.util.Objects;","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"coderhuang559"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"coderhuang559"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"coderhuang559"},"content":"     * The main method of the Duke application.","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"coderhuang559"},"content":"     * Handles user interactions and manages task-related commands.","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"coderhuang559"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"coderhuang559"},"content":"     * @param args Command-line arguments (not used).","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"coderhuang559"},"content":"     * @throws DukeException If an error occurs during user input processing.","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"coderhuang559"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"coderhuang559"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"coderhuang559"},"content":"        // Send welcome message","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"coderhuang559"},"content":"        System.out.println(","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"coderhuang559"},"content":"                \"    ____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"coderhuang559"},"content":"                \"     Hello! I\u0027m BbabBBB\\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"coderhuang559"},"content":"                \"     What can I do for you?\\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"coderhuang559"},"content":"                \"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"coderhuang559"},"content":"        // Implement function to read user input via keyboard","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"coderhuang559"},"content":"        Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"coderhuang559"},"content":"        ArrayList\u003cTask\u003e taskArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"coderhuang559"},"content":"        boolean[] statusArray \u003d new boolean[100];","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"coderhuang559"},"content":"        int inputNum \u003d 0;","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"coderhuang559"},"content":"        while (true) {","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"coderhuang559"},"content":"            try {","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"coderhuang559"},"content":"                String userInput \u003d scan.nextLine().trim();","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"coderhuang559"},"content":"                if (Objects.equals(userInput, \"bye\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"coderhuang559"},"content":"                    System.out.println(","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"coderhuang559"},"content":"                            \"    ____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"coderhuang559"},"content":"                                    \"     Bye. Hope to see you again soon!\\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"coderhuang559"},"content":"                                    \"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"coderhuang559"},"content":"                    break;","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"coderhuang559"},"content":"                } else if (Objects.equals(userInput, \"list\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"coderhuang559"},"content":"                    listTasks(taskArray, inputNum);","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"coderhuang559"},"content":"                } else if (userInput.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"coderhuang559"},"content":"                    markTask(userInput, inputNum, taskArray);","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"coderhuang559"},"content":"                } else if (userInput.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"coderhuang559"},"content":"                    unmarkTask(userInput, inputNum, taskArray);","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"coderhuang559"},"content":"                } else if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"coderhuang559"},"content":"                    if (userInput.equals(\"todo\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"coderhuang559"},"content":"                        throw new EmptyTaskException(\"todo\");","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"coderhuang559"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"coderhuang559"},"content":"                    String taskName \u003d userInput.substring(\"todo\".length()).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"coderhuang559"},"content":"                    makeToDo(taskName, inputNum, taskArray);","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"coderhuang559"},"content":"                    inputNum++;","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"coderhuang559"},"content":"                } else if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"coderhuang559"},"content":"                    if (userInput.equals(\"deadline\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"coderhuang559"},"content":"                        throw new EmptyTaskException(\"deadline\");","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"coderhuang559"},"content":"                    } else if (userInput.endsWith(\"/by\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"coderhuang559"},"content":"                        throw new EmptyDateException(\"deadline\");","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"coderhuang559"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"coderhuang559"},"content":"                    String[] deadlineParts \u003d getDeadlineParts(userInput);","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"coderhuang559"},"content":"                    String taskName \u003d deadlineParts[0];","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"coderhuang559"},"content":"                    String by \u003d deadlineParts[1];","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"coderhuang559"},"content":"                    makeDeadline(taskName, by, inputNum, taskArray);","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"coderhuang559"},"content":"                    inputNum++;","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"coderhuang559"},"content":"                } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"coderhuang559"},"content":"                    if (userInput.equals(\"event\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"coderhuang559"},"content":"                        throw new EmptyTaskException(\"event\");","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"coderhuang559"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"coderhuang559"},"content":"                    String[] eventParts \u003d getEventParts(userInput);","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"coderhuang559"},"content":"                    String taskName \u003d eventParts[0];","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"coderhuang559"},"content":"                    String start \u003d eventParts[1];","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"coderhuang559"},"content":"                    String end \u003d eventParts[2];","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"coderhuang559"},"content":"                    makeEvent(taskName, start, end, inputNum, taskArray);","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"coderhuang559"},"content":"                    inputNum++;","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"coderhuang559"},"content":"                } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"coderhuang559"},"content":"                    deleteTask(userInput, inputNum, taskArray);","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"coderhuang559"},"content":"                    inputNum--;","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"coderhuang559"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"coderhuang559"},"content":"                else {","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"coderhuang559"},"content":"                    throw new InvalidInputException(\"Invalid Input\");","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"coderhuang559"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"coderhuang559"},"content":"            } catch (InvalidInputException | EmptyTaskException | EmptyDateException | OutOfRangeException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"coderhuang559"},"content":"                System.out.println(e);","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"coderhuang559"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"coderhuang559"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"coderhuang559"},"content":"        scan.close();","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"coderhuang559"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"coderhuang559"},"content":"     * Lists the tasks stored in the task array.","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"coderhuang559"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"coderhuang559"},"content":"     * @param taskArray An ArrayList containing the tasks.","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"coderhuang559"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"coderhuang559"},"content":"    private static void listTasks(ArrayList\u003cTask\u003e taskArray, int inputNum) {","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"coderhuang559"},"content":"        String inputArrayString \u003d \"\";","lastModifiedDate":"2023-08-21"},{"lineNumber":99,"author":{"gitId":"coderhuang559"},"content":"        for (int i \u003d 0; i \u003c inputNum; i++) {","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"coderhuang559"},"content":"            Task currentTask \u003d taskArray.get(i);","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"coderhuang559"},"content":"            if (taskArray.get(i) !\u003d null) {","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"coderhuang559"},"content":"                int num \u003d i + 1;","lastModifiedDate":"2023-08-21"},{"lineNumber":103,"author":{"gitId":"coderhuang559"},"content":"                inputArrayString +\u003d \"     \" + num + \". \" + currentTask.toString() + \"\\n\";","lastModifiedDate":"2023-08-22"},{"lineNumber":104,"author":{"gitId":"coderhuang559"},"content":"            } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":105,"author":{"gitId":"coderhuang559"},"content":"                break;","lastModifiedDate":"2023-08-21"},{"lineNumber":106,"author":{"gitId":"coderhuang559"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":107,"author":{"gitId":"coderhuang559"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":108,"author":{"gitId":"coderhuang559"},"content":"        System.out.println(","lastModifiedDate":"2023-08-22"},{"lineNumber":109,"author":{"gitId":"coderhuang559"},"content":"                \"    ____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":110,"author":{"gitId":"coderhuang559"},"content":"                        \"     Here are the tasks in your list:\\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":111,"author":{"gitId":"coderhuang559"},"content":"                        inputArrayString +","lastModifiedDate":"2023-08-21"},{"lineNumber":112,"author":{"gitId":"coderhuang559"},"content":"                        \"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":113,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":114,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"coderhuang559"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":117,"author":{"gitId":"coderhuang559"},"content":"     * Marks a task as done based on user input.","lastModifiedDate":"2023-08-24"},{"lineNumber":118,"author":{"gitId":"coderhuang559"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":119,"author":{"gitId":"coderhuang559"},"content":"     * @param userInput The user input containing the task index.","lastModifiedDate":"2023-08-24"},{"lineNumber":120,"author":{"gitId":"coderhuang559"},"content":"     * @param inputNum  The number of tasks entered.","lastModifiedDate":"2023-08-24"},{"lineNumber":121,"author":{"gitId":"coderhuang559"},"content":"     * @param taskArray An ArrayList containing the tasks.","lastModifiedDate":"2023-08-24"},{"lineNumber":122,"author":{"gitId":"coderhuang559"},"content":"     * @throws EmptyTaskException  If the task is missing.","lastModifiedDate":"2023-08-24"},{"lineNumber":123,"author":{"gitId":"coderhuang559"},"content":"     * @throws OutOfRangeException If the task index is out of range.","lastModifiedDate":"2023-08-24"},{"lineNumber":124,"author":{"gitId":"coderhuang559"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":125,"author":{"gitId":"coderhuang559"},"content":"    private static void markTask(String userInput, int inputNum, ArrayList\u003cTask\u003e taskArray) throws EmptyTaskException, OutOfRangeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":126,"author":{"gitId":"coderhuang559"},"content":"        if (userInput.equals(\"mark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":127,"author":{"gitId":"coderhuang559"},"content":"            throw new EmptyTaskException(\"mark\");","lastModifiedDate":"2023-08-24"},{"lineNumber":128,"author":{"gitId":"coderhuang559"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":129,"author":{"gitId":"coderhuang559"},"content":"        String[] parts \u003d userInput.split(\"\\\\s+\");","lastModifiedDate":"2023-08-21"},{"lineNumber":130,"author":{"gitId":"coderhuang559"},"content":"        int taskIndex \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2023-08-21"},{"lineNumber":131,"author":{"gitId":"coderhuang559"},"content":"        if (taskIndex \u003e\u003d inputNum || taskIndex \u003c 0 || taskArray.get(taskIndex) \u003d\u003d null) {","lastModifiedDate":"2023-08-24"},{"lineNumber":132,"author":{"gitId":"coderhuang559"},"content":"            throw new OutOfRangeException(\"Mark\");","lastModifiedDate":"2023-08-24"},{"lineNumber":133,"author":{"gitId":"coderhuang559"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":134,"author":{"gitId":"coderhuang559"},"content":"        Task currentTask \u003d taskArray.get(taskIndex);","lastModifiedDate":"2023-08-24"},{"lineNumber":135,"author":{"gitId":"coderhuang559"},"content":"        currentTask.markDone();","lastModifiedDate":"2023-08-21"},{"lineNumber":136,"author":{"gitId":"coderhuang559"},"content":"        System.out.println(","lastModifiedDate":"2023-08-22"},{"lineNumber":137,"author":{"gitId":"coderhuang559"},"content":"                \"    ____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":138,"author":{"gitId":"coderhuang559"},"content":"                        \"     Nice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":139,"author":{"gitId":"coderhuang559"},"content":"                        \"       \" + currentTask.toString() + \"\\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":140,"author":{"gitId":"coderhuang559"},"content":"                        \"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":141,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":142,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":143,"author":{"gitId":"coderhuang559"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":144,"author":{"gitId":"coderhuang559"},"content":"     * Unmarks a task as done based on user input.","lastModifiedDate":"2023-08-24"},{"lineNumber":145,"author":{"gitId":"coderhuang559"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":146,"author":{"gitId":"coderhuang559"},"content":"     * @param userInput The user input containing the task index.","lastModifiedDate":"2023-08-24"},{"lineNumber":147,"author":{"gitId":"coderhuang559"},"content":"     * @param inputNum  The number of tasks entered.","lastModifiedDate":"2023-08-24"},{"lineNumber":148,"author":{"gitId":"coderhuang559"},"content":"     * @param taskArray An ArrayList containing the tasks.","lastModifiedDate":"2023-08-24"},{"lineNumber":149,"author":{"gitId":"coderhuang559"},"content":"     * @throws EmptyTaskException  If the task is missing.","lastModifiedDate":"2023-08-24"},{"lineNumber":150,"author":{"gitId":"coderhuang559"},"content":"     * @throws OutOfRangeException If the task index is out of range.","lastModifiedDate":"2023-08-24"},{"lineNumber":151,"author":{"gitId":"coderhuang559"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":152,"author":{"gitId":"coderhuang559"},"content":"    private static void unmarkTask(String userInput, int inputNum, ArrayList\u003cTask\u003e taskArray) throws EmptyTaskException, OutOfRangeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":153,"author":{"gitId":"coderhuang559"},"content":"        if (userInput.equals(\"unmark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":154,"author":{"gitId":"coderhuang559"},"content":"            throw new EmptyTaskException(\"unmark\");","lastModifiedDate":"2023-08-24"},{"lineNumber":155,"author":{"gitId":"coderhuang559"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":156,"author":{"gitId":"coderhuang559"},"content":"        String[] parts \u003d userInput.split(\"\\\\s+\");","lastModifiedDate":"2023-08-21"},{"lineNumber":157,"author":{"gitId":"coderhuang559"},"content":"        int taskIndex \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2023-08-21"},{"lineNumber":158,"author":{"gitId":"coderhuang559"},"content":"        if (taskIndex \u003e\u003d inputNum || taskIndex \u003c 0 || taskArray.get(taskIndex) \u003d\u003d null) {","lastModifiedDate":"2023-08-24"},{"lineNumber":159,"author":{"gitId":"coderhuang559"},"content":"            throw new OutOfRangeException(\"Unmark\");","lastModifiedDate":"2023-08-24"},{"lineNumber":160,"author":{"gitId":"coderhuang559"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":161,"author":{"gitId":"coderhuang559"},"content":"        Task currentTask \u003d taskArray.get(taskIndex);","lastModifiedDate":"2023-08-24"},{"lineNumber":162,"author":{"gitId":"coderhuang559"},"content":"        currentTask.unmarkDone();","lastModifiedDate":"2023-08-21"},{"lineNumber":163,"author":{"gitId":"coderhuang559"},"content":"        System.out.println(","lastModifiedDate":"2023-08-22"},{"lineNumber":164,"author":{"gitId":"coderhuang559"},"content":"                \"    ____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":165,"author":{"gitId":"coderhuang559"},"content":"                        \"     OK, I\u0027ve marked this task as not done yet:\\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":166,"author":{"gitId":"coderhuang559"},"content":"                        \"       \" + currentTask.toString() + \"\\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":167,"author":{"gitId":"coderhuang559"},"content":"                        \"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":168,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":169,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":170,"author":{"gitId":"coderhuang559"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":171,"author":{"gitId":"coderhuang559"},"content":"     * Creates and adds a new ToDo task.","lastModifiedDate":"2023-08-24"},{"lineNumber":172,"author":{"gitId":"coderhuang559"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":173,"author":{"gitId":"coderhuang559"},"content":"     * @param taskName  The name of the ToDo task.","lastModifiedDate":"2023-08-24"},{"lineNumber":174,"author":{"gitId":"coderhuang559"},"content":"     * @param inputNum  The number of tasks entered.","lastModifiedDate":"2023-08-24"},{"lineNumber":175,"author":{"gitId":"coderhuang559"},"content":"     * @param taskArray An ArrayList containing the tasks.","lastModifiedDate":"2023-08-24"},{"lineNumber":176,"author":{"gitId":"coderhuang559"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":177,"author":{"gitId":"coderhuang559"},"content":"    private static void makeToDo(String taskName, int inputNum, ArrayList\u003cTask\u003e taskArray) {","lastModifiedDate":"2023-08-24"},{"lineNumber":178,"author":{"gitId":"coderhuang559"},"content":"        taskArray.add(new ToDo(taskName));","lastModifiedDate":"2023-08-24"},{"lineNumber":179,"author":{"gitId":"coderhuang559"},"content":"        System.out.println(","lastModifiedDate":"2023-08-22"},{"lineNumber":180,"author":{"gitId":"coderhuang559"},"content":"                \"    ____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":181,"author":{"gitId":"coderhuang559"},"content":"                        \"     Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":182,"author":{"gitId":"coderhuang559"},"content":"                        \"       \" + taskArray.get(inputNum).toString() + \"\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":183,"author":{"gitId":"coderhuang559"},"content":"                        \"     Now you have \" + (inputNum + 1) + \" task(s) in the list.\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":184,"author":{"gitId":"coderhuang559"},"content":"                        \"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-08-22"},{"lineNumber":185,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":186,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":187,"author":{"gitId":"coderhuang559"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":188,"author":{"gitId":"coderhuang559"},"content":"     * Extracts and returns parts for creating a Deadline task.","lastModifiedDate":"2023-08-24"},{"lineNumber":189,"author":{"gitId":"coderhuang559"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":190,"author":{"gitId":"coderhuang559"},"content":"     * @param userInput The user input containing task details.","lastModifiedDate":"2023-08-24"},{"lineNumber":191,"author":{"gitId":"coderhuang559"},"content":"     * @return An array containing the task name and due date.","lastModifiedDate":"2023-08-24"},{"lineNumber":192,"author":{"gitId":"coderhuang559"},"content":"     * @throws EmptyDateException If the due date is missing.","lastModifiedDate":"2023-08-24"},{"lineNumber":193,"author":{"gitId":"coderhuang559"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":194,"author":{"gitId":"coderhuang559"},"content":"    private static String[] getDeadlineParts(String userInput) throws EmptyDateException {","lastModifiedDate":"2023-08-24"},{"lineNumber":195,"author":{"gitId":"coderhuang559"},"content":"        String description \u003d userInput.substring(\"deadline\".length()).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":196,"author":{"gitId":"coderhuang559"},"content":"        String[] parts \u003d description.split(\"/by\");","lastModifiedDate":"2023-08-24"},{"lineNumber":197,"author":{"gitId":"coderhuang559"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-24"},{"lineNumber":198,"author":{"gitId":"coderhuang559"},"content":"            throw new EmptyDateException(\"deadline\");","lastModifiedDate":"2023-08-24"},{"lineNumber":199,"author":{"gitId":"coderhuang559"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":200,"author":{"gitId":"coderhuang559"},"content":"        return new String[]{parts[0].trim(), parts[1].trim()};","lastModifiedDate":"2023-08-24"},{"lineNumber":201,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":202,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":203,"author":{"gitId":"coderhuang559"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":204,"author":{"gitId":"coderhuang559"},"content":"     * Creates and adds a new Deadline task.","lastModifiedDate":"2023-08-24"},{"lineNumber":205,"author":{"gitId":"coderhuang559"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":206,"author":{"gitId":"coderhuang559"},"content":"     * @param taskName  The name of the Deadline task.","lastModifiedDate":"2023-08-24"},{"lineNumber":207,"author":{"gitId":"coderhuang559"},"content":"     * @param by        The due date of the Deadline task.","lastModifiedDate":"2023-08-24"},{"lineNumber":208,"author":{"gitId":"coderhuang559"},"content":"     * @param inputNum  The number of tasks entered.","lastModifiedDate":"2023-08-24"},{"lineNumber":209,"author":{"gitId":"coderhuang559"},"content":"     * @param taskArray An ArrayList containing the tasks.","lastModifiedDate":"2023-08-24"},{"lineNumber":210,"author":{"gitId":"coderhuang559"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":211,"author":{"gitId":"coderhuang559"},"content":"    private static void makeDeadline(String taskName, String by, int inputNum, ArrayList\u003cTask\u003e taskArray) {","lastModifiedDate":"2023-08-24"},{"lineNumber":212,"author":{"gitId":"coderhuang559"},"content":"        taskArray.add(new Deadline(taskName, by));","lastModifiedDate":"2023-08-24"},{"lineNumber":213,"author":{"gitId":"coderhuang559"},"content":"        System.out.println(","lastModifiedDate":"2023-08-22"},{"lineNumber":214,"author":{"gitId":"coderhuang559"},"content":"                \"    ____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":215,"author":{"gitId":"coderhuang559"},"content":"                        \"     Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":216,"author":{"gitId":"coderhuang559"},"content":"                        \"       \" + taskArray.get(inputNum).toString() + \"\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":217,"author":{"gitId":"coderhuang559"},"content":"                        \"     Now you have \" + (inputNum + 1) + \" task(s) in the list.\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":218,"author":{"gitId":"coderhuang559"},"content":"                        \"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-08-22"},{"lineNumber":219,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":220,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":221,"author":{"gitId":"coderhuang559"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":222,"author":{"gitId":"coderhuang559"},"content":"     * Extracts and returns parts for creating an Event task.","lastModifiedDate":"2023-08-24"},{"lineNumber":223,"author":{"gitId":"coderhuang559"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":224,"author":{"gitId":"coderhuang559"},"content":"     * @param userInput The user input containing task details.","lastModifiedDate":"2023-08-24"},{"lineNumber":225,"author":{"gitId":"coderhuang559"},"content":"     * @return An array containing the task name, start date, and end date.","lastModifiedDate":"2023-08-24"},{"lineNumber":226,"author":{"gitId":"coderhuang559"},"content":"     * @throws EmptyDateException If the start or end date is missing.","lastModifiedDate":"2023-08-24"},{"lineNumber":227,"author":{"gitId":"coderhuang559"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":228,"author":{"gitId":"coderhuang559"},"content":"    private static String[] getEventParts(String userInput) throws EmptyDateException {","lastModifiedDate":"2023-08-24"},{"lineNumber":229,"author":{"gitId":"coderhuang559"},"content":"        String description \u003d userInput.substring(\"event\".length()).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":230,"author":{"gitId":"coderhuang559"},"content":"        String[] partsA \u003d description.split(\"/from\");","lastModifiedDate":"2023-08-24"},{"lineNumber":231,"author":{"gitId":"coderhuang559"},"content":"        String taskName \u003d partsA[0].trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":232,"author":{"gitId":"coderhuang559"},"content":"        String[] partsB \u003d partsA[1].split(\"/to\");","lastModifiedDate":"2023-08-24"},{"lineNumber":233,"author":{"gitId":"coderhuang559"},"content":"        if (partsB.length \u003d\u003d 1 || partsB[0].trim().isEmpty() || partsB[1].trim().isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":234,"author":{"gitId":"coderhuang559"},"content":"            throw new EmptyDateException(\"event\");","lastModifiedDate":"2023-08-24"},{"lineNumber":235,"author":{"gitId":"coderhuang559"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":236,"author":{"gitId":"coderhuang559"},"content":"        String start \u003d partsB[0].trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":237,"author":{"gitId":"coderhuang559"},"content":"        String end \u003d partsB[1].trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":238,"author":{"gitId":"coderhuang559"},"content":"        return new String[]{taskName, start, end};","lastModifiedDate":"2023-08-24"},{"lineNumber":239,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":240,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":241,"author":{"gitId":"coderhuang559"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":242,"author":{"gitId":"coderhuang559"},"content":"     * Creates and adds a new Event task.","lastModifiedDate":"2023-08-24"},{"lineNumber":243,"author":{"gitId":"coderhuang559"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":244,"author":{"gitId":"coderhuang559"},"content":"     * @param taskName  The name of the Event task.","lastModifiedDate":"2023-08-24"},{"lineNumber":245,"author":{"gitId":"coderhuang559"},"content":"     * @param start     The start date of the Event task.","lastModifiedDate":"2023-08-24"},{"lineNumber":246,"author":{"gitId":"coderhuang559"},"content":"     * @param end       The end date of the Event task.","lastModifiedDate":"2023-08-24"},{"lineNumber":247,"author":{"gitId":"coderhuang559"},"content":"     * @param inputNum  The number of tasks entered.","lastModifiedDate":"2023-08-24"},{"lineNumber":248,"author":{"gitId":"coderhuang559"},"content":"     * @param taskArray An ArrayList containing the tasks.","lastModifiedDate":"2023-08-24"},{"lineNumber":249,"author":{"gitId":"coderhuang559"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":250,"author":{"gitId":"coderhuang559"},"content":"    private static void makeEvent(String taskName, String start, String end, int inputNum, ArrayList\u003cTask\u003e taskArray) {","lastModifiedDate":"2023-08-24"},{"lineNumber":251,"author":{"gitId":"coderhuang559"},"content":"        taskArray.add(new Event(taskName, start, end));","lastModifiedDate":"2023-08-24"},{"lineNumber":252,"author":{"gitId":"coderhuang559"},"content":"        System.out.println(\"    ____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":253,"author":{"gitId":"coderhuang559"},"content":"                \"     Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":254,"author":{"gitId":"coderhuang559"},"content":"                \"       \" + taskArray.get(inputNum).toString() + \"\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":255,"author":{"gitId":"coderhuang559"},"content":"                \"     Now you have \" + (inputNum + 1) + \" task(s) in the list.\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":256,"author":{"gitId":"coderhuang559"},"content":"                \"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-08-24"},{"lineNumber":257,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":258,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":259,"author":{"gitId":"coderhuang559"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":260,"author":{"gitId":"coderhuang559"},"content":"     * Deletes a task based on user input.","lastModifiedDate":"2023-08-24"},{"lineNumber":261,"author":{"gitId":"coderhuang559"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":262,"author":{"gitId":"coderhuang559"},"content":"     * @param userInput The user input containing the task index.","lastModifiedDate":"2023-08-24"},{"lineNumber":263,"author":{"gitId":"coderhuang559"},"content":"     * @param inputNum  The number of tasks entered.","lastModifiedDate":"2023-08-24"},{"lineNumber":264,"author":{"gitId":"coderhuang559"},"content":"     * @param taskArray An ArrayList containing the tasks.","lastModifiedDate":"2023-08-24"},{"lineNumber":265,"author":{"gitId":"coderhuang559"},"content":"     * @throws EmptyTaskException  If the task is missing.","lastModifiedDate":"2023-08-24"},{"lineNumber":266,"author":{"gitId":"coderhuang559"},"content":"     * @throws OutOfRangeException If the task index is out of range.","lastModifiedDate":"2023-08-24"},{"lineNumber":267,"author":{"gitId":"coderhuang559"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":268,"author":{"gitId":"coderhuang559"},"content":"    private static void deleteTask(String userInput, int inputNum, ArrayList\u003cTask\u003e taskArray) throws EmptyTaskException, OutOfRangeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":269,"author":{"gitId":"coderhuang559"},"content":"        if (userInput.equals(\"delete\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":270,"author":{"gitId":"coderhuang559"},"content":"            throw new EmptyTaskException(\"delete\");","lastModifiedDate":"2023-08-24"},{"lineNumber":271,"author":{"gitId":"coderhuang559"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":272,"author":{"gitId":"coderhuang559"},"content":"        String[] parts \u003d userInput.split(\"\\\\s+\");","lastModifiedDate":"2023-08-24"},{"lineNumber":273,"author":{"gitId":"coderhuang559"},"content":"        int taskIndex \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":274,"author":{"gitId":"coderhuang559"},"content":"        if (taskIndex \u003e\u003d inputNum || taskIndex \u003c 0 || taskArray.get(taskIndex) \u003d\u003d null) {","lastModifiedDate":"2023-08-24"},{"lineNumber":275,"author":{"gitId":"coderhuang559"},"content":"            throw new OutOfRangeException(\"Delete\");","lastModifiedDate":"2023-08-24"},{"lineNumber":276,"author":{"gitId":"coderhuang559"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":277,"author":{"gitId":"coderhuang559"},"content":"        Task currentTask \u003d taskArray.get(taskIndex);","lastModifiedDate":"2023-08-24"},{"lineNumber":278,"author":{"gitId":"coderhuang559"},"content":"        taskArray.remove(currentTask);","lastModifiedDate":"2023-08-24"},{"lineNumber":279,"author":{"gitId":"coderhuang559"},"content":"        System.out.println(\"    ____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":280,"author":{"gitId":"coderhuang559"},"content":"                \"     Noted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":281,"author":{"gitId":"coderhuang559"},"content":"                \"       \" + currentTask + \"\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":282,"author":{"gitId":"coderhuang559"},"content":"                \"     Now you have \" + (inputNum - 1) + \" task(s) in the list.\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":283,"author":{"gitId":"coderhuang559"},"content":"                \"    ____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":284,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":285,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":286,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"coderhuang559":284,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"coderhuang559"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"coderhuang559"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"coderhuang559"},"content":"        super(msg);","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"coderhuang559"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"coderhuang559"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"coderhuang559"},"content":"        return \"POOPOO\";","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"coderhuang559"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"coderhuang559":10}},{"path":"src/main/java/EmptyDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"coderhuang559"},"content":"public class EmptyDateException extends DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"coderhuang559"},"content":"    String msg;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"coderhuang559"},"content":"    public EmptyDateException(String msg) {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"coderhuang559"},"content":"        super(msg);","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"coderhuang559"},"content":"        this.msg \u003d msg;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"coderhuang559"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"coderhuang559"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"coderhuang559"},"content":"        return \"    ____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"coderhuang559"},"content":"                \"     ☹ OOPS!!! The date of a(n) \" + this.msg + \" cannot be empty.\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"coderhuang559"},"content":"                \"    ____________________________________________________________\";","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"coderhuang559"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"coderhuang559":14}},{"path":"src/main/java/EmptyTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"coderhuang559"},"content":"public class EmptyTaskException extends DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"coderhuang559"},"content":"    String msg;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"coderhuang559"},"content":"    public EmptyTaskException(String msg) {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"coderhuang559"},"content":"        super(msg);","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"coderhuang559"},"content":"        this.msg \u003d msg;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"coderhuang559"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"coderhuang559"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"coderhuang559"},"content":"        return \"    ____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"coderhuang559"},"content":"                \"     ☹ OOPS!!! The description of a(n) \" + this.msg + \" cannot be empty.\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"coderhuang559"},"content":"                \"    ____________________________________________________________\";","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"coderhuang559"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"coderhuang559":14}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"coderhuang559"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"coderhuang559"},"content":"    protected String start;","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"coderhuang559"},"content":"    protected String end;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"coderhuang559"},"content":"    public Event(String taskName, String start, String end) {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"coderhuang559"},"content":"        super(taskName);","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"coderhuang559"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"coderhuang559"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"coderhuang559"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"coderhuang559"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"coderhuang559"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.start + \" to: \" + this.end + \")\";","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"coderhuang559"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"coderhuang559":15}},{"path":"src/main/java/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"coderhuang559"},"content":"public class InvalidInputException extends DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"coderhuang559"},"content":"    public InvalidInputException(String msg) {","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"coderhuang559"},"content":"        super(msg);","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"coderhuang559"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"coderhuang559"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"coderhuang559"},"content":"        return \"    ____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"coderhuang559"},"content":"                \"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"coderhuang559"},"content":"                \"    ____________________________________________________________\";","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"coderhuang559"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"coderhuang559":12}},{"path":"src/main/java/OutOfRangeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"coderhuang559"},"content":"public class OutOfRangeException extends DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"coderhuang559"},"content":"    String msg;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"coderhuang559"},"content":"    public OutOfRangeException(String msg) {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"coderhuang559"},"content":"        super(msg);","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"coderhuang559"},"content":"        this.msg \u003d msg;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"coderhuang559"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"coderhuang559"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"coderhuang559"},"content":"        return \"    ____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"coderhuang559"},"content":"                \"     ☹ OOPS!!! \" + this.msg + \" number out of range.\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"coderhuang559"},"content":"                \"    ____________________________________________________________\";","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"coderhuang559"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"coderhuang559":15}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"coderhuang559"},"content":"public class Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"coderhuang559"},"content":"    protected String taskName;","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"coderhuang559"},"content":"    protected boolean status;","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"coderhuang559"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"coderhuang559"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"coderhuang559"},"content":"        this.status \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"coderhuang559"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"coderhuang559"},"content":"        this.status \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"coderhuang559"},"content":"    public void unmarkDone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"coderhuang559"},"content":"        this.status \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"coderhuang559"},"content":"    public String getName() {","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"coderhuang559"},"content":"        return this.taskName;","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"coderhuang559"},"content":"    public boolean getStatus() {","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"coderhuang559"},"content":"        return this.status;","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"coderhuang559"},"content":"    public String statusString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"coderhuang559"},"content":"        String statusString;","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"coderhuang559"},"content":"        if (this.status) {","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"coderhuang559"},"content":"            statusString \u003d \"X\";","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"coderhuang559"},"content":"        } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"coderhuang559"},"content":"            statusString \u003d \" \";","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"coderhuang559"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"coderhuang559"},"content":"        return \"[\" + statusString + \"]\";","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"coderhuang559"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"coderhuang559"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"coderhuang559"},"content":"        return statusString() + \" \" + this.taskName;","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"coderhuang559"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"coderhuang559":38}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"coderhuang559"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"coderhuang559"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"coderhuang559"},"content":"        super(taskName);","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"coderhuang559"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"coderhuang559"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"coderhuang559"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"coderhuang559"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"coderhuang559":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"coderhuang559"},"content":"todo borrow book","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"coderhuang559"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"coderhuang559"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"coderhuang559"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"coderhuang559"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"coderhuang559"},"content":"todo","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"coderhuang559"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"coderhuang559"},"content":"deadline eat /by","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"coderhuang559"},"content":"unmark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"coderhuang559"},"content":"event wedding /from /to 8pm","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"coderhuang559"},"content":"mark 3","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"coderhuang559"},"content":"delete 1","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"coderhuang559"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"coderhuang559"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"coderhuang559":14}}]
