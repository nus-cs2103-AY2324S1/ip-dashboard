[{"path":"src/main/java/duke/DateParserService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bobscodedump"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"bobscodedump"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"bobscodedump"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"bobscodedump"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"bobscodedump"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"bobscodedump"},"content":"public class DateParserService {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"bobscodedump"},"content":"    public static LocalDate parseDate(String date) throws DateTimeParseException {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"bobscodedump"},"content":"        date \u003d date.strip();","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"bobscodedump"},"content":"        DateTimeFormatterBuilder dateTimeFormatterBuilder \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"bobscodedump"},"content":"                .append(DateTimeFormatter.ofPattern(\"[MM/dd/yyyy]\" + \"[dd-MM-yyyy]\" + \"[yyyy-MM-dd]\"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"bobscodedump"},"content":"                        + \"[MMM dd yyyy]\" + \"[dd MMM yyyy]\" + \"[dd/MM/yyyy]\" + \"[yyyy/MM/dd]\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"bobscodedump"},"content":"        DateTimeFormatter dateTimeFormatter \u003d dateTimeFormatterBuilder.toFormatter();","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"bobscodedump"},"content":"        return LocalDate.parse(date, dateTimeFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"bobscodedump"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"bobscodedump":17}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bobscodedump"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"bobscodedump"},"content":"import duke.command.Command;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"bobscodedump"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"bobscodedump"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"bobscodedump"},"content":" * Duke is a simple task management application that allows users to add, delete and list tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"bobscodedump"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"bobscodedump"},"content":"public class Duke {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"bobscodedump"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"bobscodedump"},"content":"    private DukeList tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"bobscodedump"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"bobscodedump"},"content":"     * Constructs a Duke object with the specified file path for data storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"bobscodedump"},"content":"     * @param filePath The path to the file where tasks are stored.","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"bobscodedump"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"bobscodedump"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"bobscodedump"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"bobscodedump"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"bobscodedump"},"content":"            tasks \u003d new DukeList(storage.load());","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"bobscodedump"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"bobscodedump"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"bobscodedump"},"content":"            tasks \u003d new DukeList();","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"bobscodedump"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"bobscodedump"},"content":"     * Runs the main loop of the Duke application.","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"bobscodedump"},"content":"    public void run() {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"bobscodedump"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"bobscodedump"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"bobscodedump"},"content":"        while (!isExit) {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"bobscodedump"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"bobscodedump"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"bobscodedump"},"content":"                ui.showLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"bobscodedump"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"bobscodedump"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"bobscodedump"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"bobscodedump"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"bobscodedump"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"bobscodedump"},"content":"            } finally {","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"bobscodedump"},"content":"                ui.showLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"bobscodedump"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"bobscodedump"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"bobscodedump"},"content":"        ui.showBye();","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"bobscodedump"},"content":"     * The main entry point for the Duke application.","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"bobscodedump"},"content":"     * @param args Command-line arguments (not used).","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"bobscodedump"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"bobscodedump"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"bobscodedump"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"bobscodedump":60}},{"path":"src/main/java/duke/DukeList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bobscodedump"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"bobscodedump"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"bobscodedump"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"bobscodedump"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"bobscodedump"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"bobscodedump"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"bobscodedump"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"bobscodedump"},"content":"import java.util.List;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"bobscodedump"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"bobscodedump"},"content":" * The DukeList class represents a list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"bobscodedump"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"bobscodedump"},"content":"public class DukeList {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"bobscodedump"},"content":"    private final List\u003cTask\u003e dukeList;","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"bobscodedump"},"content":"     * Constructs a new DukeList object with an empty list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"bobscodedump"},"content":"    public DukeList() {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"bobscodedump"},"content":"        dukeList \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"bobscodedump"},"content":"     * Constructs a new DukeList object with a provided list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"bobscodedump"},"content":"     * @param list The initial list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"bobscodedump"},"content":"    public DukeList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"bobscodedump"},"content":"        dukeList \u003d list;","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"bobscodedump"},"content":"     * Gets the number of tasks in the list.","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"bobscodedump"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"bobscodedump"},"content":"    public int getSize() {","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"bobscodedump"},"content":"        return dukeList.size();","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"bobscodedump"},"content":"     * Retrieves a task from the list based on its index.","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"bobscodedump"},"content":"     * @param key The index of the task to retrieve.","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"bobscodedump"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"bobscodedump"},"content":"    public Task get(int key) {","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"bobscodedump"},"content":"        return dukeList.get(key);","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"bobscodedump"},"content":"     * Adds a task to the list.","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"bobscodedump"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"bobscodedump"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"bobscodedump"},"content":"        dukeList.add(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"bobscodedump"},"content":"     * Deletes a task from the list based on its index.","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"bobscodedump"},"content":"     * @param key The index of the task to be deleted.","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"bobscodedump"},"content":"    public void delete(int key) {","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"bobscodedump"},"content":"        dukeList.remove(key);","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"bobscodedump"},"content":"     * Returns a string representation of the DukeList.","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"bobscodedump"},"content":"     * @return A formatted string containing the tasks in the list.","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"bobscodedump"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"bobscodedump"},"content":"    public String toString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"bobscodedump"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"bobscodedump"},"content":"        for (int i \u003d 1; i \u003c\u003d dukeList.size(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"bobscodedump"},"content":"            Task task \u003d dukeList.get(i - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"bobscodedump"},"content":"            str.append(i).append(\". \").append(task.toString()).append(\"\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"bobscodedump"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"bobscodedump"},"content":"        return str.toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"bobscodedump"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"bobscodedump":85}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bobscodedump"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"bobscodedump"},"content":"import duke.command.AddDeadlineCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"bobscodedump"},"content":"import duke.command.AddEventCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"bobscodedump"},"content":"import duke.command.AddToDoCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"bobscodedump"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"bobscodedump"},"content":"import duke.command.Command;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"bobscodedump"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"bobscodedump"},"content":"import duke.command.DisplayCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"bobscodedump"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"bobscodedump"},"content":"import duke.command.UnMarkCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"bobscodedump"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"bobscodedump"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"bobscodedump"},"content":" * The Parser class is responsible for parsing user commands into executable commands.","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"bobscodedump"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"bobscodedump"},"content":"public class Parser {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"bobscodedump"},"content":"     * Parses the user command and returns the corresponding Command object.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"bobscodedump"},"content":"     * @param command The user\u0027s input command.","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"bobscodedump"},"content":"     * @return A Command object that corresponds to the user\u0027s command.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"bobscodedump"},"content":"     * @throws DukeException If the user command is not recognized or has incorrect format.","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"bobscodedump"},"content":"    public static Command parse(String command) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"bobscodedump"},"content":"        if (command.equals(\"list\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"bobscodedump"},"content":"            return new DisplayCommand(command);","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"bobscodedump"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"bobscodedump"},"content":"        if (command.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"bobscodedump"},"content":"            return new MarkCommand(command);","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"bobscodedump"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"bobscodedump"},"content":"        if (command.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"bobscodedump"},"content":"            return new UnMarkCommand(command);","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"bobscodedump"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"bobscodedump"},"content":"        if (command.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"bobscodedump"},"content":"            return new AddToDoCommand(command);","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"bobscodedump"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"bobscodedump"},"content":"        if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"bobscodedump"},"content":"            return new AddDeadlineCommand(command);","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"bobscodedump"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"bobscodedump"},"content":"        if (command.startsWith(\"event\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"bobscodedump"},"content":"            return new AddEventCommand(command);","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"bobscodedump"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"bobscodedump"},"content":"        if (command.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"bobscodedump"},"content":"            return new DeleteCommand(command);","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"bobscodedump"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"bobscodedump"},"content":"        if (command.equals(\"bye\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"bobscodedump"},"content":"            return new ByeCommand(command);","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"bobscodedump"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"bobscodedump"},"content":"        throw new DukeException(\"Unrecognized command :(\");","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"bobscodedump"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"bobscodedump":53}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bobscodedump"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"bobscodedump"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"bobscodedump"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"bobscodedump"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"bobscodedump"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"bobscodedump"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"bobscodedump"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"bobscodedump"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"bobscodedump"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"bobscodedump"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"bobscodedump"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"bobscodedump"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"bobscodedump"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"bobscodedump"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"bobscodedump"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"bobscodedump"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"bobscodedump"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"bobscodedump"},"content":" * The Storage class handles loading and saving tasks to a file.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"bobscodedump"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"bobscodedump"},"content":"public class Storage {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"bobscodedump"},"content":"    private final String filePath;","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"bobscodedump"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"bobscodedump"},"content":"     * @param filePath The path to the file where tasks are stored.","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"bobscodedump"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"bobscodedump"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"bobscodedump"},"content":"     * Loads tasks from the file and returns them as an ArrayList.","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"bobscodedump"},"content":"     * @return An ArrayList containing the loaded tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"bobscodedump"},"content":"     * @throws DukeException If there is an error while loading tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"bobscodedump"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"bobscodedump"},"content":"        ArrayList\u003cTask\u003e dukeList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"bobscodedump"},"content":"        String[] splitFilePath \u003d this.filePath.split(\"/\");","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"bobscodedump"},"content":"        String foldersPath \u003d String.join(\"/\", Arrays.copyOf(splitFilePath, splitFilePath.length - 1));","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"bobscodedump"},"content":"        new File(foldersPath).mkdirs();","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"bobscodedump"},"content":"        boolean fileExists;","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"bobscodedump"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"bobscodedump"},"content":"            fileExists \u003d !new File(filePath).createNewFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"bobscodedump"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"bobscodedump"},"content":"            throw new DukeException(\"Error creating file.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"bobscodedump"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"bobscodedump"},"content":"        if (fileExists) {","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"bobscodedump"},"content":"            BufferedReader reader \u003d null;","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"bobscodedump"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"bobscodedump"},"content":"                reader \u003d new BufferedReader(","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"bobscodedump"},"content":"                        new FileReader(this.filePath));","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"bobscodedump"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"bobscodedump"},"content":"                throw new DukeException(\"File not found.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"bobscodedump"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"bobscodedump"},"content":"            String line;","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"bobscodedump"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"bobscodedump"},"content":"                while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"bobscodedump"},"content":"                    if (line.startsWith(\"T\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"bobscodedump"},"content":"                        String[] inputs \u003d line.split(\" \\\\| \", 3);","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"bobscodedump"},"content":"                        boolean isDone \u003d inputs[1].equals(\"1\");","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"bobscodedump"},"content":"                        ToDo todo \u003d new ToDo(inputs[2], isDone);","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"bobscodedump"},"content":"                        dukeList.add(todo);","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"bobscodedump"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"bobscodedump"},"content":"                    if (line.startsWith(\"D\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"bobscodedump"},"content":"                        String[] inputs \u003d line.split(\" \\\\| \", 4);","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"bobscodedump"},"content":"                        boolean isDone \u003d inputs[1].equals(\"1\");","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"bobscodedump"},"content":"                        LocalDate b;","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"bobscodedump"},"content":"                        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"bobscodedump"},"content":"                            b \u003d DateParserService.parseDate(inputs[3]);","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"bobscodedump"},"content":"                        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"bobscodedump"},"content":"                            throw new DukeException(\"Invalid date format\");","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"bobscodedump"},"content":"                        }","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"bobscodedump"},"content":"                        Deadline deadline \u003d new Deadline(inputs[2], isDone, b);","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"bobscodedump"},"content":"                        dukeList.add(deadline);","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"bobscodedump"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"bobscodedump"},"content":"                    if (line.startsWith(\"E\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"bobscodedump"},"content":"                        String[] inputs \u003d line.split(\" \\\\| \", 5);","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"bobscodedump"},"content":"                        boolean isDone \u003d inputs[1].equals(\"1\");","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"bobscodedump"},"content":"                        LocalDate f;","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"bobscodedump"},"content":"                        LocalDate t;","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"bobscodedump"},"content":"                        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"bobscodedump"},"content":"                            f \u003d DateParserService.parseDate(inputs[3]);","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"bobscodedump"},"content":"                            t \u003d DateParserService.parseDate(inputs[4]);","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"bobscodedump"},"content":"                        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"bobscodedump"},"content":"                            throw new DukeException(\"Invalid date format\");","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"bobscodedump"},"content":"                        }","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"bobscodedump"},"content":"                        Event event \u003d new Event(inputs[2], isDone, f, t);","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"bobscodedump"},"content":"                        dukeList.add(event);","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"bobscodedump"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"bobscodedump"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"bobscodedump"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"bobscodedump"},"content":"                throw new DukeException(\"Error reading file.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"bobscodedump"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"bobscodedump"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"bobscodedump"},"content":"        return dukeList;","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"bobscodedump"},"content":"     * Writes tasks from the given DukeList to the file.","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"bobscodedump"},"content":"     * @param data The DukeList containing tasks to be written to the file.","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"bobscodedump"},"content":"     * @throws IOException If there is an error while writing to the file.","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"bobscodedump"},"content":"    public void writeToFile(DukeList data) throws IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"bobscodedump"},"content":"        FileWriter writer \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"bobscodedump"},"content":"        for (int i \u003d 0; i \u003c data.getSize(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"bobscodedump"},"content":"            Task entry \u003d data.get(i);","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"bobscodedump"},"content":"            writer.write(entry.writeFile() + \"\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"bobscodedump"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"bobscodedump"},"content":"        writer.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"bobscodedump"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"bobscodedump":117}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bobscodedump"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"bobscodedump"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"bobscodedump"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"bobscodedump"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"bobscodedump"},"content":" * The Ui class handles user interface interactions and messages.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"bobscodedump"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"bobscodedump"},"content":"public class Ui {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"bobscodedump"},"content":"     * Displays an error message for loading the storage file.","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"bobscodedump"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"bobscodedump"},"content":"        System.out.println(\"Error loading storage file\");","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"bobscodedump"},"content":"     * Displays the welcome message when the program starts.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"bobscodedump"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"bobscodedump"},"content":"        String logo \u003d \"Hello! I am Bob\\n\"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"bobscodedump"},"content":"                + \"What can I do for you?\\n\";","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"bobscodedump"},"content":"        System.out.println(logo);","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"bobscodedump"},"content":"     * Reads a command entered by the user.","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"bobscodedump"},"content":"     * @return The user\u0027s input command.","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"bobscodedump"},"content":"    public String readCommand() {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"bobscodedump"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"bobscodedump"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"bobscodedump"},"content":"     * Displays a horizontal line as a separator.","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"bobscodedump"},"content":"    public void showLine() {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"bobscodedump"},"content":"        System.out.println(\"_______________________________\");","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"bobscodedump"},"content":"     * Displays an error message.","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"bobscodedump"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"bobscodedump"},"content":"    public void showError(String message) {","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"bobscodedump"},"content":"        System.out.println(\"Error: \" + message);","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"bobscodedump"},"content":"     * Displays a goodbye message when the program ends.","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"bobscodedump"},"content":"    public void showBye() {","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"bobscodedump"},"content":"        String bye \u003d \"Bye! Hope to see you again soon!\\n\";","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"bobscodedump"},"content":"        System.out.println(bye);","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"bobscodedump"},"content":"     * Displays a given string message.","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"bobscodedump"},"content":"     * @param str The string message to be displayed.","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"bobscodedump"},"content":"    public void display(String str) {","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"bobscodedump"},"content":"        System.out.println(str);","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"bobscodedump"},"content":"     * Prints the string representation of a DukeList.","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"bobscodedump"},"content":"     * @param list The DukeList to be printed.","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"bobscodedump"},"content":"    public void printList(DukeList list) {","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"bobscodedump"},"content":"        System.out.println(list.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"bobscodedump"},"content":"     * Displays a message indicating a task has been marked as done.","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"bobscodedump"},"content":"     * @param task The task that was marked as done.","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"bobscodedump"},"content":"    public void markDone(Task task) {","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"bobscodedump"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + \"\\t\" + task.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"bobscodedump"},"content":"     * Displays a message indicating a task has been unmarked (not done).","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"bobscodedump"},"content":"     * @param task The task that was unmarked.","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"bobscodedump"},"content":"    public void unmark(Task task) {","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"bobscodedump"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\" + \"\\t\" + task.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"bobscodedump"},"content":"     * Displays a message indicating a task has been added to the list.","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"bobscodedump"},"content":"     * @param task The task that was added.","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"bobscodedump"},"content":"     * @param size The updated size of the task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"bobscodedump"},"content":"    public void addToList(Task task, int size) {","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"bobscodedump"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\\t\" + task.toString() +","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"bobscodedump"},"content":"                \"\\nNow you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"bobscodedump"},"content":"     * Displays a message indicating a task has been deleted from the list.","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"bobscodedump"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"bobscodedump"},"content":"     * @param size The updated size of the task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"bobscodedump"},"content":"    public void delete(Task task, int size) {","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"bobscodedump"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n\\t\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"bobscodedump"},"content":"                task.toString() + \"\\n Now you have \" + size +","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"bobscodedump"},"content":"                \" tasks in the list.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"bobscodedump"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"bobscodedump":120}},{"path":"src/main/java/duke/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bobscodedump"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"bobscodedump"},"content":"import duke.DateParserService;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"bobscodedump"},"content":"import duke.DukeList;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"bobscodedump"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"bobscodedump"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"bobscodedump"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"bobscodedump"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"bobscodedump"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"bobscodedump"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"bobscodedump"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"bobscodedump"},"content":" * The AddDeadlineCommand class represents a command to add a new Deadline task to the list.","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"bobscodedump"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"bobscodedump"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"bobscodedump"},"content":"     * Constructs a new AddDeadlineCommand object with the specified command.","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"bobscodedump"},"content":"     * @param command The input command string.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"bobscodedump"},"content":"    public AddDeadlineCommand(String command) {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"bobscodedump"},"content":"        super(command);","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"bobscodedump"},"content":"     * Executes the add Deadline command, adding a new Deadline task to the list.","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"bobscodedump"},"content":"     * @param tasks   The DukeList containing the list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"bobscodedump"},"content":"     * @param ui      The Ui object for user interaction.","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"bobscodedump"},"content":"     * @param storage The Storage object for file storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"bobscodedump"},"content":"     * @throws DukeException If there is an error during execution.","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"bobscodedump"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"bobscodedump"},"content":"    public void execute(DukeList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"bobscodedump"},"content":"        String[] inputs \u003d this.command.split(\" \", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"bobscodedump"},"content":"        Deadline deadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"bobscodedump"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"bobscodedump"},"content":"            String[] by \u003d inputs[1].split(\"/by\", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"bobscodedump"},"content":"            LocalDate b \u003d DateParserService.parseDate(by[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"bobscodedump"},"content":"            deadline \u003d new Deadline(by[0], b);","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"bobscodedump"},"content":"        } catch (ArrayIndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"bobscodedump"},"content":"            if (e instanceof ArrayIndexOutOfBoundsException) {","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"bobscodedump"},"content":"                throw new DukeException(\"Invalid Deadline format\");","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"bobscodedump"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"bobscodedump"},"content":"            throw new DukeException(\"Invalid date format\");","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"bobscodedump"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"bobscodedump"},"content":"        tasks.add(deadline);","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"bobscodedump"},"content":"        ui.addToList(deadline, tasks.getSize());","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"bobscodedump"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"bobscodedump":51}},{"path":"src/main/java/duke/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bobscodedump"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"bobscodedump"},"content":"import duke.DateParserService;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"bobscodedump"},"content":"import duke.DukeList;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"bobscodedump"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"bobscodedump"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"bobscodedump"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"bobscodedump"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"bobscodedump"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"bobscodedump"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"bobscodedump"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"bobscodedump"},"content":" * The AddEventCommand class represents a command to add a new Event task to the list.","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"bobscodedump"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"bobscodedump"},"content":"public class AddEventCommand extends Command{","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"bobscodedump"},"content":"     * Constructs a new AddEventCommand object with the specified command.","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"bobscodedump"},"content":"     * @param command The input command string.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"bobscodedump"},"content":"    public AddEventCommand(String command) {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"bobscodedump"},"content":"        super(command);","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"bobscodedump"},"content":"     * Executes the add Event command, adding a new Event task to the list.","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"bobscodedump"},"content":"     * @param tasks   The DukeList containing the list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"bobscodedump"},"content":"     * @param ui      The Ui object for user interaction.","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"bobscodedump"},"content":"     * @param storage The Storage object for file storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"bobscodedump"},"content":"     * @throws DukeException If there is an error during execution.","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"bobscodedump"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"bobscodedump"},"content":"    public void execute(DukeList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"bobscodedump"},"content":"        String[] inputs \u003d this.command.split(\" \", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"bobscodedump"},"content":"        Event event;","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"bobscodedump"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"bobscodedump"},"content":"            String[] from \u003d inputs[1].split(\"/from\", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"bobscodedump"},"content":"            String[] to \u003d from[1].split(\"/to\", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"bobscodedump"},"content":"            LocalDate f \u003d DateParserService.parseDate(to[0]);","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"bobscodedump"},"content":"            LocalDate t \u003d DateParserService.parseDate(to[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"bobscodedump"},"content":"            event \u003d new Event(from[0], f, t);","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"bobscodedump"},"content":"        } catch (ArrayIndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"bobscodedump"},"content":"            if (e instanceof ArrayIndexOutOfBoundsException) {","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"bobscodedump"},"content":"                throw new DukeException(\"Invalid Event format\");","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"bobscodedump"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"bobscodedump"},"content":"            throw new DukeException(\"Invalid date format\");","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"bobscodedump"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"bobscodedump"},"content":"        tasks.add(event);","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"bobscodedump"},"content":"        ui.addToList(event, tasks.getSize());","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"bobscodedump"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"bobscodedump":53}},{"path":"src/main/java/duke/command/AddToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bobscodedump"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"bobscodedump"},"content":"import duke.DukeList;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"bobscodedump"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"bobscodedump"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"bobscodedump"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"bobscodedump"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"bobscodedump"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"bobscodedump"},"content":" * The AddToDoCommand class represents a command to add a new ToDo task to the list.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"bobscodedump"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"bobscodedump"},"content":"public class AddToDoCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"bobscodedump"},"content":"     * Constructs a new AddToDoCommand object with the specified command.","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"bobscodedump"},"content":"     * @param command The input command string.","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"bobscodedump"},"content":"    public AddToDoCommand(String command) {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"bobscodedump"},"content":"        super(command);","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"bobscodedump"},"content":"     * Executes the add ToDo command, adding a new ToDo task to the list.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"bobscodedump"},"content":"     * @param tasks   The DukeList containing the list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"bobscodedump"},"content":"     * @param ui      The Ui object for user interaction.","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"bobscodedump"},"content":"     * @param storage The Storage object for file storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"bobscodedump"},"content":"     * @throws DukeException If there is an error during execution.","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"bobscodedump"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"bobscodedump"},"content":"    public void execute(DukeList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"bobscodedump"},"content":"        String[] inputs \u003d this.command.split(\" \", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"bobscodedump"},"content":"        ToDo todo;","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"bobscodedump"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"bobscodedump"},"content":"            todo \u003d new ToDo(inputs[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"bobscodedump"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"bobscodedump"},"content":"            throw new DukeException(\"Invalid Todo format\");","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"bobscodedump"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"bobscodedump"},"content":"        tasks.add(todo);","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"bobscodedump"},"content":"        ui.addToList(todo, tasks.getSize());","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"bobscodedump"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"bobscodedump":42}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bobscodedump"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"bobscodedump"},"content":"import duke.DukeList;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"bobscodedump"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"bobscodedump"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"bobscodedump"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"bobscodedump"},"content":" * The ByeCommand class represents a command to exit the application.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"bobscodedump"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"bobscodedump"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"bobscodedump"},"content":"     * Constructs a new ByeCommand object with the specified command.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"bobscodedump"},"content":"     * @param command The input command string.","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"bobscodedump"},"content":"    public ByeCommand(String command) {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"bobscodedump"},"content":"        super(command);","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"bobscodedump"},"content":"     * Executes the bye command, indicating that the application should exit.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"bobscodedump"},"content":"     * @param tasks   The DukeList containing the list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"bobscodedump"},"content":"     * @param ui      The Ui object for user interaction.","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"bobscodedump"},"content":"     * @param storage The Storage object (not used in this command).","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"bobscodedump"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"bobscodedump"},"content":"    public void execute(DukeList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"bobscodedump"},"content":"        this.exit \u003d true;","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"bobscodedump"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"bobscodedump":31}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bobscodedump"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"bobscodedump"},"content":"import duke.DukeList;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"bobscodedump"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"bobscodedump"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"bobscodedump"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"bobscodedump"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"bobscodedump"},"content":" * The Command class represents an abstract command that can be executed.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"bobscodedump"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"bobscodedump"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"bobscodedump"},"content":"     * The input command string.","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"bobscodedump"},"content":"    protected final String command;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"bobscodedump"},"content":"     * Indicates whether the command should trigger an exit from the application.","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"bobscodedump"},"content":"    protected boolean exit \u003d false;","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"bobscodedump"},"content":"     * Constructs a new Command object with the specified command.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"bobscodedump"},"content":"     * @param command The input command string.","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"bobscodedump"},"content":"    public Command(String command) {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"bobscodedump"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"bobscodedump"},"content":"     * Executes the command.","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"bobscodedump"},"content":"     * @param tasks   The DukeList containing the list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"bobscodedump"},"content":"     * @param ui      The Ui object for user interaction.","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"bobscodedump"},"content":"     * @param storage The Storage object for file storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"bobscodedump"},"content":"     * @throws DukeException If there is an error during execution.","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"bobscodedump"},"content":"    public abstract void execute(DukeList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"bobscodedump"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"bobscodedump"},"content":"     * @return True if the command is an exit command, false otherwise.","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"bobscodedump"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"bobscodedump"},"content":"        return this.exit;","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"bobscodedump"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"bobscodedump":49}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bobscodedump"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"bobscodedump"},"content":"import duke.DukeList;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"bobscodedump"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"bobscodedump"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"bobscodedump"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"bobscodedump"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"bobscodedump"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"bobscodedump"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"bobscodedump"},"content":" * The DeleteCommand class represents a command to delete a task from the list.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"bobscodedump"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"bobscodedump"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"bobscodedump"},"content":"     * Constructs a new DeleteCommand object with the specified command.","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"bobscodedump"},"content":"     * @param command The input command string.","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"bobscodedump"},"content":"    public DeleteCommand(String command) {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"bobscodedump"},"content":"        super(command);","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"bobscodedump"},"content":"     * Executes the delete command, removing a task from the list.","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"bobscodedump"},"content":"     * @param tasks   The DukeList containing the list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"bobscodedump"},"content":"     * @param ui      The Ui object for user interaction.","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"bobscodedump"},"content":"     * @param storage The Storage object for file storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"bobscodedump"},"content":"     * @throws DukeException If there is an error during execution.","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"bobscodedump"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"bobscodedump"},"content":"    public void execute(DukeList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"bobscodedump"},"content":"        String[] inputs \u003d this.command.split(\" \");","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"bobscodedump"},"content":"        int key;","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"bobscodedump"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"bobscodedump"},"content":"            key \u003d Integer.parseInt(inputs[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"bobscodedump"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"bobscodedump"},"content":"            throw new DukeException(\"Invalid key given\");","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"bobscodedump"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"bobscodedump"},"content":"        if (key \u003e tasks.getSize() || key \u003c 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"bobscodedump"},"content":"            throw new DukeException(\"Key exceeds size of list\");","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"bobscodedump"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"bobscodedump"},"content":"        Task task \u003d tasks.get(key - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"bobscodedump"},"content":"        tasks.delete(key - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"bobscodedump"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"bobscodedump"},"content":"            storage.writeToFile(tasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"bobscodedump"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"bobscodedump"},"content":"            throw new DukeException(\"Failure to write to file\");","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"bobscodedump"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"bobscodedump"},"content":"        ui.delete(task, tasks.getSize());","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"bobscodedump"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"bobscodedump":53}},{"path":"src/main/java/duke/command/DisplayCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bobscodedump"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"bobscodedump"},"content":"import duke.DukeList;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"bobscodedump"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"bobscodedump"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"bobscodedump"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"bobscodedump"},"content":" * The DisplayCommand class represents a command to display the list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"bobscodedump"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"bobscodedump"},"content":"public class DisplayCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"bobscodedump"},"content":"     * Constructs a new DisplayCommand object with the specified command.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"bobscodedump"},"content":"     * @param command The input command string.","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"bobscodedump"},"content":"    public DisplayCommand(String command) {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"bobscodedump"},"content":"        super(command);","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"bobscodedump"},"content":"     * Executes the display command, printing the list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"bobscodedump"},"content":"     * @param tasks   The DukeList containing the list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"bobscodedump"},"content":"     * @param ui      The Ui object for user interaction.","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"bobscodedump"},"content":"     * @param storage The Storage object (not used in this command).","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"bobscodedump"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"bobscodedump"},"content":"    public void execute(DukeList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"bobscodedump"},"content":"        ui.printList(tasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"bobscodedump"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"bobscodedump":31}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bobscodedump"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"bobscodedump"},"content":"import duke.DukeList;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"bobscodedump"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"bobscodedump"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"bobscodedump"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"bobscodedump"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"bobscodedump"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"bobscodedump"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"bobscodedump"},"content":" * The MarkCommand class represents a command to mark a task as done.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"bobscodedump"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"bobscodedump"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"bobscodedump"},"content":"     * Constructs a new MarkCommand object with the specified command.","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"bobscodedump"},"content":"     * @param command The input command string.","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"bobscodedump"},"content":"    public MarkCommand(String command) {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"bobscodedump"},"content":"        super(command);","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"bobscodedump"},"content":"     * Executes the mark command, marking a task as done.","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"bobscodedump"},"content":"     * @param tasks   The DukeList containing the list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"bobscodedump"},"content":"     * @param ui      The Ui object for user interaction.","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"bobscodedump"},"content":"     * @param storage The Storage object for file storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"bobscodedump"},"content":"     * @throws DukeException If there is an error during execution.","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"bobscodedump"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"bobscodedump"},"content":"    public void execute(DukeList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"bobscodedump"},"content":"        String[] inputs \u003d this.command.split(\" \");","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"bobscodedump"},"content":"        int key;","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"bobscodedump"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"bobscodedump"},"content":"            key \u003d Integer.parseInt(inputs[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"bobscodedump"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"bobscodedump"},"content":"            throw new DukeException(\"Invalid key given\");","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"bobscodedump"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"bobscodedump"},"content":"        if (key \u003e tasks.getSize() || key \u003c 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"bobscodedump"},"content":"            throw new DukeException(\"Key exceeds size of list\");","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"bobscodedump"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"bobscodedump"},"content":"        Task task \u003d tasks.get(key - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"bobscodedump"},"content":"        task.markDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"bobscodedump"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"bobscodedump"},"content":"            storage.writeToFile(tasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"bobscodedump"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"bobscodedump"},"content":"            throw new DukeException(\"Failed to write to file\");","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"bobscodedump"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"bobscodedump"},"content":"        ui.markDone(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"bobscodedump"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"bobscodedump":53}},{"path":"src/main/java/duke/command/UnMarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bobscodedump"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"bobscodedump"},"content":"import duke.DukeList;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"bobscodedump"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"bobscodedump"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"bobscodedump"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"bobscodedump"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"bobscodedump"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"bobscodedump"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"bobscodedump"},"content":" * The UnMarkCommand class represents a command to mark a task as undone.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"bobscodedump"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"bobscodedump"},"content":"public class UnMarkCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"bobscodedump"},"content":"     * Constructs a new UnMarkCommand object with the specified command.","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"bobscodedump"},"content":"     * @param command The input command string.","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"bobscodedump"},"content":"    public UnMarkCommand(String command) {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"bobscodedump"},"content":"        super(command);","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"bobscodedump"},"content":"     * Executes the unmark command, marking a task as undone.","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"bobscodedump"},"content":"     * @param tasks   The DukeList containing the list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"bobscodedump"},"content":"     * @param ui      The Ui object for user interaction.","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"bobscodedump"},"content":"     * @param storage The Storage object for file storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"bobscodedump"},"content":"     * @throws DukeException If there is an error during execution.","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"bobscodedump"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"bobscodedump"},"content":"    public void execute(DukeList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"bobscodedump"},"content":"        String[] inputs \u003d this.command.split(\" \");","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"bobscodedump"},"content":"        int key;","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"bobscodedump"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"bobscodedump"},"content":"            key \u003d Integer.parseInt(inputs[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"bobscodedump"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"bobscodedump"},"content":"            throw new DukeException(\"Invalid key given\");","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"bobscodedump"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"bobscodedump"},"content":"        if (key \u003e tasks.getSize() || key \u003c 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"bobscodedump"},"content":"            throw new DukeException(\"Key exceeds size of list\");","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"bobscodedump"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"bobscodedump"},"content":"        Task task \u003d tasks.get(key - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"bobscodedump"},"content":"        task.unmark();","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"bobscodedump"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"bobscodedump"},"content":"            storage.writeToFile(tasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"bobscodedump"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"bobscodedump"},"content":"            throw new DukeException(\"Failed to write to file\");","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"bobscodedump"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"bobscodedump"},"content":"        ui.unmark(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"bobscodedump"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"bobscodedump":53}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bobscodedump"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"bobscodedump"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"bobscodedump"},"content":" * Custom exception class for Duke application.","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"bobscodedump"},"content":" * This class extends the built-in","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"bobscodedump"},"content":" * Exception class and allows creating exceptions with specific error messages.","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"bobscodedump"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"bobscodedump"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"bobscodedump"},"content":"     * Constructs a new DukeException with the specified error message.","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"bobscodedump"},"content":"     * @param message The error message describing the exceptional situation.","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"bobscodedump"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"bobscodedump"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"bobscodedump"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"bobscodedump":17}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bobscodedump"},"content":"package duke.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"bobscodedump"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"bobscodedump"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"bobscodedump"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"bobscodedump"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"bobscodedump"},"content":" * The Deadline class represents a task with a specific due date.","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"bobscodedump"},"content":" * It inherits from the Task class and adds a due date field.","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"bobscodedump"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"bobscodedump"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"bobscodedump"},"content":"     * The due date of the task.","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"bobscodedump"},"content":"    private final LocalDate by;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"bobscodedump"},"content":"     * Constructs a new Deadline object with the specified description, completion status, and due date.","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"bobscodedump"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"bobscodedump"},"content":"     * @param isDone      The completion status of the Deadline task.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"bobscodedump"},"content":"     * @param deadline    The due date of the task.","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"bobscodedump"},"content":"    public Deadline(String description, boolean isDone, LocalDate deadline) {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"bobscodedump"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"bobscodedump"},"content":"        this.by \u003d deadline;","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"bobscodedump"},"content":"     * Constructs a new Deadline object with the specified description and due date.","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"bobscodedump"},"content":"     * The deadline is initially marked as not done.","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"bobscodedump"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"bobscodedump"},"content":"     * @param deadline    The due date of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"bobscodedump"},"content":"    public Deadline(String description, LocalDate deadline) {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"bobscodedump"},"content":"        super(description);","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"bobscodedump"},"content":"        this.by \u003d deadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"bobscodedump"},"content":"     * Returns a string representation of the Deadline task.","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"bobscodedump"},"content":"     * @return A formatted string indicating the task type, completion status, description, and due date.","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"bobscodedump"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"bobscodedump"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"bobscodedump"},"content":"        String b \u003d this.by.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG));","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"bobscodedump"},"content":"        return \"[D] \" + super.toString() + \" (by: \" + b + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"bobscodedump"},"content":"     * Returns a formatted string for writing the Deadline task to a file.","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"bobscodedump"},"content":"     * @return A formatted string containing task details for file storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"bobscodedump"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"bobscodedump"},"content":"    public String writeFile() {","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"bobscodedump"},"content":"        return \"D | \" + super.writeFile() + \" | \" + this.by;","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"bobscodedump"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"bobscodedump":61}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bobscodedump"},"content":"package duke.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"bobscodedump"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"bobscodedump"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"bobscodedump"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"bobscodedump"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"bobscodedump"},"content":" * The Event class represents a task that takes place during a specific time frame.","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"bobscodedump"},"content":" * It inherits from the Task class and adds start and end time fields.","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"bobscodedump"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"bobscodedump"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"bobscodedump"},"content":"     * The start time of the event.","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"bobscodedump"},"content":"    private final LocalDate from;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"bobscodedump"},"content":"     * The end time of the event.","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"bobscodedump"},"content":"    private final LocalDate to;","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"bobscodedump"},"content":"     * Constructs a new Event object with the specified description, completion status, start time, and end time.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"bobscodedump"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"bobscodedump"},"content":"     * @param isDone      The completion status of the Event task.","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"bobscodedump"},"content":"     * @param from        The start time of the event.","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"bobscodedump"},"content":"     * @param to          The end time of the event.","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"bobscodedump"},"content":"    public Event(String description, boolean isDone, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"bobscodedump"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"bobscodedump"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"bobscodedump"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"bobscodedump"},"content":"     * Constructs a new Event object with the specified description, start time, and end time.","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"bobscodedump"},"content":"     * The event is initially marked as not done.","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"bobscodedump"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"bobscodedump"},"content":"     * @param from        The start time of the event.","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"bobscodedump"},"content":"     * @param to          The end time of the event.","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"bobscodedump"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"bobscodedump"},"content":"        super(description);","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"bobscodedump"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"bobscodedump"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"bobscodedump"},"content":"     * Returns a string representation of the Event task.","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"bobscodedump"},"content":"     * @return A formatted string indicating the task type, completion status, description, start time, and end time.","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"bobscodedump"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"bobscodedump"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"bobscodedump"},"content":"        String f \u003d this.from.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG));","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"bobscodedump"},"content":"        String t \u003d this.to.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG));","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"bobscodedump"},"content":"        return \"[E] \" + super.toString() + \" (from: \" + f + \" to: \" + t + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"bobscodedump"},"content":"     * Returns a formatted string for writing the Event task to a file.","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"bobscodedump"},"content":"     * @return A formatted string containing task details for file storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"bobscodedump"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"bobscodedump"},"content":"    public String writeFile() {","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"bobscodedump"},"content":"        return \"E | \" + super.writeFile() + \" | \" + this.from + \" | \" + this.to;","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"bobscodedump"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"bobscodedump":71}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bobscodedump"},"content":"package duke.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"bobscodedump"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"bobscodedump"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"bobscodedump"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"bobscodedump"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"bobscodedump"},"content":"import java.util.List;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"bobscodedump"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"bobscodedump"},"content":" * The Task class represents a task with a description and a completion status.","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"bobscodedump"},"content":" * Tasks can be marked as done or undone.","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"bobscodedump"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"bobscodedump"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"bobscodedump"},"content":"     * The description of the task.","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"bobscodedump"},"content":"    private final String description;","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"bobscodedump"},"content":"     * The completion status of the task.","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"bobscodedump"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"bobscodedump"},"content":"     * Constructs a new Task object with the specified description and completion status.","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"bobscodedump"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"bobscodedump"},"content":"     * @param isDone      The completion status of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"bobscodedump"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"bobscodedump"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"bobscodedump"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"bobscodedump"},"content":"     * Constructs a new Task object with the specified description.","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"bobscodedump"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"bobscodedump"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"bobscodedump"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"bobscodedump"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"bobscodedump"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"bobscodedump"},"content":"     * Gets the status of the task.","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"bobscodedump"},"content":"     * @return The status icon (\"X\" if done, \" \" if not done).","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"bobscodedump"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"bobscodedump"},"content":"        return (this.isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"bobscodedump"},"content":"     * Gets the description of the task.","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"bobscodedump"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"bobscodedump"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"bobscodedump"},"content":"        return this.description;","lastModifiedDate":"2023-08-22"},{"lineNumber":62,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":64,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":65,"author":{"gitId":"bobscodedump"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-08-22"},{"lineNumber":66,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"bobscodedump"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":68,"author":{"gitId":"bobscodedump"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":69,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":70,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":71,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":72,"author":{"gitId":"bobscodedump"},"content":"     * Marks the task as undone.","lastModifiedDate":"2023-08-22"},{"lineNumber":73,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":74,"author":{"gitId":"bobscodedump"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-22"},{"lineNumber":75,"author":{"gitId":"bobscodedump"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":77,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":78,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":79,"author":{"gitId":"bobscodedump"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2023-08-22"},{"lineNumber":80,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":81,"author":{"gitId":"bobscodedump"},"content":"     * @return A formatted string indicating the task\u0027s completion status and description.","lastModifiedDate":"2023-08-22"},{"lineNumber":82,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":83,"author":{"gitId":"bobscodedump"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":84,"author":{"gitId":"bobscodedump"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":85,"author":{"gitId":"bobscodedump"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-22"},{"lineNumber":86,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":87,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":88,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"bobscodedump"},"content":"     * Returns a formatted string for writing the task to a file.","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"bobscodedump"},"content":"     * @return A formatted string containing task details for file storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"bobscodedump"},"content":"    public String writeFile() {","lastModifiedDate":"2023-08-28"},{"lineNumber":94,"author":{"gitId":"bobscodedump"},"content":"        return this.isDone ? \"1 | \" + this.description : \"0 | \" + this.description;","lastModifiedDate":"2023-08-28"},{"lineNumber":95,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":96,"author":{"gitId":"bobscodedump"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"bobscodedump":96}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bobscodedump"},"content":"package duke.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"bobscodedump"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"bobscodedump"},"content":" * The ToDo class represents a task without a specific due date or time.","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"bobscodedump"},"content":" * It inherits from the Task class and adds a specific task type indicator.","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"bobscodedump"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"bobscodedump"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"bobscodedump"},"content":"     * Constructs a new ToDo object with the specified description and completion status.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"bobscodedump"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"bobscodedump"},"content":"     * @param isDone      The completion status of the ToDo task.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"bobscodedump"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"bobscodedump"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"bobscodedump"},"content":"     * Constructs a new ToDo object with the specified description.","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"bobscodedump"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"bobscodedump"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"bobscodedump"},"content":"        super(description);","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"bobscodedump"},"content":"     * Returns a string representation of the ToDo task.","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"bobscodedump"},"content":"     * @return A formatted string indicating the task type, completion status, and description.","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"bobscodedump"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"bobscodedump"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"bobscodedump"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"bobscodedump"},"content":"     * Returns a formatted string for writing the ToDo task to a file.","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"bobscodedump"},"content":"     * @return A formatted string containing task details for file storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"bobscodedump"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"bobscodedump"},"content":"    public String writeFile() {","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"bobscodedump"},"content":"        return \"T | \" + super.writeFile();","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"bobscodedump"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"bobscodedump":46}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bobscodedump"},"content":"todo eat lunch","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"bobscodedump"},"content":"todo eat dinner","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"bobscodedump"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"bobscodedump"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"bobscodedump"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"bobscodedump"},"content":"delete 1","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"bobscodedump"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"bobscodedump"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"bobscodedump":8}}]
