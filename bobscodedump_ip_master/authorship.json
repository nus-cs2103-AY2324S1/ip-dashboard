[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bobscodedump"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"bobscodedump"},"content":" * The Deadline class represents a task with a specific due date.","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"bobscodedump"},"content":" * It inherits from the Task class and adds a due date field.","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"bobscodedump"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"bobscodedump"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"bobscodedump"},"content":"     * The due date of the task.","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"bobscodedump"},"content":"    private String by;","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"bobscodedump"},"content":"     * Constructs a new Deadline object with the specified description and due date.","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"bobscodedump"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"bobscodedump"},"content":"     * @param deadline The due date of the task.","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"bobscodedump"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"bobscodedump"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"bobscodedump"},"content":"        this.by \u003d deadline;","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"bobscodedump"},"content":"     * Returns a string representation of the Deadline task.","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"bobscodedump"},"content":"     * @return A formatted string indicating the task type, completion status, description, and due date.","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"bobscodedump"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"bobscodedump"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"bobscodedump"},"content":"        return \"[D] \" + super.toString() + \" (by: \" + this.by + \")\";","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"bobscodedump"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"bobscodedump":31}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bobscodedump"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"bobscodedump"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"bobscodedump"},"content":" * Duke is a simple task management application that allows users to add and list tasks.","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"bobscodedump"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"bobscodedump"},"content":"     * The main method that starts the Duke application.","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"bobscodedump"},"content":"     * @param args Command-line arguments (not used in this application).","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"bobscodedump"},"content":"        String logo \u003d \"Hello! I am Bob\\n\"","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"bobscodedump"},"content":"                + \"What can I do for you?\\n\"","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"bobscodedump"},"content":"                + \"----------------------------\\n\";","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"bobscodedump"},"content":"        String bye \u003d \"Bye! Hope to see you again soon!\\n\";","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"bobscodedump"},"content":"        System.out.println(logo);","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"bobscodedump"},"content":"        DukeList list \u003d new DukeList();","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"bobscodedump"},"content":"        while (true) {","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"bobscodedump"},"content":"            Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"bobscodedump"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"bobscodedump"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"bobscodedump"},"content":"                System.out.println(bye);","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"bobscodedump"},"content":"                break;","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"bobscodedump"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"bobscodedump"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"bobscodedump"},"content":"                list.takeInput(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"bobscodedump"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"bobscodedump"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"bobscodedump"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"bobscodedump"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":4,"bobscodedump":29}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bobscodedump"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"bobscodedump"},"content":" * Custom exception class for Duke application.","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"bobscodedump"},"content":" * This class extends the built-in","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"bobscodedump"},"content":" * Exception class and allows creating exceptions with specific error messages.","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"bobscodedump"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"bobscodedump"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"bobscodedump"},"content":"     * Constructs a new DukeException with the specified error message.","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"bobscodedump"},"content":"     * @param message The error message describing the exceptional situation.","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"bobscodedump"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"bobscodedump"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"bobscodedump"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"bobscodedump":15}},{"path":"src/main/java/DukeList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bobscodedump"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"bobscodedump"},"content":"import java.util.List;","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"bobscodedump"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"bobscodedump"},"content":" * DukeList is a class that represents a list of tasks.","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"bobscodedump"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"bobscodedump"},"content":"public class DukeList {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"bobscodedump"},"content":"    private List\u003cTask\u003e dukeList;","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"bobscodedump"},"content":"     * Constructs a new DukeList object with an empty list of tasks.","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"bobscodedump"},"content":"    public DukeList() {","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"bobscodedump"},"content":"        dukeList \u003d new ArrayList\u003cTask\u003e(100);","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"bobscodedump"},"content":"     * Adds a task to the list of tasks.","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"bobscodedump"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"bobscodedump"},"content":"    private void add(Task task) {","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"bobscodedump"},"content":"        dukeList.add(task);","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"bobscodedump"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\\t\" + task.toString() + \"\\nNow you have \" + dukeList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"bobscodedump"},"content":"     * Adds a ToDo task to the list of tasks.","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"bobscodedump"},"content":"     * @param input The description of the ToDo task to be added.","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"bobscodedump"},"content":"    private void addToDo(String input) {","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"bobscodedump"},"content":"        ToDo todo \u003d new ToDo(input);","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"bobscodedump"},"content":"        this.add(todo);","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"bobscodedump"},"content":"     * Adds a Deadline task to the list of tasks.","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"bobscodedump"},"content":"     * @param input The description of the Deadline task to be added.","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"bobscodedump"},"content":"     * @param by The deadline of the task.","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"bobscodedump"},"content":"    private void addDeadline(String input, String by) {","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"bobscodedump"},"content":"        Deadline deadline \u003d new Deadline(input, by);","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"bobscodedump"},"content":"        this.add(deadline);","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"bobscodedump"},"content":"     * Adds an Event task to the list of tasks.","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"bobscodedump"},"content":"     * @param input The description of the Event task to be added.","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"bobscodedump"},"content":"     * @param from The start time of the event.","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"bobscodedump"},"content":"     * @param to The end time of the event.","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"bobscodedump"},"content":"    private void addEvent(String input, String from, String to) {","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"bobscodedump"},"content":"        Event event \u003d new Event(input, from, to);","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"bobscodedump"},"content":"        this.add(event);","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"bobscodedump"},"content":"     * Displays the list of tasks along with their corresponding indices.","lastModifiedDate":"2023-08-22"},{"lineNumber":62,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"bobscodedump"},"content":"    private void display() {","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"bobscodedump"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":65,"author":{"gitId":"bobscodedump"},"content":"        for (int i \u003d 1; i \u003c\u003d dukeList.size(); i++) {","lastModifiedDate":"2023-08-22"},{"lineNumber":66,"author":{"gitId":"bobscodedump"},"content":"            Task task \u003d dukeList.get(i - 1);","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"bobscodedump"},"content":"            System.out.println(i + \". \" + task.toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":68,"author":{"gitId":"bobscodedump"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":69,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":70,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":71,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":72,"author":{"gitId":"bobscodedump"},"content":"     * Marks a task as done based on its index in the list.","lastModifiedDate":"2023-08-22"},{"lineNumber":73,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":74,"author":{"gitId":"bobscodedump"},"content":"     * @param key The index of the task to be marked as done.","lastModifiedDate":"2023-08-22"},{"lineNumber":75,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":76,"author":{"gitId":"bobscodedump"},"content":"    private void markDone(int key) {","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"bobscodedump"},"content":"        Task task \u003d dukeList.get(key - 1);","lastModifiedDate":"2023-08-22"},{"lineNumber":78,"author":{"gitId":"bobscodedump"},"content":"        task.markDone();","lastModifiedDate":"2023-08-22"},{"lineNumber":79,"author":{"gitId":"bobscodedump"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + \"\\t\" + task.toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":80,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":81,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":82,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":83,"author":{"gitId":"bobscodedump"},"content":"     * Marks a task as not done based on its index in the list.","lastModifiedDate":"2023-08-22"},{"lineNumber":84,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":85,"author":{"gitId":"bobscodedump"},"content":"     * @param key The index of the task to be marked as not done.","lastModifiedDate":"2023-08-22"},{"lineNumber":86,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":87,"author":{"gitId":"bobscodedump"},"content":"    private void unmark(int key) {","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"bobscodedump"},"content":"        Task task \u003d dukeList.get(key - 1);","lastModifiedDate":"2023-08-22"},{"lineNumber":89,"author":{"gitId":"bobscodedump"},"content":"        task.unmark();","lastModifiedDate":"2023-08-22"},{"lineNumber":90,"author":{"gitId":"bobscodedump"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\" + \"\\t\" + task.toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":91,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":92,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"bobscodedump"},"content":"     * Deletes a task based on its index in the list.","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"bobscodedump"},"content":"     * @param key The index of the task to be deleted.","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"bobscodedump"},"content":"    private void delete(int key) {","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"bobscodedump"},"content":"        Task task \u003d dukeList.get(key - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"bobscodedump"},"content":"        dukeList.remove(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"bobscodedump"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n\\t\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"bobscodedump"},"content":"                task.toString() + \"\\n Now you have \" + dukeList.size() +","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"bobscodedump"},"content":"                \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":105,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":106,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":107,"author":{"gitId":"bobscodedump"},"content":"     * Parses and processes the user input to perform corresponding actions.","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"bobscodedump"},"content":"     * @param input The user\u0027s input command.","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"bobscodedump"},"content":"     * @throws DukeException If the input command is not recognized or if there\u0027s an issue processing it.","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":112,"author":{"gitId":"bobscodedump"},"content":"    public void takeInput(String input) throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"bobscodedump"},"content":"        if (input.equals(\"list\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"bobscodedump"},"content":"            this.display();","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"bobscodedump"},"content":"            return;","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"bobscodedump"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":117,"author":{"gitId":"bobscodedump"},"content":"        if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":118,"author":{"gitId":"bobscodedump"},"content":"            String[] inputs \u003d input.split(\" \");","lastModifiedDate":"2023-08-24"},{"lineNumber":119,"author":{"gitId":"bobscodedump"},"content":"            int key \u003d Integer.parseInt(inputs[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":120,"author":{"gitId":"bobscodedump"},"content":"            if (key \u003e dukeList.size()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":121,"author":{"gitId":"bobscodedump"},"content":"                throw new DukeException(\"key exceeds size of list\");","lastModifiedDate":"2023-08-24"},{"lineNumber":122,"author":{"gitId":"bobscodedump"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":123,"author":{"gitId":"bobscodedump"},"content":"            this.markDone(key);","lastModifiedDate":"2023-08-24"},{"lineNumber":124,"author":{"gitId":"bobscodedump"},"content":"            return;","lastModifiedDate":"2023-08-24"},{"lineNumber":125,"author":{"gitId":"bobscodedump"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":126,"author":{"gitId":"bobscodedump"},"content":"        if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":127,"author":{"gitId":"bobscodedump"},"content":"            String[] inputs \u003d input.split(\" \");","lastModifiedDate":"2023-08-24"},{"lineNumber":128,"author":{"gitId":"bobscodedump"},"content":"            int key \u003d Integer.parseInt(inputs[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":129,"author":{"gitId":"bobscodedump"},"content":"            if (key \u003e dukeList.size()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":130,"author":{"gitId":"bobscodedump"},"content":"                throw new DukeException(\"key exceeds size of list\");","lastModifiedDate":"2023-08-24"},{"lineNumber":131,"author":{"gitId":"bobscodedump"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":132,"author":{"gitId":"bobscodedump"},"content":"            this.unmark(key);","lastModifiedDate":"2023-08-24"},{"lineNumber":133,"author":{"gitId":"bobscodedump"},"content":"            return;","lastModifiedDate":"2023-08-24"},{"lineNumber":134,"author":{"gitId":"bobscodedump"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":135,"author":{"gitId":"bobscodedump"},"content":"        if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":136,"author":{"gitId":"bobscodedump"},"content":"            String[] inputs \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-24"},{"lineNumber":137,"author":{"gitId":"bobscodedump"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":138,"author":{"gitId":"bobscodedump"},"content":"                this.addToDo(inputs[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":139,"author":{"gitId":"bobscodedump"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":140,"author":{"gitId":"bobscodedump"},"content":"                throw new DukeException(\"todo cant be empty\");","lastModifiedDate":"2023-08-24"},{"lineNumber":141,"author":{"gitId":"bobscodedump"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":142,"author":{"gitId":"bobscodedump"},"content":"            return;","lastModifiedDate":"2023-08-24"},{"lineNumber":143,"author":{"gitId":"bobscodedump"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":144,"author":{"gitId":"bobscodedump"},"content":"        if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":145,"author":{"gitId":"bobscodedump"},"content":"            String[] inputs \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-24"},{"lineNumber":146,"author":{"gitId":"bobscodedump"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":147,"author":{"gitId":"bobscodedump"},"content":"                String[] deadLine \u003d inputs[1].split(\"/by\", 2);","lastModifiedDate":"2023-08-24"},{"lineNumber":148,"author":{"gitId":"bobscodedump"},"content":"                this.addDeadline(deadLine[0], deadLine[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":149,"author":{"gitId":"bobscodedump"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":150,"author":{"gitId":"bobscodedump"},"content":"                throw new DukeException(\"deadline invalid format\");","lastModifiedDate":"2023-08-24"},{"lineNumber":151,"author":{"gitId":"bobscodedump"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":152,"author":{"gitId":"bobscodedump"},"content":"            return;","lastModifiedDate":"2023-08-24"},{"lineNumber":153,"author":{"gitId":"bobscodedump"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":154,"author":{"gitId":"bobscodedump"},"content":"        if (input.startsWith(\"event\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":155,"author":{"gitId":"bobscodedump"},"content":"            String[] inputs \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-24"},{"lineNumber":156,"author":{"gitId":"bobscodedump"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":157,"author":{"gitId":"bobscodedump"},"content":"                String[] from \u003d inputs[1].split(\"/from\", 2);","lastModifiedDate":"2023-08-24"},{"lineNumber":158,"author":{"gitId":"bobscodedump"},"content":"                String[] to \u003d from[1].split(\"/to\", 2);","lastModifiedDate":"2023-08-24"},{"lineNumber":159,"author":{"gitId":"bobscodedump"},"content":"                this.addEvent(from[0], to[0], to[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":160,"author":{"gitId":"bobscodedump"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":161,"author":{"gitId":"bobscodedump"},"content":"                throw new DukeException(\"event invalid format\");","lastModifiedDate":"2023-08-24"},{"lineNumber":162,"author":{"gitId":"bobscodedump"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":163,"author":{"gitId":"bobscodedump"},"content":"            return;","lastModifiedDate":"2023-08-24"},{"lineNumber":164,"author":{"gitId":"bobscodedump"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":165,"author":{"gitId":"bobscodedump"},"content":"        if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":166,"author":{"gitId":"bobscodedump"},"content":"            String[] inputs \u003d input.split(\" \");","lastModifiedDate":"2023-08-24"},{"lineNumber":167,"author":{"gitId":"bobscodedump"},"content":"            int key \u003d Integer.parseInt(inputs[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":168,"author":{"gitId":"bobscodedump"},"content":"            if (key \u003e dukeList.size()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":169,"author":{"gitId":"bobscodedump"},"content":"                throw new DukeException(\"key exceeds size of list\");","lastModifiedDate":"2023-08-24"},{"lineNumber":170,"author":{"gitId":"bobscodedump"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":171,"author":{"gitId":"bobscodedump"},"content":"            this.delete(key);","lastModifiedDate":"2023-08-24"},{"lineNumber":172,"author":{"gitId":"bobscodedump"},"content":"            return;","lastModifiedDate":"2023-08-24"},{"lineNumber":173,"author":{"gitId":"bobscodedump"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":174,"author":{"gitId":"bobscodedump"},"content":"        throw new DukeException(\"Unrecognised input :(\");","lastModifiedDate":"2023-08-24"},{"lineNumber":175,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":176,"author":{"gitId":"bobscodedump"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"bobscodedump":176}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bobscodedump"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"bobscodedump"},"content":" * The Event class represents a task that takes place during a specific time frame.","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"bobscodedump"},"content":" * It inherits from the Task class and adds start and end time fields.","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"bobscodedump"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"bobscodedump"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"bobscodedump"},"content":"     * The start time of the event.","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"bobscodedump"},"content":"    private String from;","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"bobscodedump"},"content":"     * The end time of the event.","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"bobscodedump"},"content":"    private String to;","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"bobscodedump"},"content":"     * Constructs a new Event object with the specified description, start time, and end time.","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"bobscodedump"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"bobscodedump"},"content":"     * @param from The start time of the event.","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"bobscodedump"},"content":"     * @param to The end time of the event.","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"bobscodedump"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"bobscodedump"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"bobscodedump"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"bobscodedump"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"bobscodedump"},"content":"     * Returns a string representation of the Event task.","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"bobscodedump"},"content":"     * @return A formatted string indicating the task type, completion status, description, start time, and end time.","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"bobscodedump"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"bobscodedump"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"bobscodedump"},"content":"        return \"[E] \" + super.toString() + \" (from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"bobscodedump"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"bobscodedump":38}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bobscodedump"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"bobscodedump"},"content":" * The Task class represents a task with a description and a completion status.","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"bobscodedump"},"content":" * Tasks can be marked as done or undone.","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"bobscodedump"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"bobscodedump"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"bobscodedump"},"content":"     * The description of the task.","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"bobscodedump"},"content":"    private String description;","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"bobscodedump"},"content":"     * The completion status of the task.","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"bobscodedump"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"bobscodedump"},"content":"     * Constructs a new Task object with the specified description.","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"bobscodedump"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"bobscodedump"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"bobscodedump"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"bobscodedump"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"bobscodedump"},"content":"     * Gets the status of the task.","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"bobscodedump"},"content":"     * @return The status icon (\"X\" if done, \" \" if not done).","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"bobscodedump"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"bobscodedump"},"content":"        return (this.isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"bobscodedump"},"content":"     * Gets the description of the task.","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"bobscodedump"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"bobscodedump"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"bobscodedump"},"content":"        return this.description;","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"bobscodedump"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"bobscodedump"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"bobscodedump"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"bobscodedump"},"content":"     * Marks the task as undone.","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"bobscodedump"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"bobscodedump"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"bobscodedump"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"bobscodedump"},"content":"     * @return A formatted string indicating the task\u0027s completion status and description.","lastModifiedDate":"2023-08-22"},{"lineNumber":62,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"bobscodedump"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":64,"author":{"gitId":"bobscodedump"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":65,"author":{"gitId":"bobscodedump"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-22"},{"lineNumber":66,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"bobscodedump"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"bobscodedump":67}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bobscodedump"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"bobscodedump"},"content":" * The ToDo class represents a task without a specific due date or time.","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"bobscodedump"},"content":" * It inherits from the Task class and adds a specific task type indicator.","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"bobscodedump"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"bobscodedump"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"bobscodedump"},"content":"     * Constructs a new ToDo object with the specified description.","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"bobscodedump"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"bobscodedump"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"bobscodedump"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"bobscodedump"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"bobscodedump"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"bobscodedump"},"content":"     * Returns a string representation of the ToDo task.","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"bobscodedump"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"bobscodedump"},"content":"     * @return A formatted string indicating the task type, completion status, and description.","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"bobscodedump"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"bobscodedump"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"bobscodedump"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"bobscodedump"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"bobscodedump"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"bobscodedump"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"bobscodedump":24}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bobscodedump"},"content":"todo eat lunch","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"bobscodedump"},"content":"todo eat dinner","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"bobscodedump"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"bobscodedump"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"bobscodedump"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"bobscodedump"},"content":"delete 1","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"bobscodedump"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"bobscodedump"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"bobscodedump":8}}]
