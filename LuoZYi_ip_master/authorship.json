[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"LuoZYi"},"content":"# Duke Chatbot User Guide","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"LuoZYi"},"content":"Duke is a command-line chatbot that allows you to manage your tasks easily. You can interact with Duke by typing various commands to add, list, mark, unmark, delete, and save tasks. Duke also stores your tasks in a file for persistence across sessions.","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"LuoZYi"},"content":"## Table of Contents","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"LuoZYi"},"content":"1. [Getting Started](#getting-started)","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"LuoZYi"},"content":"2. [Available Commands](#available-commands)","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"LuoZYi"},"content":"3. [Task Types](#task-types)","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"LuoZYi"},"content":"4. [Exiting Duke](#exiting-duke)","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"LuoZYi"},"content":"5. [Graphical User Interface (GUI)](#graphical-user-interface-gui)","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"LuoZYi"},"content":"6. [Troubleshooting](#troubleshooting)","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"LuoZYi"},"content":"7. [Additional Help](#additional-help)","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"LuoZYi"},"content":"---","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"LuoZYi"},"content":"### Getting Started","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"LuoZYi"},"content":"To start using Duke, follow these steps:","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"LuoZYi"},"content":"1. Launch Duke by running the application.","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"LuoZYi"},"content":"2. Duke will greet you with a welcome message and a list of available commands.","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"LuoZYi"},"content":"3. You can type commands in the chat and press \"Send\" to interact with Duke.","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"LuoZYi"},"content":"### Available Commands","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"LuoZYi"},"content":"Duke supports the following commands:","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"LuoZYi"},"content":"- `bye`: Exits the chatbot and saves the task list to a file.","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":33,"author":{"gitId":"LuoZYi"},"content":"  Example:","lastModifiedDate":"2023-09-25"},{"lineNumber":34,"author":{"gitId":"LuoZYi"},"content":"User: bye","lastModifiedDate":"2023-09-25"},{"lineNumber":35,"author":{"gitId":"LuoZYi"},"content":"Duke: Goodbye! Your tasks have been saved. See you next time.","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":37,"author":{"gitId":"LuoZYi"},"content":"markdown","lastModifiedDate":"2023-09-25"},{"lineNumber":38,"author":{"gitId":"LuoZYi"},"content":"Copy code","lastModifiedDate":"2023-09-25"},{"lineNumber":39,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":40,"author":{"gitId":"LuoZYi"},"content":"- `list`: Lists all tasks in the current task list.","lastModifiedDate":"2023-09-25"},{"lineNumber":41,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":42,"author":{"gitId":"LuoZYi"},"content":"Example:","lastModifiedDate":"2023-09-25"},{"lineNumber":43,"author":{"gitId":"LuoZYi"},"content":"User: list","lastModifiedDate":"2023-09-25"},{"lineNumber":44,"author":{"gitId":"LuoZYi"},"content":"Duke: Here are the tasks in your list:","lastModifiedDate":"2023-09-25"},{"lineNumber":45,"author":{"gitId":"LuoZYi"},"content":"1. [T][ ] Buy groceries","lastModifiedDate":"2023-09-25"},{"lineNumber":46,"author":{"gitId":"LuoZYi"},"content":"2. [E][X] Attend webinar (from: 2023-09-25 14:00, to: 2023-09-25 16:00)","lastModifiedDate":"2023-09-25"},{"lineNumber":47,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":48,"author":{"gitId":"LuoZYi"},"content":"vbnet","lastModifiedDate":"2023-09-25"},{"lineNumber":49,"author":{"gitId":"LuoZYi"},"content":"Copy code","lastModifiedDate":"2023-09-25"},{"lineNumber":50,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":51,"author":{"gitId":"LuoZYi"},"content":"- `mark \u003ctask_id\u003e`: Marks a task as done by its ID.","lastModifiedDate":"2023-09-25"},{"lineNumber":52,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":53,"author":{"gitId":"LuoZYi"},"content":"Example:","lastModifiedDate":"2023-09-25"},{"lineNumber":54,"author":{"gitId":"LuoZYi"},"content":"User: mark 1","lastModifiedDate":"2023-09-25"},{"lineNumber":55,"author":{"gitId":"LuoZYi"},"content":"Duke: Great job! I\u0027ve marked this task as done:","lastModifiedDate":"2023-09-25"},{"lineNumber":56,"author":{"gitId":"LuoZYi"},"content":"[T][X] Buy groceries","lastModifiedDate":"2023-09-25"},{"lineNumber":57,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":58,"author":{"gitId":"LuoZYi"},"content":"markdown","lastModifiedDate":"2023-09-25"},{"lineNumber":59,"author":{"gitId":"LuoZYi"},"content":"Copy code","lastModifiedDate":"2023-09-25"},{"lineNumber":60,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":61,"author":{"gitId":"LuoZYi"},"content":"- `unmark \u003ctask_id\u003e`: Unmarks a previously marked task.","lastModifiedDate":"2023-09-25"},{"lineNumber":62,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":63,"author":{"gitId":"LuoZYi"},"content":"Example:","lastModifiedDate":"2023-09-25"},{"lineNumber":64,"author":{"gitId":"LuoZYi"},"content":"User: unmark 1","lastModifiedDate":"2023-09-25"},{"lineNumber":65,"author":{"gitId":"LuoZYi"},"content":"Duke: Task unmarked:","lastModifiedDate":"2023-09-25"},{"lineNumber":66,"author":{"gitId":"LuoZYi"},"content":"[T][ ] Buy groceries","lastModifiedDate":"2023-09-25"},{"lineNumber":67,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":68,"author":{"gitId":"LuoZYi"},"content":"vbnet","lastModifiedDate":"2023-09-25"},{"lineNumber":69,"author":{"gitId":"LuoZYi"},"content":"Copy code","lastModifiedDate":"2023-09-25"},{"lineNumber":70,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":71,"author":{"gitId":"LuoZYi"},"content":"- `todo \u003cdescription\u003e`: Adds a to-do task with a description.","lastModifiedDate":"2023-09-25"},{"lineNumber":72,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":73,"author":{"gitId":"LuoZYi"},"content":"Example:","lastModifiedDate":"2023-09-25"},{"lineNumber":74,"author":{"gitId":"LuoZYi"},"content":"User: todo Read a book","lastModifiedDate":"2023-09-25"},{"lineNumber":75,"author":{"gitId":"LuoZYi"},"content":"Duke: Got it! I\u0027ve added this task:","lastModifiedDate":"2023-09-25"},{"lineNumber":76,"author":{"gitId":"LuoZYi"},"content":"[T][ ] Read a book","lastModifiedDate":"2023-09-25"},{"lineNumber":77,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":78,"author":{"gitId":"LuoZYi"},"content":"vbnet","lastModifiedDate":"2023-09-25"},{"lineNumber":79,"author":{"gitId":"LuoZYi"},"content":"Copy code","lastModifiedDate":"2023-09-25"},{"lineNumber":80,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":81,"author":{"gitId":"LuoZYi"},"content":"- `event \u003cdescription\u003e /from \u003cdatetime\u003e /to \u003cdatetime\u003e`: Adds an event task with a description, start date, and end date.","lastModifiedDate":"2023-09-25"},{"lineNumber":82,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":83,"author":{"gitId":"LuoZYi"},"content":"Example:","lastModifiedDate":"2023-09-25"},{"lineNumber":84,"author":{"gitId":"LuoZYi"},"content":"User: event Team meeting /from 2023-09-27 15:00 /to 2023-09-27 16:30","lastModifiedDate":"2023-09-25"},{"lineNumber":85,"author":{"gitId":"LuoZYi"},"content":"Duke: Task added:","lastModifiedDate":"2023-09-25"},{"lineNumber":86,"author":{"gitId":"LuoZYi"},"content":"[E][ ] Team meeting (from: 2023-09-27 15:00, to: 2023-09-27 16:30)","lastModifiedDate":"2023-09-25"},{"lineNumber":87,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":88,"author":{"gitId":"LuoZYi"},"content":"vbnet","lastModifiedDate":"2023-09-25"},{"lineNumber":89,"author":{"gitId":"LuoZYi"},"content":"Copy code","lastModifiedDate":"2023-09-25"},{"lineNumber":90,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":91,"author":{"gitId":"LuoZYi"},"content":"- `deadline \u003cdescription\u003e /by \u003cdatetime\u003e`: Adds a deadline task with a description and due date.","lastModifiedDate":"2023-09-25"},{"lineNumber":92,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":93,"author":{"gitId":"LuoZYi"},"content":"Example:","lastModifiedDate":"2023-09-25"},{"lineNumber":94,"author":{"gitId":"LuoZYi"},"content":"User: deadline Submit report /by 2023-09-30 23:59","lastModifiedDate":"2023-09-25"},{"lineNumber":95,"author":{"gitId":"LuoZYi"},"content":"Duke: Task added:","lastModifiedDate":"2023-09-25"},{"lineNumber":96,"author":{"gitId":"LuoZYi"},"content":"[D][ ] Submit report (by: 2023-09-30 23:59)","lastModifiedDate":"2023-09-25"},{"lineNumber":97,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":98,"author":{"gitId":"LuoZYi"},"content":"markdown","lastModifiedDate":"2023-09-25"},{"lineNumber":99,"author":{"gitId":"LuoZYi"},"content":"Copy code","lastModifiedDate":"2023-09-25"},{"lineNumber":100,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":101,"author":{"gitId":"LuoZYi"},"content":"- `delete \u003ctask_id\u003e`: Deletes a task by its ID.","lastModifiedDate":"2023-09-25"},{"lineNumber":102,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":103,"author":{"gitId":"LuoZYi"},"content":"Example:","lastModifiedDate":"2023-09-25"},{"lineNumber":104,"author":{"gitId":"LuoZYi"},"content":"User: delete 1","lastModifiedDate":"2023-09-25"},{"lineNumber":105,"author":{"gitId":"LuoZYi"},"content":"Duke: Task removed:","lastModifiedDate":"2023-09-25"},{"lineNumber":106,"author":{"gitId":"LuoZYi"},"content":"[T][ ] Read a book","lastModifiedDate":"2023-09-25"},{"lineNumber":107,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":108,"author":{"gitId":"LuoZYi"},"content":"markdown","lastModifiedDate":"2023-09-25"},{"lineNumber":109,"author":{"gitId":"LuoZYi"},"content":"Copy code","lastModifiedDate":"2023-09-25"},{"lineNumber":110,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":111,"author":{"gitId":"LuoZYi"},"content":"- `find \u003ckeyword\u003e`: Searches for tasks containing the specified keyword.","lastModifiedDate":"2023-09-25"},{"lineNumber":112,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":113,"author":{"gitId":"LuoZYi"},"content":"Example:","lastModifiedDate":"2023-09-25"},{"lineNumber":114,"author":{"gitId":"LuoZYi"},"content":"User: find meeting","lastModifiedDate":"2023-09-25"},{"lineNumber":115,"author":{"gitId":"LuoZYi"},"content":"Duke: Here are the matching tasks in your list:","lastModifiedDate":"2023-09-25"},{"lineNumber":116,"author":{"gitId":"LuoZYi"},"content":"1. [E][ ] Team meeting (from: 2023-09-27 15:00, to: 2023-09-27 16:30)","lastModifiedDate":"2023-09-25"},{"lineNumber":117,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":118,"author":{"gitId":"LuoZYi"},"content":"vbnet","lastModifiedDate":"2023-09-25"},{"lineNumber":119,"author":{"gitId":"LuoZYi"},"content":"Copy code","lastModifiedDate":"2023-09-25"},{"lineNumber":120,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":121,"author":{"gitId":"LuoZYi"},"content":"For example:","lastModifiedDate":"2023-09-25"},{"lineNumber":122,"author":{"gitId":"LuoZYi"},"content":"- To add a to-do task: `todo Buy groceries`","lastModifiedDate":"2023-09-25"},{"lineNumber":123,"author":{"gitId":"LuoZYi"},"content":"- To mark a task as done: `mark 1`","lastModifiedDate":"2023-09-25"},{"lineNumber":124,"author":{"gitId":"LuoZYi"},"content":"- To list all tasks: `list`","lastModifiedDate":"2023-09-25"},{"lineNumber":125,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":126,"author":{"gitId":"LuoZYi"},"content":"### Task Types","lastModifiedDate":"2023-09-25"},{"lineNumber":127,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":128,"author":{"gitId":"LuoZYi"},"content":"Duke supports different types of tasks:","lastModifiedDate":"2023-09-25"},{"lineNumber":129,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":130,"author":{"gitId":"LuoZYi"},"content":"- **To-Do**: A simple task with a description.","lastModifiedDate":"2023-09-25"},{"lineNumber":131,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":132,"author":{"gitId":"LuoZYi"},"content":"- **Event**: A task with a description and a start date and end date.","lastModifiedDate":"2023-09-25"},{"lineNumber":133,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":134,"author":{"gitId":"LuoZYi"},"content":"- **Deadline**: A task with a description and a due date.","lastModifiedDate":"2023-09-25"},{"lineNumber":135,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":136,"author":{"gitId":"LuoZYi"},"content":"### Exiting Duke","lastModifiedDate":"2023-09-25"},{"lineNumber":137,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":138,"author":{"gitId":"LuoZYi"},"content":"To exit Duke, simply type `bye` in the chat and press \"Send.\" Duke will save your task list to a file before closing.","lastModifiedDate":"2023-09-25"},{"lineNumber":139,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":140,"author":{"gitId":"LuoZYi"},"content":"### Graphical User Interface (GUI)","lastModifiedDate":"2023-09-25"},{"lineNumber":141,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":142,"author":{"gitId":"LuoZYi"},"content":"Duke also provides a graphical user interface (GUI) for a more interactive experience. The GUI allows you to type commands in a text field and displays Duke\u0027s responses in a chat-like interface.","lastModifiedDate":"2023-09-25"},{"lineNumber":143,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":144,"author":{"gitId":"LuoZYi"},"content":"### Troubleshooting","lastModifiedDate":"2023-09-25"},{"lineNumber":145,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":146,"author":{"gitId":"LuoZYi"},"content":"If you encounter any issues while using Duke, consider the following:","lastModifiedDate":"2023-09-25"},{"lineNumber":147,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":148,"author":{"gitId":"LuoZYi"},"content":"- Ensure you\u0027re using valid commands and following the correct syntax.","lastModifiedDate":"2023-09-25"},{"lineNumber":149,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":150,"author":{"gitId":"LuoZYi"},"content":"- If Duke encounters an error, it will provide an error message with details.","lastModifiedDate":"2023-09-25"},{"lineNumber":151,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":152,"author":{"gitId":"LuoZYi"},"content":"- If you need help with a specific command, type `help` to get a list of available commands and their usage.","lastModifiedDate":"2023-09-25"},{"lineNumber":153,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":154,"author":{"gitId":"LuoZYi"},"content":"### Additional Help","lastModifiedDate":"2023-09-25"},{"lineNumber":155,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":156,"author":{"gitId":"LuoZYi"},"content":"For additional help or questions, please refer to the chatbot\u0027s responses or type `help` for a list of available commands and their descriptions.","lastModifiedDate":"2023-09-25"},{"lineNumber":157,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":158,"author":{"gitId":"LuoZYi"},"content":"---","lastModifiedDate":"2023-09-25"},{"lineNumber":159,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":160,"author":{"gitId":"LuoZYi"},"content":"Enjoy using Duke to manage your tasks efficiently!","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"LuoZYi":160}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"LuoZYi"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"LuoZYi"},"content":"javafx {","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"LuoZYi"},"content":"    version \u003d \"17.0.7\"","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"LuoZYi"},"content":"    modules \u003d [ \u0027javafx.controls\u0027,\u0027javafx.fxml\u0027 ]","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"LuoZYi"},"content":"}","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"LuoZYi"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"LuoZYi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"LuoZYi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"LuoZYi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"LuoZYi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"LuoZYi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"LuoZYi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"LuoZYi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"LuoZYi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"LuoZYi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"LuoZYi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"LuoZYi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"LuoZYi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"LuoZYi"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2023-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"LuoZYi"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"LuoZYi":24,"-":41}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"LuoZYi"},"content":"# Duke Chatbot User Guide","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"LuoZYi"},"content":"Duke is a command-line chatbot that allows you to manage your tasks easily. You can interact with Duke by typing various commands to add, list, mark, unmark, delete, and save tasks. Duke also stores your tasks in a file for persistence across sessions.","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"LuoZYi"},"content":"## Table of Contents","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"LuoZYi"},"content":"1. [Getting Started](#getting-started)","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"LuoZYi"},"content":"2. [Available Commands](#available-commands)","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"LuoZYi"},"content":"3. [Task Types](#task-types)","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"LuoZYi"},"content":"4. [Exiting Duke](#exiting-duke)","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"LuoZYi"},"content":"5. [Graphical User Interface (GUI)](#graphical-user-interface-gui)","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"LuoZYi"},"content":"6. [Troubleshooting](#troubleshooting)","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"LuoZYi"},"content":"7. [Additional Help](#additional-help)","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"LuoZYi"},"content":"---","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"LuoZYi"},"content":"### Getting Started","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"LuoZYi"},"content":"To start using Duke, follow these steps:","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"LuoZYi"},"content":"1. Launch Duke by running the application.","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"LuoZYi"},"content":"2. Duke will greet you with a welcome message and a list of available commands.","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"LuoZYi"},"content":"3. You can type commands in the chat and press \"Send\" to interact with Duke.","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"LuoZYi"},"content":"### Available Commands","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"LuoZYi"},"content":"Duke supports the following commands:","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"LuoZYi"},"content":"- `bye`: Exits the chatbot and saves the task list to a file.","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":33,"author":{"gitId":"LuoZYi"},"content":"  Example:","lastModifiedDate":"2023-09-25"},{"lineNumber":34,"author":{"gitId":"LuoZYi"},"content":"User: bye","lastModifiedDate":"2023-09-25"},{"lineNumber":35,"author":{"gitId":"LuoZYi"},"content":"Duke: Goodbye! Your tasks have been saved. See you next time.","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":37,"author":{"gitId":"LuoZYi"},"content":"markdown","lastModifiedDate":"2023-09-25"},{"lineNumber":38,"author":{"gitId":"LuoZYi"},"content":"Copy code","lastModifiedDate":"2023-09-25"},{"lineNumber":39,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":40,"author":{"gitId":"LuoZYi"},"content":"- `list`: Lists all tasks in the current task list.","lastModifiedDate":"2023-09-25"},{"lineNumber":41,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":42,"author":{"gitId":"LuoZYi"},"content":"Example:","lastModifiedDate":"2023-09-25"},{"lineNumber":43,"author":{"gitId":"LuoZYi"},"content":"User: list","lastModifiedDate":"2023-09-25"},{"lineNumber":44,"author":{"gitId":"LuoZYi"},"content":"Duke: Here are the tasks in your list:","lastModifiedDate":"2023-09-25"},{"lineNumber":45,"author":{"gitId":"LuoZYi"},"content":"1. [T][ ] Buy groceries","lastModifiedDate":"2023-09-25"},{"lineNumber":46,"author":{"gitId":"LuoZYi"},"content":"2. [E][X] Attend webinar (from: 2023-09-25 14:00, to: 2023-09-25 16:00)","lastModifiedDate":"2023-09-25"},{"lineNumber":47,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":48,"author":{"gitId":"LuoZYi"},"content":"vbnet","lastModifiedDate":"2023-09-25"},{"lineNumber":49,"author":{"gitId":"LuoZYi"},"content":"Copy code","lastModifiedDate":"2023-09-25"},{"lineNumber":50,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":51,"author":{"gitId":"LuoZYi"},"content":"- `mark \u003ctask_id\u003e`: Marks a task as done by its ID.","lastModifiedDate":"2023-09-25"},{"lineNumber":52,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":53,"author":{"gitId":"LuoZYi"},"content":"Example:","lastModifiedDate":"2023-09-25"},{"lineNumber":54,"author":{"gitId":"LuoZYi"},"content":"User: mark 1","lastModifiedDate":"2023-09-25"},{"lineNumber":55,"author":{"gitId":"LuoZYi"},"content":"Duke: Great job! I\u0027ve marked this task as done:","lastModifiedDate":"2023-09-25"},{"lineNumber":56,"author":{"gitId":"LuoZYi"},"content":"[T][X] Buy groceries","lastModifiedDate":"2023-09-25"},{"lineNumber":57,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":58,"author":{"gitId":"LuoZYi"},"content":"markdown","lastModifiedDate":"2023-09-25"},{"lineNumber":59,"author":{"gitId":"LuoZYi"},"content":"Copy code","lastModifiedDate":"2023-09-25"},{"lineNumber":60,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":61,"author":{"gitId":"LuoZYi"},"content":"- `unmark \u003ctask_id\u003e`: Unmarks a previously marked task.","lastModifiedDate":"2023-09-25"},{"lineNumber":62,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":63,"author":{"gitId":"LuoZYi"},"content":"Example:","lastModifiedDate":"2023-09-25"},{"lineNumber":64,"author":{"gitId":"LuoZYi"},"content":"User: unmark 1","lastModifiedDate":"2023-09-25"},{"lineNumber":65,"author":{"gitId":"LuoZYi"},"content":"Duke: Task unmarked:","lastModifiedDate":"2023-09-25"},{"lineNumber":66,"author":{"gitId":"LuoZYi"},"content":"[T][ ] Buy groceries","lastModifiedDate":"2023-09-25"},{"lineNumber":67,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":68,"author":{"gitId":"LuoZYi"},"content":"vbnet","lastModifiedDate":"2023-09-25"},{"lineNumber":69,"author":{"gitId":"LuoZYi"},"content":"Copy code","lastModifiedDate":"2023-09-25"},{"lineNumber":70,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":71,"author":{"gitId":"LuoZYi"},"content":"- `todo \u003cdescription\u003e`: Adds a to-do task with a description.","lastModifiedDate":"2023-09-25"},{"lineNumber":72,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":73,"author":{"gitId":"LuoZYi"},"content":"Example:","lastModifiedDate":"2023-09-25"},{"lineNumber":74,"author":{"gitId":"LuoZYi"},"content":"User: todo Read a book","lastModifiedDate":"2023-09-25"},{"lineNumber":75,"author":{"gitId":"LuoZYi"},"content":"Duke: Got it! I\u0027ve added this task:","lastModifiedDate":"2023-09-25"},{"lineNumber":76,"author":{"gitId":"LuoZYi"},"content":"[T][ ] Read a book","lastModifiedDate":"2023-09-25"},{"lineNumber":77,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":78,"author":{"gitId":"LuoZYi"},"content":"vbnet","lastModifiedDate":"2023-09-25"},{"lineNumber":79,"author":{"gitId":"LuoZYi"},"content":"Copy code","lastModifiedDate":"2023-09-25"},{"lineNumber":80,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":81,"author":{"gitId":"LuoZYi"},"content":"- `event \u003cdescription\u003e /from \u003cdatetime\u003e /to \u003cdatetime\u003e`: Adds an event task with a description, start date, and end date.","lastModifiedDate":"2023-09-25"},{"lineNumber":82,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":83,"author":{"gitId":"LuoZYi"},"content":"Example:","lastModifiedDate":"2023-09-25"},{"lineNumber":84,"author":{"gitId":"LuoZYi"},"content":"User: event Team meeting /from 2023-09-27 15:00 /to 2023-09-27 16:30","lastModifiedDate":"2023-09-25"},{"lineNumber":85,"author":{"gitId":"LuoZYi"},"content":"Duke: Task added:","lastModifiedDate":"2023-09-25"},{"lineNumber":86,"author":{"gitId":"LuoZYi"},"content":"[E][ ] Team meeting (from: 2023-09-27 15:00, to: 2023-09-27 16:30)","lastModifiedDate":"2023-09-25"},{"lineNumber":87,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":88,"author":{"gitId":"LuoZYi"},"content":"vbnet","lastModifiedDate":"2023-09-25"},{"lineNumber":89,"author":{"gitId":"LuoZYi"},"content":"Copy code","lastModifiedDate":"2023-09-25"},{"lineNumber":90,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":91,"author":{"gitId":"LuoZYi"},"content":"- `deadline \u003cdescription\u003e /by \u003cdatetime\u003e`: Adds a deadline task with a description and due date.","lastModifiedDate":"2023-09-25"},{"lineNumber":92,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":93,"author":{"gitId":"LuoZYi"},"content":"Example:","lastModifiedDate":"2023-09-25"},{"lineNumber":94,"author":{"gitId":"LuoZYi"},"content":"User: deadline Submit report /by 2023-09-30 23:59","lastModifiedDate":"2023-09-25"},{"lineNumber":95,"author":{"gitId":"LuoZYi"},"content":"Duke: Task added:","lastModifiedDate":"2023-09-25"},{"lineNumber":96,"author":{"gitId":"LuoZYi"},"content":"[D][ ] Submit report (by: 2023-09-30 23:59)","lastModifiedDate":"2023-09-25"},{"lineNumber":97,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":98,"author":{"gitId":"LuoZYi"},"content":"markdown","lastModifiedDate":"2023-09-25"},{"lineNumber":99,"author":{"gitId":"LuoZYi"},"content":"Copy code","lastModifiedDate":"2023-09-25"},{"lineNumber":100,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":101,"author":{"gitId":"LuoZYi"},"content":"- `delete \u003ctask_id\u003e`: Deletes a task by its ID.","lastModifiedDate":"2023-09-25"},{"lineNumber":102,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":103,"author":{"gitId":"LuoZYi"},"content":"Example:","lastModifiedDate":"2023-09-25"},{"lineNumber":104,"author":{"gitId":"LuoZYi"},"content":"User: delete 1","lastModifiedDate":"2023-09-25"},{"lineNumber":105,"author":{"gitId":"LuoZYi"},"content":"Duke: Task removed:","lastModifiedDate":"2023-09-25"},{"lineNumber":106,"author":{"gitId":"LuoZYi"},"content":"[T][ ] Read a book","lastModifiedDate":"2023-09-25"},{"lineNumber":107,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":108,"author":{"gitId":"LuoZYi"},"content":"markdown","lastModifiedDate":"2023-09-25"},{"lineNumber":109,"author":{"gitId":"LuoZYi"},"content":"Copy code","lastModifiedDate":"2023-09-25"},{"lineNumber":110,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":111,"author":{"gitId":"LuoZYi"},"content":"- `find \u003ckeyword\u003e`: Searches for tasks containing the specified keyword.","lastModifiedDate":"2023-09-25"},{"lineNumber":112,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":113,"author":{"gitId":"LuoZYi"},"content":"Example:","lastModifiedDate":"2023-09-25"},{"lineNumber":114,"author":{"gitId":"LuoZYi"},"content":"User: find meeting","lastModifiedDate":"2023-09-25"},{"lineNumber":115,"author":{"gitId":"LuoZYi"},"content":"Duke: Here are the matching tasks in your list:","lastModifiedDate":"2023-09-25"},{"lineNumber":116,"author":{"gitId":"LuoZYi"},"content":"1. [E][ ] Team meeting (from: 2023-09-27 15:00, to: 2023-09-27 16:30)","lastModifiedDate":"2023-09-25"},{"lineNumber":117,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":118,"author":{"gitId":"LuoZYi"},"content":"vbnet","lastModifiedDate":"2023-09-25"},{"lineNumber":119,"author":{"gitId":"LuoZYi"},"content":"Copy code","lastModifiedDate":"2023-09-25"},{"lineNumber":120,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":121,"author":{"gitId":"LuoZYi"},"content":"For example:","lastModifiedDate":"2023-09-25"},{"lineNumber":122,"author":{"gitId":"LuoZYi"},"content":"- To add a to-do task: `todo Buy groceries`","lastModifiedDate":"2023-09-25"},{"lineNumber":123,"author":{"gitId":"LuoZYi"},"content":"- To mark a task as done: `mark 1`","lastModifiedDate":"2023-09-25"},{"lineNumber":124,"author":{"gitId":"LuoZYi"},"content":"- To list all tasks: `list`","lastModifiedDate":"2023-09-25"},{"lineNumber":125,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":126,"author":{"gitId":"LuoZYi"},"content":"### Task Types","lastModifiedDate":"2023-09-25"},{"lineNumber":127,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":128,"author":{"gitId":"LuoZYi"},"content":"Duke supports different types of tasks:","lastModifiedDate":"2023-09-25"},{"lineNumber":129,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":130,"author":{"gitId":"LuoZYi"},"content":"- **To-Do**: A simple task with a description.","lastModifiedDate":"2023-09-25"},{"lineNumber":131,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":132,"author":{"gitId":"LuoZYi"},"content":"- **Event**: A task with a description and a start date and end date.","lastModifiedDate":"2023-09-25"},{"lineNumber":133,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":134,"author":{"gitId":"LuoZYi"},"content":"- **Deadline**: A task with a description and a due date.","lastModifiedDate":"2023-09-25"},{"lineNumber":135,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":136,"author":{"gitId":"LuoZYi"},"content":"### Exiting Duke","lastModifiedDate":"2023-09-25"},{"lineNumber":137,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":138,"author":{"gitId":"LuoZYi"},"content":"To exit Duke, simply type `bye` in the chat and press \"Send.\" Duke will save your task list to a file before closing.","lastModifiedDate":"2023-09-25"},{"lineNumber":139,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":140,"author":{"gitId":"LuoZYi"},"content":"### Graphical User Interface (GUI)","lastModifiedDate":"2023-09-25"},{"lineNumber":141,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":142,"author":{"gitId":"LuoZYi"},"content":"Duke also provides a graphical user interface (GUI) for a more interactive experience. The GUI allows you to type commands in a text field and displays Duke\u0027s responses in a chat-like interface.","lastModifiedDate":"2023-09-25"},{"lineNumber":143,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":144,"author":{"gitId":"LuoZYi"},"content":"### Troubleshooting","lastModifiedDate":"2023-09-25"},{"lineNumber":145,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":146,"author":{"gitId":"LuoZYi"},"content":"If you encounter any issues while using Duke, consider the following:","lastModifiedDate":"2023-09-25"},{"lineNumber":147,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":148,"author":{"gitId":"LuoZYi"},"content":"- Ensure you\u0027re using valid commands and following the correct syntax.","lastModifiedDate":"2023-09-25"},{"lineNumber":149,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":150,"author":{"gitId":"LuoZYi"},"content":"- If Duke encounters an error, it will provide an error message with details.","lastModifiedDate":"2023-09-25"},{"lineNumber":151,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":152,"author":{"gitId":"LuoZYi"},"content":"- If you need help with a specific command, type `help` to get a list of available commands and their usage.","lastModifiedDate":"2023-09-25"},{"lineNumber":153,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":154,"author":{"gitId":"LuoZYi"},"content":"### Additional Help","lastModifiedDate":"2023-09-25"},{"lineNumber":155,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":156,"author":{"gitId":"LuoZYi"},"content":"For additional help or questions, please refer to the chatbot\u0027s responses or type `help` for a list of available commands and their descriptions.","lastModifiedDate":"2023-09-25"},{"lineNumber":157,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":158,"author":{"gitId":"LuoZYi"},"content":"---","lastModifiedDate":"2023-09-25"},{"lineNumber":159,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":160,"author":{"gitId":"LuoZYi"},"content":"Enjoy using Duke to manage your tasks efficiently!","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"LuoZYi":147,"-":13}},{"path":"src/main/java/GUI/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LuoZYi"},"content":"package GUI;","lastModifiedDate":"2023-09-29"},{"lineNumber":2,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":3,"author":{"gitId":"LuoZYi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-29"},{"lineNumber":4,"author":{"gitId":"LuoZYi"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-29"},{"lineNumber":5,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":6,"author":{"gitId":"LuoZYi"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-29"},{"lineNumber":7,"author":{"gitId":"LuoZYi"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-29"},{"lineNumber":8,"author":{"gitId":"LuoZYi"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-29"},{"lineNumber":9,"author":{"gitId":"LuoZYi"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-29"},{"lineNumber":10,"author":{"gitId":"LuoZYi"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-29"},{"lineNumber":11,"author":{"gitId":"LuoZYi"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-29"},{"lineNumber":12,"author":{"gitId":"LuoZYi"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-29"},{"lineNumber":13,"author":{"gitId":"LuoZYi"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-29"},{"lineNumber":14,"author":{"gitId":"LuoZYi"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-29"},{"lineNumber":15,"author":{"gitId":"LuoZYi"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-29"},{"lineNumber":16,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":17,"author":{"gitId":"LuoZYi"},"content":"/**","lastModifiedDate":"2023-09-29"},{"lineNumber":18,"author":{"gitId":"LuoZYi"},"content":" * The `DialogBox` class represents a custom control for displaying chat dialog boxes in the user interface.","lastModifiedDate":"2023-09-29"},{"lineNumber":19,"author":{"gitId":"LuoZYi"},"content":" * Each `DialogBox` consists of an ImageView to represent the speaker\u0027s face and a label containing text from the speaker.","lastModifiedDate":"2023-09-29"},{"lineNumber":20,"author":{"gitId":"LuoZYi"},"content":" * This class is used to create dialog boxes for both the user and Duke (the chatbot) in the graphical user interface.","lastModifiedDate":"2023-09-29"},{"lineNumber":21,"author":{"gitId":"LuoZYi"},"content":" */","lastModifiedDate":"2023-09-29"},{"lineNumber":22,"author":{"gitId":"LuoZYi"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-29"},{"lineNumber":23,"author":{"gitId":"LuoZYi"},"content":"    @FXML","lastModifiedDate":"2023-09-29"},{"lineNumber":24,"author":{"gitId":"LuoZYi"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-29"},{"lineNumber":25,"author":{"gitId":"LuoZYi"},"content":"    @FXML","lastModifiedDate":"2023-09-29"},{"lineNumber":26,"author":{"gitId":"LuoZYi"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-29"},{"lineNumber":27,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":28,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":29,"author":{"gitId":"LuoZYi"},"content":"     * Constructs a new `DialogBox` instance with the provided text and image.","lastModifiedDate":"2023-09-29"},{"lineNumber":30,"author":{"gitId":"LuoZYi"},"content":"     * This constructor is used internally to create dialog boxes for user and Duke messages.","lastModifiedDate":"2023-09-29"},{"lineNumber":31,"author":{"gitId":"LuoZYi"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":32,"author":{"gitId":"LuoZYi"},"content":"     * @param text The text content to be displayed in the dialog box.","lastModifiedDate":"2023-09-29"},{"lineNumber":33,"author":{"gitId":"LuoZYi"},"content":"     * @param img  The image (avatar) of the speaker to be displayed in the dialog box.","lastModifiedDate":"2023-09-29"},{"lineNumber":34,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":35,"author":{"gitId":"LuoZYi"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-29"},{"lineNumber":36,"author":{"gitId":"LuoZYi"},"content":"        try {","lastModifiedDate":"2023-09-29"},{"lineNumber":37,"author":{"gitId":"LuoZYi"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-29"},{"lineNumber":38,"author":{"gitId":"LuoZYi"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-29"},{"lineNumber":39,"author":{"gitId":"LuoZYi"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-29"},{"lineNumber":40,"author":{"gitId":"LuoZYi"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-29"},{"lineNumber":41,"author":{"gitId":"LuoZYi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-29"},{"lineNumber":42,"author":{"gitId":"LuoZYi"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-29"},{"lineNumber":43,"author":{"gitId":"LuoZYi"},"content":"        }","lastModifiedDate":"2023-09-29"},{"lineNumber":44,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":45,"author":{"gitId":"LuoZYi"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-29"},{"lineNumber":46,"author":{"gitId":"LuoZYi"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-29"},{"lineNumber":47,"author":{"gitId":"LuoZYi"},"content":"        dialog.setWrapText(true);","lastModifiedDate":"2023-09-29"},{"lineNumber":48,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":49,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":50,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":51,"author":{"gitId":"LuoZYi"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-29"},{"lineNumber":52,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":53,"author":{"gitId":"LuoZYi"},"content":"    protected void flip() {","lastModifiedDate":"2023-09-29"},{"lineNumber":54,"author":{"gitId":"LuoZYi"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-29"},{"lineNumber":55,"author":{"gitId":"LuoZYi"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-29"},{"lineNumber":56,"author":{"gitId":"LuoZYi"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-29"},{"lineNumber":57,"author":{"gitId":"LuoZYi"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-29"},{"lineNumber":58,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":59,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":60,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":61,"author":{"gitId":"LuoZYi"},"content":"     * Creates a new `DialogBox` for the user\u0027s messages.","lastModifiedDate":"2023-09-29"},{"lineNumber":62,"author":{"gitId":"LuoZYi"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":63,"author":{"gitId":"LuoZYi"},"content":"     * @param text The text content of the user\u0027s message.","lastModifiedDate":"2023-09-29"},{"lineNumber":64,"author":{"gitId":"LuoZYi"},"content":"     * @param img  The image (avatar) of the user.","lastModifiedDate":"2023-09-29"},{"lineNumber":65,"author":{"gitId":"LuoZYi"},"content":"     * @return A `DialogBox` instance for the user\u0027s message.","lastModifiedDate":"2023-09-29"},{"lineNumber":66,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":67,"author":{"gitId":"LuoZYi"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-29"},{"lineNumber":68,"author":{"gitId":"LuoZYi"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-29"},{"lineNumber":69,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":70,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":71,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":72,"author":{"gitId":"LuoZYi"},"content":"     * Creates a new `DialogBox` for Duke\u0027s (chatbot\u0027s) messages.","lastModifiedDate":"2023-09-29"},{"lineNumber":73,"author":{"gitId":"LuoZYi"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":74,"author":{"gitId":"LuoZYi"},"content":"     * @param text The text content of Duke\u0027s message.","lastModifiedDate":"2023-09-29"},{"lineNumber":75,"author":{"gitId":"LuoZYi"},"content":"     * @param img  The image (avatar) of Duke.","lastModifiedDate":"2023-09-29"},{"lineNumber":76,"author":{"gitId":"LuoZYi"},"content":"     * @return A `DialogBox` instance for Duke\u0027s message.","lastModifiedDate":"2023-09-29"},{"lineNumber":77,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":78,"author":{"gitId":"LuoZYi"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-29"},{"lineNumber":79,"author":{"gitId":"LuoZYi"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-29"},{"lineNumber":80,"author":{"gitId":"LuoZYi"},"content":"        db.flip();","lastModifiedDate":"2023-09-29"},{"lineNumber":81,"author":{"gitId":"LuoZYi"},"content":"        return db;","lastModifiedDate":"2023-09-29"},{"lineNumber":82,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":83,"author":{"gitId":"LuoZYi"},"content":"}","lastModifiedDate":"2023-09-29"}],"authorContributionMap":{"LuoZYi":83}},{"path":"src/main/java/GUI/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LuoZYi"},"content":"package GUI;","lastModifiedDate":"2023-09-29"},{"lineNumber":2,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":3,"author":{"gitId":"LuoZYi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-29"},{"lineNumber":4,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":5,"author":{"gitId":"LuoZYi"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-29"},{"lineNumber":6,"author":{"gitId":"LuoZYi"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-29"},{"lineNumber":7,"author":{"gitId":"LuoZYi"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-29"},{"lineNumber":8,"author":{"gitId":"LuoZYi"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-29"},{"lineNumber":9,"author":{"gitId":"LuoZYi"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-29"},{"lineNumber":10,"author":{"gitId":"LuoZYi"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-29"},{"lineNumber":11,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":12,"author":{"gitId":"LuoZYi"},"content":"/**","lastModifiedDate":"2023-09-29"},{"lineNumber":13,"author":{"gitId":"LuoZYi"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-29"},{"lineNumber":14,"author":{"gitId":"LuoZYi"},"content":" */","lastModifiedDate":"2023-09-29"},{"lineNumber":15,"author":{"gitId":"LuoZYi"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-29"},{"lineNumber":16,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":17,"author":{"gitId":"LuoZYi"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-29"},{"lineNumber":18,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":19,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":20,"author":{"gitId":"LuoZYi"},"content":"     * The `start` method is called when the JavaFX application is launched. It initializes the main application","lastModifiedDate":"2023-09-29"},{"lineNumber":21,"author":{"gitId":"LuoZYi"},"content":"     * window, loads the FXML layout, sets up the scene, and associates the `Duke` chatbot with the `MainWindow`","lastModifiedDate":"2023-09-29"},{"lineNumber":22,"author":{"gitId":"LuoZYi"},"content":"     * controller.","lastModifiedDate":"2023-09-29"},{"lineNumber":23,"author":{"gitId":"LuoZYi"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":24,"author":{"gitId":"LuoZYi"},"content":"     * @param stage The primary stage of the JavaFX application.","lastModifiedDate":"2023-09-29"},{"lineNumber":25,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":26,"author":{"gitId":"LuoZYi"},"content":"    @Override","lastModifiedDate":"2023-09-29"},{"lineNumber":27,"author":{"gitId":"LuoZYi"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-29"},{"lineNumber":28,"author":{"gitId":"LuoZYi"},"content":"        try {","lastModifiedDate":"2023-09-29"},{"lineNumber":29,"author":{"gitId":"LuoZYi"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-29"},{"lineNumber":30,"author":{"gitId":"LuoZYi"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-29"},{"lineNumber":31,"author":{"gitId":"LuoZYi"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-29"},{"lineNumber":32,"author":{"gitId":"LuoZYi"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-29"},{"lineNumber":33,"author":{"gitId":"LuoZYi"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-29"},{"lineNumber":34,"author":{"gitId":"LuoZYi"},"content":"            stage.show();","lastModifiedDate":"2023-09-29"},{"lineNumber":35,"author":{"gitId":"LuoZYi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-29"},{"lineNumber":36,"author":{"gitId":"LuoZYi"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-29"},{"lineNumber":37,"author":{"gitId":"LuoZYi"},"content":"        }","lastModifiedDate":"2023-09-29"},{"lineNumber":38,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":39,"author":{"gitId":"LuoZYi"},"content":"}","lastModifiedDate":"2023-09-29"}],"authorContributionMap":{"LuoZYi":39}},{"path":"src/main/java/GUI/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LuoZYi"},"content":"package GUI;","lastModifiedDate":"2023-09-29"},{"lineNumber":2,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":3,"author":{"gitId":"LuoZYi"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-29"},{"lineNumber":4,"author":{"gitId":"LuoZYi"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-29"},{"lineNumber":5,"author":{"gitId":"LuoZYi"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-29"},{"lineNumber":6,"author":{"gitId":"LuoZYi"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-29"},{"lineNumber":7,"author":{"gitId":"LuoZYi"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-29"},{"lineNumber":8,"author":{"gitId":"LuoZYi"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-29"},{"lineNumber":9,"author":{"gitId":"LuoZYi"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-29"},{"lineNumber":10,"author":{"gitId":"LuoZYi"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-29"},{"lineNumber":11,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":12,"author":{"gitId":"LuoZYi"},"content":"/**","lastModifiedDate":"2023-09-29"},{"lineNumber":13,"author":{"gitId":"LuoZYi"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-29"},{"lineNumber":14,"author":{"gitId":"LuoZYi"},"content":" */","lastModifiedDate":"2023-09-29"},{"lineNumber":15,"author":{"gitId":"LuoZYi"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-29"},{"lineNumber":16,"author":{"gitId":"LuoZYi"},"content":"    @FXML","lastModifiedDate":"2023-09-29"},{"lineNumber":17,"author":{"gitId":"LuoZYi"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-29"},{"lineNumber":18,"author":{"gitId":"LuoZYi"},"content":"    @FXML","lastModifiedDate":"2023-09-29"},{"lineNumber":19,"author":{"gitId":"LuoZYi"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-29"},{"lineNumber":20,"author":{"gitId":"LuoZYi"},"content":"    @FXML","lastModifiedDate":"2023-09-29"},{"lineNumber":21,"author":{"gitId":"LuoZYi"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-29"},{"lineNumber":22,"author":{"gitId":"LuoZYi"},"content":"    @FXML","lastModifiedDate":"2023-09-29"},{"lineNumber":23,"author":{"gitId":"LuoZYi"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-29"},{"lineNumber":24,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":25,"author":{"gitId":"LuoZYi"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-29"},{"lineNumber":26,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":27,"author":{"gitId":"LuoZYi"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/UserImage.png\"));","lastModifiedDate":"2023-09-29"},{"lineNumber":28,"author":{"gitId":"LuoZYi"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DukeImage.png\"));","lastModifiedDate":"2023-09-29"},{"lineNumber":29,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":30,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":31,"author":{"gitId":"LuoZYi"},"content":"     * Initializes the `MainWindow` by binding the scrollPane\u0027s vertical value to the height of the dialogContainer","lastModifiedDate":"2023-09-29"},{"lineNumber":32,"author":{"gitId":"LuoZYi"},"content":"     * and displays a greeting message from the chatbot Duke.","lastModifiedDate":"2023-09-29"},{"lineNumber":33,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":34,"author":{"gitId":"LuoZYi"},"content":"    @FXML","lastModifiedDate":"2023-09-29"},{"lineNumber":35,"author":{"gitId":"LuoZYi"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-29"},{"lineNumber":36,"author":{"gitId":"LuoZYi"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-29"},{"lineNumber":37,"author":{"gitId":"LuoZYi"},"content":"        String greetingMessage \u003d \"Hello! I\u0027m Duke.\" +","lastModifiedDate":"2023-09-29"},{"lineNumber":38,"author":{"gitId":"LuoZYi"},"content":"                \"\\nWhat can I do for you?\";","lastModifiedDate":"2023-09-29"},{"lineNumber":39,"author":{"gitId":"LuoZYi"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(greetingMessage, dukeImage));","lastModifiedDate":"2023-09-29"},{"lineNumber":40,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":41,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":42,"author":{"gitId":"LuoZYi"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-29"},{"lineNumber":43,"author":{"gitId":"LuoZYi"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-29"},{"lineNumber":44,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":45,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":46,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":47,"author":{"gitId":"LuoZYi"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-29"},{"lineNumber":48,"author":{"gitId":"LuoZYi"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-29"},{"lineNumber":49,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":50,"author":{"gitId":"LuoZYi"},"content":"    @FXML","lastModifiedDate":"2023-09-29"},{"lineNumber":51,"author":{"gitId":"LuoZYi"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-29"},{"lineNumber":52,"author":{"gitId":"LuoZYi"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-29"},{"lineNumber":53,"author":{"gitId":"LuoZYi"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-29"},{"lineNumber":54,"author":{"gitId":"LuoZYi"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-29"},{"lineNumber":55,"author":{"gitId":"LuoZYi"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-29"},{"lineNumber":56,"author":{"gitId":"LuoZYi"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-29"},{"lineNumber":57,"author":{"gitId":"LuoZYi"},"content":"        );","lastModifiedDate":"2023-09-29"},{"lineNumber":58,"author":{"gitId":"LuoZYi"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-29"},{"lineNumber":59,"author":{"gitId":"LuoZYi"},"content":"        if (response.contains(\"Bye\")) {","lastModifiedDate":"2023-09-29"},{"lineNumber":60,"author":{"gitId":"LuoZYi"},"content":"            duke.exit();","lastModifiedDate":"2023-09-29"},{"lineNumber":61,"author":{"gitId":"LuoZYi"},"content":"        }","lastModifiedDate":"2023-09-29"},{"lineNumber":62,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":63,"author":{"gitId":"LuoZYi"},"content":"}","lastModifiedDate":"2023-09-29"}],"authorContributionMap":{"LuoZYi":63}},{"path":"src/main/java/duke/CustomException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LuoZYi"},"content":"package duke;","lastModifiedDate":"2023-09-29"},{"lineNumber":2,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":3,"author":{"gitId":"LuoZYi"},"content":"/**","lastModifiedDate":"2023-09-29"},{"lineNumber":4,"author":{"gitId":"LuoZYi"},"content":" * A custom exception class that extends the base Exception class. It can be used to represent and handle","lastModifiedDate":"2023-09-29"},{"lineNumber":5,"author":{"gitId":"LuoZYi"},"content":" * custom exceptions in the Duke chatbot application.","lastModifiedDate":"2023-09-29"},{"lineNumber":6,"author":{"gitId":"LuoZYi"},"content":" */","lastModifiedDate":"2023-09-29"},{"lineNumber":7,"author":{"gitId":"LuoZYi"},"content":"public class CustomException extends Exception {","lastModifiedDate":"2023-09-29"},{"lineNumber":8,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":9,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":10,"author":{"gitId":"LuoZYi"},"content":"     * Constructs a new CustomException with a default error message.","lastModifiedDate":"2023-09-29"},{"lineNumber":11,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":12,"author":{"gitId":"LuoZYi"},"content":"    public CustomException() {","lastModifiedDate":"2023-09-29"},{"lineNumber":13,"author":{"gitId":"LuoZYi"},"content":"        super(\"Default custom exception message\");","lastModifiedDate":"2023-09-29"},{"lineNumber":14,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":15,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":16,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":17,"author":{"gitId":"LuoZYi"},"content":"     * Constructs a new CustomException with a specified error message.","lastModifiedDate":"2023-09-29"},{"lineNumber":18,"author":{"gitId":"LuoZYi"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":19,"author":{"gitId":"LuoZYi"},"content":"     * @param message The custom error message associated with this exception.","lastModifiedDate":"2023-09-29"},{"lineNumber":20,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":21,"author":{"gitId":"LuoZYi"},"content":"    public CustomException(String message) {","lastModifiedDate":"2023-09-29"},{"lineNumber":22,"author":{"gitId":"LuoZYi"},"content":"        super(message);","lastModifiedDate":"2023-09-29"},{"lineNumber":23,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":24,"author":{"gitId":"LuoZYi"},"content":"}","lastModifiedDate":"2023-09-29"},{"lineNumber":25,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"}],"authorContributionMap":{"LuoZYi":25}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LuoZYi"},"content":"package duke;","lastModifiedDate":"2023-09-29"},{"lineNumber":2,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":3,"author":{"gitId":"LuoZYi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-29"},{"lineNumber":4,"author":{"gitId":"LuoZYi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-29"},{"lineNumber":5,"author":{"gitId":"LuoZYi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-29"},{"lineNumber":6,"author":{"gitId":"LuoZYi"},"content":"import java.util.Locale;","lastModifiedDate":"2023-09-29"},{"lineNumber":7,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":8,"author":{"gitId":"LuoZYi"},"content":"/**","lastModifiedDate":"2023-09-29"},{"lineNumber":9,"author":{"gitId":"LuoZYi"},"content":" * Represents a task with a specific deadline, which can be either a date and time or just a date.","lastModifiedDate":"2023-09-29"},{"lineNumber":10,"author":{"gitId":"LuoZYi"},"content":" * It extends the Task class and adds a \u0027by\u0027 field to store the deadline.","lastModifiedDate":"2023-09-29"},{"lineNumber":11,"author":{"gitId":"LuoZYi"},"content":" */","lastModifiedDate":"2023-09-29"},{"lineNumber":12,"author":{"gitId":"LuoZYi"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-09-29"},{"lineNumber":13,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":14,"author":{"gitId":"LuoZYi"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-09-29"},{"lineNumber":15,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":16,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":17,"author":{"gitId":"LuoZYi"},"content":"     * Constructs a Deadline task with a description and a deadline in the form of a LocalDateTime.","lastModifiedDate":"2023-09-29"},{"lineNumber":18,"author":{"gitId":"LuoZYi"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":19,"author":{"gitId":"LuoZYi"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2023-09-29"},{"lineNumber":20,"author":{"gitId":"LuoZYi"},"content":"     * @param dateTime    The LocalDateTime representing the deadline date and time.","lastModifiedDate":"2023-09-29"},{"lineNumber":21,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":22,"author":{"gitId":"LuoZYi"},"content":"    public Deadline(String description, LocalDateTime dateTime) {","lastModifiedDate":"2023-09-29"},{"lineNumber":23,"author":{"gitId":"LuoZYi"},"content":"        super(description, dateTime);","lastModifiedDate":"2023-09-29"},{"lineNumber":24,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":25,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":26,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":27,"author":{"gitId":"LuoZYi"},"content":"     * Constructs a Deadline task with a description and a deadline in the form of a LocalDate.","lastModifiedDate":"2023-09-29"},{"lineNumber":28,"author":{"gitId":"LuoZYi"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":29,"author":{"gitId":"LuoZYi"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2023-09-29"},{"lineNumber":30,"author":{"gitId":"LuoZYi"},"content":"     * @param date        The LocalDate representing the deadline date.","lastModifiedDate":"2023-09-29"},{"lineNumber":31,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":32,"author":{"gitId":"LuoZYi"},"content":"    public Deadline(String description, LocalDate date) {","lastModifiedDate":"2023-09-29"},{"lineNumber":33,"author":{"gitId":"LuoZYi"},"content":"        super(description);","lastModifiedDate":"2023-09-29"},{"lineNumber":34,"author":{"gitId":"LuoZYi"},"content":"        this.by \u003d date;","lastModifiedDate":"2023-09-29"},{"lineNumber":35,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":36,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":37,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":38,"author":{"gitId":"LuoZYi"},"content":"     * Returns a string representation of the Deadline task, including its status icon, description, and deadline.","lastModifiedDate":"2023-09-29"},{"lineNumber":39,"author":{"gitId":"LuoZYi"},"content":"     * The date and time format used is \"MMM dd yyyy HH:mm\" (e.g., \"Jan 01 2023 14:30\") for LocalDateTime","lastModifiedDate":"2023-09-29"},{"lineNumber":40,"author":{"gitId":"LuoZYi"},"content":"     * and \"MMM dd yyyy\" (e.g., \"Jan 01 2023\") for LocalDate, with the English locale.","lastModifiedDate":"2023-09-29"},{"lineNumber":41,"author":{"gitId":"LuoZYi"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":42,"author":{"gitId":"LuoZYi"},"content":"     * @return A formatted string representing the Deadline task.","lastModifiedDate":"2023-09-29"},{"lineNumber":43,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":44,"author":{"gitId":"LuoZYi"},"content":"    @Override","lastModifiedDate":"2023-09-29"},{"lineNumber":45,"author":{"gitId":"LuoZYi"},"content":"    public String toString() {","lastModifiedDate":"2023-09-29"},{"lineNumber":46,"author":{"gitId":"LuoZYi"},"content":"        String status \u003d \"[\" + getStatusIcon() + \"] \";","lastModifiedDate":"2023-09-29"},{"lineNumber":47,"author":{"gitId":"LuoZYi"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\", Locale.ENGLISH);","lastModifiedDate":"2023-09-29"},{"lineNumber":48,"author":{"gitId":"LuoZYi"},"content":"        return \" \" + \"[D]\" + status + description + \" (by: \" + dateTime.format(formatter) + \")\";","lastModifiedDate":"2023-09-29"},{"lineNumber":49,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":50,"author":{"gitId":"LuoZYi"},"content":"}","lastModifiedDate":"2023-09-29"}],"authorContributionMap":{"LuoZYi":50}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LuoZYi"},"content":"package duke;","lastModifiedDate":"2023-09-29"},{"lineNumber":2,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":3,"author":{"gitId":"LuoZYi"},"content":"import GUI.DialogBox;","lastModifiedDate":"2023-09-29"},{"lineNumber":4,"author":{"gitId":"LuoZYi"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-29"},{"lineNumber":5,"author":{"gitId":"LuoZYi"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-29"},{"lineNumber":6,"author":{"gitId":"LuoZYi"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-29"},{"lineNumber":7,"author":{"gitId":"LuoZYi"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-29"},{"lineNumber":8,"author":{"gitId":"LuoZYi"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-29"},{"lineNumber":9,"author":{"gitId":"LuoZYi"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-29"},{"lineNumber":10,"author":{"gitId":"LuoZYi"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-29"},{"lineNumber":11,"author":{"gitId":"LuoZYi"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-29"},{"lineNumber":12,"author":{"gitId":"LuoZYi"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-29"},{"lineNumber":13,"author":{"gitId":"LuoZYi"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-29"},{"lineNumber":14,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":15,"author":{"gitId":"LuoZYi"},"content":"/**","lastModifiedDate":"2023-09-29"},{"lineNumber":16,"author":{"gitId":"LuoZYi"},"content":" * The Duke class represents a command-line chatbot that allows users to manage their tasks. Users can interact","lastModifiedDate":"2023-09-29"},{"lineNumber":17,"author":{"gitId":"LuoZYi"},"content":" * with Duke by providing various commands to add, list, mark, unmark, delete, and save tasks. Duke also stores","lastModifiedDate":"2023-09-29"},{"lineNumber":18,"author":{"gitId":"LuoZYi"},"content":" * tasks in a file for persistence across sessions.","lastModifiedDate":"2023-09-29"},{"lineNumber":19,"author":{"gitId":"LuoZYi"},"content":" *","lastModifiedDate":"2023-09-29"},{"lineNumber":20,"author":{"gitId":"LuoZYi"},"content":" * Duke supports the following commands:","lastModifiedDate":"2023-09-29"},{"lineNumber":21,"author":{"gitId":"LuoZYi"},"content":" * - \"bye\": Exits the chatbot and saves the task list to a file.","lastModifiedDate":"2023-09-29"},{"lineNumber":22,"author":{"gitId":"LuoZYi"},"content":" * - \"list\": Lists all tasks in the current task list.","lastModifiedDate":"2023-09-29"},{"lineNumber":23,"author":{"gitId":"LuoZYi"},"content":" * - \"mark \u003ctask_id\u003e\": Marks a task as done by its ID.","lastModifiedDate":"2023-09-29"},{"lineNumber":24,"author":{"gitId":"LuoZYi"},"content":" * - \"unmark \u003ctask_id\u003e\": Unmarks a previously marked task.","lastModifiedDate":"2023-09-29"},{"lineNumber":25,"author":{"gitId":"LuoZYi"},"content":" * - \"todo \u003cdescription\u003e\": Adds a to-do task with a description.","lastModifiedDate":"2023-09-29"},{"lineNumber":26,"author":{"gitId":"LuoZYi"},"content":" * - \"event \u003cdescription\u003e /from \u003cdatetime\u003e /to \u003cdatetime\u003e\": Adds an event task with a description, start date, and end date.","lastModifiedDate":"2023-09-29"},{"lineNumber":27,"author":{"gitId":"LuoZYi"},"content":" * - \"deadline \u003cdescription\u003e /by \u003cdatetime\u003e\": Adds a deadline task with a description and due date.","lastModifiedDate":"2023-09-29"},{"lineNumber":28,"author":{"gitId":"LuoZYi"},"content":" * - \"delete \u003ctask_id\u003e\": Deletes a task by its ID.","lastModifiedDate":"2023-09-29"},{"lineNumber":29,"author":{"gitId":"LuoZYi"},"content":" *","lastModifiedDate":"2023-09-29"},{"lineNumber":30,"author":{"gitId":"LuoZYi"},"content":" * Duke also provides a graphical user interface (GUI) using JavaFX for a more interactive user experience.","lastModifiedDate":"2023-09-29"},{"lineNumber":31,"author":{"gitId":"LuoZYi"},"content":" * Users can input commands in a text field, and Duke\u0027s responses are displayed in a scrollable chat interface.","lastModifiedDate":"2023-09-29"},{"lineNumber":32,"author":{"gitId":"LuoZYi"},"content":" * The GUI version of Duke includes a send button for user input and displays user and Duke avatars for each message.","lastModifiedDate":"2023-09-29"},{"lineNumber":33,"author":{"gitId":"LuoZYi"},"content":" *","lastModifiedDate":"2023-09-29"},{"lineNumber":34,"author":{"gitId":"LuoZYi"},"content":" * Duke\u0027s chat interface includes support for features like listing tasks, marking tasks as done, adding tasks,","lastModifiedDate":"2023-09-29"},{"lineNumber":35,"author":{"gitId":"LuoZYi"},"content":" * deleting tasks, and searching for tasks. Users can also exit the chatbot with the \"bye\" command.","lastModifiedDate":"2023-09-29"},{"lineNumber":36,"author":{"gitId":"LuoZYi"},"content":" *","lastModifiedDate":"2023-09-29"},{"lineNumber":37,"author":{"gitId":"LuoZYi"},"content":" * Duke stores tasks in a file to ensure persistence across sessions, and it can load tasks from this file when","lastModifiedDate":"2023-09-29"},{"lineNumber":38,"author":{"gitId":"LuoZYi"},"content":" * initialized.","lastModifiedDate":"2023-09-29"},{"lineNumber":39,"author":{"gitId":"LuoZYi"},"content":" *","lastModifiedDate":"2023-09-29"},{"lineNumber":40,"author":{"gitId":"LuoZYi"},"content":" * @author LuoZYi","lastModifiedDate":"2023-09-29"},{"lineNumber":41,"author":{"gitId":"LuoZYi"},"content":" */","lastModifiedDate":"2023-09-29"},{"lineNumber":42,"author":{"gitId":"LuoZYi"},"content":"public class Duke extends Application {","lastModifiedDate":"2023-09-29"},{"lineNumber":43,"author":{"gitId":"LuoZYi"},"content":"    private final String filePath \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-09-29"},{"lineNumber":44,"author":{"gitId":"LuoZYi"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-29"},{"lineNumber":45,"author":{"gitId":"LuoZYi"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-29"},{"lineNumber":46,"author":{"gitId":"LuoZYi"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-09-29"},{"lineNumber":47,"author":{"gitId":"LuoZYi"},"content":"    private Parser parser;","lastModifiedDate":"2023-09-29"},{"lineNumber":48,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":49,"author":{"gitId":"LuoZYi"},"content":"    // JavaFX","lastModifiedDate":"2023-09-29"},{"lineNumber":50,"author":{"gitId":"LuoZYi"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-29"},{"lineNumber":51,"author":{"gitId":"LuoZYi"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-29"},{"lineNumber":52,"author":{"gitId":"LuoZYi"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-29"},{"lineNumber":53,"author":{"gitId":"LuoZYi"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-29"},{"lineNumber":54,"author":{"gitId":"LuoZYi"},"content":"    private Scene scene;","lastModifiedDate":"2023-09-29"},{"lineNumber":55,"author":{"gitId":"LuoZYi"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-29"},{"lineNumber":56,"author":{"gitId":"LuoZYi"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-29"},{"lineNumber":57,"author":{"gitId":"LuoZYi"},"content":"    private String chatBotResponse;","lastModifiedDate":"2023-09-29"},{"lineNumber":58,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":59,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":60,"author":{"gitId":"LuoZYi"},"content":"     * Constructs a new Duke instance.","lastModifiedDate":"2023-09-29"},{"lineNumber":61,"author":{"gitId":"LuoZYi"},"content":"     * Initializes the user interface (UI), storage, task list, and parser components. It also attempts to load","lastModifiedDate":"2023-09-29"},{"lineNumber":62,"author":{"gitId":"LuoZYi"},"content":"     * tasks from a file. If loading fails, it creates an empty task list.","lastModifiedDate":"2023-09-29"},{"lineNumber":63,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":64,"author":{"gitId":"LuoZYi"},"content":"    public Duke() {","lastModifiedDate":"2023-09-29"},{"lineNumber":65,"author":{"gitId":"LuoZYi"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-29"},{"lineNumber":66,"author":{"gitId":"LuoZYi"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-29"},{"lineNumber":67,"author":{"gitId":"LuoZYi"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-09-29"},{"lineNumber":68,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":69,"author":{"gitId":"LuoZYi"},"content":"        // Ensure the file path is not empty","lastModifiedDate":"2023-09-29"},{"lineNumber":70,"author":{"gitId":"LuoZYi"},"content":"        assert filePath !\u003d null \u0026\u0026 !filePath.isEmpty() : \"File path must not be empty\";","lastModifiedDate":"2023-09-29"},{"lineNumber":71,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":72,"author":{"gitId":"LuoZYi"},"content":"        // Ensure the storage, UI, and taskList are properly initialized","lastModifiedDate":"2023-09-29"},{"lineNumber":73,"author":{"gitId":"LuoZYi"},"content":"        assert storage !\u003d null : \"Storage must be initialized\";","lastModifiedDate":"2023-09-29"},{"lineNumber":74,"author":{"gitId":"LuoZYi"},"content":"        assert ui !\u003d null : \"UI must be initialized\";","lastModifiedDate":"2023-09-29"},{"lineNumber":75,"author":{"gitId":"LuoZYi"},"content":"        assert taskList !\u003d null : \"TaskList must be initialized\";","lastModifiedDate":"2023-09-29"},{"lineNumber":76,"author":{"gitId":"LuoZYi"},"content":"        try {","lastModifiedDate":"2023-09-29"},{"lineNumber":77,"author":{"gitId":"LuoZYi"},"content":"            taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-29"},{"lineNumber":78,"author":{"gitId":"LuoZYi"},"content":"        } catch (CustomException e) {","lastModifiedDate":"2023-09-29"},{"lineNumber":79,"author":{"gitId":"LuoZYi"},"content":"            System.out.println(\"Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2023-09-29"},{"lineNumber":80,"author":{"gitId":"LuoZYi"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2023-09-29"},{"lineNumber":81,"author":{"gitId":"LuoZYi"},"content":"        }","lastModifiedDate":"2023-09-29"},{"lineNumber":82,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":83,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":84,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":85,"author":{"gitId":"LuoZYi"},"content":"     * Runs the Duke chatbot.","lastModifiedDate":"2023-09-29"},{"lineNumber":86,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":87,"author":{"gitId":"LuoZYi"},"content":"    public void run() {","lastModifiedDate":"2023-09-29"},{"lineNumber":88,"author":{"gitId":"LuoZYi"},"content":"        try {","lastModifiedDate":"2023-09-29"},{"lineNumber":89,"author":{"gitId":"LuoZYi"},"content":"            while (true) {","lastModifiedDate":"2023-09-29"},{"lineNumber":90,"author":{"gitId":"LuoZYi"},"content":"                String response \u003d ui.getUserInput();","lastModifiedDate":"2023-09-29"},{"lineNumber":91,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":92,"author":{"gitId":"LuoZYi"},"content":"                // Use the parseCommandType method to determine the command type","lastModifiedDate":"2023-09-29"},{"lineNumber":93,"author":{"gitId":"LuoZYi"},"content":"                Parser.CommandType commandType \u003d parser.parseCommandType(response);","lastModifiedDate":"2023-09-29"},{"lineNumber":94,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":95,"author":{"gitId":"LuoZYi"},"content":"                switch (commandType) {","lastModifiedDate":"2023-09-29"},{"lineNumber":96,"author":{"gitId":"LuoZYi"},"content":"                    case BYE:","lastModifiedDate":"2023-09-29"},{"lineNumber":97,"author":{"gitId":"LuoZYi"},"content":"                        ui.closeScanner();","lastModifiedDate":"2023-09-29"},{"lineNumber":98,"author":{"gitId":"LuoZYi"},"content":"                        try {","lastModifiedDate":"2023-09-29"},{"lineNumber":99,"author":{"gitId":"LuoZYi"},"content":"                            storage.save(taskList.getTaskArrayList());","lastModifiedDate":"2023-09-29"},{"lineNumber":100,"author":{"gitId":"LuoZYi"},"content":"                        } catch (CustomException e) {","lastModifiedDate":"2023-09-29"},{"lineNumber":101,"author":{"gitId":"LuoZYi"},"content":"                            System.out.println(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2023-09-29"},{"lineNumber":102,"author":{"gitId":"LuoZYi"},"content":"                        }","lastModifiedDate":"2023-09-29"},{"lineNumber":103,"author":{"gitId":"LuoZYi"},"content":"                        return;","lastModifiedDate":"2023-09-29"},{"lineNumber":104,"author":{"gitId":"LuoZYi"},"content":"                    case LIST:","lastModifiedDate":"2023-09-29"},{"lineNumber":105,"author":{"gitId":"LuoZYi"},"content":"                        ui.showMessage(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-09-29"},{"lineNumber":106,"author":{"gitId":"LuoZYi"},"content":"                        taskList.listTasks();","lastModifiedDate":"2023-09-29"},{"lineNumber":107,"author":{"gitId":"LuoZYi"},"content":"                        continue;","lastModifiedDate":"2023-09-29"},{"lineNumber":108,"author":{"gitId":"LuoZYi"},"content":"                    case MARK:","lastModifiedDate":"2023-09-29"},{"lineNumber":109,"author":{"gitId":"LuoZYi"},"content":"                        try {","lastModifiedDate":"2023-09-29"},{"lineNumber":110,"author":{"gitId":"LuoZYi"},"content":"                            int markId \u003d Integer.parseInt(response.substring(5).trim());","lastModifiedDate":"2023-09-29"},{"lineNumber":111,"author":{"gitId":"LuoZYi"},"content":"                            String markMessage \u003d taskList.markTaskAsDone(markId);","lastModifiedDate":"2023-09-29"},{"lineNumber":112,"author":{"gitId":"LuoZYi"},"content":"                            ui.showMessage(markMessage);","lastModifiedDate":"2023-09-29"},{"lineNumber":113,"author":{"gitId":"LuoZYi"},"content":"                        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-29"},{"lineNumber":114,"author":{"gitId":"LuoZYi"},"content":"                            ui.showMessage(\"Invalid format. Key in an integer within range\");","lastModifiedDate":"2023-09-29"},{"lineNumber":115,"author":{"gitId":"LuoZYi"},"content":"                        }","lastModifiedDate":"2023-09-29"},{"lineNumber":116,"author":{"gitId":"LuoZYi"},"content":"                        continue;","lastModifiedDate":"2023-09-29"},{"lineNumber":117,"author":{"gitId":"LuoZYi"},"content":"                    case UNMARK:","lastModifiedDate":"2023-09-29"},{"lineNumber":118,"author":{"gitId":"LuoZYi"},"content":"                        try {","lastModifiedDate":"2023-09-29"},{"lineNumber":119,"author":{"gitId":"LuoZYi"},"content":"                            int unmarkId \u003d Integer.parseInt(response.substring(7).trim());","lastModifiedDate":"2023-09-29"},{"lineNumber":120,"author":{"gitId":"LuoZYi"},"content":"                            String unmarkMessage \u003d taskList.unmarkTask(unmarkId);","lastModifiedDate":"2023-09-29"},{"lineNumber":121,"author":{"gitId":"LuoZYi"},"content":"                            ui.showMessage(unmarkMessage);","lastModifiedDate":"2023-09-29"},{"lineNumber":122,"author":{"gitId":"LuoZYi"},"content":"                        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-29"},{"lineNumber":123,"author":{"gitId":"LuoZYi"},"content":"                            ui.showMessage(\"Invalid format. Key in an integer within range\");","lastModifiedDate":"2023-09-29"},{"lineNumber":124,"author":{"gitId":"LuoZYi"},"content":"                        }","lastModifiedDate":"2023-09-29"},{"lineNumber":125,"author":{"gitId":"LuoZYi"},"content":"                        continue;","lastModifiedDate":"2023-09-29"},{"lineNumber":126,"author":{"gitId":"LuoZYi"},"content":"                    case FIND:","lastModifiedDate":"2023-09-29"},{"lineNumber":127,"author":{"gitId":"LuoZYi"},"content":"                        ui.showMessage(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-09-29"},{"lineNumber":128,"author":{"gitId":"LuoZYi"},"content":"                        taskList.findTasks(response.substring(5));","lastModifiedDate":"2023-09-29"},{"lineNumber":129,"author":{"gitId":"LuoZYi"},"content":"                        continue;","lastModifiedDate":"2023-09-29"},{"lineNumber":130,"author":{"gitId":"LuoZYi"},"content":"                    case TODO:","lastModifiedDate":"2023-09-29"},{"lineNumber":131,"author":{"gitId":"LuoZYi"},"content":"                        String todoDescription \u003d response.substring(5);","lastModifiedDate":"2023-09-29"},{"lineNumber":132,"author":{"gitId":"LuoZYi"},"content":"                        Task toDo \u003d parser.addTodoTask(todoDescription);","lastModifiedDate":"2023-09-29"},{"lineNumber":133,"author":{"gitId":"LuoZYi"},"content":"                        String todoMessage \u003d taskList.addTask(toDo);","lastModifiedDate":"2023-09-29"},{"lineNumber":134,"author":{"gitId":"LuoZYi"},"content":"                        ui.showMessage(todoMessage);","lastModifiedDate":"2023-09-29"},{"lineNumber":135,"author":{"gitId":"LuoZYi"},"content":"                        continue;","lastModifiedDate":"2023-09-29"},{"lineNumber":136,"author":{"gitId":"LuoZYi"},"content":"                    case EVENT:","lastModifiedDate":"2023-09-29"},{"lineNumber":137,"author":{"gitId":"LuoZYi"},"content":"                        String[] eventParts \u003d response.split(\"/from|/to\");","lastModifiedDate":"2023-09-29"},{"lineNumber":138,"author":{"gitId":"LuoZYi"},"content":"                        if (eventParts.length \u003d\u003d 3) {","lastModifiedDate":"2023-09-29"},{"lineNumber":139,"author":{"gitId":"LuoZYi"},"content":"                            String eventDescription \u003d eventParts[0].substring(6).trim();","lastModifiedDate":"2023-09-29"},{"lineNumber":140,"author":{"gitId":"LuoZYi"},"content":"                            String from \u003d eventParts[1].trim();","lastModifiedDate":"2023-09-29"},{"lineNumber":141,"author":{"gitId":"LuoZYi"},"content":"                            String to \u003d eventParts[2].trim();","lastModifiedDate":"2023-09-29"},{"lineNumber":142,"author":{"gitId":"LuoZYi"},"content":"                            Task event \u003d parser.addEventTask(eventDescription, from, to);","lastModifiedDate":"2023-09-29"},{"lineNumber":143,"author":{"gitId":"LuoZYi"},"content":"                            String eventMessage \u003d taskList.addTask(event);","lastModifiedDate":"2023-09-29"},{"lineNumber":144,"author":{"gitId":"LuoZYi"},"content":"                            ui.showMessage(eventMessage);","lastModifiedDate":"2023-09-29"},{"lineNumber":145,"author":{"gitId":"LuoZYi"},"content":"                        } else {","lastModifiedDate":"2023-09-29"},{"lineNumber":146,"author":{"gitId":"LuoZYi"},"content":"                            ui.showMessage(\"Invalid event format. Use \u0027event \u003cdescription\u003e /from \u003cdatetime\u003e /to \u003cdatetime\u003e\u0027.\");","lastModifiedDate":"2023-09-29"},{"lineNumber":147,"author":{"gitId":"LuoZYi"},"content":"                        }","lastModifiedDate":"2023-09-29"},{"lineNumber":148,"author":{"gitId":"LuoZYi"},"content":"                        continue;","lastModifiedDate":"2023-09-29"},{"lineNumber":149,"author":{"gitId":"LuoZYi"},"content":"                    case DEADLINE:","lastModifiedDate":"2023-09-29"},{"lineNumber":150,"author":{"gitId":"LuoZYi"},"content":"                        String[] deadlineParts \u003d response.split(\"/by\", 2);","lastModifiedDate":"2023-09-29"},{"lineNumber":151,"author":{"gitId":"LuoZYi"},"content":"                        if (deadlineParts.length \u003d\u003d 2) {","lastModifiedDate":"2023-09-29"},{"lineNumber":152,"author":{"gitId":"LuoZYi"},"content":"                            String deadlineDescription \u003d deadlineParts[0].substring(9).trim();","lastModifiedDate":"2023-09-29"},{"lineNumber":153,"author":{"gitId":"LuoZYi"},"content":"                            String dateTimeString \u003d deadlineParts[1].trim();","lastModifiedDate":"2023-09-29"},{"lineNumber":154,"author":{"gitId":"LuoZYi"},"content":"                            Task deadline \u003d parser.addDeadlineTask(deadlineDescription, dateTimeString);","lastModifiedDate":"2023-09-29"},{"lineNumber":155,"author":{"gitId":"LuoZYi"},"content":"                            String deadlineMessage \u003d taskList.addTask(deadline);","lastModifiedDate":"2023-09-29"},{"lineNumber":156,"author":{"gitId":"LuoZYi"},"content":"                            ui.showMessage(deadlineMessage);","lastModifiedDate":"2023-09-29"},{"lineNumber":157,"author":{"gitId":"LuoZYi"},"content":"                        } else {","lastModifiedDate":"2023-09-29"},{"lineNumber":158,"author":{"gitId":"LuoZYi"},"content":"                            String message \u003d \"Invalid deadline format. Use \u0027deadline \u003cdescription\u003e /by \u003cdatetime\u003e\u0027.\";","lastModifiedDate":"2023-09-29"},{"lineNumber":159,"author":{"gitId":"LuoZYi"},"content":"                            ui.showMessage(message);","lastModifiedDate":"2023-09-29"},{"lineNumber":160,"author":{"gitId":"LuoZYi"},"content":"                        }","lastModifiedDate":"2023-09-29"},{"lineNumber":161,"author":{"gitId":"LuoZYi"},"content":"                        continue;","lastModifiedDate":"2023-09-29"},{"lineNumber":162,"author":{"gitId":"LuoZYi"},"content":"                    case DELETE:","lastModifiedDate":"2023-09-29"},{"lineNumber":163,"author":{"gitId":"LuoZYi"},"content":"                        int deleteId \u003d Integer.parseInt(response.substring(7));","lastModifiedDate":"2023-09-29"},{"lineNumber":164,"author":{"gitId":"LuoZYi"},"content":"                        String deleteMessage \u003d taskList.deleteTask(deleteId);","lastModifiedDate":"2023-09-29"},{"lineNumber":165,"author":{"gitId":"LuoZYi"},"content":"                        ui.showMessage(deleteMessage);","lastModifiedDate":"2023-09-29"},{"lineNumber":166,"author":{"gitId":"LuoZYi"},"content":"                        continue;","lastModifiedDate":"2023-09-29"},{"lineNumber":167,"author":{"gitId":"LuoZYi"},"content":"                    case HELP:","lastModifiedDate":"2023-09-29"},{"lineNumber":168,"author":{"gitId":"LuoZYi"},"content":"                        ui.showMessage(showHelp());","lastModifiedDate":"2023-09-29"},{"lineNumber":169,"author":{"gitId":"LuoZYi"},"content":"                    case INVALID:","lastModifiedDate":"2023-09-29"},{"lineNumber":170,"author":{"gitId":"LuoZYi"},"content":"                        ui.showMessage(\"I\u0027m sorry, I don\u0027t understand that command.\");","lastModifiedDate":"2023-09-29"},{"lineNumber":171,"author":{"gitId":"LuoZYi"},"content":"                }","lastModifiedDate":"2023-09-29"},{"lineNumber":172,"author":{"gitId":"LuoZYi"},"content":"                try {","lastModifiedDate":"2023-09-29"},{"lineNumber":173,"author":{"gitId":"LuoZYi"},"content":"                    storage.save(taskList.getTaskArrayList());","lastModifiedDate":"2023-09-29"},{"lineNumber":174,"author":{"gitId":"LuoZYi"},"content":"                } catch (CustomException e) {","lastModifiedDate":"2023-09-29"},{"lineNumber":175,"author":{"gitId":"LuoZYi"},"content":"                    System.out.println(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2023-09-29"},{"lineNumber":176,"author":{"gitId":"LuoZYi"},"content":"                }","lastModifiedDate":"2023-09-29"},{"lineNumber":177,"author":{"gitId":"LuoZYi"},"content":"            }","lastModifiedDate":"2023-09-29"},{"lineNumber":178,"author":{"gitId":"LuoZYi"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-29"},{"lineNumber":179,"author":{"gitId":"LuoZYi"},"content":"            try {","lastModifiedDate":"2023-09-29"},{"lineNumber":180,"author":{"gitId":"LuoZYi"},"content":"                storage.save(taskList.getTaskArrayList());","lastModifiedDate":"2023-09-29"},{"lineNumber":181,"author":{"gitId":"LuoZYi"},"content":"            } catch (CustomException customException) {","lastModifiedDate":"2023-09-29"},{"lineNumber":182,"author":{"gitId":"LuoZYi"},"content":"                System.out.println(\"Error saving tasks: \" + customException.getMessage());","lastModifiedDate":"2023-09-29"},{"lineNumber":183,"author":{"gitId":"LuoZYi"},"content":"            }","lastModifiedDate":"2023-09-29"},{"lineNumber":184,"author":{"gitId":"LuoZYi"},"content":"        }","lastModifiedDate":"2023-09-29"},{"lineNumber":185,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":186,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":187,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":188,"author":{"gitId":"LuoZYi"},"content":"     * Initializes the JavaFX graphical user interface (GUI) for Duke.","lastModifiedDate":"2023-09-29"},{"lineNumber":189,"author":{"gitId":"LuoZYi"},"content":"     * Sets up the chat interface, input field, and send button. It also configures the appearance of","lastModifiedDate":"2023-09-29"},{"lineNumber":190,"author":{"gitId":"LuoZYi"},"content":"     * the GUI window and sets event handlers for user interactions.","lastModifiedDate":"2023-09-29"},{"lineNumber":191,"author":{"gitId":"LuoZYi"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":192,"author":{"gitId":"LuoZYi"},"content":"     * @param stage The JavaFX stage where the GUI is displayed.","lastModifiedDate":"2023-09-29"},{"lineNumber":193,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":194,"author":{"gitId":"LuoZYi"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-29"},{"lineNumber":195,"author":{"gitId":"LuoZYi"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2023-09-29"},{"lineNumber":196,"author":{"gitId":"LuoZYi"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-09-29"},{"lineNumber":197,"author":{"gitId":"LuoZYi"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-09-29"},{"lineNumber":198,"author":{"gitId":"LuoZYi"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-09-29"},{"lineNumber":199,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":200,"author":{"gitId":"LuoZYi"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-09-29"},{"lineNumber":201,"author":{"gitId":"LuoZYi"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-09-29"},{"lineNumber":202,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":203,"author":{"gitId":"LuoZYi"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-09-29"},{"lineNumber":204,"author":{"gitId":"LuoZYi"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-09-29"},{"lineNumber":205,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":206,"author":{"gitId":"LuoZYi"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-09-29"},{"lineNumber":207,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":208,"author":{"gitId":"LuoZYi"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-09-29"},{"lineNumber":209,"author":{"gitId":"LuoZYi"},"content":"        stage.show();","lastModifiedDate":"2023-09-29"},{"lineNumber":210,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":211,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":212,"author":{"gitId":"LuoZYi"},"content":"        //Formatting the window to look as expected","lastModifiedDate":"2023-09-29"},{"lineNumber":213,"author":{"gitId":"LuoZYi"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2023-09-29"},{"lineNumber":214,"author":{"gitId":"LuoZYi"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-09-29"},{"lineNumber":215,"author":{"gitId":"LuoZYi"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-09-29"},{"lineNumber":216,"author":{"gitId":"LuoZYi"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-09-29"},{"lineNumber":217,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":218,"author":{"gitId":"LuoZYi"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-09-29"},{"lineNumber":219,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":220,"author":{"gitId":"LuoZYi"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-09-29"},{"lineNumber":221,"author":{"gitId":"LuoZYi"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-09-29"},{"lineNumber":222,"author":{"gitId":"LuoZYi"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-09-29"},{"lineNumber":223,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":224,"author":{"gitId":"LuoZYi"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-09-29"},{"lineNumber":225,"author":{"gitId":"LuoZYi"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-09-29"},{"lineNumber":226,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":227,"author":{"gitId":"LuoZYi"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-09-29"},{"lineNumber":228,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":229,"author":{"gitId":"LuoZYi"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-09-29"},{"lineNumber":230,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":231,"author":{"gitId":"LuoZYi"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-09-29"},{"lineNumber":232,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":233,"author":{"gitId":"LuoZYi"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-09-29"},{"lineNumber":234,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":235,"author":{"gitId":"LuoZYi"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-29"},{"lineNumber":236,"author":{"gitId":"LuoZYi"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-29"},{"lineNumber":237,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":238,"author":{"gitId":"LuoZYi"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-09-29"},{"lineNumber":239,"author":{"gitId":"LuoZYi"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-09-29"},{"lineNumber":240,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":241,"author":{"gitId":"LuoZYi"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-09-29"},{"lineNumber":242,"author":{"gitId":"LuoZYi"},"content":"            handleUserInput();","lastModifiedDate":"2023-09-29"},{"lineNumber":243,"author":{"gitId":"LuoZYi"},"content":"        });","lastModifiedDate":"2023-09-29"},{"lineNumber":244,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":245,"author":{"gitId":"LuoZYi"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-09-29"},{"lineNumber":246,"author":{"gitId":"LuoZYi"},"content":"            handleUserInput();","lastModifiedDate":"2023-09-29"},{"lineNumber":247,"author":{"gitId":"LuoZYi"},"content":"        });","lastModifiedDate":"2023-09-29"},{"lineNumber":248,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":249,"author":{"gitId":"LuoZYi"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-09-29"},{"lineNumber":250,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":251,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":252,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":253,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":254,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":255,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":256,"author":{"gitId":"LuoZYi"},"content":"     * Handles user input in the GUI.","lastModifiedDate":"2023-09-29"},{"lineNumber":257,"author":{"gitId":"LuoZYi"},"content":"     * This method processes user input, updates the chat interface with user and Duke\u0027s responses,","lastModifiedDate":"2023-09-29"},{"lineNumber":258,"author":{"gitId":"LuoZYi"},"content":"     * and clears the input field for the next user message.","lastModifiedDate":"2023-09-29"},{"lineNumber":259,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":260,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":261,"author":{"gitId":"LuoZYi"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-29"},{"lineNumber":262,"author":{"gitId":"LuoZYi"},"content":"        String userInputText \u003d userInput.getText();","lastModifiedDate":"2023-09-29"},{"lineNumber":263,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":264,"author":{"gitId":"LuoZYi"},"content":"        // Ensure userInputText is not null","lastModifiedDate":"2023-09-29"},{"lineNumber":265,"author":{"gitId":"LuoZYi"},"content":"        assert userInputText !\u003d null : \"User input text must not be null\";","lastModifiedDate":"2023-09-29"},{"lineNumber":266,"author":{"gitId":"LuoZYi"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-29"},{"lineNumber":267,"author":{"gitId":"LuoZYi"},"content":"                DialogBox.getUserDialog(userInputText, user),","lastModifiedDate":"2023-09-29"},{"lineNumber":268,"author":{"gitId":"LuoZYi"},"content":"                DialogBox.getDukeDialog(getResponse(userInputText), duke)","lastModifiedDate":"2023-09-29"},{"lineNumber":269,"author":{"gitId":"LuoZYi"},"content":"        );","lastModifiedDate":"2023-09-29"},{"lineNumber":270,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":271,"author":{"gitId":"LuoZYi"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-29"},{"lineNumber":272,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":273,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":274,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":275,"author":{"gitId":"LuoZYi"},"content":"     * Retrieves Duke\u0027s response for a given user input.","lastModifiedDate":"2023-09-29"},{"lineNumber":276,"author":{"gitId":"LuoZYi"},"content":"     * This method determines the type of user command, processes it, and generates a response.","lastModifiedDate":"2023-09-29"},{"lineNumber":277,"author":{"gitId":"LuoZYi"},"content":"     * It handles various commands such as listing tasks, marking tasks as done, adding tasks, and more.","lastModifiedDate":"2023-09-29"},{"lineNumber":278,"author":{"gitId":"LuoZYi"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":279,"author":{"gitId":"LuoZYi"},"content":"     * @param input The user\u0027s input command.","lastModifiedDate":"2023-09-29"},{"lineNumber":280,"author":{"gitId":"LuoZYi"},"content":"     * @return The response generated by Duke.","lastModifiedDate":"2023-09-29"},{"lineNumber":281,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":282,"author":{"gitId":"LuoZYi"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-29"},{"lineNumber":283,"author":{"gitId":"LuoZYi"},"content":"        Parser.CommandType commandType \u003d parser.parseCommandType(input);","lastModifiedDate":"2023-09-29"},{"lineNumber":284,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":285,"author":{"gitId":"LuoZYi"},"content":"        switch (commandType) {","lastModifiedDate":"2023-09-29"},{"lineNumber":286,"author":{"gitId":"LuoZYi"},"content":"            case BYE:","lastModifiedDate":"2023-09-29"},{"lineNumber":287,"author":{"gitId":"LuoZYi"},"content":"                try {","lastModifiedDate":"2023-09-29"},{"lineNumber":288,"author":{"gitId":"LuoZYi"},"content":"                    storage.save(taskList.getTaskArrayList());","lastModifiedDate":"2023-09-29"},{"lineNumber":289,"author":{"gitId":"LuoZYi"},"content":"                    return ui.exit();","lastModifiedDate":"2023-09-29"},{"lineNumber":290,"author":{"gitId":"LuoZYi"},"content":"                } catch (CustomException e) {","lastModifiedDate":"2023-09-29"},{"lineNumber":291,"author":{"gitId":"LuoZYi"},"content":"                    return \"Error saving tasks: \" + e.getMessage();","lastModifiedDate":"2023-09-29"},{"lineNumber":292,"author":{"gitId":"LuoZYi"},"content":"                }","lastModifiedDate":"2023-09-29"},{"lineNumber":293,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":294,"author":{"gitId":"LuoZYi"},"content":"            case LIST:","lastModifiedDate":"2023-09-29"},{"lineNumber":295,"author":{"gitId":"LuoZYi"},"content":"                return taskList.listTasks();","lastModifiedDate":"2023-09-29"},{"lineNumber":296,"author":{"gitId":"LuoZYi"},"content":"            case MARK:","lastModifiedDate":"2023-09-29"},{"lineNumber":297,"author":{"gitId":"LuoZYi"},"content":"                try {","lastModifiedDate":"2023-09-29"},{"lineNumber":298,"author":{"gitId":"LuoZYi"},"content":"                    int markId \u003d Integer.parseInt(input.substring(5).trim());","lastModifiedDate":"2023-09-29"},{"lineNumber":299,"author":{"gitId":"LuoZYi"},"content":"                    String markMessage \u003d taskList.markTaskAsDone(markId);","lastModifiedDate":"2023-09-29"},{"lineNumber":300,"author":{"gitId":"LuoZYi"},"content":"                    return markMessage;","lastModifiedDate":"2023-09-29"},{"lineNumber":301,"author":{"gitId":"LuoZYi"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-29"},{"lineNumber":302,"author":{"gitId":"LuoZYi"},"content":"                    return \"Invalid format. Key in an integer within range\";","lastModifiedDate":"2023-09-29"},{"lineNumber":303,"author":{"gitId":"LuoZYi"},"content":"                }","lastModifiedDate":"2023-09-29"},{"lineNumber":304,"author":{"gitId":"LuoZYi"},"content":"            case UNMARK:","lastModifiedDate":"2023-09-29"},{"lineNumber":305,"author":{"gitId":"LuoZYi"},"content":"                try {","lastModifiedDate":"2023-09-29"},{"lineNumber":306,"author":{"gitId":"LuoZYi"},"content":"                    int unmarkId \u003d Integer.parseInt(input.substring(7).trim());","lastModifiedDate":"2023-09-29"},{"lineNumber":307,"author":{"gitId":"LuoZYi"},"content":"                    String unmarkMessage \u003d taskList.unmarkTask(unmarkId);","lastModifiedDate":"2023-09-29"},{"lineNumber":308,"author":{"gitId":"LuoZYi"},"content":"                    return unmarkMessage;","lastModifiedDate":"2023-09-29"},{"lineNumber":309,"author":{"gitId":"LuoZYi"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-29"},{"lineNumber":310,"author":{"gitId":"LuoZYi"},"content":"                    return \"Invalid format. Key in an integer within range\";","lastModifiedDate":"2023-09-29"},{"lineNumber":311,"author":{"gitId":"LuoZYi"},"content":"                }","lastModifiedDate":"2023-09-29"},{"lineNumber":312,"author":{"gitId":"LuoZYi"},"content":"            case FIND:","lastModifiedDate":"2023-09-29"},{"lineNumber":313,"author":{"gitId":"LuoZYi"},"content":"                return taskList.findTasks(input.substring(5));","lastModifiedDate":"2023-09-29"},{"lineNumber":314,"author":{"gitId":"LuoZYi"},"content":"            case TODO:","lastModifiedDate":"2023-09-29"},{"lineNumber":315,"author":{"gitId":"LuoZYi"},"content":"                String todoDescription \u003d input.substring(5);","lastModifiedDate":"2023-09-29"},{"lineNumber":316,"author":{"gitId":"LuoZYi"},"content":"                Task toDo \u003d parser.addTodoTask(todoDescription);","lastModifiedDate":"2023-09-29"},{"lineNumber":317,"author":{"gitId":"LuoZYi"},"content":"                String todoMessage \u003d taskList.addTask(toDo);","lastModifiedDate":"2023-09-29"},{"lineNumber":318,"author":{"gitId":"LuoZYi"},"content":"                return todoMessage;","lastModifiedDate":"2023-09-29"},{"lineNumber":319,"author":{"gitId":"LuoZYi"},"content":"            case EVENT:","lastModifiedDate":"2023-09-29"},{"lineNumber":320,"author":{"gitId":"LuoZYi"},"content":"                String[] eventParts \u003d input.split(\"/from|/to\");","lastModifiedDate":"2023-09-29"},{"lineNumber":321,"author":{"gitId":"LuoZYi"},"content":"                if (eventParts.length \u003d\u003d 3) {","lastModifiedDate":"2023-09-29"},{"lineNumber":322,"author":{"gitId":"LuoZYi"},"content":"                    String eventDescription \u003d eventParts[0].substring(6).trim();","lastModifiedDate":"2023-09-29"},{"lineNumber":323,"author":{"gitId":"LuoZYi"},"content":"                    String from \u003d eventParts[1].trim();","lastModifiedDate":"2023-09-29"},{"lineNumber":324,"author":{"gitId":"LuoZYi"},"content":"                    String to \u003d eventParts[2].trim();","lastModifiedDate":"2023-09-29"},{"lineNumber":325,"author":{"gitId":"LuoZYi"},"content":"                    Task event \u003d parser.addEventTask(eventDescription, from, to);","lastModifiedDate":"2023-09-29"},{"lineNumber":326,"author":{"gitId":"LuoZYi"},"content":"                    String eventMessage \u003d taskList.addTask(event);","lastModifiedDate":"2023-09-29"},{"lineNumber":327,"author":{"gitId":"LuoZYi"},"content":"                    return eventMessage;","lastModifiedDate":"2023-09-29"},{"lineNumber":328,"author":{"gitId":"LuoZYi"},"content":"                } else {","lastModifiedDate":"2023-09-29"},{"lineNumber":329,"author":{"gitId":"LuoZYi"},"content":"                    return \"Invalid event format. Use \u0027event \u003cdescription\u003e /from \u003cdatetime\u003e /to \u003cdatetime\u003e\u0027.\";","lastModifiedDate":"2023-09-29"},{"lineNumber":330,"author":{"gitId":"LuoZYi"},"content":"                }","lastModifiedDate":"2023-09-29"},{"lineNumber":331,"author":{"gitId":"LuoZYi"},"content":"            case DEADLINE:","lastModifiedDate":"2023-09-29"},{"lineNumber":332,"author":{"gitId":"LuoZYi"},"content":"                String[] deadlineParts \u003d input.split(\"/by\", 2);","lastModifiedDate":"2023-09-29"},{"lineNumber":333,"author":{"gitId":"LuoZYi"},"content":"                if (deadlineParts.length \u003d\u003d 2) {","lastModifiedDate":"2023-09-29"},{"lineNumber":334,"author":{"gitId":"LuoZYi"},"content":"                    String deadlineDescription \u003d deadlineParts[0].substring(9).trim();","lastModifiedDate":"2023-09-29"},{"lineNumber":335,"author":{"gitId":"LuoZYi"},"content":"                    String dateTimeString \u003d deadlineParts[1].trim();","lastModifiedDate":"2023-09-29"},{"lineNumber":336,"author":{"gitId":"LuoZYi"},"content":"                    Task deadline \u003d parser.addDeadlineTask(deadlineDescription, dateTimeString);","lastModifiedDate":"2023-09-29"},{"lineNumber":337,"author":{"gitId":"LuoZYi"},"content":"                    String deadlineMessage \u003d taskList.addTask(deadline);","lastModifiedDate":"2023-09-29"},{"lineNumber":338,"author":{"gitId":"LuoZYi"},"content":"                    return deadlineMessage;","lastModifiedDate":"2023-09-29"},{"lineNumber":339,"author":{"gitId":"LuoZYi"},"content":"                } else {","lastModifiedDate":"2023-09-29"},{"lineNumber":340,"author":{"gitId":"LuoZYi"},"content":"                    return \"Invalid deadline format. Use \u0027deadline \u003cdescription\u003e /by \u003cdatetime\u003e\u0027.\";","lastModifiedDate":"2023-09-29"},{"lineNumber":341,"author":{"gitId":"LuoZYi"},"content":"                }","lastModifiedDate":"2023-09-29"},{"lineNumber":342,"author":{"gitId":"LuoZYi"},"content":"            case DELETE:","lastModifiedDate":"2023-09-29"},{"lineNumber":343,"author":{"gitId":"LuoZYi"},"content":"                try {","lastModifiedDate":"2023-09-29"},{"lineNumber":344,"author":{"gitId":"LuoZYi"},"content":"                    int deleteId \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2023-09-29"},{"lineNumber":345,"author":{"gitId":"LuoZYi"},"content":"                    String deleteMessage \u003d taskList.deleteTask(deleteId);","lastModifiedDate":"2023-09-29"},{"lineNumber":346,"author":{"gitId":"LuoZYi"},"content":"                    return deleteMessage;","lastModifiedDate":"2023-09-29"},{"lineNumber":347,"author":{"gitId":"LuoZYi"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-29"},{"lineNumber":348,"author":{"gitId":"LuoZYi"},"content":"                    return \"Invalid format. Key in an integer within range\";","lastModifiedDate":"2023-09-29"},{"lineNumber":349,"author":{"gitId":"LuoZYi"},"content":"                }","lastModifiedDate":"2023-09-29"},{"lineNumber":350,"author":{"gitId":"LuoZYi"},"content":"            case INVALID:","lastModifiedDate":"2023-09-29"},{"lineNumber":351,"author":{"gitId":"LuoZYi"},"content":"                return \"I\u0027m sorry, I don\u0027t understand that command.\";","lastModifiedDate":"2023-09-29"},{"lineNumber":352,"author":{"gitId":"LuoZYi"},"content":"            case HELP:","lastModifiedDate":"2023-09-29"},{"lineNumber":353,"author":{"gitId":"LuoZYi"},"content":"                return showHelp();","lastModifiedDate":"2023-09-29"},{"lineNumber":354,"author":{"gitId":"LuoZYi"},"content":"            default:","lastModifiedDate":"2023-09-29"},{"lineNumber":355,"author":{"gitId":"LuoZYi"},"content":"                return \"Unknown command.\";","lastModifiedDate":"2023-09-29"},{"lineNumber":356,"author":{"gitId":"LuoZYi"},"content":"        }","lastModifiedDate":"2023-09-29"},{"lineNumber":357,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":358,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":359,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":360,"author":{"gitId":"LuoZYi"},"content":"     * Exits the Duke chatbot and saves tasks before shutting down.","lastModifiedDate":"2023-09-29"},{"lineNumber":361,"author":{"gitId":"LuoZYi"},"content":"     * This method is called when the user enters the \"bye\" command. It saves the task list to a file","lastModifiedDate":"2023-09-29"},{"lineNumber":362,"author":{"gitId":"LuoZYi"},"content":"     * and exits the program gracefully.","lastModifiedDate":"2023-09-29"},{"lineNumber":363,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":364,"author":{"gitId":"LuoZYi"},"content":"    public void exit() {","lastModifiedDate":"2023-09-29"},{"lineNumber":365,"author":{"gitId":"LuoZYi"},"content":"        try {","lastModifiedDate":"2023-09-29"},{"lineNumber":366,"author":{"gitId":"LuoZYi"},"content":"            // Ensure storage and taskList are initialized","lastModifiedDate":"2023-09-29"},{"lineNumber":367,"author":{"gitId":"LuoZYi"},"content":"            assert storage !\u003d null : \"Storage must be initialized\";","lastModifiedDate":"2023-09-29"},{"lineNumber":368,"author":{"gitId":"LuoZYi"},"content":"            assert taskList !\u003d null : \"TaskList must be initialized\";","lastModifiedDate":"2023-09-29"},{"lineNumber":369,"author":{"gitId":"LuoZYi"},"content":"            storage.save(taskList.getTaskArrayList());","lastModifiedDate":"2023-09-29"},{"lineNumber":370,"author":{"gitId":"LuoZYi"},"content":"            chatBotResponse \u003d ui.exit();","lastModifiedDate":"2023-09-29"},{"lineNumber":371,"author":{"gitId":"LuoZYi"},"content":"        } catch (CustomException e) {","lastModifiedDate":"2023-09-29"},{"lineNumber":372,"author":{"gitId":"LuoZYi"},"content":"            chatBotResponse \u003d \"Error saving tasks: \" + e.getMessage();","lastModifiedDate":"2023-09-29"},{"lineNumber":373,"author":{"gitId":"LuoZYi"},"content":"        }","lastModifiedDate":"2023-09-29"},{"lineNumber":374,"author":{"gitId":"LuoZYi"},"content":"        System.exit(0);","lastModifiedDate":"2023-09-29"},{"lineNumber":375,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":376,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":377,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":378,"author":{"gitId":"LuoZYi"},"content":"     * Displays a help message explaining the available commands and their usage.","lastModifiedDate":"2023-09-29"},{"lineNumber":379,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":380,"author":{"gitId":"LuoZYi"},"content":"    public String showHelp() {","lastModifiedDate":"2023-09-29"},{"lineNumber":381,"author":{"gitId":"LuoZYi"},"content":"        StringBuilder helpMessage \u003d new StringBuilder();","lastModifiedDate":"2023-09-29"},{"lineNumber":382,"author":{"gitId":"LuoZYi"},"content":"        helpMessage.append(\"Welcome to Duke! Here are the available commands:\\n\");","lastModifiedDate":"2023-09-29"},{"lineNumber":383,"author":{"gitId":"LuoZYi"},"content":"        helpMessage.append(\"- \u0027bye\u0027: Exits the chatbot and saves the task list to a file.\\n\");","lastModifiedDate":"2023-09-29"},{"lineNumber":384,"author":{"gitId":"LuoZYi"},"content":"        helpMessage.append(\"- \u0027list\u0027: Lists all tasks in the current task list.\\n\");","lastModifiedDate":"2023-09-29"},{"lineNumber":385,"author":{"gitId":"LuoZYi"},"content":"        helpMessage.append(\"- \u0027mark \u003ctask_id\u003e\u0027: Marks a task as done by its ID.\\n\");","lastModifiedDate":"2023-09-29"},{"lineNumber":386,"author":{"gitId":"LuoZYi"},"content":"        helpMessage.append(\"- \u0027unmark \u003ctask_id\u003e\u0027: Unmarks a previously marked task.\\n\");","lastModifiedDate":"2023-09-29"},{"lineNumber":387,"author":{"gitId":"LuoZYi"},"content":"        helpMessage.append(\"- \u0027todo \u003cdescription\u003e\u0027: Adds a to-do task with a description.\\n\");","lastModifiedDate":"2023-09-29"},{"lineNumber":388,"author":{"gitId":"LuoZYi"},"content":"        helpMessage.append(\"- \u0027event \u003cdescription\u003e /from \u003cdatetime\u003e /to \u003cdatetime\u003e\u0027: Adds an event task with a description, start date, and end date.\\n\");","lastModifiedDate":"2023-09-29"},{"lineNumber":389,"author":{"gitId":"LuoZYi"},"content":"        helpMessage.append(\"- \u0027deadline \u003cdescription\u003e /by \u003cdatetime\u003e\u0027: Adds a deadline task with a description and due date.\\n\");","lastModifiedDate":"2023-09-29"},{"lineNumber":390,"author":{"gitId":"LuoZYi"},"content":"        helpMessage.append(\"- \u0027delete \u003ctask_id\u003e\u0027: Deletes a task by its ID.\\n\");","lastModifiedDate":"2023-09-29"},{"lineNumber":391,"author":{"gitId":"LuoZYi"},"content":"        helpMessage.append(\"- \u0027find \u003ckeyword\u003e\u0027: Searches for tasks containing the specified keyword.\\n\");","lastModifiedDate":"2023-09-29"},{"lineNumber":392,"author":{"gitId":"LuoZYi"},"content":"        helpMessage.append(\"To use a command, simply type it in the chat and press \u0027Send\u0027.\\n\");","lastModifiedDate":"2023-09-29"},{"lineNumber":393,"author":{"gitId":"LuoZYi"},"content":"        helpMessage.append(\"For example: \u0027todo Buy groceries\u0027 or \u0027mark 1\u0027.\\n\");","lastModifiedDate":"2023-09-29"},{"lineNumber":394,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":395,"author":{"gitId":"LuoZYi"},"content":"        return helpMessage.toString();","lastModifiedDate":"2023-09-29"},{"lineNumber":396,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":397,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":398,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":399,"author":{"gitId":"LuoZYi"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-29"},{"lineNumber":400,"author":{"gitId":"LuoZYi"},"content":"        Duke chatBot \u003d new Duke();","lastModifiedDate":"2023-09-29"},{"lineNumber":401,"author":{"gitId":"LuoZYi"},"content":"        chatBot.run();","lastModifiedDate":"2023-09-29"},{"lineNumber":402,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":403,"author":{"gitId":"LuoZYi"},"content":"}","lastModifiedDate":"2023-09-29"}],"authorContributionMap":{"LuoZYi":403}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LuoZYi"},"content":"package duke;","lastModifiedDate":"2023-09-29"},{"lineNumber":2,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":3,"author":{"gitId":"LuoZYi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-29"},{"lineNumber":4,"author":{"gitId":"LuoZYi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-29"},{"lineNumber":5,"author":{"gitId":"LuoZYi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-29"},{"lineNumber":6,"author":{"gitId":"LuoZYi"},"content":"import java.util.Locale;","lastModifiedDate":"2023-09-29"},{"lineNumber":7,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":8,"author":{"gitId":"LuoZYi"},"content":"/**","lastModifiedDate":"2023-09-29"},{"lineNumber":9,"author":{"gitId":"LuoZYi"},"content":" * Represents a task that has a start date and time and an end date and time, or just start and end dates.","lastModifiedDate":"2023-09-29"},{"lineNumber":10,"author":{"gitId":"LuoZYi"},"content":" * It extends the Task class and adds fields to store the event\u0027s timing information.","lastModifiedDate":"2023-09-29"},{"lineNumber":11,"author":{"gitId":"LuoZYi"},"content":" */","lastModifiedDate":"2023-09-29"},{"lineNumber":12,"author":{"gitId":"LuoZYi"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-29"},{"lineNumber":13,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":14,"author":{"gitId":"LuoZYi"},"content":"    protected LocalDateTime fromDateTime;","lastModifiedDate":"2023-09-29"},{"lineNumber":15,"author":{"gitId":"LuoZYi"},"content":"    protected LocalDate fromDate;","lastModifiedDate":"2023-09-29"},{"lineNumber":16,"author":{"gitId":"LuoZYi"},"content":"    protected LocalDateTime toDateTime;","lastModifiedDate":"2023-09-29"},{"lineNumber":17,"author":{"gitId":"LuoZYi"},"content":"    protected LocalDate toDate;","lastModifiedDate":"2023-09-29"},{"lineNumber":18,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":19,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":20,"author":{"gitId":"LuoZYi"},"content":"     * Constructs an Event task with a description and specific start and end date and time.","lastModifiedDate":"2023-09-29"},{"lineNumber":21,"author":{"gitId":"LuoZYi"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":22,"author":{"gitId":"LuoZYi"},"content":"     * @param description  The description of the Event task.","lastModifiedDate":"2023-09-29"},{"lineNumber":23,"author":{"gitId":"LuoZYi"},"content":"     * @param fromDateTime The LocalDateTime representing the event\u0027s start date and time.","lastModifiedDate":"2023-09-29"},{"lineNumber":24,"author":{"gitId":"LuoZYi"},"content":"     * @param toDateTime   The LocalDateTime representing the event\u0027s end date and time.","lastModifiedDate":"2023-09-29"},{"lineNumber":25,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":26,"author":{"gitId":"LuoZYi"},"content":"    public Event(String description, LocalDateTime fromDateTime, LocalDateTime toDateTime) {","lastModifiedDate":"2023-09-29"},{"lineNumber":27,"author":{"gitId":"LuoZYi"},"content":"        super(description);","lastModifiedDate":"2023-09-29"},{"lineNumber":28,"author":{"gitId":"LuoZYi"},"content":"        this.fromDateTime \u003d fromDateTime;","lastModifiedDate":"2023-09-29"},{"lineNumber":29,"author":{"gitId":"LuoZYi"},"content":"        this.toDateTime \u003d toDateTime;","lastModifiedDate":"2023-09-29"},{"lineNumber":30,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":31,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":32,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":33,"author":{"gitId":"LuoZYi"},"content":"     * Constructs an Event task with a description and specific start and end dates.","lastModifiedDate":"2023-09-29"},{"lineNumber":34,"author":{"gitId":"LuoZYi"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":35,"author":{"gitId":"LuoZYi"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2023-09-29"},{"lineNumber":36,"author":{"gitId":"LuoZYi"},"content":"     * @param fromDate    The LocalDate representing the event\u0027s start date.","lastModifiedDate":"2023-09-29"},{"lineNumber":37,"author":{"gitId":"LuoZYi"},"content":"     * @param toDate      The LocalDate representing the event\u0027s end date.","lastModifiedDate":"2023-09-29"},{"lineNumber":38,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":39,"author":{"gitId":"LuoZYi"},"content":"    public Event(String description, LocalDate fromDate, LocalDate toDate) {","lastModifiedDate":"2023-09-29"},{"lineNumber":40,"author":{"gitId":"LuoZYi"},"content":"        super(description);","lastModifiedDate":"2023-09-29"},{"lineNumber":41,"author":{"gitId":"LuoZYi"},"content":"        this.fromDate \u003d fromDate;","lastModifiedDate":"2023-09-29"},{"lineNumber":42,"author":{"gitId":"LuoZYi"},"content":"        this.toDate \u003d toDate;","lastModifiedDate":"2023-09-29"},{"lineNumber":43,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":44,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":45,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":46,"author":{"gitId":"LuoZYi"},"content":"     * Returns a string representation of the Event task, including its status icon, description, and event timing.","lastModifiedDate":"2023-09-29"},{"lineNumber":47,"author":{"gitId":"LuoZYi"},"content":"     * The date and time format used is \"MMM dd yyyy HH:mm\" (e.g., \"Jan 01 2023 14:30\") for LocalDateTime","lastModifiedDate":"2023-09-29"},{"lineNumber":48,"author":{"gitId":"LuoZYi"},"content":"     * and \"MMM dd yyyy\" (e.g., \"Jan 01 2023\") for LocalDate, with the English locale.","lastModifiedDate":"2023-09-29"},{"lineNumber":49,"author":{"gitId":"LuoZYi"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":50,"author":{"gitId":"LuoZYi"},"content":"     * @return A formatted string representing the Event task.","lastModifiedDate":"2023-09-29"},{"lineNumber":51,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":52,"author":{"gitId":"LuoZYi"},"content":"    @Override","lastModifiedDate":"2023-09-29"},{"lineNumber":53,"author":{"gitId":"LuoZYi"},"content":"    public String toString() {","lastModifiedDate":"2023-09-29"},{"lineNumber":54,"author":{"gitId":"LuoZYi"},"content":"        String status \u003d \"[\" + getStatusIcon() + \"] \";","lastModifiedDate":"2023-09-29"},{"lineNumber":55,"author":{"gitId":"LuoZYi"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\", Locale.ENGLISH);","lastModifiedDate":"2023-09-29"},{"lineNumber":56,"author":{"gitId":"LuoZYi"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\", Locale.ENGLISH);","lastModifiedDate":"2023-09-29"},{"lineNumber":57,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":58,"author":{"gitId":"LuoZYi"},"content":"        if (fromDateTime !\u003d null \u0026\u0026 toDateTime !\u003d null) {","lastModifiedDate":"2023-09-29"},{"lineNumber":59,"author":{"gitId":"LuoZYi"},"content":"            return \" \" + \"[E]\" + status + description +","lastModifiedDate":"2023-09-29"},{"lineNumber":60,"author":{"gitId":"LuoZYi"},"content":"                    \" (from: \" + fromDateTime.format(formatter) +","lastModifiedDate":"2023-09-29"},{"lineNumber":61,"author":{"gitId":"LuoZYi"},"content":"                    \" to: \" + toDateTime.format(formatter) + \")\";","lastModifiedDate":"2023-09-29"},{"lineNumber":62,"author":{"gitId":"LuoZYi"},"content":"        } else {","lastModifiedDate":"2023-09-29"},{"lineNumber":63,"author":{"gitId":"LuoZYi"},"content":"            return \" \" + \"[E]\" + status + description +","lastModifiedDate":"2023-09-29"},{"lineNumber":64,"author":{"gitId":"LuoZYi"},"content":"                    \" (from: \" + fromDate.format(dateTimeFormatter) +","lastModifiedDate":"2023-09-29"},{"lineNumber":65,"author":{"gitId":"LuoZYi"},"content":"                    \" to: \" + toDate.format(dateTimeFormatter) + \")\";","lastModifiedDate":"2023-09-29"},{"lineNumber":66,"author":{"gitId":"LuoZYi"},"content":"        }","lastModifiedDate":"2023-09-29"},{"lineNumber":67,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":68,"author":{"gitId":"LuoZYi"},"content":"}","lastModifiedDate":"2023-09-29"},{"lineNumber":69,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"}],"authorContributionMap":{"LuoZYi":69}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LuoZYi"},"content":"package duke;","lastModifiedDate":"2023-09-29"},{"lineNumber":2,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":3,"author":{"gitId":"LuoZYi"},"content":"import GUI.Main;","lastModifiedDate":"2023-09-29"},{"lineNumber":4,"author":{"gitId":"LuoZYi"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-29"},{"lineNumber":5,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":6,"author":{"gitId":"LuoZYi"},"content":"/**","lastModifiedDate":"2023-09-29"},{"lineNumber":7,"author":{"gitId":"LuoZYi"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-29"},{"lineNumber":8,"author":{"gitId":"LuoZYi"},"content":" */","lastModifiedDate":"2023-09-29"},{"lineNumber":9,"author":{"gitId":"LuoZYi"},"content":"public class Launcher {","lastModifiedDate":"2023-09-29"},{"lineNumber":10,"author":{"gitId":"LuoZYi"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-29"},{"lineNumber":11,"author":{"gitId":"LuoZYi"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-29"},{"lineNumber":12,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":13,"author":{"gitId":"LuoZYi"},"content":"}","lastModifiedDate":"2023-09-29"}],"authorContributionMap":{"LuoZYi":13}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LuoZYi"},"content":"package duke;","lastModifiedDate":"2023-09-29"},{"lineNumber":2,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":3,"author":{"gitId":"LuoZYi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-29"},{"lineNumber":4,"author":{"gitId":"LuoZYi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-29"},{"lineNumber":5,"author":{"gitId":"LuoZYi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-29"},{"lineNumber":6,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":7,"author":{"gitId":"LuoZYi"},"content":"/**","lastModifiedDate":"2023-09-29"},{"lineNumber":8,"author":{"gitId":"LuoZYi"},"content":" * The Parser class provides methods for parsing user input and converting date/time strings into","lastModifiedDate":"2023-09-29"},{"lineNumber":9,"author":{"gitId":"LuoZYi"},"content":" * LocalDateTime or LocalDate objects. It also has methods for creating different types of tasks","lastModifiedDate":"2023-09-29"},{"lineNumber":10,"author":{"gitId":"LuoZYi"},"content":" * based on user input.","lastModifiedDate":"2023-09-29"},{"lineNumber":11,"author":{"gitId":"LuoZYi"},"content":" */","lastModifiedDate":"2023-09-29"},{"lineNumber":12,"author":{"gitId":"LuoZYi"},"content":"public class Parser {","lastModifiedDate":"2023-09-29"},{"lineNumber":13,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":14,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":15,"author":{"gitId":"LuoZYi"},"content":"     * Enum representing the types of commands that the parser can recognize.","lastModifiedDate":"2023-09-29"},{"lineNumber":16,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":17,"author":{"gitId":"LuoZYi"},"content":"    public enum CommandType {","lastModifiedDate":"2023-09-29"},{"lineNumber":18,"author":{"gitId":"LuoZYi"},"content":"        BYE, LIST, MARK, UNMARK, FIND, TODO, EVENT, DEADLINE, DELETE, HELP, INVALID","lastModifiedDate":"2023-09-29"},{"lineNumber":19,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":20,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":21,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":22,"author":{"gitId":"LuoZYi"},"content":"     * Parses a user command to determine its CommandType.","lastModifiedDate":"2023-09-29"},{"lineNumber":23,"author":{"gitId":"LuoZYi"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":24,"author":{"gitId":"LuoZYi"},"content":"     * @param command The user command to be parsed.","lastModifiedDate":"2023-09-29"},{"lineNumber":25,"author":{"gitId":"LuoZYi"},"content":"     * @return The CommandType representing the parsed command.","lastModifiedDate":"2023-09-29"},{"lineNumber":26,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":27,"author":{"gitId":"LuoZYi"},"content":"    public CommandType parseCommandType(String command) {","lastModifiedDate":"2023-09-29"},{"lineNumber":28,"author":{"gitId":"LuoZYi"},"content":"        if (command.equals(\"bye\")) {","lastModifiedDate":"2023-09-29"},{"lineNumber":29,"author":{"gitId":"LuoZYi"},"content":"            return CommandType.BYE;","lastModifiedDate":"2023-09-29"},{"lineNumber":30,"author":{"gitId":"LuoZYi"},"content":"        } else if (command.equals(\"list\")) {","lastModifiedDate":"2023-09-29"},{"lineNumber":31,"author":{"gitId":"LuoZYi"},"content":"            return CommandType.LIST;","lastModifiedDate":"2023-09-29"},{"lineNumber":32,"author":{"gitId":"LuoZYi"},"content":"        } else if (command.startsWith(\"mark \")) {","lastModifiedDate":"2023-09-29"},{"lineNumber":33,"author":{"gitId":"LuoZYi"},"content":"            return CommandType.MARK;","lastModifiedDate":"2023-09-29"},{"lineNumber":34,"author":{"gitId":"LuoZYi"},"content":"        } else if (command.startsWith(\"unmark \")) {","lastModifiedDate":"2023-09-29"},{"lineNumber":35,"author":{"gitId":"LuoZYi"},"content":"            return CommandType.UNMARK;","lastModifiedDate":"2023-09-29"},{"lineNumber":36,"author":{"gitId":"LuoZYi"},"content":"        } else if(command.startsWith(\"find\")) {","lastModifiedDate":"2023-09-29"},{"lineNumber":37,"author":{"gitId":"LuoZYi"},"content":"            return CommandType.FIND;","lastModifiedDate":"2023-09-29"},{"lineNumber":38,"author":{"gitId":"LuoZYi"},"content":"        } else if (command.startsWith(\"todo \")) {","lastModifiedDate":"2023-09-29"},{"lineNumber":39,"author":{"gitId":"LuoZYi"},"content":"            return CommandType.TODO;","lastModifiedDate":"2023-09-29"},{"lineNumber":40,"author":{"gitId":"LuoZYi"},"content":"        } else if (command.startsWith(\"event \")) {","lastModifiedDate":"2023-09-29"},{"lineNumber":41,"author":{"gitId":"LuoZYi"},"content":"            return CommandType.EVENT;","lastModifiedDate":"2023-09-29"},{"lineNumber":42,"author":{"gitId":"LuoZYi"},"content":"        } else if (command.startsWith(\"deadline \")) {","lastModifiedDate":"2023-09-29"},{"lineNumber":43,"author":{"gitId":"LuoZYi"},"content":"            return CommandType.DEADLINE;","lastModifiedDate":"2023-09-29"},{"lineNumber":44,"author":{"gitId":"LuoZYi"},"content":"        } else if (command.startsWith(\"delete \")) {","lastModifiedDate":"2023-09-29"},{"lineNumber":45,"author":{"gitId":"LuoZYi"},"content":"            return CommandType.DELETE;","lastModifiedDate":"2023-09-29"},{"lineNumber":46,"author":{"gitId":"LuoZYi"},"content":"        } else if (command.startsWith(\"help\")) {","lastModifiedDate":"2023-09-29"},{"lineNumber":47,"author":{"gitId":"LuoZYi"},"content":"            return CommandType.HELP;","lastModifiedDate":"2023-09-29"},{"lineNumber":48,"author":{"gitId":"LuoZYi"},"content":"        }else {","lastModifiedDate":"2023-09-29"},{"lineNumber":49,"author":{"gitId":"LuoZYi"},"content":"            return CommandType.INVALID;","lastModifiedDate":"2023-09-29"},{"lineNumber":50,"author":{"gitId":"LuoZYi"},"content":"        }","lastModifiedDate":"2023-09-29"},{"lineNumber":51,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":52,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":53,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":54,"author":{"gitId":"LuoZYi"},"content":"     * Parses a date/time string and converts it into a LocalDateTime object. Supports two date/time formats.","lastModifiedDate":"2023-09-29"},{"lineNumber":55,"author":{"gitId":"LuoZYi"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":56,"author":{"gitId":"LuoZYi"},"content":"     * @param dateTimeString The date/time string to be parsed.","lastModifiedDate":"2023-09-29"},{"lineNumber":57,"author":{"gitId":"LuoZYi"},"content":"     * @return The LocalDateTime object representing the parsed date/time, or null if parsing fails.","lastModifiedDate":"2023-09-29"},{"lineNumber":58,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":59,"author":{"gitId":"LuoZYi"},"content":"    public LocalDateTime parseCustomDateTime(String dateTimeString) {","lastModifiedDate":"2023-09-29"},{"lineNumber":60,"author":{"gitId":"LuoZYi"},"content":"        // Try parsing with \"dd/MM/yyyy HHmm\" format","lastModifiedDate":"2023-09-29"},{"lineNumber":61,"author":{"gitId":"LuoZYi"},"content":"        DateTimeFormatter formatter1 \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-09-29"},{"lineNumber":62,"author":{"gitId":"LuoZYi"},"content":"        try {","lastModifiedDate":"2023-09-29"},{"lineNumber":63,"author":{"gitId":"LuoZYi"},"content":"            return LocalDateTime.parse(dateTimeString, formatter1);","lastModifiedDate":"2023-09-29"},{"lineNumber":64,"author":{"gitId":"LuoZYi"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-29"},{"lineNumber":65,"author":{"gitId":"LuoZYi"},"content":"            // Parsing with the first format failed, try the second format below","lastModifiedDate":"2023-09-29"},{"lineNumber":66,"author":{"gitId":"LuoZYi"},"content":"        }","lastModifiedDate":"2023-09-29"},{"lineNumber":67,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":68,"author":{"gitId":"LuoZYi"},"content":"        // Try parsing with \"yyyy-MM-dd\" format","lastModifiedDate":"2023-09-29"},{"lineNumber":69,"author":{"gitId":"LuoZYi"},"content":"        DateTimeFormatter formatter2 \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-09-29"},{"lineNumber":70,"author":{"gitId":"LuoZYi"},"content":"        try {","lastModifiedDate":"2023-09-29"},{"lineNumber":71,"author":{"gitId":"LuoZYi"},"content":"            LocalDate date \u003d LocalDate.parse(dateTimeString, formatter2);","lastModifiedDate":"2023-09-29"},{"lineNumber":72,"author":{"gitId":"LuoZYi"},"content":"            return date.atStartOfDay();","lastModifiedDate":"2023-09-29"},{"lineNumber":73,"author":{"gitId":"LuoZYi"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-29"},{"lineNumber":74,"author":{"gitId":"LuoZYi"},"content":"            // Both parsing attempts failed","lastModifiedDate":"2023-09-29"},{"lineNumber":75,"author":{"gitId":"LuoZYi"},"content":"            return null;","lastModifiedDate":"2023-09-29"},{"lineNumber":76,"author":{"gitId":"LuoZYi"},"content":"        }","lastModifiedDate":"2023-09-29"},{"lineNumber":77,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":78,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":79,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":80,"author":{"gitId":"LuoZYi"},"content":"     * Parses a date string and converts it into a LocalDate object. Supports two date formats.","lastModifiedDate":"2023-09-29"},{"lineNumber":81,"author":{"gitId":"LuoZYi"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":82,"author":{"gitId":"LuoZYi"},"content":"     * @param dateString The date string to be parsed.","lastModifiedDate":"2023-09-29"},{"lineNumber":83,"author":{"gitId":"LuoZYi"},"content":"     * @return The LocalDate object representing the parsed date, or null if parsing fails.","lastModifiedDate":"2023-09-29"},{"lineNumber":84,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":85,"author":{"gitId":"LuoZYi"},"content":"    public LocalDate parseCustomDate(String dateString) {","lastModifiedDate":"2023-09-29"},{"lineNumber":86,"author":{"gitId":"LuoZYi"},"content":"        // Try parsing with \"dd/MM/yyyy\" format","lastModifiedDate":"2023-09-29"},{"lineNumber":87,"author":{"gitId":"LuoZYi"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-09-29"},{"lineNumber":88,"author":{"gitId":"LuoZYi"},"content":"        try {","lastModifiedDate":"2023-09-29"},{"lineNumber":89,"author":{"gitId":"LuoZYi"},"content":"            return LocalDate.parse(dateString, formatter);","lastModifiedDate":"2023-09-29"},{"lineNumber":90,"author":{"gitId":"LuoZYi"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-29"},{"lineNumber":91,"author":{"gitId":"LuoZYi"},"content":"            // Parsing with the first format failed, try the second format below","lastModifiedDate":"2023-09-29"},{"lineNumber":92,"author":{"gitId":"LuoZYi"},"content":"        }","lastModifiedDate":"2023-09-29"},{"lineNumber":93,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":94,"author":{"gitId":"LuoZYi"},"content":"        // Try parsing with \"yyyy-MM-dd\" format","lastModifiedDate":"2023-09-29"},{"lineNumber":95,"author":{"gitId":"LuoZYi"},"content":"        DateTimeFormatter formatter2 \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-09-29"},{"lineNumber":96,"author":{"gitId":"LuoZYi"},"content":"        try {","lastModifiedDate":"2023-09-29"},{"lineNumber":97,"author":{"gitId":"LuoZYi"},"content":"            return LocalDate.parse(dateString, formatter2);","lastModifiedDate":"2023-09-29"},{"lineNumber":98,"author":{"gitId":"LuoZYi"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-29"},{"lineNumber":99,"author":{"gitId":"LuoZYi"},"content":"            // Both parsing attempts failed","lastModifiedDate":"2023-09-29"},{"lineNumber":100,"author":{"gitId":"LuoZYi"},"content":"            return null;","lastModifiedDate":"2023-09-29"},{"lineNumber":101,"author":{"gitId":"LuoZYi"},"content":"        }","lastModifiedDate":"2023-09-29"},{"lineNumber":102,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":103,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":104,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":105,"author":{"gitId":"LuoZYi"},"content":"     * Creates a Deadline task based on a description and a date/time string.","lastModifiedDate":"2023-09-29"},{"lineNumber":106,"author":{"gitId":"LuoZYi"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":107,"author":{"gitId":"LuoZYi"},"content":"     * @param description    The description of the Deadline task.","lastModifiedDate":"2023-09-29"},{"lineNumber":108,"author":{"gitId":"LuoZYi"},"content":"     * @param dateTimeString The date/time string for the task\u0027s deadline.","lastModifiedDate":"2023-09-29"},{"lineNumber":109,"author":{"gitId":"LuoZYi"},"content":"     * @return The created Deadline task or null if parsing fails.","lastModifiedDate":"2023-09-29"},{"lineNumber":110,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":111,"author":{"gitId":"LuoZYi"},"content":"    public Deadline addDeadlineTask(String description, String dateTimeString) {","lastModifiedDate":"2023-09-29"},{"lineNumber":112,"author":{"gitId":"LuoZYi"},"content":"        LocalDateTime dateTime \u003d parseCustomDateTime(dateTimeString);","lastModifiedDate":"2023-09-29"},{"lineNumber":113,"author":{"gitId":"LuoZYi"},"content":"        LocalDate date \u003d parseCustomDate(dateTimeString);","lastModifiedDate":"2023-09-29"},{"lineNumber":114,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":115,"author":{"gitId":"LuoZYi"},"content":"        if (dateTime !\u003d null || date !\u003d null) {","lastModifiedDate":"2023-09-29"},{"lineNumber":116,"author":{"gitId":"LuoZYi"},"content":"            if (dateTime !\u003d null) {","lastModifiedDate":"2023-09-29"},{"lineNumber":117,"author":{"gitId":"LuoZYi"},"content":"                return new Deadline(description, dateTime);","lastModifiedDate":"2023-09-29"},{"lineNumber":118,"author":{"gitId":"LuoZYi"},"content":"            } else {","lastModifiedDate":"2023-09-29"},{"lineNumber":119,"author":{"gitId":"LuoZYi"},"content":"                return new Deadline(description, date);","lastModifiedDate":"2023-09-29"},{"lineNumber":120,"author":{"gitId":"LuoZYi"},"content":"            }","lastModifiedDate":"2023-09-29"},{"lineNumber":121,"author":{"gitId":"LuoZYi"},"content":"        }","lastModifiedDate":"2023-09-29"},{"lineNumber":122,"author":{"gitId":"LuoZYi"},"content":"        return null;","lastModifiedDate":"2023-09-29"},{"lineNumber":123,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":124,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":125,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":126,"author":{"gitId":"LuoZYi"},"content":"     * Creates an Event task based on a description and two date/time strings for start and end times.","lastModifiedDate":"2023-09-29"},{"lineNumber":127,"author":{"gitId":"LuoZYi"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":128,"author":{"gitId":"LuoZYi"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2023-09-29"},{"lineNumber":129,"author":{"gitId":"LuoZYi"},"content":"     * @param from        The date/time string for the event\u0027s start time.","lastModifiedDate":"2023-09-29"},{"lineNumber":130,"author":{"gitId":"LuoZYi"},"content":"     * @param to          The date/time string for the event\u0027s end time.","lastModifiedDate":"2023-09-29"},{"lineNumber":131,"author":{"gitId":"LuoZYi"},"content":"     * @return The created Event task or null if parsing fails.","lastModifiedDate":"2023-09-29"},{"lineNumber":132,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":133,"author":{"gitId":"LuoZYi"},"content":"    public Event addEventTask(String description, String from, String to) {","lastModifiedDate":"2023-09-29"},{"lineNumber":134,"author":{"gitId":"LuoZYi"},"content":"        LocalDateTime fromDateTime \u003d parseCustomDateTime(from);","lastModifiedDate":"2023-09-29"},{"lineNumber":135,"author":{"gitId":"LuoZYi"},"content":"        LocalDate fromDate \u003d parseCustomDate(from);","lastModifiedDate":"2023-09-29"},{"lineNumber":136,"author":{"gitId":"LuoZYi"},"content":"        LocalDateTime toDateTime \u003d parseCustomDateTime(to);","lastModifiedDate":"2023-09-29"},{"lineNumber":137,"author":{"gitId":"LuoZYi"},"content":"        LocalDate toDate \u003d parseCustomDate(to);","lastModifiedDate":"2023-09-29"},{"lineNumber":138,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":139,"author":{"gitId":"LuoZYi"},"content":"        if ((fromDateTime !\u003d null \u0026\u0026 toDateTime !\u003d null) || (fromDate !\u003d null \u0026\u0026 toDate !\u003d null)) {","lastModifiedDate":"2023-09-29"},{"lineNumber":140,"author":{"gitId":"LuoZYi"},"content":"            Event event;","lastModifiedDate":"2023-09-29"},{"lineNumber":141,"author":{"gitId":"LuoZYi"},"content":"            if (fromDateTime !\u003d null \u0026\u0026 toDateTime !\u003d null) {","lastModifiedDate":"2023-09-29"},{"lineNumber":142,"author":{"gitId":"LuoZYi"},"content":"                event \u003d new Event(description, fromDateTime, toDateTime);","lastModifiedDate":"2023-09-29"},{"lineNumber":143,"author":{"gitId":"LuoZYi"},"content":"            } else {","lastModifiedDate":"2023-09-29"},{"lineNumber":144,"author":{"gitId":"LuoZYi"},"content":"                event \u003d new Event(description, fromDate, toDate);","lastModifiedDate":"2023-09-29"},{"lineNumber":145,"author":{"gitId":"LuoZYi"},"content":"            }","lastModifiedDate":"2023-09-29"},{"lineNumber":146,"author":{"gitId":"LuoZYi"},"content":"            return event;","lastModifiedDate":"2023-09-29"},{"lineNumber":147,"author":{"gitId":"LuoZYi"},"content":"        }","lastModifiedDate":"2023-09-29"},{"lineNumber":148,"author":{"gitId":"LuoZYi"},"content":"        return null;","lastModifiedDate":"2023-09-29"},{"lineNumber":149,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":150,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":151,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":152,"author":{"gitId":"LuoZYi"},"content":"     * Creates a ToDo task based on a description.","lastModifiedDate":"2023-09-29"},{"lineNumber":153,"author":{"gitId":"LuoZYi"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":154,"author":{"gitId":"LuoZYi"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2023-09-29"},{"lineNumber":155,"author":{"gitId":"LuoZYi"},"content":"     * @return The created ToDo task.","lastModifiedDate":"2023-09-29"},{"lineNumber":156,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":157,"author":{"gitId":"LuoZYi"},"content":"    public ToDo addTodoTask(String description) {","lastModifiedDate":"2023-09-29"},{"lineNumber":158,"author":{"gitId":"LuoZYi"},"content":"        return new ToDo(description);","lastModifiedDate":"2023-09-29"},{"lineNumber":159,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":160,"author":{"gitId":"LuoZYi"},"content":"}","lastModifiedDate":"2023-09-29"}],"authorContributionMap":{"LuoZYi":160}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LuoZYi"},"content":"package duke;","lastModifiedDate":"2023-09-29"},{"lineNumber":2,"author":{"gitId":"LuoZYi"},"content":"import java.io.*;","lastModifiedDate":"2023-09-29"},{"lineNumber":3,"author":{"gitId":"LuoZYi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-29"},{"lineNumber":4,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":5,"author":{"gitId":"LuoZYi"},"content":"/**","lastModifiedDate":"2023-09-29"},{"lineNumber":6,"author":{"gitId":"LuoZYi"},"content":" * The Storage class handles the loading and saving of tasks to a file. It provides methods to load tasks from","lastModifiedDate":"2023-09-29"},{"lineNumber":7,"author":{"gitId":"LuoZYi"},"content":" * a specified file and save tasks to that file.","lastModifiedDate":"2023-09-29"},{"lineNumber":8,"author":{"gitId":"LuoZYi"},"content":" */","lastModifiedDate":"2023-09-29"},{"lineNumber":9,"author":{"gitId":"LuoZYi"},"content":"public class Storage {","lastModifiedDate":"2023-09-29"},{"lineNumber":10,"author":{"gitId":"LuoZYi"},"content":"    private String filePath;","lastModifiedDate":"2023-09-29"},{"lineNumber":11,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":12,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":13,"author":{"gitId":"LuoZYi"},"content":"     * Constructs a new Storage object with the specified file path.","lastModifiedDate":"2023-09-29"},{"lineNumber":14,"author":{"gitId":"LuoZYi"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":15,"author":{"gitId":"LuoZYi"},"content":"     * @param filePath The path to the file where tasks are stored.","lastModifiedDate":"2023-09-29"},{"lineNumber":16,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":17,"author":{"gitId":"LuoZYi"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-29"},{"lineNumber":18,"author":{"gitId":"LuoZYi"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-29"},{"lineNumber":19,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":20,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":21,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":22,"author":{"gitId":"LuoZYi"},"content":"     * Loads tasks from the specified file.","lastModifiedDate":"2023-09-29"},{"lineNumber":23,"author":{"gitId":"LuoZYi"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":24,"author":{"gitId":"LuoZYi"},"content":"     * @return An ArrayList of tasks loaded from the file. If the file doesn\u0027t exist or an error occurs during","lastModifiedDate":"2023-09-29"},{"lineNumber":25,"author":{"gitId":"LuoZYi"},"content":"     *         loading, an empty ArrayList is returned.","lastModifiedDate":"2023-09-29"},{"lineNumber":26,"author":{"gitId":"LuoZYi"},"content":"     * @throws CustomException If an error occurs during loading, including I/O errors or corrupted files.","lastModifiedDate":"2023-09-29"},{"lineNumber":27,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":28,"author":{"gitId":"LuoZYi"},"content":"    public ArrayList\u003cTask\u003e load() throws CustomException {","lastModifiedDate":"2023-09-29"},{"lineNumber":29,"author":{"gitId":"LuoZYi"},"content":"        ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-29"},{"lineNumber":30,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":31,"author":{"gitId":"LuoZYi"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-09-29"},{"lineNumber":32,"author":{"gitId":"LuoZYi"},"content":"        if (file.exists()) {","lastModifiedDate":"2023-09-29"},{"lineNumber":33,"author":{"gitId":"LuoZYi"},"content":"            try (FileInputStream fis \u003d new FileInputStream(file);","lastModifiedDate":"2023-09-29"},{"lineNumber":34,"author":{"gitId":"LuoZYi"},"content":"                 ObjectInputStream ois \u003d new ObjectInputStream(fis)) {","lastModifiedDate":"2023-09-29"},{"lineNumber":35,"author":{"gitId":"LuoZYi"},"content":"                // Read the taskArrayList from the file","lastModifiedDate":"2023-09-29"},{"lineNumber":36,"author":{"gitId":"LuoZYi"},"content":"                tasks \u003d (ArrayList\u003cTask\u003e) ois.readObject();","lastModifiedDate":"2023-09-29"},{"lineNumber":37,"author":{"gitId":"LuoZYi"},"content":"            } catch (IOException | ClassNotFoundException e) {","lastModifiedDate":"2023-09-29"},{"lineNumber":38,"author":{"gitId":"LuoZYi"},"content":"                // Handle exceptions, e.g., if the file is corrupted","lastModifiedDate":"2023-09-29"},{"lineNumber":39,"author":{"gitId":"LuoZYi"},"content":"                tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-29"},{"lineNumber":40,"author":{"gitId":"LuoZYi"},"content":"            }","lastModifiedDate":"2023-09-29"},{"lineNumber":41,"author":{"gitId":"LuoZYi"},"content":"        } else {","lastModifiedDate":"2023-09-29"},{"lineNumber":42,"author":{"gitId":"LuoZYi"},"content":"            tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-29"},{"lineNumber":43,"author":{"gitId":"LuoZYi"},"content":"        }","lastModifiedDate":"2023-09-29"},{"lineNumber":44,"author":{"gitId":"LuoZYi"},"content":"        return tasks;","lastModifiedDate":"2023-09-29"},{"lineNumber":45,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":46,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":47,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":48,"author":{"gitId":"LuoZYi"},"content":"     * Saves the provided ArrayList of tasks to the specified file.","lastModifiedDate":"2023-09-29"},{"lineNumber":49,"author":{"gitId":"LuoZYi"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":50,"author":{"gitId":"LuoZYi"},"content":"     * @param tasks The ArrayList of tasks to be saved to the file.","lastModifiedDate":"2023-09-29"},{"lineNumber":51,"author":{"gitId":"LuoZYi"},"content":"     * @throws CustomException If an error occurs during saving, including I/O errors or directory creation errors.","lastModifiedDate":"2023-09-29"},{"lineNumber":52,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":53,"author":{"gitId":"LuoZYi"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) throws CustomException {","lastModifiedDate":"2023-09-29"},{"lineNumber":54,"author":{"gitId":"LuoZYi"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-09-29"},{"lineNumber":55,"author":{"gitId":"LuoZYi"},"content":"        File directory \u003d file.getParentFile();","lastModifiedDate":"2023-09-29"},{"lineNumber":56,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":57,"author":{"gitId":"LuoZYi"},"content":"        try {","lastModifiedDate":"2023-09-29"},{"lineNumber":58,"author":{"gitId":"LuoZYi"},"content":"            // Create the directory if it doesn\u0027t exist","lastModifiedDate":"2023-09-29"},{"lineNumber":59,"author":{"gitId":"LuoZYi"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2023-09-29"},{"lineNumber":60,"author":{"gitId":"LuoZYi"},"content":"                directory.mkdirs();","lastModifiedDate":"2023-09-29"},{"lineNumber":61,"author":{"gitId":"LuoZYi"},"content":"            }","lastModifiedDate":"2023-09-29"},{"lineNumber":62,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":63,"author":{"gitId":"LuoZYi"},"content":"            // Create the file if it doesn\u0027t exist","lastModifiedDate":"2023-09-29"},{"lineNumber":64,"author":{"gitId":"LuoZYi"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-09-29"},{"lineNumber":65,"author":{"gitId":"LuoZYi"},"content":"                file.createNewFile();","lastModifiedDate":"2023-09-29"},{"lineNumber":66,"author":{"gitId":"LuoZYi"},"content":"            }","lastModifiedDate":"2023-09-29"},{"lineNumber":67,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":68,"author":{"gitId":"LuoZYi"},"content":"            try (FileOutputStream fos \u003d new FileOutputStream(file);","lastModifiedDate":"2023-09-29"},{"lineNumber":69,"author":{"gitId":"LuoZYi"},"content":"                 ObjectOutputStream oos \u003d new ObjectOutputStream(fos)) {","lastModifiedDate":"2023-09-29"},{"lineNumber":70,"author":{"gitId":"LuoZYi"},"content":"                // Write the taskArrayList to the file","lastModifiedDate":"2023-09-29"},{"lineNumber":71,"author":{"gitId":"LuoZYi"},"content":"                oos.writeObject(tasks);","lastModifiedDate":"2023-09-29"},{"lineNumber":72,"author":{"gitId":"LuoZYi"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-29"},{"lineNumber":73,"author":{"gitId":"LuoZYi"},"content":"                System.out.println(\"Error saving tasks to file!\");","lastModifiedDate":"2023-09-29"},{"lineNumber":74,"author":{"gitId":"LuoZYi"},"content":"                // Throw a CustomException with a custom error message","lastModifiedDate":"2023-09-29"},{"lineNumber":75,"author":{"gitId":"LuoZYi"},"content":"                throw new CustomException(\"Error saving tasks to file: \" + e.getMessage());","lastModifiedDate":"2023-09-29"},{"lineNumber":76,"author":{"gitId":"LuoZYi"},"content":"            }","lastModifiedDate":"2023-09-29"},{"lineNumber":77,"author":{"gitId":"LuoZYi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-29"},{"lineNumber":78,"author":{"gitId":"LuoZYi"},"content":"            System.out.println(\"Error creating the file or directory!\");","lastModifiedDate":"2023-09-29"},{"lineNumber":79,"author":{"gitId":"LuoZYi"},"content":"            // Throw a CustomException with a custom error message","lastModifiedDate":"2023-09-29"},{"lineNumber":80,"author":{"gitId":"LuoZYi"},"content":"            throw new CustomException(\"Error creating file or directory: \" + e.getMessage());","lastModifiedDate":"2023-09-29"},{"lineNumber":81,"author":{"gitId":"LuoZYi"},"content":"        }","lastModifiedDate":"2023-09-29"},{"lineNumber":82,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":83,"author":{"gitId":"LuoZYi"},"content":"}","lastModifiedDate":"2023-09-29"},{"lineNumber":84,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"}],"authorContributionMap":{"LuoZYi":84}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LuoZYi"},"content":"package duke;","lastModifiedDate":"2023-09-29"},{"lineNumber":2,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":3,"author":{"gitId":"LuoZYi"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-09-29"},{"lineNumber":4,"author":{"gitId":"LuoZYi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-29"},{"lineNumber":5,"author":{"gitId":"LuoZYi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-29"},{"lineNumber":6,"author":{"gitId":"LuoZYi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-29"},{"lineNumber":7,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":8,"author":{"gitId":"LuoZYi"},"content":"/**","lastModifiedDate":"2023-09-29"},{"lineNumber":9,"author":{"gitId":"LuoZYi"},"content":" * Represents a general task with a description and optional date and time information.","lastModifiedDate":"2023-09-29"},{"lineNumber":10,"author":{"gitId":"LuoZYi"},"content":" * Implements the Serializable interface for storage.","lastModifiedDate":"2023-09-29"},{"lineNumber":11,"author":{"gitId":"LuoZYi"},"content":" */","lastModifiedDate":"2023-09-29"},{"lineNumber":12,"author":{"gitId":"LuoZYi"},"content":"public class Task implements Serializable {","lastModifiedDate":"2023-09-29"},{"lineNumber":13,"author":{"gitId":"LuoZYi"},"content":"    protected String description;","lastModifiedDate":"2023-09-29"},{"lineNumber":14,"author":{"gitId":"LuoZYi"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-09-29"},{"lineNumber":15,"author":{"gitId":"LuoZYi"},"content":"    protected LocalDateTime dateTime;","lastModifiedDate":"2023-09-29"},{"lineNumber":16,"author":{"gitId":"LuoZYi"},"content":"    protected LocalDate date;","lastModifiedDate":"2023-09-29"},{"lineNumber":17,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":18,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":19,"author":{"gitId":"LuoZYi"},"content":"     * Constructs a Task object with a description.","lastModifiedDate":"2023-09-29"},{"lineNumber":20,"author":{"gitId":"LuoZYi"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":21,"author":{"gitId":"LuoZYi"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-29"},{"lineNumber":22,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":23,"author":{"gitId":"LuoZYi"},"content":"    public Task(String description) {","lastModifiedDate":"2023-09-29"},{"lineNumber":24,"author":{"gitId":"LuoZYi"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-29"},{"lineNumber":25,"author":{"gitId":"LuoZYi"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-29"},{"lineNumber":26,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":27,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":28,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":29,"author":{"gitId":"LuoZYi"},"content":"     * Constructs a Task object with a description and a specific date and time.","lastModifiedDate":"2023-09-29"},{"lineNumber":30,"author":{"gitId":"LuoZYi"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":31,"author":{"gitId":"LuoZYi"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-29"},{"lineNumber":32,"author":{"gitId":"LuoZYi"},"content":"     * @param dateTime    The LocalDateTime representing the date and time associated with the task.","lastModifiedDate":"2023-09-29"},{"lineNumber":33,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":34,"author":{"gitId":"LuoZYi"},"content":"    public Task(String description, LocalDateTime dateTime) {","lastModifiedDate":"2023-09-29"},{"lineNumber":35,"author":{"gitId":"LuoZYi"},"content":"        this(description);","lastModifiedDate":"2023-09-29"},{"lineNumber":36,"author":{"gitId":"LuoZYi"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2023-09-29"},{"lineNumber":37,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":38,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":39,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":40,"author":{"gitId":"LuoZYi"},"content":"     * Returns the status icon for the task.","lastModifiedDate":"2023-09-29"},{"lineNumber":41,"author":{"gitId":"LuoZYi"},"content":"     * \"X\" indicates a completed task, and \" \" indicates an incomplete task.","lastModifiedDate":"2023-09-29"},{"lineNumber":42,"author":{"gitId":"LuoZYi"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":43,"author":{"gitId":"LuoZYi"},"content":"     * @return The status icon as a string.","lastModifiedDate":"2023-09-29"},{"lineNumber":44,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":45,"author":{"gitId":"LuoZYi"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-09-29"},{"lineNumber":46,"author":{"gitId":"LuoZYi"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-09-29"},{"lineNumber":47,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":48,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":49,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":50,"author":{"gitId":"LuoZYi"},"content":"     * Marks the task as done by setting the \u0027isDone\u0027 flag to true.","lastModifiedDate":"2023-09-29"},{"lineNumber":51,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":52,"author":{"gitId":"LuoZYi"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-09-29"},{"lineNumber":53,"author":{"gitId":"LuoZYi"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-09-29"},{"lineNumber":54,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":55,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":56,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":57,"author":{"gitId":"LuoZYi"},"content":"     * Marks the task as undone by setting the \u0027isDone\u0027 flag to false.","lastModifiedDate":"2023-09-29"},{"lineNumber":58,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":59,"author":{"gitId":"LuoZYi"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-09-29"},{"lineNumber":60,"author":{"gitId":"LuoZYi"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-29"},{"lineNumber":61,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":62,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":63,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":64,"author":{"gitId":"LuoZYi"},"content":"     * Returns a string representation of the task, including its status icon and description.","lastModifiedDate":"2023-09-29"},{"lineNumber":65,"author":{"gitId":"LuoZYi"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":66,"author":{"gitId":"LuoZYi"},"content":"     * @return A formatted string representing the task.","lastModifiedDate":"2023-09-29"},{"lineNumber":67,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":68,"author":{"gitId":"LuoZYi"},"content":"    @Override","lastModifiedDate":"2023-09-29"},{"lineNumber":69,"author":{"gitId":"LuoZYi"},"content":"    public String toString() {","lastModifiedDate":"2023-09-29"},{"lineNumber":70,"author":{"gitId":"LuoZYi"},"content":"        String status \u003d \"[\" + getStatusIcon() + \"] \";","lastModifiedDate":"2023-09-29"},{"lineNumber":71,"author":{"gitId":"LuoZYi"},"content":"        return status + description;","lastModifiedDate":"2023-09-29"},{"lineNumber":72,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":73,"author":{"gitId":"LuoZYi"},"content":"}","lastModifiedDate":"2023-09-29"}],"authorContributionMap":{"LuoZYi":73}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LuoZYi"},"content":"package duke;","lastModifiedDate":"2023-09-29"},{"lineNumber":2,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":3,"author":{"gitId":"LuoZYi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-29"},{"lineNumber":4,"author":{"gitId":"LuoZYi"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-09-29"},{"lineNumber":5,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":6,"author":{"gitId":"LuoZYi"},"content":"/**","lastModifiedDate":"2023-09-29"},{"lineNumber":7,"author":{"gitId":"LuoZYi"},"content":" * The TaskList class represents a list of tasks. It provides methods for adding, listing, deleting, and","lastModifiedDate":"2023-09-29"},{"lineNumber":8,"author":{"gitId":"LuoZYi"},"content":" * marking tasks as done or undone. TaskList can also be serialized to save and load tasks from a file.","lastModifiedDate":"2023-09-29"},{"lineNumber":9,"author":{"gitId":"LuoZYi"},"content":" */","lastModifiedDate":"2023-09-29"},{"lineNumber":10,"author":{"gitId":"LuoZYi"},"content":"public class TaskList implements Serializable {","lastModifiedDate":"2023-09-29"},{"lineNumber":11,"author":{"gitId":"LuoZYi"},"content":"    private ArrayList\u003cTask\u003e taskArrayList;","lastModifiedDate":"2023-09-29"},{"lineNumber":12,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":13,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":14,"author":{"gitId":"LuoZYi"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2023-09-29"},{"lineNumber":15,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":16,"author":{"gitId":"LuoZYi"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-29"},{"lineNumber":17,"author":{"gitId":"LuoZYi"},"content":"        taskArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-29"},{"lineNumber":18,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":19,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":20,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":21,"author":{"gitId":"LuoZYi"},"content":"     * Constructs a TaskList with the given list of tasks.","lastModifiedDate":"2023-09-29"},{"lineNumber":22,"author":{"gitId":"LuoZYi"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":23,"author":{"gitId":"LuoZYi"},"content":"     * @param tasks The list of tasks to initialize the TaskList with.","lastModifiedDate":"2023-09-29"},{"lineNumber":24,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":25,"author":{"gitId":"LuoZYi"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-29"},{"lineNumber":26,"author":{"gitId":"LuoZYi"},"content":"        taskArrayList \u003d tasks;","lastModifiedDate":"2023-09-29"},{"lineNumber":27,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":28,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":29,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":30,"author":{"gitId":"LuoZYi"},"content":"     * Lists all tasks in the TaskList, displaying their descriptions and statuses.","lastModifiedDate":"2023-09-29"},{"lineNumber":31,"author":{"gitId":"LuoZYi"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":32,"author":{"gitId":"LuoZYi"},"content":"     * @return String representing all tasks in the list","lastModifiedDate":"2023-09-29"},{"lineNumber":33,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":34,"author":{"gitId":"LuoZYi"},"content":"    public String listTasks() {","lastModifiedDate":"2023-09-29"},{"lineNumber":35,"author":{"gitId":"LuoZYi"},"content":"        String tasks \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-09-29"},{"lineNumber":36,"author":{"gitId":"LuoZYi"},"content":"        for (int i \u003d 0; i \u003c taskArrayList.size(); i++) {","lastModifiedDate":"2023-09-29"},{"lineNumber":37,"author":{"gitId":"LuoZYi"},"content":"            Task task \u003d taskArrayList.get(i);","lastModifiedDate":"2023-09-29"},{"lineNumber":38,"author":{"gitId":"LuoZYi"},"content":"            String curr \u003d (i + 1) + \". \" + task;","lastModifiedDate":"2023-09-29"},{"lineNumber":39,"author":{"gitId":"LuoZYi"},"content":"            tasks +\u003d curr + \"\\n\";","lastModifiedDate":"2023-09-29"},{"lineNumber":40,"author":{"gitId":"LuoZYi"},"content":"        }","lastModifiedDate":"2023-09-29"},{"lineNumber":41,"author":{"gitId":"LuoZYi"},"content":"        return tasks;","lastModifiedDate":"2023-09-29"},{"lineNumber":42,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":43,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":44,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":45,"author":{"gitId":"LuoZYi"},"content":"     * Deletes a task from the TaskList by its ID.","lastModifiedDate":"2023-09-29"},{"lineNumber":46,"author":{"gitId":"LuoZYi"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":47,"author":{"gitId":"LuoZYi"},"content":"     * @param id The ID of the task to be deleted.","lastModifiedDate":"2023-09-29"},{"lineNumber":48,"author":{"gitId":"LuoZYi"},"content":"     * @return A message indicating the result of the deletion.","lastModifiedDate":"2023-09-29"},{"lineNumber":49,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":50,"author":{"gitId":"LuoZYi"},"content":"    public String deleteTask(int id) {","lastModifiedDate":"2023-09-29"},{"lineNumber":51,"author":{"gitId":"LuoZYi"},"content":"        if (id \u003e\u003d 1 \u0026\u0026 id \u003c\u003d taskArrayList.size()) {","lastModifiedDate":"2023-09-29"},{"lineNumber":52,"author":{"gitId":"LuoZYi"},"content":"            Task task \u003d taskArrayList.remove(id - 1);","lastModifiedDate":"2023-09-29"},{"lineNumber":53,"author":{"gitId":"LuoZYi"},"content":"            return \"Noted. I\u0027ve removed this task:\\n\" + task","lastModifiedDate":"2023-09-29"},{"lineNumber":54,"author":{"gitId":"LuoZYi"},"content":"                    + \"\\nNow you have \" + taskArrayList.size() + \" tasks in the list.\";","lastModifiedDate":"2023-09-29"},{"lineNumber":55,"author":{"gitId":"LuoZYi"},"content":"        } else {","lastModifiedDate":"2023-09-29"},{"lineNumber":56,"author":{"gitId":"LuoZYi"},"content":"            return \"Invalid task number. Please enter a valid task number.\";","lastModifiedDate":"2023-09-29"},{"lineNumber":57,"author":{"gitId":"LuoZYi"},"content":"        }","lastModifiedDate":"2023-09-29"},{"lineNumber":58,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":59,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":60,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":61,"author":{"gitId":"LuoZYi"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2023-09-29"},{"lineNumber":62,"author":{"gitId":"LuoZYi"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":63,"author":{"gitId":"LuoZYi"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-09-29"},{"lineNumber":64,"author":{"gitId":"LuoZYi"},"content":"     * @return A message indicating the result of the addition.","lastModifiedDate":"2023-09-29"},{"lineNumber":65,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":66,"author":{"gitId":"LuoZYi"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2023-09-29"},{"lineNumber":67,"author":{"gitId":"LuoZYi"},"content":"        taskArrayList.add(task);","lastModifiedDate":"2023-09-29"},{"lineNumber":68,"author":{"gitId":"LuoZYi"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + taskArrayList.get(taskArrayList.size() - 1)","lastModifiedDate":"2023-09-29"},{"lineNumber":69,"author":{"gitId":"LuoZYi"},"content":"                + \"\\nNow you have \" + taskArrayList.size() + \" tasks in the list.\";","lastModifiedDate":"2023-09-29"},{"lineNumber":70,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":71,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":72,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":73,"author":{"gitId":"LuoZYi"},"content":"     * Marks a task as done by its ID.","lastModifiedDate":"2023-09-29"},{"lineNumber":74,"author":{"gitId":"LuoZYi"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":75,"author":{"gitId":"LuoZYi"},"content":"     * @param id The ID of the task to be marked as done.","lastModifiedDate":"2023-09-29"},{"lineNumber":76,"author":{"gitId":"LuoZYi"},"content":"     * @return A message indicating the result of marking the task as done.","lastModifiedDate":"2023-09-29"},{"lineNumber":77,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":78,"author":{"gitId":"LuoZYi"},"content":"    public String markTaskAsDone(int id) {","lastModifiedDate":"2023-09-29"},{"lineNumber":79,"author":{"gitId":"LuoZYi"},"content":"        if (id \u003e\u003d 1 \u0026\u0026 id \u003c\u003d taskArrayList.size()) {","lastModifiedDate":"2023-09-29"},{"lineNumber":80,"author":{"gitId":"LuoZYi"},"content":"            Task task \u003d taskArrayList.get(id - 1);","lastModifiedDate":"2023-09-29"},{"lineNumber":81,"author":{"gitId":"LuoZYi"},"content":"            if (!task.isDone) {","lastModifiedDate":"2023-09-29"},{"lineNumber":82,"author":{"gitId":"LuoZYi"},"content":"                task.markAsDone();","lastModifiedDate":"2023-09-29"},{"lineNumber":83,"author":{"gitId":"LuoZYi"},"content":"                return \"Nice! I\u0027ve marked this task as done:\\n\" + task;","lastModifiedDate":"2023-09-29"},{"lineNumber":84,"author":{"gitId":"LuoZYi"},"content":"            } else {","lastModifiedDate":"2023-09-29"},{"lineNumber":85,"author":{"gitId":"LuoZYi"},"content":"                return \"This task is already marked as done:\\n\" + task;","lastModifiedDate":"2023-09-29"},{"lineNumber":86,"author":{"gitId":"LuoZYi"},"content":"            }","lastModifiedDate":"2023-09-29"},{"lineNumber":87,"author":{"gitId":"LuoZYi"},"content":"        } else {","lastModifiedDate":"2023-09-29"},{"lineNumber":88,"author":{"gitId":"LuoZYi"},"content":"            return \"Invalid task number. Please enter a valid task number.\";","lastModifiedDate":"2023-09-29"},{"lineNumber":89,"author":{"gitId":"LuoZYi"},"content":"        }","lastModifiedDate":"2023-09-29"},{"lineNumber":90,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":91,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":92,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":93,"author":{"gitId":"LuoZYi"},"content":"     * Marks a task as undone (not done) by its ID.","lastModifiedDate":"2023-09-29"},{"lineNumber":94,"author":{"gitId":"LuoZYi"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":95,"author":{"gitId":"LuoZYi"},"content":"     * @param id The ID of the task to be marked as undone.","lastModifiedDate":"2023-09-29"},{"lineNumber":96,"author":{"gitId":"LuoZYi"},"content":"     * @return A message indicating the result of marking the task as undone.","lastModifiedDate":"2023-09-29"},{"lineNumber":97,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":98,"author":{"gitId":"LuoZYi"},"content":"    public String unmarkTask(int id) {","lastModifiedDate":"2023-09-29"},{"lineNumber":99,"author":{"gitId":"LuoZYi"},"content":"        if (id \u003e\u003d 1 \u0026\u0026 id \u003c\u003d taskArrayList.size()) {","lastModifiedDate":"2023-09-29"},{"lineNumber":100,"author":{"gitId":"LuoZYi"},"content":"            Task task \u003d taskArrayList.get(id - 1);","lastModifiedDate":"2023-09-29"},{"lineNumber":101,"author":{"gitId":"LuoZYi"},"content":"            if (task.isDone) {","lastModifiedDate":"2023-09-29"},{"lineNumber":102,"author":{"gitId":"LuoZYi"},"content":"                task.markAsUndone();","lastModifiedDate":"2023-09-29"},{"lineNumber":103,"author":{"gitId":"LuoZYi"},"content":"                return \"OK, I\u0027ve marked this task as not done yet:\\n\" + task;","lastModifiedDate":"2023-09-29"},{"lineNumber":104,"author":{"gitId":"LuoZYi"},"content":"            } else {","lastModifiedDate":"2023-09-29"},{"lineNumber":105,"author":{"gitId":"LuoZYi"},"content":"                return \"This task is already marked as not done:\\n\" + task;","lastModifiedDate":"2023-09-29"},{"lineNumber":106,"author":{"gitId":"LuoZYi"},"content":"            }","lastModifiedDate":"2023-09-29"},{"lineNumber":107,"author":{"gitId":"LuoZYi"},"content":"        } else {","lastModifiedDate":"2023-09-29"},{"lineNumber":108,"author":{"gitId":"LuoZYi"},"content":"            return \"Invalid task number. Please enter a valid task number.\";","lastModifiedDate":"2023-09-29"},{"lineNumber":109,"author":{"gitId":"LuoZYi"},"content":"        }","lastModifiedDate":"2023-09-29"},{"lineNumber":110,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":111,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":112,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":113,"author":{"gitId":"LuoZYi"},"content":"     * Retrieves the ArrayList of tasks contained in the TaskList.","lastModifiedDate":"2023-09-29"},{"lineNumber":114,"author":{"gitId":"LuoZYi"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":115,"author":{"gitId":"LuoZYi"},"content":"     * @return The ArrayList of tasks.","lastModifiedDate":"2023-09-29"},{"lineNumber":116,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":117,"author":{"gitId":"LuoZYi"},"content":"    protected ArrayList\u003cTask\u003e getTaskArrayList() {","lastModifiedDate":"2023-09-29"},{"lineNumber":118,"author":{"gitId":"LuoZYi"},"content":"        return taskArrayList;","lastModifiedDate":"2023-09-29"},{"lineNumber":119,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":120,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":121,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":122,"author":{"gitId":"LuoZYi"},"content":"     * Lists tasks in the TaskList whose description matches with keyword.","lastModifiedDate":"2023-09-29"},{"lineNumber":123,"author":{"gitId":"LuoZYi"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":124,"author":{"gitId":"LuoZYi"},"content":"     * @param key The keyword users are looking up for.","lastModifiedDate":"2023-09-29"},{"lineNumber":125,"author":{"gitId":"LuoZYi"},"content":"     * @return String representing all the matching tasks in the list.","lastModifiedDate":"2023-09-29"},{"lineNumber":126,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":127,"author":{"gitId":"LuoZYi"},"content":"    public String findTasks(String key) {","lastModifiedDate":"2023-09-29"},{"lineNumber":128,"author":{"gitId":"LuoZYi"},"content":"        String taskFound \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-09-29"},{"lineNumber":129,"author":{"gitId":"LuoZYi"},"content":"        for (int i \u003d 0; i \u003c taskArrayList.size(); i++) {","lastModifiedDate":"2023-09-29"},{"lineNumber":130,"author":{"gitId":"LuoZYi"},"content":"            Task task \u003d taskArrayList.get(i);","lastModifiedDate":"2023-09-29"},{"lineNumber":131,"author":{"gitId":"LuoZYi"},"content":"            if(task.description.contains(key)) {","lastModifiedDate":"2023-09-29"},{"lineNumber":132,"author":{"gitId":"LuoZYi"},"content":"                String tasks \u003d((i + 1) + \". \" + task);","lastModifiedDate":"2023-09-29"},{"lineNumber":133,"author":{"gitId":"LuoZYi"},"content":"                taskFound +\u003d tasks + \"\\n\";","lastModifiedDate":"2023-09-29"},{"lineNumber":134,"author":{"gitId":"LuoZYi"},"content":"            }","lastModifiedDate":"2023-09-29"},{"lineNumber":135,"author":{"gitId":"LuoZYi"},"content":"        }","lastModifiedDate":"2023-09-29"},{"lineNumber":136,"author":{"gitId":"LuoZYi"},"content":"        return taskFound;","lastModifiedDate":"2023-09-29"},{"lineNumber":137,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":138,"author":{"gitId":"LuoZYi"},"content":"}","lastModifiedDate":"2023-09-29"}],"authorContributionMap":{"LuoZYi":138}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LuoZYi"},"content":"package duke;","lastModifiedDate":"2023-09-29"},{"lineNumber":2,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":3,"author":{"gitId":"LuoZYi"},"content":"/**","lastModifiedDate":"2023-09-29"},{"lineNumber":4,"author":{"gitId":"LuoZYi"},"content":" * Represents a to-do task with a description but no specific date and time associated with it.","lastModifiedDate":"2023-09-29"},{"lineNumber":5,"author":{"gitId":"LuoZYi"},"content":" * Extends the Task class.","lastModifiedDate":"2023-09-29"},{"lineNumber":6,"author":{"gitId":"LuoZYi"},"content":" */","lastModifiedDate":"2023-09-29"},{"lineNumber":7,"author":{"gitId":"LuoZYi"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-09-29"},{"lineNumber":8,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":9,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":10,"author":{"gitId":"LuoZYi"},"content":"     * Constructs a ToDo task with a description.","lastModifiedDate":"2023-09-29"},{"lineNumber":11,"author":{"gitId":"LuoZYi"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":12,"author":{"gitId":"LuoZYi"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2023-09-29"},{"lineNumber":13,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":14,"author":{"gitId":"LuoZYi"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-09-29"},{"lineNumber":15,"author":{"gitId":"LuoZYi"},"content":"        super(description);","lastModifiedDate":"2023-09-29"},{"lineNumber":16,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":17,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":18,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":19,"author":{"gitId":"LuoZYi"},"content":"     * Returns a string representation of the ToDo task, including its status icon and description.","lastModifiedDate":"2023-09-29"},{"lineNumber":20,"author":{"gitId":"LuoZYi"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":21,"author":{"gitId":"LuoZYi"},"content":"     * @return A formatted string representing the ToDo task.","lastModifiedDate":"2023-09-29"},{"lineNumber":22,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":23,"author":{"gitId":"LuoZYi"},"content":"    @Override","lastModifiedDate":"2023-09-29"},{"lineNumber":24,"author":{"gitId":"LuoZYi"},"content":"    public String toString() {","lastModifiedDate":"2023-09-29"},{"lineNumber":25,"author":{"gitId":"LuoZYi"},"content":"        String status \u003d \"[\" + getStatusIcon() + \"] \";","lastModifiedDate":"2023-09-29"},{"lineNumber":26,"author":{"gitId":"LuoZYi"},"content":"        return \" [T]\" + status + description;","lastModifiedDate":"2023-09-29"},{"lineNumber":27,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":28,"author":{"gitId":"LuoZYi"},"content":"}","lastModifiedDate":"2023-09-29"},{"lineNumber":29,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"}],"authorContributionMap":{"LuoZYi":29}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LuoZYi"},"content":"package duke;","lastModifiedDate":"2023-09-29"},{"lineNumber":2,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":3,"author":{"gitId":"LuoZYi"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-29"},{"lineNumber":4,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":5,"author":{"gitId":"LuoZYi"},"content":"/**","lastModifiedDate":"2023-09-29"},{"lineNumber":6,"author":{"gitId":"LuoZYi"},"content":" * The Ui class handles user interface interactions for the Duke chatbot.","lastModifiedDate":"2023-09-29"},{"lineNumber":7,"author":{"gitId":"LuoZYi"},"content":" * It provides methods for greeting the user, displaying messages, getting user input,","lastModifiedDate":"2023-09-29"},{"lineNumber":8,"author":{"gitId":"LuoZYi"},"content":" * and closing the input scanner.","lastModifiedDate":"2023-09-29"},{"lineNumber":9,"author":{"gitId":"LuoZYi"},"content":" */","lastModifiedDate":"2023-09-29"},{"lineNumber":10,"author":{"gitId":"LuoZYi"},"content":"public class Ui {","lastModifiedDate":"2023-09-29"},{"lineNumber":11,"author":{"gitId":"LuoZYi"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-09-29"},{"lineNumber":12,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":13,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":14,"author":{"gitId":"LuoZYi"},"content":"     * Constructs a new Ui object and initializes the input scanner to read user input from the console.","lastModifiedDate":"2023-09-29"},{"lineNumber":15,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":16,"author":{"gitId":"LuoZYi"},"content":"    public Ui() {","lastModifiedDate":"2023-09-29"},{"lineNumber":17,"author":{"gitId":"LuoZYi"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-29"},{"lineNumber":18,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":19,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":20,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":21,"author":{"gitId":"LuoZYi"},"content":"     * Displays a goodbye message when the chatbot is about to exit.","lastModifiedDate":"2023-09-29"},{"lineNumber":22,"author":{"gitId":"LuoZYi"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":23,"author":{"gitId":"LuoZYi"},"content":"     * @return String representing an exit message","lastModifiedDate":"2023-09-29"},{"lineNumber":24,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":25,"author":{"gitId":"LuoZYi"},"content":"    protected String exit() {","lastModifiedDate":"2023-09-29"},{"lineNumber":26,"author":{"gitId":"LuoZYi"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-29"},{"lineNumber":27,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":28,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":29,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":30,"author":{"gitId":"LuoZYi"},"content":"     * Reads and retrieves user input from the console.","lastModifiedDate":"2023-09-29"},{"lineNumber":31,"author":{"gitId":"LuoZYi"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":32,"author":{"gitId":"LuoZYi"},"content":"     * @return The user\u0027s input as a string.","lastModifiedDate":"2023-09-29"},{"lineNumber":33,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":34,"author":{"gitId":"LuoZYi"},"content":"    protected String getUserInput() {","lastModifiedDate":"2023-09-29"},{"lineNumber":35,"author":{"gitId":"LuoZYi"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-09-29"},{"lineNumber":36,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":37,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":38,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":39,"author":{"gitId":"LuoZYi"},"content":"     * Closes the input scanner when it\u0027s no longer needed.","lastModifiedDate":"2023-09-29"},{"lineNumber":40,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":41,"author":{"gitId":"LuoZYi"},"content":"    protected void closeScanner() {","lastModifiedDate":"2023-09-29"},{"lineNumber":42,"author":{"gitId":"LuoZYi"},"content":"        scanner.close();","lastModifiedDate":"2023-09-29"},{"lineNumber":43,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":44,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":45,"author":{"gitId":"LuoZYi"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":46,"author":{"gitId":"LuoZYi"},"content":"     * Displays a message to the user.","lastModifiedDate":"2023-09-29"},{"lineNumber":47,"author":{"gitId":"LuoZYi"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":48,"author":{"gitId":"LuoZYi"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2023-09-29"},{"lineNumber":49,"author":{"gitId":"LuoZYi"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":50,"author":{"gitId":"LuoZYi"},"content":"    protected void showMessage(String message) {","lastModifiedDate":"2023-09-29"},{"lineNumber":51,"author":{"gitId":"LuoZYi"},"content":"        System.out.println(message);","lastModifiedDate":"2023-09-29"},{"lineNumber":52,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":53,"author":{"gitId":"LuoZYi"},"content":"}","lastModifiedDate":"2023-09-29"},{"lineNumber":54,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-29"}],"authorContributionMap":{"LuoZYi":54}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"LuoZYi"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"LuoZYi"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"LuoZYi"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"LuoZYi"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"LuoZYi"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"LuoZYi"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"LuoZYi"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"LuoZYi"},"content":"\u003cchildren\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"LuoZYi"},"content":"    \u003cScrollPane minHeight\u003d\"50.0\" prefHeight\u003d\"100.0\" maxHeight\u003d\"1.7976931348623157E308\"\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"LuoZYi"},"content":"        \u003ccontent\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"LuoZYi"},"content":"            \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"LuoZYi"},"content":"        \u003c/content\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"LuoZYi"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"LuoZYi"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"LuoZYi"},"content":"\u003c/children\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"LuoZYi"},"content":"\u003cpadding\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"LuoZYi"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"LuoZYi"},"content":"\u003c/padding\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"LuoZYi"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"LuoZYi":23}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"LuoZYi"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"LuoZYi"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"LuoZYi"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"LuoZYi"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"LuoZYi"},"content":"\u003c?import javafx.scene.effect.Glow?\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"LuoZYi"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"LuoZYi"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"LuoZYi"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"GUI.MainWindow\"\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"LuoZYi"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"LuoZYi"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" opacity\u003d\"0.5\" prefHeight\u003d\"43.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Start converse!\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"LuoZYi"},"content":"         \u003ceffect\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"LuoZYi"},"content":"            \u003cGlow /\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"LuoZYi"},"content":"         \u003c/effect\u003e\u003c/TextField\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"LuoZYi"},"content":"        \u003cButton fx:id\u003d\"sendButton\" defaultButton\u003d\"true\" layoutX\u003d\"324.0\" layoutY\u003d\"557.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"43.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" textFill\u003d\"#2849bf\" textOverrun\u003d\"CENTER_ELLIPSIS\" /\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"LuoZYi"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"LuoZYi"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"LuoZYi"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"413.0\" /\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"LuoZYi"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"LuoZYi"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"LuoZYi"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"LuoZYi"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"LuoZYi":23}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LuoZYi"},"content":"package duke;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"LuoZYi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"LuoZYi"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"LuoZYi"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"LuoZYi"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"LuoZYi"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"LuoZYi"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"LuoZYi"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"LuoZYi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"LuoZYi"},"content":"public class DukeTest {","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"LuoZYi"},"content":"    private final InputStream originalSystemIn \u003d System.in;","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"LuoZYi"},"content":"    private final PrintStream originalSystemOut \u003d System.out;","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"LuoZYi"},"content":"    private ByteArrayInputStream testInput;","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"LuoZYi"},"content":"    private ByteArrayOutputStream testOutput;","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"LuoZYi"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"LuoZYi"},"content":"    public void setUpStreams() {","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"LuoZYi"},"content":"        // Redirect System.in and System.out to capture input and output","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"LuoZYi"},"content":"        testOutput \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"LuoZYi"},"content":"        System.setOut(new PrintStream(testOutput));","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"LuoZYi"},"content":"        // Prepare test input","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"LuoZYi"},"content":"        String userInput \u003d \"todo badminton\\n\"; // Replace with your test input","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"LuoZYi"},"content":"        testInput \u003d new ByteArrayInputStream(userInput.getBytes());","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"LuoZYi"},"content":"        System.setIn(testInput);","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"LuoZYi"},"content":"    @AfterEach","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"LuoZYi"},"content":"    public void restoreStreams() {","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"LuoZYi"},"content":"        System.setIn(originalSystemIn);","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"LuoZYi"},"content":"        System.setOut(originalSystemOut);","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"LuoZYi"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"LuoZYi"},"content":"    public void testDuke() {","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"LuoZYi"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"LuoZYi"},"content":"        duke.run();","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"LuoZYi"},"content":"        String actualOutput \u003d testOutput.toString().trim();","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"LuoZYi"},"content":"        String expectedOutput \u003d \"Hello! I\u0027m Lakinta\\n\" +","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"LuoZYi"},"content":"                \"What can I do for you?\\n\" +","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"LuoZYi"},"content":"                \"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"LuoZYi"},"content":"                \"[T][ ] badminton\\n\" +","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"LuoZYi"},"content":"                \"Now you have 1 tasks in the list.\";","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"LuoZYi"},"content":"        String normalizedExpected \u003d normalizeString(expectedOutput);","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"LuoZYi"},"content":"        String normalizedActual \u003d normalizeString(actualOutput);","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"LuoZYi"},"content":"        assertEquals(normalizedExpected, normalizedActual);","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"LuoZYi"},"content":"    private String normalizeString(String input) {","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"LuoZYi"},"content":"        return input.replaceAll(\"\\\\s+\", \" \").replaceAll(\"\\r\\n\", \"\\n\").trim();","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"LuoZYi"},"content":"}","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"LuoZYi":59}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LuoZYi"},"content":"package duke;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"LuoZYi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"LuoZYi"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"LuoZYi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"LuoZYi"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"LuoZYi"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"LuoZYi"},"content":"    public void testToDoToString() {","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"LuoZYi"},"content":"        ToDo todo \u003d new ToDo(\"Buy groceries\");","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"LuoZYi"},"content":"        assertEquals(\" [T][ ] Buy groceries\", todo.toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"LuoZYi"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"LuoZYi"},"content":"    public void testEventToString() {","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"LuoZYi"},"content":"        LocalDateTime from \u003d LocalDateTime.of(2023, 9, 15, 10, 0);","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"LuoZYi"},"content":"        LocalDateTime to \u003d LocalDateTime.of(2023, 9, 15, 12, 0);","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"LuoZYi"},"content":"        Event event \u003d new Event(\"Meeting\", from, to);","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"LuoZYi"},"content":"        assertEquals(\" [E][ ] Meeting (from: Sep 15 2023 10:00 to: Sep 15 2023 12:00)\", event.toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"LuoZYi"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"LuoZYi"},"content":"    public void testDeadlineToString() {","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"LuoZYi"},"content":"        LocalDateTime deadlineTime \u003d LocalDateTime.of(2023, 9, 30, 23, 59);","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"LuoZYi"},"content":"        Deadline deadline \u003d new Deadline(\"Submit report\", deadlineTime);","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"LuoZYi"},"content":"        assertEquals(\" [D][ ] Submit report (by: Sep 30 2023 23:59)\", deadline.toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"LuoZYi"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"LuoZYi"},"content":"    public void testToDoMarkAsDone() {","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"LuoZYi"},"content":"        ToDo todo \u003d new ToDo(\"Read a book\");","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"LuoZYi"},"content":"        todo.markAsDone();","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"LuoZYi"},"content":"        assertEquals(\" [T][X] Read a book\", todo.toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"LuoZYi"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"LuoZYi"},"content":"    public void testEventMarkAsDone() {","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"LuoZYi"},"content":"        LocalDateTime from \u003d LocalDateTime.of(2023, 9, 15, 10, 0);","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"LuoZYi"},"content":"        LocalDateTime to \u003d LocalDateTime.of(2023, 9, 15, 12, 0);","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"LuoZYi"},"content":"        Event event \u003d new Event(\"Meeting\", from, to);","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"LuoZYi"},"content":"        event.markAsDone();","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"LuoZYi"},"content":"        assertEquals(\" [E][X] Meeting (from: Sep 15 2023 10:00 to: Sep 15 2023 12:00)\", event.toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"LuoZYi"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"LuoZYi"},"content":"    public void testDeadlineMarkAsDone() {","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"LuoZYi"},"content":"        LocalDateTime deadlineTime \u003d LocalDateTime.of(2023, 9, 30, 23, 59);","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"LuoZYi"},"content":"        Deadline deadline \u003d new Deadline(\"Submit report\", deadlineTime);","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"LuoZYi"},"content":"        deadline.markAsDone();","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"LuoZYi"},"content":"        assertEquals(\" [D][X] Submit report (by: Sep 30 2023 23:59)\", deadline.toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"LuoZYi"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"LuoZYi"},"content":"}","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"LuoZYi"},"content":"","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"LuoZYi":55}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LuoZYi"},"content":"todo eat breakfast","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"LuoZYi"},"content":"deadline assignment /by tonight","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"LuoZYi"},"content":"todo meet with friends","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"LuoZYi"},"content":"list","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"LuoZYi"},"content":"event play badminton /from Sunday 4pm /to 6pm","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"LuoZYi"},"content":"mark 3","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"LuoZYi"},"content":"mark 1","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"LuoZYi"},"content":"unmark 3","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"LuoZYi"},"content":"mark 4","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"LuoZYi"},"content":"todo study hard","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"LuoZYi"},"content":"mark 5","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"LuoZYi"},"content":"unmark 4","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"LuoZYi"},"content":"mark 2","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"LuoZYi"},"content":"list","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"LuoZYi":14}},{"path":"data/duke.txt","fileType":"txt","isBinary":true,"lines":[],"authorContributionMap":{"LuoZYi":0}}]
