[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elhy1999"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"elhy1999"},"content":"    String by;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"elhy1999"},"content":"    Deadline(String name, String by) {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"elhy1999"},"content":"        super(name);","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"elhy1999"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"elhy1999"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"elhy1999"},"content":"    String getTaskType() {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"elhy1999"},"content":"        return \"Deadline\";","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"elhy1999"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"elhy1999"},"content":"    String getBy() {","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"elhy1999"},"content":"        return this.by;","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"elhy1999"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"elhy1999"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"elhy1999"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"elhy1999"},"content":"        return \"[D][\" + (this.getDone() ? \u0027X\u0027 : \u0027 \u0027) + \"] \" + this.name + \" (by: \" + this.getBy() + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"elhy1999"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"elhy1999"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"elhy1999":22}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elhy1999"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"elhy1999"},"content":"    String startDatetime;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"elhy1999"},"content":"    String endDatetime;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"elhy1999"},"content":"    Event(String name, String startDatetime, String endDatetime) {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"elhy1999"},"content":"        super(name);","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"elhy1999"},"content":"        this.startDatetime \u003d startDatetime;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"elhy1999"},"content":"        this.endDatetime \u003d endDatetime;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"elhy1999"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"elhy1999"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"elhy1999"},"content":"    String getTaskType() {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"elhy1999"},"content":"        return \"Event\";","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"elhy1999"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"elhy1999"},"content":"    String getStartDatetime() {","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"elhy1999"},"content":"        return this.startDatetime;","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"elhy1999"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"elhy1999"},"content":"    String getEndDatetime() {","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"elhy1999"},"content":"        return this.endDatetime;","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"elhy1999"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"elhy1999"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"elhy1999"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"elhy1999"},"content":"        return \"[E][\" + (this.getDone() ? \u0027X\u0027 : \u0027 \u0027) + \"] \" + this.name + \" (from: \" + this.getStartDatetime() + \" to: \" + getEndDatetime() + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"elhy1999"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"elhy1999"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"elhy1999":29}},{"path":"src/main/java/InvalidCommandTypeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elhy1999"},"content":"public class InvalidCommandTypeException extends Exception{","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"elhy1999"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"elhy1999":2}},{"path":"src/main/java/InvalidDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elhy1999"},"content":"public class InvalidDescriptionException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"elhy1999"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"elhy1999":2}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elhy1999"},"content":"import java.sql.Array;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"elhy1999"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"elhy1999"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"elhy1999"},"content":"    static ArrayList\u003cTask\u003e allTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"elhy1999"},"content":"    String name;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"elhy1999"},"content":"    boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"elhy1999"},"content":"    Task(String name) {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"elhy1999"},"content":"        allTasks.add(this);","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"elhy1999"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"elhy1999"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"elhy1999"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"elhy1999"},"content":"    static ArrayList\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"elhy1999"},"content":"        return allTasks;","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"elhy1999"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"elhy1999"},"content":"    static Task removeTask(int index) {","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"elhy1999"},"content":"        // Takes in an index (starting from 0 to n-1) and removes that task from Task.allTasks","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"elhy1999"},"content":"        Task removedTask \u003d allTasks.get(index);","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"elhy1999"},"content":"        allTasks.remove(index);","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"elhy1999"},"content":"        return removedTask;","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"elhy1999"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"elhy1999"},"content":"    boolean markAsDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"elhy1999"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"elhy1999"},"content":"        return getDone();","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"elhy1999"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"elhy1999"},"content":"    boolean markAsNotDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"elhy1999"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"elhy1999"},"content":"        return getDone();","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"elhy1999"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"elhy1999"},"content":"    boolean getDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"elhy1999"},"content":"        return this.isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"elhy1999"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"elhy1999"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"elhy1999"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"elhy1999"},"content":"        return this.name;","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"elhy1999"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"elhy1999"},"content":"//    static int getNumIncompleteTasks() {","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"elhy1999"},"content":"//        int totalCount \u003d 0;","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"elhy1999"},"content":"//        for (Task t : allTasks) {","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"elhy1999"},"content":"//            if (!t.getDone()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"elhy1999"},"content":"//                totalCount++;","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"elhy1999"},"content":"//            }","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"elhy1999"},"content":"//        }","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"elhy1999"},"content":"//        return totalCount;","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"elhy1999"},"content":"//    }","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"elhy1999"},"content":"    abstract String getTaskType();","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"elhy1999"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"elhy1999":57}},{"path":"src/main/java/TaskMate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elhy1999"},"content":"import java.lang.reflect.Array;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"elhy1999"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"elhy1999"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"elhy1999"},"content":"public class TaskMate {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"elhy1999"},"content":"    static String horizontalLine \u003d \"--------------------\";","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"elhy1999"},"content":"    static String chatbotName \u003d \"TaskMate\";","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"elhy1999"},"content":"    static enum CommandTypes {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"elhy1999"},"content":"        list, bye, todo, deadline, event, mark, unmark, delete","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"elhy1999"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"elhy1999"},"content":"    public static void main(String[] args) throws InvalidCommandTypeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"elhy1999"},"content":"        // Greets user","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"elhy1999"},"content":"        String greetMessage \u003d \"Hello I\u0027m \" + chatbotName + \"\\nWhat can I do for you?\";","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"elhy1999"},"content":"        printReply(greetMessage);","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"elhy1999"},"content":"        // Echo user input","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"elhy1999"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"elhy1999"},"content":"        String userInput;","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"elhy1999"},"content":"        while (true) {","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"elhy1999"},"content":"            userInput \u003d sc.nextLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"elhy1999"},"content":"            // Checks if user input is correct (Error handling)","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"elhy1999"},"content":"            checkInvalidCommandTypeException(userInput);","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"elhy1999"},"content":"            // exits","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"elhy1999"},"content":"            if (getCommandType(userInput).equals(CommandTypes.bye.toString())) {","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"elhy1999"},"content":"                break;","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"elhy1999"},"content":"            // list","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"elhy1999"},"content":"            } else if (getCommandType(userInput).equals(CommandTypes.list.toString())) {","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"elhy1999"},"content":"                processListCommand();","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"elhy1999"},"content":"            // Add task OR mark/unmark","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"elhy1999"},"content":"            } else if (getCommandType(userInput).equals(CommandTypes.mark.toString()) | getCommandType(userInput).equals(CommandTypes.unmark.toString())) {","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"elhy1999"},"content":"                try {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"elhy1999"},"content":"                    checkValidMarkOrUnmarkCommand(userInput);","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"elhy1999"},"content":"                } catch (InvalidCommandTypeException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"elhy1999"},"content":"                    printReply(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"elhy1999"},"content":"                    System.exit(0);","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"elhy1999"},"content":"                } catch (InvalidDescriptionException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"elhy1999"},"content":"                    printReply(\"☹ OOPS!!! The description of a mark/unmark must be between 1 and \" + Task.getAllTasks().size() + \".\");","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"elhy1999"},"content":"                    System.exit(0);","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"elhy1999"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"elhy1999"},"content":"                processMarkUnmarkCommand(userInput);","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"elhy1999"},"content":"            } else if (getCommandType(userInput).equals(CommandTypes.todo.toString())) {","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"elhy1999"},"content":"                try {","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"elhy1999"},"content":"                    checkValidTodoCommand(userInput);","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"elhy1999"},"content":"                } catch (InvalidCommandTypeException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"elhy1999"},"content":"                    printReply(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"elhy1999"},"content":"                    System.exit(0);","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"elhy1999"},"content":"                } catch (InvalidDescriptionException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"elhy1999"},"content":"                    printReply(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"elhy1999"},"content":"                    System.exit(0);","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"elhy1999"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"elhy1999"},"content":"                processAddTaskCommand(userInput);","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"elhy1999"},"content":"            } else if (getCommandType(userInput).equals(CommandTypes.deadline.toString())) {","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"elhy1999"},"content":"                // TODO: Add checks for Deadline-type tasks","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"elhy1999"},"content":"                processAddTaskCommand(userInput);","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"elhy1999"},"content":"            } else if (getCommandType(userInput).equals(CommandTypes.event.toString())) {","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"elhy1999"},"content":"                // TODO: Add checks for Event-type tasks","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"elhy1999"},"content":"                processAddTaskCommand(userInput);","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"elhy1999"},"content":"            } else if (getCommandType(userInput).equals(CommandTypes.delete.toString())) {","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"elhy1999"},"content":"                try {","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"elhy1999"},"content":"                    checkValidDeleteCommand(userInput);","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"elhy1999"},"content":"                } catch (InvalidCommandTypeException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"elhy1999"},"content":"                    printReply(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"elhy1999"},"content":"                    System.exit(0);","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"elhy1999"},"content":"                } catch (InvalidDescriptionException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"elhy1999"},"content":"                    printReply(\"☹ OOPS!!! The description of a delete must be between 1 and \" + Task.getAllTasks().size() + \".\");","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"elhy1999"},"content":"                    System.exit(0);","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"elhy1999"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"elhy1999"},"content":"                processDeleteCommand(userInput);","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"elhy1999"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"elhy1999"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":78,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":79,"author":{"gitId":"elhy1999"},"content":"        // print exit message","lastModifiedDate":"2023-08-23"},{"lineNumber":80,"author":{"gitId":"elhy1999"},"content":"        String exitMessage \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"elhy1999"},"content":"        printReply(exitMessage);","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"elhy1999"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":83,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":84,"author":{"gitId":"elhy1999"},"content":"    static void printReply(String text) {","lastModifiedDate":"2023-08-23"},{"lineNumber":85,"author":{"gitId":"elhy1999"},"content":"        // prints text with horizontal lines above and below it","lastModifiedDate":"2023-08-23"},{"lineNumber":86,"author":{"gitId":"elhy1999"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-08-23"},{"lineNumber":87,"author":{"gitId":"elhy1999"},"content":"        System.out.println(text);","lastModifiedDate":"2023-08-23"},{"lineNumber":88,"author":{"gitId":"elhy1999"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-08-23"},{"lineNumber":89,"author":{"gitId":"elhy1999"},"content":"        System.out.println();","lastModifiedDate":"2023-08-23"},{"lineNumber":90,"author":{"gitId":"elhy1999"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":91,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":92,"author":{"gitId":"elhy1999"},"content":"    static void checkValidMarkOrUnmarkCommand(String userInput) throws InvalidCommandTypeException, InvalidDescriptionException {","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"elhy1999"},"content":"        // Checks if the user input command is a valid \"mark\" or \"unmark\" command","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"elhy1999"},"content":"        // by checking if the command starts with \"mark\"/\"unmark\", followed by a whitespace,","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"elhy1999"},"content":"        // followed by an integer from 1 to Task.getAllTasks().size()","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"elhy1999"},"content":"        String indexWithinList;","lastModifiedDate":"2023-08-23"},{"lineNumber":97,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"elhy1999"},"content":"        if (userInput.startsWith(CommandTypes.mark.toString())) {","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"elhy1999"},"content":"            indexWithinList \u003d userInput.substring(CommandTypes.mark.toString().length()).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"elhy1999"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":101,"author":{"gitId":"elhy1999"},"content":"            if (!userInput.startsWith(CommandTypes.unmark.toString())) {","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"elhy1999"},"content":"                throw new InvalidCommandTypeException();","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"elhy1999"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"elhy1999"},"content":"            indexWithinList \u003d userInput.substring(CommandTypes.unmark.toString().length()).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":105,"author":{"gitId":"elhy1999"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":106,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":107,"author":{"gitId":"elhy1999"},"content":"        if (!checkStringIsInteger(indexWithinList)) {","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"elhy1999"},"content":"            throw new InvalidDescriptionException();","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"elhy1999"},"content":"        } else if (Integer.parseInt(indexWithinList) \u003c 1 | Integer.parseInt(indexWithinList) \u003e Task.getAllTasks().size()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"elhy1999"},"content":"            throw new InvalidDescriptionException();","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"elhy1999"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":112,"author":{"gitId":"elhy1999"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"elhy1999"},"content":"    static void checkValidTodoCommand(String userInput) throws InvalidCommandTypeException, InvalidDescriptionException {","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"elhy1999"},"content":"        // Checks if \"todo\" command is valid by checking if there is text","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"elhy1999"},"content":"        // coming after the word \"todo\"","lastModifiedDate":"2023-08-24"},{"lineNumber":117,"author":{"gitId":"elhy1999"},"content":"        if (!userInput.startsWith(CommandTypes.todo.toString())) {","lastModifiedDate":"2023-08-24"},{"lineNumber":118,"author":{"gitId":"elhy1999"},"content":"            throw new InvalidCommandTypeException();","lastModifiedDate":"2023-08-24"},{"lineNumber":119,"author":{"gitId":"elhy1999"},"content":"        } else if (userInput.substring(CommandTypes.todo.toString().length()).isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":120,"author":{"gitId":"elhy1999"},"content":"            throw new InvalidDescriptionException();","lastModifiedDate":"2023-08-24"},{"lineNumber":121,"author":{"gitId":"elhy1999"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":122,"author":{"gitId":"elhy1999"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":123,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":124,"author":{"gitId":"elhy1999"},"content":"    static void checkValidDeleteCommand(String userInput) throws InvalidCommandTypeException, InvalidDescriptionException {","lastModifiedDate":"2023-08-24"},{"lineNumber":125,"author":{"gitId":"elhy1999"},"content":"        // Checks if the user input command is a valid \"delete\" command","lastModifiedDate":"2023-08-24"},{"lineNumber":126,"author":{"gitId":"elhy1999"},"content":"        // by checking if the command starts with \"delete\", followed by a whitespace,","lastModifiedDate":"2023-08-24"},{"lineNumber":127,"author":{"gitId":"elhy1999"},"content":"        // followed by an integer from 1 to Task.getAllTasks().size()","lastModifiedDate":"2023-08-24"},{"lineNumber":128,"author":{"gitId":"elhy1999"},"content":"        String indexWithinList;","lastModifiedDate":"2023-08-24"},{"lineNumber":129,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":130,"author":{"gitId":"elhy1999"},"content":"        if (userInput.startsWith(CommandTypes.delete.toString())) {","lastModifiedDate":"2023-08-24"},{"lineNumber":131,"author":{"gitId":"elhy1999"},"content":"            indexWithinList \u003d userInput.substring(CommandTypes.delete.toString().length()).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":132,"author":{"gitId":"elhy1999"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":133,"author":{"gitId":"elhy1999"},"content":"            throw new InvalidCommandTypeException();","lastModifiedDate":"2023-08-24"},{"lineNumber":134,"author":{"gitId":"elhy1999"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":135,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":136,"author":{"gitId":"elhy1999"},"content":"        if (!checkStringIsInteger(indexWithinList)) {","lastModifiedDate":"2023-08-24"},{"lineNumber":137,"author":{"gitId":"elhy1999"},"content":"            throw new InvalidDescriptionException();","lastModifiedDate":"2023-08-24"},{"lineNumber":138,"author":{"gitId":"elhy1999"},"content":"        } else if (Integer.parseInt(indexWithinList) \u003c 1 | Integer.parseInt(indexWithinList) \u003e Task.getAllTasks().size()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":139,"author":{"gitId":"elhy1999"},"content":"            throw new InvalidDescriptionException();","lastModifiedDate":"2023-08-24"},{"lineNumber":140,"author":{"gitId":"elhy1999"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":141,"author":{"gitId":"elhy1999"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":142,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":143,"author":{"gitId":"elhy1999"},"content":"    static boolean checkStringIsInteger(String s) {","lastModifiedDate":"2023-08-23"},{"lineNumber":144,"author":{"gitId":"elhy1999"},"content":"        // Returns true if s can be parsed into an Integer object, and false otherwise","lastModifiedDate":"2023-08-23"},{"lineNumber":145,"author":{"gitId":"elhy1999"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":146,"author":{"gitId":"elhy1999"},"content":"            Integer i \u003d Integer.parseInt(s);","lastModifiedDate":"2023-08-23"},{"lineNumber":147,"author":{"gitId":"elhy1999"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":148,"author":{"gitId":"elhy1999"},"content":"            return false;","lastModifiedDate":"2023-08-23"},{"lineNumber":149,"author":{"gitId":"elhy1999"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":150,"author":{"gitId":"elhy1999"},"content":"        return true;","lastModifiedDate":"2023-08-23"},{"lineNumber":151,"author":{"gitId":"elhy1999"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":152,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":153,"author":{"gitId":"elhy1999"},"content":"    static String getCommandType(String userInput) throws InvalidCommandTypeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":154,"author":{"gitId":"elhy1999"},"content":"        // Returns the type of command input by the user","lastModifiedDate":"2023-08-23"},{"lineNumber":155,"author":{"gitId":"elhy1999"},"content":"        // Possible values: \"todo\", \"deadline\", \"event\", \"bye\", \"list\", \"mark\", \"unmark\"","lastModifiedDate":"2023-08-24"},{"lineNumber":156,"author":{"gitId":"elhy1999"},"content":"        for (CommandTypes type : CommandTypes.values()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":157,"author":{"gitId":"elhy1999"},"content":"            String typeString \u003d type.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":158,"author":{"gitId":"elhy1999"},"content":"            if (userInput.startsWith(typeString)) {","lastModifiedDate":"2023-08-24"},{"lineNumber":159,"author":{"gitId":"elhy1999"},"content":"                return typeString;","lastModifiedDate":"2023-08-24"},{"lineNumber":160,"author":{"gitId":"elhy1999"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":161,"author":{"gitId":"elhy1999"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":162,"author":{"gitId":"elhy1999"},"content":"        throw new InvalidCommandTypeException();","lastModifiedDate":"2023-08-24"},{"lineNumber":163,"author":{"gitId":"elhy1999"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":164,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":165,"author":{"gitId":"elhy1999"},"content":"    static void checkInvalidCommandTypeException(String userInput) {","lastModifiedDate":"2023-08-24"},{"lineNumber":166,"author":{"gitId":"elhy1999"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":167,"author":{"gitId":"elhy1999"},"content":"            String commandType \u003d getCommandType(userInput);","lastModifiedDate":"2023-08-24"},{"lineNumber":168,"author":{"gitId":"elhy1999"},"content":"        } catch (InvalidCommandTypeException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":169,"author":{"gitId":"elhy1999"},"content":"            printReply(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-24"},{"lineNumber":170,"author":{"gitId":"elhy1999"},"content":"            System.exit(0);","lastModifiedDate":"2023-08-24"},{"lineNumber":171,"author":{"gitId":"elhy1999"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":172,"author":{"gitId":"elhy1999"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":173,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":174,"author":{"gitId":"elhy1999"},"content":"    static void processListCommand() {","lastModifiedDate":"2023-08-23"},{"lineNumber":175,"author":{"gitId":"elhy1999"},"content":"        // EDIT","lastModifiedDate":"2023-08-23"},{"lineNumber":176,"author":{"gitId":"elhy1999"},"content":"        String allTasksString \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-08-23"},{"lineNumber":177,"author":{"gitId":"elhy1999"},"content":"        for (int i \u003d 0; i \u003c Task.getAllTasks().size(); i++) {","lastModifiedDate":"2023-08-23"},{"lineNumber":178,"author":{"gitId":"elhy1999"},"content":"            Task newTask \u003d Task.getAllTasks().get(i);","lastModifiedDate":"2023-08-23"},{"lineNumber":179,"author":{"gitId":"elhy1999"},"content":"            allTasksString +\u003d Integer.toString(i+1) + \".\" + newTask.toString() + \"\\n\";","lastModifiedDate":"2023-08-23"},{"lineNumber":180,"author":{"gitId":"elhy1999"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":181,"author":{"gitId":"elhy1999"},"content":"        printReply(allTasksString);","lastModifiedDate":"2023-08-23"},{"lineNumber":182,"author":{"gitId":"elhy1999"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":183,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":184,"author":{"gitId":"elhy1999"},"content":"    static void processMarkUnmarkCommand(String userInput) {","lastModifiedDate":"2023-08-23"},{"lineNumber":185,"author":{"gitId":"elhy1999"},"content":"        if (userInput.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":186,"author":{"gitId":"elhy1999"},"content":"            int indexToMark \u003d Integer.parseInt(userInput.substring(CommandTypes.mark.toString().length()).trim());","lastModifiedDate":"2023-08-24"},{"lineNumber":187,"author":{"gitId":"elhy1999"},"content":"            indexToMark -\u003d 1;","lastModifiedDate":"2023-08-23"},{"lineNumber":188,"author":{"gitId":"elhy1999"},"content":"            Task taskToMark \u003d Task.getAllTasks().get(indexToMark);","lastModifiedDate":"2023-08-23"},{"lineNumber":189,"author":{"gitId":"elhy1999"},"content":"            taskToMark.markAsDone();","lastModifiedDate":"2023-08-23"},{"lineNumber":190,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":191,"author":{"gitId":"elhy1999"},"content":"            // print message when marking as done","lastModifiedDate":"2023-08-23"},{"lineNumber":192,"author":{"gitId":"elhy1999"},"content":"            String message \u003d \"Nice! I\u0027ve marked this task as done:\\n  \" + taskToMark;","lastModifiedDate":"2023-08-23"},{"lineNumber":193,"author":{"gitId":"elhy1999"},"content":"            printReply(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":194,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":195,"author":{"gitId":"elhy1999"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":196,"author":{"gitId":"elhy1999"},"content":"            int indexToUnmark \u003d Integer.parseInt(userInput.substring(CommandTypes.unmark.toString().length()).trim());","lastModifiedDate":"2023-08-24"},{"lineNumber":197,"author":{"gitId":"elhy1999"},"content":"            indexToUnmark -\u003d 1;","lastModifiedDate":"2023-08-23"},{"lineNumber":198,"author":{"gitId":"elhy1999"},"content":"            Task taskToUnmark \u003d Task.getAllTasks().get(indexToUnmark);","lastModifiedDate":"2023-08-23"},{"lineNumber":199,"author":{"gitId":"elhy1999"},"content":"            taskToUnmark.markAsNotDone();","lastModifiedDate":"2023-08-23"},{"lineNumber":200,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":201,"author":{"gitId":"elhy1999"},"content":"            // print message when unmarking as done","lastModifiedDate":"2023-08-23"},{"lineNumber":202,"author":{"gitId":"elhy1999"},"content":"            String message \u003d \"[ ] \" + taskToUnmark;","lastModifiedDate":"2023-08-23"},{"lineNumber":203,"author":{"gitId":"elhy1999"},"content":"            message \u003d \"OK, I\u0027ve marked this task as not done yet:\\n\" + message;","lastModifiedDate":"2023-08-23"},{"lineNumber":204,"author":{"gitId":"elhy1999"},"content":"            printReply(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":205,"author":{"gitId":"elhy1999"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":206,"author":{"gitId":"elhy1999"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":207,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":208,"author":{"gitId":"elhy1999"},"content":"    static Task processAddTaskCommand(String userInput) {","lastModifiedDate":"2023-08-23"},{"lineNumber":209,"author":{"gitId":"elhy1999"},"content":"        Task newTask;","lastModifiedDate":"2023-08-23"},{"lineNumber":210,"author":{"gitId":"elhy1999"},"content":"        if (userInput.startsWith(\"todo \")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":211,"author":{"gitId":"elhy1999"},"content":"            newTask \u003d new Todo(userInput.substring(CommandTypes.todo.toString().length()+1)); // +1 because we do not want the task name to start from the space character","lastModifiedDate":"2023-08-24"},{"lineNumber":212,"author":{"gitId":"elhy1999"},"content":"        } else if (userInput.startsWith(\"deadline \")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":213,"author":{"gitId":"elhy1999"},"content":"            userInput \u003d userInput.substring(CommandTypes.deadline.toString().length()+1); // +1 because we do not want the task name to start from the space character","lastModifiedDate":"2023-08-24"},{"lineNumber":214,"author":{"gitId":"elhy1999"},"content":"            String[] splitUserInput \u003d userInput.split(\" /\");","lastModifiedDate":"2023-08-23"},{"lineNumber":215,"author":{"gitId":"elhy1999"},"content":"            newTask \u003d new Deadline(","lastModifiedDate":"2023-08-23"},{"lineNumber":216,"author":{"gitId":"elhy1999"},"content":"                    splitUserInput[0],","lastModifiedDate":"2023-08-23"},{"lineNumber":217,"author":{"gitId":"elhy1999"},"content":"                    splitUserInput[1].replace(\"by \", \"\")","lastModifiedDate":"2023-08-23"},{"lineNumber":218,"author":{"gitId":"elhy1999"},"content":"            );","lastModifiedDate":"2023-08-23"},{"lineNumber":219,"author":{"gitId":"elhy1999"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":220,"author":{"gitId":"elhy1999"},"content":"            userInput \u003d userInput.substring(CommandTypes.event.toString().length()+1); // +1 because we do not want the task name to start from the space character","lastModifiedDate":"2023-08-24"},{"lineNumber":221,"author":{"gitId":"elhy1999"},"content":"            String[] splitUserInput \u003d userInput.split(\" /\");","lastModifiedDate":"2023-08-23"},{"lineNumber":222,"author":{"gitId":"elhy1999"},"content":"            newTask \u003d new Event(","lastModifiedDate":"2023-08-23"},{"lineNumber":223,"author":{"gitId":"elhy1999"},"content":"                    splitUserInput[0],","lastModifiedDate":"2023-08-23"},{"lineNumber":224,"author":{"gitId":"elhy1999"},"content":"                    splitUserInput[1].replace(\"from \", \"\"),","lastModifiedDate":"2023-08-23"},{"lineNumber":225,"author":{"gitId":"elhy1999"},"content":"                    splitUserInput[2].replace(\"to \", \"\")","lastModifiedDate":"2023-08-23"},{"lineNumber":226,"author":{"gitId":"elhy1999"},"content":"            );","lastModifiedDate":"2023-08-23"},{"lineNumber":227,"author":{"gitId":"elhy1999"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":228,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":229,"author":{"gitId":"elhy1999"},"content":"        printReply(\"Got it. I\u0027ve added this task:\\n  \" + newTask.toString() + \"\\nNow you have \" + Task.getAllTasks().size() + \" task(s) in the list.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":230,"author":{"gitId":"elhy1999"},"content":"        return newTask;","lastModifiedDate":"2023-08-23"},{"lineNumber":231,"author":{"gitId":"elhy1999"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":232,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":233,"author":{"gitId":"elhy1999"},"content":"    static void processDeleteCommand(String userInput) {","lastModifiedDate":"2023-08-24"},{"lineNumber":234,"author":{"gitId":"elhy1999"},"content":"        int indexToDelete \u003d Integer.parseInt(userInput.substring(CommandTypes.delete.toString().length()).trim());","lastModifiedDate":"2023-08-24"},{"lineNumber":235,"author":{"gitId":"elhy1999"},"content":"        indexToDelete -\u003d 1; // subtract 1 as the arraylist is zero-indexed","lastModifiedDate":"2023-08-24"},{"lineNumber":236,"author":{"gitId":"elhy1999"},"content":"        Task removedTask \u003d Task.removeTask(indexToDelete);","lastModifiedDate":"2023-08-24"},{"lineNumber":237,"author":{"gitId":"elhy1999"},"content":"        printReply(\"Noted. I\u0027ve removed this task:\\n  \" + removedTask.toString() + \"\\nNow you have \" + Task.getAllTasks().size() + \" task(s) in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":238,"author":{"gitId":"elhy1999"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":239,"author":{"gitId":"elhy1999"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"elhy1999":239}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elhy1999"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"elhy1999"},"content":"    Todo(String name) {","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"elhy1999"},"content":"        super(name);","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"elhy1999"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"elhy1999"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"elhy1999"},"content":"    String getTaskType() {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"elhy1999"},"content":"        return \"Todo\";","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"elhy1999"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"elhy1999"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"elhy1999"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"elhy1999"},"content":"        return \"[T][\" + (this.getDone() ? \u0027X\u0027 : \u0027 \u0027) + \"] \" + this.name;","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"elhy1999"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"elhy1999"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"elhy1999":15}},{"path":"text-ui-test/EXPECTED2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"elhy1999"},"content":"--------------------","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"elhy1999"},"content":"Hello I\u0027m TaskMate","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"elhy1999"},"content":"What can I do for you?","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"elhy1999"},"content":"--------------------","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"elhy1999"},"content":"--------------------","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"elhy1999"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"elhy1999"},"content":"  [T][ ] read book","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"elhy1999"},"content":"Now you have 1 task(s) in the list.","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"elhy1999"},"content":"--------------------","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"elhy1999"},"content":"--------------------","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"elhy1999"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"elhy1999"},"content":"  [D][ ] return book (by: June 6th)","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"elhy1999"},"content":"Now you have 2 task(s) in the list.","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"elhy1999"},"content":"--------------------","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"elhy1999"},"content":"--------------------","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"elhy1999"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"elhy1999"},"content":"  [E][ ] project meeting (from: Aug 6th 2pm to: 4pm)","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"elhy1999"},"content":"Now you have 3 task(s) in the list.","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"elhy1999"},"content":"--------------------","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"elhy1999"},"content":"--------------------","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"elhy1999"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"elhy1999"},"content":"  [T][X] read book","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"elhy1999"},"content":"--------------------","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"elhy1999"},"content":"--------------------","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"elhy1999"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"elhy1999"},"content":"  [D][X] return book (by: June 6th)","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"elhy1999"},"content":"--------------------","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"elhy1999"},"content":"--------------------","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"elhy1999"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"elhy1999"},"content":"  [E][X] project meeting (from: Aug 6th 2pm to: 4pm)","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"elhy1999"},"content":"--------------------","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"elhy1999"},"content":"--------------------","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"elhy1999"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"elhy1999"},"content":"[ ] [E][ ] project meeting (from: Aug 6th 2pm to: 4pm)","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"elhy1999"},"content":"--------------------","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"elhy1999"},"content":"--------------------","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"elhy1999"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"elhy1999"},"content":"  [T][ ] join sports club","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"elhy1999"},"content":"Now you have 4 task(s) in the list.","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"elhy1999"},"content":"--------------------","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"elhy1999"},"content":"--------------------","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"elhy1999"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"elhy1999"},"content":"  [T][ ] borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"elhy1999"},"content":"Now you have 5 task(s) in the list.","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"elhy1999"},"content":"--------------------","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"elhy1999"},"content":"--------------------","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"elhy1999"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"elhy1999"},"content":"1.[T][X] read book","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"elhy1999"},"content":"2.[D][X] return book (by: June 6th)","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"elhy1999"},"content":"3.[E][ ] project meeting (from: Aug 6th 2pm to: 4pm)","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"elhy1999"},"content":"4.[T][ ] join sports club","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"elhy1999"},"content":"5.[T][ ] borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"elhy1999"},"content":"--------------------","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"elhy1999"},"content":"--------------------","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"elhy1999"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"elhy1999"},"content":"  [T][X] join sports club","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"elhy1999"},"content":"--------------------","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"elhy1999"},"content":"--------------------","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"elhy1999"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"elhy1999"},"content":"1.[T][X] read book","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"elhy1999"},"content":"2.[D][X] return book (by: June 6th)","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"elhy1999"},"content":"3.[E][ ] project meeting (from: Aug 6th 2pm to: 4pm)","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"elhy1999"},"content":"4.[T][X] join sports club","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"elhy1999"},"content":"5.[T][ ] borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"elhy1999"},"content":"--------------------","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"elhy1999"},"content":"--------------------","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"elhy1999"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"elhy1999"},"content":"  [E][ ] project meeting (from: Aug 6th 2pm to: 4pm)","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"elhy1999"},"content":"Now you have 4 task(s) in the list.","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"elhy1999"},"content":"--------------------","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"elhy1999"},"content":"--------------------","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"elhy1999"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"elhy1999"},"content":"1.[T][X] read book","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"elhy1999"},"content":"2.[D][X] return book (by: June 6th)","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"elhy1999"},"content":"3.[T][X] join sports club","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"elhy1999"},"content":"4.[T][ ] borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"elhy1999"},"content":"--------------------","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"elhy1999"},"content":"--------------------","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"elhy1999"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"elhy1999"},"content":"--------------------","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"elhy1999":99}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"elhy1999"},"content":"todo read book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"elhy1999"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"elhy1999"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"elhy1999"},"content":"todo join sports club","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"elhy1999"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"elhy1999"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"elhy1999"},"content":"mark 4","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"elhy1999"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"elhy1999"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"elhy1999"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"elhy1999"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"elhy1999"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"elhy1999"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"elhy1999":13}},{"path":"text-ui-test/input2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"elhy1999"},"content":"todo read book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"elhy1999"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"elhy1999"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"elhy1999"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"elhy1999"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"elhy1999"},"content":"mark 3","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"elhy1999"},"content":"unmark 3","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"elhy1999"},"content":"todo join sports club","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"elhy1999"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"elhy1999"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"elhy1999"},"content":"mark 4","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"elhy1999"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"elhy1999"},"content":"delete 3","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"elhy1999"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"elhy1999"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"elhy1999":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"elhy1999"},"content":"java -classpath ..\\bin TaskMate \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"elhy1999":1}},{"path":"text-ui-test/runtest2.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"elhy1999"},"content":"@ECHO OFF","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"elhy1999"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"elhy1999"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"elhy1999"},"content":"REM delete output from previous run","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"elhy1999"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"elhy1999"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"elhy1999"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"elhy1999"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"elhy1999"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"elhy1999"},"content":"    exit /b 1","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"elhy1999"},"content":")","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"elhy1999"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"elhy1999"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"elhy1999"},"content":"java -classpath ..\\bin TaskMate \u003c input2.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"elhy1999"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"elhy1999"},"content":"REM compare the output to the expected output","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"elhy1999"},"content":"FC ACTUAL.TXT EXPECTED2.TXT","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"elhy1999":21}}]
