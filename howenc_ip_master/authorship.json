[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"# duke project template","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"3. After that, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"howenc":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"    implementation \u0027junit:junit:4.13.1\u0027","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"    implementation \u0027junit:junit:4.13.1\u0027","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"    implementation \u0027junit:junit:4.13.1\u0027","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"    archiveFileName \u003d \"duke.jar\"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"howenc":5,"-":41}},{"path":"src/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"todo CS2103T A-JUnit","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"howenc":1}},{"path":"src/main/java/command/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import task.ListOfTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import dukeExceptions.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"public class Commands {","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"     * List of both primary and secondary commands.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"    public enum COMMANDS {BYE, LIST, TODO, DEADLINE, EVENT, MARK, UNMARK, DELETE, BY, FROM, TO, SORT, FIND, UNKNOWN}","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"    private COMMANDS state;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"    private String name;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"    private int index;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"     * Construct a Commands object with only the primary command.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"     * @param command The command or action given by the Parse object.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"    public static Commands of(COMMANDS command) {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"        return new Commands(command);","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"     * Construct a Commands object with both a primary command and task description.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"     * @param command The command or action given by the Parse object.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"     * @param task The task name or description.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"    public static Commands of(COMMANDS command, String task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"        return new Commands(command, task);","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"     * Construct a Commands object with both a primary command and the index of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"     * @param command The command or action given by the Parse object.","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"     * @param index The index of the task that the command should act on.","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"    public static Commands of(COMMANDS command, int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"        return new Commands(command, index);","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"     * Construct a Commands object with both a primary command and the index of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"     * @param command The command or action given by the Parse object.","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"     * @param dateTime The date and time of a command giving in the format of \u0027dd-MM-yyyy HHmm\u0027.","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"    public static Commands of(COMMANDS command, LocalDateTime dateTime) {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"        return new Commands(command, dateTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"     * Construct a Commands object with both a primary command and the index of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"     * @param command The command or action given by the Parse object.","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"     * @param task The task name or description.","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"     * @param secondaryCommand A sub-command that supplements the main command.","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"howenc"},"content":"    public static Commands of(COMMANDS command, String task, Commands secondaryCommand) {","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"howenc"},"content":"        return new Commands.TwoCommands(command, task, secondaryCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"howenc"},"content":"     * Construct a Commands object with both a primary command and the index of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"howenc"},"content":"     * @param command The command or action given by the Parse object.","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"howenc"},"content":"     * @param task The task name or description.","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"howenc"},"content":"     * @param secondaryCommand A sub-command that supplements the main command.","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"howenc"},"content":"     * @param tertiaryCommand A sub-command that supplements the main command and comes after the secondaryCommand.","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"howenc"},"content":"    public static Commands of(COMMANDS command, String task, Commands secondaryCommand, Commands tertiaryCommand) {","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"howenc"},"content":"        return new Commands.ThreeCommands(command, task, secondaryCommand, tertiaryCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"howenc"},"content":"    private Commands(COMMANDS command) {","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"howenc"},"content":"        this.state \u003d command;","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"howenc"},"content":"    private Commands(COMMANDS command, String task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"howenc"},"content":"        this.state \u003d command;","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"howenc"},"content":"        this.name \u003d task;","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"howenc"},"content":"    private Commands(COMMANDS command, int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"howenc"},"content":"        this.state \u003d command;","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"howenc"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"howenc"},"content":"    private Commands(COMMANDS command, LocalDateTime dateTime) {","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"howenc"},"content":"        this.state \u003d command;","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"howenc"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"howenc"},"content":"     * Check if this object\u0027s COMMANDS is the same as command.","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"howenc"},"content":"     * @param command The COMMANDS enum that you want to compare","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"howenc"},"content":"     * @return Returns true same, false otherwise.","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"howenc"},"content":"    public boolean checkCommand(COMMANDS command) {","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"howenc"},"content":"        if (this.state \u003d\u003d command) {","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"howenc"},"content":"            return true;","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"howenc"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"howenc"},"content":"     * Executes the action or throws a DukeException.","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"howenc"},"content":"     * @param taskList The list of tasks that the action will be executed in.","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"howenc"},"content":"     * @param lineNumber Line Number of the command when reading from the save file.","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"howenc"},"content":"     * @param error The command reading from the save file.","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"howenc"},"content":"     * @return Returns 0 if the \u0027bye\u0027 command is executed, returns 1 if any other command is successfully executed.","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"howenc"},"content":"     * @throws DukeException The exception thrown when encountering any problems in executing.","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"howenc"},"content":"    public int execute(ListOfTask taskList, int lineNumber, String error) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"howenc"},"content":"        boolean load \u003d true;","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"howenc"},"content":"        if (lineNumber \u003d\u003d 0 \u0026\u0026 error \u003d\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"howenc"},"content":"            load \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"howenc"},"content":"            switch (this.state) {","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"howenc"},"content":"            case BYE:","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"howenc"},"content":"                return 0;","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"howenc"},"content":"            case LIST:","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"howenc"},"content":"                taskList.listTasks();","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"howenc"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":130,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"howenc"},"content":"            case TODO:","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"howenc"},"content":"                if (!load) {","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"howenc"},"content":"                    taskList.addTask(this.name, true);","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"howenc"},"content":"                } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"howenc"},"content":"                    taskList.addTask(this.name, false);","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"howenc"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"howenc"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":139,"author":{"gitId":"howenc"},"content":"            case FIND:","lastModifiedDate":"2023-08-29"},{"lineNumber":140,"author":{"gitId":"howenc"},"content":"                //taskList.find(this.name);","lastModifiedDate":"2023-08-29"},{"lineNumber":141,"author":{"gitId":"howenc"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":143,"author":{"gitId":"howenc"},"content":"            case SORT:","lastModifiedDate":"2023-08-29"},{"lineNumber":144,"author":{"gitId":"howenc"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":145,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":146,"author":{"gitId":"howenc"},"content":"            case MARK:","lastModifiedDate":"2023-08-29"},{"lineNumber":147,"author":{"gitId":"howenc"},"content":"                if (!load) {","lastModifiedDate":"2023-08-30"},{"lineNumber":148,"author":{"gitId":"howenc"},"content":"                    taskList.mark(this.index, true);","lastModifiedDate":"2023-08-30"},{"lineNumber":149,"author":{"gitId":"howenc"},"content":"                } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"howenc"},"content":"                    taskList.mark(this.index, false);","lastModifiedDate":"2023-08-30"},{"lineNumber":151,"author":{"gitId":"howenc"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":152,"author":{"gitId":"howenc"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":153,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":154,"author":{"gitId":"howenc"},"content":"            case UNMARK:","lastModifiedDate":"2023-08-29"},{"lineNumber":155,"author":{"gitId":"howenc"},"content":"                if (!load) {","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"howenc"},"content":"                    taskList.unMark(this.index, true);","lastModifiedDate":"2023-08-30"},{"lineNumber":157,"author":{"gitId":"howenc"},"content":"                } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"howenc"},"content":"                    taskList.unMark(this.index, false);","lastModifiedDate":"2023-08-30"},{"lineNumber":159,"author":{"gitId":"howenc"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"howenc"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":161,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":162,"author":{"gitId":"howenc"},"content":"            case DELETE:","lastModifiedDate":"2023-08-29"},{"lineNumber":163,"author":{"gitId":"howenc"},"content":"                if (!load) {","lastModifiedDate":"2023-08-30"},{"lineNumber":164,"author":{"gitId":"howenc"},"content":"                    taskList.delete(this.index, true);","lastModifiedDate":"2023-08-30"},{"lineNumber":165,"author":{"gitId":"howenc"},"content":"                } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":166,"author":{"gitId":"howenc"},"content":"                    taskList.delete(this.index, false);","lastModifiedDate":"2023-08-30"},{"lineNumber":167,"author":{"gitId":"howenc"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":168,"author":{"gitId":"howenc"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":169,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":170,"author":{"gitId":"howenc"},"content":"        return 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":171,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":172,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":173,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":174,"author":{"gitId":"howenc"},"content":"     * Compares LocalDateTime between this object and c.","lastModifiedDate":"2023-08-31"},{"lineNumber":175,"author":{"gitId":"howenc"},"content":"     * @param c Commands object to be compared to.","lastModifiedDate":"2023-08-31"},{"lineNumber":176,"author":{"gitId":"howenc"},"content":"     * @return Returns true if this object\u0027s time is before c\u0027s time, false for all other cases.","lastModifiedDate":"2023-08-31"},{"lineNumber":177,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":178,"author":{"gitId":"howenc"},"content":"    public boolean compareTime(Commands c) {","lastModifiedDate":"2023-08-29"},{"lineNumber":179,"author":{"gitId":"howenc"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":180,"author":{"gitId":"howenc"},"content":"            if (this.dateTime.isBefore(c.dateTime)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":181,"author":{"gitId":"howenc"},"content":"                return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":182,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":183,"author":{"gitId":"howenc"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":184,"author":{"gitId":"howenc"},"content":"            return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":185,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":186,"author":{"gitId":"howenc"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":187,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":188,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":189,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":190,"author":{"gitId":"howenc"},"content":"     * Compares this object to another object.","lastModifiedDate":"2023-08-31"},{"lineNumber":191,"author":{"gitId":"howenc"},"content":"     * @param obj An object.","lastModifiedDate":"2023-08-31"},{"lineNumber":192,"author":{"gitId":"howenc"},"content":"     * @return Returns true if both objects are equivalent, false if otherwise.","lastModifiedDate":"2023-08-31"},{"lineNumber":193,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":194,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":195,"author":{"gitId":"howenc"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-08-30"},{"lineNumber":196,"author":{"gitId":"howenc"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2023-08-30"},{"lineNumber":197,"author":{"gitId":"howenc"},"content":"            return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":198,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":199,"author":{"gitId":"howenc"},"content":"        if (obj instanceof Commands) {","lastModifiedDate":"2023-08-30"},{"lineNumber":200,"author":{"gitId":"howenc"},"content":"            Commands b \u003d (Commands) obj;","lastModifiedDate":"2023-08-30"},{"lineNumber":201,"author":{"gitId":"howenc"},"content":"            if (b.state \u003d\u003d this.state \u0026\u0026 b.dateTime \u003d\u003d this.dateTime \u0026\u0026 b.index \u003d\u003d this.index \u0026\u0026 b.name \u003d\u003d this.name) {","lastModifiedDate":"2023-08-30"},{"lineNumber":202,"author":{"gitId":"howenc"},"content":"                return true;","lastModifiedDate":"2023-08-29"},{"lineNumber":203,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":204,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":205,"author":{"gitId":"howenc"},"content":"        return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":206,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":207,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":208,"author":{"gitId":"howenc"},"content":"    private static class TwoCommands extends Commands {","lastModifiedDate":"2023-08-31"},{"lineNumber":209,"author":{"gitId":"howenc"},"content":"        private COMMANDS state2;","lastModifiedDate":"2023-08-29"},{"lineNumber":210,"author":{"gitId":"howenc"},"content":"        private String name2;","lastModifiedDate":"2023-08-29"},{"lineNumber":211,"author":{"gitId":"howenc"},"content":"        private Commands secondaryCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":212,"author":{"gitId":"howenc"},"content":"        private TwoCommands(COMMANDS command, String str, COMMANDS command2, String str2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":213,"author":{"gitId":"howenc"},"content":"            super(command, str);","lastModifiedDate":"2023-08-29"},{"lineNumber":214,"author":{"gitId":"howenc"},"content":"            this.state2 \u003d command2;","lastModifiedDate":"2023-08-29"},{"lineNumber":215,"author":{"gitId":"howenc"},"content":"            this.name2 \u003d str2;","lastModifiedDate":"2023-08-29"},{"lineNumber":216,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":217,"author":{"gitId":"howenc"},"content":"        private TwoCommands(COMMANDS command, String str, Commands secondaryCommand) {","lastModifiedDate":"2023-08-31"},{"lineNumber":218,"author":{"gitId":"howenc"},"content":"            super(command,str);","lastModifiedDate":"2023-08-29"},{"lineNumber":219,"author":{"gitId":"howenc"},"content":"            this.secondaryCommand \u003d secondaryCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":220,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":221,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":222,"author":{"gitId":"howenc"},"content":"        /**","lastModifiedDate":"2023-08-31"},{"lineNumber":223,"author":{"gitId":"howenc"},"content":"         * Executes the action or throws a DukeException.","lastModifiedDate":"2023-08-31"},{"lineNumber":224,"author":{"gitId":"howenc"},"content":"         * @param taskList The list of tasks that the action will be executed in.","lastModifiedDate":"2023-08-31"},{"lineNumber":225,"author":{"gitId":"howenc"},"content":"         * @param lineNumber Line Number of the command when reading from the save file.","lastModifiedDate":"2023-08-31"},{"lineNumber":226,"author":{"gitId":"howenc"},"content":"         * @param error The command reading from the save file.","lastModifiedDate":"2023-08-31"},{"lineNumber":227,"author":{"gitId":"howenc"},"content":"         * @return Returns 0 if the \u0027bye\u0027 command is executed, returns 1 if any other command is successfully executed.","lastModifiedDate":"2023-08-31"},{"lineNumber":228,"author":{"gitId":"howenc"},"content":"         * @throws DukeException The exception thrown when encountering any problems in executing.","lastModifiedDate":"2023-08-31"},{"lineNumber":229,"author":{"gitId":"howenc"},"content":"         */","lastModifiedDate":"2023-08-31"},{"lineNumber":230,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":231,"author":{"gitId":"howenc"},"content":"        public int execute(ListOfTask taskList, int lineNumber, String error) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":232,"author":{"gitId":"howenc"},"content":"            boolean load \u003d true;","lastModifiedDate":"2023-08-30"},{"lineNumber":233,"author":{"gitId":"howenc"},"content":"            if (lineNumber \u003d\u003d 0 \u0026\u0026 error \u003d\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":234,"author":{"gitId":"howenc"},"content":"                load \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":235,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":236,"author":{"gitId":"howenc"},"content":"            switch (super.state) {","lastModifiedDate":"2023-08-29"},{"lineNumber":237,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":238,"author":{"gitId":"howenc"},"content":"            case DEADLINE:","lastModifiedDate":"2023-08-29"},{"lineNumber":239,"author":{"gitId":"howenc"},"content":"                if (!load) {","lastModifiedDate":"2023-08-30"},{"lineNumber":240,"author":{"gitId":"howenc"},"content":"                    taskList.addTask(super.name, this.secondaryCommand.dateTime, true);","lastModifiedDate":"2023-08-30"},{"lineNumber":241,"author":{"gitId":"howenc"},"content":"                } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":242,"author":{"gitId":"howenc"},"content":"                    taskList.addTask(super.name, this.secondaryCommand.dateTime, false);","lastModifiedDate":"2023-08-30"},{"lineNumber":243,"author":{"gitId":"howenc"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":244,"author":{"gitId":"howenc"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":245,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":246,"author":{"gitId":"howenc"},"content":"            return 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":247,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":248,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":249,"author":{"gitId":"howenc"},"content":"        /**","lastModifiedDate":"2023-08-31"},{"lineNumber":250,"author":{"gitId":"howenc"},"content":"         * Compares this object to another object.","lastModifiedDate":"2023-08-31"},{"lineNumber":251,"author":{"gitId":"howenc"},"content":"         * @param obj An object.","lastModifiedDate":"2023-08-31"},{"lineNumber":252,"author":{"gitId":"howenc"},"content":"         * @return Returns true if both objects are equivalent, false if otherwise.","lastModifiedDate":"2023-08-31"},{"lineNumber":253,"author":{"gitId":"howenc"},"content":"         */","lastModifiedDate":"2023-08-31"},{"lineNumber":254,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":255,"author":{"gitId":"howenc"},"content":"        public boolean equals(Object obj) {","lastModifiedDate":"2023-08-30"},{"lineNumber":256,"author":{"gitId":"howenc"},"content":"            if (this \u003d\u003d obj) {","lastModifiedDate":"2023-08-30"},{"lineNumber":257,"author":{"gitId":"howenc"},"content":"                return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":258,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":259,"author":{"gitId":"howenc"},"content":"            if (obj instanceof Commands.TwoCommands) {","lastModifiedDate":"2023-08-30"},{"lineNumber":260,"author":{"gitId":"howenc"},"content":"                Commands.TwoCommands b \u003d (Commands.TwoCommands) obj;","lastModifiedDate":"2023-08-30"},{"lineNumber":261,"author":{"gitId":"howenc"},"content":"                if (super.equals(b) \u0026\u0026 b.state2 \u003d\u003d this.state2 \u0026\u0026 this.name2.equals(b.name2) \u0026\u0026 this.secondaryCommand.equals(b.secondaryCommand)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":262,"author":{"gitId":"howenc"},"content":"                    return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":263,"author":{"gitId":"howenc"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":264,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":265,"author":{"gitId":"howenc"},"content":"            return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":266,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":267,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":268,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":269,"author":{"gitId":"howenc"},"content":"    private static class ThreeCommands extends Commands {","lastModifiedDate":"2023-08-31"},{"lineNumber":270,"author":{"gitId":"howenc"},"content":"        private COMMANDS state2;","lastModifiedDate":"2023-08-29"},{"lineNumber":271,"author":{"gitId":"howenc"},"content":"        private String name2;","lastModifiedDate":"2023-08-29"},{"lineNumber":272,"author":{"gitId":"howenc"},"content":"        private COMMANDS state3;","lastModifiedDate":"2023-08-29"},{"lineNumber":273,"author":{"gitId":"howenc"},"content":"        private String name3;","lastModifiedDate":"2023-08-29"},{"lineNumber":274,"author":{"gitId":"howenc"},"content":"        private Commands phaseTwo;","lastModifiedDate":"2023-08-29"},{"lineNumber":275,"author":{"gitId":"howenc"},"content":"        private Commands phaseThree;","lastModifiedDate":"2023-08-29"},{"lineNumber":276,"author":{"gitId":"howenc"},"content":"        private ThreeCommands(COMMANDS command, String str, COMMANDS command2, String str2, COMMANDS command3, String str3) {","lastModifiedDate":"2023-08-31"},{"lineNumber":277,"author":{"gitId":"howenc"},"content":"            super(command,str);","lastModifiedDate":"2023-08-29"},{"lineNumber":278,"author":{"gitId":"howenc"},"content":"            this.state2 \u003d command2;","lastModifiedDate":"2023-08-29"},{"lineNumber":279,"author":{"gitId":"howenc"},"content":"            this.name2 \u003d str2;","lastModifiedDate":"2023-08-29"},{"lineNumber":280,"author":{"gitId":"howenc"},"content":"            this.state3 \u003d command3;","lastModifiedDate":"2023-08-29"},{"lineNumber":281,"author":{"gitId":"howenc"},"content":"            this.name3 \u003d str3;","lastModifiedDate":"2023-08-29"},{"lineNumber":282,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":283,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":284,"author":{"gitId":"howenc"},"content":"        private ThreeCommands(COMMANDS command, String str, Commands phaseTwo, Commands phaseThree) {","lastModifiedDate":"2023-08-31"},{"lineNumber":285,"author":{"gitId":"howenc"},"content":"            super(command,str);","lastModifiedDate":"2023-08-29"},{"lineNumber":286,"author":{"gitId":"howenc"},"content":"            this.phaseTwo \u003d phaseTwo;","lastModifiedDate":"2023-08-29"},{"lineNumber":287,"author":{"gitId":"howenc"},"content":"            this.phaseThree \u003d phaseThree;","lastModifiedDate":"2023-08-29"},{"lineNumber":288,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":289,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":290,"author":{"gitId":"howenc"},"content":"        /**","lastModifiedDate":"2023-08-31"},{"lineNumber":291,"author":{"gitId":"howenc"},"content":"         * Executes the action or throws a DukeException.","lastModifiedDate":"2023-08-31"},{"lineNumber":292,"author":{"gitId":"howenc"},"content":"         * @param taskList The list of tasks that the action will be executed in.","lastModifiedDate":"2023-08-31"},{"lineNumber":293,"author":{"gitId":"howenc"},"content":"         * @param lineNumber Line Number of the command when reading from the save file.","lastModifiedDate":"2023-08-31"},{"lineNumber":294,"author":{"gitId":"howenc"},"content":"         * @param error The command reading from the save file.","lastModifiedDate":"2023-08-31"},{"lineNumber":295,"author":{"gitId":"howenc"},"content":"         * @return Returns 0 if the \u0027bye\u0027 command is executed, returns 1 if any other command is successfully executed.","lastModifiedDate":"2023-08-31"},{"lineNumber":296,"author":{"gitId":"howenc"},"content":"         * @throws DukeException The exception thrown when encountering any problems in executing.","lastModifiedDate":"2023-08-31"},{"lineNumber":297,"author":{"gitId":"howenc"},"content":"         */","lastModifiedDate":"2023-08-31"},{"lineNumber":298,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":299,"author":{"gitId":"howenc"},"content":"        public int execute(ListOfTask taskList, int lineNumber, String error) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":300,"author":{"gitId":"howenc"},"content":"            boolean load \u003d true;","lastModifiedDate":"2023-08-30"},{"lineNumber":301,"author":{"gitId":"howenc"},"content":"            if (lineNumber \u003d\u003d 0 \u0026\u0026 error \u003d\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":302,"author":{"gitId":"howenc"},"content":"                load \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":303,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":304,"author":{"gitId":"howenc"},"content":"            switch (super.state) {","lastModifiedDate":"2023-08-29"},{"lineNumber":305,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":306,"author":{"gitId":"howenc"},"content":"            case EVENT:","lastModifiedDate":"2023-08-29"},{"lineNumber":307,"author":{"gitId":"howenc"},"content":"                if (!load) {","lastModifiedDate":"2023-08-30"},{"lineNumber":308,"author":{"gitId":"howenc"},"content":"                    taskList.addTask(super.name, this.phaseTwo.dateTime, this.phaseThree.dateTime, true);","lastModifiedDate":"2023-08-30"},{"lineNumber":309,"author":{"gitId":"howenc"},"content":"                } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":310,"author":{"gitId":"howenc"},"content":"                    taskList.addTask(super.name, this.phaseTwo.dateTime, this.phaseThree.dateTime, false);","lastModifiedDate":"2023-08-30"},{"lineNumber":311,"author":{"gitId":"howenc"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":312,"author":{"gitId":"howenc"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":313,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":314,"author":{"gitId":"howenc"},"content":"            return 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":315,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":316,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":317,"author":{"gitId":"howenc"},"content":"        /**","lastModifiedDate":"2023-08-31"},{"lineNumber":318,"author":{"gitId":"howenc"},"content":"         * Compares this object to another object.","lastModifiedDate":"2023-08-31"},{"lineNumber":319,"author":{"gitId":"howenc"},"content":"         * @param obj An object.","lastModifiedDate":"2023-08-31"},{"lineNumber":320,"author":{"gitId":"howenc"},"content":"         * @return Returns true if both objects are equivalent, false if otherwise.","lastModifiedDate":"2023-08-31"},{"lineNumber":321,"author":{"gitId":"howenc"},"content":"         */","lastModifiedDate":"2023-08-31"},{"lineNumber":322,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":323,"author":{"gitId":"howenc"},"content":"        public boolean equals(Object obj) {","lastModifiedDate":"2023-08-30"},{"lineNumber":324,"author":{"gitId":"howenc"},"content":"            if (this \u003d\u003d obj) {","lastModifiedDate":"2023-08-30"},{"lineNumber":325,"author":{"gitId":"howenc"},"content":"                return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":326,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":327,"author":{"gitId":"howenc"},"content":"            if (obj instanceof Commands.ThreeCommands) {","lastModifiedDate":"2023-08-30"},{"lineNumber":328,"author":{"gitId":"howenc"},"content":"                Commands.ThreeCommands b \u003d (Commands.ThreeCommands) obj;","lastModifiedDate":"2023-08-30"},{"lineNumber":329,"author":{"gitId":"howenc"},"content":"                if (super.equals(b) \u0026\u0026 b.state2 \u003d\u003d this.state2 \u0026\u0026 this.name2.equals(b.name2)","lastModifiedDate":"2023-08-30"},{"lineNumber":330,"author":{"gitId":"howenc"},"content":"                        \u0026\u0026 b.state3 \u003d\u003d this.state3 \u0026\u0026 this.name3.equals(b.name3)","lastModifiedDate":"2023-08-30"},{"lineNumber":331,"author":{"gitId":"howenc"},"content":"                        \u0026\u0026 this.phaseTwo.equals(b.phaseTwo) \u0026\u0026 this.phaseThree.equals(b.phaseThree)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":332,"author":{"gitId":"howenc"},"content":"                    return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":333,"author":{"gitId":"howenc"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":334,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":335,"author":{"gitId":"howenc"},"content":"            return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":336,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":337,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":338,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"howenc":338}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import command.Commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import dukeExceptions.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import parser.Parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"import storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"import task.ListOfTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"import ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"    public static DateTimeFormatter FORMAT \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"    private static ListOfTask taskList \u003d new ListOfTask();","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"    private static Ui ui \u003d new Ui();","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"     * This starts the Duke chatbot.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"     * @param args Does nothing","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"        greet();","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"    private static void greet() {","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"        if (!Storage.load(taskList, 1)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"            return;","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"        ui.greet();","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"        nextCommand(ui.nextInput());","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"    private static void nextCommand(String command) {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"            Parser cmd \u003d new Parser(command);","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"            Commands action \u003d cmd.parse();","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"            if (action.execute(taskList, 0, null) \u003d\u003d 1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"                nextCommand(ui.nextInput());","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"            } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"                ui.exit();","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"            nextCommand(ui.nextInput());","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"howenc":46,"-":2}},{"path":"src/main/java/dukeExceptions/DukeDateTimeParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package dukeExceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"public class DukeDateTimeParseException extends DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"    public DukeDateTimeParseException(String message) {","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"        super(message);","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"howenc":7}},{"path":"src/main/java/dukeExceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package dukeExceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"        super(message);","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"howenc":8}},{"path":"src/main/java/dukeExceptions/DukeFromEarlierThanToException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package dukeExceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"public class DukeFromEarlierThanToException extends DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"    public DukeFromEarlierThanToException(String message) {","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"        super(message);","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"howenc":7}},{"path":"src/main/java/dukeExceptions/DukeNullPointerException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package dukeExceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"public class DukeNullPointerException extends DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"    public DukeNullPointerException(String message) {","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"        super(message);","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"howenc":7}},{"path":"src/main/java/dukeExceptions/DukeNumberFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package dukeExceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"public class DukeNumberFormatException extends DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"    public DukeNumberFormatException(String message) {","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"        super(message);","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"howenc":7}},{"path":"src/main/java/dukeExceptions/DukeUnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package dukeExceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"public class DukeUnknownCommandException extends DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"    public DukeUnknownCommandException(String message) {","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"        super(message);","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"howenc":7}},{"path":"src/main/java/dukeExceptions/LoadException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package dukeExceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"public class LoadException extends DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"    private int lineNumber;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"    private String loadCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"    public LoadException(String message, int lineNumber, String loadCommand) {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"        super(message);","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"        this.lineNumber \u003d lineNumber;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"        this.loadCommand \u003d loadCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"    public String getMessage() {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"        return this.lineNumber + \": \" + super.getMessage() + \" ---- \" + this.loadCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"howenc":17}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import command.Commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import duke.Duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import dukeExceptions.*;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"public class Parser {","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"    private String command;","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"    private String[] initialParse;","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"    private String[] phaseParse;","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"    public Parser(String command) {","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"    public Commands parse() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"        Commands.COMMANDS cmd \u003d this.mainCommand();","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"        if (cmd \u003d\u003d Commands.COMMANDS.BYE || cmd \u003d\u003d Commands.COMMANDS.LIST) {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"            return Commands.of(cmd);","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"        if (cmd \u003d\u003d Commands.COMMANDS.TODO || cmd \u003d\u003d Commands.COMMANDS.FIND) {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"            if (this.secondWord() \u003d\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"                throw new DukeException(\"Please add the task name\");","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"                return Commands.of(cmd, this.secondWord());","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"        if (cmd \u003d\u003d Commands.COMMANDS.BY || cmd \u003d\u003d Commands.COMMANDS.FROM || cmd \u003d\u003d Commands.COMMANDS.TO) {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"            String restOfCommand \u003d this.secondWord().trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"                LocalDateTime dateTime \u003d LocalDateTime.parse(restOfCommand, Duke.FORMAT);","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"                return Commands.of(cmd, dateTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"                throw new DukeDateTimeParseException(cmd + \": The format for dates\u0026time is \u0027dd-MM-yyyy hhmm\u0027\");","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"        if (cmd \u003d\u003d Commands.COMMANDS.MARK || cmd \u003d\u003d Commands.COMMANDS.UNMARK || cmd \u003d\u003d Commands.COMMANDS.DELETE) {","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"                int index \u003d Integer.parseInt(this.secondWord());","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"                return Commands.of(cmd, index);","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"                throw new DukeNumberFormatException(\"Place a number after the command\");","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"        if (cmd \u003d\u003d Commands.COMMANDS.DEADLINE) {","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"                String task \u003d this.phaseParse();","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"                String command2 \u003d this.phaseTwo();","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"                    Parser phaseTwo \u003d new Parser(command2);","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"                    Commands c \u003d phaseTwo.parse();","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"                    if (c.checkCommand(Commands.COMMANDS.BY)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"                        return Commands.of(Commands.COMMANDS.DEADLINE, task, c);","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"howenc"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"howenc"},"content":"                } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"howenc"},"content":"                    throw new DukeException(\"Please add the task name\");","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"howenc"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"howenc"},"content":"            } catch (DukeUnknownCommandException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"howenc"},"content":"                throw new DukeNullPointerException(\"The format for the command is: deadline task /by date\u0026time\");","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"howenc"},"content":"            } catch (NullPointerException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"howenc"},"content":"                throw new DukeNullPointerException(\"The format for the command is: deadline task /by date\u0026time\");","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"howenc"},"content":"        if (cmd \u003d\u003d Commands.COMMANDS.EVENT) {","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"howenc"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"howenc"},"content":"                String task \u003d this.phaseParse();","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"howenc"},"content":"                String command2 \u003d this.phaseTwo();","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"howenc"},"content":"                String command3 \u003d this.phaseThree();","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"howenc"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"howenc"},"content":"                    Parser phaseTwo \u003d new Parser(command2);","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"howenc"},"content":"                    Commands c1 \u003d phaseTwo.parse();","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"howenc"},"content":"                    Parser phaseThree \u003d new Parser(command3);","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"howenc"},"content":"                    Commands c2 \u003d phaseThree.parse();","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"howenc"},"content":"                    if (c1.checkCommand(Commands.COMMANDS.FROM) \u0026\u0026 c2.checkCommand(Commands.COMMANDS.TO)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"howenc"},"content":"                        if (c1.compareTime(c2)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"howenc"},"content":"                            return Commands.of(Commands.COMMANDS.EVENT, task, c1, c2);","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"howenc"},"content":"                        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"howenc"},"content":"                            throw new DukeFromEarlierThanToException(\"From must be earlier than To\");","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"howenc"},"content":"                        }","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"howenc"},"content":"                    } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"howenc"},"content":"                        throw new DukeNullPointerException(\"The format for the command is: event task /from startDayDateTime /to endDayDateTime\");","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"howenc"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"howenc"},"content":"                } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"howenc"},"content":"                    throw new DukeException(\"Please add the task name\");","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"howenc"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"howenc"},"content":"            } catch (DukeUnknownCommandException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"howenc"},"content":"                throw new DukeNullPointerException(\"The format for the command is: event task /from startDayDateTime /to endDayDateTime\");","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"howenc"},"content":"            } catch (NullPointerException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"howenc"},"content":"                throw new DukeNullPointerException(\"The format for the command is: event task /from startDayDateTime /to endDayDateTime\");","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"howenc"},"content":"        throw new DukeUnknownCommandException(\"Unknown command\");","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"howenc"},"content":"    public Commands.COMMANDS mainCommand() {","lastModifiedDate":"2023-08-28"},{"lineNumber":104,"author":{"gitId":"howenc"},"content":"        this.initialParse \u003d command.split(\" \",2);","lastModifiedDate":"2023-08-28"},{"lineNumber":105,"author":{"gitId":"howenc"},"content":"        switch (initialParse[0]) {","lastModifiedDate":"2023-08-28"},{"lineNumber":106,"author":{"gitId":"howenc"},"content":"            case (\"bye\"):","lastModifiedDate":"2023-08-28"},{"lineNumber":107,"author":{"gitId":"howenc"},"content":"                return Commands.COMMANDS.BYE;","lastModifiedDate":"2023-08-28"},{"lineNumber":108,"author":{"gitId":"howenc"},"content":"            case (\"list\"):","lastModifiedDate":"2023-08-28"},{"lineNumber":109,"author":{"gitId":"howenc"},"content":"                return Commands.COMMANDS.LIST;","lastModifiedDate":"2023-08-28"},{"lineNumber":110,"author":{"gitId":"howenc"},"content":"            case (\"todo\"):","lastModifiedDate":"2023-08-28"},{"lineNumber":111,"author":{"gitId":"howenc"},"content":"                return Commands.COMMANDS.TODO;","lastModifiedDate":"2023-08-28"},{"lineNumber":112,"author":{"gitId":"howenc"},"content":"            case (\"deadline\"):","lastModifiedDate":"2023-08-28"},{"lineNumber":113,"author":{"gitId":"howenc"},"content":"                return Commands.COMMANDS.DEADLINE;","lastModifiedDate":"2023-08-28"},{"lineNumber":114,"author":{"gitId":"howenc"},"content":"            case (\"event\"):","lastModifiedDate":"2023-08-28"},{"lineNumber":115,"author":{"gitId":"howenc"},"content":"                return Commands.COMMANDS.EVENT;","lastModifiedDate":"2023-08-28"},{"lineNumber":116,"author":{"gitId":"howenc"},"content":"            case (\"mark\"):","lastModifiedDate":"2023-08-28"},{"lineNumber":117,"author":{"gitId":"howenc"},"content":"                return Commands.COMMANDS.MARK;","lastModifiedDate":"2023-08-28"},{"lineNumber":118,"author":{"gitId":"howenc"},"content":"            case (\"unmark\"):","lastModifiedDate":"2023-08-28"},{"lineNumber":119,"author":{"gitId":"howenc"},"content":"                return Commands.COMMANDS.UNMARK;","lastModifiedDate":"2023-08-28"},{"lineNumber":120,"author":{"gitId":"howenc"},"content":"            case (\"delete\"):","lastModifiedDate":"2023-08-28"},{"lineNumber":121,"author":{"gitId":"howenc"},"content":"                return Commands.COMMANDS.DELETE;","lastModifiedDate":"2023-08-28"},{"lineNumber":122,"author":{"gitId":"howenc"},"content":"            case (\"by\"):","lastModifiedDate":"2023-08-28"},{"lineNumber":123,"author":{"gitId":"howenc"},"content":"                return Commands.COMMANDS.BY;","lastModifiedDate":"2023-08-28"},{"lineNumber":124,"author":{"gitId":"howenc"},"content":"            case (\"from\"):","lastModifiedDate":"2023-08-28"},{"lineNumber":125,"author":{"gitId":"howenc"},"content":"                return Commands.COMMANDS.FROM;","lastModifiedDate":"2023-08-28"},{"lineNumber":126,"author":{"gitId":"howenc"},"content":"            case (\"to\"):","lastModifiedDate":"2023-08-28"},{"lineNumber":127,"author":{"gitId":"howenc"},"content":"                return Commands.COMMANDS.TO;","lastModifiedDate":"2023-08-28"},{"lineNumber":128,"author":{"gitId":"howenc"},"content":"            case (\"sort\"):","lastModifiedDate":"2023-08-28"},{"lineNumber":129,"author":{"gitId":"howenc"},"content":"                return Commands.COMMANDS.SORT;","lastModifiedDate":"2023-08-28"},{"lineNumber":130,"author":{"gitId":"howenc"},"content":"            case (\"find\"):","lastModifiedDate":"2023-08-28"},{"lineNumber":131,"author":{"gitId":"howenc"},"content":"                return Commands.COMMANDS.FIND;","lastModifiedDate":"2023-08-28"},{"lineNumber":132,"author":{"gitId":"howenc"},"content":"            default:","lastModifiedDate":"2023-08-28"},{"lineNumber":133,"author":{"gitId":"howenc"},"content":"                return Commands.COMMANDS.UNKNOWN;","lastModifiedDate":"2023-08-28"},{"lineNumber":134,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":135,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":136,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":137,"author":{"gitId":"howenc"},"content":"    public String secondWord() {","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"howenc"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":139,"author":{"gitId":"howenc"},"content":"            if (this.initialParse[1].equals(\"\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":140,"author":{"gitId":"howenc"},"content":"                return null;","lastModifiedDate":"2023-08-28"},{"lineNumber":141,"author":{"gitId":"howenc"},"content":"            } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":142,"author":{"gitId":"howenc"},"content":"                return this.initialParse[1];","lastModifiedDate":"2023-08-28"},{"lineNumber":143,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":144,"author":{"gitId":"howenc"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":145,"author":{"gitId":"howenc"},"content":"            return null;","lastModifiedDate":"2023-08-28"},{"lineNumber":146,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":147,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":148,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":149,"author":{"gitId":"howenc"},"content":"    public String phaseParse() {","lastModifiedDate":"2023-08-29"},{"lineNumber":150,"author":{"gitId":"howenc"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":151,"author":{"gitId":"howenc"},"content":"            this.phaseParse \u003d this.initialParse[1].split(\"/\");","lastModifiedDate":"2023-08-28"},{"lineNumber":152,"author":{"gitId":"howenc"},"content":"            return phaseParse[0];","lastModifiedDate":"2023-08-28"},{"lineNumber":153,"author":{"gitId":"howenc"},"content":"        } catch (NullPointerException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":154,"author":{"gitId":"howenc"},"content":"            return null;","lastModifiedDate":"2023-08-28"},{"lineNumber":155,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":156,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":157,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":158,"author":{"gitId":"howenc"},"content":"    public String phaseTwo() {","lastModifiedDate":"2023-08-29"},{"lineNumber":159,"author":{"gitId":"howenc"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":160,"author":{"gitId":"howenc"},"content":"            return this.phaseParse[1];","lastModifiedDate":"2023-08-28"},{"lineNumber":161,"author":{"gitId":"howenc"},"content":"        } catch (NullPointerException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":162,"author":{"gitId":"howenc"},"content":"            return null;","lastModifiedDate":"2023-08-28"},{"lineNumber":163,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":164,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":165,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":166,"author":{"gitId":"howenc"},"content":"    public String phaseThree() {","lastModifiedDate":"2023-08-29"},{"lineNumber":167,"author":{"gitId":"howenc"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":168,"author":{"gitId":"howenc"},"content":"            return this.phaseParse[2];","lastModifiedDate":"2023-08-28"},{"lineNumber":169,"author":{"gitId":"howenc"},"content":"        } catch (NullPointerException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":170,"author":{"gitId":"howenc"},"content":"            return null;","lastModifiedDate":"2023-08-28"},{"lineNumber":171,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":172,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":173,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"howenc":173}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import command.Commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import dukeExceptions.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import parser.Parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"import task.ListOfTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"import task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"import ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"import java.io.File;","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"public class Storage {","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"    public static void save(ArrayList\u003cTask\u003e listOfTask) {","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"        File writeData \u003d new File(\"./src/data/duke.txt\");","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"            writeData.createNewFile();","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"            FileWriter writer \u003d new FileWriter(writeData);","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"            listOfTask.forEach(x-\u003e {","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"                try {","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"                    writer.write(x.write());","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"                    if (x.isDone()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"                        writer.write(\"mark \" + (listOfTask.indexOf(x) + 1) + \"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"                    }","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"                } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"                    System.out.println(\"You do not have access to write to your save file\");","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"            });","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"            writer.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"            System.out.println(\"You do not have access to save your file\");","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"    public static boolean load(ListOfTask taskList, int startLine) {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"        File saveData \u003d new File(\"./src/data/duke.txt\");","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"        String error \u003d null;","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"            saveData.createNewFile();","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"            Scanner readData \u003d new Scanner(saveData);","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"            for (int i \u003d 0; i \u003c startLine - 1; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"                if (readData.hasNextLine()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"                    readData.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"            while (readData.hasNextLine()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"                String command \u003d readData.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"                error \u003d command;","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"                if (command.equals(\"\\n\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"                Parser cmd \u003d new Parser(command);","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"                Commands action \u003d cmd.parse();","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"                action.execute(taskList, startLine, error);","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"                startLine++;","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"            readData.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"howenc"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"howenc"},"content":"            System.out.println(\"line \" + startLine + \" corrupted: \" + error);","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"howenc"},"content":"            startLine++;","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"howenc"},"content":"            load(taskList, startLine);","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"howenc"},"content":"        } catch (IOException f) {","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"howenc"},"content":"            if (clarify() \u003d\u003d 0) {","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"howenc"},"content":"                return false;","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"howenc"},"content":"        return true;","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"howenc"},"content":"    private static int clarify() {","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"howenc"},"content":"        System.out.println(\"You do not have access to create a save file\");","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"howenc"},"content":"        System.out.println(\"Do you wish to continue? (yes/no) None of your data will be saved.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"howenc"},"content":"        Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"howenc"},"content":"        String respond \u003d scan.nextLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"howenc"},"content":"        if (respond.equals(\"yes\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"howenc"},"content":"            return 1;","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"howenc"},"content":"        } else if (respond.equals(\"no\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"howenc"},"content":"            return 0;","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"howenc"},"content":"        } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"howenc"},"content":"            return clarify();","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":86,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"howenc":86}},{"path":"src/main/java/task/ListOfTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import dukeExceptions.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import dukeExceptions.LoadException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"public class ListOfTask {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"    private ArrayList\u003cTask\u003e listOfTask \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"    public int size() {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"        return listOfTask.size();","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"    public void addTask(String task, boolean print) {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"        Task temp \u003d new Task.ToDos(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"        listOfTask.add(temp);","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"        if (print) {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"            System.out.println(\"added: \" + temp);","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"            Storage.save(listOfTask);","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"    public void addTask(String task, LocalDateTime dayDate, boolean print) {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"        Task temp \u003d new Task.Deadlines(task, dayDate);","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"        listOfTask.add(temp);","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"        if (print) {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"            System.out.println(\"added: \" + temp);","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"            Storage.save(listOfTask);","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"    public void addTask(String task, LocalDateTime startDayDateTime, LocalDateTime endDayDateTime, boolean print) {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"        Task temp \u003d new Task.Event(task, startDayDateTime, endDayDateTime);","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"        listOfTask.add(temp);","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"        if (print) {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"            System.out.println(\"added: \" + temp);","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"            Storage.save(listOfTask);","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"    public void listTasks() {","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"        int[] i \u003d new int[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"        i[0] \u003d 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"        listOfTask.forEach(x-\u003e {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"                    System.out.print(i[0] + \".\");","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"                    System.out.println(x);","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"                    i[0]++;","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"        );","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"    public void mark(int index, boolean print) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"            listOfTask.get(index - 1).mark();","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"            if (print) {","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"                System.out.println(listOfTask.get(index - 1).toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"howenc"},"content":"                Storage.save(listOfTask);","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"howenc"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"howenc"},"content":"            throw new DukeException(\"Please select from index 1 to \" + listOfTask.size());","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"howenc"},"content":"    public void unMark(int index, boolean print) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"howenc"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"howenc"},"content":"            listOfTask.get(index - 1).unMark();","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"howenc"},"content":"            if (print) {","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"howenc"},"content":"                System.out.println(listOfTask.get(index - 1).toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"howenc"},"content":"            Storage.save(listOfTask);","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"howenc"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"howenc"},"content":"            throw new DukeException(\"Please select from index 1 to \" + listOfTask.size());","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"howenc"},"content":"    public void delete(int index, boolean print) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"howenc"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"howenc"},"content":"            Task removed \u003d listOfTask.remove(index - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"howenc"},"content":"            if (print) {","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"howenc"},"content":"                System.out.println(removed + \" has been deleted\");","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"howenc"},"content":"            Storage.save(listOfTask);","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"howenc"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"howenc"},"content":"            throw new DukeException(\"Please select from index 1 to \" + listOfTask.size());","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"howenc":92}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import duke.Duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"public class Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"    String taskName;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"    private Boolean done;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"    private LocalDateTime dateAdded;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"        this.dateAdded \u003d LocalDateTime.now();","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"    public String toString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"        return (\"[\" + (this.done ? \"X] \" : \" ] \") + this.taskName);","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"    public void mark() {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"        this.done \u003d true;","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"    public void unMark() {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"        return this.done;","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"    public String write() {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"        return \"task \" + this.taskName + \"\\n\";","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"    public static class ToDos extends Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"        public ToDos(String taskName) {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"            super(taskName);","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"        public String toString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"            return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"        public String write() {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"            return \"todo \" + super.taskName + \"\\n\";","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"    public static class Deadlines extends Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"        private LocalDateTime dayDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"        public Deadlines(String taskName, LocalDateTime dayDate) {","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"            super(taskName);","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"            this.dayDate \u003d dayDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"howenc"},"content":"        public String toString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"howenc"},"content":"            return \"[D]\" + super.toString() + \"(by: \" + this.dayDate.format(Duke.FORMAT) + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"howenc"},"content":"        public String write() {","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"howenc"},"content":"            return \"deadline \" + super.taskName + \"/by \" + this.dayDate.format(Duke.FORMAT) + \"\\n\";","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"howenc"},"content":"    public static class Event extends Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"howenc"},"content":"        private LocalDateTime startDayDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"howenc"},"content":"        private LocalDateTime endDayDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"howenc"},"content":"        public Event(String taskName, LocalDateTime startDayDateTime, LocalDateTime endDayDateTime) {","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"howenc"},"content":"            super(taskName);","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"howenc"},"content":"            this.endDayDateTime \u003d endDayDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"howenc"},"content":"            this.startDayDateTime \u003d startDayDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"howenc"},"content":"        public String toString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"howenc"},"content":"            return \"[E]\" + super.toString() + \"(from: \" + startDayDateTime.format(Duke.FORMAT) + \" to: \" + endDayDateTime.format(Duke.FORMAT) +\")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"howenc"},"content":"        public String write() {","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"howenc"},"content":"            return \"event \" + super.taskName + \"/from \" + this.startDayDateTime.format(Duke.FORMAT) + \" /to \" + this.endDayDateTime.format(Duke.FORMAT) + \"\\n\";","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"howenc":90}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"public class Ui {","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"    public Ui() {","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"    public String nextInput() {","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"        Scanner scanObj \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"        return scanObj.nextLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"    public void greet() {","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"        System.out.println(\"Hello. I am Luxion. \\n\" +","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"                \"What can I do for you?\");","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"    ","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"    public void exit() {","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"        System.out.println(\"Bye. See you soon.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"howenc":23}},{"path":"src/test/java/command/CommandsStud.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import dukeExceptions.LoadException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import task.ListOfTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import dukeExceptions.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"import task.ListOfTaskStud;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"import ui.UiStud;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"public class CommandsStud {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"    public enum COMMANDS {BYE, LIST, TODO, DEADLINE, EVENT, MARK, UNMARK, DELETE, BY, FROM, TO, SORT, FIND, UNKNOWN}","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"    private COMMANDS state;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"    private String name;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"    private int index;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"    public CommandsStud(CommandsStud.COMMANDS command) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"        this.state \u003d command;","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"    public CommandsStud(CommandsStud.COMMANDS command, String str) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"        this.state \u003d command;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"        this.name \u003d str;","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"    public CommandsStud(CommandsStud.COMMANDS command, int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"        this.state \u003d command;","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"    public CommandsStud(CommandsStud.COMMANDS command, LocalDateTime dateTime) {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"        this.state \u003d command;","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"    public CommandsStud.COMMANDS getCommand() {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"        return this.state;","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"    public int execute(ListOfTaskStud taskList, UiStud ui, int lineNumber, String error) {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"        boolean load \u003d true;","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"        if (lineNumber \u003d\u003d 0 \u0026\u0026 error \u003d\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"            load \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"            switch (this.state) {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"            case BYE:","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"                ui.exit();","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"                return 0;","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"            case LIST:","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"                taskList.listTasks();","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"            case TODO:","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"                if (!load) {","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"                    taskList.addTask(this.name, true);","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"howenc"},"content":"                } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"howenc"},"content":"                    taskList.addTask(this.name, false);","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"howenc"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"howenc"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"howenc"},"content":"            case FIND:","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"howenc"},"content":"                //taskList.find(this.name);","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"howenc"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"howenc"},"content":"            case SORT:","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"howenc"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"howenc"},"content":"            case MARK:","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"howenc"},"content":"                if (!load) {","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"howenc"},"content":"                    taskList.mark(this.index, true);","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"howenc"},"content":"                } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"howenc"},"content":"                    taskList.mark(this.index, false);","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"howenc"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"howenc"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"howenc"},"content":"            case UNMARK:","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"howenc"},"content":"                if (!load) {","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"howenc"},"content":"                    taskList.unMark(this.index, true);","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"howenc"},"content":"                } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"howenc"},"content":"                    taskList.unMark(this.index, false);","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"howenc"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"howenc"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"howenc"},"content":"            case DELETE:","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"howenc"},"content":"                if (!load) {","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"howenc"},"content":"                    taskList.delete(this.index, true);","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"howenc"},"content":"                } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"howenc"},"content":"                    taskList.delete(this.index, false);","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"howenc"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"howenc"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"howenc"},"content":"            case UNKNOWN:","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"howenc"},"content":"                throw new DukeException(\"line corrupted\");","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"howenc"},"content":"            default:","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"howenc"},"content":"                throw new DukeException(\"line corrupted \" + this.state + \" is not a primary command\");","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"howenc"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"howenc"},"content":"            System.out.println(new LoadException(e.getMessage(), lineNumber, error).getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"howenc"},"content":"        return 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"howenc"},"content":"    public boolean compareTime(CommandsStud c) {","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"howenc"},"content":"        if (this.dateTime.isBefore(c.dateTime)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"howenc"},"content":"            return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"howenc"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"howenc"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"howenc"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"howenc"},"content":"            return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"howenc"},"content":"        if (obj instanceof CommandsStud) {","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"howenc"},"content":"            CommandsStud b \u003d (CommandsStud) obj;","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"howenc"},"content":"            if ((b.state \u003d\u003d this.state) \u0026\u0026 (b.dateTime \u003d\u003d this.dateTime) \u0026\u0026 (b.index \u003d\u003d this.index) \u0026\u0026 (b.name \u003d\u003d this.name)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"howenc"},"content":"                return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"howenc"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"howenc"},"content":"    public static class TwoCommandsStud extends CommandsStud {","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"howenc"},"content":"        private COMMANDS state2;","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"howenc"},"content":"        private String name2;","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"howenc"},"content":"        private CommandsStud secondaryCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"howenc"},"content":"        public TwoCommandsStud(COMMANDS command, String str, COMMANDS command2, String str2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"howenc"},"content":"            super(command, str);","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"howenc"},"content":"            this.state2 \u003d command2;","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"howenc"},"content":"            this.name2 \u003d str2;","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"howenc"},"content":"        public TwoCommandsStud(COMMANDS command, String str, CommandsStud secondaryCommand) {","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"howenc"},"content":"            super(command,str);","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"howenc"},"content":"            this.secondaryCommand \u003d secondaryCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"howenc"},"content":"        public int execute(ListOfTaskStud taskList, UiStud ui, int lineNumber, String error) {","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"howenc"},"content":"            boolean load \u003d true;","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"howenc"},"content":"            if (lineNumber \u003d\u003d 0 \u0026\u0026 error \u003d\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":148,"author":{"gitId":"howenc"},"content":"                load \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":149,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"howenc"},"content":"            switch (super.state) {","lastModifiedDate":"2023-08-30"},{"lineNumber":151,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":152,"author":{"gitId":"howenc"},"content":"            case DEADLINE:","lastModifiedDate":"2023-08-30"},{"lineNumber":153,"author":{"gitId":"howenc"},"content":"                if (!load) {","lastModifiedDate":"2023-08-30"},{"lineNumber":154,"author":{"gitId":"howenc"},"content":"                    taskList.addTask(super.name, this.secondaryCommand.dateTime, true);","lastModifiedDate":"2023-08-30"},{"lineNumber":155,"author":{"gitId":"howenc"},"content":"                } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"howenc"},"content":"                    taskList.addTask(super.name, this.secondaryCommand.dateTime, false);","lastModifiedDate":"2023-08-30"},{"lineNumber":157,"author":{"gitId":"howenc"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"howenc"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":159,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"howenc"},"content":"            return 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":161,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":162,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":163,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":164,"author":{"gitId":"howenc"},"content":"        public boolean equals(Object obj) {","lastModifiedDate":"2023-08-30"},{"lineNumber":165,"author":{"gitId":"howenc"},"content":"            if (this \u003d\u003d obj) {","lastModifiedDate":"2023-08-30"},{"lineNumber":166,"author":{"gitId":"howenc"},"content":"                return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":167,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":168,"author":{"gitId":"howenc"},"content":"            if (obj instanceof CommandsStud.TwoCommandsStud) {","lastModifiedDate":"2023-08-30"},{"lineNumber":169,"author":{"gitId":"howenc"},"content":"                CommandsStud.TwoCommandsStud b \u003d (CommandsStud.TwoCommandsStud) obj;","lastModifiedDate":"2023-08-30"},{"lineNumber":170,"author":{"gitId":"howenc"},"content":"                if (super.equals(b) \u0026\u0026 b.state2 \u003d\u003d this.state2 \u0026\u0026 this.name2.equals(b.name2) \u0026\u0026 this.secondaryCommand.equals(b.secondaryCommand)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":171,"author":{"gitId":"howenc"},"content":"                    return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":172,"author":{"gitId":"howenc"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":173,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":174,"author":{"gitId":"howenc"},"content":"            return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":175,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":176,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":177,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":178,"author":{"gitId":"howenc"},"content":"    public static class ThreeCommandsStud extends CommandsStud {","lastModifiedDate":"2023-08-30"},{"lineNumber":179,"author":{"gitId":"howenc"},"content":"        private COMMANDS state2;","lastModifiedDate":"2023-08-30"},{"lineNumber":180,"author":{"gitId":"howenc"},"content":"        private String name2;","lastModifiedDate":"2023-08-30"},{"lineNumber":181,"author":{"gitId":"howenc"},"content":"        private COMMANDS state3;","lastModifiedDate":"2023-08-30"},{"lineNumber":182,"author":{"gitId":"howenc"},"content":"        private String name3;","lastModifiedDate":"2023-08-30"},{"lineNumber":183,"author":{"gitId":"howenc"},"content":"        private CommandsStud phaseTwo;","lastModifiedDate":"2023-08-30"},{"lineNumber":184,"author":{"gitId":"howenc"},"content":"        private CommandsStud phaseThree;","lastModifiedDate":"2023-08-30"},{"lineNumber":185,"author":{"gitId":"howenc"},"content":"        public ThreeCommandsStud(COMMANDS command, String str, COMMANDS command2, String str2, COMMANDS command3, String str3) {","lastModifiedDate":"2023-08-30"},{"lineNumber":186,"author":{"gitId":"howenc"},"content":"            super(command,str);","lastModifiedDate":"2023-08-30"},{"lineNumber":187,"author":{"gitId":"howenc"},"content":"            this.state2 \u003d command2;","lastModifiedDate":"2023-08-30"},{"lineNumber":188,"author":{"gitId":"howenc"},"content":"            this.name2 \u003d str2;","lastModifiedDate":"2023-08-30"},{"lineNumber":189,"author":{"gitId":"howenc"},"content":"            this.state3 \u003d command3;","lastModifiedDate":"2023-08-30"},{"lineNumber":190,"author":{"gitId":"howenc"},"content":"            this.name3 \u003d str3;","lastModifiedDate":"2023-08-30"},{"lineNumber":191,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":192,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":193,"author":{"gitId":"howenc"},"content":"        public ThreeCommandsStud(COMMANDS command, String str, CommandsStud phaseTwo, CommandsStud phaseThree) {","lastModifiedDate":"2023-08-30"},{"lineNumber":194,"author":{"gitId":"howenc"},"content":"            super(command,str);","lastModifiedDate":"2023-08-30"},{"lineNumber":195,"author":{"gitId":"howenc"},"content":"            this.phaseTwo \u003d phaseTwo;","lastModifiedDate":"2023-08-30"},{"lineNumber":196,"author":{"gitId":"howenc"},"content":"            this.phaseThree \u003d phaseThree;","lastModifiedDate":"2023-08-30"},{"lineNumber":197,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":198,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":199,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":200,"author":{"gitId":"howenc"},"content":"        public int execute(ListOfTaskStud taskList, UiStud ui, int lineNumber, String error) {","lastModifiedDate":"2023-08-30"},{"lineNumber":201,"author":{"gitId":"howenc"},"content":"            boolean load \u003d true;","lastModifiedDate":"2023-08-30"},{"lineNumber":202,"author":{"gitId":"howenc"},"content":"            if (lineNumber \u003d\u003d 0 \u0026\u0026 error \u003d\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":203,"author":{"gitId":"howenc"},"content":"                load \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":204,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":205,"author":{"gitId":"howenc"},"content":"            switch (super.state) {","lastModifiedDate":"2023-08-30"},{"lineNumber":206,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":207,"author":{"gitId":"howenc"},"content":"            case EVENT:","lastModifiedDate":"2023-08-30"},{"lineNumber":208,"author":{"gitId":"howenc"},"content":"                if (!load) {","lastModifiedDate":"2023-08-30"},{"lineNumber":209,"author":{"gitId":"howenc"},"content":"                    taskList.addTask(super.name, this.phaseTwo.dateTime, this.phaseThree.dateTime, true);","lastModifiedDate":"2023-08-30"},{"lineNumber":210,"author":{"gitId":"howenc"},"content":"                } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":211,"author":{"gitId":"howenc"},"content":"                    taskList.addTask(super.name, this.phaseTwo.dateTime, this.phaseThree.dateTime, false);","lastModifiedDate":"2023-08-30"},{"lineNumber":212,"author":{"gitId":"howenc"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":213,"author":{"gitId":"howenc"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":214,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":215,"author":{"gitId":"howenc"},"content":"            return 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":216,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":217,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":218,"author":{"gitId":"howenc"},"content":"        public boolean equals(Object obj) {","lastModifiedDate":"2023-08-30"},{"lineNumber":219,"author":{"gitId":"howenc"},"content":"            if (this \u003d\u003d obj) {","lastModifiedDate":"2023-08-30"},{"lineNumber":220,"author":{"gitId":"howenc"},"content":"                return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":221,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":222,"author":{"gitId":"howenc"},"content":"            if (obj instanceof CommandsStud.ThreeCommandsStud) {","lastModifiedDate":"2023-08-30"},{"lineNumber":223,"author":{"gitId":"howenc"},"content":"                CommandsStud.ThreeCommandsStud b \u003d (CommandsStud.ThreeCommandsStud) obj;","lastModifiedDate":"2023-08-30"},{"lineNumber":224,"author":{"gitId":"howenc"},"content":"                if (super.equals(b) \u0026\u0026 b.state2 \u003d\u003d this.state2 \u0026\u0026 this.name2.equals(b.name2)","lastModifiedDate":"2023-08-30"},{"lineNumber":225,"author":{"gitId":"howenc"},"content":"                        \u0026\u0026 b.state3 \u003d\u003d this.state3 \u0026\u0026 this.name3.equals(b.name3)","lastModifiedDate":"2023-08-30"},{"lineNumber":226,"author":{"gitId":"howenc"},"content":"                        \u0026\u0026 this.phaseTwo.equals(b.phaseTwo) \u0026\u0026 this.phaseThree.equals(b.phaseThree)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":227,"author":{"gitId":"howenc"},"content":"                    return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":228,"author":{"gitId":"howenc"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":229,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":230,"author":{"gitId":"howenc"},"content":"            return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":231,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":232,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":233,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-08-30"},{"lineNumber":234,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"howenc":234}},{"path":"src/test/java/command/CommandsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import dukeExceptions.*;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import parser.ParserStud;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"import task.ListOfTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"import ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"public class CommandsTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"    public void commandsEqualCommands() {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"        for (Commands.COMMANDS c : Commands.COMMANDS.values()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"            for (Commands.COMMANDS d : Commands.COMMANDS.values()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"                if (c \u003d\u003d d) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"                    assertEquals(Commands.of(c), Commands.of(d));","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"                } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"                    assertNotEquals(Commands.of(c), Commands.of(d));","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"    public void commandsExecuteToDo() {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"        String[] cmd \u003d {\"todo CS2103T A-JUnit\", \"todo \"};","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"        String cmd2 \u003d \"CS2103T A-JUnit\";","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"        String cmd3 \u003d \"added: [T][ ] \";","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"        for (int i \u003d 0; i \u003c cmd.length; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"            ParserStud cm \u003d new ParserStud(cmd[i]);","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"            ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"            System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"                Commands c \u003d cm.parse();","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"                c.execute(new task.ListOfTask(), 0, null);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"                assertEquals(cmd3 + cmd2 + \"\\r\\n\", outContent.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"                assertEquals(\"Please add the task name\\r\\n\", e.getMessage() + \"\\r\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"    public void commandsExecuteDeadline() {","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"        String[] cmd \u003d {\"deadline CS2103T A-JUnit /by 18-09-2023 0000\", \"deadline gyrdefsf /by 8411\", \"deadline gyrdefsf /by \", \"deadline /b\"};","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"        String cmd2 \u003d \"CS2103T A-JUnit\";","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"        String cmd3 \u003d \"added: [D][ ] \";","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"        String cmd4 \u003d \" (by: 18-09-2023 0000)\";","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"        for (String str : cmd) {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"            ParserStud cm \u003d new ParserStud(str);","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"            final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"            System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"howenc"},"content":"                Commands c \u003d cm.parse();","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"howenc"},"content":"                c.execute(new task.ListOfTask(), 0, null);","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"howenc"},"content":"                assertEquals(cmd3 + cmd2 + cmd4 + \"\\r\\n\", outContent.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"howenc"},"content":"            } catch (DukeDateTimeParseException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"howenc"},"content":"                assertEquals(\"The format for dates\u0026time is \u0027dd-MM-yyyy hhmm\u0027\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"howenc"},"content":"            } catch (DukeNullPointerException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"howenc"},"content":"                assertEquals(\"The format for the command is: deadline task /by date\u0026time\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"howenc"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"howenc"},"content":"                assertEquals(\"Please add the task name\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"howenc"},"content":"    public void commandsExecuteEvent() {","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"howenc"},"content":"        String[] cmd \u003d {\"event CS2103T A-JUnit /from 18-09-2023 0000 /to 18-09-2024 0000\",","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"howenc"},"content":"                \"event CS2103T A-JUnit /from 18-09-2023 0000 /to 18-09-2023 0000\",","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"howenc"},"content":"                \"event CS2103T A-JUnit /from 18-09-2023 0000 /to 18-09-2024 9999\",","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"howenc"},"content":"                \"event CS2103T A-JUnit /from 18-09-2023 0000 /to 18-09-2024 \",","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"howenc"},"content":"                \"event CS2103T A-JUnit /from 18-09-2023 /to 18-09-2024 0000\",","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"howenc"},"content":"                \"event CS2103T A-JUnit /from 18-09-2023 0000 /to\",","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"howenc"},"content":"                \"event CS2103T A-JUnit /from 18-09-2023 0000 /t 18-09-2024 0000\",","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"howenc"},"content":"                \"event CS2103T A-JUnit /from 18-09-2023 0000 / 18-09-2024 0000\",","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"howenc"},"content":"                \"event CS2103T A-JUnit /from 18-09-2023 0000 18-09-2024 0000\",","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"howenc"},"content":"                \"event CS2103T A-JUnit /from 18-09-2023 0000\",","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"howenc"},"content":"                \"event CS2103T A-JUnit /from 18-09-2023 000\",","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"howenc"},"content":"                \"event CS2103T A-JUnit /from 18-09-2023 9999\",","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"howenc"},"content":"                \"event CS2103T A-JUnit /from 18-09 1010\",","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"howenc"},"content":"                \"event CS2103T A-JUnit /from\",","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"howenc"},"content":"                \"event CS2103T A-JUnit /fro\",","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"howenc"},"content":"                \"event CS2103T A-JUnit /from /to \",","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"howenc"},"content":"                \"event CS2103T A-JUnit\"};","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"howenc"},"content":"        String cmd2 \u003d \"CS2103T A-JUnit\";","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"howenc"},"content":"        String cmd3 \u003d \"added: [E][ ] \";","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"howenc"},"content":"        String cmd4 \u003d \" (from: 18-09-2023 0000 to: 18-09-2024 0000)\";","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"howenc"},"content":"        for (String str : cmd) {","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"howenc"},"content":"            ParserStud cm \u003d new ParserStud(str);","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"howenc"},"content":"            final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"howenc"},"content":"            System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"howenc"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"howenc"},"content":"                Commands c \u003d cm.parse();","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"howenc"},"content":"                c.execute(new task.ListOfTask(), 0, null);","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"howenc"},"content":"                assertEquals(cmd3 + cmd2 + cmd4 + \"\\r\\n\", outContent.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"howenc"},"content":"            } catch (DukeFromEarlierThanToException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"howenc"},"content":"                assertEquals(\"From must be earlier than To\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"howenc"},"content":"            } catch (DukeDateTimeParseException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"howenc"},"content":"                assertEquals(\"The format for dates\u0026time is \u0027dd-MM-yyyy hhmm\u0027\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"howenc"},"content":"            } catch (DukeNullPointerException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"howenc"},"content":"                assertEquals(\"The format for the command is: event task /from startDayDateTime /to endDayDateTime\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"howenc"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"howenc"},"content":"                assertEquals(\"Please add the task name\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"howenc"},"content":"    public void commandsExecuteMark() {","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"howenc"},"content":"        String[] cmd \u003d {\"todo CS2103T A-JUnit\",","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"howenc"},"content":"                \"deadline CS2103T A-JUnit /by 18-09-2023 0000\",","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"howenc"},"content":"                \"event CS2103T A-JUnit /from 18-09-2023 0000 /to 18-09-2024 0000\"};","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"howenc"},"content":"        String[] cmdi \u003d {\"[T][X] CS2103T A-JUnit\",","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"howenc"},"content":"                \"[D][X] CS2103T A-JUnit (by: 18-09-2023 0000)\",","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"howenc"},"content":"                \"[E][X] CS2103T A-JUnit (from: 18-09-2023 0000 to: 18-09-2024 0000)\"};","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"howenc"},"content":"        ListOfTask taskList \u003d new ListOfTask();","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"howenc"},"content":"        for (String str : cmd) {","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"howenc"},"content":"            ParserStud cm \u003d new ParserStud(str);","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"howenc"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"howenc"},"content":"                Commands c \u003d cm.parse();","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"howenc"},"content":"                c.execute(taskList, 0, null);","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"howenc"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"howenc"},"content":"                System.out.println(\"check the test cases again\");","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"howenc"},"content":"        int[] indexes \u003d {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10};","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"howenc"},"content":"        for (int i \u003d 0; i \u003c indexes.length; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"howenc"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"howenc"},"content":"                final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"howenc"},"content":"                System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"howenc"},"content":"                taskList.mark(indexes[i] + 1, true);","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"howenc"},"content":"                assertEquals(cmdi[i] + \"\\r\\n\", outContent.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"howenc"},"content":"            } catch (DukeNumberFormatException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"howenc"},"content":"                assertEquals(\"Place a number after the command\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"howenc"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"howenc"},"content":"                assertEquals(\"Please select from index 1 to \" + taskList.size(), e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":148,"author":{"gitId":"howenc"},"content":"        final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-08-30"},{"lineNumber":149,"author":{"gitId":"howenc"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"howenc"},"content":"        String s \u003d \"mark a\";","lastModifiedDate":"2023-08-30"},{"lineNumber":151,"author":{"gitId":"howenc"},"content":"        ParserStud p \u003d new ParserStud(s);","lastModifiedDate":"2023-08-30"},{"lineNumber":152,"author":{"gitId":"howenc"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":153,"author":{"gitId":"howenc"},"content":"            Commands c \u003d p.parse();","lastModifiedDate":"2023-08-30"},{"lineNumber":154,"author":{"gitId":"howenc"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":155,"author":{"gitId":"howenc"},"content":"            assertEquals(\"Place a number after the command\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":157,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":159,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"howenc"},"content":"    public void commandsExecuteUnMark() {","lastModifiedDate":"2023-08-30"},{"lineNumber":161,"author":{"gitId":"howenc"},"content":"        String[] cmd \u003d {\"todo CS2103T A-JUnit\",","lastModifiedDate":"2023-08-30"},{"lineNumber":162,"author":{"gitId":"howenc"},"content":"                \"mark 1\",","lastModifiedDate":"2023-08-30"},{"lineNumber":163,"author":{"gitId":"howenc"},"content":"                \"deadline CS2103T A-JUnit /by 18-09-2023 0000\",","lastModifiedDate":"2023-08-30"},{"lineNumber":164,"author":{"gitId":"howenc"},"content":"                \"mark 2\",","lastModifiedDate":"2023-08-30"},{"lineNumber":165,"author":{"gitId":"howenc"},"content":"                \"event CS2103T A-JUnit /from 18-09-2023 0000 /to 18-09-2024 0000\",","lastModifiedDate":"2023-08-30"},{"lineNumber":166,"author":{"gitId":"howenc"},"content":"                \"mark 3\"};","lastModifiedDate":"2023-08-30"},{"lineNumber":167,"author":{"gitId":"howenc"},"content":"        String[] cmdi \u003d {\"[T][ ] CS2103T A-JUnit\",","lastModifiedDate":"2023-08-30"},{"lineNumber":168,"author":{"gitId":"howenc"},"content":"                \"[D][ ] CS2103T A-JUnit (by: 18-09-2023 0000)\",","lastModifiedDate":"2023-08-30"},{"lineNumber":169,"author":{"gitId":"howenc"},"content":"                \"[E][ ] CS2103T A-JUnit (from: 18-09-2023 0000 to: 18-09-2024 0000)\"};","lastModifiedDate":"2023-08-30"},{"lineNumber":170,"author":{"gitId":"howenc"},"content":"        ListOfTask taskList \u003d new ListOfTask();","lastModifiedDate":"2023-08-30"},{"lineNumber":171,"author":{"gitId":"howenc"},"content":"        for (String str : cmd) {","lastModifiedDate":"2023-08-30"},{"lineNumber":172,"author":{"gitId":"howenc"},"content":"            ParserStud cm \u003d new ParserStud(str);","lastModifiedDate":"2023-08-30"},{"lineNumber":173,"author":{"gitId":"howenc"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":174,"author":{"gitId":"howenc"},"content":"                Commands c \u003d cm.parse();","lastModifiedDate":"2023-08-30"},{"lineNumber":175,"author":{"gitId":"howenc"},"content":"                c.execute(taskList, 0, null);","lastModifiedDate":"2023-08-31"},{"lineNumber":176,"author":{"gitId":"howenc"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":177,"author":{"gitId":"howenc"},"content":"                System.out.println(\"check the test cases again\");","lastModifiedDate":"2023-08-30"},{"lineNumber":178,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":179,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":180,"author":{"gitId":"howenc"},"content":"        int[] indexes \u003d {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10};","lastModifiedDate":"2023-08-30"},{"lineNumber":181,"author":{"gitId":"howenc"},"content":"        for (int i \u003d 0; i \u003c indexes.length; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":182,"author":{"gitId":"howenc"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":183,"author":{"gitId":"howenc"},"content":"                final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-08-30"},{"lineNumber":184,"author":{"gitId":"howenc"},"content":"                System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-08-30"},{"lineNumber":185,"author":{"gitId":"howenc"},"content":"                taskList.unMark(indexes[i] + 1, true);","lastModifiedDate":"2023-08-30"},{"lineNumber":186,"author":{"gitId":"howenc"},"content":"                assertEquals(cmdi[i] + \"\\r\\n\", outContent.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":187,"author":{"gitId":"howenc"},"content":"            } catch (DukeNumberFormatException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":188,"author":{"gitId":"howenc"},"content":"                assertEquals(\"Place a number after the command\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":189,"author":{"gitId":"howenc"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":190,"author":{"gitId":"howenc"},"content":"                assertEquals(\"Please select from index 1 to \" + taskList.size(), e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":191,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":192,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":193,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":194,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":195,"author":{"gitId":"howenc"},"content":"        final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-08-30"},{"lineNumber":196,"author":{"gitId":"howenc"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-08-30"},{"lineNumber":197,"author":{"gitId":"howenc"},"content":"        String s \u003d \"unmark a\";","lastModifiedDate":"2023-08-30"},{"lineNumber":198,"author":{"gitId":"howenc"},"content":"        ParserStud p \u003d new ParserStud(s);","lastModifiedDate":"2023-08-30"},{"lineNumber":199,"author":{"gitId":"howenc"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":200,"author":{"gitId":"howenc"},"content":"            Commands c \u003d p.parse();","lastModifiedDate":"2023-08-30"},{"lineNumber":201,"author":{"gitId":"howenc"},"content":"            assertEquals(\"Place a number after the command\", outContent.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":202,"author":{"gitId":"howenc"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":203,"author":{"gitId":"howenc"},"content":"            assertEquals(\"Place a number after the command\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":204,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":205,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":206,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":207,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":208,"author":{"gitId":"howenc"},"content":"    public void commandsExecuteDelete() {","lastModifiedDate":"2023-08-30"},{"lineNumber":209,"author":{"gitId":"howenc"},"content":"        String[] cmd \u003d {\"todo CS2103T A-JUnit\",","lastModifiedDate":"2023-08-30"},{"lineNumber":210,"author":{"gitId":"howenc"},"content":"                \"deadline CS2103T A-JUnit /by 18-09-2023 0000\",","lastModifiedDate":"2023-08-30"},{"lineNumber":211,"author":{"gitId":"howenc"},"content":"                \"event CS2103T A-JUnit /from 18-09-2023 0000 /to 18-09-2024 0000\"};","lastModifiedDate":"2023-08-30"},{"lineNumber":212,"author":{"gitId":"howenc"},"content":"        String[] cmdi \u003d {\"[T][ ] CS2103T A-JUnit has been deleted\",","lastModifiedDate":"2023-08-30"},{"lineNumber":213,"author":{"gitId":"howenc"},"content":"                \"[D][ ] CS2103T A-JUnit (by: 18-09-2023 0000) has been deleted\",","lastModifiedDate":"2023-08-30"},{"lineNumber":214,"author":{"gitId":"howenc"},"content":"                \"[E][ ] CS2103T A-JUnit (from: 18-09-2023 0000 to: 18-09-2024 0000) has been deleted\"};","lastModifiedDate":"2023-08-30"},{"lineNumber":215,"author":{"gitId":"howenc"},"content":"        ListOfTask taskList \u003d new ListOfTask();","lastModifiedDate":"2023-08-30"},{"lineNumber":216,"author":{"gitId":"howenc"},"content":"        for (String str : cmd) {","lastModifiedDate":"2023-08-30"},{"lineNumber":217,"author":{"gitId":"howenc"},"content":"            ParserStud cm \u003d new ParserStud(str);","lastModifiedDate":"2023-08-30"},{"lineNumber":218,"author":{"gitId":"howenc"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":219,"author":{"gitId":"howenc"},"content":"                Commands c \u003d cm.parse();","lastModifiedDate":"2023-08-30"},{"lineNumber":220,"author":{"gitId":"howenc"},"content":"                c.execute(taskList, 0, null);","lastModifiedDate":"2023-08-31"},{"lineNumber":221,"author":{"gitId":"howenc"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":222,"author":{"gitId":"howenc"},"content":"                System.out.println(\"check the test cases again\");","lastModifiedDate":"2023-08-30"},{"lineNumber":223,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":224,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":225,"author":{"gitId":"howenc"},"content":"        for (int i \u003d 0; i \u003c 3; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":226,"author":{"gitId":"howenc"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":227,"author":{"gitId":"howenc"},"content":"                final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-08-30"},{"lineNumber":228,"author":{"gitId":"howenc"},"content":"                System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-08-30"},{"lineNumber":229,"author":{"gitId":"howenc"},"content":"                taskList.delete( 1, true);","lastModifiedDate":"2023-08-30"},{"lineNumber":230,"author":{"gitId":"howenc"},"content":"                assertEquals(cmdi[i] + \"\\r\\n\", outContent.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":231,"author":{"gitId":"howenc"},"content":"            } catch (DukeNumberFormatException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":232,"author":{"gitId":"howenc"},"content":"                assertEquals(\"Place a number after the command\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":233,"author":{"gitId":"howenc"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":234,"author":{"gitId":"howenc"},"content":"                assertEquals(\"Please select from index 1 to \" + taskList.size(), e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":235,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":236,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":237,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":238,"author":{"gitId":"howenc"},"content":"        final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-08-30"},{"lineNumber":239,"author":{"gitId":"howenc"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-08-30"},{"lineNumber":240,"author":{"gitId":"howenc"},"content":"        String s \u003d \"mark a\";","lastModifiedDate":"2023-08-30"},{"lineNumber":241,"author":{"gitId":"howenc"},"content":"        ParserStud p \u003d new ParserStud(s);","lastModifiedDate":"2023-08-30"},{"lineNumber":242,"author":{"gitId":"howenc"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":243,"author":{"gitId":"howenc"},"content":"            Commands c \u003d p.parse();","lastModifiedDate":"2023-08-30"},{"lineNumber":244,"author":{"gitId":"howenc"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":245,"author":{"gitId":"howenc"},"content":"            assertEquals(\"Place a number after the command\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":246,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":247,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":248,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":249,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":250,"author":{"gitId":"howenc"},"content":"    public void commandsExecuteList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":251,"author":{"gitId":"howenc"},"content":"        String[] cmd \u003d {\"todo CS2103T A-JUnit\",","lastModifiedDate":"2023-08-30"},{"lineNumber":252,"author":{"gitId":"howenc"},"content":"                \"deadline CS2103T A-JUnit /by 18-09-2023 0000\",","lastModifiedDate":"2023-08-30"},{"lineNumber":253,"author":{"gitId":"howenc"},"content":"                \"event CS2103T A-JUnit /from 18-09-2023 0000 /to 18-09-2024 0000\"};","lastModifiedDate":"2023-08-30"},{"lineNumber":254,"author":{"gitId":"howenc"},"content":"        String cmdi \u003d \"1.[T][ ] CS2103T A-JUnit\\r\\n\"","lastModifiedDate":"2023-08-30"},{"lineNumber":255,"author":{"gitId":"howenc"},"content":"                + \"2.[D][ ] CS2103T A-JUnit (by: 18-09-2023 0000)\\r\\n\"","lastModifiedDate":"2023-08-30"},{"lineNumber":256,"author":{"gitId":"howenc"},"content":"                + \"3.[E][ ] CS2103T A-JUnit (from: 18-09-2023 0000 to: 18-09-2024 0000)\\r\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":257,"author":{"gitId":"howenc"},"content":"        ListOfTask taskList \u003d new ListOfTask();","lastModifiedDate":"2023-08-30"},{"lineNumber":258,"author":{"gitId":"howenc"},"content":"        for (String str : cmd) {","lastModifiedDate":"2023-08-30"},{"lineNumber":259,"author":{"gitId":"howenc"},"content":"            ParserStud cm \u003d new ParserStud(str);","lastModifiedDate":"2023-08-30"},{"lineNumber":260,"author":{"gitId":"howenc"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":261,"author":{"gitId":"howenc"},"content":"                Commands c \u003d cm.parse();","lastModifiedDate":"2023-08-30"},{"lineNumber":262,"author":{"gitId":"howenc"},"content":"                c.execute(taskList, 0, null);","lastModifiedDate":"2023-08-31"},{"lineNumber":263,"author":{"gitId":"howenc"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":264,"author":{"gitId":"howenc"},"content":"                System.out.println(\"check the test cases again\");","lastModifiedDate":"2023-08-30"},{"lineNumber":265,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":266,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":267,"author":{"gitId":"howenc"},"content":"        String[] cmdj \u003d {\"l\", \"list \", \"list\"};","lastModifiedDate":"2023-08-30"},{"lineNumber":268,"author":{"gitId":"howenc"},"content":"        for (String str : cmdj) {","lastModifiedDate":"2023-08-30"},{"lineNumber":269,"author":{"gitId":"howenc"},"content":"            final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-08-30"},{"lineNumber":270,"author":{"gitId":"howenc"},"content":"            System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-08-30"},{"lineNumber":271,"author":{"gitId":"howenc"},"content":"            ParserStud p \u003d new ParserStud(str);","lastModifiedDate":"2023-08-30"},{"lineNumber":272,"author":{"gitId":"howenc"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":273,"author":{"gitId":"howenc"},"content":"                Commands c \u003d p.parse();","lastModifiedDate":"2023-08-30"},{"lineNumber":274,"author":{"gitId":"howenc"},"content":"                c.execute(taskList, 0, null);","lastModifiedDate":"2023-08-31"},{"lineNumber":275,"author":{"gitId":"howenc"},"content":"                assertEquals(cmdi, outContent.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":276,"author":{"gitId":"howenc"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":277,"author":{"gitId":"howenc"},"content":"                assertEquals(\"Unknown command\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":278,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":279,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":280,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":281,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":282,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"howenc":282}},{"path":"src/test/java/dukeExceptions/DukeExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package test.java.DukeExceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"public class DukeExceptionTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"howenc":4}},{"path":"src/test/java/parser/ParserStud.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import command.Commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import duke.Duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import dukeExceptions.*;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"public class ParserStud {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"    private String command;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"    private String[] initialParse;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"    private String[] phaseParse;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"    public ParserStud(String command) {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"    public Commands parse() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"        Commands.COMMANDS cmd \u003d this.mainCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"        if (cmd \u003d\u003d Commands.COMMANDS.BYE || cmd \u003d\u003d Commands.COMMANDS.LIST) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"            return Commands.of(cmd);","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"        if (cmd \u003d\u003d Commands.COMMANDS.TODO || cmd \u003d\u003d Commands.COMMANDS.FIND) {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"            if (this.secondWord() \u003d\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"                throw new DukeException(\"Please add the task name\");","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"                return Commands.of(cmd, this.secondWord());","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"        if (cmd \u003d\u003d Commands.COMMANDS.BY || cmd \u003d\u003d Commands.COMMANDS.FROM || cmd \u003d\u003d Commands.COMMANDS.TO) {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"            String restOfCommand \u003d this.secondWord().trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"                LocalDateTime dateTime \u003d LocalDateTime.parse(restOfCommand, Duke.FORMAT);","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"                return Commands.of(cmd, dateTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"                throw new DukeDateTimeParseException(\"The format for dates\u0026time is \u0027dd-MM-yyyy hhmm\u0027\");","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"        if (cmd \u003d\u003d Commands.COMMANDS.MARK || cmd \u003d\u003d Commands.COMMANDS.UNMARK || cmd \u003d\u003d Commands.COMMANDS.DELETE) {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"                int index \u003d Integer.parseInt(this.secondWord());","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"                return Commands.of(cmd, index);","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"                throw new DukeNumberFormatException(\"Place a number after the command\");","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"        if (cmd \u003d\u003d Commands.COMMANDS.DEADLINE) {","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"                String task \u003d this.phaseParse();","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"                String command2 \u003d this.phaseTwo();","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"                    ParserStud phaseTwo \u003d new ParserStud(command2);","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"                    Commands c \u003d phaseTwo.parse();","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"                    if (c.checkCommand(Commands.COMMANDS.BY)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"                        return Commands.of(Commands.COMMANDS.DEADLINE, task, c);","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"howenc"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"howenc"},"content":"                } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"howenc"},"content":"                    throw new DukeException(\"Please add the task name\");","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"howenc"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"howenc"},"content":"            } catch (DukeUnknownCommandException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"howenc"},"content":"                throw new DukeNullPointerException(\"The format for the command is: deadline task /by date\u0026time\");","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"howenc"},"content":"            } catch (NullPointerException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"howenc"},"content":"                throw new DukeNullPointerException(\"The format for the command is: deadline task /by date\u0026time\");","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"howenc"},"content":"        if (cmd \u003d\u003d Commands.COMMANDS.EVENT) {","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"howenc"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"howenc"},"content":"                String task \u003d this.phaseParse();","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"howenc"},"content":"                String command2 \u003d this.phaseTwo();","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"howenc"},"content":"                String command3 \u003d this.phaseThree();","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"howenc"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"howenc"},"content":"                    ParserStud phaseTwo \u003d new ParserStud(command2);","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"howenc"},"content":"                    Commands c1 \u003d phaseTwo.parse();","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"howenc"},"content":"                    ParserStud phaseThree \u003d new ParserStud(command3);","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"howenc"},"content":"                    Commands c2 \u003d phaseThree.parse();","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"howenc"},"content":"                    if (c1.checkCommand(Commands.COMMANDS.FROM) \u0026\u0026 c2.checkCommand(Commands.COMMANDS.TO)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"howenc"},"content":"                        if (c1.compareTime(c2)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"howenc"},"content":"                            return Commands.of(Commands.COMMANDS.EVENT, task, c1, c2);","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"howenc"},"content":"                        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"howenc"},"content":"                            throw new DukeFromEarlierThanToException(\"From must be earlier than To\");","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"howenc"},"content":"                        }","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"howenc"},"content":"                    } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"howenc"},"content":"                        throw new DukeNullPointerException(\"The format for the command is: event task /from startDayDateTime /to endDayDateTime\");","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"howenc"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"howenc"},"content":"                } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"howenc"},"content":"                    throw new DukeException(\"Please add the task name\");","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"howenc"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"howenc"},"content":"            } catch (DukeUnknownCommandException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"howenc"},"content":"                throw new DukeNullPointerException(\"The format for the command is: event task /from startDayDateTime /to endDayDateTime\");","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"howenc"},"content":"            } catch (NullPointerException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"howenc"},"content":"                throw new DukeNullPointerException(\"The format for the command is: event task /from startDayDateTime /to endDayDateTime\");","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"howenc"},"content":"        throw new DukeUnknownCommandException(\"Unknown command\");","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"howenc"},"content":"    public Commands.COMMANDS mainCommand() {","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"howenc"},"content":"        this.initialParse \u003d command.split(\" \",2);","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"howenc"},"content":"        switch (initialParse[0]) {","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"howenc"},"content":"        case (\"bye\"):","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"howenc"},"content":"            return Commands.COMMANDS.BYE;","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"howenc"},"content":"        case (\"list\"):","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"howenc"},"content":"            return Commands.COMMANDS.LIST;","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"howenc"},"content":"        case (\"todo\"):","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"howenc"},"content":"            return Commands.COMMANDS.TODO;","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"howenc"},"content":"        case (\"deadline\"):","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"howenc"},"content":"            return Commands.COMMANDS.DEADLINE;","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"howenc"},"content":"        case (\"event\"):","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"howenc"},"content":"            return Commands.COMMANDS.EVENT;","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"howenc"},"content":"        case (\"mark\"):","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"howenc"},"content":"            return Commands.COMMANDS.MARK;","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"howenc"},"content":"        case (\"unmark\"):","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"howenc"},"content":"            return Commands.COMMANDS.UNMARK;","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"howenc"},"content":"        case (\"delete\"):","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"howenc"},"content":"            return Commands.COMMANDS.DELETE;","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"howenc"},"content":"        case (\"by\"):","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"howenc"},"content":"            return Commands.COMMANDS.BY;","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"howenc"},"content":"        case (\"from\"):","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"howenc"},"content":"            return Commands.COMMANDS.FROM;","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"howenc"},"content":"        case (\"to\"):","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"howenc"},"content":"            return Commands.COMMANDS.TO;","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"howenc"},"content":"        case (\"sort\"):","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"howenc"},"content":"            return Commands.COMMANDS.SORT;","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"howenc"},"content":"        case (\"find\"):","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"howenc"},"content":"            return Commands.COMMANDS.FIND;","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"howenc"},"content":"        default:","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"howenc"},"content":"            return Commands.COMMANDS.UNKNOWN;","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"howenc"},"content":"    public String secondWord() {","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"howenc"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"howenc"},"content":"            if (this.initialParse[1].equals(\"\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"howenc"},"content":"                return null;","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"howenc"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"howenc"},"content":"                return this.initialParse[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"howenc"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"howenc"},"content":"            return null;","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":148,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":149,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"howenc"},"content":"    public String phaseParse() {","lastModifiedDate":"2023-08-30"},{"lineNumber":151,"author":{"gitId":"howenc"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":152,"author":{"gitId":"howenc"},"content":"            this.phaseParse \u003d this.initialParse[1].split(\"/\");","lastModifiedDate":"2023-08-30"},{"lineNumber":153,"author":{"gitId":"howenc"},"content":"            return phaseParse[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":154,"author":{"gitId":"howenc"},"content":"        } catch (NullPointerException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":155,"author":{"gitId":"howenc"},"content":"            return null;","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":157,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":159,"author":{"gitId":"howenc"},"content":"    public String phaseTwo() {","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"howenc"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":161,"author":{"gitId":"howenc"},"content":"            return this.phaseParse[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":162,"author":{"gitId":"howenc"},"content":"        } catch (NullPointerException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":163,"author":{"gitId":"howenc"},"content":"            return null;","lastModifiedDate":"2023-08-30"},{"lineNumber":164,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":165,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":166,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":167,"author":{"gitId":"howenc"},"content":"    public String phaseThree() {","lastModifiedDate":"2023-08-30"},{"lineNumber":168,"author":{"gitId":"howenc"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":169,"author":{"gitId":"howenc"},"content":"            return this.phaseParse[2];","lastModifiedDate":"2023-08-30"},{"lineNumber":170,"author":{"gitId":"howenc"},"content":"        } catch (NullPointerException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":171,"author":{"gitId":"howenc"},"content":"            return null;","lastModifiedDate":"2023-08-30"},{"lineNumber":172,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":173,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":174,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"howenc":174}},{"path":"src/test/java/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package test.java.Parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"howenc":4}},{"path":"src/test/java/storage/StorageStud.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import task.ListOfTaskStud;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"public class StorageStud {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"    public static void save(ArrayList\u003cTask\u003e listOfTask) {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"    public static boolean load(ListOfTaskStud taskList) {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"        return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"    public static void quickLoad(String command, ListOfTaskStud taskList) {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"howenc":19}},{"path":"src/test/java/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package test.java.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"public class StorageTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"howenc":4}},{"path":"src/test/java/task/ListOfTaskStud.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import dukeExceptions.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import storage.StorageStud;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"public class ListOfTaskStud {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"    private ArrayList\u003cTask\u003e listOfTask \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"    public int size() {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"        return listOfTask.size();","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"    public void addTask(String task, boolean print) {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"        Task temp \u003d new Task.ToDos(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"        listOfTask.add(temp);","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"        if (print) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"            System.out.println(\"added: \" + temp);","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"            StorageStud.save(listOfTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"    public void addTask(String task, LocalDateTime dayDate, boolean print) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"        Task temp \u003d new Task.Deadlines(task, dayDate);","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"        listOfTask.add(temp);","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"        if (print) {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"            System.out.println(\"added: \" + temp);","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"            StorageStud.save(listOfTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"    public void addTask(String task, LocalDateTime startDayDateTime, LocalDateTime endDayDateTime, boolean print) {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"        Task temp \u003d new Task.Event(task, startDayDateTime, endDayDateTime);","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"        listOfTask.add(temp);","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"        if (print) {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"            System.out.println(\"added: \" + temp);","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"            StorageStud.save(listOfTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"    public void listTasks() {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"        int[] i \u003d new int[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"        i[0] \u003d 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"        listOfTask.forEach(x-\u003e {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"                    System.out.print(i[0] + \".\");","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"                    System.out.println(x);","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"                    i[0]++;","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"        );","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"    public void mark(int index, boolean print) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"            listOfTask.get(index - 1).mark();","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"            if (print) {","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"                System.out.println(listOfTask.get(index - 1).toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"                StorageStud.save(listOfTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"howenc"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"howenc"},"content":"            throw new DukeException(\"Please select from index 1 to \" + listOfTask.size());","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"howenc"},"content":"    public void unMark(int index, boolean print) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"howenc"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"howenc"},"content":"            listOfTask.get(index - 1).unMark();","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"howenc"},"content":"            if (print) {","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"howenc"},"content":"                System.out.println(listOfTask.get(index - 1).toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"howenc"},"content":"            StorageStud.save(listOfTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"howenc"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"howenc"},"content":"            throw new DukeException(\"Please select from index 1 to \" + listOfTask.size());","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"howenc"},"content":"    public void delete(int index, boolean print) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"howenc"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"howenc"},"content":"            Task removed \u003d listOfTask.remove(index - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"howenc"},"content":"            if (print) {","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"howenc"},"content":"                System.out.println(removed + \" has been removed\");","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"howenc"},"content":"            StorageStud.save(listOfTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"howenc"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"howenc"},"content":"            throw new DukeException(\"Please select from index 1 to \" + listOfTask.size());","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"howenc":94}},{"path":"src/test/java/task/ListOfTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package test.java.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"public class ListOfTaskTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"howenc":4}},{"path":"src/test/java/task/TaskStud.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import duke.Duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"public class TaskStud {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"    private String taskName;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"    private Boolean done;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"    private LocalDateTime dateAdded;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"    public TaskStud(String taskName) {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"        this.dateAdded \u003d LocalDateTime.now();","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"    public String toString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"        return (\"[\" + (this.done ? \"X] \" : \" ] \") + this.taskName);","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"    public void mark() {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"        this.done \u003d true;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"    public void unMark() {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"        return this.done;","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"    public String write() {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"        return \"task \" + this.taskName + \"\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"    public static class ToDos extends Task {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"        public ToDos(String taskName) {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"            super(taskName);","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"        public String toString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"            return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"        public String write() {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"            return \"todo \" + super.taskName + \"\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"    public static class DeadlinesStud extends TaskStud {","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"        private LocalDateTime dayDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"        public DeadlinesStud(String taskName, LocalDateTime dayDate) {","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"            super(taskName);","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"            this.dayDate \u003d dayDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"howenc"},"content":"        public String toString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"howenc"},"content":"            return \"[D]\" + super.toString() + \"(by: \" + this.dayDate.format(Duke.FORMAT) + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"howenc"},"content":"        public String write() {","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"howenc"},"content":"            return \"deadline \" + super.taskName + \"/by \" + this.dayDate.format(Duke.FORMAT) + \"\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"howenc"},"content":"    public static class EventStud extends TaskStud {","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"howenc"},"content":"        private LocalDateTime startDayDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"howenc"},"content":"        private LocalDateTime endDayDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"howenc"},"content":"        public EventStud(String taskName, LocalDateTime startDayDateTime, LocalDateTime endDayDateTime) {","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"howenc"},"content":"            super(taskName);","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"howenc"},"content":"            this.endDayDateTime \u003d endDayDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"howenc"},"content":"            this.startDayDateTime \u003d startDayDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"howenc"},"content":"        public String toString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"howenc"},"content":"            return \"[E]\" + super.toString() + \"(from: \" + startDayDateTime.format(Duke.FORMAT) + \" to: \" + endDayDateTime.format(Duke.FORMAT) +\")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"howenc"},"content":"        public String write() {","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"howenc"},"content":"            return \"event \" + super.taskName + \"/from \" + this.startDayDateTime.format(Duke.FORMAT) + \"/to \" + this.endDayDateTime.format(Duke.FORMAT) + \"\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"howenc":92}},{"path":"src/test/java/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package test.java.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"public class TaskTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"howenc":4}},{"path":"src/test/java/ui/UiStud.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"public class UiStud {","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"    public UiStud() {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"    public String nextInput() {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"        Scanner scanObj \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"        return scanObj.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"    public void greet() {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"        System.out.println(\"Hello. I am Luxion. \\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"                \"What can I do for you?\");","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"    public void exit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"        System.out.println(\"Bye. See you soon.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"howenc":23}},{"path":"src/test/java/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package test.java.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"public class UiTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"howenc":4}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"howenc":1}}]
