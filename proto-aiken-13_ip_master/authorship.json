[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"proto-aiken-13"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"proto-aiken-13"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"proto-aiken-13"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"proto-aiken-13"},"content":" * The Duke class helps to manage all messages sent by the user to the chatbot accordingly.","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"proto-aiken-13"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"proto-aiken-13"},"content":"    /**The list, which would be used to store all the tasks inputted by the user.*/","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"proto-aiken-13"},"content":"    private DukeList list \u003d new DukeList();","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"proto-aiken-13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"proto-aiken-13"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"proto-aiken-13"},"content":"     * The main class for which the chatbot runs.","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"proto-aiken-13"},"content":"     * @param args The inputs given by the user in the command prompt.","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"proto-aiken-13"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"proto-aiken-13"},"content":"        Duke lati \u003d new Duke();","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"proto-aiken-13"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        lati.greet();","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"proto-aiken-13"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"proto-aiken-13"},"content":"        Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"proto-aiken-13"},"content":"        String comd \u003d scan.nextLine();","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"proto-aiken-13"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"proto-aiken-13"},"content":"        while (!comd.equals(\"bye\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"proto-aiken-13"},"content":"            lati.messageHandler(comd);","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"proto-aiken-13"},"content":"            comd \u003d scan.nextLine();","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"proto-aiken-13"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"proto-aiken-13"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        lati.bye();","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Sends a greeting message to the user.","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void greet() {","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                \" Hellooooooooooo! I\u0027m Lati!\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                \" What can I do for you? :3\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sends a goodbye message to the user.","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void bye() {","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"proto-aiken-13"},"content":"        System.out.println(\" Byeeeeee. Hope to see you again soon~~\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"proto-aiken-13"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"proto-aiken-13"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"proto-aiken-13"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Helps to parse and manage the user\u0027s inputs. \"list\" shows the current list, \"mark / unmark\"","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * helps to mark or unmark the specific task in the list, and todo/deadline/event","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * adds todo/deadline/event tasks respectively.","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"proto-aiken-13"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"proto-aiken-13"},"content":"     * @param tally takes in the input string.","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"proto-aiken-13"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"proto-aiken-13"},"content":"    public void messageHandler(String tally) {","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String comd \u003d tally.split(\" \")[0];","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        switch (comd) {","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            case \"list\":","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                list.display();","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            case \"todo\":","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Pattern todocmd \u003d Pattern.compile(\"todo (.+)\");","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Matcher mt \u003d todocmd.matcher(tally);","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                if (this.groupRun(mt, 1)) {","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                    list.store(mt.group(1));","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                    throw new IllegalArgumentException(\"Whoops, wrong command! Type todo \u003ctask\u003e\");","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            case \"deadline\":","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                Pattern deadlinecmd \u003d Pattern.compile(\"deadline (.+) /by (.+)\");","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                Matcher md \u003d deadlinecmd.matcher(tally);","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                if (this.groupRun(md, 2)) {","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                    list.store(md.group(1), md.group(2));","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                    throw new IllegalArgumentException(\"Whoops, wrong command! Type deadline \u003ctask\u003e /by \u003cdate\u003e\");","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            case \"event\":","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                Pattern eventcmd \u003d Pattern.compile(\"event (.+) /from (.+) /to (.+)\");","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                Matcher ml \u003d eventcmd.matcher(tally);","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                if (this.groupRun(ml, 3)) {","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                    list.store(ml.group(1), ml.group(2), ml.group(3));","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"proto-aiken-13"},"content":"                } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                    throw new IllegalArgumentException(\"Whoops, wrong command! Type event \u003ctask\u003e /\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                            \"from \u003cdate\u003e /to \u003cdate\u003e\");","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"proto-aiken-13"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            case \"mark\":","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                try {","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                    String indexmark \u003d tally.split(\" \")[1];","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                    list.mark(Integer.parseInt(indexmark));","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                } catch (NullPointerException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                    throw new IllegalArgumentException(\"Ehh? What do you want to mark? Type mark \u003cindex\u003e\");","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"proto-aiken-13"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            case \"unmark\":","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                try {","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                    String indexunmark \u003d tally.split(\" \")[1];","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                    list.mark(Integer.parseInt(indexunmark));","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                } catch (NullPointerException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                    throw new IllegalArgumentException(\"Ehh? What do you want to mark? Type unmark \u003cindex\u003e\");","lastModifiedDate":"2023-08-24"},{"lineNumber":106,"author":{"gitId":"proto-aiken-13"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            case \"delete\":","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                try {","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                    String indexunmark \u003d tally.split(\" \")[1];","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                    list.delete(Integer.parseInt(indexunmark));","lastModifiedDate":"2023-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                } catch (NullPointerException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                    throw new IllegalArgumentException(\"Ehh? What do you want to mark? Type remove \u003cindex\u003e\");","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            default:","lastModifiedDate":"2023-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                throw new IllegalArgumentException(\"Error, unknown command.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Recursively runs the matches() method on a given matcher n times.","lastModifiedDate":"2023-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @param m The matcher object","lastModifiedDate":"2023-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @param n number of times it has to run","lastModifiedDate":"2023-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * @return the boolean value of all matches() run recursively.","lastModifiedDate":"2023-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private boolean groupRun(Matcher m, int n) {","lastModifiedDate":"2023-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return n \u003d\u003d 0 ? false : n \u003d\u003d 1 ? m.matches() : m.matches() \u0026\u0026 groupRun(m, n - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":132,"author":{"gitId":"proto-aiken-13"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"proto-aiken-13":36,"-":97}},{"path":"src/main/java/DukeList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"proto-aiken-13"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"proto-aiken-13"},"content":" * DukeList stores tasks given by users when communicating with the main Duke chatbot.","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"proto-aiken-13"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"proto-aiken-13"},"content":"public class DukeList {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**The ArrayList used to store all tasks accordingly, up to a total of 100 tasks*/","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"proto-aiken-13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"proto-aiken-13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"proto-aiken-13"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Helps to store user todo tasks into the list.","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"proto-aiken-13"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"proto-aiken-13"},"content":"     * @param task takes in the task given by the user.","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"proto-aiken-13"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"proto-aiken-13"},"content":"    public void store(String task) {","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Task todo \u003d new ToDo(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        tasks.add(todo);","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        int index \u003d tasks.size();","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"proto-aiken-13"},"content":"        System.out.println(\"Added! You want to: \" + task + \"\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                \"Now you have \" + index + (index \u003e 1 ? \" tasks!\" : \" task!\") + \"\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Helps to store user deadline tasks and deadlines into the list.","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param task takes in the task given by the user.","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param by takes in the deadline of the deadline task.","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void store(String task, String by) {","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Task todo \u003d new Deadline(task, by);","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        tasks.add(todo);","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        int index \u003d tasks.size();","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        System.out.println(\"Added! You want to: \" + task + \"\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                \"Now you have \" + index + (index \u003e 1 ? \" tasks!\" : \" task!\") + \"\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Helps to store user event tasks and start / end dates into the list.","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param task takes in the task given by the user.","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param start takes in the start of the deadline task.","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @param end takes in the end date of the store task.","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void store(String task, String start, String end) {","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Task todo \u003d new Event(task, start, end);","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        tasks.add(todo);","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int index \u003d tasks.size();","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        System.out.println(\"Added! You want to: \" + task + \"\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \"Now you have \" + index + (index \u003e 1 ? \" tasks!\" : \" task!\") + \"\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"proto-aiken-13"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"proto-aiken-13"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"proto-aiken-13"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"proto-aiken-13"},"content":"     * Displays all contents of the list stored within an instance of DukeList.","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"proto-aiken-13"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"proto-aiken-13"},"content":"    public void display() {","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"proto-aiken-13"},"content":"            int curr \u003d i + 1;","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            System.out.println(curr + \". \" + tasks.get(i).toString() +\"\\n\");","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"proto-aiken-13"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"proto-aiken-13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"proto-aiken-13"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"proto-aiken-13"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"proto-aiken-13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"proto-aiken-13"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"proto-aiken-13"},"content":"     * Marks the i-th task as done.","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"proto-aiken-13"},"content":"     * @param i takes in the index of the task to be set as done.","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"proto-aiken-13"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"proto-aiken-13"},"content":"    public void mark(int i) {","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        tasks.get(i - 1).done();","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"proto-aiken-13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"proto-aiken-13"},"content":"        System.out.println(\"NICEEEEE. Good job on completing the task!\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                tasks.get(i - 1).toString() + \"\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"proto-aiken-13"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"proto-aiken-13"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":78,"author":{"gitId":"proto-aiken-13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":79,"author":{"gitId":"proto-aiken-13"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":80,"author":{"gitId":"proto-aiken-13"},"content":"     * Marks the i-th task as undone.","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"proto-aiken-13"},"content":"     * @param i takes in the index of the task to be set as undone.","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"proto-aiken-13"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":83,"author":{"gitId":"proto-aiken-13"},"content":"    public void unmark(int i) {","lastModifiedDate":"2023-08-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        tasks.get(i - 1).undo();","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"proto-aiken-13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":86,"author":{"gitId":"proto-aiken-13"},"content":"        System.out.println(\"Ohhh... uhm, okay, task undone!\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                tasks.get(i - 1).toString() + \"\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Removes the i-th.","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @param i takes in the index of the task to be removed.","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void delete(int i) {","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Task task \u003d tasks.remove(i - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        int index \u003d tasks.size();","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        System.out.println(\"Guess you don\u0027t want to do that anymore: \" + task.toString() + \"\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                \"Now you have \" + index + (index \u003e 1 ? \" tasks!\" : \" task!\") + \"\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"proto-aiken-13"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2023-08-23"},{"lineNumber":102,"author":{"gitId":"proto-aiken-13"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":103,"author":{"gitId":"proto-aiken-13"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"proto-aiken-13":44,"-":59}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"proto-aiken-13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"proto-aiken-13"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"proto-aiken-13"},"content":" * Tasks are the tasks sent by the user to the Duke class","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"proto-aiken-13"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"proto-aiken-13"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"proto-aiken-13"},"content":"    /**The name of the task.*/","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"proto-aiken-13"},"content":"    private String taskname;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"proto-aiken-13"},"content":"    /**Status on whether the task is done or not.*/","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"proto-aiken-13"},"content":"    private boolean taskstatus;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"proto-aiken-13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"proto-aiken-13"},"content":"    /**Instantiates an instance of a task.","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"proto-aiken-13"},"content":"     * @param taskname takes in the name of the task.*/","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"proto-aiken-13"},"content":"    public Task(String taskname) {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"proto-aiken-13"},"content":"        this.taskname \u003d taskname;","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"proto-aiken-13"},"content":"        this.taskstatus \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"proto-aiken-13"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"proto-aiken-13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"proto-aiken-13"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"proto-aiken-13"},"content":"     * Sets the current task as done.","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"proto-aiken-13"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"proto-aiken-13"},"content":"    public void done() {","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"proto-aiken-13"},"content":"        this.taskstatus \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"proto-aiken-13"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"proto-aiken-13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"proto-aiken-13"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"proto-aiken-13"},"content":"     * Sets the current task as not done.","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"proto-aiken-13"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"proto-aiken-13"},"content":"    public void undo() {","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"proto-aiken-13"},"content":"        this.taskstatus \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"proto-aiken-13"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"proto-aiken-13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"proto-aiken-13"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"proto-aiken-13"},"content":"     * Shows the name of the task and its status.","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"proto-aiken-13"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"proto-aiken-13"},"content":"     * @return Name of task and its current status.","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"proto-aiken-13"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"proto-aiken-13"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"proto-aiken-13"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"proto-aiken-13"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + taskname;","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"proto-aiken-13"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"proto-aiken-13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"proto-aiken-13"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"proto-aiken-13"},"content":"     * Shows the status of the current task.","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"proto-aiken-13"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"proto-aiken-13"},"content":"     * @return Status of the current task.","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"proto-aiken-13"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"proto-aiken-13"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"proto-aiken-13"},"content":"        return (taskstatus ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"proto-aiken-13"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"proto-aiken-13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"proto-aiken-13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"proto-aiken-13"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"proto-aiken-13":52}}]
