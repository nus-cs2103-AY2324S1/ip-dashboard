[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"nathanielcalimag"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"nathanielcalimag"},"content":"Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"nathanielcalimag"},"content":"1. Open Intellij (if you are not in the welcome screen,","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"nathanielcalimag"},"content":"   click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"nathanielcalimag"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"nathanielcalimag"},"content":"   in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"nathanielcalimag"},"content":"   In the same dialog, set the **Project language level** field to","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"nathanielcalimag"},"content":"   the `SDK default` option.","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"nathanielcalimag"},"content":"3. After that, locate the `src/main/java/duke/Duke.java` file, right-click","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"nathanielcalimag"},"content":"   it, and choose `Run Duke.main()` (if the code editor is showing","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"nathanielcalimag"},"content":"   compile errors, try restarting the IDE). If the setup is correct, you should","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"nathanielcalimag"},"content":"   see something like the below as the output:","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nathanielcalimag":12,"-":19}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"nathanielcalimag"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"nathanielcalimag"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"nathanielcalimag"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"nathanielcalimag"},"content":"checkstyle {","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"nathanielcalimag"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"nathanielcalimag"},"content":"tasks {","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"nathanielcalimag"},"content":"    compileJava {","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"nathanielcalimag"},"content":"        options.encoding \u003d \u0027UTF-8\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"nathanielcalimag":13,"-":41}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nathanielcalimag"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"nathanielcalimag"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"nathanielcalimag"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"nathanielcalimag"},"content":"import duke.exceptions.InsufficientArgumentsException;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"nathanielcalimag"},"content":"import duke.exceptions.StorageCreationException;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"nathanielcalimag"},"content":"import duke.exceptions.UnknownCommandException;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"nathanielcalimag"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"nathanielcalimag"},"content":" * Serves as the entry point to run the application.","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"nathanielcalimag"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"nathanielcalimag"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"nathanielcalimag"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"nathanielcalimag"},"content":"        Parser app \u003d new Parser();","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"nathanielcalimag"},"content":"        // Load tasks from storage","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"nathanielcalimag"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"nathanielcalimag"},"content":"            Storage storage \u003d new DukeStorage();","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"nathanielcalimag"},"content":"            taskList.setStorage(storage);","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"nathanielcalimag"},"content":"            taskList.loadTasks();","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"nathanielcalimag"},"content":"        } catch (IOException | InsufficientArgumentsException","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"nathanielcalimag"},"content":"                 | DateTimeParseException | StorageCreationException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"nathanielcalimag"},"content":"            ui.displayError(e.getMessage());","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"nathanielcalimag"},"content":"        // Greet the user","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"nathanielcalimag"},"content":"        ui.displayMessage(Messages.GREETING_MESSAGE, true, true);","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"nathanielcalimag"},"content":"        // Read user input until program exits","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"nathanielcalimag"},"content":"        while (true) {","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"nathanielcalimag"},"content":"            String input \u003d ui.getInput();","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"nathanielcalimag"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"nathanielcalimag"},"content":"                app.executeCommand(input, taskList, ui);","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"nathanielcalimag"},"content":"            } catch (UnknownCommandException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"nathanielcalimag"},"content":"                ui.displayError(e.getMessage());","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"nathanielcalimag"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nathanielcalimag":38,"-":4}},{"path":"src/main/java/duke/DukeStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nathanielcalimag"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"nathanielcalimag"},"content":"import java.io.File;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"nathanielcalimag"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"nathanielcalimag"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"nathanielcalimag"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"nathanielcalimag"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"nathanielcalimag"},"content":"import java.util.List;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"nathanielcalimag"},"content":"import java.util.Objects;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"nathanielcalimag"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"nathanielcalimag"},"content":"import duke.exceptions.InsufficientArgumentsException;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"nathanielcalimag"},"content":"import duke.exceptions.StorageCreationException;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"nathanielcalimag"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"nathanielcalimag"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"nathanielcalimag"},"content":" * Represents the interface between the application and the storage file.","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"nathanielcalimag"},"content":" * Allows the application to read and write to a storage txt file.","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"nathanielcalimag"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"nathanielcalimag"},"content":"public class DukeStorage implements Storage {","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"nathanielcalimag"},"content":"    private static final String DIRECTORY_PATH \u003d \"data\";","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"nathanielcalimag"},"content":"    private static final String FILE_PATH \u003d \"duke.txt\";","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"nathanielcalimag"},"content":"    public DukeStorage() throws IOException, StorageCreationException {","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"nathanielcalimag"},"content":"        this.initialiseStorage();","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"nathanielcalimag"},"content":"     * Reads the tasks from the storage file.","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"nathanielcalimag"},"content":"     * If the storage file and directory does not exist, it will be created.","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"nathanielcalimag"},"content":"     * @throws InsufficientArgumentsException If there are not enough arguments to create tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"nathanielcalimag"},"content":"     * @throws DateTimeParseException         If the date in storage is formatted wrongly.","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"nathanielcalimag"},"content":"     * @throws StorageCreationException       If the storage file and directory creation failed.","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"nathanielcalimag"},"content":"     * @throws IOException                    If the storage file creation failed.","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"nathanielcalimag"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"nathanielcalimag"},"content":"    public List\u003cTask\u003e readStorage() throws InsufficientArgumentsException, DateTimeParseException,","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"nathanielcalimag"},"content":"            StorageCreationException, IOException {","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"nathanielcalimag"},"content":"        initialiseStorage();","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"nathanielcalimag"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"nathanielcalimag"},"content":"        String storagePath \u003d String.format(\"./%s/%s\", DIRECTORY_PATH, FILE_PATH);","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"nathanielcalimag"},"content":"        File file \u003d new File(storagePath);","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"nathanielcalimag"},"content":"        Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"nathanielcalimag"},"content":"        while (Objects.requireNonNull(scanner).hasNext()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"nathanielcalimag"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"nathanielcalimag"},"content":"            String taskCode \u003d input.substring(0, 1);","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"nathanielcalimag"},"content":"            String taskInput \u003d input.length() \u003e 4 ? input.substring(4) : \"\";","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"nathanielcalimag"},"content":"            Task task \u003d Parser.parse(taskCode, taskInput);","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"nathanielcalimag"},"content":"            tasks.add(task);","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"nathanielcalimag"},"content":"        return tasks;","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"nathanielcalimag"},"content":"     * Rewrites the storage file from a list of tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"nathanielcalimag"},"content":"     * @param tasks The list of tasks to be written into storage.","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"nathanielcalimag"},"content":"     * @throws IOException If writing to the file failed.","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"nathanielcalimag"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"nathanielcalimag"},"content":"    public void updateStorage(List\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"nathanielcalimag"},"content":"        String storagePath \u003d String.format(\"./%s/%s\", DIRECTORY_PATH, FILE_PATH);","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"nathanielcalimag"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"nathanielcalimag"},"content":"            FileWriter fw \u003d new FileWriter(storagePath);","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"nathanielcalimag"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"nathanielcalimag"},"content":"                fw.write(task.encode() + System.lineSeparator());","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"nathanielcalimag"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"nathanielcalimag"},"content":"            fw.close();","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"nathanielcalimag"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"nathanielcalimag"},"content":"            throw new IOException(Messages.FAILED_TO_WRITE_FILE_ERROR_MESSAGE);","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"nathanielcalimag"},"content":"     * Initialises the storage directory and file if they do not exist.","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"nathanielcalimag"},"content":"     * @throws StorageCreationException If the storage file and directory creation failed.","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"nathanielcalimag"},"content":"     * @throws IOException              If the storage file creation failed.","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"nathanielcalimag"},"content":"    private void initialiseStorage() throws IOException, StorageCreationException {","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"nathanielcalimag"},"content":"        String directoryPath \u003d String.format(\"./%s\", DIRECTORY_PATH);","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"nathanielcalimag"},"content":"        String storagePath \u003d String.format(\"./%s/%s\", DIRECTORY_PATH, FILE_PATH);","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"nathanielcalimag"},"content":"        File directory \u003d new File(directoryPath);","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"nathanielcalimag"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"nathanielcalimag"},"content":"            if (!directory.mkdir()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"nathanielcalimag"},"content":"                throw new StorageCreationException(Messages.FAILED_TO_CREATE_FOLDER_ERROR_MESSAGE);","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"nathanielcalimag"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"nathanielcalimag"},"content":"        File file \u003d new File(storagePath);","lastModifiedDate":"2023-09-05"},{"lineNumber":92,"author":{"gitId":"nathanielcalimag"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"nathanielcalimag"},"content":"            try {","lastModifiedDate":"2023-09-05"},{"lineNumber":94,"author":{"gitId":"nathanielcalimag"},"content":"                if (!file.createNewFile()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":95,"author":{"gitId":"nathanielcalimag"},"content":"                    throw new StorageCreationException(Messages.FAILED_TO_CREATE_FILE_ERROR_MESSAGE);","lastModifiedDate":"2023-09-05"},{"lineNumber":96,"author":{"gitId":"nathanielcalimag"},"content":"                }","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"nathanielcalimag"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"nathanielcalimag"},"content":"                throw new IOException(Messages.FAILED_TO_CREATE_FILE_ERROR_MESSAGE);","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"nathanielcalimag"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":102,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"nathanielcalimag":102}},{"path":"src/main/java/duke/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nathanielcalimag"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"nathanielcalimag"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"nathanielcalimag"},"content":" * Stores the string messages of the application.","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"nathanielcalimag"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"nathanielcalimag"},"content":"public class Messages {","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"nathanielcalimag"},"content":"    // Regular messages","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"nathanielcalimag"},"content":"    public static final String HORIZONTAL_LINE \u003d","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"nathanielcalimag"},"content":"            \"____________________________________________________________\";","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"nathanielcalimag"},"content":"    public static final String GREETING_MESSAGE \u003d \" Hello! I\u0027m ChatNat!\\n What can I do for you?\";","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"nathanielcalimag"},"content":"    public static final String LIST_MESSAGE \u003d \" Here are the tasks in your list:\";","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"nathanielcalimag"},"content":"    public static final String FIND_MESSAGE \u003d \" Here are the matching tasks in your list:\";","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"nathanielcalimag"},"content":"    public static final String INSERT_MESSAGE \u003d \" Got it. I\u0027ve added this task:\\n   %s\\n Now you \"","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"nathanielcalimag"},"content":"            + \"have %d %s in the list.\";","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"nathanielcalimag"},"content":"    public static final String MARKED_MESSAGE \u003d \" Nice! I\u0027ve marked this task as done:\\n   %s\";","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"nathanielcalimag"},"content":"    public static final String UNMARKED_MESSAGE \u003d \" OK, I\u0027ve marked this task as not done yet:\\n \"","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"nathanielcalimag"},"content":"            + \"  %s\";","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"nathanielcalimag"},"content":"    public static final String DELETE_MESSAGE \u003d \" Noted. I\u0027ve removed this task:\\n   %s\\n Now you\"","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"nathanielcalimag"},"content":"            + \" have %d tasks in the list.\";","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"nathanielcalimag"},"content":"    public static final String EXIT_MESSAGE \u003d \" Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"nathanielcalimag"},"content":"    // Error messages","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"nathanielcalimag"},"content":"    public static final String ERROR_PREFIX \u003d \" ☹ OOPS!!! %s\";","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"nathanielcalimag"},"content":"    public static final String INSUFFICIENT_ARGUMENTS_ERROR_MESSAGE \u003d \"The %s of a %s cannot be \"","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"nathanielcalimag"},"content":"            + \"empty.\";","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"nathanielcalimag"},"content":"    public static final String UNKNOWN_COMMAND_ERROR_MESSAGE \u003d \"I\u0027m sorry, but I don\u0027t know what \"","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"nathanielcalimag"},"content":"            + \"that means :-(\";","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"nathanielcalimag"},"content":"    public static final String FAILED_TO_CREATE_FILE_ERROR_MESSAGE \u003d \"We couldn\u0027t create a new \"","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"nathanielcalimag"},"content":"            + \"data/duke.txt file.\";","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"nathanielcalimag"},"content":"    public static final String FAILED_TO_WRITE_FILE_ERROR_MESSAGE \u003d \"We couldn\u0027t write to the \"","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"nathanielcalimag"},"content":"            + \"data/duke.txt file.\";","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"nathanielcalimag"},"content":"    public static final String FAILED_TO_CREATE_FOLDER_ERROR_MESSAGE \u003d \"We couldn\u0027t create a new \"","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"nathanielcalimag"},"content":"            + \"data/duke.txt file.\";","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"nathanielcalimag"},"content":"    public static final String INVALID_DATE_TIME_FORMAT \u003d \"\\\"%s\\\" is not a valid date time format.\";","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"nathanielcalimag":42}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nathanielcalimag"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"nathanielcalimag"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"nathanielcalimag"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"nathanielcalimag"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"nathanielcalimag"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"nathanielcalimag"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nathanielcalimag"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nathanielcalimag"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"nathanielcalimag"},"content":"import java.util.List;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"nathanielcalimag"},"content":"import java.util.Objects;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"nathanielcalimag"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"nathanielcalimag"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"nathanielcalimag"},"content":"import duke.commands.ExitCommand;","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"nathanielcalimag"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"nathanielcalimag"},"content":"import duke.commands.InsertCommand;","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"nathanielcalimag"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"nathanielcalimag"},"content":"import duke.commands.MarkCommand;","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"nathanielcalimag"},"content":"import duke.commands.UnmarkCommand;","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"nathanielcalimag"},"content":"import duke.exceptions.InsufficientArgumentsException;","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"nathanielcalimag"},"content":"import duke.exceptions.UnknownCommandException;","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"nathanielcalimag"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"nathanielcalimag"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"nathanielcalimag"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"nathanielcalimag"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"nathanielcalimag"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"nathanielcalimag"},"content":" * Represents the Application object responsible for storing and executing commands.","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"nathanielcalimag"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"nathanielcalimag"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"nathanielcalimag"},"content":"    public static final String OUTPUT_DATE_TIME_PATTERN \u003d \"d MMM yyyy, HHmm\";","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"nathanielcalimag"},"content":"    public static final String STORAGE_DATE_TIME_PATTERN \u003d \"yyyy-MM-dd HHmm\";","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"nathanielcalimag"},"content":"     * All supported date time formats for our application.","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"nathanielcalimag"},"content":"    private static final List\u003cString\u003e dateTimeFormats \u003d Arrays.asList(","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"nathanielcalimag"},"content":"            \"d/M/yyyy\", \"d/M/yyyy HHmm\",","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"nathanielcalimag"},"content":"            \"d/MM/yyyy\", \"d/MM/yyyy HHmm\",","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"nathanielcalimag"},"content":"            \"dd/M/yyyy\", \"dd/M/yyyy HHmm\",","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"nathanielcalimag"},"content":"            \"dd/MM/yyyy\", \"dd/MM/yyyy HHmm\",","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"nathanielcalimag"},"content":"            \"yyyy-M-d\", \"yyyy-M-d HHmm\",","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"nathanielcalimag"},"content":"            \"yyyy-M-dd\", \"yyyy-M-dd HHmm\",","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"nathanielcalimag"},"content":"            \"yyyy-MM-d\", \"yyyy-MM-d HHmm\",","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"nathanielcalimag"},"content":"            \"yyyy-MM-dd\", \"yyyy-MM-dd HHmm\"","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"nathanielcalimag"},"content":"    );","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"nathanielcalimag"},"content":"     * All commands stored in a map.","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"nathanielcalimag"},"content":"    private final HashMap\u003cString, Command\u003e commandMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"nathanielcalimag"},"content":"     * Creates a new {@code Parser} instance.","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"nathanielcalimag"},"content":"    public Parser() {","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"nathanielcalimag"},"content":"        this.addCommand(\"delete\", new DeleteCommand());","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"nathanielcalimag"},"content":"        this.addCommand(\"list\", new ListCommand());","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"nathanielcalimag"},"content":"        this.addCommand(\"mark\", new MarkCommand());","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"nathanielcalimag"},"content":"        this.addCommand(\"unmark\", new UnmarkCommand());","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"nathanielcalimag"},"content":"        this.addCommand(\"find\", new FindCommand());","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"nathanielcalimag"},"content":"        this.addCommand(new String[]{\"deadline\", \"event\", \"todo\"}, new InsertCommand());","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"nathanielcalimag"},"content":"        this.addCommand(new String[]{\"bye\", \"exit\", \"leave\", \"quit\"}, new ExitCommand());","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"nathanielcalimag"},"content":"     * Parses a date time string to get a local date time object.","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"nathanielcalimag"},"content":"     * @param dateTimeString The date time string to be parsed.","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"nathanielcalimag"},"content":"     * @return The local date time object based on the string.","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"nathanielcalimag"},"content":"    public static LocalDateTime parseDate(String dateTimeString) {","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"nathanielcalimag"},"content":"        for (String format : dateTimeFormats) {","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"nathanielcalimag"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"nathanielcalimag"},"content":"                if (format.contains(\"HHmm\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"nathanielcalimag"},"content":"                    return LocalDateTime.parse(dateTimeString, DateTimeFormatter.ofPattern(format));","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"nathanielcalimag"},"content":"                } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"nathanielcalimag"},"content":"                    // input without specifying time will default to 0000","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"nathanielcalimag"},"content":"                    LocalDate date \u003d LocalDate.parse(dateTimeString,","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"nathanielcalimag"},"content":"                            DateTimeFormatter.ofPattern(format));","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"nathanielcalimag"},"content":"                    return LocalDateTime.of(date, LocalTime.MIDNIGHT);","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"nathanielcalimag"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"nathanielcalimag"},"content":"            } catch (DateTimeParseException ignored) {","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"nathanielcalimag"},"content":"                // continue attempting all valid formats","lastModifiedDate":"2023-09-08"},{"lineNumber":90,"author":{"gitId":"nathanielcalimag"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"nathanielcalimag"},"content":"        throw new DateTimeParseException(String.format(Messages.ERROR_PREFIX, String.format(","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"nathanielcalimag"},"content":"                Messages.INVALID_DATE_TIME_FORMAT, dateTimeString)), dateTimeString, 0);","lastModifiedDate":"2023-09-05"},{"lineNumber":94,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":96,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"nathanielcalimag"},"content":"     * Creates a task based on task type and input string.","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"nathanielcalimag"},"content":"     * @param taskType The string representing the task type.","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"nathanielcalimag"},"content":"     * @param input    The input string used for creating a new task.","lastModifiedDate":"2023-09-05"},{"lineNumber":102,"author":{"gitId":"nathanielcalimag"},"content":"     * @return The created task.","lastModifiedDate":"2023-09-05"},{"lineNumber":103,"author":{"gitId":"nathanielcalimag"},"content":"     * @throws InsufficientArgumentsException If input is insufficient to create task.","lastModifiedDate":"2023-09-05"},{"lineNumber":104,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"nathanielcalimag"},"content":"    public static Task createTask(String taskType, String input)","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"nathanielcalimag"},"content":"            throws InsufficientArgumentsException, DateTimeParseException {","lastModifiedDate":"2023-09-05"},{"lineNumber":107,"author":{"gitId":"nathanielcalimag"},"content":"        if (Objects.equals(input, \"\")) {","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"nathanielcalimag"},"content":"            throw new InsufficientArgumentsException(String.format(","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"nathanielcalimag"},"content":"                    Messages.INSUFFICIENT_ARGUMENTS_ERROR_MESSAGE, \"description\", taskType));","lastModifiedDate":"2023-09-05"},{"lineNumber":110,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":111,"author":{"gitId":"nathanielcalimag"},"content":"        String description \u003d input;","lastModifiedDate":"2023-09-05"},{"lineNumber":112,"author":{"gitId":"nathanielcalimag"},"content":"        String[] args;","lastModifiedDate":"2023-09-05"},{"lineNumber":113,"author":{"gitId":"nathanielcalimag"},"content":"        switch (taskType) {","lastModifiedDate":"2023-09-05"},{"lineNumber":114,"author":{"gitId":"nathanielcalimag"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-05"},{"lineNumber":115,"author":{"gitId":"nathanielcalimag"},"content":"            Parser.validateContainsArgument(input, taskType, \"by\");","lastModifiedDate":"2023-09-05"},{"lineNumber":116,"author":{"gitId":"nathanielcalimag"},"content":"            args \u003d input.split(\"/by\");","lastModifiedDate":"2023-09-05"},{"lineNumber":117,"author":{"gitId":"nathanielcalimag"},"content":"            description \u003d args[0].trim();","lastModifiedDate":"2023-09-05"},{"lineNumber":118,"author":{"gitId":"nathanielcalimag"},"content":"            LocalDateTime by \u003d Parser.parseDate(args[1].trim());","lastModifiedDate":"2023-09-05"},{"lineNumber":119,"author":{"gitId":"nathanielcalimag"},"content":"            return new Deadline(description, by);","lastModifiedDate":"2023-09-05"},{"lineNumber":120,"author":{"gitId":"nathanielcalimag"},"content":"        case \"event\":","lastModifiedDate":"2023-09-05"},{"lineNumber":121,"author":{"gitId":"nathanielcalimag"},"content":"            Parser.validateContainsArgument(input, taskType, \"from\");","lastModifiedDate":"2023-09-05"},{"lineNumber":122,"author":{"gitId":"nathanielcalimag"},"content":"            Parser.validateContainsArgument(input, taskType, \"to\");","lastModifiedDate":"2023-09-05"},{"lineNumber":123,"author":{"gitId":"nathanielcalimag"},"content":"            args \u003d input.split(\"/from|/to\");","lastModifiedDate":"2023-09-05"},{"lineNumber":124,"author":{"gitId":"nathanielcalimag"},"content":"            description \u003d args[0].trim();","lastModifiedDate":"2023-09-05"},{"lineNumber":125,"author":{"gitId":"nathanielcalimag"},"content":"            LocalDateTime from \u003d Parser.parseDate(args[1].trim());","lastModifiedDate":"2023-09-05"},{"lineNumber":126,"author":{"gitId":"nathanielcalimag"},"content":"            LocalDateTime to \u003d Parser.parseDate(args[2].trim());","lastModifiedDate":"2023-09-05"},{"lineNumber":127,"author":{"gitId":"nathanielcalimag"},"content":"            return new Event(description, from, to);","lastModifiedDate":"2023-09-05"},{"lineNumber":128,"author":{"gitId":"nathanielcalimag"},"content":"        case \"todo\":","lastModifiedDate":"2023-09-05"},{"lineNumber":129,"author":{"gitId":"nathanielcalimag"},"content":"            return new ToDo(description);","lastModifiedDate":"2023-09-05"},{"lineNumber":130,"author":{"gitId":"nathanielcalimag"},"content":"        default:","lastModifiedDate":"2023-09-05"},{"lineNumber":131,"author":{"gitId":"nathanielcalimag"},"content":"            return null;","lastModifiedDate":"2023-09-05"},{"lineNumber":132,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":133,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":134,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":135,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":136,"author":{"gitId":"nathanielcalimag"},"content":"     * Parses an input from storage to create a task.","lastModifiedDate":"2023-09-05"},{"lineNumber":137,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":138,"author":{"gitId":"nathanielcalimag"},"content":"     * @param taskCode The char representing the task type.","lastModifiedDate":"2023-09-05"},{"lineNumber":139,"author":{"gitId":"nathanielcalimag"},"content":"     * @param input    The input string used for creating a new task.","lastModifiedDate":"2023-09-05"},{"lineNumber":140,"author":{"gitId":"nathanielcalimag"},"content":"     * @return The created task.","lastModifiedDate":"2023-09-05"},{"lineNumber":141,"author":{"gitId":"nathanielcalimag"},"content":"     * @throws InsufficientArgumentsException If input is insufficient to create task.","lastModifiedDate":"2023-09-05"},{"lineNumber":142,"author":{"gitId":"nathanielcalimag"},"content":"     * @throws DateTimeParseException         If the date in storage is formatted wrongly.","lastModifiedDate":"2023-09-05"},{"lineNumber":143,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":144,"author":{"gitId":"nathanielcalimag"},"content":"    public static Task parse(String taskCode, String input)","lastModifiedDate":"2023-09-05"},{"lineNumber":145,"author":{"gitId":"nathanielcalimag"},"content":"            throws InsufficientArgumentsException, DateTimeParseException {","lastModifiedDate":"2023-09-05"},{"lineNumber":146,"author":{"gitId":"nathanielcalimag"},"content":"        String taskType;","lastModifiedDate":"2023-09-05"},{"lineNumber":147,"author":{"gitId":"nathanielcalimag"},"content":"        switch (taskCode) {","lastModifiedDate":"2023-09-05"},{"lineNumber":148,"author":{"gitId":"nathanielcalimag"},"content":"        case \"D\":","lastModifiedDate":"2023-09-05"},{"lineNumber":149,"author":{"gitId":"nathanielcalimag"},"content":"            taskType \u003d \"deadline\";","lastModifiedDate":"2023-09-05"},{"lineNumber":150,"author":{"gitId":"nathanielcalimag"},"content":"            break;","lastModifiedDate":"2023-09-05"},{"lineNumber":151,"author":{"gitId":"nathanielcalimag"},"content":"        case \"E\":","lastModifiedDate":"2023-09-05"},{"lineNumber":152,"author":{"gitId":"nathanielcalimag"},"content":"            taskType \u003d \"event\";","lastModifiedDate":"2023-09-05"},{"lineNumber":153,"author":{"gitId":"nathanielcalimag"},"content":"            break;","lastModifiedDate":"2023-09-05"},{"lineNumber":154,"author":{"gitId":"nathanielcalimag"},"content":"        case \"T\":","lastModifiedDate":"2023-09-05"},{"lineNumber":155,"author":{"gitId":"nathanielcalimag"},"content":"            taskType \u003d \"todo\";","lastModifiedDate":"2023-09-05"},{"lineNumber":156,"author":{"gitId":"nathanielcalimag"},"content":"            break;","lastModifiedDate":"2023-09-05"},{"lineNumber":157,"author":{"gitId":"nathanielcalimag"},"content":"        default:","lastModifiedDate":"2023-09-05"},{"lineNumber":158,"author":{"gitId":"nathanielcalimag"},"content":"            taskType \u003d \"\";","lastModifiedDate":"2023-09-05"},{"lineNumber":159,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":160,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":161,"author":{"gitId":"nathanielcalimag"},"content":"        if (Objects.equals(input, \"\")) {","lastModifiedDate":"2023-09-05"},{"lineNumber":162,"author":{"gitId":"nathanielcalimag"},"content":"            throw new InsufficientArgumentsException(String.format(","lastModifiedDate":"2023-09-05"},{"lineNumber":163,"author":{"gitId":"nathanielcalimag"},"content":"                    Messages.INSUFFICIENT_ARGUMENTS_ERROR_MESSAGE,","lastModifiedDate":"2023-09-05"},{"lineNumber":164,"author":{"gitId":"nathanielcalimag"},"content":"                    \"isDone\", taskType));","lastModifiedDate":"2023-09-05"},{"lineNumber":165,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":166,"author":{"gitId":"nathanielcalimag"},"content":"        if (input.length() \u003c 5) {","lastModifiedDate":"2023-09-05"},{"lineNumber":167,"author":{"gitId":"nathanielcalimag"},"content":"            throw new InsufficientArgumentsException(String.format(","lastModifiedDate":"2023-09-05"},{"lineNumber":168,"author":{"gitId":"nathanielcalimag"},"content":"                    Messages.INSUFFICIENT_ARGUMENTS_ERROR_MESSAGE, \"description\", taskType));","lastModifiedDate":"2023-09-05"},{"lineNumber":169,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":170,"author":{"gitId":"nathanielcalimag"},"content":"        boolean isDone \u003d input.charAt(0) \u003d\u003d \u00271\u0027;","lastModifiedDate":"2023-09-05"},{"lineNumber":171,"author":{"gitId":"nathanielcalimag"},"content":"        String description;","lastModifiedDate":"2023-09-05"},{"lineNumber":172,"author":{"gitId":"nathanielcalimag"},"content":"        switch (taskCode) {","lastModifiedDate":"2023-09-05"},{"lineNumber":173,"author":{"gitId":"nathanielcalimag"},"content":"        case \"D\":","lastModifiedDate":"2023-09-05"},{"lineNumber":174,"author":{"gitId":"nathanielcalimag"},"content":"            input \u003d input.substring(4);","lastModifiedDate":"2023-09-05"},{"lineNumber":175,"author":{"gitId":"nathanielcalimag"},"content":"            description \u003d input.substring(0, input.indexOf(\" | \"));","lastModifiedDate":"2023-09-05"},{"lineNumber":176,"author":{"gitId":"nathanielcalimag"},"content":"            if (Objects.equals(input.substring(input.indexOf(\" | \") + 3), \"\")) {","lastModifiedDate":"2023-09-05"},{"lineNumber":177,"author":{"gitId":"nathanielcalimag"},"content":"                throw new InsufficientArgumentsException(String.format(","lastModifiedDate":"2023-09-05"},{"lineNumber":178,"author":{"gitId":"nathanielcalimag"},"content":"                        Messages.INSUFFICIENT_ARGUMENTS_ERROR_MESSAGE, \"by\", taskType));","lastModifiedDate":"2023-09-05"},{"lineNumber":179,"author":{"gitId":"nathanielcalimag"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":180,"author":{"gitId":"nathanielcalimag"},"content":"            LocalDateTime by \u003d Parser.parseDate(input.substring(","lastModifiedDate":"2023-09-05"},{"lineNumber":181,"author":{"gitId":"nathanielcalimag"},"content":"                    input.indexOf(\" | \") + 3));","lastModifiedDate":"2023-09-05"},{"lineNumber":182,"author":{"gitId":"nathanielcalimag"},"content":"            return new Deadline(description, isDone, by);","lastModifiedDate":"2023-09-05"},{"lineNumber":183,"author":{"gitId":"nathanielcalimag"},"content":"        case \"E\":","lastModifiedDate":"2023-09-05"},{"lineNumber":184,"author":{"gitId":"nathanielcalimag"},"content":"            input \u003d input.substring(4);","lastModifiedDate":"2023-09-05"},{"lineNumber":185,"author":{"gitId":"nathanielcalimag"},"content":"            description \u003d input.substring(0, input.indexOf(\" | \"));","lastModifiedDate":"2023-09-05"},{"lineNumber":186,"author":{"gitId":"nathanielcalimag"},"content":"            input \u003d input.substring(input.indexOf(\" | \") + 3);","lastModifiedDate":"2023-09-05"},{"lineNumber":187,"author":{"gitId":"nathanielcalimag"},"content":"            if (input.length() \u003c OUTPUT_DATE_TIME_PATTERN.length()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":188,"author":{"gitId":"nathanielcalimag"},"content":"                throw new InsufficientArgumentsException(String.format(","lastModifiedDate":"2023-09-05"},{"lineNumber":189,"author":{"gitId":"nathanielcalimag"},"content":"                        Messages.INSUFFICIENT_ARGUMENTS_ERROR_MESSAGE, \"from\", taskType));","lastModifiedDate":"2023-09-05"},{"lineNumber":190,"author":{"gitId":"nathanielcalimag"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":191,"author":{"gitId":"nathanielcalimag"},"content":"            if (input.length() \u003c STORAGE_DATE_TIME_PATTERN.length() * 2 + 1) {","lastModifiedDate":"2023-09-05"},{"lineNumber":192,"author":{"gitId":"nathanielcalimag"},"content":"                throw new InsufficientArgumentsException(String.format(","lastModifiedDate":"2023-09-05"},{"lineNumber":193,"author":{"gitId":"nathanielcalimag"},"content":"                        Messages.INSUFFICIENT_ARGUMENTS_ERROR_MESSAGE, \"to\", taskType));","lastModifiedDate":"2023-09-05"},{"lineNumber":194,"author":{"gitId":"nathanielcalimag"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":195,"author":{"gitId":"nathanielcalimag"},"content":"            // dates in storage should be formatted consistently","lastModifiedDate":"2023-09-05"},{"lineNumber":196,"author":{"gitId":"nathanielcalimag"},"content":"            LocalDateTime from \u003d","lastModifiedDate":"2023-09-05"},{"lineNumber":197,"author":{"gitId":"nathanielcalimag"},"content":"                    Parser.parseDate(input.substring(0, OUTPUT_DATE_TIME_PATTERN.length() - 1));","lastModifiedDate":"2023-09-05"},{"lineNumber":198,"author":{"gitId":"nathanielcalimag"},"content":"            LocalDateTime to \u003d","lastModifiedDate":"2023-09-05"},{"lineNumber":199,"author":{"gitId":"nathanielcalimag"},"content":"                    Parser.parseDate(input.substring(OUTPUT_DATE_TIME_PATTERN.length()));","lastModifiedDate":"2023-09-05"},{"lineNumber":200,"author":{"gitId":"nathanielcalimag"},"content":"            return new Event(description, isDone, from, to);","lastModifiedDate":"2023-09-05"},{"lineNumber":201,"author":{"gitId":"nathanielcalimag"},"content":"        case \"T\":","lastModifiedDate":"2023-09-05"},{"lineNumber":202,"author":{"gitId":"nathanielcalimag"},"content":"            description \u003d input.substring(4);","lastModifiedDate":"2023-09-05"},{"lineNumber":203,"author":{"gitId":"nathanielcalimag"},"content":"            return new ToDo(description, isDone);","lastModifiedDate":"2023-09-05"},{"lineNumber":204,"author":{"gitId":"nathanielcalimag"},"content":"        default:","lastModifiedDate":"2023-09-05"},{"lineNumber":205,"author":{"gitId":"nathanielcalimag"},"content":"            return null;","lastModifiedDate":"2023-09-05"},{"lineNumber":206,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":207,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":208,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":209,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":210,"author":{"gitId":"nathanielcalimag"},"content":"     * Validates arguments in input string.","lastModifiedDate":"2023-09-05"},{"lineNumber":211,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":212,"author":{"gitId":"nathanielcalimag"},"content":"     * @param input         The input string used to create task.","lastModifiedDate":"2023-09-05"},{"lineNumber":213,"author":{"gitId":"nathanielcalimag"},"content":"     * @param parameterName The parameter name to be checked.","lastModifiedDate":"2023-09-05"},{"lineNumber":214,"author":{"gitId":"nathanielcalimag"},"content":"     * @throws InsufficientArgumentsException If input is missing arguments from task.","lastModifiedDate":"2023-09-05"},{"lineNumber":215,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":216,"author":{"gitId":"nathanielcalimag"},"content":"    private static void validateContainsArgument(String input, String taskType,","lastModifiedDate":"2023-09-05"},{"lineNumber":217,"author":{"gitId":"nathanielcalimag"},"content":"                                                 String parameterName)","lastModifiedDate":"2023-09-05"},{"lineNumber":218,"author":{"gitId":"nathanielcalimag"},"content":"            throws InsufficientArgumentsException {","lastModifiedDate":"2023-09-05"},{"lineNumber":219,"author":{"gitId":"nathanielcalimag"},"content":"        if (!input.contains(String.format(\"/%s\", parameterName))) {","lastModifiedDate":"2023-09-05"},{"lineNumber":220,"author":{"gitId":"nathanielcalimag"},"content":"            throw new InsufficientArgumentsException(String.format(","lastModifiedDate":"2023-09-05"},{"lineNumber":221,"author":{"gitId":"nathanielcalimag"},"content":"                    Messages.INSUFFICIENT_ARGUMENTS_ERROR_MESSAGE,","lastModifiedDate":"2023-09-05"},{"lineNumber":222,"author":{"gitId":"nathanielcalimag"},"content":"                    parameterName, taskType));","lastModifiedDate":"2023-09-05"},{"lineNumber":223,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":224,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":225,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":226,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":227,"author":{"gitId":"nathanielcalimag"},"content":"     * Adds a command to the application\u0027s command map.","lastModifiedDate":"2023-09-05"},{"lineNumber":228,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":229,"author":{"gitId":"nathanielcalimag"},"content":"     * @param name    The name of the command.","lastModifiedDate":"2023-09-05"},{"lineNumber":230,"author":{"gitId":"nathanielcalimag"},"content":"     * @param command The associated command.","lastModifiedDate":"2023-09-05"},{"lineNumber":231,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":232,"author":{"gitId":"nathanielcalimag"},"content":"    private void addCommand(String name, Command command) {","lastModifiedDate":"2023-09-05"},{"lineNumber":233,"author":{"gitId":"nathanielcalimag"},"content":"        this.commandMap.put(name, command);","lastModifiedDate":"2023-09-05"},{"lineNumber":234,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":235,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":236,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":237,"author":{"gitId":"nathanielcalimag"},"content":"     * Adds a command to the application\u0027s command map.","lastModifiedDate":"2023-09-05"},{"lineNumber":238,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":239,"author":{"gitId":"nathanielcalimag"},"content":"     * @param names   The names of the command.","lastModifiedDate":"2023-09-05"},{"lineNumber":240,"author":{"gitId":"nathanielcalimag"},"content":"     * @param command The associated command.","lastModifiedDate":"2023-09-05"},{"lineNumber":241,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":242,"author":{"gitId":"nathanielcalimag"},"content":"    private void addCommand(String[] names, Command command) {","lastModifiedDate":"2023-09-05"},{"lineNumber":243,"author":{"gitId":"nathanielcalimag"},"content":"        for (String name : names) {","lastModifiedDate":"2023-09-05"},{"lineNumber":244,"author":{"gitId":"nathanielcalimag"},"content":"            this.commandMap.put(name, command);","lastModifiedDate":"2023-09-05"},{"lineNumber":245,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":246,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":247,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":248,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":249,"author":{"gitId":"nathanielcalimag"},"content":"     * Executes a command given an input.","lastModifiedDate":"2023-09-05"},{"lineNumber":250,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":251,"author":{"gitId":"nathanielcalimag"},"content":"     * @param input The input of the user.","lastModifiedDate":"2023-09-05"},{"lineNumber":252,"author":{"gitId":"nathanielcalimag"},"content":"     * @throws UnknownCommandException If no known command can be found from","lastModifiedDate":"2023-09-05"},{"lineNumber":253,"author":{"gitId":"nathanielcalimag"},"content":"     *                                 the input.","lastModifiedDate":"2023-09-05"},{"lineNumber":254,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":255,"author":{"gitId":"nathanielcalimag"},"content":"    public void executeCommand(String input, TaskList taskList, Ui ui) throws UnknownCommandException {","lastModifiedDate":"2023-09-05"},{"lineNumber":256,"author":{"gitId":"nathanielcalimag"},"content":"        // Separate the command name and the command input","lastModifiedDate":"2023-09-05"},{"lineNumber":257,"author":{"gitId":"nathanielcalimag"},"content":"        String[] args \u003d input.split(\" \");","lastModifiedDate":"2023-09-05"},{"lineNumber":258,"author":{"gitId":"nathanielcalimag"},"content":"        String commandName \u003d args[0];","lastModifiedDate":"2023-09-05"},{"lineNumber":259,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":260,"author":{"gitId":"nathanielcalimag"},"content":"        Command command \u003d commandMap.get(commandName);","lastModifiedDate":"2023-09-05"},{"lineNumber":261,"author":{"gitId":"nathanielcalimag"},"content":"        if (command !\u003d null) {","lastModifiedDate":"2023-09-05"},{"lineNumber":262,"author":{"gitId":"nathanielcalimag"},"content":"            command.run(input, taskList, ui);","lastModifiedDate":"2023-09-05"},{"lineNumber":263,"author":{"gitId":"nathanielcalimag"},"content":"        } else {","lastModifiedDate":"2023-09-05"},{"lineNumber":264,"author":{"gitId":"nathanielcalimag"},"content":"            throw new UnknownCommandException(Messages.UNKNOWN_COMMAND_ERROR_MESSAGE);","lastModifiedDate":"2023-09-05"},{"lineNumber":265,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":266,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":267,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"nathanielcalimag":267}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nathanielcalimag"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"nathanielcalimag"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"nathanielcalimag"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"nathanielcalimag"},"content":"import java.util.List;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"nathanielcalimag"},"content":"import duke.exceptions.InsufficientArgumentsException;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"nathanielcalimag"},"content":"import duke.exceptions.StorageCreationException;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"nathanielcalimag"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"nathanielcalimag"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"nathanielcalimag"},"content":" * Represents the generic interface for the storage of the application.","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"nathanielcalimag"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"nathanielcalimag"},"content":"public interface Storage {","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"nathanielcalimag"},"content":"     * Reads the tasks from storage.","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"nathanielcalimag"},"content":"     * @throws InsufficientArgumentsException If there are not enough arguments to create tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"nathanielcalimag"},"content":"     * @throws DateTimeParseException         If the date in storage is formatted wrongly.","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"nathanielcalimag"},"content":"     * @throws StorageCreationException       If the storage and directory creation failed.","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"nathanielcalimag"},"content":"     * @throws IOException                    If the storage creation failed.","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"nathanielcalimag"},"content":"    List\u003cTask\u003e readStorage() throws InsufficientArgumentsException, DateTimeParseException,","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"nathanielcalimag"},"content":"            StorageCreationException, IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"nathanielcalimag"},"content":"     * Rewrites the storage from a list of tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"nathanielcalimag"},"content":"     * @param tasks The list of tasks to be written into storage.","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"nathanielcalimag"},"content":"     * @throws IOException If writing to the failed.","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"nathanielcalimag"},"content":"    void updateStorage(List\u003cTask\u003e tasks) throws IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"nathanielcalimag":33}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nathanielcalimag"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"nathanielcalimag"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"nathanielcalimag"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"nathanielcalimag"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"nathanielcalimag"},"content":"import java.util.List;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"nathanielcalimag"},"content":"import duke.exceptions.InsufficientArgumentsException;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"nathanielcalimag"},"content":"import duke.exceptions.StorageCreationException;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"nathanielcalimag"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"nathanielcalimag"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"nathanielcalimag"},"content":" * Contains functionality to read and interact with the application state.","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"nathanielcalimag"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"nathanielcalimag"},"content":"public class TaskList {","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"nathanielcalimag"},"content":"    private final List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"nathanielcalimag"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"nathanielcalimag"},"content":"     * Gets the number of tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"nathanielcalimag"},"content":"     * @return The number of tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"nathanielcalimag"},"content":"    public int getTaskCount() {","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"nathanielcalimag"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"nathanielcalimag"},"content":"     * Lists out all the tasks into an output string.","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"nathanielcalimag"},"content":"     * @return The output string.","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"nathanielcalimag"},"content":"    public String listTasks() {","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"nathanielcalimag"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder(Messages.LIST_MESSAGE + \"\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"nathanielcalimag"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"nathanielcalimag"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"nathanielcalimag"},"content":"            stringBuilder.append(String.format(\" %d.%s\", i + 1, task));","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"nathanielcalimag"},"content":"            if (i \u003c tasks.size() - 1) {","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"nathanielcalimag"},"content":"                stringBuilder.append(\"\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"nathanielcalimag"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"nathanielcalimag"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"nathanielcalimag"},"content":"     * Searches for matching tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"nathanielcalimag"},"content":"     * @param input The search string.","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"nathanielcalimag"},"content":"     * @return The output string.","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"nathanielcalimag"},"content":"    public String searchTasks(String input) {","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"nathanielcalimag"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder(Messages.FIND_MESSAGE + \"\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"nathanielcalimag"},"content":"        int filteredCount \u003d 0;","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"nathanielcalimag"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"nathanielcalimag"},"content":"            if (!task.getDescription().contains(input)) {","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"nathanielcalimag"},"content":"                continue;","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"nathanielcalimag"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"nathanielcalimag"},"content":"            filteredCount++;","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"nathanielcalimag"},"content":"            stringBuilder.append(String.format(\" %d.%s\", filteredCount, task));","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"nathanielcalimag"},"content":"            stringBuilder.append(\"\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"nathanielcalimag"},"content":"        if (filteredCount \u003e 0) {","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"nathanielcalimag"},"content":"            stringBuilder.setLength(stringBuilder.length() - 1);","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"nathanielcalimag"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"nathanielcalimag"},"content":"     * Inserts a task into the list of items.","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"nathanielcalimag"},"content":"     * @param task The item to be added.","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"nathanielcalimag"},"content":"     * @throws IOException If saving tasks to file failed.","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"nathanielcalimag"},"content":"    public void insertTask(Task task) throws IOException {","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"nathanielcalimag"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"nathanielcalimag"},"content":"        this.saveTasks();","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"nathanielcalimag"},"content":"     * Marks task based on index.","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"nathanielcalimag"},"content":"     * @param index The index of the item to be marked.","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"nathanielcalimag"},"content":"     * @return The marked task\u0027s string.","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"nathanielcalimag"},"content":"     * @throws IOException If saving tasks to file failed.","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"nathanielcalimag"},"content":"    public String markTask(int index) throws IOException {","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"nathanielcalimag"},"content":"        Task task \u003d this.tasks.get(index);","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"nathanielcalimag"},"content":"        task.mark();","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"nathanielcalimag"},"content":"        this.saveTasks();","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"nathanielcalimag"},"content":"        return task.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":92,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":94,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":95,"author":{"gitId":"nathanielcalimag"},"content":"     * Unmarks task based on index.","lastModifiedDate":"2023-09-05"},{"lineNumber":96,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"nathanielcalimag"},"content":"     * @param index The index of the item to be unmarked.","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"nathanielcalimag"},"content":"     * @return The unmarked task\u0027s string.","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"nathanielcalimag"},"content":"     * @throws IOException If saving tasks to file failed.","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"nathanielcalimag"},"content":"    public String unmarkTask(int index) throws IOException {","lastModifiedDate":"2023-09-05"},{"lineNumber":102,"author":{"gitId":"nathanielcalimag"},"content":"        Task task \u003d this.tasks.get(index);","lastModifiedDate":"2023-09-05"},{"lineNumber":103,"author":{"gitId":"nathanielcalimag"},"content":"        task.unmark();","lastModifiedDate":"2023-09-05"},{"lineNumber":104,"author":{"gitId":"nathanielcalimag"},"content":"        this.saveTasks();","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"nathanielcalimag"},"content":"        return task.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":107,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"nathanielcalimag"},"content":"     * Deletes task based on index.","lastModifiedDate":"2023-09-05"},{"lineNumber":110,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":111,"author":{"gitId":"nathanielcalimag"},"content":"     * @param index The index of the item to be deleted.","lastModifiedDate":"2023-09-05"},{"lineNumber":112,"author":{"gitId":"nathanielcalimag"},"content":"     * @return The deleted task\u0027s string.","lastModifiedDate":"2023-09-05"},{"lineNumber":113,"author":{"gitId":"nathanielcalimag"},"content":"     * @throws IOException If saving tasks to file failed.","lastModifiedDate":"2023-09-05"},{"lineNumber":114,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":115,"author":{"gitId":"nathanielcalimag"},"content":"    public String deleteTask(int index) throws IOException {","lastModifiedDate":"2023-09-05"},{"lineNumber":116,"author":{"gitId":"nathanielcalimag"},"content":"        Task task \u003d this.tasks.remove(index);","lastModifiedDate":"2023-09-05"},{"lineNumber":117,"author":{"gitId":"nathanielcalimag"},"content":"        this.saveTasks();","lastModifiedDate":"2023-09-05"},{"lineNumber":118,"author":{"gitId":"nathanielcalimag"},"content":"        return task.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":119,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":120,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":121,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":122,"author":{"gitId":"nathanielcalimag"},"content":"     * Loads all tasks from storage.","lastModifiedDate":"2023-09-05"},{"lineNumber":123,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":124,"author":{"gitId":"nathanielcalimag"},"content":"     * @throws InsufficientArgumentsException If there are not enough arguments to create tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":125,"author":{"gitId":"nathanielcalimag"},"content":"     * @throws DateTimeParseException         If the date in storage is formatted wrongly.","lastModifiedDate":"2023-09-05"},{"lineNumber":126,"author":{"gitId":"nathanielcalimag"},"content":"     * @throws StorageCreationException       If the storage file and directory creation failed.","lastModifiedDate":"2023-09-05"},{"lineNumber":127,"author":{"gitId":"nathanielcalimag"},"content":"     * @throws IOException                    If the storage file creation failed.","lastModifiedDate":"2023-09-05"},{"lineNumber":128,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":129,"author":{"gitId":"nathanielcalimag"},"content":"    public void loadTasks() throws InsufficientArgumentsException, DateTimeParseException,","lastModifiedDate":"2023-09-05"},{"lineNumber":130,"author":{"gitId":"nathanielcalimag"},"content":"            StorageCreationException, IOException {","lastModifiedDate":"2023-09-05"},{"lineNumber":131,"author":{"gitId":"nathanielcalimag"},"content":"        List\u003cTask\u003e tasks \u003d this.storage.readStorage();","lastModifiedDate":"2023-09-05"},{"lineNumber":132,"author":{"gitId":"nathanielcalimag"},"content":"        this.tasks.clear();","lastModifiedDate":"2023-09-05"},{"lineNumber":133,"author":{"gitId":"nathanielcalimag"},"content":"        this.tasks.addAll(tasks);","lastModifiedDate":"2023-09-05"},{"lineNumber":134,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":135,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":136,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":137,"author":{"gitId":"nathanielcalimag"},"content":"     * Saves the tasks into storage.","lastModifiedDate":"2023-09-05"},{"lineNumber":138,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":139,"author":{"gitId":"nathanielcalimag"},"content":"     * @throws IOException If writing to the file failed.","lastModifiedDate":"2023-09-05"},{"lineNumber":140,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":141,"author":{"gitId":"nathanielcalimag"},"content":"    public void saveTasks() throws IOException {","lastModifiedDate":"2023-09-05"},{"lineNumber":142,"author":{"gitId":"nathanielcalimag"},"content":"        this.storage.updateStorage(this.tasks);","lastModifiedDate":"2023-09-05"},{"lineNumber":143,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":144,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":145,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":146,"author":{"gitId":"nathanielcalimag"},"content":"     * Sets the storage object for the task list.","lastModifiedDate":"2023-09-05"},{"lineNumber":147,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":148,"author":{"gitId":"nathanielcalimag"},"content":"     * @param storage The storage object.","lastModifiedDate":"2023-09-05"},{"lineNumber":149,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":150,"author":{"gitId":"nathanielcalimag"},"content":"    public void setStorage(Storage storage) {","lastModifiedDate":"2023-09-05"},{"lineNumber":151,"author":{"gitId":"nathanielcalimag"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-09-05"},{"lineNumber":152,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":153,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"nathanielcalimag":153}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nathanielcalimag"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"nathanielcalimag"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"nathanielcalimag"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"nathanielcalimag"},"content":" * Acts as the user interface by printing messages and reading input.","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"nathanielcalimag"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"nathanielcalimag"},"content":"public class Ui {","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"nathanielcalimag"},"content":"    private final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"nathanielcalimag"},"content":"     * Indents each line of a message.","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"nathanielcalimag"},"content":"     * @param message The message to be indented.","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"nathanielcalimag"},"content":"     * @return The indented message.","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"nathanielcalimag"},"content":"    private static String indent(String message) {","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"nathanielcalimag"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"nathanielcalimag"},"content":"        String[] lines \u003d message.split(\"\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"nathanielcalimag"},"content":"        for (int i \u003d 0; i \u003c lines.length; i++) {","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"nathanielcalimag"},"content":"            stringBuilder.append(\"\\t\").append(lines[i]);","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"nathanielcalimag"},"content":"            if (i \u003c lines.length - 1) {","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"nathanielcalimag"},"content":"                stringBuilder.append(\"\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"nathanielcalimag"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"nathanielcalimag"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"nathanielcalimag"},"content":"     * Reads the next user input from the command line.","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"nathanielcalimag"},"content":"     * @return The next user input.","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"nathanielcalimag"},"content":"    public String getInput() {","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"nathanielcalimag"},"content":"        return this.scanner.nextLine();","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"nathanielcalimag"},"content":"     * Displays a message to the user, formatted for the application.","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"nathanielcalimag"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"nathanielcalimag"},"content":"    public void displayMessage(String message) {","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"nathanielcalimag"},"content":"        this.displayMessage(message, true);","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"nathanielcalimag"},"content":"     * Displays a message to the user, formatted for the application.","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"nathanielcalimag"},"content":"     * @param message      The message to be displayed.","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"nathanielcalimag"},"content":"     * @param hasLowerLine Whether to display a bottom line.","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"nathanielcalimag"},"content":"    public void displayMessage(String message, boolean hasLowerLine) {","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"nathanielcalimag"},"content":"        this.displayMessage(message, hasLowerLine, true);","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"nathanielcalimag"},"content":"     * Displays a message to the user, formatted for the application.","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"nathanielcalimag"},"content":"     * @param message      The message to be displayed.","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"nathanielcalimag"},"content":"     * @param hasLowerLine Whether to display a bottom line.","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"nathanielcalimag"},"content":"     * @param hasUpperLine Whether to display a top line.","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"nathanielcalimag"},"content":"    public void displayMessage(String message, boolean hasLowerLine, boolean hasUpperLine) {","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"nathanielcalimag"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"nathanielcalimag"},"content":"        if (hasUpperLine) {","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"nathanielcalimag"},"content":"            stringBuilder.append(Messages.HORIZONTAL_LINE + \"\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"nathanielcalimag"},"content":"        stringBuilder.append(message);","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"nathanielcalimag"},"content":"        if (hasLowerLine) {","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"nathanielcalimag"},"content":"            stringBuilder.append(\"\\n\" + Messages.HORIZONTAL_LINE);","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"nathanielcalimag"},"content":"        System.out.println(Ui.indent(stringBuilder.toString()));","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"nathanielcalimag"},"content":"     * Displays an error to the user, formatted for the application.","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"nathanielcalimag"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"nathanielcalimag"},"content":"    public void displayError(String message) {","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"nathanielcalimag"},"content":"        System.out.println(Ui.indent(Messages.HORIZONTAL_LINE + \"\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":85,"author":{"gitId":"nathanielcalimag"},"content":"                + String.format(Messages.ERROR_PREFIX, message) + \"\\n\" + Messages.HORIZONTAL_LINE));","lastModifiedDate":"2023-09-08"},{"lineNumber":86,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"nathanielcalimag":87}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nathanielcalimag"},"content":"package duke.commands;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"nathanielcalimag"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"nathanielcalimag"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"nathanielcalimag"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"nathanielcalimag"},"content":" * Represents a generic command interface with a run method defining the","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"nathanielcalimag"},"content":" * behaviour of the command.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"nathanielcalimag"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"nathanielcalimag"},"content":"public interface Command {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"nathanielcalimag"},"content":"     * Executes the command given an input.","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"nathanielcalimag"},"content":"     * @param input    The command to be run.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"nathanielcalimag"},"content":"     * @param taskList The application\u0027s task list.","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"nathanielcalimag"},"content":"     * @param ui       The UI of the application.","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"nathanielcalimag"},"content":"    void run(String input, TaskList taskList, Ui ui);","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"nathanielcalimag":19}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nathanielcalimag"},"content":"package duke.commands;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"nathanielcalimag"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"nathanielcalimag"},"content":"import duke.Messages;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"nathanielcalimag"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"nathanielcalimag"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"nathanielcalimag"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"nathanielcalimag"},"content":" * Deletes a task.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"nathanielcalimag"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"nathanielcalimag"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"nathanielcalimag"},"content":"     * Deletes a task from the application\u0027s task list.","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"nathanielcalimag"},"content":"     * @param input    The user input of the task to be deleted.","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"nathanielcalimag"},"content":"     * @param taskList The application\u0027s task list.","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"nathanielcalimag"},"content":"     * @param ui       The UI of the application.","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"nathanielcalimag"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"nathanielcalimag"},"content":"    public void run(String input, TaskList taskList, Ui ui) {","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"nathanielcalimag"},"content":"        String[] args \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"nathanielcalimag"},"content":"        String indexString \u003d args[1];","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"nathanielcalimag"},"content":"        int index \u003d Integer.parseInt(indexString) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"nathanielcalimag"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"nathanielcalimag"},"content":"            String taskString \u003d taskList.deleteTask(index);","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"nathanielcalimag"},"content":"            ui.displayMessage(String.format(Messages.DELETE_MESSAGE, taskString,","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"nathanielcalimag"},"content":"                    taskList.getTaskCount()));","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"nathanielcalimag"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"nathanielcalimag"},"content":"            ui.displayError(e.getMessage());","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"nathanielcalimag":34}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nathanielcalimag"},"content":"package duke.commands;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"nathanielcalimag"},"content":"import duke.Messages;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"nathanielcalimag"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"nathanielcalimag"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"nathanielcalimag"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"nathanielcalimag"},"content":" * Terminates the program.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"nathanielcalimag"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"nathanielcalimag"},"content":"public class ExitCommand implements Command {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"nathanielcalimag"},"content":"     * Prints an exit message and terminates the program.","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"nathanielcalimag"},"content":"     * @param input    The user input.","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"nathanielcalimag"},"content":"     * @param taskList The application\u0027s task list.","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"nathanielcalimag"},"content":"     * @param ui       The UI of the application.","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"nathanielcalimag"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"nathanielcalimag"},"content":"    public void run(String input, TaskList taskList, Ui ui) {","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"nathanielcalimag"},"content":"        ui.displayMessage(Messages.EXIT_MESSAGE);","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"nathanielcalimag"},"content":"        System.exit(0);","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"nathanielcalimag":23}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nathanielcalimag"},"content":"package duke.commands;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"nathanielcalimag"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"nathanielcalimag"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"nathanielcalimag"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"nathanielcalimag"},"content":" * Find items from application state.","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"nathanielcalimag"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"nathanielcalimag"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"nathanielcalimag"},"content":"     * Search for tasks from the task list.","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"nathanielcalimag"},"content":"     * @param input    The user input.","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"nathanielcalimag"},"content":"     * @param taskList The application\u0027s task list.","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"nathanielcalimag"},"content":"     * @param ui       The UI of the application.","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"nathanielcalimag"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"nathanielcalimag"},"content":"    public void run(String input, TaskList taskList, Ui ui) {","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"nathanielcalimag"},"content":"        String[] args \u003d input.split(\" \", 2);","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"nathanielcalimag"},"content":"        String output \u003d taskList.searchTasks(args[1]);","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"nathanielcalimag"},"content":"        ui.displayMessage(output);","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"nathanielcalimag":23}},{"path":"src/main/java/duke/commands/InsertCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nathanielcalimag"},"content":"package duke.commands;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"nathanielcalimag"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"nathanielcalimag"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"nathanielcalimag"},"content":"import duke.Messages;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"nathanielcalimag"},"content":"import duke.Parser;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"nathanielcalimag"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"nathanielcalimag"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"nathanielcalimag"},"content":"import duke.exceptions.InsufficientArgumentsException;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"nathanielcalimag"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"nathanielcalimag"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"nathanielcalimag"},"content":" * Inserts item into the task list.","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"nathanielcalimag"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"nathanielcalimag"},"content":"public class InsertCommand implements Command {","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"nathanielcalimag"},"content":"     * Adds an item to the application\u0027s task list.","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"nathanielcalimag"},"content":"     * @param input    The user input of the item to add.","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"nathanielcalimag"},"content":"     * @param taskList The application\u0027s task list.","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"nathanielcalimag"},"content":"     * @param ui       The UI of the application.","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"nathanielcalimag"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"nathanielcalimag"},"content":"    public void run(String input, TaskList taskList, Ui ui) {","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"nathanielcalimag"},"content":"        String[] args \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"nathanielcalimag"},"content":"        String taskType \u003d args[0];","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"nathanielcalimag"},"content":"        String taskInput \u003d args.length \u003e 1 ? args[1] : \"\";","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"nathanielcalimag"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"nathanielcalimag"},"content":"            // Create a task based on task type","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"nathanielcalimag"},"content":"            Task task \u003d Parser.createTask(taskType, taskInput);","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"nathanielcalimag"},"content":"            taskList.insertTask(task);","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"nathanielcalimag"},"content":"            int taskCount \u003d taskList.getTaskCount();","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"nathanielcalimag"},"content":"            ui.displayMessage(String.format(Messages.INSERT_MESSAGE, task, taskCount,","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"nathanielcalimag"},"content":"                    taskCount \u003d\u003d 1 ? \"task\" : \"tasks\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"nathanielcalimag"},"content":"        } catch (InsufficientArgumentsException | DateTimeParseException | IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"nathanielcalimag"},"content":"            ui.displayError(e.getMessage());","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"nathanielcalimag":40}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nathanielcalimag"},"content":"package duke.commands;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"nathanielcalimag"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"nathanielcalimag"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"nathanielcalimag"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"nathanielcalimag"},"content":" * Lists items from the application\u0027s task list.","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"nathanielcalimag"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"nathanielcalimag"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"nathanielcalimag"},"content":"     * Lists all the items in the application\u0027s task list.","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"nathanielcalimag"},"content":"     * @param input    The user input.","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"nathanielcalimag"},"content":"     * @param taskList The application\u0027s task list.","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"nathanielcalimag"},"content":"     * @param ui       The UI of the application.","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"nathanielcalimag"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"nathanielcalimag"},"content":"    public void run(String input, TaskList taskList, Ui ui) {","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"nathanielcalimag"},"content":"        String output \u003d taskList.listTasks();","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"nathanielcalimag"},"content":"        ui.displayMessage(output);","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"nathanielcalimag":23}},{"path":"src/main/java/duke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nathanielcalimag"},"content":"package duke.commands;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"nathanielcalimag"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"nathanielcalimag"},"content":"import duke.Messages;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"nathanielcalimag"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"nathanielcalimag"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"nathanielcalimag"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"nathanielcalimag"},"content":" * Marks a task.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"nathanielcalimag"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"nathanielcalimag"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"nathanielcalimag"},"content":"     * Sets a given task to be marked.","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"nathanielcalimag"},"content":"     * @param input    The user input of the task to be marked.","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"nathanielcalimag"},"content":"     * @param taskList The application\u0027s task list.","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"nathanielcalimag"},"content":"     * @param ui       The UI of the application.","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"nathanielcalimag"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"nathanielcalimag"},"content":"    public void run(String input, TaskList taskList, Ui ui) {","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"nathanielcalimag"},"content":"        String[] args \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"nathanielcalimag"},"content":"        String indexString \u003d args[1];","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"nathanielcalimag"},"content":"        int index \u003d Integer.parseInt(indexString) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"nathanielcalimag"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"nathanielcalimag"},"content":"            String taskString \u003d taskList.markTask(index);","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"nathanielcalimag"},"content":"            ui.displayMessage(String.format(Messages.MARKED_MESSAGE, taskString));","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"nathanielcalimag"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"nathanielcalimag"},"content":"            ui.displayError(e.getMessage());","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"nathanielcalimag":32}},{"path":"src/main/java/duke/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nathanielcalimag"},"content":"package duke.commands;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"nathanielcalimag"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"nathanielcalimag"},"content":"import duke.Messages;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"nathanielcalimag"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"nathanielcalimag"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"nathanielcalimag"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"nathanielcalimag"},"content":" * Unmarks a task.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"nathanielcalimag"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"nathanielcalimag"},"content":"public class UnmarkCommand implements Command {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"nathanielcalimag"},"content":"     * Sets a given task to be unmarked.","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"nathanielcalimag"},"content":"     * @param input    The user input of the task to be unmarked.","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"nathanielcalimag"},"content":"     * @param taskList The application\u0027s task list.","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"nathanielcalimag"},"content":"     * @param ui       The UI of the application.","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"nathanielcalimag"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"nathanielcalimag"},"content":"    public void run(String input, TaskList taskList, Ui ui) {","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"nathanielcalimag"},"content":"        String[] args \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"nathanielcalimag"},"content":"        String indexString \u003d args[1];","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"nathanielcalimag"},"content":"        int index \u003d Integer.parseInt(indexString) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"nathanielcalimag"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"nathanielcalimag"},"content":"            String taskString \u003d taskList.unmarkTask(index);","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"nathanielcalimag"},"content":"            ui.displayMessage(String.format(Messages.UNMARKED_MESSAGE, taskString));","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"nathanielcalimag"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"nathanielcalimag"},"content":"            ui.displayError(e.getMessage());","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"nathanielcalimag":32}},{"path":"src/main/java/duke/exceptions/InsufficientArgumentsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nathanielcalimag"},"content":"package duke.exceptions;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"nathanielcalimag"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"nathanielcalimag"},"content":" * Represents an exception when there are insufficient arguments when creating a task.","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"nathanielcalimag"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"nathanielcalimag"},"content":"public class InsufficientArgumentsException extends IllegalArgumentException {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"nathanielcalimag"},"content":"    public InsufficientArgumentsException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"nathanielcalimag"},"content":"        super(message);","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"nathanielcalimag":10}},{"path":"src/main/java/duke/exceptions/StorageCreationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nathanielcalimag"},"content":"package duke.exceptions;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"nathanielcalimag"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"nathanielcalimag"},"content":" * Represents an exception when creating the storage directory or storage file fails.","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"nathanielcalimag"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"nathanielcalimag"},"content":"public class StorageCreationException extends Exception {","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"nathanielcalimag"},"content":"    public StorageCreationException(String message) {","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"nathanielcalimag"},"content":"        super(message);","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"nathanielcalimag":10}},{"path":"src/main/java/duke/exceptions/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nathanielcalimag"},"content":"package duke.exceptions;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"nathanielcalimag"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"nathanielcalimag"},"content":" * Represents an exception when an unknown command is passed in.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"nathanielcalimag"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"nathanielcalimag"},"content":"public class UnknownCommandException extends IllegalArgumentException {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"nathanielcalimag"},"content":"    public UnknownCommandException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"nathanielcalimag"},"content":"        super(message);","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"nathanielcalimag":10}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nathanielcalimag"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"nathanielcalimag"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"nathanielcalimag"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"nathanielcalimag"},"content":"import duke.Parser;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"nathanielcalimag"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"nathanielcalimag"},"content":" * Represents a task containing a description, and the due time.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"nathanielcalimag"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"nathanielcalimag"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"nathanielcalimag"},"content":"    private final LocalDateTime by;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"nathanielcalimag"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"nathanielcalimag"},"content":"        this(description, false, by);","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"nathanielcalimag"},"content":"     * Creates a new {@code Deadline} instance","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"nathanielcalimag"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"nathanielcalimag"},"content":"     * @param isDone      The indication of the deadline being marked.","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"nathanielcalimag"},"content":"     * @param by          The due date of the deadline.","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"nathanielcalimag"},"content":"    public Deadline(String description, boolean isDone, LocalDateTime by) {","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"nathanielcalimag"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"nathanielcalimag"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"nathanielcalimag"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"nathanielcalimag"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"nathanielcalimag"},"content":"    public String encode() {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"nathanielcalimag"},"content":"        return String.format(\"D | %d | %s | %s\", this.isDone ? 1 : 0, this.description,","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"nathanielcalimag"},"content":"                this.by.format(DateTimeFormatter.ofPattern(Parser.STORAGE_DATE_TIME_PATTERN)));","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"nathanielcalimag"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"nathanielcalimag"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"nathanielcalimag"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by.format(","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"nathanielcalimag"},"content":"                DateTimeFormatter.ofPattern(Parser.OUTPUT_DATE_TIME_PATTERN)) + \")\";","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"nathanielcalimag":44}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nathanielcalimag"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"nathanielcalimag"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"nathanielcalimag"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"nathanielcalimag"},"content":"import duke.Parser;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"nathanielcalimag"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"nathanielcalimag"},"content":" * Represents a task containing the start and end time.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"nathanielcalimag"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"nathanielcalimag"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"nathanielcalimag"},"content":"    private final LocalDateTime from;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"nathanielcalimag"},"content":"    private final LocalDateTime to;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"nathanielcalimag"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"nathanielcalimag"},"content":"        this(description, false, from, to);","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"nathanielcalimag"},"content":"     * Creates a new {@code Event} instance","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"nathanielcalimag"},"content":"     * @param description The description of the event.","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"nathanielcalimag"},"content":"     * @param isDone      The indication of the event being marked.","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"nathanielcalimag"},"content":"     * @param from        The starting datetime of the event.","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"nathanielcalimag"},"content":"     * @param to          The ending datetime of the event.","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"nathanielcalimag"},"content":"    public Event(String description, boolean isDone, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"nathanielcalimag"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"nathanielcalimag"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"nathanielcalimag"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"nathanielcalimag"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"nathanielcalimag"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"nathanielcalimag"},"content":"    public String encode() {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"nathanielcalimag"},"content":"        return String.format(\"E | %d | %s | %s-%s\", this.isDone ? 1 : 0,","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"nathanielcalimag"},"content":"                this.description, this.from.format(DateTimeFormatter.ofPattern(","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"nathanielcalimag"},"content":"                        Parser.STORAGE_DATE_TIME_PATTERN)),","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"nathanielcalimag"},"content":"                this.to.format(DateTimeFormatter.ofPattern(","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"nathanielcalimag"},"content":"                        Parser.STORAGE_DATE_TIME_PATTERN)));","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"nathanielcalimag"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"nathanielcalimag"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"nathanielcalimag"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"nathanielcalimag"},"content":"                + \" (from: \" + this.from.format(DateTimeFormatter.ofPattern(","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"nathanielcalimag"},"content":"                Parser.OUTPUT_DATE_TIME_PATTERN)) + \" to: \" + this.to.format(","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"nathanielcalimag"},"content":"                DateTimeFormatter.ofPattern(Parser.OUTPUT_DATE_TIME_PATTERN)) + \")\";","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"nathanielcalimag":53}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nathanielcalimag"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"nathanielcalimag"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"nathanielcalimag"},"content":" * Represents a generic task containing the description and own task state.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"nathanielcalimag"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"nathanielcalimag"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"nathanielcalimag"},"content":"    protected final String description;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"nathanielcalimag"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"nathanielcalimag"},"content":"    protected Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"nathanielcalimag"},"content":"        this(description, false);","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"nathanielcalimag"},"content":"    protected Task(String description, boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"nathanielcalimag"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"nathanielcalimag"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"nathanielcalimag"},"content":"     * Encodes a Task into the string representation to save into storage.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"nathanielcalimag"},"content":"     * @return The string representing a task for storage.","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"nathanielcalimag"},"content":"    public abstract String encode();","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"nathanielcalimag"},"content":"     * Gets the description of the task.","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"nathanielcalimag"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"nathanielcalimag"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"nathanielcalimag"},"content":"        return this.description;","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"nathanielcalimag"},"content":"     * Gets the appropriate status icon string for the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"nathanielcalimag"},"content":"     * @return The status icon for the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"nathanielcalimag"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"nathanielcalimag"},"content":"        return (this.isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"nathanielcalimag"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"nathanielcalimag"},"content":"    public void mark() {","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"nathanielcalimag"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"nathanielcalimag"},"content":"     * Unmarks a task.","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"nathanielcalimag"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"nathanielcalimag"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"nathanielcalimag"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"nathanielcalimag"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"nathanielcalimag"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"nathanielcalimag":62}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nathanielcalimag"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"nathanielcalimag"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"nathanielcalimag"},"content":" * Represents a task with a description.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"nathanielcalimag"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"nathanielcalimag"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"nathanielcalimag"},"content":"     * Creates a new {@code ToDo} instance","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"nathanielcalimag"},"content":"     * @param description The description of the to-do.","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"nathanielcalimag"},"content":"     * @param isDone      The indication of the event being to-do.","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"nathanielcalimag"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"nathanielcalimag"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"nathanielcalimag"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"nathanielcalimag"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"nathanielcalimag"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"nathanielcalimag"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"nathanielcalimag"},"content":"    public String encode() {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"nathanielcalimag"},"content":"        return String.format(\"T | %d | %s\", this.isDone ? 1 : 0,","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"nathanielcalimag"},"content":"                this.description);","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"nathanielcalimag"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"nathanielcalimag"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"nathanielcalimag"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"nathanielcalimag":35}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nathanielcalimag"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"nathanielcalimag"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"nathanielcalimag"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"nathanielcalimag"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"nathanielcalimag"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"nathanielcalimag"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"nathanielcalimag"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"nathanielcalimag"},"content":" * Tests the {@code Parser} class.","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"nathanielcalimag"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"nathanielcalimag"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"nathanielcalimag"},"content":"     * Tests whether the {@code parseDate} appropriately parses all allowed date time formats.","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"nathanielcalimag"},"content":"    public void parseDate() {","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"nathanielcalimag"},"content":"        LocalDateTime dateTimeMidnight \u003d LocalDateTime.of(2023, 9, 5, 0, 0);","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"nathanielcalimag"},"content":"        LocalDateTime dateTimeNoon \u003d LocalDateTime.of(2023, 9, 5, 12, 0);","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"nathanielcalimag"},"content":"        assertEquals(dateTimeMidnight, Parser.parseDate(\"5/9/2023\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"nathanielcalimag"},"content":"        assertEquals(dateTimeMidnight, Parser.parseDate(\"5/09/2023\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"nathanielcalimag"},"content":"        assertEquals(dateTimeMidnight, Parser.parseDate(\"05/9/2023\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"nathanielcalimag"},"content":"        assertEquals(dateTimeMidnight, Parser.parseDate(\"05/09/2023\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"nathanielcalimag"},"content":"        assertEquals(dateTimeMidnight, Parser.parseDate(\"2023-9-5\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"nathanielcalimag"},"content":"        assertEquals(dateTimeMidnight, Parser.parseDate(\"2023-9-05\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"nathanielcalimag"},"content":"        assertEquals(dateTimeMidnight, Parser.parseDate(\"2023-09-5\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"nathanielcalimag"},"content":"        assertEquals(dateTimeMidnight, Parser.parseDate(\"2023-09-05\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"nathanielcalimag"},"content":"        assertEquals(dateTimeNoon, Parser.parseDate(\"5/9/2023 1200\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"nathanielcalimag"},"content":"        assertEquals(dateTimeNoon, Parser.parseDate(\"5/09/2023 1200\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"nathanielcalimag"},"content":"        assertEquals(dateTimeNoon, Parser.parseDate(\"05/9/2023 1200\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"nathanielcalimag"},"content":"        assertEquals(dateTimeNoon, Parser.parseDate(\"05/09/2023 1200\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"nathanielcalimag"},"content":"        assertEquals(dateTimeNoon, Parser.parseDate(\"2023-9-5 1200\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"nathanielcalimag"},"content":"        assertEquals(dateTimeNoon, Parser.parseDate(\"2023-9-05 1200\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"nathanielcalimag"},"content":"        assertEquals(dateTimeNoon, Parser.parseDate(\"2023-09-5 1200\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"nathanielcalimag"},"content":"        assertEquals(dateTimeNoon, Parser.parseDate(\"2023-09-05 1200\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"nathanielcalimag"},"content":"     * Tests whether the {@code parseDate} appropriately throws exception for invalid formats.","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"nathanielcalimag"},"content":"    public void parseDate_invalidFormat_exceptionThrown() {","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"nathanielcalimag"},"content":"        String dateTimeString \u003d \"2023-09-05, 1200\";","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"nathanielcalimag"},"content":"        LocalDateTime dateTimeNoon \u003d LocalDateTime.of(2023, 9, 5, 12, 0);","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"nathanielcalimag"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"nathanielcalimag"},"content":"            assertEquals(dateTimeNoon, Parser.parseDate(dateTimeString));","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"nathanielcalimag"},"content":"            fail();","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"nathanielcalimag"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"nathanielcalimag"},"content":"            assertEquals(String.format(Messages.ERROR_PREFIX, String.format(","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"nathanielcalimag"},"content":"                    Messages.INVALID_DATE_TIME_FORMAT, dateTimeString)), e.getMessage()","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"nathanielcalimag"},"content":"            );","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"nathanielcalimag":59}},{"path":"src/test/java/duke/StorageStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nathanielcalimag"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"nathanielcalimag"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"nathanielcalimag"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"nathanielcalimag"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"nathanielcalimag"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"nathanielcalimag"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"nathanielcalimag"},"content":"import java.util.List;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"nathanielcalimag"},"content":"import duke.exceptions.InsufficientArgumentsException;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"nathanielcalimag"},"content":"import duke.exceptions.StorageCreationException;","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"nathanielcalimag"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"nathanielcalimag"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"nathanielcalimag"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"nathanielcalimag"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"nathanielcalimag"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"nathanielcalimag"},"content":" * Represents a stub class for storage.","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"nathanielcalimag"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"nathanielcalimag"},"content":"public class StorageStub implements Storage {","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"nathanielcalimag"},"content":"    private final List\u003cTask\u003e storage;","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"nathanielcalimag"},"content":"     * Creates a new {@code StorageStub} instance.","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"nathanielcalimag"},"content":"    public StorageStub() {","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"nathanielcalimag"},"content":"        LocalDateTime dateTimeMidnight \u003d LocalDateTime.of(2023, 9, 5, 0, 0);","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"nathanielcalimag"},"content":"        LocalDateTime dateTimeNoon \u003d LocalDateTime.of(2023, 9, 5, 12, 0);","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"nathanielcalimag"},"content":"        this.storage \u003d new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"nathanielcalimag"},"content":"                new ToDo(\"Go for health checkup\"),","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"nathanielcalimag"},"content":"                new Deadline(\"CS2103T quiz\", dateTimeNoon),","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"nathanielcalimag"},"content":"                new Event(\"CS2103T meeting\", dateTimeMidnight, dateTimeNoon)","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"nathanielcalimag"},"content":"        ));","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"nathanielcalimag"},"content":"     * Retrieves a list of tasks stored within this storage stub.","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"nathanielcalimag"},"content":"     * @return The list of task stored in this stub.","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"nathanielcalimag"},"content":"     * @throws InsufficientArgumentsException Never thrown by stub implementation.","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"nathanielcalimag"},"content":"     * @throws DateTimeParseException         Never thrown by stub implementation.","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"nathanielcalimag"},"content":"     * @throws StorageCreationException       Never thrown by stub implementation.","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"nathanielcalimag"},"content":"     * @throws IOException                    Never thrown by stub implementation.","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"nathanielcalimag"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"nathanielcalimag"},"content":"    public List\u003cTask\u003e readStorage() throws InsufficientArgumentsException, DateTimeParseException,","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"nathanielcalimag"},"content":"            StorageCreationException, IOException {","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"nathanielcalimag"},"content":"        return this.storage;","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"nathanielcalimag"},"content":"     * Updates the storage stub in the storage instance.","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"nathanielcalimag"},"content":"     * @throws IOException Never thrown by stub implementation.","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"nathanielcalimag"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"nathanielcalimag"},"content":"    public void updateStorage(List\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"nathanielcalimag"},"content":"        this.storage.clear();","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"nathanielcalimag"},"content":"        this.storage.addAll(tasks);","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"nathanielcalimag":63}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nathanielcalimag"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"nathanielcalimag"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"nathanielcalimag"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"nathanielcalimag"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"nathanielcalimag"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"nathanielcalimag"},"content":"import java.util.List;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"nathanielcalimag"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"nathanielcalimag"},"content":"import duke.exceptions.StorageCreationException;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"nathanielcalimag"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"nathanielcalimag"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"nathanielcalimag"},"content":" * Tests the {@code TaskList} class.","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"nathanielcalimag"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"nathanielcalimag"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"nathanielcalimag"},"content":"     * Tests whether {@code listTasks} appropriately lists tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"nathanielcalimag"},"content":"    public void listTasks() {","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"nathanielcalimag"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"nathanielcalimag"},"content":"        Storage storage \u003d new StorageStub();","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"nathanielcalimag"},"content":"        taskList.setStorage(storage);","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"nathanielcalimag"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"nathanielcalimag"},"content":"            taskList.loadTasks();","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"nathanielcalimag"},"content":"            assertEquals(\" Here are the tasks in your list:\\n 1.[T][ ] Go for health checkup\\n 2\"","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"nathanielcalimag"},"content":"                    + \".[D][ ] CS2103T quiz (by: 5 Sep 2023, 1200)\\n 3.[E][ ] CS2103T meeting \"","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"nathanielcalimag"},"content":"                    + \"(from: 5 Sep 2023, 0000 to: 5 Sep 2023, 1200)\", taskList.listTasks());","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"nathanielcalimag"},"content":"        } catch (IOException | StorageCreationException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"nathanielcalimag"},"content":"            fail(e);","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"nathanielcalimag"},"content":"     * Tests whether {@code listTasks} appropriately handles no tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"nathanielcalimag"},"content":"    public void listTasks_emptyList() {","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"nathanielcalimag"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"nathanielcalimag"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"nathanielcalimag"},"content":"        Storage storage \u003d new StorageStub();","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"nathanielcalimag"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"nathanielcalimag"},"content":"            storage.updateStorage(tasks);","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"nathanielcalimag"},"content":"            taskList.setStorage(storage);","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"nathanielcalimag"},"content":"            taskList.loadTasks();","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"nathanielcalimag"},"content":"            assertEquals(\" Here are the tasks in your list:\\n\", taskList.listTasks());","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"nathanielcalimag"},"content":"        } catch (IOException | StorageCreationException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"nathanielcalimag"},"content":"            fail(e);","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"nathanielcalimag":54}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nathanielcalimag"},"content":"D | 0 | return book | 2023-09-30 1200","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"nathanielcalimag"},"content":"E | 0 | project meeting | 2023-08-03 1430-2023-08-30 1630","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"nathanielcalimag"},"content":"D | 0 | ma2001 hw | 2023-08-03 0000","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"nathanielcalimag"},"content":"D | 0 | ma1521 hw | 2023-08-03 0100","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"nathanielcalimag"},"content":"E | 0 | code | 2023-08-03 0000-2023-08-03 0030","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"nathanielcalimag"},"content":"E | 0 | run | 2023-08-03 0000-2023-08-03 0045","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"nathanielcalimag"},"content":"E | 0 | yoga | 2023-08-03 0000-2023-08-03 0145","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"nathanielcalimag"},"content":"E | 0 | nap | 2023-08-03 0000-2023-08-03 0230","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"nathanielcalimag"},"content":"E | 0 | dorm workshop | 2023-08-03 0000-2023-08-03 0315","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"nathanielcalimag"},"content":"E | 0 | walk around nus | 2023-08-03 0000-2023-08-03 0400","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"nathanielcalimag"},"content":"E | 0 | buy supper | 2023-08-03 0000-2023-08-03 0445","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"nathanielcalimag"},"content":"E | 0 | sleep | 2023-08-03 0000-2023-08-03 0530","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"nathanielcalimag":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nathanielcalimag"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"nathanielcalimag"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"nathanielcalimag"},"content":"deadline return book /by 30/09/2023 1200","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"nathanielcalimag"},"content":"event project meeting /from 3/8/2023 1430 /to 2023-8-30 1630","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"nathanielcalimag"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"nathanielcalimag"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"nathanielcalimag"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"nathanielcalimag"},"content":"unmark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"nathanielcalimag"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"nathanielcalimag"},"content":"todo","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"nathanielcalimag"},"content":"event math lecture","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"nathanielcalimag"},"content":"event math lecture /from 2023-08-30","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"nathanielcalimag"},"content":"deadline math homework /from 2/12/2019 1500","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"nathanielcalimag"},"content":"generate report","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"nathanielcalimag"},"content":"delete 1","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"nathanielcalimag"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"nathanielcalimag"},"content":"deadline ma2001 hw /by 3/8/2023","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"nathanielcalimag"},"content":"deadline ma1521 hw /by 03/8/2023 0100","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"nathanielcalimag"},"content":"event code /from 3/8/2023 /to 3/8/2023 0030","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"nathanielcalimag"},"content":"event run /from 3/08/2023 /to 3/08/2023 0045","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"nathanielcalimag"},"content":"event yoga /from 03/8/2023 /to 03/8/2023 0145","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"nathanielcalimag"},"content":"event nap /from 03/08/2023 /to 03/08/2023 0230","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"nathanielcalimag"},"content":"event dorm workshop /from 2023-8-3 /to 2023-8-3 0315","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"nathanielcalimag"},"content":"event walk around nus /from 2023-8-03 /to 2023-8-03 0400","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"nathanielcalimag"},"content":"event buy supper /from 2023-08-3 /to 2023-08-3 0445","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"nathanielcalimag"},"content":"event sleep /from 2023-08-03 /to 2023-08-3 0530","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"nathanielcalimag"},"content":"list","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"nathanielcalimag"},"content":"find hw","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"nathanielcalimag"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"nathanielcalimag":29}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"nathanielcalimag"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nathanielcalimag":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"nathanielcalimag"},"content":"# delete data directory","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"nathanielcalimag"},"content":"if [ -d \"./data\" ]","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"nathanielcalimag"},"content":"then","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"nathanielcalimag"},"content":"    # Remove the directory","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"nathanielcalimag"},"content":"    rm -r \"./data\"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"nathanielcalimag"},"content":"fi","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"nathanielcalimag"},"content":"if ! javac -encoding UTF-8 -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"nathanielcalimag"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nathanielcalimag":9,"-":36}}]
